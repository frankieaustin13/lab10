

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Nov 04 17:21:31 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 05/05/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F26K22 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   123  0000                     
   124 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   125  0000                     
   126 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   127  0000                     
   128                           	psect	idataCOMRAM
   129  0037FC                     __pidataCOMRAM:
   130                           	callstack 0
   131                           
   132                           ;initializer for myTMR0ISR@useBuffer1
   133  0037FC  01                 	db	1
   134                           
   135                           	psect	idataBANK0
   136  0037EE                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for myTMR0ISR@buffer
   140  0037EE  D5                 	db	low _sdCardBuffer1
   141  0037EF  05                 	db	high _sdCardBuffer1
   142                           
   143                           ;initializer for _sampleRate
   144  0037F0  0640               	dw	1600
   145                           
   146                           	psect	mediumconst
   147  00F316                     __pmediumconst:
   148                           	callstack 0
   149  00F316  00                 	db	0
   150  00F317                     _sin:
   151                           	callstack 0
   152  00F317  80                 	db	128
   153  00F318  9F                 	db	159
   154  00F319  BB                 	db	187
   155  00F31A  D5                 	db	213
   156  00F31B  E9                 	db	233
   157  00F31C  F8                 	db	248
   158  00F31D  FF                 	db	255
   159  00F31E  FF                 	db	255
   160  00F31F  F8                 	db	248
   161  00F320  E9                 	db	233
   162  00F321  D5                 	db	213
   163  00F322  BB                 	db	187
   164  00F323  9F                 	db	159
   165  00F324  80                 	db	128
   166  00F325  61                 	db	97
   167  00F326  45                 	db	69
   168  00F327  2B                 	db	43
   169  00F328  17                 	db	23
   170  00F329  08                 	db	8
   171  00F32A  01                 	db	1
   172  00F32B  01                 	db	1
   173  00F32C  08                 	db	8
   174  00F32D  17                 	db	23
   175  00F32E  2B                 	db	43
   176  00F32F  45                 	db	69
   177  00F330  61                 	db	97
   178  00F331                     __end_of_sin:
   179                           	callstack 0
   180  00F331                     _spi2_configuration:
   181                           	callstack 0
   182  00F331  01                 	db	1
   183  00F332  40                 	db	64
   184  00F333  01                 	db	1
   185  00F334  00                 	db	0
   186  00F335                     __end_of_spi2_configuration:
   187                           	callstack 0
   188  0000                     _ANSELA	set	3896
   189  0000                     _ANSELB	set	3897
   190  0000                     _ANSELC	set	3898
   191  0000                     _CCPTMRS0bits	set	3913
   192  0000                     _LATBbits	set	3978
   193  0000                     _PIR3bits	set	4004
   194  0000                     _SSP2BUF	set	3951
   195  0000                     _SSP2CON2	set	3947
   196  0000                     _SSP2CON1bits	set	3948
   197  0000                     _TRISBbits	set	3987
   198  0000                     _SSP2ADD	set	3950
   199  0000                     _SSP2CON1	set	3948
   200  0000                     _SSP2STAT	set	3949
   201  0000                     _ADCON0bits	set	4034
   202  0000                     _ADCON0	set	4034
   203  0000                     _ADRESH	set	4036
   204  0000                     _ADRESL	set	4035
   205  0000                     _ADCON2	set	4032
   206  0000                     _ADCON1	set	4033
   207  0000                     _OSCTUNE	set	3995
   208  0000                     _OSCCON2	set	4050
   209  0000                     _OSCCON	set	4051
   210  0000                     _INTCON2bits	set	4081
   211  0000                     _WPUB	set	3937
   212  0000                     _TRISC	set	3988
   213  0000                     _TRISB	set	3987
   214  0000                     _TRISA	set	3986
   215  0000                     _LATC	set	3979
   216  0000                     _LATB	set	3978
   217  0000                     _LATA	set	3977
   218  0000                     _T2CONbits	set	4026
   219  0000                     _T2CON	set	4026
   220  0000                     _TMR2	set	4028
   221  0000                     _PR2	set	4027
   222  0000                     _T0CON	set	4053
   223  0000                     _TMR0L	set	4054
   224  0000                     _TMR0H	set	4055
   225  0000                     _T0CONbits	set	4053
   226  0000                     _TXREG1	set	4013
   227  0000                     _RCREG1	set	4014
   228  0000                     _RCSTA1bits	set	4011
   229  0000                     _TXSTA1bits	set	4012
   230  0000                     _PIR1bits	set	3998
   231  0000                     _SPBRGH1	set	4016
   232  0000                     _SPBRG1	set	4015
   233  0000                     _TXSTA1	set	4012
   234  0000                     _RCSTA1	set	4011
   235  0000                     _BAUDCON1	set	4024
   236  0000                     _INTCONbits	set	4082
   237  0000                     _RCONbits	set	4048
   238  0000                     _CCPR1L	set	4030
   239  0000                     _CCPR1H	set	4031
   240  0000                     _PSTR1CON	set	4025
   241  0000                     _PWM1CON	set	4023
   242  0000                     _ECCP1AS	set	4022
   243  0000                     _CCP1CON	set	4029
   244  0000                     _PLLRDY	set	32407
   245  00F335                     STR_37:
   246  00F335  50                 	db	80	;'P'
   247  00F336  72                 	db	114	;'r'
   248  00F337  65                 	db	101	;'e'
   249  00F338  73                 	db	115	;'s'
   250  00F339  73                 	db	115	;'s'
   251  00F33A  20                 	db	32
   252  00F33B  61                 	db	97	;'a'
   253  00F33C  6E                 	db	110	;'n'
   254  00F33D  79                 	db	121	;'y'
   255  00F33E  20                 	db	32
   256  00F33F  6B                 	db	107	;'k'
   257  00F340  65                 	db	101	;'e'
   258  00F341  79                 	db	121	;'y'
   259  00F342  20                 	db	32
   260  00F343  74                 	db	116	;'t'
   261  00F344  6F                 	db	111	;'o'
   262  00F345  20                 	db	32
   263  00F346  73                 	db	115	;'s'
   264  00F347  74                 	db	116	;'t'
   265  00F348  61                 	db	97	;'a'
   266  00F349  72                 	db	114	;'r'
   267  00F34A  74                 	db	116	;'t'
   268  00F34B  20                 	db	32
   269  00F34C  72                 	db	114	;'r'
   270  00F34D  65                 	db	101	;'e'
   271  00F34E  63                 	db	99	;'c'
   272  00F34F  6F                 	db	111	;'o'
   273  00F350  72                 	db	114	;'r'
   274  00F351  64                 	db	100	;'d'
   275  00F352  69                 	db	105	;'i'
   276  00F353  6E                 	db	110	;'n'
   277  00F354  67                 	db	103	;'g'
   278  00F355  20                 	db	32
   279  00F356  61                 	db	97	;'a'
   280  00F357  75                 	db	117	;'u'
   281  00F358  64                 	db	100	;'d'
   282  00F359  69                 	db	105	;'i'
   283  00F35A  6F                 	db	111	;'o'
   284  00F35B  20                 	db	32
   285  00F35C  61                 	db	97	;'a'
   286  00F35D  6E                 	db	110	;'n'
   287  00F35E  64                 	db	100	;'d'
   288  00F35F  20                 	db	32
   289  00F360  70                 	db	112	;'p'
   290  00F361  72                 	db	114	;'r'
   291  00F362  65                 	db	101	;'e'
   292  00F363  73                 	db	115	;'s'
   293  00F364  73                 	db	115	;'s'
   294  00F365  20                 	db	32
   295  00F366  61                 	db	97	;'a'
   296  00F367  6E                 	db	110	;'n'
   297  00F368  79                 	db	121	;'y'
   298  00F369  20                 	db	32
   299  00F36A  6B                 	db	107	;'k'
   300  00F36B  65                 	db	101	;'e'
   301  00F36C  79                 	db	121	;'y'
   302  00F36D  20                 	db	32
   303  00F36E  74                 	db	116	;'t'
   304  00F36F  6F                 	db	111	;'o'
   305  00F370  20                 	db	32
   306  00F371  73                 	db	115	;'s'
   307  00F372  74                 	db	116	;'t'
   308  00F373  6F                 	db	111	;'o'
   309  00F374  70                 	db	112	;'p'
   310  00F375  20                 	db	32
   311  00F376  72                 	db	114	;'r'
   312  00F377  65                 	db	101	;'e'
   313  00F378  63                 	db	99	;'c'
   314  00F379  6F                 	db	111	;'o'
   315  00F37A  72                 	db	114	;'r'
   316  00F37B  64                 	db	100	;'d'
   317  00F37C  69                 	db	105	;'i'
   318  00F37D  6E                 	db	110	;'n'
   319  00F37E  67                 	db	103	;'g'
   320  00F37F  2E                 	db	46
   321  00F380  00                 	db	0
   322  00F381                     STR_51:
   323  00F381  4C                 	db	76	;'L'
   324  00F382  6F                 	db	111	;'o'
   325  00F383  67                 	db	103	;'g'
   326  00F384  20                 	db	32
   327  00F385  66                 	db	102	;'f'
   328  00F386  69                 	db	105	;'i'
   329  00F387  6C                 	db	108	;'l'
   330  00F388  65                 	db	101	;'e'
   331  00F389  20                 	db	32
   332  00F38A  6E                 	db	110	;'n'
   333  00F38B  61                 	db	97	;'a'
   334  00F38C  6D                 	db	109	;'m'
   335  00F38D  65                 	db	101	;'e'
   336  00F38E  3A                 	db	58	;':'
   337  00F38F  20                 	db	32
   338  00F390  42                 	db	66	;'B'
   339  00F391  72                 	db	114	;'r'
   340  00F392  6F                 	db	111	;'o'
   341  00F393  77                 	db	119	;'w'
   342  00F394  73                 	db	115	;'s'
   343  00F395  65                 	db	101	;'e'
   344  00F396  20                 	db	32
   345  00F397  61                 	db	97	;'a'
   346  00F398  6E                 	db	110	;'n'
   347  00F399  64                 	db	100	;'d'
   348  00F39A  20                 	db	32
   349  00F39B  70                 	db	112	;'p'
   350  00F39C  72                 	db	114	;'r'
   351  00F39D  6F                 	db	111	;'o'
   352  00F39E  76                 	db	118	;'v'
   353  00F39F  69                 	db	105	;'i'
   354  00F3A0  64                 	db	100	;'d'
   355  00F3A1  65                 	db	101	;'e'
   356  00F3A2  20                 	db	32
   357  00F3A3  61                 	db	97	;'a'
   358  00F3A4  20                 	db	32
   359  00F3A5  2E                 	db	46
   360  00F3A6  63                 	db	99	;'c'
   361  00F3A7  73                 	db	115	;'s'
   362  00F3A8  76                 	db	118	;'v'
   363  00F3A9  20                 	db	32
   364  00F3AA  65                 	db	101	;'e'
   365  00F3AB  78                 	db	120	;'x'
   366  00F3AC  74                 	db	116	;'t'
   367  00F3AD  65                 	db	101	;'e'
   368  00F3AE  6E                 	db	110	;'n'
   369  00F3AF  73                 	db	115	;'s'
   370  00F3B0  69                 	db	105	;'i'
   371  00F3B1  6F                 	db	111	;'o'
   372  00F3B2  6E                 	db	110	;'n'
   373  00F3B3  20                 	db	32
   374  00F3B4  74                 	db	116	;'t'
   375  00F3B5  6F                 	db	111	;'o'
   376  00F3B6  20                 	db	32
   377  00F3B7  79                 	db	121	;'y'
   378  00F3B8  6F                 	db	111	;'o'
   379  00F3B9  75                 	db	117	;'u'
   380  00F3BA  72                 	db	114	;'r'
   381  00F3BB  20                 	db	32
   382  00F3BC  66                 	db	102	;'f'
   383  00F3BD  69                 	db	105	;'i'
   384  00F3BE  6C                 	db	108	;'l'
   385  00F3BF  65                 	db	101	;'e'
   386  00F3C0  20                 	db	32
   387  00F3C1  6E                 	db	110	;'n'
   388  00F3C2  61                 	db	97	;'a'
   389  00F3C3  6D                 	db	109	;'m'
   390  00F3C4  65                 	db	101	;'e'
   391  00F3C5  0D                 	db	13
   392  00F3C6  0A                 	db	10
   393  00F3C7  00                 	db	0
   394  00F3C8                     STR_45:
   395  00F3C8  54                 	db	84	;'T'
   396  00F3C9  6F                 	db	111	;'o'
   397  00F3CA  20                 	db	32
   398  00F3CB  73                 	db	115	;'s'
   399  00F3CC  70                 	db	112	;'p'
   400  00F3CD  6F                 	db	111	;'o'
   401  00F3CE  6F                 	db	111	;'o'
   402  00F3CF  6C                 	db	108	;'l'
   403  00F3D0  20                 	db	32
   404  00F3D1  74                 	db	116	;'t'
   405  00F3D2  65                 	db	101	;'e'
   406  00F3D3  72                 	db	114	;'r'
   407  00F3D4  6D                 	db	109	;'m'
   408  00F3D5  69                 	db	105	;'i'
   409  00F3D6  6E                 	db	110	;'n'
   410  00F3D7  61                 	db	97	;'a'
   411  00F3D8  6C                 	db	108	;'l'
   412  00F3D9  20                 	db	32
   413  00F3DA  63                 	db	99	;'c'
   414  00F3DB  6F                 	db	111	;'o'
   415  00F3DC  6E                 	db	110	;'n'
   416  00F3DD  74                 	db	116	;'t'
   417  00F3DE  65                 	db	101	;'e'
   418  00F3DF  6E                 	db	110	;'n'
   419  00F3E0  74                 	db	116	;'t'
   420  00F3E1  73                 	db	115	;'s'
   421  00F3E2  20                 	db	32
   422  00F3E3  69                 	db	105	;'i'
   423  00F3E4  6E                 	db	110	;'n'
   424  00F3E5  74                 	db	116	;'t'
   425  00F3E6  6F                 	db	111	;'o'
   426  00F3E7  20                 	db	32
   427  00F3E8  61                 	db	97	;'a'
   428  00F3E9  20                 	db	32
   429  00F3EA  66                 	db	102	;'f'
   430  00F3EB  69                 	db	105	;'i'
   431  00F3EC  6C                 	db	108	;'l'
   432  00F3ED  65                 	db	101	;'e'
   433  00F3EE  20                 	db	32
   434  00F3EF  66                 	db	102	;'f'
   435  00F3F0  6F                 	db	111	;'o'
   436  00F3F1  6C                 	db	108	;'l'
   437  00F3F2  6C                 	db	108	;'l'
   438  00F3F3  6F                 	db	111	;'o'
   439  00F3F4  77                 	db	119	;'w'
   440  00F3F5  20                 	db	32
   441  00F3F6  74                 	db	116	;'t'
   442  00F3F7  68                 	db	104	;'h'
   443  00F3F8  65                 	db	101	;'e'
   444  00F3F9  73                 	db	115	;'s'
   445  00F3FA  65                 	db	101	;'e'
   446  00F3FB  20                 	db	32
   447  00F3FC  69                 	db	105	;'i'
   448  00F3FD  6E                 	db	110	;'n'
   449  00F3FE  73                 	db	115	;'s'
   450  00F3FF  74                 	db	116	;'t'
   451  00F400  72                 	db	114	;'r'
   452  00F401  75                 	db	117	;'u'
   453  00F402  63                 	db	99	;'c'
   454  00F403  74                 	db	116	;'t'
   455  00F404  69                 	db	105	;'i'
   456  00F405  6F                 	db	111	;'o'
   457  00F406  6E                 	db	110	;'n'
   458  00F407  73                 	db	115	;'s'
   459  00F408  3A                 	db	58	;':'
   460  00F409  0D                 	db	13
   461  00F40A  0A                 	db	10
   462  00F40B  00                 	db	0
   463  00F40C                     STR_78:
   464  00F40C  2E                 	db	46
   465  00F40D  2E                 	db	46
   466  00F40E  2E                 	db	46
   467  00F40F  2E                 	db	46
   468  00F410  2E                 	db	46
   469  00F411  2E                 	db	46
   470  00F412  2E                 	db	46
   471  00F413  2E                 	db	46
   472  00F414  2E                 	db	46
   473  00F415  2E                 	db	46
   474  00F416  2E                 	db	46
   475  00F417  2E                 	db	46
   476  00F418  2E                 	db	46
   477  00F419  2E                 	db	46
   478  00F41A  2E                 	db	46
   479  00F41B  2E                 	db	46
   480  00F41C  2E                 	db	46
   481  00F41D  2E                 	db	46
   482  00F41E  2E                 	db	46
   483  00F41F  2E                 	db	46
   484  00F420  2E                 	db	46
   485  00F421  2E                 	db	46
   486  00F422  2E                 	db	46
   487  00F423  2E                 	db	46
   488  00F424  2E                 	db	46
   489  00F425  2E                 	db	46
   490  00F426  2E                 	db	46
   491  00F427  2E                 	db	46
   492  00F428  2E                 	db	46
   493  00F429  2E                 	db	46
   494  00F42A  2E                 	db	46
   495  00F42B  2E                 	db	46
   496  00F42C  2E                 	db	46
   497  00F42D  2E                 	db	46
   498  00F42E  2E                 	db	46
   499  00F42F  2E                 	db	46
   500  00F430  2E                 	db	46
   501  00F431  2E                 	db	46
   502  00F432  2E                 	db	46
   503  00F433  2E                 	db	46
   504  00F434  2E                 	db	46
   505  00F435  2E                 	db	46
   506  00F436  2E                 	db	46
   507  00F437  2E                 	db	46
   508  00F438  2E                 	db	46
   509  00F439  2E                 	db	46
   510  00F43A  2E                 	db	46
   511  00F43B  2E                 	db	46
   512  00F43C  2E                 	db	46
   513  00F43D  2E                 	db	46
   514  00F43E  2E                 	db	46
   515  00F43F  2E                 	db	46
   516  00F440  2E                 	db	46
   517  00F441  2E                 	db	46
   518  00F442  2E                 	db	46
   519  00F443  2E                 	db	46
   520  00F444  2E                 	db	46
   521  00F445  2E                 	db	46
   522  00F446  2E                 	db	46
   523  00F447  0D                 	db	13
   524  00F448  0A                 	db	10
   525  00F449  00                 	db	0
   526  00F44A                     STR_79:
   527  00F44A  2E                 	db	46
   528  00F44B  2E                 	db	46
   529  00F44C  2E                 	db	46
   530  00F44D  2E                 	db	46
   531  00F44E  2E                 	db	46
   532  00F44F  2E                 	db	46
   533  00F450  2E                 	db	46
   534  00F451  2E                 	db	46
   535  00F452  2E                 	db	46
   536  00F453  2E                 	db	46
   537  00F454  2E                 	db	46
   538  00F455  2E                 	db	46
   539  00F456  2E                 	db	46
   540  00F457  2E                 	db	46
   541  00F458  2E                 	db	46
   542  00F459  2E                 	db	46
   543  00F45A  2E                 	db	46
   544  00F45B  2E                 	db	46
   545  00F45C  2E                 	db	46
   546  00F45D  2E                 	db	46
   547  00F45E  2E                 	db	46
   548  00F45F  3F                 	db	63	;'?'
   549  00F460  3F                 	db	63	;'?'
   550  00F461  3F                 	db	63	;'?'
   551  00F462  3F                 	db	63	;'?'
   552  00F463  3F                 	db	63	;'?'
   553  00F464  3F                 	db	63	;'?'
   554  00F465  3F                 	db	63	;'?'
   555  00F466  3F                 	db	63	;'?'
   556  00F467  3F                 	db	63	;'?'
   557  00F468  3F                 	db	63	;'?'
   558  00F469  3F                 	db	63	;'?'
   559  00F46A  3F                 	db	63	;'?'
   560  00F46B  3F                 	db	63	;'?'
   561  00F46C  3F                 	db	63	;'?'
   562  00F46D  3F                 	db	63	;'?'
   563  00F46E  3F                 	db	63	;'?'
   564  00F46F  3F                 	db	63	;'?'
   565  00F470  2E                 	db	46
   566  00F471  2E                 	db	46
   567  00F472  2E                 	db	46
   568  00F473  2E                 	db	46
   569  00F474  2E                 	db	46
   570  00F475  2E                 	db	46
   571  00F476  2E                 	db	46
   572  00F477  2E                 	db	46
   573  00F478  2E                 	db	46
   574  00F479  2E                 	db	46
   575  00F47A  2E                 	db	46
   576  00F47B  2E                 	db	46
   577  00F47C  2E                 	db	46
   578  00F47D  2E                 	db	46
   579  00F47E  2E                 	db	46
   580  00F47F  2E                 	db	46
   581  00F480  2E                 	db	46
   582  00F481  2E                 	db	46
   583  00F482  2E                 	db	46
   584  00F483  2E                 	db	46
   585  00F484  2E                 	db	46
   586  00F485  0D                 	db	13
   587  00F486  0A                 	db	10
   588  00F487  00                 	db	0
   589  00F488                     STR_80:
   590  00F488  2E                 	db	46
   591  00F489  2E                 	db	46
   592  00F48A  2E                 	db	46
   593  00F48B  2E                 	db	46
   594  00F48C  2E                 	db	46
   595  00F48D  2E                 	db	46
   596  00F48E  2E                 	db	46
   597  00F48F  2E                 	db	46
   598  00F490  2E                 	db	46
   599  00F491  2E                 	db	46
   600  00F492  2E                 	db	46
   601  00F493  2E                 	db	46
   602  00F494  2E                 	db	46
   603  00F495  2E                 	db	46
   604  00F496  2E                 	db	46
   605  00F497  2E                 	db	46
   606  00F498  2E                 	db	46
   607  00F499  3F                 	db	63	;'?'
   608  00F49A  3F                 	db	63	;'?'
   609  00F49B  3F                 	db	63	;'?'
   610  00F49C  3F                 	db	63	;'?'
   611  00F49D  3F                 	db	63	;'?'
   612  00F49E  3F                 	db	63	;'?'
   613  00F49F  3F                 	db	63	;'?'
   614  00F4A0  3F                 	db	63	;'?'
   615  00F4A1  3F                 	db	63	;'?'
   616  00F4A2  3F                 	db	63	;'?'
   617  00F4A3  3F                 	db	63	;'?'
   618  00F4A4  3F                 	db	63	;'?'
   619  00F4A5  3F                 	db	63	;'?'
   620  00F4A6  3F                 	db	63	;'?'
   621  00F4A7  3F                 	db	63	;'?'
   622  00F4A8  3F                 	db	63	;'?'
   623  00F4A9  3F                 	db	63	;'?'
   624  00F4AA  3F                 	db	63	;'?'
   625  00F4AB  3F                 	db	63	;'?'
   626  00F4AC  3F                 	db	63	;'?'
   627  00F4AD  3F                 	db	63	;'?'
   628  00F4AE  3F                 	db	63	;'?'
   629  00F4AF  3F                 	db	63	;'?'
   630  00F4B0  3F                 	db	63	;'?'
   631  00F4B1  3F                 	db	63	;'?'
   632  00F4B2  2E                 	db	46
   633  00F4B3  2E                 	db	46
   634  00F4B4  2E                 	db	46
   635  00F4B5  2E                 	db	46
   636  00F4B6  2E                 	db	46
   637  00F4B7  2E                 	db	46
   638  00F4B8  2E                 	db	46
   639  00F4B9  2E                 	db	46
   640  00F4BA  2E                 	db	46
   641  00F4BB  2E                 	db	46
   642  00F4BC  2E                 	db	46
   643  00F4BD  2E                 	db	46
   644  00F4BE  2E                 	db	46
   645  00F4BF  2E                 	db	46
   646  00F4C0  2E                 	db	46
   647  00F4C1  2E                 	db	46
   648  00F4C2  2E                 	db	46
   649  00F4C3  0D                 	db	13
   650  00F4C4  0A                 	db	10
   651  00F4C5  00                 	db	0
   652  00F4C6                     STR_81:
   653  00F4C6  2E                 	db	46
   654  00F4C7  2E                 	db	46
   655  00F4C8  2E                 	db	46
   656  00F4C9  2E                 	db	46
   657  00F4CA  2E                 	db	46
   658  00F4CB  2E                 	db	46
   659  00F4CC  2E                 	db	46
   660  00F4CD  2E                 	db	46
   661  00F4CE  2E                 	db	46
   662  00F4CF  2E                 	db	46
   663  00F4D0  2E                 	db	46
   664  00F4D1  2E                 	db	46
   665  00F4D2  2E                 	db	46
   666  00F4D3  2E                 	db	46
   667  00F4D4  3F                 	db	63	;'?'
   668  00F4D5  3F                 	db	63	;'?'
   669  00F4D6  3F                 	db	63	;'?'
   670  00F4D7  3F                 	db	63	;'?'
   671  00F4D8  3F                 	db	63	;'?'
   672  00F4D9  3F                 	db	63	;'?'
   673  00F4DA  3F                 	db	63	;'?'
   674  00F4DB  3F                 	db	63	;'?'
   675  00F4DC  3F                 	db	63	;'?'
   676  00F4DD  3F                 	db	63	;'?'
   677  00F4DE  3F                 	db	63	;'?'
   678  00F4DF  3F                 	db	63	;'?'
   679  00F4E0  3F                 	db	63	;'?'
   680  00F4E1  3F                 	db	63	;'?'
   681  00F4E2  3F                 	db	63	;'?'
   682  00F4E3  3F                 	db	63	;'?'
   683  00F4E4  3F                 	db	63	;'?'
   684  00F4E5  3F                 	db	63	;'?'
   685  00F4E6  3F                 	db	63	;'?'
   686  00F4E7  3F                 	db	63	;'?'
   687  00F4E8  3F                 	db	63	;'?'
   688  00F4E9  3F                 	db	63	;'?'
   689  00F4EA  3F                 	db	63	;'?'
   690  00F4EB  3F                 	db	63	;'?'
   691  00F4EC  3F                 	db	63	;'?'
   692  00F4ED  3F                 	db	63	;'?'
   693  00F4EE  3F                 	db	63	;'?'
   694  00F4EF  3F                 	db	63	;'?'
   695  00F4F0  3F                 	db	63	;'?'
   696  00F4F1  3F                 	db	63	;'?'
   697  00F4F2  3F                 	db	63	;'?'
   698  00F4F3  2E                 	db	46
   699  00F4F4  2E                 	db	46
   700  00F4F5  2E                 	db	46
   701  00F4F6  2E                 	db	46
   702  00F4F7  2E                 	db	46
   703  00F4F8  2E                 	db	46
   704  00F4F9  2E                 	db	46
   705  00F4FA  2E                 	db	46
   706  00F4FB  2E                 	db	46
   707  00F4FC  2E                 	db	46
   708  00F4FD  2E                 	db	46
   709  00F4FE  2E                 	db	46
   710  00F4FF  2E                 	db	46
   711  00F500  2E                 	db	46
   712  00F501  0D                 	db	13
   713  00F502  0A                 	db	10
   714  00F503  00                 	db	0
   715  00F504                     STR_82:
   716  00F504  2E                 	db	46
   717  00F505  2E                 	db	46
   718  00F506  2E                 	db	46
   719  00F507  2E                 	db	46
   720  00F508  2E                 	db	46
   721  00F509  2E                 	db	46
   722  00F50A  2E                 	db	46
   723  00F50B  2E                 	db	46
   724  00F50C  2E                 	db	46
   725  00F50D  2E                 	db	46
   726  00F50E  2E                 	db	46
   727  00F50F  2E                 	db	46
   728  00F510  3F                 	db	63	;'?'
   729  00F511  3F                 	db	63	;'?'
   730  00F512  3F                 	db	63	;'?'
   731  00F513  3F                 	db	63	;'?'
   732  00F514  3F                 	db	63	;'?'
   733  00F515  3F                 	db	63	;'?'
   734  00F516  3F                 	db	63	;'?'
   735  00F517  3F                 	db	63	;'?'
   736  00F518  3F                 	db	63	;'?'
   737  00F519  3F                 	db	63	;'?'
   738  00F51A  3F                 	db	63	;'?'
   739  00F51B  3F                 	db	63	;'?'
   740  00F51C  3F                 	db	63	;'?'
   741  00F51D  3F                 	db	63	;'?'
   742  00F51E  3F                 	db	63	;'?'
   743  00F51F  3F                 	db	63	;'?'
   744  00F520  3F                 	db	63	;'?'
   745  00F521  3F                 	db	63	;'?'
   746  00F522  3F                 	db	63	;'?'
   747  00F523  3F                 	db	63	;'?'
   748  00F524  3F                 	db	63	;'?'
   749  00F525  3F                 	db	63	;'?'
   750  00F526  3F                 	db	63	;'?'
   751  00F527  3F                 	db	63	;'?'
   752  00F528  3F                 	db	63	;'?'
   753  00F529  3F                 	db	63	;'?'
   754  00F52A  3F                 	db	63	;'?'
   755  00F52B  3F                 	db	63	;'?'
   756  00F52C  3F                 	db	63	;'?'
   757  00F52D  3F                 	db	63	;'?'
   758  00F52E  3F                 	db	63	;'?'
   759  00F52F  3F                 	db	63	;'?'
   760  00F530  3F                 	db	63	;'?'
   761  00F531  3F                 	db	63	;'?'
   762  00F532  3F                 	db	63	;'?'
   763  00F533  2E                 	db	46
   764  00F534  2E                 	db	46
   765  00F535  2E                 	db	46
   766  00F536  2E                 	db	46
   767  00F537  2E                 	db	46
   768  00F538  2E                 	db	46
   769  00F539  2E                 	db	46
   770  00F53A  2E                 	db	46
   771  00F53B  2E                 	db	46
   772  00F53C  2E                 	db	46
   773  00F53D  2E                 	db	46
   774  00F53E  2E                 	db	46
   775  00F53F  0D                 	db	13
   776  00F540  0A                 	db	10
   777  00F541  00                 	db	0
   778  00F542                     STR_83:
   779  00F542  2E                 	db	46
   780  00F543  2E                 	db	46
   781  00F544  2E                 	db	46
   782  00F545  2E                 	db	46
   783  00F546  2E                 	db	46
   784  00F547  2E                 	db	46
   785  00F548  2E                 	db	46
   786  00F549  2E                 	db	46
   787  00F54A  2E                 	db	46
   788  00F54B  2E                 	db	46
   789  00F54C  3F                 	db	63	;'?'
   790  00F54D  3F                 	db	63	;'?'
   791  00F54E  3F                 	db	63	;'?'
   792  00F54F  3F                 	db	63	;'?'
   793  00F550  3F                 	db	63	;'?'
   794  00F551  3F                 	db	63	;'?'
   795  00F552  3F                 	db	63	;'?'
   796  00F553  3F                 	db	63	;'?'
   797  00F554  3F                 	db	63	;'?'
   798  00F555  3F                 	db	63	;'?'
   799  00F556  3F                 	db	63	;'?'
   800  00F557  3F                 	db	63	;'?'
   801  00F558  3F                 	db	63	;'?'
   802  00F559  3F                 	db	63	;'?'
   803  00F55A  3F                 	db	63	;'?'
   804  00F55B  3F                 	db	63	;'?'
   805  00F55C  3F                 	db	63	;'?'
   806  00F55D  3F                 	db	63	;'?'
   807  00F55E  3F                 	db	63	;'?'
   808  00F55F  3F                 	db	63	;'?'
   809  00F560  3F                 	db	63	;'?'
   810  00F561  3F                 	db	63	;'?'
   811  00F562  3F                 	db	63	;'?'
   812  00F563  3F                 	db	63	;'?'
   813  00F564  3F                 	db	63	;'?'
   814  00F565  3F                 	db	63	;'?'
   815  00F566  3F                 	db	63	;'?'
   816  00F567  3F                 	db	63	;'?'
   817  00F568  3F                 	db	63	;'?'
   818  00F569  3F                 	db	63	;'?'
   819  00F56A  3F                 	db	63	;'?'
   820  00F56B  3F                 	db	63	;'?'
   821  00F56C  3F                 	db	63	;'?'
   822  00F56D  3F                 	db	63	;'?'
   823  00F56E  3F                 	db	63	;'?'
   824  00F56F  3F                 	db	63	;'?'
   825  00F570  3F                 	db	63	;'?'
   826  00F571  3F                 	db	63	;'?'
   827  00F572  3F                 	db	63	;'?'
   828  00F573  2E                 	db	46
   829  00F574  2E                 	db	46
   830  00F575  2E                 	db	46
   831  00F576  2E                 	db	46
   832  00F577  2E                 	db	46
   833  00F578  2E                 	db	46
   834  00F579  2E                 	db	46
   835  00F57A  2E                 	db	46
   836  00F57B  2E                 	db	46
   837  00F57C  2E                 	db	46
   838  00F57D  0D                 	db	13
   839  00F57E  0A                 	db	10
   840  00F57F  00                 	db	0
   841  00F580                     STR_84:
   842  00F580  2E                 	db	46
   843  00F581  2E                 	db	46
   844  00F582  2E                 	db	46
   845  00F583  2E                 	db	46
   846  00F584  2E                 	db	46
   847  00F585  2E                 	db	46
   848  00F586  2E                 	db	46
   849  00F587  2E                 	db	46
   850  00F588  2E                 	db	46
   851  00F589  3F                 	db	63	;'?'
   852  00F58A  3F                 	db	63	;'?'
   853  00F58B  3F                 	db	63	;'?'
   854  00F58C  3F                 	db	63	;'?'
   855  00F58D  3F                 	db	63	;'?'
   856  00F58E  3F                 	db	63	;'?'
   857  00F58F  3F                 	db	63	;'?'
   858  00F590  3F                 	db	63	;'?'
   859  00F591  3F                 	db	63	;'?'
   860  00F592  3F                 	db	63	;'?'
   861  00F593  3F                 	db	63	;'?'
   862  00F594  3F                 	db	63	;'?'
   863  00F595  3F                 	db	63	;'?'
   864  00F596  3F                 	db	63	;'?'
   865  00F597  3F                 	db	63	;'?'
   866  00F598  3F                 	db	63	;'?'
   867  00F599  3F                 	db	63	;'?'
   868  00F59A  3F                 	db	63	;'?'
   869  00F59B  3F                 	db	63	;'?'
   870  00F59C  3F                 	db	63	;'?'
   871  00F59D  3F                 	db	63	;'?'
   872  00F59E  3F                 	db	63	;'?'
   873  00F59F  3F                 	db	63	;'?'
   874  00F5A0  3F                 	db	63	;'?'
   875  00F5A1  3F                 	db	63	;'?'
   876  00F5A2  3F                 	db	63	;'?'
   877  00F5A3  3F                 	db	63	;'?'
   878  00F5A4  3F                 	db	63	;'?'
   879  00F5A5  3F                 	db	63	;'?'
   880  00F5A6  3F                 	db	63	;'?'
   881  00F5A7  3F                 	db	63	;'?'
   882  00F5A8  3F                 	db	63	;'?'
   883  00F5A9  3F                 	db	63	;'?'
   884  00F5AA  3F                 	db	63	;'?'
   885  00F5AB  3F                 	db	63	;'?'
   886  00F5AC  3F                 	db	63	;'?'
   887  00F5AD  3F                 	db	63	;'?'
   888  00F5AE  3F                 	db	63	;'?'
   889  00F5AF  3F                 	db	63	;'?'
   890  00F5B0  3F                 	db	63	;'?'
   891  00F5B1  3F                 	db	63	;'?'
   892  00F5B2  2E                 	db	46
   893  00F5B3  2E                 	db	46
   894  00F5B4  2E                 	db	46
   895  00F5B5  2E                 	db	46
   896  00F5B6  2E                 	db	46
   897  00F5B7  2E                 	db	46
   898  00F5B8  2E                 	db	46
   899  00F5B9  2E                 	db	46
   900  00F5BA  2E                 	db	46
   901  00F5BB  0D                 	db	13
   902  00F5BC  0A                 	db	10
   903  00F5BD  00                 	db	0
   904  00F5BE                     STR_105:
   905  00F5BE  2E                 	db	46
   906  00F5BF  2E                 	db	46
   907  00F5C0  2E                 	db	46
   908  00F5C1  2E                 	db	46
   909  00F5C2  2E                 	db	46
   910  00F5C3  2E                 	db	46
   911  00F5C4  2E                 	db	46
   912  00F5C5  3F                 	db	63	;'?'
   913  00F5C6  3F                 	db	63	;'?'
   914  00F5C7  3F                 	db	63	;'?'
   915  00F5C8  3F                 	db	63	;'?'
   916  00F5C9  3F                 	db	63	;'?'
   917  00F5CA  3F                 	db	63	;'?'
   918  00F5CB  3F                 	db	63	;'?'
   919  00F5CC  3F                 	db	63	;'?'
   920  00F5CD  3F                 	db	63	;'?'
   921  00F5CE  3F                 	db	63	;'?'
   922  00F5CF  3F                 	db	63	;'?'
   923  00F5D0  3F                 	db	63	;'?'
   924  00F5D1  3F                 	db	63	;'?'
   925  00F5D2  3F                 	db	63	;'?'
   926  00F5D3  3F                 	db	63	;'?'
   927  00F5D4  3F                 	db	63	;'?'
   928  00F5D5  3F                 	db	63	;'?'
   929  00F5D6  3A                 	db	58	;':'
   930  00F5D7  3A                 	db	58	;':'
   931  00F5D8  3A                 	db	58	;':'
   932  00F5D9  3A                 	db	58	;':'
   933  00F5DA  3A                 	db	58	;':'
   934  00F5DB  3A                 	db	58	;':'
   935  00F5DC  3A                 	db	58	;':'
   936  00F5DD  3A                 	db	58	;':'
   937  00F5DE  3A                 	db	58	;':'
   938  00F5DF  3A                 	db	58	;':'
   939  00F5E0  3A                 	db	58	;':'
   940  00F5E1  3F                 	db	63	;'?'
   941  00F5E2  3F                 	db	63	;'?'
   942  00F5E3  3F                 	db	63	;'?'
   943  00F5E4  3F                 	db	63	;'?'
   944  00F5E5  3F                 	db	63	;'?'
   945  00F5E6  3F                 	db	63	;'?'
   946  00F5E7  3F                 	db	63	;'?'
   947  00F5E8  3F                 	db	63	;'?'
   948  00F5E9  3F                 	db	63	;'?'
   949  00F5EA  3F                 	db	63	;'?'
   950  00F5EB  3F                 	db	63	;'?'
   951  00F5EC  3F                 	db	63	;'?'
   952  00F5ED  3F                 	db	63	;'?'
   953  00F5EE  3F                 	db	63	;'?'
   954  00F5EF  3F                 	db	63	;'?'
   955  00F5F0  3F                 	db	63	;'?'
   956  00F5F1  3F                 	db	63	;'?'
   957  00F5F2  2E                 	db	46
   958  00F5F3  2E                 	db	46
   959  00F5F4  2E                 	db	46
   960  00F5F5  2E                 	db	46
   961  00F5F6  2E                 	db	46
   962  00F5F7  2E                 	db	46
   963  00F5F8  2E                 	db	46
   964  00F5F9  0D                 	db	13
   965  00F5FA  0A                 	db	10
   966  00F5FB  00                 	db	0
   967  00F5FC                     STR_85:
   968  00F5FC  2E                 	db	46
   969  00F5FD  2E                 	db	46
   970  00F5FE  2E                 	db	46
   971  00F5FF  2E                 	db	46
   972  00F600  2E                 	db	46
   973  00F601  2E                 	db	46
   974  00F602  2E                 	db	46
   975  00F603  3F                 	db	63	;'?'
   976  00F604  3F                 	db	63	;'?'
   977  00F605  3F                 	db	63	;'?'
   978  00F606  3F                 	db	63	;'?'
   979  00F607  3F                 	db	63	;'?'
   980  00F608  3F                 	db	63	;'?'
   981  00F609  3F                 	db	63	;'?'
   982  00F60A  3F                 	db	63	;'?'
   983  00F60B  3F                 	db	63	;'?'
   984  00F60C  3F                 	db	63	;'?'
   985  00F60D  3F                 	db	63	;'?'
   986  00F60E  3F                 	db	63	;'?'
   987  00F60F  3F                 	db	63	;'?'
   988  00F610  3F                 	db	63	;'?'
   989  00F611  3F                 	db	63	;'?'
   990  00F612  3F                 	db	63	;'?'
   991  00F613  3F                 	db	63	;'?'
   992  00F614  3F                 	db	63	;'?'
   993  00F615  3F                 	db	63	;'?'
   994  00F616  3F                 	db	63	;'?'
   995  00F617  3F                 	db	63	;'?'
   996  00F618  3F                 	db	63	;'?'
   997  00F619  3F                 	db	63	;'?'
   998  00F61A  3F                 	db	63	;'?'
   999  00F61B  3F                 	db	63	;'?'
  1000  00F61C  3F                 	db	63	;'?'
  1001  00F61D  3F                 	db	63	;'?'
  1002  00F61E  3F                 	db	63	;'?'
  1003  00F61F  3F                 	db	63	;'?'
  1004  00F620  3F                 	db	63	;'?'
  1005  00F621  3F                 	db	63	;'?'
  1006  00F622  3F                 	db	63	;'?'
  1007  00F623  3F                 	db	63	;'?'
  1008  00F624  3F                 	db	63	;'?'
  1009  00F625  3F                 	db	63	;'?'
  1010  00F626  3F                 	db	63	;'?'
  1011  00F627  3F                 	db	63	;'?'
  1012  00F628  3F                 	db	63	;'?'
  1013  00F629  3F                 	db	63	;'?'
  1014  00F62A  3F                 	db	63	;'?'
  1015  00F62B  3F                 	db	63	;'?'
  1016  00F62C  3F                 	db	63	;'?'
  1017  00F62D  3F                 	db	63	;'?'
  1018  00F62E  3F                 	db	63	;'?'
  1019  00F62F  3F                 	db	63	;'?'
  1020  00F630  2E                 	db	46
  1021  00F631  2E                 	db	46
  1022  00F632  2E                 	db	46
  1023  00F633  2E                 	db	46
  1024  00F634  2E                 	db	46
  1025  00F635  2E                 	db	46
  1026  00F636  2E                 	db	46
  1027  00F637  0D                 	db	13
  1028  00F638  0A                 	db	10
  1029  00F639  00                 	db	0
  1030  00F63A                     STR_104:
  1031  00F63A  2E                 	db	46
  1032  00F63B  2E                 	db	46
  1033  00F63C  2E                 	db	46
  1034  00F63D  2E                 	db	46
  1035  00F63E  2E                 	db	46
  1036  00F63F  2E                 	db	46
  1037  00F640  3F                 	db	63	;'?'
  1038  00F641  3F                 	db	63	;'?'
  1039  00F642  3F                 	db	63	;'?'
  1040  00F643  3F                 	db	63	;'?'
  1041  00F644  3F                 	db	63	;'?'
  1042  00F645  3F                 	db	63	;'?'
  1043  00F646  3F                 	db	63	;'?'
  1044  00F647  3F                 	db	63	;'?'
  1045  00F648  3F                 	db	63	;'?'
  1046  00F649  3F                 	db	63	;'?'
  1047  00F64A  3F                 	db	63	;'?'
  1048  00F64B  3F                 	db	63	;'?'
  1049  00F64C  3F                 	db	63	;'?'
  1050  00F64D  3F                 	db	63	;'?'
  1051  00F64E  3F                 	db	63	;'?'
  1052  00F64F  3A                 	db	58	;':'
  1053  00F650  3A                 	db	58	;':'
  1054  00F651  3A                 	db	58	;':'
  1055  00F652  3A                 	db	58	;':'
  1056  00F653  3A                 	db	58	;':'
  1057  00F654  3F                 	db	63	;'?'
  1058  00F655  3F                 	db	63	;'?'
  1059  00F656  3F                 	db	63	;'?'
  1060  00F657  3F                 	db	63	;'?'
  1061  00F658  3F                 	db	63	;'?'
  1062  00F659  3F                 	db	63	;'?'
  1063  00F65A  3F                 	db	63	;'?'
  1064  00F65B  3A                 	db	58	;':'
  1065  00F65C  3A                 	db	58	;':'
  1066  00F65D  3A                 	db	58	;':'
  1067  00F65E  3A                 	db	58	;':'
  1068  00F65F  3A                 	db	58	;':'
  1069  00F660  3F                 	db	63	;'?'
  1070  00F661  3F                 	db	63	;'?'
  1071  00F662  3F                 	db	63	;'?'
  1072  00F663  3F                 	db	63	;'?'
  1073  00F664  3F                 	db	63	;'?'
  1074  00F665  3F                 	db	63	;'?'
  1075  00F666  3F                 	db	63	;'?'
  1076  00F667  3F                 	db	63	;'?'
  1077  00F668  3F                 	db	63	;'?'
  1078  00F669  3F                 	db	63	;'?'
  1079  00F66A  3F                 	db	63	;'?'
  1080  00F66B  3F                 	db	63	;'?'
  1081  00F66C  3F                 	db	63	;'?'
  1082  00F66D  3F                 	db	63	;'?'
  1083  00F66E  3F                 	db	63	;'?'
  1084  00F66F  2E                 	db	46
  1085  00F670  2E                 	db	46
  1086  00F671  2E                 	db	46
  1087  00F672  2E                 	db	46
  1088  00F673  2E                 	db	46
  1089  00F674  2E                 	db	46
  1090  00F675  0D                 	db	13
  1091  00F676  0A                 	db	10
  1092  00F677  00                 	db	0
  1093  00F678                     STR_86:
  1094  00F678  2E                 	db	46
  1095  00F679  2E                 	db	46
  1096  00F67A  2E                 	db	46
  1097  00F67B  2E                 	db	46
  1098  00F67C  2E                 	db	46
  1099  00F67D  2E                 	db	46
  1100  00F67E  3F                 	db	63	;'?'
  1101  00F67F  3F                 	db	63	;'?'
  1102  00F680  3F                 	db	63	;'?'
  1103  00F681  3F                 	db	63	;'?'
  1104  00F682  3F                 	db	63	;'?'
  1105  00F683  3F                 	db	63	;'?'
  1106  00F684  3F                 	db	63	;'?'
  1107  00F685  3F                 	db	63	;'?'
  1108  00F686  3F                 	db	63	;'?'
  1109  00F687  3F                 	db	63	;'?'
  1110  00F688  3F                 	db	63	;'?'
  1111  00F689  3F                 	db	63	;'?'
  1112  00F68A  3F                 	db	63	;'?'
  1113  00F68B  3F                 	db	63	;'?'
  1114  00F68C  3F                 	db	63	;'?'
  1115  00F68D  3F                 	db	63	;'?'
  1116  00F68E  3F                 	db	63	;'?'
  1117  00F68F  3F                 	db	63	;'?'
  1118  00F690  3F                 	db	63	;'?'
  1119  00F691  3F                 	db	63	;'?'
  1120  00F692  3F                 	db	63	;'?'
  1121  00F693  3F                 	db	63	;'?'
  1122  00F694  3F                 	db	63	;'?'
  1123  00F695  3F                 	db	63	;'?'
  1124  00F696  3F                 	db	63	;'?'
  1125  00F697  3F                 	db	63	;'?'
  1126  00F698  3F                 	db	63	;'?'
  1127  00F699  3F                 	db	63	;'?'
  1128  00F69A  3F                 	db	63	;'?'
  1129  00F69B  3F                 	db	63	;'?'
  1130  00F69C  3F                 	db	63	;'?'
  1131  00F69D  3F                 	db	63	;'?'
  1132  00F69E  3F                 	db	63	;'?'
  1133  00F69F  3F                 	db	63	;'?'
  1134  00F6A0  3F                 	db	63	;'?'
  1135  00F6A1  3F                 	db	63	;'?'
  1136  00F6A2  3F                 	db	63	;'?'
  1137  00F6A3  3F                 	db	63	;'?'
  1138  00F6A4  3F                 	db	63	;'?'
  1139  00F6A5  3F                 	db	63	;'?'
  1140  00F6A6  3F                 	db	63	;'?'
  1141  00F6A7  3F                 	db	63	;'?'
  1142  00F6A8  3F                 	db	63	;'?'
  1143  00F6A9  3F                 	db	63	;'?'
  1144  00F6AA  3F                 	db	63	;'?'
  1145  00F6AB  3F                 	db	63	;'?'
  1146  00F6AC  3F                 	db	63	;'?'
  1147  00F6AD  2E                 	db	46
  1148  00F6AE  2E                 	db	46
  1149  00F6AF  2E                 	db	46
  1150  00F6B0  2E                 	db	46
  1151  00F6B1  2E                 	db	46
  1152  00F6B2  2E                 	db	46
  1153  00F6B3  0D                 	db	13
  1154  00F6B4  0A                 	db	10
  1155  00F6B5  00                 	db	0
  1156  00F6B6                     STR_103:
  1157  00F6B6  2E                 	db	46
  1158  00F6B7  2E                 	db	46
  1159  00F6B8  2E                 	db	46
  1160  00F6B9  2E                 	db	46
  1161  00F6BA  2E                 	db	46
  1162  00F6BB  3F                 	db	63	;'?'
  1163  00F6BC  3F                 	db	63	;'?'
  1164  00F6BD  3F                 	db	63	;'?'
  1165  00F6BE  3F                 	db	63	;'?'
  1166  00F6BF  3F                 	db	63	;'?'
  1167  00F6C0  3F                 	db	63	;'?'
  1168  00F6C1  3F                 	db	63	;'?'
  1169  00F6C2  3F                 	db	63	;'?'
  1170  00F6C3  3F                 	db	63	;'?'
  1171  00F6C4  3F                 	db	63	;'?'
  1172  00F6C5  3F                 	db	63	;'?'
  1173  00F6C6  3F                 	db	63	;'?'
  1174  00F6C7  3F                 	db	63	;'?'
  1175  00F6C8  3F                 	db	63	;'?'
  1176  00F6C9  3A                 	db	58	;':'
  1177  00F6CA  3A                 	db	58	;':'
  1178  00F6CB  3A                 	db	58	;':'
  1179  00F6CC  3A                 	db	58	;':'
  1180  00F6CD  3F                 	db	63	;'?'
  1181  00F6CE  3F                 	db	63	;'?'
  1182  00F6CF  3F                 	db	63	;'?'
  1183  00F6D0  3F                 	db	63	;'?'
  1184  00F6D1  3F                 	db	63	;'?'
  1185  00F6D2  3F                 	db	63	;'?'
  1186  00F6D3  3F                 	db	63	;'?'
  1187  00F6D4  3F                 	db	63	;'?'
  1188  00F6D5  3F                 	db	63	;'?'
  1189  00F6D6  3F                 	db	63	;'?'
  1190  00F6D7  3F                 	db	63	;'?'
  1191  00F6D8  3F                 	db	63	;'?'
  1192  00F6D9  3F                 	db	63	;'?'
  1193  00F6DA  3A                 	db	58	;':'
  1194  00F6DB  3A                 	db	58	;':'
  1195  00F6DC  3A                 	db	58	;':'
  1196  00F6DD  3A                 	db	58	;':'
  1197  00F6DE  3F                 	db	63	;'?'
  1198  00F6DF  3F                 	db	63	;'?'
  1199  00F6E0  3F                 	db	63	;'?'
  1200  00F6E1  3F                 	db	63	;'?'
  1201  00F6E2  3F                 	db	63	;'?'
  1202  00F6E3  3F                 	db	63	;'?'
  1203  00F6E4  3F                 	db	63	;'?'
  1204  00F6E5  3F                 	db	63	;'?'
  1205  00F6E6  3F                 	db	63	;'?'
  1206  00F6E7  3F                 	db	63	;'?'
  1207  00F6E8  3F                 	db	63	;'?'
  1208  00F6E9  3F                 	db	63	;'?'
  1209  00F6EA  3F                 	db	63	;'?'
  1210  00F6EB  3F                 	db	63	;'?'
  1211  00F6EC  2E                 	db	46
  1212  00F6ED  2E                 	db	46
  1213  00F6EE  2E                 	db	46
  1214  00F6EF  2E                 	db	46
  1215  00F6F0  2E                 	db	46
  1216  00F6F1  0D                 	db	13
  1217  00F6F2  0A                 	db	10
  1218  00F6F3  00                 	db	0
  1219  00F6F4                     STR_87:
  1220  00F6F4  2E                 	db	46
  1221  00F6F5  2E                 	db	46
  1222  00F6F6  2E                 	db	46
  1223  00F6F7  2E                 	db	46
  1224  00F6F8  2E                 	db	46
  1225  00F6F9  3F                 	db	63	;'?'
  1226  00F6FA  3F                 	db	63	;'?'
  1227  00F6FB  3F                 	db	63	;'?'
  1228  00F6FC  3F                 	db	63	;'?'
  1229  00F6FD  3F                 	db	63	;'?'
  1230  00F6FE  3F                 	db	63	;'?'
  1231  00F6FF  3F                 	db	63	;'?'
  1232  00F700  3F                 	db	63	;'?'
  1233  00F701  3F                 	db	63	;'?'
  1234  00F702  3F                 	db	63	;'?'
  1235  00F703  3F                 	db	63	;'?'
  1236  00F704  3F                 	db	63	;'?'
  1237  00F705  3F                 	db	63	;'?'
  1238  00F706  3F                 	db	63	;'?'
  1239  00F707  3F                 	db	63	;'?'
  1240  00F708  3F                 	db	63	;'?'
  1241  00F709  3F                 	db	63	;'?'
  1242  00F70A  3F                 	db	63	;'?'
  1243  00F70B  3F                 	db	63	;'?'
  1244  00F70C  3F                 	db	63	;'?'
  1245  00F70D  3F                 	db	63	;'?'
  1246  00F70E  3F                 	db	63	;'?'
  1247  00F70F  3F                 	db	63	;'?'
  1248  00F710  3F                 	db	63	;'?'
  1249  00F711  3F                 	db	63	;'?'
  1250  00F712  3F                 	db	63	;'?'
  1251  00F713  3F                 	db	63	;'?'
  1252  00F714  3F                 	db	63	;'?'
  1253  00F715  3F                 	db	63	;'?'
  1254  00F716  3F                 	db	63	;'?'
  1255  00F717  3F                 	db	63	;'?'
  1256  00F718  3F                 	db	63	;'?'
  1257  00F719  3F                 	db	63	;'?'
  1258  00F71A  3F                 	db	63	;'?'
  1259  00F71B  3F                 	db	63	;'?'
  1260  00F71C  3F                 	db	63	;'?'
  1261  00F71D  3F                 	db	63	;'?'
  1262  00F71E  3F                 	db	63	;'?'
  1263  00F71F  3F                 	db	63	;'?'
  1264  00F720  3F                 	db	63	;'?'
  1265  00F721  3F                 	db	63	;'?'
  1266  00F722  3F                 	db	63	;'?'
  1267  00F723  3F                 	db	63	;'?'
  1268  00F724  3F                 	db	63	;'?'
  1269  00F725  3F                 	db	63	;'?'
  1270  00F726  3F                 	db	63	;'?'
  1271  00F727  3F                 	db	63	;'?'
  1272  00F728  3F                 	db	63	;'?'
  1273  00F729  3F                 	db	63	;'?'
  1274  00F72A  2E                 	db	46
  1275  00F72B  2E                 	db	46
  1276  00F72C  2E                 	db	46
  1277  00F72D  2E                 	db	46
  1278  00F72E  2E                 	db	46
  1279  00F72F  0D                 	db	13
  1280  00F730  0A                 	db	10
  1281  00F731  00                 	db	0
  1282  00F732                     STR_88:
  1283  00F732  2E                 	db	46
  1284  00F733  2E                 	db	46
  1285  00F734  2E                 	db	46
  1286  00F735  2E                 	db	46
  1287  00F736  3F                 	db	63	;'?'
  1288  00F737  3F                 	db	63	;'?'
  1289  00F738  3F                 	db	63	;'?'
  1290  00F739  3F                 	db	63	;'?'
  1291  00F73A  3A                 	db	58	;':'
  1292  00F73B  3A                 	db	58	;':'
  1293  00F73C  3A                 	db	58	;':'
  1294  00F73D  3A                 	db	58	;':'
  1295  00F73E  3A                 	db	58	;':'
  1296  00F73F  3A                 	db	58	;':'
  1297  00F740  3A                 	db	58	;':'
  1298  00F741  3A                 	db	58	;':'
  1299  00F742  3A                 	db	58	;':'
  1300  00F743  3A                 	db	58	;':'
  1301  00F744  3A                 	db	58	;':'
  1302  00F745  3F                 	db	63	;'?'
  1303  00F746  3F                 	db	63	;'?'
  1304  00F747  3F                 	db	63	;'?'
  1305  00F748  3F                 	db	63	;'?'
  1306  00F749  3F                 	db	63	;'?'
  1307  00F74A  3F                 	db	63	;'?'
  1308  00F74B  3F                 	db	63	;'?'
  1309  00F74C  3F                 	db	63	;'?'
  1310  00F74D  3F                 	db	63	;'?'
  1311  00F74E  3F                 	db	63	;'?'
  1312  00F74F  3F                 	db	63	;'?'
  1313  00F750  3F                 	db	63	;'?'
  1314  00F751  3F                 	db	63	;'?'
  1315  00F752  3F                 	db	63	;'?'
  1316  00F753  3F                 	db	63	;'?'
  1317  00F754  3F                 	db	63	;'?'
  1318  00F755  3F                 	db	63	;'?'
  1319  00F756  3F                 	db	63	;'?'
  1320  00F757  3F                 	db	63	;'?'
  1321  00F758  3F                 	db	63	;'?'
  1322  00F759  3F                 	db	63	;'?'
  1323  00F75A  3A                 	db	58	;':'
  1324  00F75B  3A                 	db	58	;':'
  1325  00F75C  3A                 	db	58	;':'
  1326  00F75D  3A                 	db	58	;':'
  1327  00F75E  3A                 	db	58	;':'
  1328  00F75F  3A                 	db	58	;':'
  1329  00F760  3A                 	db	58	;':'
  1330  00F761  3A                 	db	58	;':'
  1331  00F762  3A                 	db	58	;':'
  1332  00F763  3A                 	db	58	;':'
  1333  00F764  3A                 	db	58	;':'
  1334  00F765  3F                 	db	63	;'?'
  1335  00F766  3F                 	db	63	;'?'
  1336  00F767  3F                 	db	63	;'?'
  1337  00F768  3F                 	db	63	;'?'
  1338  00F769  2E                 	db	46
  1339  00F76A  2E                 	db	46
  1340  00F76B  2E                 	db	46
  1341  00F76C  2E                 	db	46
  1342  00F76D  0D                 	db	13
  1343  00F76E  0A                 	db	10
  1344  00F76F  00                 	db	0
  1345  00F770                     STR_102:
  1346  00F770  2E                 	db	46
  1347  00F771  2E                 	db	46
  1348  00F772  2E                 	db	46
  1349  00F773  2E                 	db	46
  1350  00F774  3F                 	db	63	;'?'
  1351  00F775  3F                 	db	63	;'?'
  1352  00F776  3F                 	db	63	;'?'
  1353  00F777  3F                 	db	63	;'?'
  1354  00F778  3F                 	db	63	;'?'
  1355  00F779  3F                 	db	63	;'?'
  1356  00F77A  3F                 	db	63	;'?'
  1357  00F77B  3F                 	db	63	;'?'
  1358  00F77C  3F                 	db	63	;'?'
  1359  00F77D  3F                 	db	63	;'?'
  1360  00F77E  3F                 	db	63	;'?'
  1361  00F77F  3F                 	db	63	;'?'
  1362  00F780  3F                 	db	63	;'?'
  1363  00F781  3F                 	db	63	;'?'
  1364  00F782  3A                 	db	58	;':'
  1365  00F783  3A                 	db	58	;':'
  1366  00F784  3A                 	db	58	;':'
  1367  00F785  3F                 	db	63	;'?'
  1368  00F786  3F                 	db	63	;'?'
  1369  00F787  3F                 	db	63	;'?'
  1370  00F788  3F                 	db	63	;'?'
  1371  00F789  3F                 	db	63	;'?'
  1372  00F78A  3F                 	db	63	;'?'
  1373  00F78B  3F                 	db	63	;'?'
  1374  00F78C  3F                 	db	63	;'?'
  1375  00F78D  3F                 	db	63	;'?'
  1376  00F78E  3F                 	db	63	;'?'
  1377  00F78F  3F                 	db	63	;'?'
  1378  00F790  3F                 	db	63	;'?'
  1379  00F791  3F                 	db	63	;'?'
  1380  00F792  3F                 	db	63	;'?'
  1381  00F793  3F                 	db	63	;'?'
  1382  00F794  3F                 	db	63	;'?'
  1383  00F795  3F                 	db	63	;'?'
  1384  00F796  3A                 	db	58	;':'
  1385  00F797  3A                 	db	58	;':'
  1386  00F798  3A                 	db	58	;':'
  1387  00F799  3F                 	db	63	;'?'
  1388  00F79A  3F                 	db	63	;'?'
  1389  00F79B  3F                 	db	63	;'?'
  1390  00F79C  3F                 	db	63	;'?'
  1391  00F79D  3F                 	db	63	;'?'
  1392  00F79E  3F                 	db	63	;'?'
  1393  00F79F  3F                 	db	63	;'?'
  1394  00F7A0  3F                 	db	63	;'?'
  1395  00F7A1  3F                 	db	63	;'?'
  1396  00F7A2  3F                 	db	63	;'?'
  1397  00F7A3  3F                 	db	63	;'?'
  1398  00F7A4  3F                 	db	63	;'?'
  1399  00F7A5  3F                 	db	63	;'?'
  1400  00F7A6  3F                 	db	63	;'?'
  1401  00F7A7  2E                 	db	46
  1402  00F7A8  2E                 	db	46
  1403  00F7A9  2E                 	db	46
  1404  00F7AA  2E                 	db	46
  1405  00F7AB  0D                 	db	13
  1406  00F7AC  0A                 	db	10
  1407  00F7AD  00                 	db	0
  1408  00F7AE                     STR_89:
  1409  00F7AE  2E                 	db	46
  1410  00F7AF  2E                 	db	46
  1411  00F7B0  2E                 	db	46
  1412  00F7B1  3F                 	db	63	;'?'
  1413  00F7B2  3F                 	db	63	;'?'
  1414  00F7B3  3A                 	db	58	;':'
  1415  00F7B4  3A                 	db	58	;':'
  1416  00F7B5  3A                 	db	58	;':'
  1417  00F7B6  3A                 	db	58	;':'
  1418  00F7B7  3A                 	db	58	;':'
  1419  00F7B8  3A                 	db	58	;':'
  1420  00F7B9  3A                 	db	58	;':'
  1421  00F7BA  3A                 	db	58	;':'
  1422  00F7BB  3A                 	db	58	;':'
  1423  00F7BC  3A                 	db	58	;':'
  1424  00F7BD  3A                 	db	58	;':'
  1425  00F7BE  3A                 	db	58	;':'
  1426  00F7BF  3A                 	db	58	;':'
  1427  00F7C0  3A                 	db	58	;':'
  1428  00F7C1  3A                 	db	58	;':'
  1429  00F7C2  3A                 	db	58	;':'
  1430  00F7C3  3A                 	db	58	;':'
  1431  00F7C4  3A                 	db	58	;':'
  1432  00F7C5  3A                 	db	58	;':'
  1433  00F7C6  3A                 	db	58	;':'
  1434  00F7C7  3F                 	db	63	;'?'
  1435  00F7C8  3F                 	db	63	;'?'
  1436  00F7C9  3F                 	db	63	;'?'
  1437  00F7CA  3F                 	db	63	;'?'
  1438  00F7CB  3F                 	db	63	;'?'
  1439  00F7CC  3F                 	db	63	;'?'
  1440  00F7CD  3F                 	db	63	;'?'
  1441  00F7CE  3F                 	db	63	;'?'
  1442  00F7CF  3F                 	db	63	;'?'
  1443  00F7D0  3A                 	db	58	;':'
  1444  00F7D1  3A                 	db	58	;':'
  1445  00F7D2  3A                 	db	58	;':'
  1446  00F7D3  3A                 	db	58	;':'
  1447  00F7D4  3A                 	db	58	;':'
  1448  00F7D5  3A                 	db	58	;':'
  1449  00F7D6  3A                 	db	58	;':'
  1450  00F7D7  3A                 	db	58	;':'
  1451  00F7D8  3A                 	db	58	;':'
  1452  00F7D9  3A                 	db	58	;':'
  1453  00F7DA  3A                 	db	58	;':'
  1454  00F7DB  3A                 	db	58	;':'
  1455  00F7DC  3A                 	db	58	;':'
  1456  00F7DD  3A                 	db	58	;':'
  1457  00F7DE  3A                 	db	58	;':'
  1458  00F7DF  3A                 	db	58	;':'
  1459  00F7E0  3A                 	db	58	;':'
  1460  00F7E1  3A                 	db	58	;':'
  1461  00F7E2  3A                 	db	58	;':'
  1462  00F7E3  3A                 	db	58	;':'
  1463  00F7E4  3F                 	db	63	;'?'
  1464  00F7E5  3F                 	db	63	;'?'
  1465  00F7E6  2E                 	db	46
  1466  00F7E7  2E                 	db	46
  1467  00F7E8  2E                 	db	46
  1468  00F7E9  0D                 	db	13
  1469  00F7EA  0A                 	db	10
  1470  00F7EB  00                 	db	0
  1471  00F7EC                     STR_100:
  1472  00F7EC  2E                 	db	46
  1473  00F7ED  2E                 	db	46
  1474  00F7EE  2E                 	db	46
  1475  00F7EF  3F                 	db	63	;'?'
  1476  00F7F0  3F                 	db	63	;'?'
  1477  00F7F1  3F                 	db	63	;'?'
  1478  00F7F2  3F                 	db	63	;'?'
  1479  00F7F3  3F                 	db	63	;'?'
  1480  00F7F4  3F                 	db	63	;'?'
  1481  00F7F5  3F                 	db	63	;'?'
  1482  00F7F6  3F                 	db	63	;'?'
  1483  00F7F7  3F                 	db	63	;'?'
  1484  00F7F8  3F                 	db	63	;'?'
  1485  00F7F9  3F                 	db	63	;'?'
  1486  00F7FA  3F                 	db	63	;'?'
  1487  00F7FB  3F                 	db	63	;'?'
  1488  00F7FC  3A                 	db	58	;':'
  1489  00F7FD  3A                 	db	58	;':'
  1490  00F7FE  3A                 	db	58	;':'
  1491  00F7FF  3F                 	db	63	;'?'
  1492  00F800  3F                 	db	63	;'?'
  1493  00F801  3F                 	db	63	;'?'
  1494  00F802  3F                 	db	63	;'?'
  1495  00F803  3F                 	db	63	;'?'
  1496  00F804  3F                 	db	63	;'?'
  1497  00F805  3F                 	db	63	;'?'
  1498  00F806  3F                 	db	63	;'?'
  1499  00F807  3F                 	db	63	;'?'
  1500  00F808  3F                 	db	63	;'?'
  1501  00F809  3F                 	db	63	;'?'
  1502  00F80A  3F                 	db	63	;'?'
  1503  00F80B  3F                 	db	63	;'?'
  1504  00F80C  3F                 	db	63	;'?'
  1505  00F80D  3F                 	db	63	;'?'
  1506  00F80E  3F                 	db	63	;'?'
  1507  00F80F  3F                 	db	63	;'?'
  1508  00F810  3F                 	db	63	;'?'
  1509  00F811  3F                 	db	63	;'?'
  1510  00F812  3F                 	db	63	;'?'
  1511  00F813  3F                 	db	63	;'?'
  1512  00F814  3A                 	db	58	;':'
  1513  00F815  3A                 	db	58	;':'
  1514  00F816  3A                 	db	58	;':'
  1515  00F817  3F                 	db	63	;'?'
  1516  00F818  3F                 	db	63	;'?'
  1517  00F819  3F                 	db	63	;'?'
  1518  00F81A  3F                 	db	63	;'?'
  1519  00F81B  3F                 	db	63	;'?'
  1520  00F81C  3F                 	db	63	;'?'
  1521  00F81D  3F                 	db	63	;'?'
  1522  00F81E  3F                 	db	63	;'?'
  1523  00F81F  3F                 	db	63	;'?'
  1524  00F820  3F                 	db	63	;'?'
  1525  00F821  3F                 	db	63	;'?'
  1526  00F822  3F                 	db	63	;'?'
  1527  00F823  3F                 	db	63	;'?'
  1528  00F824  2E                 	db	46
  1529  00F825  2E                 	db	46
  1530  00F826  2E                 	db	46
  1531  00F827  0D                 	db	13
  1532  00F828  0A                 	db	10
  1533  00F829  00                 	db	0
  1534  00F82A                     STR_101:
  1535  00F82A  2E                 	db	46
  1536  00F82B  2E                 	db	46
  1537  00F82C  2E                 	db	46
  1538  00F82D  2E                 	db	46
  1539  00F82E  3F                 	db	63	;'?'
  1540  00F82F  3F                 	db	63	;'?'
  1541  00F830  3F                 	db	63	;'?'
  1542  00F831  3F                 	db	63	;'?'
  1543  00F832  3F                 	db	63	;'?'
  1544  00F833  3F                 	db	63	;'?'
  1545  00F834  3F                 	db	63	;'?'
  1546  00F835  3F                 	db	63	;'?'
  1547  00F836  3F                 	db	63	;'?'
  1548  00F837  3F                 	db	63	;'?'
  1549  00F838  3F                 	db	63	;'?'
  1550  00F839  3F                 	db	63	;'?'
  1551  00F83A  3F                 	db	63	;'?'
  1552  00F83B  3A                 	db	58	;':'
  1553  00F83C  3A                 	db	58	;':'
  1554  00F83D  3A                 	db	58	;':'
  1555  00F83E  3F                 	db	63	;'?'
  1556  00F83F  3F                 	db	63	;'?'
  1557  00F840  3F                 	db	63	;'?'
  1558  00F841  3F                 	db	63	;'?'
  1559  00F842  3F                 	db	63	;'?'
  1560  00F843  3F                 	db	63	;'?'
  1561  00F844  3F                 	db	63	;'?'
  1562  00F845  3F                 	db	63	;'?'
  1563  00F846  3F                 	db	63	;'?'
  1564  00F847  3F                 	db	63	;'?'
  1565  00F848  3F                 	db	63	;'?'
  1566  00F849  3F                 	db	63	;'?'
  1567  00F84A  3F                 	db	63	;'?'
  1568  00F84B  3F                 	db	63	;'?'
  1569  00F84C  3F                 	db	63	;'?'
  1570  00F84D  3F                 	db	63	;'?'
  1571  00F84E  3F                 	db	63	;'?'
  1572  00F84F  3F                 	db	63	;'?'
  1573  00F850  3F                 	db	63	;'?'
  1574  00F851  3A                 	db	58	;':'
  1575  00F852  3A                 	db	58	;':'
  1576  00F853  3A                 	db	58	;':'
  1577  00F854  3F                 	db	63	;'?'
  1578  00F855  3F                 	db	63	;'?'
  1579  00F856  3F                 	db	63	;'?'
  1580  00F857  3F                 	db	63	;'?'
  1581  00F858  3F                 	db	63	;'?'
  1582  00F859  3F                 	db	63	;'?'
  1583  00F85A  3F                 	db	63	;'?'
  1584  00F85B  3F                 	db	63	;'?'
  1585  00F85C  3F                 	db	63	;'?'
  1586  00F85D  3F                 	db	63	;'?'
  1587  00F85E  3F                 	db	63	;'?'
  1588  00F85F  3F                 	db	63	;'?'
  1589  00F860  3F                 	db	63	;'?'
  1590  00F861  3F                 	db	63	;'?'
  1591  00F862  2E                 	db	46
  1592  00F863  2E                 	db	46
  1593  00F864  2E                 	db	46
  1594  00F865  0D                 	db	13
  1595  00F866  0A                 	db	10
  1596  00F867  00                 	db	0
  1597  00F868                     STR_90:
  1598  00F868  2E                 	db	46
  1599  00F869  2E                 	db	46
  1600  00F86A  3F                 	db	63	;'?'
  1601  00F86B  3F                 	db	63	;'?'
  1602  00F86C  3F                 	db	63	;'?'
  1603  00F86D  3A                 	db	58	;':'
  1604  00F86E  3A                 	db	58	;':'
  1605  00F86F  3A                 	db	58	;':'
  1606  00F870  3A                 	db	58	;':'
  1607  00F871  3A                 	db	58	;':'
  1608  00F872  3A                 	db	58	;':'
  1609  00F873  3A                 	db	58	;':'
  1610  00F874  3A                 	db	58	;':'
  1611  00F875  3A                 	db	58	;':'
  1612  00F876  3A                 	db	58	;':'
  1613  00F877  3A                 	db	58	;':'
  1614  00F878  3A                 	db	58	;':'
  1615  00F879  3A                 	db	58	;':'
  1616  00F87A  3A                 	db	58	;':'
  1617  00F87B  3A                 	db	58	;':'
  1618  00F87C  3A                 	db	58	;':'
  1619  00F87D  3A                 	db	58	;':'
  1620  00F87E  3A                 	db	58	;':'
  1621  00F87F  3A                 	db	58	;':'
  1622  00F880  3A                 	db	58	;':'
  1623  00F881  3A                 	db	58	;':'
  1624  00F882  3A                 	db	58	;':'
  1625  00F883  3A                 	db	58	;':'
  1626  00F884  3A                 	db	58	;':'
  1627  00F885  3A                 	db	58	;':'
  1628  00F886  3A                 	db	58	;':'
  1629  00F887  3A                 	db	58	;':'
  1630  00F888  3A                 	db	58	;':'
  1631  00F889  3A                 	db	58	;':'
  1632  00F88A  3A                 	db	58	;':'
  1633  00F88B  3A                 	db	58	;':'
  1634  00F88C  3A                 	db	58	;':'
  1635  00F88D  3A                 	db	58	;':'
  1636  00F88E  3A                 	db	58	;':'
  1637  00F88F  3A                 	db	58	;':'
  1638  00F890  3A                 	db	58	;':'
  1639  00F891  3A                 	db	58	;':'
  1640  00F892  3A                 	db	58	;':'
  1641  00F893  3A                 	db	58	;':'
  1642  00F894  3A                 	db	58	;':'
  1643  00F895  3A                 	db	58	;':'
  1644  00F896  3A                 	db	58	;':'
  1645  00F897  3A                 	db	58	;':'
  1646  00F898  3A                 	db	58	;':'
  1647  00F899  3A                 	db	58	;':'
  1648  00F89A  3A                 	db	58	;':'
  1649  00F89B  3A                 	db	58	;':'
  1650  00F89C  3A                 	db	58	;':'
  1651  00F89D  3A                 	db	58	;':'
  1652  00F89E  3F                 	db	63	;'?'
  1653  00F89F  3F                 	db	63	;'?'
  1654  00F8A0  3F                 	db	63	;'?'
  1655  00F8A1  2E                 	db	46
  1656  00F8A2  2E                 	db	46
  1657  00F8A3  0D                 	db	13
  1658  00F8A4  0A                 	db	10
  1659  00F8A5  00                 	db	0
  1660  00F8A6                     STR_91:
  1661  00F8A6  2E                 	db	46
  1662  00F8A7  2E                 	db	46
  1663  00F8A8  3F                 	db	63	;'?'
  1664  00F8A9  3F                 	db	63	;'?'
  1665  00F8AA  3F                 	db	63	;'?'
  1666  00F8AB  3F                 	db	63	;'?'
  1667  00F8AC  3A                 	db	58	;':'
  1668  00F8AD  3A                 	db	58	;':'
  1669  00F8AE  3A                 	db	58	;':'
  1670  00F8AF  3A                 	db	58	;':'
  1671  00F8B0  3A                 	db	58	;':'
  1672  00F8B1  3A                 	db	58	;':'
  1673  00F8B2  3A                 	db	58	;':'
  1674  00F8B3  3A                 	db	58	;':'
  1675  00F8B4  3A                 	db	58	;':'
  1676  00F8B5  3A                 	db	58	;':'
  1677  00F8B6  3A                 	db	58	;':'
  1678  00F8B7  3A                 	db	58	;':'
  1679  00F8B8  3A                 	db	58	;':'
  1680  00F8B9  3A                 	db	58	;':'
  1681  00F8BA  3A                 	db	58	;':'
  1682  00F8BB  3A                 	db	58	;':'
  1683  00F8BC  3A                 	db	58	;':'
  1684  00F8BD  3A                 	db	58	;':'
  1685  00F8BE  3A                 	db	58	;':'
  1686  00F8BF  3A                 	db	58	;':'
  1687  00F8C0  3A                 	db	58	;':'
  1688  00F8C1  3A                 	db	58	;':'
  1689  00F8C2  3F                 	db	63	;'?'
  1690  00F8C3  3F                 	db	63	;'?'
  1691  00F8C4  3F                 	db	63	;'?'
  1692  00F8C5  3A                 	db	58	;':'
  1693  00F8C6  3A                 	db	58	;':'
  1694  00F8C7  3A                 	db	58	;':'
  1695  00F8C8  3A                 	db	58	;':'
  1696  00F8C9  3A                 	db	58	;':'
  1697  00F8CA  3A                 	db	58	;':'
  1698  00F8CB  3A                 	db	58	;':'
  1699  00F8CC  3A                 	db	58	;':'
  1700  00F8CD  3A                 	db	58	;':'
  1701  00F8CE  3A                 	db	58	;':'
  1702  00F8CF  3A                 	db	58	;':'
  1703  00F8D0  3A                 	db	58	;':'
  1704  00F8D1  3A                 	db	58	;':'
  1705  00F8D2  3A                 	db	58	;':'
  1706  00F8D3  3A                 	db	58	;':'
  1707  00F8D4  3A                 	db	58	;':'
  1708  00F8D5  3A                 	db	58	;':'
  1709  00F8D6  3A                 	db	58	;':'
  1710  00F8D7  3A                 	db	58	;':'
  1711  00F8D8  3A                 	db	58	;':'
  1712  00F8D9  3A                 	db	58	;':'
  1713  00F8DA  3A                 	db	58	;':'
  1714  00F8DB  3F                 	db	63	;'?'
  1715  00F8DC  3F                 	db	63	;'?'
  1716  00F8DD  3F                 	db	63	;'?'
  1717  00F8DE  3F                 	db	63	;'?'
  1718  00F8DF  2E                 	db	46
  1719  00F8E0  2E                 	db	46
  1720  00F8E1  0D                 	db	13
  1721  00F8E2  0A                 	db	10
  1722  00F8E3  00                 	db	0
  1723  00F8E4                     STR_99:
  1724  00F8E4  2E                 	db	46
  1725  00F8E5  2E                 	db	46
  1726  00F8E6  2E                 	db	46
  1727  00F8E7  3F                 	db	63	;'?'
  1728  00F8E8  3F                 	db	63	;'?'
  1729  00F8E9  3F                 	db	63	;'?'
  1730  00F8EA  3F                 	db	63	;'?'
  1731  00F8EB  3F                 	db	63	;'?'
  1732  00F8EC  3F                 	db	63	;'?'
  1733  00F8ED  3F                 	db	63	;'?'
  1734  00F8EE  3F                 	db	63	;'?'
  1735  00F8EF  3F                 	db	63	;'?'
  1736  00F8F0  3F                 	db	63	;'?'
  1737  00F8F1  3F                 	db	63	;'?'
  1738  00F8F2  3F                 	db	63	;'?'
  1739  00F8F3  3F                 	db	63	;'?'
  1740  00F8F4  3F                 	db	63	;'?'
  1741  00F8F5  3F                 	db	63	;'?'
  1742  00F8F6  3F                 	db	63	;'?'
  1743  00F8F7  3F                 	db	63	;'?'
  1744  00F8F8  3F                 	db	63	;'?'
  1745  00F8F9  3F                 	db	63	;'?'
  1746  00F8FA  3F                 	db	63	;'?'
  1747  00F8FB  3F                 	db	63	;'?'
  1748  00F8FC  3F                 	db	63	;'?'
  1749  00F8FD  3F                 	db	63	;'?'
  1750  00F8FE  3F                 	db	63	;'?'
  1751  00F8FF  3F                 	db	63	;'?'
  1752  00F900  3F                 	db	63	;'?'
  1753  00F901  3F                 	db	63	;'?'
  1754  00F902  3F                 	db	63	;'?'
  1755  00F903  3F                 	db	63	;'?'
  1756  00F904  3F                 	db	63	;'?'
  1757  00F905  3F                 	db	63	;'?'
  1758  00F906  3F                 	db	63	;'?'
  1759  00F907  3F                 	db	63	;'?'
  1760  00F908  3F                 	db	63	;'?'
  1761  00F909  3F                 	db	63	;'?'
  1762  00F90A  3F                 	db	63	;'?'
  1763  00F90B  3F                 	db	63	;'?'
  1764  00F90C  3F                 	db	63	;'?'
  1765  00F90D  3F                 	db	63	;'?'
  1766  00F90E  3F                 	db	63	;'?'
  1767  00F90F  3F                 	db	63	;'?'
  1768  00F910  3F                 	db	63	;'?'
  1769  00F911  3F                 	db	63	;'?'
  1770  00F912  3F                 	db	63	;'?'
  1771  00F913  3F                 	db	63	;'?'
  1772  00F914  3F                 	db	63	;'?'
  1773  00F915  3F                 	db	63	;'?'
  1774  00F916  3F                 	db	63	;'?'
  1775  00F917  3F                 	db	63	;'?'
  1776  00F918  3F                 	db	63	;'?'
  1777  00F919  3F                 	db	63	;'?'
  1778  00F91A  3F                 	db	63	;'?'
  1779  00F91B  3F                 	db	63	;'?'
  1780  00F91C  3F                 	db	63	;'?'
  1781  00F91D  2E                 	db	46
  1782  00F91E  2E                 	db	46
  1783  00F91F  0D                 	db	13
  1784  00F920  0A                 	db	10
  1785  00F921  00                 	db	0
  1786  00F922                     STR_97:
  1787  00F922  2E                 	db	46
  1788  00F923  2E                 	db	46
  1789  00F924  3F                 	db	63	;'?'
  1790  00F925  3F                 	db	63	;'?'
  1791  00F926  3F                 	db	63	;'?'
  1792  00F927  3F                 	db	63	;'?'
  1793  00F928  3F                 	db	63	;'?'
  1794  00F929  3F                 	db	63	;'?'
  1795  00F92A  3F                 	db	63	;'?'
  1796  00F92B  3F                 	db	63	;'?'
  1797  00F92C  3F                 	db	63	;'?'
  1798  00F92D  3F                 	db	63	;'?'
  1799  00F92E  3F                 	db	63	;'?'
  1800  00F92F  3F                 	db	63	;'?'
  1801  00F930  3F                 	db	63	;'?'
  1802  00F931  3F                 	db	63	;'?'
  1803  00F932  3F                 	db	63	;'?'
  1804  00F933  3F                 	db	63	;'?'
  1805  00F934  3F                 	db	63	;'?'
  1806  00F935  3F                 	db	63	;'?'
  1807  00F936  3F                 	db	63	;'?'
  1808  00F937  3F                 	db	63	;'?'
  1809  00F938  3F                 	db	63	;'?'
  1810  00F939  3F                 	db	63	;'?'
  1811  00F93A  3F                 	db	63	;'?'
  1812  00F93B  3F                 	db	63	;'?'
  1813  00F93C  3F                 	db	63	;'?'
  1814  00F93D  3F                 	db	63	;'?'
  1815  00F93E  3F                 	db	63	;'?'
  1816  00F93F  3F                 	db	63	;'?'
  1817  00F940  3F                 	db	63	;'?'
  1818  00F941  3F                 	db	63	;'?'
  1819  00F942  3F                 	db	63	;'?'
  1820  00F943  3F                 	db	63	;'?'
  1821  00F944  3F                 	db	63	;'?'
  1822  00F945  3F                 	db	63	;'?'
  1823  00F946  3F                 	db	63	;'?'
  1824  00F947  3F                 	db	63	;'?'
  1825  00F948  3F                 	db	63	;'?'
  1826  00F949  3F                 	db	63	;'?'
  1827  00F94A  3F                 	db	63	;'?'
  1828  00F94B  3F                 	db	63	;'?'
  1829  00F94C  3F                 	db	63	;'?'
  1830  00F94D  3F                 	db	63	;'?'
  1831  00F94E  3F                 	db	63	;'?'
  1832  00F94F  3F                 	db	63	;'?'
  1833  00F950  3F                 	db	63	;'?'
  1834  00F951  3F                 	db	63	;'?'
  1835  00F952  3F                 	db	63	;'?'
  1836  00F953  3F                 	db	63	;'?'
  1837  00F954  3F                 	db	63	;'?'
  1838  00F955  3F                 	db	63	;'?'
  1839  00F956  3F                 	db	63	;'?'
  1840  00F957  3F                 	db	63	;'?'
  1841  00F958  3F                 	db	63	;'?'
  1842  00F959  3F                 	db	63	;'?'
  1843  00F95A  3F                 	db	63	;'?'
  1844  00F95B  2E                 	db	46
  1845  00F95C  2E                 	db	46
  1846  00F95D  0D                 	db	13
  1847  00F95E  0A                 	db	10
  1848  00F95F  00                 	db	0
  1849  00F960                     STR_92:
  1850  00F960  2E                 	db	46
  1851  00F961  3F                 	db	63	;'?'
  1852  00F962  3F                 	db	63	;'?'
  1853  00F963  3F                 	db	63	;'?'
  1854  00F964  3F                 	db	63	;'?'
  1855  00F965  3F                 	db	63	;'?'
  1856  00F966  3F                 	db	63	;'?'
  1857  00F967  3A                 	db	58	;':'
  1858  00F968  3A                 	db	58	;':'
  1859  00F969  3A                 	db	58	;':'
  1860  00F96A  3A                 	db	58	;':'
  1861  00F96B  3A                 	db	58	;':'
  1862  00F96C  3A                 	db	58	;':'
  1863  00F96D  3A                 	db	58	;':'
  1864  00F96E  3A                 	db	58	;':'
  1865  00F96F  3A                 	db	58	;':'
  1866  00F970  3A                 	db	58	;':'
  1867  00F971  3A                 	db	58	;':'
  1868  00F972  3A                 	db	58	;':'
  1869  00F973  3A                 	db	58	;':'
  1870  00F974  3A                 	db	58	;':'
  1871  00F975  3A                 	db	58	;':'
  1872  00F976  3A                 	db	58	;':'
  1873  00F977  3A                 	db	58	;':'
  1874  00F978  3A                 	db	58	;':'
  1875  00F979  3A                 	db	58	;':'
  1876  00F97A  3A                 	db	58	;':'
  1877  00F97B  3F                 	db	63	;'?'
  1878  00F97C  3F                 	db	63	;'?'
  1879  00F97D  3F                 	db	63	;'?'
  1880  00F97E  3F                 	db	63	;'?'
  1881  00F97F  3F                 	db	63	;'?'
  1882  00F980  3A                 	db	58	;':'
  1883  00F981  3A                 	db	58	;':'
  1884  00F982  3A                 	db	58	;':'
  1885  00F983  3A                 	db	58	;':'
  1886  00F984  3A                 	db	58	;':'
  1887  00F985  3A                 	db	58	;':'
  1888  00F986  3A                 	db	58	;':'
  1889  00F987  3A                 	db	58	;':'
  1890  00F988  3A                 	db	58	;':'
  1891  00F989  3A                 	db	58	;':'
  1892  00F98A  3A                 	db	58	;':'
  1893  00F98B  3A                 	db	58	;':'
  1894  00F98C  3A                 	db	58	;':'
  1895  00F98D  3A                 	db	58	;':'
  1896  00F98E  3A                 	db	58	;':'
  1897  00F98F  3A                 	db	58	;':'
  1898  00F990  3A                 	db	58	;':'
  1899  00F991  3A                 	db	58	;':'
  1900  00F992  3A                 	db	58	;':'
  1901  00F993  3A                 	db	58	;':'
  1902  00F994  3A                 	db	58	;':'
  1903  00F995  3F                 	db	63	;'?'
  1904  00F996  3F                 	db	63	;'?'
  1905  00F997  3F                 	db	63	;'?'
  1906  00F998  3F                 	db	63	;'?'
  1907  00F999  3F                 	db	63	;'?'
  1908  00F99A  2E                 	db	46
  1909  00F99B  0D                 	db	13
  1910  00F99C  0A                 	db	10
  1911  00F99D  00                 	db	0
  1912  00F99E                     STR_93:
  1913  00F99E  2E                 	db	46
  1914  00F99F  3F                 	db	63	;'?'
  1915  00F9A0  3F                 	db	63	;'?'
  1916  00F9A1  3F                 	db	63	;'?'
  1917  00F9A2  3F                 	db	63	;'?'
  1918  00F9A3  3F                 	db	63	;'?'
  1919  00F9A4  3F                 	db	63	;'?'
  1920  00F9A5  3F                 	db	63	;'?'
  1921  00F9A6  3A                 	db	58	;':'
  1922  00F9A7  3A                 	db	58	;':'
  1923  00F9A8  3A                 	db	58	;':'
  1924  00F9A9  3A                 	db	58	;':'
  1925  00F9AA  3A                 	db	58	;':'
  1926  00F9AB  3A                 	db	58	;':'
  1927  00F9AC  3A                 	db	58	;':'
  1928  00F9AD  3A                 	db	58	;':'
  1929  00F9AE  3A                 	db	58	;':'
  1930  00F9AF  3A                 	db	58	;':'
  1931  00F9B0  3A                 	db	58	;':'
  1932  00F9B1  3A                 	db	58	;':'
  1933  00F9B2  3A                 	db	58	;':'
  1934  00F9B3  3A                 	db	58	;':'
  1935  00F9B4  3A                 	db	58	;':'
  1936  00F9B5  3A                 	db	58	;':'
  1937  00F9B6  3A                 	db	58	;':'
  1938  00F9B7  3A                 	db	58	;':'
  1939  00F9B8  3F                 	db	63	;'?'
  1940  00F9B9  3F                 	db	63	;'?'
  1941  00F9BA  3F                 	db	63	;'?'
  1942  00F9BB  3F                 	db	63	;'?'
  1943  00F9BC  3F                 	db	63	;'?'
  1944  00F9BD  3F                 	db	63	;'?'
  1945  00F9BE  3F                 	db	63	;'?'
  1946  00F9BF  3A                 	db	58	;':'
  1947  00F9C0  3A                 	db	58	;':'
  1948  00F9C1  3A                 	db	58	;':'
  1949  00F9C2  3A                 	db	58	;':'
  1950  00F9C3  3A                 	db	58	;':'
  1951  00F9C4  3A                 	db	58	;':'
  1952  00F9C5  3A                 	db	58	;':'
  1953  00F9C6  3A                 	db	58	;':'
  1954  00F9C7  3A                 	db	58	;':'
  1955  00F9C8  3A                 	db	58	;':'
  1956  00F9C9  3A                 	db	58	;':'
  1957  00F9CA  3A                 	db	58	;':'
  1958  00F9CB  3A                 	db	58	;':'
  1959  00F9CC  3A                 	db	58	;':'
  1960  00F9CD  3A                 	db	58	;':'
  1961  00F9CE  3A                 	db	58	;':'
  1962  00F9CF  3A                 	db	58	;':'
  1963  00F9D0  3A                 	db	58	;':'
  1964  00F9D1  3A                 	db	58	;':'
  1965  00F9D2  3F                 	db	63	;'?'
  1966  00F9D3  3F                 	db	63	;'?'
  1967  00F9D4  3F                 	db	63	;'?'
  1968  00F9D5  3F                 	db	63	;'?'
  1969  00F9D6  3F                 	db	63	;'?'
  1970  00F9D7  3F                 	db	63	;'?'
  1971  00F9D8  2E                 	db	46
  1972  00F9D9  0D                 	db	13
  1973  00F9DA  0A                 	db	10
  1974  00F9DB  00                 	db	0
  1975  00F9DC                     STR_94:
  1976  00F9DC  2E                 	db	46
  1977  00F9DD  3F                 	db	63	;'?'
  1978  00F9DE  3F                 	db	63	;'?'
  1979  00F9DF  3F                 	db	63	;'?'
  1980  00F9E0  3F                 	db	63	;'?'
  1981  00F9E1  3F                 	db	63	;'?'
  1982  00F9E2  3F                 	db	63	;'?'
  1983  00F9E3  3F                 	db	63	;'?'
  1984  00F9E4  3A                 	db	58	;':'
  1985  00F9E5  3A                 	db	58	;':'
  1986  00F9E6  3A                 	db	58	;':'
  1987  00F9E7  3A                 	db	58	;':'
  1988  00F9E8  3A                 	db	58	;':'
  1989  00F9E9  3A                 	db	58	;':'
  1990  00F9EA  3A                 	db	58	;':'
  1991  00F9EB  3A                 	db	58	;':'
  1992  00F9EC  3A                 	db	58	;':'
  1993  00F9ED  3A                 	db	58	;':'
  1994  00F9EE  3A                 	db	58	;':'
  1995  00F9EF  3A                 	db	58	;':'
  1996  00F9F0  3A                 	db	58	;':'
  1997  00F9F1  3A                 	db	58	;':'
  1998  00F9F2  3A                 	db	58	;':'
  1999  00F9F3  3A                 	db	58	;':'
  2000  00F9F4  3A                 	db	58	;':'
  2001  00F9F5  3F                 	db	63	;'?'
  2002  00F9F6  3F                 	db	63	;'?'
  2003  00F9F7  3F                 	db	63	;'?'
  2004  00F9F8  3F                 	db	63	;'?'
  2005  00F9F9  3F                 	db	63	;'?'
  2006  00F9FA  3F                 	db	63	;'?'
  2007  00F9FB  3F                 	db	63	;'?'
  2008  00F9FC  3F                 	db	63	;'?'
  2009  00F9FD  3F                 	db	63	;'?'
  2010  00F9FE  3A                 	db	58	;':'
  2011  00F9FF  3A                 	db	58	;':'
  2012  00FA00  3A                 	db	58	;':'
  2013  00FA01  3A                 	db	58	;':'
  2014  00FA02  3A                 	db	58	;':'
  2015  00FA03  3A                 	db	58	;':'
  2016  00FA04  3A                 	db	58	;':'
  2017  00FA05  3A                 	db	58	;':'
  2018  00FA06  3A                 	db	58	;':'
  2019  00FA07  3A                 	db	58	;':'
  2020  00FA08  3A                 	db	58	;':'
  2021  00FA09  3A                 	db	58	;':'
  2022  00FA0A  3A                 	db	58	;':'
  2023  00FA0B  3A                 	db	58	;':'
  2024  00FA0C  3A                 	db	58	;':'
  2025  00FA0D  3A                 	db	58	;':'
  2026  00FA0E  3A                 	db	58	;':'
  2027  00FA0F  3A                 	db	58	;':'
  2028  00FA10  3F                 	db	63	;'?'
  2029  00FA11  3F                 	db	63	;'?'
  2030  00FA12  3F                 	db	63	;'?'
  2031  00FA13  3F                 	db	63	;'?'
  2032  00FA14  3F                 	db	63	;'?'
  2033  00FA15  3F                 	db	63	;'?'
  2034  00FA16  2E                 	db	46
  2035  00FA17  0D                 	db	13
  2036  00FA18  0A                 	db	10
  2037  00FA19  00                 	db	0
  2038  00FA1A                     STR_95:
  2039  00FA1A  2E                 	db	46
  2040  00FA1B  3F                 	db	63	;'?'
  2041  00FA1C  3F                 	db	63	;'?'
  2042  00FA1D  3F                 	db	63	;'?'
  2043  00FA1E  3F                 	db	63	;'?'
  2044  00FA1F  3F                 	db	63	;'?'
  2045  00FA20  3F                 	db	63	;'?'
  2046  00FA21  3F                 	db	63	;'?'
  2047  00FA22  3F                 	db	63	;'?'
  2048  00FA23  3A                 	db	58	;':'
  2049  00FA24  3A                 	db	58	;':'
  2050  00FA25  3A                 	db	58	;':'
  2051  00FA26  3A                 	db	58	;':'
  2052  00FA27  3A                 	db	58	;':'
  2053  00FA28  3A                 	db	58	;':'
  2054  00FA29  3A                 	db	58	;':'
  2055  00FA2A  3A                 	db	58	;':'
  2056  00FA2B  3A                 	db	58	;':'
  2057  00FA2C  3A                 	db	58	;':'
  2058  00FA2D  3A                 	db	58	;':'
  2059  00FA2E  3A                 	db	58	;':'
  2060  00FA2F  3A                 	db	58	;':'
  2061  00FA30  3A                 	db	58	;':'
  2062  00FA31  3A                 	db	58	;':'
  2063  00FA32  3F                 	db	63	;'?'
  2064  00FA33  3F                 	db	63	;'?'
  2065  00FA34  3F                 	db	63	;'?'
  2066  00FA35  3F                 	db	63	;'?'
  2067  00FA36  3F                 	db	63	;'?'
  2068  00FA37  3F                 	db	63	;'?'
  2069  00FA38  3F                 	db	63	;'?'
  2070  00FA39  3F                 	db	63	;'?'
  2071  00FA3A  3F                 	db	63	;'?'
  2072  00FA3B  3F                 	db	63	;'?'
  2073  00FA3C  3F                 	db	63	;'?'
  2074  00FA3D  3A                 	db	58	;':'
  2075  00FA3E  3A                 	db	58	;':'
  2076  00FA3F  3A                 	db	58	;':'
  2077  00FA40  3A                 	db	58	;':'
  2078  00FA41  3A                 	db	58	;':'
  2079  00FA42  3A                 	db	58	;':'
  2080  00FA43  3A                 	db	58	;':'
  2081  00FA44  3A                 	db	58	;':'
  2082  00FA45  3A                 	db	58	;':'
  2083  00FA46  3A                 	db	58	;':'
  2084  00FA47  3A                 	db	58	;':'
  2085  00FA48  3A                 	db	58	;':'
  2086  00FA49  3A                 	db	58	;':'
  2087  00FA4A  3A                 	db	58	;':'
  2088  00FA4B  3A                 	db	58	;':'
  2089  00FA4C  3F                 	db	63	;'?'
  2090  00FA4D  3F                 	db	63	;'?'
  2091  00FA4E  3F                 	db	63	;'?'
  2092  00FA4F  3F                 	db	63	;'?'
  2093  00FA50  3F                 	db	63	;'?'
  2094  00FA51  3F                 	db	63	;'?'
  2095  00FA52  3F                 	db	63	;'?'
  2096  00FA53  3F                 	db	63	;'?'
  2097  00FA54  2E                 	db	46
  2098  00FA55  0D                 	db	13
  2099  00FA56  0A                 	db	10
  2100  00FA57  00                 	db	0
  2101  00FA58                     STR_96:
  2102  00FA58  2E                 	db	46
  2103  00FA59  3F                 	db	63	;'?'
  2104  00FA5A  3F                 	db	63	;'?'
  2105  00FA5B  3F                 	db	63	;'?'
  2106  00FA5C  3F                 	db	63	;'?'
  2107  00FA5D  3F                 	db	63	;'?'
  2108  00FA5E  3F                 	db	63	;'?'
  2109  00FA5F  3F                 	db	63	;'?'
  2110  00FA60  3F                 	db	63	;'?'
  2111  00FA61  3F                 	db	63	;'?'
  2112  00FA62  3F                 	db	63	;'?'
  2113  00FA63  3A                 	db	58	;':'
  2114  00FA64  3A                 	db	58	;':'
  2115  00FA65  3A                 	db	58	;':'
  2116  00FA66  3A                 	db	58	;':'
  2117  00FA67  3A                 	db	58	;':'
  2118  00FA68  3A                 	db	58	;':'
  2119  00FA69  3A                 	db	58	;':'
  2120  00FA6A  3A                 	db	58	;':'
  2121  00FA6B  3A                 	db	58	;':'
  2122  00FA6C  3A                 	db	58	;':'
  2123  00FA6D  3F                 	db	63	;'?'
  2124  00FA6E  3F                 	db	63	;'?'
  2125  00FA6F  3F                 	db	63	;'?'
  2126  00FA70  3F                 	db	63	;'?'
  2127  00FA71  3F                 	db	63	;'?'
  2128  00FA72  3F                 	db	63	;'?'
  2129  00FA73  3F                 	db	63	;'?'
  2130  00FA74  3F                 	db	63	;'?'
  2131  00FA75  3F                 	db	63	;'?'
  2132  00FA76  3F                 	db	63	;'?'
  2133  00FA77  3F                 	db	63	;'?'
  2134  00FA78  3F                 	db	63	;'?'
  2135  00FA79  3F                 	db	63	;'?'
  2136  00FA7A  3F                 	db	63	;'?'
  2137  00FA7B  3F                 	db	63	;'?'
  2138  00FA7C  3F                 	db	63	;'?'
  2139  00FA7D  3F                 	db	63	;'?'
  2140  00FA7E  3A                 	db	58	;':'
  2141  00FA7F  3A                 	db	58	;':'
  2142  00FA80  3A                 	db	58	;':'
  2143  00FA81  3A                 	db	58	;':'
  2144  00FA82  3A                 	db	58	;':'
  2145  00FA83  3A                 	db	58	;':'
  2146  00FA84  3A                 	db	58	;':'
  2147  00FA85  3A                 	db	58	;':'
  2148  00FA86  3A                 	db	58	;':'
  2149  00FA87  3A                 	db	58	;':'
  2150  00FA88  3F                 	db	63	;'?'
  2151  00FA89  3F                 	db	63	;'?'
  2152  00FA8A  3F                 	db	63	;'?'
  2153  00FA8B  3F                 	db	63	;'?'
  2154  00FA8C  3F                 	db	63	;'?'
  2155  00FA8D  3F                 	db	63	;'?'
  2156  00FA8E  3F                 	db	63	;'?'
  2157  00FA8F  3F                 	db	63	;'?'
  2158  00FA90  3F                 	db	63	;'?'
  2159  00FA91  3F                 	db	63	;'?'
  2160  00FA92  2E                 	db	46
  2161  00FA93  0D                 	db	13
  2162  00FA94  0A                 	db	10
  2163  00FA95  00                 	db	0
  2164  00FA96                     STR_44:
  2165  00FA96  59                 	db	89	;'Y'
  2166  00FA97  6F                 	db	111	;'o'
  2167  00FA98  75                 	db	117	;'u'
  2168  00FA99  20                 	db	32
  2169  00FA9A  6D                 	db	109	;'m'
  2170  00FA9B  61                 	db	97	;'a'
  2171  00FA9C  79                 	db	121	;'y'
  2172  00FA9D  20                 	db	32
  2173  00FA9E  74                 	db	116	;'t'
  2174  00FA9F  65                 	db	101	;'e'
  2175  00FAA0  72                 	db	114	;'r'
  2176  00FAA1  6D                 	db	109	;'m'
  2177  00FAA2  69                 	db	105	;'i'
  2178  00FAA3  6E                 	db	110	;'n'
  2179  00FAA4  61                 	db	97	;'a'
  2180  00FAA5  74                 	db	116	;'t'
  2181  00FAA6  65                 	db	101	;'e'
  2182  00FAA7  20                 	db	32
  2183  00FAA8  73                 	db	115	;'s'
  2184  00FAA9  70                 	db	112	;'p'
  2185  00FAAA  6F                 	db	111	;'o'
  2186  00FAAB  6F                 	db	111	;'o'
  2187  00FAAC  6C                 	db	108	;'l'
  2188  00FAAD  69                 	db	105	;'i'
  2189  00FAAE  6E                 	db	110	;'n'
  2190  00FAAF  67                 	db	103	;'g'
  2191  00FAB0  20                 	db	32
  2192  00FAB1  61                 	db	97	;'a'
  2193  00FAB2  74                 	db	116	;'t'
  2194  00FAB3  20                 	db	32
  2195  00FAB4  61                 	db	97	;'a'
  2196  00FAB5  6E                 	db	110	;'n'
  2197  00FAB6  79                 	db	121	;'y'
  2198  00FAB7  74                 	db	116	;'t'
  2199  00FAB8  69                 	db	105	;'i'
  2200  00FAB9  6D                 	db	109	;'m'
  2201  00FABA  65                 	db	101	;'e'
  2202  00FABB  20                 	db	32
  2203  00FABC  77                 	db	119	;'w'
  2204  00FABD  69                 	db	105	;'i'
  2205  00FABE  74                 	db	116	;'t'
  2206  00FABF  68                 	db	104	;'h'
  2207  00FAC0  20                 	db	32
  2208  00FAC1  61                 	db	97	;'a'
  2209  00FAC2  20                 	db	32
  2210  00FAC3  6B                 	db	107	;'k'
  2211  00FAC4  65                 	db	101	;'e'
  2212  00FAC5  79                 	db	121	;'y'
  2213  00FAC6  20                 	db	32
  2214  00FAC7  70                 	db	112	;'p'
  2215  00FAC8  72                 	db	114	;'r'
  2216  00FAC9  65                 	db	101	;'e'
  2217  00FACA  73                 	db	115	;'s'
  2218  00FACB  73                 	db	115	;'s'
  2219  00FACC  2E                 	db	46
  2220  00FACD  0D                 	db	13
  2221  00FACE  0A                 	db	10
  2222  00FACF  00                 	db	0
  2223  00FAD0                     STR_47:
  2224  00FAD0  52                 	db	82	;'R'
  2225  00FAD1  69                 	db	105	;'i'
  2226  00FAD2  67                 	db	103	;'g'
  2227  00FAD3  68                 	db	104	;'h'
  2228  00FAD4  74                 	db	116	;'t'
  2229  00FAD5  20                 	db	32
  2230  00FAD6  6D                 	db	109	;'m'
  2231  00FAD7  6F                 	db	111	;'o'
  2232  00FAD8  75                 	db	117	;'u'
  2233  00FAD9  73                 	db	115	;'s'
  2234  00FADA  65                 	db	101	;'e'
  2235  00FADB  20                 	db	32
  2236  00FADC  63                 	db	99	;'c'
  2237  00FADD  6C                 	db	108	;'l'
  2238  00FADE  69                 	db	105	;'i'
  2239  00FADF  63                 	db	99	;'c'
  2240  00FAE0  6B                 	db	107	;'k'
  2241  00FAE1  20                 	db	32
  2242  00FAE2  6F                 	db	111	;'o'
  2243  00FAE3  6E                 	db	110	;'n'
  2244  00FAE4  20                 	db	32
  2245  00FAE5  74                 	db	116	;'t'
  2246  00FAE6  68                 	db	104	;'h'
  2247  00FAE7  65                 	db	101	;'e'
  2248  00FAE8  20                 	db	32
  2249  00FAE9  75                 	db	117	;'u'
  2250  00FAEA  70                 	db	112	;'p'
  2251  00FAEB  70                 	db	112	;'p'
  2252  00FAEC  65                 	db	101	;'e'
  2253  00FAED  72                 	db	114	;'r'
  2254  00FAEE  20                 	db	32
  2255  00FAEF  6C                 	db	108	;'l'
  2256  00FAF0  65                 	db	101	;'e'
  2257  00FAF1  66                 	db	102	;'f'
  2258  00FAF2  74                 	db	116	;'t'
  2259  00FAF3  20                 	db	32
  2260  00FAF4  6F                 	db	111	;'o'
  2261  00FAF5  66                 	db	102	;'f'
  2262  00FAF6  20                 	db	32
  2263  00FAF7  74                 	db	116	;'t'
  2264  00FAF8  68                 	db	104	;'h'
  2265  00FAF9  65                 	db	101	;'e'
  2266  00FAFA  20                 	db	32
  2267  00FAFB  50                 	db	80	;'P'
  2268  00FAFC  75                 	db	117	;'u'
  2269  00FAFD  54                 	db	84	;'T'
  2270  00FAFE  54                 	db	84	;'T'
  2271  00FAFF  59                 	db	89	;'Y'
  2272  00FB00  20                 	db	32
  2273  00FB01  77                 	db	119	;'w'
  2274  00FB02  69                 	db	105	;'i'
  2275  00FB03  6E                 	db	110	;'n'
  2276  00FB04  64                 	db	100	;'d'
  2277  00FB05  6F                 	db	111	;'o'
  2278  00FB06  77                 	db	119	;'w'
  2279  00FB07  0D                 	db	13
  2280  00FB08  0A                 	db	10
  2281  00FB09  00                 	db	0
  2282  00FB0A                     STR_25:
  2283  00FB0A  31                 	db	49	;'1'
  2284  00FB0B  3A                 	db	58	;':'
  2285  00FB0C  20                 	db	32
  2286  00FB0D  77                 	db	119	;'w'
  2287  00FB0E  72                 	db	114	;'r'
  2288  00FB0F  69                 	db	105	;'i'
  2289  00FB10  74                 	db	116	;'t'
  2290  00FB11  65                 	db	101	;'e'
  2291  00FB12  20                 	db	32
  2292  00FB13  61                 	db	97	;'a'
  2293  00FB14  20                 	db	32
  2294  00FB15  70                 	db	112	;'p'
  2295  00FB16  65                 	db	101	;'e'
  2296  00FB17  72                 	db	114	;'r'
  2297  00FB18  66                 	db	102	;'f'
  2298  00FB19  65                 	db	101	;'e'
  2299  00FB1A  63                 	db	99	;'c'
  2300  00FB1B  74                 	db	116	;'t'
  2301  00FB1C  20                 	db	32
  2302  00FB1D  32                 	db	50	;'2'
  2303  00FB1E  36                 	db	54	;'6'
  2304  00FB1F  20                 	db	32
  2305  00FB20  76                 	db	118	;'v'
  2306  00FB21  61                 	db	97	;'a'
  2307  00FB22  6C                 	db	108	;'l'
  2308  00FB23  75                 	db	117	;'u'
  2309  00FB24  65                 	db	101	;'e'
  2310  00FB25  20                 	db	32
  2311  00FB26  73                 	db	115	;'s'
  2312  00FB27  69                 	db	105	;'i'
  2313  00FB28  6E                 	db	110	;'n'
  2314  00FB29  65                 	db	101	;'e'
  2315  00FB2A  20                 	db	32
  2316  00FB2B  77                 	db	119	;'w'
  2317  00FB2C  61                 	db	97	;'a'
  2318  00FB2D  76                 	db	118	;'v'
  2319  00FB2E  65                 	db	101	;'e'
  2320  00FB2F  20                 	db	32
  2321  00FB30  74                 	db	116	;'t'
  2322  00FB31  6F                 	db	111	;'o'
  2323  00FB32  20                 	db	32
  2324  00FB33  74                 	db	116	;'t'
  2325  00FB34  68                 	db	104	;'h'
  2326  00FB35  65                 	db	101	;'e'
  2327  00FB36  20                 	db	32
  2328  00FB37  53                 	db	83	;'S'
  2329  00FB38  44                 	db	68	;'D'
  2330  00FB39  20                 	db	32
  2331  00FB3A  63                 	db	99	;'c'
  2332  00FB3B  61                 	db	97	;'a'
  2333  00FB3C  72                 	db	114	;'r'
  2334  00FB3D  64                 	db	100	;'d'
  2335  00FB3E  0D                 	db	13
  2336  00FB3F  0A                 	db	10
  2337  00FB40  00                 	db	0
  2338  00FB41                     STR_7:
  2339  00FB41  0D                 	db	13
  2340  00FB42  0A                 	db	10
  2341  00FB43  2D                 	db	45
  2342  00FB44  2D                 	db	45
  2343  00FB45  2D                 	db	45
  2344  00FB46  2D                 	db	45
  2345  00FB47  2D                 	db	45
  2346  00FB48  2D                 	db	45
  2347  00FB49  2D                 	db	45
  2348  00FB4A  2D                 	db	45
  2349  00FB4B  2D                 	db	45
  2350  00FB4C  2D                 	db	45
  2351  00FB4D  2D                 	db	45
  2352  00FB4E  2D                 	db	45
  2353  00FB4F  2D                 	db	45
  2354  00FB50  2D                 	db	45
  2355  00FB51  2D                 	db	45
  2356  00FB52  2D                 	db	45
  2357  00FB53  2D                 	db	45
  2358  00FB54  2D                 	db	45
  2359  00FB55  2D                 	db	45
  2360  00FB56  2D                 	db	45
  2361  00FB57  2D                 	db	45
  2362  00FB58  2D                 	db	45
  2363  00FB59  2D                 	db	45
  2364  00FB5A  2D                 	db	45
  2365  00FB5B  2D                 	db	45
  2366  00FB5C  2D                 	db	45
  2367  00FB5D  2D                 	db	45
  2368  00FB5E  2D                 	db	45
  2369  00FB5F  2D                 	db	45
  2370  00FB60  2D                 	db	45
  2371  00FB61  2D                 	db	45
  2372  00FB62  2D                 	db	45
  2373  00FB63  2D                 	db	45
  2374  00FB64  2D                 	db	45
  2375  00FB65  2D                 	db	45
  2376  00FB66  2D                 	db	45
  2377  00FB67  2D                 	db	45
  2378  00FB68  2D                 	db	45
  2379  00FB69  2D                 	db	45
  2380  00FB6A  2D                 	db	45
  2381  00FB6B  2D                 	db	45
  2382  00FB6C  2D                 	db	45
  2383  00FB6D  2D                 	db	45
  2384  00FB6E  2D                 	db	45
  2385  00FB6F  2D                 	db	45
  2386  00FB70  2D                 	db	45
  2387  00FB71  2D                 	db	45
  2388  00FB72  2D                 	db	45
  2389  00FB73  2D                 	db	45
  2390  00FB74  0D                 	db	13
  2391  00FB75  0A                 	db	10
  2392  00FB76  00                 	db	0
  2393  00FB77                     STR_50:
  2394  00FB77  53                 	db	83	;'S'
  2395  00FB78  65                 	db	101	;'e'
  2396  00FB79  6C                 	db	108	;'l'
  2397  00FB7A  65                 	db	101	;'e'
  2398  00FB7B  63                 	db	99	;'c'
  2399  00FB7C  74                 	db	116	;'t'
  2400  00FB7D  3A                 	db	58	;':'
  2401  00FB7E  20                 	db	32
  2402  00FB7F  20                 	db	32
  2403  00FB80  20                 	db	32
  2404  00FB81  20                 	db	32
  2405  00FB82  20                 	db	32
  2406  00FB83  53                 	db	83	;'S'
  2407  00FB84  65                 	db	101	;'e'
  2408  00FB85  73                 	db	115	;'s'
  2409  00FB86  73                 	db	115	;'s'
  2410  00FB87  69                 	db	105	;'i'
  2411  00FB88  6F                 	db	111	;'o'
  2412  00FB89  6E                 	db	110	;'n'
  2413  00FB8A  20                 	db	32
  2414  00FB8B  6C                 	db	108	;'l'
  2415  00FB8C  6F                 	db	111	;'o'
  2416  00FB8D  67                 	db	103	;'g'
  2417  00FB8E  67                 	db	103	;'g'
  2418  00FB8F  69                 	db	105	;'i'
  2419  00FB90  6E                 	db	110	;'n'
  2420  00FB91  67                 	db	103	;'g'
  2421  00FB92  3A                 	db	58	;':'
  2422  00FB93  20                 	db	32
  2423  00FB94  41                 	db	65	;'A'
  2424  00FB95  6C                 	db	108	;'l'
  2425  00FB96  6C                 	db	108	;'l'
  2426  00FB97  20                 	db	32
  2427  00FB98  73                 	db	115	;'s'
  2428  00FB99  65                 	db	101	;'e'
  2429  00FB9A  73                 	db	115	;'s'
  2430  00FB9B  73                 	db	115	;'s'
  2431  00FB9C  69                 	db	105	;'i'
  2432  00FB9D  6F                 	db	111	;'o'
  2433  00FB9E  6E                 	db	110	;'n'
  2434  00FB9F  20                 	db	32
  2435  00FBA0  6F                 	db	111	;'o'
  2436  00FBA1  75                 	db	117	;'u'
  2437  00FBA2  74                 	db	116	;'t'
  2438  00FBA3  70                 	db	112	;'p'
  2439  00FBA4  75                 	db	117	;'u'
  2440  00FBA5  74                 	db	116	;'t'
  2441  00FBA6  0D                 	db	13
  2442  00FBA7  0A                 	db	10
  2443  00FBA8  00                 	db	0
  2444  00FBA9                     STR_27:
  2445  00FBA9  2B                 	db	43
  2446  00FBAA  2F                 	db	47
  2447  00FBAB  2D                 	db	45
  2448  00FBAC  20                 	db	32
  2449  00FBAD  49                 	db	73	;'I'
  2450  00FBAE  6E                 	db	110	;'n'
  2451  00FBAF  63                 	db	99	;'c'
  2452  00FBB0  72                 	db	114	;'r'
  2453  00FBB1  65                 	db	101	;'e'
  2454  00FBB2  61                 	db	97	;'a'
  2455  00FBB3  73                 	db	115	;'s'
  2456  00FBB4  65                 	db	101	;'e'
  2457  00FBB5  2F                 	db	47
  2458  00FBB6  44                 	db	68	;'D'
  2459  00FBB7  65                 	db	101	;'e'
  2460  00FBB8  63                 	db	99	;'c'
  2461  00FBB9  72                 	db	114	;'r'
  2462  00FBBA  65                 	db	101	;'e'
  2463  00FBBB  61                 	db	97	;'a'
  2464  00FBBC  73                 	db	115	;'s'
  2465  00FBBD  65                 	db	101	;'e'
  2466  00FBBE  20                 	db	32
  2467  00FBBF  74                 	db	116	;'t'
  2468  00FBC0  68                 	db	104	;'h'
  2469  00FBC1  65                 	db	101	;'e'
  2470  00FBC2  20                 	db	32
  2471  00FBC3  73                 	db	115	;'s'
  2472  00FBC4  61                 	db	97	;'a'
  2473  00FBC5  6D                 	db	109	;'m'
  2474  00FBC6  70                 	db	112	;'p'
  2475  00FBC7  6C                 	db	108	;'l'
  2476  00FBC8  65                 	db	101	;'e'
  2477  00FBC9  20                 	db	32
  2478  00FBCA  72                 	db	114	;'r'
  2479  00FBCB  61                 	db	97	;'a'
  2480  00FBCC  74                 	db	116	;'t'
  2481  00FBCD  65                 	db	101	;'e'
  2482  00FBCE  20                 	db	32
  2483  00FBCF  62                 	db	98	;'b'
  2484  00FBD0  79                 	db	121	;'y'
  2485  00FBD1  20                 	db	32
  2486  00FBD2  31                 	db	49	;'1'
  2487  00FBD3  30                 	db	48	;'0'
  2488  00FBD4  20                 	db	32
  2489  00FBD5  75                 	db	117	;'u'
  2490  00FBD6  73                 	db	115	;'s'
  2491  00FBD7  0D                 	db	13
  2492  00FBD8  0A                 	db	10
  2493  00FBD9  00                 	db	0
  2494  00FBDA                     STR_56:
  2495  00FBDA  54                 	db	84	;'T'
  2496  00FBDB  6F                 	db	111	;'o'
  2497  00FBDC  20                 	db	32
  2498  00FBDD  63                 	db	99	;'c'
  2499  00FBDE  6C                 	db	108	;'l'
  2500  00FBDF  6F                 	db	111	;'o'
  2501  00FBE0  73                 	db	115	;'s'
  2502  00FBE1  65                 	db	101	;'e'
  2503  00FBE2  20                 	db	32
  2504  00FBE3  74                 	db	116	;'t'
  2505  00FBE4  68                 	db	104	;'h'
  2506  00FBE5  65                 	db	101	;'e'
  2507  00FBE6  20                 	db	32
  2508  00FBE7  66                 	db	102	;'f'
  2509  00FBE8  69                 	db	105	;'i'
  2510  00FBE9  6C                 	db	108	;'l'
  2511  00FBEA  65                 	db	101	;'e'
  2512  00FBEB  20                 	db	32
  2513  00FBEC  66                 	db	102	;'f'
  2514  00FBED  6F                 	db	111	;'o'
  2515  00FBEE  6C                 	db	108	;'l'
  2516  00FBEF  6C                 	db	108	;'l'
  2517  00FBF0  6F                 	db	111	;'o'
  2518  00FBF1  77                 	db	119	;'w'
  2519  00FBF2  20                 	db	32
  2520  00FBF3  74                 	db	116	;'t'
  2521  00FBF4  68                 	db	104	;'h'
  2522  00FBF5  65                 	db	101	;'e'
  2523  00FBF6  73                 	db	115	;'s'
  2524  00FBF7  65                 	db	101	;'e'
  2525  00FBF8  20                 	db	32
  2526  00FBF9  69                 	db	105	;'i'
  2527  00FBFA  6E                 	db	110	;'n'
  2528  00FBFB  73                 	db	115	;'s'
  2529  00FBFC  74                 	db	116	;'t'
  2530  00FBFD  72                 	db	114	;'r'
  2531  00FBFE  75                 	db	117	;'u'
  2532  00FBFF  63                 	db	99	;'c'
  2533  00FC00  74                 	db	116	;'t'
  2534  00FC01  69                 	db	105	;'i'
  2535  00FC02  6F                 	db	111	;'o'
  2536  00FC03  6E                 	db	110	;'n'
  2537  00FC04  73                 	db	115	;'s'
  2538  00FC05  3A                 	db	58	;':'
  2539  00FC06  20                 	db	32
  2540  00FC07  0D                 	db	13
  2541  00FC08  0A                 	db	10
  2542  00FC09  00                 	db	0
  2543  00FC0A                     STR_28:
  2544  00FC0A  57                 	db	87	;'W'
  2545  00FC0B  3A                 	db	58	;':'
  2546  00FC0C  20                 	db	32
  2547  00FC0D  57                 	db	87	;'W'
  2548  00FC0E  72                 	db	114	;'r'
  2549  00FC0F  69                 	db	105	;'i'
  2550  00FC10  74                 	db	116	;'t'
  2551  00FC11  65                 	db	101	;'e'
  2552  00FC12  20                 	db	32
  2553  00FC13  6D                 	db	109	;'m'
  2554  00FC14  69                 	db	105	;'i'
  2555  00FC15  63                 	db	99	;'c'
  2556  00FC16  72                 	db	114	;'r'
  2557  00FC17  6F                 	db	111	;'o'
  2558  00FC18  70                 	db	112	;'p'
  2559  00FC19  68                 	db	104	;'h'
  2560  00FC1A  6F                 	db	111	;'o'
  2561  00FC1B  6E                 	db	110	;'n'
  2562  00FC1C  65                 	db	101	;'e'
  2563  00FC1D  20                 	db	32
  2564  00FC1E  3D                 	db	61	;'='
  2565  00FC1F  3E                 	db	62	;'>'
  2566  00FC20  20                 	db	32
  2567  00FC21  53                 	db	83	;'S'
  2568  00FC22  44                 	db	68	;'D'
  2569  00FC23  20                 	db	32
  2570  00FC24  63                 	db	99	;'c'
  2571  00FC25  61                 	db	97	;'a'
  2572  00FC26  72                 	db	114	;'r'
  2573  00FC27  64                 	db	100	;'d'
  2574  00FC28  20                 	db	32
  2575  00FC29  61                 	db	97	;'a'
  2576  00FC2A  74                 	db	116	;'t'
  2577  00FC2B  20                 	db	32
  2578  00FC2C  31                 	db	49	;'1'
  2579  00FC2D  36                 	db	54	;'6'
  2580  00FC2E  30                 	db	48	;'0'
  2581  00FC2F  30                 	db	48	;'0'
  2582  00FC30  20                 	db	32
  2583  00FC31  75                 	db	117	;'u'
  2584  00FC32  73                 	db	115	;'s'
  2585  00FC33  0D                 	db	13
  2586  00FC34  0A                 	db	10
  2587  00FC35  00                 	db	0
  2588  00FC36                     STR_24:
  2589  00FC36  72                 	db	114	;'r'
  2590  00FC37  3A                 	db	58	;':'
  2591  00FC38  20                 	db	32
  2592  00FC39  72                 	db	114	;'r'
  2593  00FC3A  65                 	db	101	;'e'
  2594  00FC3B  61                 	db	97	;'a'
  2595  00FC3C  64                 	db	100	;'d'
  2596  00FC3D  20                 	db	32
  2597  00FC3E  61                 	db	97	;'a'
  2598  00FC3F  20                 	db	32
  2599  00FC40  62                 	db	98	;'b'
  2600  00FC41  6C                 	db	108	;'l'
  2601  00FC42  6F                 	db	111	;'o'
  2602  00FC43  63                 	db	99	;'c'
  2603  00FC44  6B                 	db	107	;'k'
  2604  00FC45  20                 	db	32
  2605  00FC46  6F                 	db	111	;'o'
  2606  00FC47  66                 	db	102	;'f'
  2607  00FC48  20                 	db	32
  2608  00FC49  25                 	db	37
  2609  00FC4A  64                 	db	100	;'d'
  2610  00FC4B  20                 	db	32
  2611  00FC4C  62                 	db	98	;'b'
  2612  00FC4D  79                 	db	121	;'y'
  2613  00FC4E  74                 	db	116	;'t'
  2614  00FC4F  65                 	db	101	;'e'
  2615  00FC50  73                 	db	115	;'s'
  2616  00FC51  20                 	db	32
  2617  00FC52  66                 	db	102	;'f'
  2618  00FC53  72                 	db	114	;'r'
  2619  00FC54  6F                 	db	111	;'o'
  2620  00FC55  6D                 	db	109	;'m'
  2621  00FC56  20                 	db	32
  2622  00FC57  53                 	db	83	;'S'
  2623  00FC58  44                 	db	68	;'D'
  2624  00FC59  20                 	db	32
  2625  00FC5A  63                 	db	99	;'c'
  2626  00FC5B  61                 	db	97	;'a'
  2627  00FC5C  72                 	db	114	;'r'
  2628  00FC5D  64                 	db	100	;'d'
  2629  00FC5E  0D                 	db	13
  2630  00FC5F  0A                 	db	10
  2631  00FC60  00                 	db	0
  2632  00FC61                     STR_4:
  2633  00FC61  4E                 	db	78	;'N'
  2634  00FC62  6F                 	db	111	;'o'
  2635  00FC63  20                 	db	32
  2636  00FC64  63                 	db	99	;'c'
  2637  00FC65  6F                 	db	111	;'o'
  2638  00FC66  6E                 	db	110	;'n'
  2639  00FC67  66                 	db	102	;'f'
  2640  00FC68  69                 	db	105	;'i'
  2641  00FC69  67                 	db	103	;'g'
  2642  00FC6A  75                 	db	117	;'u'
  2643  00FC6B  72                 	db	114	;'r'
  2644  00FC6C  61                 	db	97	;'a'
  2645  00FC6D  74                 	db	116	;'t'
  2646  00FC6E  69                 	db	105	;'i'
  2647  00FC6F  6F                 	db	111	;'o'
  2648  00FC70  6E                 	db	110	;'n'
  2649  00FC71  20                 	db	32
  2650  00FC72  6F                 	db	111	;'o'
  2651  00FC73  66                 	db	102	;'f'
  2652  00FC74  20                 	db	32
  2653  00FC75  64                 	db	100	;'d'
  2654  00FC76  65                 	db	101	;'e'
  2655  00FC77  76                 	db	118	;'v'
  2656  00FC78  65                 	db	101	;'e'
  2657  00FC79  6C                 	db	108	;'l'
  2658  00FC7A  6F                 	db	111	;'o'
  2659  00FC7B  70                 	db	112	;'p'
  2660  00FC7C  6D                 	db	109	;'m'
  2661  00FC7D  65                 	db	101	;'e'
  2662  00FC7E  6E                 	db	110	;'n'
  2663  00FC7F  74                 	db	116	;'t'
  2664  00FC80  20                 	db	32
  2665  00FC81  62                 	db	98	;'b'
  2666  00FC82  6F                 	db	111	;'o'
  2667  00FC83  61                 	db	97	;'a'
  2668  00FC84  72                 	db	114	;'r'
  2669  00FC85  64                 	db	100	;'d'
  2670  00FC86  0D                 	db	13
  2671  00FC87  0A                 	db	10
  2672  00FC88  00                 	db	0
  2673  00FC89                     STR_60:
  2674  00FC89  53                 	db	83	;'S'
  2675  00FC8A  65                 	db	101	;'e'
  2676  00FC8B  6C                 	db	108	;'l'
  2677  00FC8C  65                 	db	101	;'e'
  2678  00FC8D  63                 	db	99	;'c'
  2679  00FC8E  74                 	db	116	;'t'
  2680  00FC8F  3A                 	db	58	;':'
  2681  00FC90  20                 	db	32
  2682  00FC91  20                 	db	32
  2683  00FC92  20                 	db	32
  2684  00FC93  20                 	db	32
  2685  00FC94  20                 	db	32
  2686  00FC95  53                 	db	83	;'S'
  2687  00FC96  65                 	db	101	;'e'
  2688  00FC97  73                 	db	115	;'s'
  2689  00FC98  73                 	db	115	;'s'
  2690  00FC99  69                 	db	105	;'i'
  2691  00FC9A  6F                 	db	111	;'o'
  2692  00FC9B  6E                 	db	110	;'n'
  2693  00FC9C  20                 	db	32
  2694  00FC9D  20                 	db	32
  2695  00FC9E  6C                 	db	108	;'l'
  2696  00FC9F  6F                 	db	111	;'o'
  2697  00FCA0  67                 	db	103	;'g'
  2698  00FCA1  67                 	db	103	;'g'
  2699  00FCA2  69                 	db	105	;'i'
  2700  00FCA3  6E                 	db	110	;'n'
  2701  00FCA4  67                 	db	103	;'g'
  2702  00FCA5  3A                 	db	58	;':'
  2703  00FCA6  20                 	db	32
  2704  00FCA7  4E                 	db	78	;'N'
  2705  00FCA8  6F                 	db	111	;'o'
  2706  00FCA9  6E                 	db	110	;'n'
  2707  00FCAA  65                 	db	101	;'e'
  2708  00FCAB  0D                 	db	13
  2709  00FCAC  0A                 	db	10
  2710  00FCAD  00                 	db	0
  2711  00FCAE                     STR_23:
  2712  00FCAE  61                 	db	97	;'a'
  2713  00FCAF  2F                 	db	47
  2714  00FCB0  41                 	db	65	;'A'
  2715  00FCB1  20                 	db	32
  2716  00FCB2  64                 	db	100	;'d'
  2717  00FCB3  65                 	db	101	;'e'
  2718  00FCB4  63                 	db	99	;'c'
  2719  00FCB5  72                 	db	114	;'r'
  2720  00FCB6  65                 	db	101	;'e'
  2721  00FCB7  61                 	db	97	;'a'
  2722  00FCB8  73                 	db	115	;'s'
  2723  00FCB9  65                 	db	101	;'e'
  2724  00FCBA  2F                 	db	47
  2725  00FCBB  69                 	db	105	;'i'
  2726  00FCBC  6E                 	db	110	;'n'
  2727  00FCBD  63                 	db	99	;'c'
  2728  00FCBE  72                 	db	114	;'r'
  2729  00FCBF  65                 	db	101	;'e'
  2730  00FCC0  61                 	db	97	;'a'
  2731  00FCC1  73                 	db	115	;'s'
  2732  00FCC2  65                 	db	101	;'e'
  2733  00FCC3  20                 	db	32
  2734  00FCC4  72                 	db	114	;'r'
  2735  00FCC5  65                 	db	101	;'e'
  2736  00FCC6  61                 	db	97	;'a'
  2737  00FCC7  64                 	db	100	;'d'
  2738  00FCC8  20                 	db	32
  2739  00FCC9  61                 	db	97	;'a'
  2740  00FCCA  64                 	db	100	;'d'
  2741  00FCCB  64                 	db	100	;'d'
  2742  00FCCC  72                 	db	114	;'r'
  2743  00FCCD  65                 	db	101	;'e'
  2744  00FCCE  73                 	db	115	;'s'
  2745  00FCCF  73                 	db	115	;'s'
  2746  00FCD0  0D                 	db	13
  2747  00FCD1  0A                 	db	10
  2748  00FCD2  00                 	db	0
  2749  00FCD3                     STR_55:
  2750  00FCD3  53                 	db	83	;'S'
  2751  00FCD4  70                 	db	112	;'p'
  2752  00FCD5  6F                 	db	111	;'o'
  2753  00FCD6  6F                 	db	111	;'o'
  2754  00FCD7  6C                 	db	108	;'l'
  2755  00FCD8  65                 	db	101	;'e'
  2756  00FCD9  64                 	db	100	;'d'
  2757  00FCDA  20                 	db	32
  2758  00FCDB  25                 	db	37
  2759  00FCDC  75                 	db	117	;'u'
  2760  00FCDD  20                 	db	32
  2761  00FCDE  6F                 	db	111	;'o'
  2762  00FCDF  75                 	db	117	;'u'
  2763  00FCE0  74                 	db	116	;'t'
  2764  00FCE1  20                 	db	32
  2765  00FCE2  6F                 	db	111	;'o'
  2766  00FCE3  66                 	db	102	;'f'
  2767  00FCE4  20                 	db	32
  2768  00FCE5  74                 	db	116	;'t'
  2769  00FCE6  68                 	db	104	;'h'
  2770  00FCE7  65                 	db	101	;'e'
  2771  00FCE8  20                 	db	32
  2772  00FCE9  25                 	db	37
  2773  00FCEA  75                 	db	117	;'u'
  2774  00FCEB  20                 	db	32
  2775  00FCEC  62                 	db	98	;'b'
  2776  00FCED  6C                 	db	108	;'l'
  2777  00FCEE  6F                 	db	111	;'o'
  2778  00FCEF  63                 	db	99	;'c'
  2779  00FCF0  6B                 	db	107	;'k'
  2780  00FCF1  73                 	db	115	;'s'
  2781  00FCF2  2E                 	db	46
  2782  00FCF3  0D                 	db	13
  2783  00FCF4  0A                 	db	10
  2784  00FCF5  00                 	db	0
  2785  00FCF6                     STR_48:
  2786  00FCF6  53                 	db	83	;'S'
  2787  00FCF7  65                 	db	101	;'e'
  2788  00FCF8  6C                 	db	108	;'l'
  2789  00FCF9  65                 	db	101	;'e'
  2790  00FCFA  63                 	db	99	;'c'
  2791  00FCFB  74                 	db	116	;'t'
  2792  00FCFC  3A                 	db	58	;':'
  2793  00FCFD  20                 	db	32
  2794  00FCFE  20                 	db	32
  2795  00FCFF  20                 	db	32
  2796  00FD00  20                 	db	32
  2797  00FD01  20                 	db	32
  2798  00FD02  43                 	db	67	;'C'
  2799  00FD03  68                 	db	104	;'h'
  2800  00FD04  61                 	db	97	;'a'
  2801  00FD05  6E                 	db	110	;'n'
  2802  00FD06  67                 	db	103	;'g'
  2803  00FD07  65                 	db	101	;'e'
  2804  00FD08  20                 	db	32
  2805  00FD09  73                 	db	115	;'s'
  2806  00FD0A  65                 	db	101	;'e'
  2807  00FD0B  74                 	db	116	;'t'
  2808  00FD0C  74                 	db	116	;'t'
  2809  00FD0D  69                 	db	105	;'i'
  2810  00FD0E  6E                 	db	110	;'n'
  2811  00FD0F  67                 	db	103	;'g'
  2812  00FD10  73                 	db	115	;'s'
  2813  00FD11  2E                 	db	46
  2814  00FD12  2E                 	db	46
  2815  00FD13  2E                 	db	46
  2816  00FD14  0D                 	db	13
  2817  00FD15  0A                 	db	10
  2818  00FD16  00                 	db	0
  2819  00FD17                     STR_29:
  2820  00FD17  73                 	db	115	;'s'
  2821  00FD18  3A                 	db	58	;':'
  2822  00FD19  20                 	db	32
  2823  00FD1A  73                 	db	115	;'s'
  2824  00FD1B  70                 	db	112	;'p'
  2825  00FD1C  6F                 	db	111	;'o'
  2826  00FD1D  6F                 	db	111	;'o'
  2827  00FD1E  6C                 	db	108	;'l'
  2828  00FD1F  20                 	db	32
  2829  00FD20  6D                 	db	109	;'m'
  2830  00FD21  65                 	db	101	;'e'
  2831  00FD22  6D                 	db	109	;'m'
  2832  00FD23  6F                 	db	111	;'o'
  2833  00FD24  72                 	db	114	;'r'
  2834  00FD25  79                 	db	121	;'y'
  2835  00FD26  20                 	db	32
  2836  00FD27  74                 	db	116	;'t'
  2837  00FD28  6F                 	db	111	;'o'
  2838  00FD29  20                 	db	32
  2839  00FD2A  61                 	db	97	;'a'
  2840  00FD2B  20                 	db	32
  2841  00FD2C  63                 	db	99	;'c'
  2842  00FD2D  73                 	db	115	;'s'
  2843  00FD2E  76                 	db	118	;'v'
  2844  00FD2F  20                 	db	32
  2845  00FD30  66                 	db	102	;'f'
  2846  00FD31  69                 	db	105	;'i'
  2847  00FD32  6C                 	db	108	;'l'
  2848  00FD33  65                 	db	101	;'e'
  2849  00FD34  0D                 	db	13
  2850  00FD35  0A                 	db	10
  2851  00FD36  00                 	db	0
  2852  00FD37                     STR_34:
  2853  00FD37  57                 	db	87	;'W'
  2854  00FD38  72                 	db	114	;'r'
  2855  00FD39  69                 	db	105	;'i'
  2856  00FD3A  74                 	db	116	;'t'
  2857  00FD3B  65                 	db	101	;'e'
  2858  00FD3C  20                 	db	32
  2859  00FD3D  62                 	db	98	;'b'
  2860  00FD3E  6C                 	db	108	;'l'
  2861  00FD3F  6F                 	db	111	;'o'
  2862  00FD40  63                 	db	99	;'c'
  2863  00FD41  6B                 	db	107	;'k'
  2864  00FD42  20                 	db	32
  2865  00FD43  73                 	db	115	;'s'
  2866  00FD44  69                 	db	105	;'i'
  2867  00FD45  6E                 	db	110	;'n'
  2868  00FD46  20                 	db	32
  2869  00FD47  77                 	db	119	;'w'
  2870  00FD48  61                 	db	97	;'a'
  2871  00FD49  76                 	db	118	;'v'
  2872  00FD4A  65                 	db	101	;'e'
  2873  00FD4B  20                 	db	32
  2874  00FD4C  76                 	db	118	;'v'
  2875  00FD4D  61                 	db	97	;'a'
  2876  00FD4E  6C                 	db	108	;'l'
  2877  00FD4F  75                 	db	117	;'u'
  2878  00FD50  65                 	db	101	;'e'
  2879  00FD51  73                 	db	115	;'s'
  2880  00FD52  3A                 	db	58	;':'
  2881  00FD53  0D                 	db	13
  2882  00FD54  0A                 	db	10
  2883  00FD55  00                 	db	0
  2884  00FD56                     STR_40:
  2885  00FD56  53                 	db	83	;'S'
  2886  00FD57  74                 	db	116	;'t'
  2887  00FD58  61                 	db	97	;'a'
  2888  00FD59  74                 	db	116	;'t'
  2889  00FD5A  75                 	db	117	;'u'
  2890  00FD5B  73                 	db	115	;'s'
  2891  00FD5C  20                 	db	32
  2892  00FD5D  63                 	db	99	;'c'
  2893  00FD5E  6F                 	db	111	;'o'
  2894  00FD5F  64                 	db	100	;'d'
  2895  00FD60  65                 	db	101	;'e'
  2896  00FD61  3A                 	db	58	;':'
  2897  00FD62  20                 	db	32
  2898  00FD63  25                 	db	37
  2899  00FD64  64                 	db	100	;'d'
  2900  00FD65  20                 	db	32
  2901  00FD66  2D                 	db	45
  2902  00FD67  2D                 	db	45
  2903  00FD68  2D                 	db	45
  2904  00FD69  2D                 	db	45
  2905  00FD6A  20                 	db	32
  2906  00FD6B  41                 	db	65	;'A'
  2907  00FD6C  64                 	db	100	;'d'
  2908  00FD6D  64                 	db	100	;'d'
  2909  00FD6E  72                 	db	114	;'r'
  2910  00FD6F  65                 	db	101	;'e'
  2911  00FD70  73                 	db	115	;'s'
  2912  00FD71  73                 	db	115	;'s'
  2913  00FD72  3A                 	db	58	;':'
  2914  00FD73  20                 	db	32
  2915  00FD74  00                 	db	0
  2916  00FD75                     STR_35:
  2917  00FD75  41                 	db	65	;'A'
  2918  00FD76  6D                 	db	109	;'m'
  2919  00FD77  6F                 	db	111	;'o'
  2920  00FD78  75                 	db	117	;'u'
  2921  00FD79  6E                 	db	110	;'n'
  2922  00FD7A  74                 	db	116	;'t'
  2923  00FD7B  20                 	db	32
  2924  00FD7C  6F                 	db	111	;'o'
  2925  00FD7D  66                 	db	102	;'f'
  2926  00FD7E  20                 	db	32
  2927  00FD7F  62                 	db	98	;'b'
  2928  00FD80  6C                 	db	108	;'l'
  2929  00FD81  6F                 	db	111	;'o'
  2930  00FD82  63                 	db	99	;'c'
  2931  00FD83  6B                 	db	107	;'k'
  2932  00FD84  73                 	db	115	;'s'
  2933  00FD85  20                 	db	32
  2934  00FD86  73                 	db	115	;'s'
  2935  00FD87  74                 	db	116	;'t'
  2936  00FD88  6F                 	db	111	;'o'
  2937  00FD89  72                 	db	114	;'r'
  2938  00FD8A  65                 	db	101	;'e'
  2939  00FD8B  64                 	db	100	;'d'
  2940  00FD8C  3A                 	db	58	;':'
  2941  00FD8D  20                 	db	32
  2942  00FD8E  25                 	db	37
  2943  00FD8F  64                 	db	100	;'d'
  2944  00FD90  0D                 	db	13
  2945  00FD91  0A                 	db	10
  2946  00FD92  00                 	db	0
  2947  00FD93                     STR_62:
  2948  00FD93  55                 	db	85	;'U'
  2949  00FD94  6E                 	db	110	;'n'
  2950  00FD95  64                 	db	100	;'d'
  2951  00FD96  65                 	db	101	;'e'
  2952  00FD97  72                 	db	114	;'r'
  2953  00FD98  66                 	db	102	;'f'
  2954  00FD99  6C                 	db	108	;'l'
  2955  00FD9A  6F                 	db	111	;'o'
  2956  00FD9B  77                 	db	119	;'w'
  2957  00FD9C  65                 	db	101	;'e'
  2958  00FD9D  64                 	db	100	;'d'
  2959  00FD9E  20                 	db	32
  2960  00FD9F  74                 	db	116	;'t'
  2961  00FDA0  6F                 	db	111	;'o'
  2962  00FDA1  20                 	db	32
  2963  00FDA2  68                 	db	104	;'h'
  2964  00FDA3  69                 	db	105	;'i'
  2965  00FDA4  67                 	db	103	;'g'
  2966  00FDA5  68                 	db	104	;'h'
  2967  00FDA6  20                 	db	32
  2968  00FDA7  61                 	db	97	;'a'
  2969  00FDA8  64                 	db	100	;'d'
  2970  00FDA9  64                 	db	100	;'d'
  2971  00FDAA  72                 	db	114	;'r'
  2972  00FDAB  65                 	db	101	;'e'
  2973  00FDAC  73                 	db	115	;'s'
  2974  00FDAD  73                 	db	115	;'s'
  2975  00FDAE  0D                 	db	13
  2976  00FDAF  0A                 	db	10
  2977  00FDB0  00                 	db	0
  2978  00FDB1                     STR_8:
  2979  00FDB1  09                 	db	9
  2980  00FDB2  50                 	db	80	;'P'
  2981  00FDB3  6C                 	db	108	;'l'
  2982  00FDB4  61                 	db	97	;'a'
  2983  00FDB5  79                 	db	121	;'y'
  2984  00FDB6  20                 	db	32
  2985  00FDB7  6C                 	db	108	;'l'
  2986  00FDB8  65                 	db	101	;'e'
  2987  00FDB9  6E                 	db	110	;'n'
  2988  00FDBA  67                 	db	103	;'g'
  2989  00FDBB  74                 	db	116	;'t'
  2990  00FDBC  68                 	db	104	;'h'
  2991  00FDBD  20                 	db	32
  2992  00FDBE  69                 	db	105	;'i'
  2993  00FDBF  6E                 	db	110	;'n'
  2994  00FDC0  20                 	db	32
  2995  00FDC1  62                 	db	98	;'b'
  2996  00FDC2  6C                 	db	108	;'l'
  2997  00FDC3  6F                 	db	111	;'o'
  2998  00FDC4  63                 	db	99	;'c'
  2999  00FDC5  6B                 	db	107	;'k'
  3000  00FDC6  73                 	db	115	;'s'
  3001  00FDC7  3A                 	db	58	;':'
  3002  00FDC8  20                 	db	32
  3003  00FDC9  25                 	db	37
  3004  00FDCA  64                 	db	100	;'d'
  3005  00FDCB  0D                 	db	13
  3006  00FDCC  0A                 	db	10
  3007  00FDCD  00                 	db	0
  3008  00FDCE                     STR_115:
  3009  00FDCE  42                 	db	66	;'B'
  3010  00FDCF  6C                 	db	108	;'l'
  3011  00FDD0  6F                 	db	111	;'o'
  3012  00FDD1  63                 	db	99	;'c'
  3013  00FDD2  6B                 	db	107	;'k'
  3014  00FDD3  20                 	db	32
  3015  00FDD4  4C                 	db	76	;'L'
  3016  00FDD5  65                 	db	101	;'e'
  3017  00FDD6  6E                 	db	110	;'n'
  3018  00FDD7  67                 	db	103	;'g'
  3019  00FDD8  74                 	db	116	;'t'
  3020  00FDD9  68                 	db	104	;'h'
  3021  00FDDA  20                 	db	32
  3022  00FDDB  52                 	db	82	;'R'
  3023  00FDDC  65                 	db	101	;'e'
  3024  00FDDD  73                 	db	115	;'s'
  3025  00FDDE  70                 	db	112	;'p'
  3026  00FDDF  6F                 	db	111	;'o'
  3027  00FDE0  6E                 	db	110	;'n'
  3028  00FDE1  73                 	db	115	;'s'
  3029  00FDE2  65                 	db	101	;'e'
  3030  00FDE3  3A                 	db	58	;':'
  3031  00FDE4  20                 	db	32
  3032  00FDE5  25                 	db	37
  3033  00FDE6  78                 	db	120	;'x'
  3034  00FDE7  0D                 	db	13
  3035  00FDE8  0A                 	db	10
  3036  00FDE9  00                 	db	0
  3037  00FDEA                     STR_64:
  3038  00FDEA  4F                 	db	79	;'O'
  3039  00FDEB  76                 	db	118	;'v'
  3040  00FDEC  65                 	db	101	;'e'
  3041  00FDED  72                 	db	114	;'r'
  3042  00FDEE  66                 	db	102	;'f'
  3043  00FDEF  6C                 	db	108	;'l'
  3044  00FDF0  6F                 	db	111	;'o'
  3045  00FDF1  77                 	db	119	;'w'
  3046  00FDF2  65                 	db	101	;'e'
  3047  00FDF3  64                 	db	100	;'d'
  3048  00FDF4  20                 	db	32
  3049  00FDF5  74                 	db	116	;'t'
  3050  00FDF6  6F                 	db	111	;'o'
  3051  00FDF7  20                 	db	32
  3052  00FDF8  6C                 	db	108	;'l'
  3053  00FDF9  6F                 	db	111	;'o'
  3054  00FDFA  77                 	db	119	;'w'
  3055  00FDFB  20                 	db	32
  3056  00FDFC  61                 	db	97	;'a'
  3057  00FDFD  64                 	db	100	;'d'
  3058  00FDFE  64                 	db	100	;'d'
  3059  00FDFF  72                 	db	114	;'r'
  3060  00FE00  65                 	db	101	;'e'
  3061  00FE01  73                 	db	115	;'s'
  3062  00FE02  73                 	db	115	;'s'
  3063  00FE03  0D                 	db	13
  3064  00FE04  0A                 	db	10
  3065  00FE05  00                 	db	0
  3066  00FE06                     STR_113:
  3067  00FE06  43                 	db	67	;'C'
  3068  00FE07  4D                 	db	77	;'M'
  3069  00FE08  44                 	db	68	;'D'
  3070  00FE09  30                 	db	48	;'0'
  3071  00FE0A  2C                 	db	44
  3072  00FE0B  20                 	db	32
  3073  00FE0C  52                 	db	82	;'R'
  3074  00FE0D  65                 	db	101	;'e'
  3075  00FE0E  73                 	db	115	;'s'
  3076  00FE0F  65                 	db	101	;'e'
  3077  00FE10  74                 	db	116	;'t'
  3078  00FE11  20                 	db	32
  3079  00FE12  52                 	db	82	;'R'
  3080  00FE13  65                 	db	101	;'e'
  3081  00FE14  73                 	db	115	;'s'
  3082  00FE15  70                 	db	112	;'p'
  3083  00FE16  6F                 	db	111	;'o'
  3084  00FE17  6E                 	db	110	;'n'
  3085  00FE18  73                 	db	115	;'s'
  3086  00FE19  65                 	db	101	;'e'
  3087  00FE1A  3A                 	db	58	;':'
  3088  00FE1B  20                 	db	32
  3089  00FE1C  25                 	db	37
  3090  00FE1D  78                 	db	120	;'x'
  3091  00FE1E  0D                 	db	13
  3092  00FE1F  0A                 	db	10
  3093  00FE20  00                 	db	0
  3094  00FE21                     STR_39:
  3095  00FE21  4C                 	db	76	;'L'
  3096  00FE22  69                 	db	105	;'i'
  3097  00FE23  73                 	db	115	;'s'
  3098  00FE24  74                 	db	116	;'t'
  3099  00FE25  69                 	db	105	;'i'
  3100  00FE26  6E                 	db	110	;'n'
  3101  00FE27  67                 	db	103	;'g'
  3102  00FE28  20                 	db	32
  3103  00FE29  77                 	db	119	;'w'
  3104  00FE2A  72                 	db	114	;'r'
  3105  00FE2B  69                 	db	105	;'i'
  3106  00FE2C  74                 	db	116	;'t'
  3107  00FE2D  65                 	db	101	;'e'
  3108  00FE2E  20                 	db	32
  3109  00FE2F  66                 	db	102	;'f'
  3110  00FE30  61                 	db	97	;'a'
  3111  00FE31  69                 	db	105	;'i'
  3112  00FE32  6C                 	db	108	;'l'
  3113  00FE33  75                 	db	117	;'u'
  3114  00FE34  72                 	db	114	;'r'
  3115  00FE35  65                 	db	101	;'e'
  3116  00FE36  73                 	db	115	;'s'
  3117  00FE37  3A                 	db	58	;':'
  3118  00FE38  20                 	db	32
  3119  00FE39  0D                 	db	13
  3120  00FE3A  0A                 	db	10
  3121  00FE3B  00                 	db	0
  3122  00FE3C                     STR_114:
  3123  00FE3C  43                 	db	67	;'C'
  3124  00FE3D  4D                 	db	77	;'M'
  3125  00FE3E  44                 	db	68	;'D'
  3126  00FE3F  31                 	db	49	;'1'
  3127  00FE40  2C                 	db	44
  3128  00FE41  20                 	db	32
  3129  00FE42  49                 	db	73	;'I'
  3130  00FE43  6E                 	db	110	;'n'
  3131  00FE44  69                 	db	105	;'i'
  3132  00FE45  74                 	db	116	;'t'
  3133  00FE46  20                 	db	32
  3134  00FE47  52                 	db	82	;'R'
  3135  00FE48  65                 	db	101	;'e'
  3136  00FE49  73                 	db	115	;'s'
  3137  00FE4A  70                 	db	112	;'p'
  3138  00FE4B  6F                 	db	111	;'o'
  3139  00FE4C  6E                 	db	110	;'n'
  3140  00FE4D  73                 	db	115	;'s'
  3141  00FE4E  65                 	db	101	;'e'
  3142  00FE4F  3A                 	db	58	;':'
  3143  00FE50  20                 	db	32
  3144  00FE51  25                 	db	37
  3145  00FE52  78                 	db	120	;'x'
  3146  00FE53  0D                 	db	13
  3147  00FE54  0A                 	db	10
  3148  00FE55  00                 	db	0
  3149  00FE56                     STR_53:
  3150  00FE56  50                 	db	80	;'P'
  3151  00FE57  72                 	db	114	;'r'
  3152  00FE58  65                 	db	101	;'e'
  3153  00FE59  73                 	db	115	;'s'
  3154  00FE5A  73                 	db	115	;'s'
  3155  00FE5B  20                 	db	32
  3156  00FE5C  61                 	db	97	;'a'
  3157  00FE5D  6E                 	db	110	;'n'
  3158  00FE5E  79                 	db	121	;'y'
  3159  00FE5F  20                 	db	32
  3160  00FE60  6B                 	db	107	;'k'
  3161  00FE61  65                 	db	101	;'e'
  3162  00FE62  79                 	db	121	;'y'
  3163  00FE63  20                 	db	32
  3164  00FE64  74                 	db	116	;'t'
  3165  00FE65  6F                 	db	111	;'o'
  3166  00FE66  20                 	db	32
  3167  00FE67  73                 	db	115	;'s'
  3168  00FE68  74                 	db	116	;'t'
  3169  00FE69  61                 	db	97	;'a'
  3170  00FE6A  72                 	db	114	;'r'
  3171  00FE6B  74                 	db	116	;'t'
  3172  00FE6C  0D                 	db	13
  3173  00FE6D  0A                 	db	10
  3174  00FE6E  00                 	db	0
  3175  00FE6F                     STR_21:
  3176  00FE6F  69                 	db	105	;'i'
  3177  00FE70  3A                 	db	58	;':'
  3178  00FE71  20                 	db	32
  3179  00FE72  49                 	db	73	;'I'
  3180  00FE73  6E                 	db	110	;'n'
  3181  00FE74  69                 	db	105	;'i'
  3182  00FE75  74                 	db	116	;'t'
  3183  00FE76  69                 	db	105	;'i'
  3184  00FE77  61                 	db	97	;'a'
  3185  00FE78  6C                 	db	108	;'l'
  3186  00FE79  69                 	db	105	;'i'
  3187  00FE7A  7A                 	db	122	;'z'
  3188  00FE7B  65                 	db	101	;'e'
  3189  00FE7C  20                 	db	32
  3190  00FE7D  53                 	db	83	;'S'
  3191  00FE7E  44                 	db	68	;'D'
  3192  00FE7F  20                 	db	32
  3193  00FE80  63                 	db	99	;'c'
  3194  00FE81  61                 	db	97	;'a'
  3195  00FE82  72                 	db	114	;'r'
  3196  00FE83  64                 	db	100	;'d'
  3197  00FE84  0D                 	db	13
  3198  00FE85  0A                 	db	10
  3199  00FE86  00                 	db	0
  3200  00FE87                     STR_19:
  3201  00FE87  7A                 	db	122	;'z'
  3202  00FE88  3A                 	db	58	;':'
  3203  00FE89  20                 	db	32
  3204  00FE8A  43                 	db	67	;'C'
  3205  00FE8B  6C                 	db	108	;'l'
  3206  00FE8C  65                 	db	101	;'e'
  3207  00FE8D  61                 	db	97	;'a'
  3208  00FE8E  72                 	db	114	;'r'
  3209  00FE8F  20                 	db	32
  3210  00FE90  74                 	db	116	;'t'
  3211  00FE91  68                 	db	104	;'h'
  3212  00FE92  65                 	db	101	;'e'
  3213  00FE93  20                 	db	32
  3214  00FE94  74                 	db	116	;'t'
  3215  00FE95  65                 	db	101	;'e'
  3216  00FE96  72                 	db	114	;'r'
  3217  00FE97  6D                 	db	109	;'m'
  3218  00FE98  69                 	db	105	;'i'
  3219  00FE99  6E                 	db	110	;'n'
  3220  00FE9A  61                 	db	97	;'a'
  3221  00FE9B  6C                 	db	108	;'l'
  3222  00FE9C  0D                 	db	13
  3223  00FE9D  0A                 	db	10
  3224  00FE9E  00                 	db	0
  3225  00FE9F                     STR_36:
  3226  00FE9F  20                 	db	32
  3227  00FEA0  20                 	db	32
  3228  00FEA1  20                 	db	32
  3229  00FEA2  20                 	db	32
  3230  00FEA3  53                 	db	83	;'S'
  3231  00FEA4  74                 	db	116	;'t'
  3232  00FEA5  61                 	db	97	;'a'
  3233  00FEA6  74                 	db	116	;'t'
  3234  00FEA7  75                 	db	117	;'u'
  3235  00FEA8  73                 	db	115	;'s'
  3236  00FEA9  3A                 	db	58	;':'
  3237  00FEAA  20                 	db	32
  3238  00FEAB  20                 	db	32
  3239  00FEAC  20                 	db	32
  3240  00FEAD  20                 	db	32
  3241  00FEAE  20                 	db	32
  3242  00FEAF  25                 	db	37
  3243  00FEB0  30                 	db	48	;'0'
  3244  00FEB1  32                 	db	50	;'2'
  3245  00FEB2  78                 	db	120	;'x'
  3246  00FEB3  0D                 	db	13
  3247  00FEB4  0A                 	db	10
  3248  00FEB5  00                 	db	0
  3249  00FEB6                     STR_49:
  3250  00FEB6  53                 	db	83	;'S'
  3251  00FEB7  65                 	db	101	;'e'
  3252  00FEB8  6C                 	db	108	;'l'
  3253  00FEB9  65                 	db	101	;'e'
  3254  00FEBA  63                 	db	99	;'c'
  3255  00FEBB  74                 	db	116	;'t'
  3256  00FEBC  3A                 	db	58	;':'
  3257  00FEBD  20                 	db	32
  3258  00FEBE  20                 	db	32
  3259  00FEBF  20                 	db	32
  3260  00FEC0  20                 	db	32
  3261  00FEC1  20                 	db	32
  3262  00FEC2  4C                 	db	76	;'L'
  3263  00FEC3  6F                 	db	111	;'o'
  3264  00FEC4  67                 	db	103	;'g'
  3265  00FEC5  67                 	db	103	;'g'
  3266  00FEC6  69                 	db	105	;'i'
  3267  00FEC7  6E                 	db	110	;'n'
  3268  00FEC8  67                 	db	103	;'g'
  3269  00FEC9  0D                 	db	13
  3270  00FECA  0A                 	db	10
  3271  00FECB  00                 	db	0
  3272  00FECC                     STR_61:
  3273  00FECC  53                 	db	83	;'S'
  3274  00FECD  65                 	db	101	;'e'
  3275  00FECE  6C                 	db	108	;'l'
  3276  00FECF  65                 	db	101	;'e'
  3277  00FED0  63                 	db	99	;'c'
  3278  00FED1  74                 	db	116	;'t'
  3279  00FED2  3A                 	db	58	;':'
  3280  00FED3  20                 	db	32
  3281  00FED4  20                 	db	32
  3282  00FED5  20                 	db	32
  3283  00FED6  20                 	db	32
  3284  00FED7  20                 	db	32
  3285  00FED8  41                 	db	65	;'A'
  3286  00FED9  70                 	db	112	;'p'
  3287  00FEDA  70                 	db	112	;'p'
  3288  00FEDB  6C                 	db	108	;'l'
  3289  00FEDC  79                 	db	121	;'y'
  3290  00FEDD  20                 	db	32
  3291  00FEDE  0D                 	db	13
  3292  00FEDF  0A                 	db	10
  3293  00FEE0  00                 	db	0
  3294  00FEE1                     STR_2:
  3295  00FEE1  53                 	db	83	;'S'
  3296  00FEE2  44                 	db	68	;'D'
  3297  00FEE3  20                 	db	32
  3298  00FEE4  63                 	db	99	;'c'
  3299  00FEE5  61                 	db	97	;'a'
  3300  00FEE6  72                 	db	114	;'r'
  3301  00FEE7  64                 	db	100	;'d'
  3302  00FEE8  20                 	db	32
  3303  00FEE9  2B                 	db	43
  3304  00FEEA  20                 	db	32
  3305  00FEEB  70                 	db	112	;'p'
  3306  00FEEC  6C                 	db	108	;'l'
  3307  00FEED  61                 	db	97	;'a'
  3308  00FEEE  79                 	db	121	;'y'
  3309  00FEEF  62                 	db	98	;'b'
  3310  00FEF0  61                 	db	97	;'a'
  3311  00FEF1  63                 	db	99	;'c'
  3312  00FEF2  6B                 	db	107	;'k'
  3313  00FEF3  0D                 	db	13
  3314  00FEF4  0A                 	db	10
  3315  00FEF5  00                 	db	0
  3316  00FEF6                     STR_18:
  3317  00FEF6  5A                 	db	90	;'Z'
  3318  00FEF7  3A                 	db	58	;':'
  3319  00FEF8  20                 	db	32
  3320  00FEF9  52                 	db	82	;'R'
  3321  00FEFA  65                 	db	101	;'e'
  3322  00FEFB  73                 	db	115	;'s'
  3323  00FEFC  65                 	db	101	;'e'
  3324  00FEFD  74                 	db	116	;'t'
  3325  00FEFE  20                 	db	32
  3326  00FEFF  70                 	db	112	;'p'
  3327  00FF00  72                 	db	114	;'r'
  3328  00FF01  6F                 	db	111	;'o'
  3329  00FF02  63                 	db	99	;'c'
  3330  00FF03  65                 	db	101	;'e'
  3331  00FF04  73                 	db	115	;'s'
  3332  00FF05  73                 	db	115	;'s'
  3333  00FF06  6F                 	db	111	;'o'
  3334  00FF07  72                 	db	114	;'r'
  3335  00FF08  0D                 	db	13
  3336  00FF09  0A                 	db	10
  3337  00FF0A  00                 	db	0
  3338  00FF0B                     STR_14:
  3339  00FF0B  09                 	db	9
  3340  00FF0C  73                 	db	115	;'s'
  3341  00FF0D  61                 	db	97	;'a'
  3342  00FF0E  6D                 	db	109	;'m'
  3343  00FF0F  70                 	db	112	;'p'
  3344  00FF10  6C                 	db	108	;'l'
  3345  00FF11  65                 	db	101	;'e'
  3346  00FF12  20                 	db	32
  3347  00FF13  72                 	db	114	;'r'
  3348  00FF14  61                 	db	97	;'a'
  3349  00FF15  74                 	db	116	;'t'
  3350  00FF16  65                 	db	101	;'e'
  3351  00FF17  3A                 	db	58	;':'
  3352  00FF18  20                 	db	32
  3353  00FF19  25                 	db	37
  3354  00FF1A  64                 	db	100	;'d'
  3355  00FF1B  75                 	db	117	;'u'
  3356  00FF1C  73                 	db	115	;'s'
  3357  00FF1D  0D                 	db	13
  3358  00FF1E  0A                 	db	10
  3359  00FF1F  00                 	db	0
  3360  00FF20                     STR_63:
  3361  00FF20  44                 	db	68	;'D'
  3362  00FF21  65                 	db	101	;'e'
  3363  00FF22  63                 	db	99	;'c'
  3364  00FF23  72                 	db	114	;'r'
  3365  00FF24  65                 	db	101	;'e'
  3366  00FF25  61                 	db	97	;'a'
  3367  00FF26  73                 	db	115	;'s'
  3368  00FF27  65                 	db	101	;'e'
  3369  00FF28  64                 	db	100	;'d'
  3370  00FF29  20                 	db	32
  3371  00FF2A  61                 	db	97	;'a'
  3372  00FF2B  64                 	db	100	;'d'
  3373  00FF2C  64                 	db	100	;'d'
  3374  00FF2D  72                 	db	114	;'r'
  3375  00FF2E  65                 	db	101	;'e'
  3376  00FF2F  73                 	db	115	;'s'
  3377  00FF30  73                 	db	115	;'s'
  3378  00FF31  0D                 	db	13
  3379  00FF32  0A                 	db	10
  3380  00FF33  00                 	db	0
  3381  00FF34                     STR_65:
  3382  00FF34  49                 	db	73	;'I'
  3383  00FF35  6E                 	db	110	;'n'
  3384  00FF36  63                 	db	99	;'c'
  3385  00FF37  72                 	db	114	;'r'
  3386  00FF38  65                 	db	101	;'e'
  3387  00FF39  61                 	db	97	;'a'
  3388  00FF3A  73                 	db	115	;'s'
  3389  00FF3B  65                 	db	101	;'e'
  3390  00FF3C  64                 	db	100	;'d'
  3391  00FF3D  20                 	db	32
  3392  00FF3E  61                 	db	97	;'a'
  3393  00FF3F  64                 	db	100	;'d'
  3394  00FF40  64                 	db	100	;'d'
  3395  00FF41  72                 	db	114	;'r'
  3396  00FF42  65                 	db	101	;'e'
  3397  00FF43  73                 	db	115	;'s'
  3398  00FF44  73                 	db	115	;'s'
  3399  00FF45  0D                 	db	13
  3400  00FF46  0A                 	db	10
  3401  00FF47  00                 	db	0
  3402  00FF48                     STR_52:
  3403  00FF48  53                 	db	83	;'S'
  3404  00FF49  65                 	db	101	;'e'
  3405  00FF4A  6C                 	db	108	;'l'
  3406  00FF4B  65                 	db	101	;'e'
  3407  00FF4C  63                 	db	99	;'c'
  3408  00FF4D  74                 	db	116	;'t'
  3409  00FF4E  3A                 	db	58	;':'
  3410  00FF4F  20                 	db	32
  3411  00FF50  20                 	db	32
  3412  00FF51  20                 	db	32
  3413  00FF52  20                 	db	32
  3414  00FF53  20                 	db	32
  3415  00FF54  41                 	db	65	;'A'
  3416  00FF55  70                 	db	112	;'p'
  3417  00FF56  70                 	db	112	;'p'
  3418  00FF57  6C                 	db	108	;'l'
  3419  00FF58  79                 	db	121	;'y'
  3420  00FF59  0D                 	db	13
  3421  00FF5A  0A                 	db	10
  3422  00FF5B  00                 	db	0
  3423  00FF5C                     STR_66:
  3424  00FF5C  53                 	db	83	;'S'
  3425  00FF5D  44                 	db	68	;'D'
  3426  00FF5E  20                 	db	32
  3427  00FF5F  63                 	db	99	;'c'
  3428  00FF60  61                 	db	97	;'a'
  3429  00FF61  72                 	db	114	;'r'
  3430  00FF62  64                 	db	100	;'d'
  3431  00FF63  20                 	db	32
  3432  00FF64  61                 	db	97	;'a'
  3433  00FF65  64                 	db	100	;'d'
  3434  00FF66  64                 	db	100	;'d'
  3435  00FF67  72                 	db	114	;'r'
  3436  00FF68  65                 	db	101	;'e'
  3437  00FF69  73                 	db	115	;'s'
  3438  00FF6A  73                 	db	115	;'s'
  3439  00FF6B  3A                 	db	58	;':'
  3440  00FF6C  20                 	db	32
  3441  00FF6D  20                 	db	32
  3442  00FF6E  00                 	db	0
  3443  00FF6F                     STR_72:
  3444  00FF6F  55                 	db	85	;'U'
  3445  00FF70  6E                 	db	110	;'n'
  3446  00FF71  6B                 	db	107	;'k'
  3447  00FF72  6E                 	db	110	;'n'
  3448  00FF73  6F                 	db	111	;'o'
  3449  00FF74  77                 	db	119	;'w'
  3450  00FF75  6E                 	db	110	;'n'
  3451  00FF76  20                 	db	32
  3452  00FF77  6B                 	db	107	;'k'
  3453  00FF78  65                 	db	101	;'e'
  3454  00FF79  79                 	db	121	;'y'
  3455  00FF7A  20                 	db	32
  3456  00FF7B  25                 	db	37
  3457  00FF7C  63                 	db	99	;'c'
  3458  00FF7D  0D                 	db	13
  3459  00FF7E  0A                 	db	10
  3460  00FF7F  00                 	db	0
  3461  00FF80                     STR_73:
  3462  00FF80  20                 	db	32
  3463  00FF81  20                 	db	32
  3464  00FF82  20                 	db	32
  3465  00FF83  20                 	db	32
  3466  00FF84  41                 	db	65	;'A'
  3467  00FF85  64                 	db	100	;'d'
  3468  00FF86  64                 	db	100	;'d'
  3469  00FF87  72                 	db	114	;'r'
  3470  00FF88  65                 	db	101	;'e'
  3471  00FF89  73                 	db	115	;'s'
  3472  00FF8A  73                 	db	115	;'s'
  3473  00FF8B  3A                 	db	58	;':'
  3474  00FF8C  20                 	db	32
  3475  00FF8D  20                 	db	32
  3476  00FF8E  20                 	db	32
  3477  00FF8F  20                 	db	32
  3478  00FF90  00                 	db	0
  3479  00FF91                     STR_9:
  3480  00FF91  09                 	db	9
  3481  00FF92  73                 	db	115	;'s'
  3482  00FF93  64                 	db	100	;'d'
  3483  00FF94  43                 	db	67	;'C'
  3484  00FF95  61                 	db	97	;'a'
  3485  00FF96  72                 	db	114	;'r'
  3486  00FF97  64                 	db	100	;'d'
  3487  00FF98  41                 	db	65	;'A'
  3488  00FF99  64                 	db	100	;'d'
  3489  00FF9A  64                 	db	100	;'d'
  3490  00FF9B  72                 	db	114	;'r'
  3491  00FF9C  65                 	db	101	;'e'
  3492  00FF9D  73                 	db	115	;'s'
  3493  00FF9E  73                 	db	115	;'s'
  3494  00FF9F  3A                 	db	58	;':'
  3495  00FFA0  20                 	db	32
  3496  00FFA1  00                 	db	0
  3497  00FFA2                     STR_71:
  3498  00FFA2  52                 	db	82	;'R'
  3499  00FFA3  65                 	db	101	;'e'
  3500  00FFA4  61                 	db	97	;'a'
  3501  00FFA5  64                 	db	100	;'d'
  3502  00FFA6  20                 	db	32
  3503  00FFA7  62                 	db	98	;'b'
  3504  00FFA8  6C                 	db	108	;'l'
  3505  00FFA9  6F                 	db	111	;'o'
  3506  00FFAA  63                 	db	99	;'c'
  3507  00FFAB  6B                 	db	107	;'k'
  3508  00FFAC  3A                 	db	58	;':'
  3509  00FFAD  20                 	db	32
  3510  00FFAE  0D                 	db	13
  3511  00FFAF  0A                 	db	10
  3512  00FFB0  00                 	db	0
  3513  00FFB1                     STR_16:
  3514  00FFB1  3F                 	db	63	;'?'
  3515  00FFB2  3A                 	db	58	;':'
  3516  00FFB3  20                 	db	32
  3517  00FFB4  68                 	db	104	;'h'
  3518  00FFB5  65                 	db	101	;'e'
  3519  00FFB6  6C                 	db	108	;'l'
  3520  00FFB7  70                 	db	112	;'p'
  3521  00FFB8  20                 	db	32
  3522  00FFB9  6D                 	db	109	;'m'
  3523  00FFBA  65                 	db	101	;'e'
  3524  00FFBB  6E                 	db	110	;'n'
  3525  00FFBC  75                 	db	117	;'u'
  3526  00FFBD  0D                 	db	13
  3527  00FFBE  0A                 	db	10
  3528  00FFBF  00                 	db	0
  3529  00FFC0                     STR_1:
  3530  00FFC0  4C                 	db	76	;'L'
  3531  00FFC1  61                 	db	97	;'a'
  3532  00FFC2  62                 	db	98	;'b'
  3533  00FFC3  20                 	db	32
  3534  00FFC4  31                 	db	49	;'1'
  3535  00FFC5  30                 	db	48	;'0'
  3536  00FFC6  0D                 	db	13
  3537  00FFC7  0A                 	db	10
  3538  00FFC8  00                 	db	0
  3539  00FFC9                     STR_3:
  3540  00FFC9  44                 	db	68	;'D'
  3541  00FFCA  65                 	db	101	;'e'
  3542  00FFCB  76                 	db	118	;'v'
  3543  00FFCC  27                 	db	39
  3544  00FFCD  32                 	db	50	;'2'
  3545  00FFCE  31                 	db	49	;'1'
  3546  00FFCF  0D                 	db	13
  3547  00FFD0  0A                 	db	10
  3548  00FFD1  00                 	db	0
  3549  00FFD2                     STR_31:
  3550  00FFD2  6F                 	db	111	;'o'
  3551  00FFD3  3A                 	db	58	;':'
  3552  00FFD4  09                 	db	9
  3553  00FFD5  6F                 	db	111	;'o'
  3554  00FFD6  6B                 	db	107	;'k'
  3555  00FFD7  0D                 	db	13
  3556  00FFD8  0A                 	db	10
  3557  00FFD9  00                 	db	0
  3558  00FFDA                     STR_17:
  3559  00FFDA  6F                 	db	111	;'o'
  3560  00FFDB  3A                 	db	58	;':'
  3561  00FFDC  20                 	db	32
  3562  00FFDD  6B                 	db	107	;'k'
  3563  00FFDE  0D                 	db	13
  3564  00FFDF  0A                 	db	10
  3565  00FFE0  00                 	db	0
  3566  00FFE1                     STR_43:
  3567  00FFE1  25                 	db	37
  3568  00FFE2  30                 	db	48	;'0'
  3569  00FFE3  34                 	db	52	;'4'
  3570  00FFE4  78                 	db	120	;'x'
  3571  00FFE5  0D                 	db	13
  3572  00FFE6  0A                 	db	10
  3573  00FFE7  00                 	db	0
  3574  00FFE8                     STR_122:
  3575  00FFE8  25                 	db	37
  3576  00FFE9  30                 	db	48	;'0'
  3577  00FFEA  32                 	db	50	;'2'
  3578  00FFEB  78                 	db	120	;'x'
  3579  00FFEC  20                 	db	32
  3580  00FFED  00                 	db	0
  3581  00FFEE                     STR_10:
  3582  00FFEE  25                 	db	37
  3583  00FFEF  30                 	db	48	;'0'
  3584  00FFF0  34                 	db	52	;'4'
  3585  00FFF1  78                 	db	120	;'x'
  3586  00FFF2  00                 	db	0
  3587  00FFF3                     STR_116:
  3588  00FFF3  0D                 	db	13
  3589  00FFF4  0A                 	db	10
  3590  00FFF5  0A                 	db	10
  3591  00FFF6  00                 	db	0
  3592  00FFF7                     STR_120:
  3593  00FFF7  25                 	db	37
  3594  00FFF8  63                 	db	99	;'c'
  3595  00FFF9  00                 	db	0
  3596  00FFFA                     STR_5:
  3597  00FFFA  3E                 	db	62	;'>'
  3598  00FFFB  20                 	db	32
  3599  00FFFC  00                 	db	0
  3600  00FFFD                     STR_11:
  3601  00FFFD  3A                 	db	58	;':'
  3602  00FFFE  00                 	db	0
  3603  00FFFF  00                 	db	0	; dummy byte at the end
  3604  0000                     
  3605                           ; #config settings
  3606                           
  3607                           	psect	cinit
  3608  0030C8                     __pcinit:
  3609                           	callstack 0
  3610  0030C8                     start_initialization:
  3611                           	callstack 0
  3612  0030C8                     __initialization:
  3613                           	callstack 0
  3614                           
  3615                           ; Initialize objects allocated to BANK0 (4 bytes)
  3616                           ; load TBLPTR registers with __pidataBANK0
  3617  0030C8  0EEE               	movlw	low __pidataBANK0
  3618  0030CA  6EF6               	movwf	tblptrl,c
  3619  0030CC  0E37               	movlw	high __pidataBANK0
  3620  0030CE  6EF7               	movwf	tblptrh,c
  3621  0030D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3622  0030D2  6EF8               	movwf	tblptru,c
  3623  0030D4  EE00  F0D2         	lfsr	0,__pdataBANK0
  3624  0030D8  EE10 F004          	lfsr	1,4
  3625  0030DC                     copy_data0:
  3626  0030DC  0009               	tblrd		*+
  3627  0030DE  CFF5 FFEE          	movff	tablat,postinc0
  3628  0030E2  50E5               	movf	postdec1,w,c
  3629  0030E4  50E1               	movf	fsr1l,w,c
  3630  0030E6  E1FA               	bnz	copy_data0
  3631                           
  3632                           ; Initialize objects allocated to COMRAM (1 bytes)
  3633                           ; load TBLPTR registers with __pidataCOMRAM
  3634  0030E8  0EFC               	movlw	low __pidataCOMRAM
  3635  0030EA  6EF6               	movwf	tblptrl,c
  3636  0030EC  0E37               	movlw	high __pidataCOMRAM
  3637  0030EE  6EF7               	movwf	tblptrh,c
  3638  0030F0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3639  0030F2  6EF8               	movwf	tblptru,c
  3640  0030F4  0009               	tblrd		*+	;fetch initializer
  3641  0030F6  CFF5 F04C          	movff	tablat,__pdataCOMRAM
  3642                           
  3643                           ; Clear objects allocated to BIGRAM (2048 bytes)
  3644  0030FA  EE01  F0D5         	lfsr	0,__pbssBIGRAM
  3645  0030FE  EE18 F000          	lfsr	1,2048
  3646  003102                     clear_0:
  3647  003102  6AEE               	clrf	postinc0,c
  3648  003104  50E5               	movf	postdec1,w,c
  3649  003106  50E1               	movf	fsr1l,w,c
  3650  003108  E1FC               	bnz	clear_0
  3651  00310A  50E2               	movf	fsr1h,w,c
  3652  00310C  E1FA               	bnz	clear_0
  3653                           
  3654                           ; Clear objects allocated to BANK1 (160 bytes)
  3655  00310E  EE01  F000         	lfsr	0,__pbssBANK1
  3656  003112  0EA0               	movlw	160
  3657  003114                     clear_1:
  3658  003114  6AEE               	clrf	postinc0,c
  3659  003116  06E8               	decf	wreg,f,c
  3660  003118  E1FD               	bnz	clear_1
  3661                           
  3662                           ; Clear objects allocated to BANK0 (19 bytes)
  3663  00311A  EE00  F0BF         	lfsr	0,__pbssBANK0
  3664  00311E  0E13               	movlw	19
  3665  003120                     clear_2:
  3666  003120  6AEE               	clrf	postinc0,c
  3667  003122  06E8               	decf	wreg,f,c
  3668  003124  E1FD               	bnz	clear_2
  3669                           
  3670                           ; Clear objects allocated to COMRAM (17 bytes)
  3671  003126  EE00  F03B         	lfsr	0,__pbssCOMRAM
  3672  00312A  0E11               	movlw	17
  3673  00312C                     clear_3:
  3674  00312C  6AEE               	clrf	postinc0,c
  3675  00312E  06E8               	decf	wreg,f,c
  3676  003130  E1FD               	bnz	clear_3
  3677  003132                     end_of_initialization:
  3678                           	callstack 0
  3679  003132                     __end_of__initialization:
  3680                           	callstack 0
  3681  003132  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3682  003134  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3683  003136  0100               	movlb	0
  3684  003138  EF29  F000         	goto	_main	;jump to C main() function
  3685                           
  3686                           	psect	bssCOMRAM
  3687  00003B                     __pbssCOMRAM:
  3688                           	callstack 0
  3689  00003B                     _width:
  3690                           	callstack 0
  3691  00003B                     	ds	2
  3692  00003D                     _prec:
  3693                           	callstack 0
  3694  00003D                     	ds	2
  3695  00003F                     _flags:
  3696                           	callstack 0
  3697  00003F                     	ds	2
  3698  000041                     myTMR0ISR@bufferIndex:
  3699                           	callstack 0
  3700  000041                     	ds	2
  3701  000043                     _timer0ReloadVal:
  3702                           	callstack 0
  3703  000043                     	ds	2
  3704  000045                     _TMR0_InterruptHandler:
  3705                           	callstack 0
  3706  000045                     	ds	2
  3707  000047                     myTMR0ISR@state:
  3708                           	callstack 0
  3709  000047                     	ds	1
  3710  000048                     _stopPlayback:
  3711                           	callstack 0
  3712  000048                     	ds	1
  3713  000049                     _stopCollect:
  3714                           	callstack 0
  3715  000049                     	ds	1
  3716  00004A                     _startCollect:
  3717                           	callstack 0
  3718  00004A                     	ds	1
  3719  00004B                     _eusart1RxLastError:
  3720                           	callstack 0
  3721  00004B                     	ds	1
  3722                           
  3723                           	psect	dataCOMRAM
  3724  00004C                     __pdataCOMRAM:
  3725                           	callstack 0
  3726  00004C                     myTMR0ISR@useBuffer1:
  3727                           	callstack 0
  3728  00004C                     	ds	1
  3729                           
  3730                           	psect	bssBANK0
  3731  0000BF                     __pbssBANK0:
  3732                           	callstack 0
  3733  0000BF                     main@writeAddress:
  3734                           	callstack 0
  3735  0000BF                     	ds	4
  3736  0000C3                     _nout:
  3737                           	callstack 0
  3738  0000C3                     	ds	2
  3739  0000C5                     _ADC_InterruptHandler:
  3740                           	callstack 0
  3741  0000C5                     	ds	2
  3742  0000C7                     _EUSART1_ErrorHandler:
  3743                           	callstack 0
  3744  0000C7                     	ds	2
  3745  0000C9                     _EUSART1_OverrunErrorHandler:
  3746                           	callstack 0
  3747  0000C9                     	ds	2
  3748  0000CB                     _EUSART1_FramingErrorHandler:
  3749                           	callstack 0
  3750  0000CB                     	ds	2
  3751  0000CD                     main@sinIndex:
  3752                           	callstack 0
  3753  0000CD                     	ds	1
  3754  0000CE                     _doPlayback:
  3755                           	callstack 0
  3756  0000CE                     	ds	1
  3757  0000CF                     _collecting:
  3758                           	callstack 0
  3759  0000CF                     	ds	1
  3760  0000D0                     _buffer2Full:
  3761                           	callstack 0
  3762  0000D0                     	ds	1
  3763  0000D1                     _buffer1Full:
  3764                           	callstack 0
  3765  0000D1                     	ds	1
  3766                           
  3767                           	psect	dataBANK0
  3768  0000D2                     __pdataBANK0:
  3769                           	callstack 0
  3770  0000D2                     myTMR0ISR@buffer:
  3771                           	callstack 0
  3772  0000D2                     	ds	2
  3773  0000D4                     _sampleRate:
  3774                           	callstack 0
  3775  0000D4                     	ds	2
  3776                           
  3777                           	psect	bssBANK1
  3778  000100                     __pbssBANK1:
  3779                           	callstack 0
  3780  000100                     _writeFailureStatus:
  3781                           	callstack 0
  3782  000100                     	ds	128
  3783  000180                     _dbuf:
  3784                           	callstack 0
  3785  000180                     	ds	32
  3786                           
  3787                           	psect	bssBIGRAM
  3788  0001D5                     __pbssBIGRAM:
  3789                           	callstack 0
  3790  0001D5                     _writeFailureTable:
  3791                           	callstack 0
  3792  0001D5                     	ds	512
  3793  0003D5                     _sdCardBuffer2:
  3794                           	callstack 0
  3795  0003D5                     	ds	512
  3796  0005D5                     _sdCardBuffer1:
  3797                           	callstack 0
  3798  0005D5                     	ds	512
  3799  0007D5                     _sdCardBuffer:
  3800                           	callstack 0
  3801  0007D5                     	ds	512
  3802                           
  3803                           	psect	cstackBANK1
  3804  0001A0                     __pcstackBANK1:
  3805                           	callstack 0
  3806  0001A0                     	ds	1
  3807  0001A1                     main@numBlocks:
  3808                           	callstack 0
  3809                           
  3810                           ; 4 bytes @ 0x1
  3811  0001A1                     	ds	4
  3812  0001A5                     main@printVal:
  3813                           	callstack 0
  3814                           
  3815                           ; 2 bytes @ 0x5
  3816  0001A5                     	ds	2
  3817  0001A7                     main@printedBlocks:
  3818                           	callstack 0
  3819                           
  3820                           ; 4 bytes @ 0x7
  3821  0001A7                     	ds	4
  3822  0001AB                     main@addr:
  3823                           	callstack 0
  3824                           
  3825                           ; 4 bytes @ 0xB
  3826  0001AB                     	ds	4
  3827  0001AF                     main@endAddress:
  3828                           	callstack 0
  3829                           
  3830                           ; 4 bytes @ 0xF
  3831  0001AF                     	ds	4
  3832  0001B3                     main@i_1279:
  3833                           	callstack 0
  3834                           
  3835                           ; 2 bytes @ 0x13
  3836  0001B3                     	ds	2
  3837  0001B5                     main@i_1309:
  3838                           	callstack 0
  3839                           
  3840                           ; 2 bytes @ 0x15
  3841  0001B5                     	ds	2
  3842  0001B7                     main@i_1289:
  3843                           	callstack 0
  3844                           
  3845                           ; 1 bytes @ 0x17
  3846  0001B7                     	ds	1
  3847  0001B8                     main@address:
  3848                           	callstack 0
  3849                           
  3850                           ; 4 bytes @ 0x18
  3851  0001B8                     	ds	4
  3852  0001BC                     main@cmd:
  3853                           	callstack 0
  3854                           
  3855                           ; 1 bytes @ 0x1C
  3856  0001BC                     	ds	1
  3857  0001BD                     main@i:
  3858                           	callstack 0
  3859                           
  3860                           ; 2 bytes @ 0x1D
  3861  0001BD                     	ds	2
  3862  0001BF                     main@writeStartAddress:
  3863                           	callstack 0
  3864                           
  3865                           ; 4 bytes @ 0x1F
  3866  0001BF                     	ds	4
  3867  0001C3                     main@writeEndAddress:
  3868                           	callstack 0
  3869                           
  3870                           ; 4 bytes @ 0x23
  3871  0001C3                     	ds	4
  3872  0001C7                     main@readAddress:
  3873                           	callstack 0
  3874                           
  3875                           ; 4 bytes @ 0x27
  3876  0001C7                     	ds	4
  3877  0001CB                     main@sdCardAddress:
  3878                           	callstack 0
  3879                           
  3880                           ; 4 bytes @ 0x2B
  3881  0001CB                     	ds	4
  3882  0001CF                     main@failureIndex:
  3883                           	callstack 0
  3884                           
  3885                           ; 1 bytes @ 0x2F
  3886  0001CF                     	ds	1
  3887  0001D0                     main@status:
  3888                           	callstack 0
  3889                           
  3890                           ; 1 bytes @ 0x30
  3891  0001D0                     	ds	1
  3892  0001D1                     main@writeAddress_1285:
  3893                           	callstack 0
  3894                           
  3895                           ; 4 bytes @ 0x31
  3896  0001D1                     	ds	4
  3897                           
  3898                           	psect	cstackBANK0
  3899  000060                     __pcstackBANK0:
  3900                           	callstack 0
  3901  000060                     ??_dtoa:
  3902  000060                     ??_utoa:
  3903  000060                     ??_xtoa:
  3904                           
  3905                           ; 1 bytes @ 0x0
  3906  000060                     	ds	8
  3907  000068                     _dtoa$1980:
  3908                           	callstack 0
  3909  000068                     utoa@p:
  3910                           	callstack 0
  3911  000068                     _xtoa$1997:
  3912                           	callstack 0
  3913                           
  3914                           ; 2 bytes @ 0x8
  3915  000068                     	ds	2
  3916  00006A                     dtoa@p:
  3917                           	callstack 0
  3918  00006A                     utoa@w:
  3919                           	callstack 0
  3920  00006A                     _xtoa$1998:
  3921                           	callstack 0
  3922                           
  3923                           ; 2 bytes @ 0xA
  3924  00006A                     	ds	2
  3925  00006C                     dtoa@w:
  3926                           	callstack 0
  3927  00006C                     xtoa@p:
  3928                           	callstack 0
  3929  00006C                     utoa@n:
  3930                           	callstack 0
  3931                           
  3932                           ; 8 bytes @ 0xC
  3933  00006C                     	ds	2
  3934  00006E                     dtoa@s:
  3935                           	callstack 0
  3936  00006E                     xtoa@w:
  3937                           	callstack 0
  3938                           
  3939                           ; 2 bytes @ 0xE
  3940  00006E                     	ds	2
  3941  000070                     dtoa@n:
  3942                           	callstack 0
  3943  000070                     xtoa@n:
  3944                           	callstack 0
  3945                           
  3946                           ; 8 bytes @ 0x10
  3947  000070                     	ds	4
  3948  000074                     utoa@i:
  3949                           	callstack 0
  3950                           
  3951                           ; 2 bytes @ 0x14
  3952  000074                     	ds	4
  3953  000078                     dtoa@i:
  3954                           	callstack 0
  3955  000078                     xtoa@i:
  3956                           	callstack 0
  3957                           
  3958                           ; 2 bytes @ 0x18
  3959  000078                     	ds	2
  3960  00007A                     xtoa@c:
  3961                           	callstack 0
  3962                           
  3963                           ; 2 bytes @ 0x1A
  3964  00007A                     	ds	2
  3965  00007C                     ?_vfpfcnvrt:
  3966                           	callstack 0
  3967  00007C                     vfpfcnvrt@fp:
  3968                           	callstack 0
  3969                           
  3970                           ; 2 bytes @ 0x1C
  3971  00007C                     	ds	2
  3972  00007E                     vfpfcnvrt@fmt:
  3973                           	callstack 0
  3974                           
  3975                           ; 2 bytes @ 0x1E
  3976  00007E                     	ds	2
  3977  000080                     vfpfcnvrt@ap:
  3978                           	callstack 0
  3979                           
  3980                           ; 2 bytes @ 0x20
  3981  000080                     	ds	2
  3982  000082                     ??_vfpfcnvrt:
  3983                           
  3984                           ; 1 bytes @ 0x22
  3985  000082                     	ds	4
  3986  000086                     vfpfcnvrt@ll:
  3987                           	callstack 0
  3988                           
  3989                           ; 8 bytes @ 0x26
  3990  000086                     	ds	8
  3991  00008E                     vfpfcnvrt@done:
  3992                           	callstack 0
  3993                           
  3994                           ; 2 bytes @ 0x2E
  3995  00008E                     	ds	2
  3996  000090                     _vfpfcnvrt$2012:
  3997                           	callstack 0
  3998                           
  3999                           ; 2 bytes @ 0x30
  4000  000090                     	ds	2
  4001  000092                     vfpfcnvrt@llu:
  4002                           	callstack 0
  4003                           
  4004                           ; 8 bytes @ 0x32
  4005  000092                     	ds	8
  4006  00009A                     vfpfcnvrt@c:
  4007                           	callstack 0
  4008                           
  4009                           ; 1 bytes @ 0x3A
  4010  00009A                     	ds	1
  4011  00009B                     ?_vfprintf:
  4012                           	callstack 0
  4013  00009B                     vfprintf@fp:
  4014                           	callstack 0
  4015                           
  4016                           ; 2 bytes @ 0x3B
  4017  00009B                     	ds	2
  4018  00009D                     vfprintf@fmt:
  4019                           	callstack 0
  4020                           
  4021                           ; 2 bytes @ 0x3D
  4022  00009D                     	ds	2
  4023  00009F                     vfprintf@ap:
  4024                           	callstack 0
  4025                           
  4026                           ; 2 bytes @ 0x3F
  4027  00009F                     	ds	2
  4028  0000A1                     vfprintf@cfmt:
  4029                           	callstack 0
  4030                           
  4031                           ; 2 bytes @ 0x41
  4032  0000A1                     	ds	2
  4033  0000A3                     ?_printf:
  4034                           	callstack 0
  4035  0000A3                     printf@fmt:
  4036                           	callstack 0
  4037                           
  4038                           ; 2 bytes @ 0x43
  4039  0000A3                     	ds	12
  4040  0000AF                     printf@ap:
  4041                           	callstack 0
  4042                           
  4043                           ; 2 bytes @ 0x4F
  4044  0000AF                     	ds	2
  4045  0000B1                     SDCARD_Initialize@i:
  4046                           	callstack 0
  4047  0000B1                     hexDumpBuffer@sdCardBuffer:
  4048                           	callstack 0
  4049  0000B1                     printAddress@address:
  4050                           	callstack 0
  4051                           
  4052                           ; 4 bytes @ 0x51
  4053  0000B1                     	ds	2
  4054  0000B3                     ??_hexDumpBuffer:
  4055  0000B3                     SDCARD_Initialize@verbose:
  4056                           	callstack 0
  4057                           
  4058                           ; 1 bytes @ 0x53
  4059  0000B3                     	ds	1
  4060  0000B4                     SDCARD_Initialize@response:
  4061                           	callstack 0
  4062                           
  4063                           ; 1 bytes @ 0x54
  4064  0000B4                     	ds	1
  4065  0000B5                     hexDumpBuffer@j:
  4066                           	callstack 0
  4067                           
  4068                           ; 2 bytes @ 0x55
  4069  0000B5                     	ds	2
  4070  0000B7                     hexDumpBuffer@j_1440:
  4071                           	callstack 0
  4072                           
  4073                           ; 2 bytes @ 0x57
  4074  0000B7                     	ds	2
  4075  0000B9                     hexDumpBuffer@i:
  4076                           	callstack 0
  4077                           
  4078                           ; 2 bytes @ 0x59
  4079  0000B9                     	ds	2
  4080  0000BB                     ??_main:
  4081                           
  4082                           ; 1 bytes @ 0x5B
  4083  0000BB                     	ds	4
  4084                           
  4085                           	psect	cstackCOMRAM
  4086  000001                     __pcstackCOMRAM:
  4087                           	callstack 0
  4088  000001                     ?_TMR0_ReadTimer:
  4089                           	callstack 0
  4090  000001                     EPWM1_LoadDutyValue@dutyValue:
  4091                           	callstack 0
  4092                           
  4093                           ; 2 bytes @ 0x0
  4094  000001                     	ds	2
  4095  000003                     ??_EPWM1_LoadDutyValue:
  4096  000003                     ??_TMR0_ReadTimer:
  4097                           
  4098                           ; 1 bytes @ 0x2
  4099  000003                     	ds	2
  4100  000005                     TMR0_ReadTimer@readVal:
  4101                           	callstack 0
  4102                           
  4103                           ; 2 bytes @ 0x4
  4104  000005                     	ds	2
  4105  000007                     TMR0_ReadTimer@readValLow:
  4106                           	callstack 0
  4107                           
  4108                           ; 1 bytes @ 0x6
  4109  000007                     	ds	1
  4110  000008                     TMR0_ReadTimer@readValHigh:
  4111                           	callstack 0
  4112                           
  4113                           ; 1 bytes @ 0x7
  4114  000008                     	ds	1
  4115  000009                     i2TMR0_WriteTimer@timerVal:
  4116                           	callstack 0
  4117                           
  4118                           ; 2 bytes @ 0x8
  4119  000009                     	ds	2
  4120  00000B                     ??_myTMR0ISR:
  4121  00000B                     
  4122                           ; 1 bytes @ 0xA
  4123  00000B                     	ds	2
  4124  00000D                     myTMR0ISR@mic:
  4125                           	callstack 0
  4126                           
  4127                           ; 2 bytes @ 0xC
  4128  00000D                     	ds	2
  4129  00000F                     ??_INTERRUPT_InterruptManager:
  4130                           
  4131                           ; 1 bytes @ 0xE
  4132  00000F                     	ds	4
  4133  000013                     ??_SPI2_Open:
  4134  000013                     ?_strlen:
  4135                           	callstack 0
  4136  000013                     ?_isupper:
  4137                           	callstack 0
  4138  000013                     ?_isalpha:
  4139                           	callstack 0
  4140  000013                     ?_isdigit:
  4141                           	callstack 0
  4142  000013                     ?_isspace:
  4143                           	callstack 0
  4144  000013                     ?_islower:
  4145                           	callstack 0
  4146  000013                     ?___wmul:
  4147                           	callstack 0
  4148  000013                     ?_incrementAddress:
  4149                           	callstack 0
  4150  000013                     ?___aodiv:
  4151                           	callstack 0
  4152  000013                     ?___aomod:
  4153                           	callstack 0
  4154  000013                     ?___lodiv:
  4155                           	callstack 0
  4156  000013                     ?___lomod:
  4157                           	callstack 0
  4158  000013                     EUSART1_Write@txData:
  4159                           	callstack 0
  4160  000013                     SPI2_ExchangeByte@data:
  4161                           	callstack 0
  4162  000013                     EUSART1_SetFramingErrorHandler@interruptHandler:
  4163                           	callstack 0
  4164  000013                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  4165                           	callstack 0
  4166  000013                     EUSART1_SetErrorHandler@interruptHandler:
  4167                           	callstack 0
  4168  000013                     TMR0_WriteTimer@timerVal:
  4169                           	callstack 0
  4170  000013                     TMR0_SetInterruptHandler@InterruptHandler:
  4171                           	callstack 0
  4172  000013                     ___wmul@multiplier:
  4173                           	callstack 0
  4174  000013                     isalpha@c:
  4175                           	callstack 0
  4176  000013                     isdigit@c:
  4177                           	callstack 0
  4178  000013                     isspace@c:
  4179                           	callstack 0
  4180  000013                     isupper@c:
  4181                           	callstack 0
  4182  000013                     strlen@s:
  4183                           	callstack 0
  4184  000013                     islower@c:
  4185                           	callstack 0
  4186  000013                     incrementAddress@sdCardAddress:
  4187                           	callstack 0
  4188  000013                     ___aodiv@dividend:
  4189                           	callstack 0
  4190  000013                     ___aomod@dividend:
  4191                           	callstack 0
  4192  000013                     ___lodiv@dividend:
  4193                           	callstack 0
  4194  000013                     ___lomod@dividend:
  4195                           	callstack 0
  4196                           
  4197                           ; 8 bytes @ 0x12
  4198  000013                     	ds	1
  4199  000014                     putch@txData:
  4200                           	callstack 0
  4201  000014                     SPI2_Open@spi2UniqueConfiguration:
  4202                           	callstack 0
  4203  000014                     SDCARD_PollWriteComplete@status:
  4204                           	callstack 0
  4205  000014                     SDCARD_ReadBlock@addr:
  4206                           	callstack 0
  4207  000014                     SDCARD_WriteBlock@addr:
  4208                           	callstack 0
  4209                           
  4210                           ; 4 bytes @ 0x13
  4211  000014                     	ds	1
  4212  000015                     ??_isupper:
  4213  000015                     ??_isalpha:
  4214  000015                     ??_isdigit:
  4215  000015                     ??_isspace:
  4216  000015                     ??_islower:
  4217  000015                     ??_TMR0_Initialize:
  4218  000015                     ___wmul@multiplicand:
  4219                           	callstack 0
  4220  000015                     fputc@c:
  4221                           	callstack 0
  4222  000015                     strlen@a:
  4223                           	callstack 0
  4224                           
  4225                           ; 2 bytes @ 0x14
  4226  000015                     	ds	2
  4227  000017                     ___wmul@product:
  4228                           	callstack 0
  4229  000017                     fputc@fp:
  4230                           	callstack 0
  4231                           
  4232                           ; 2 bytes @ 0x16
  4233  000017                     	ds	1
  4234  000018                     SDCARD_ReadBlock@sdCardBuffer:
  4235                           	callstack 0
  4236  000018                     SDCARD_WriteBlock@sdCardBuffer:
  4237                           	callstack 0
  4238                           
  4239                           ; 2 bytes @ 0x17
  4240  000018                     	ds	1
  4241  000019                     ??_fputc:
  4242  000019                     ?_toupper:
  4243                           	callstack 0
  4244  000019                     _isspace$2062:
  4245                           	callstack 0
  4246  000019                     toupper@c:
  4247                           	callstack 0
  4248                           
  4249                           ; 2 bytes @ 0x18
  4250  000019                     	ds	1
  4251  00001A                     ?_atoi:
  4252                           	callstack 0
  4253  00001A                     SDCARD_ReadBlock@i:
  4254                           	callstack 0
  4255  00001A                     SDCARD_WriteBlock@i:
  4256                           	callstack 0
  4257  00001A                     atoi@s:
  4258                           	callstack 0
  4259                           
  4260                           ; 2 bytes @ 0x19
  4261  00001A                     	ds	1
  4262  00001B                     ??_toupper:
  4263  00001B                     ___aodiv@divisor:
  4264                           	callstack 0
  4265  00001B                     ___aomod@divisor:
  4266                           	callstack 0
  4267  00001B                     ___lodiv@divisor:
  4268                           	callstack 0
  4269  00001B                     ___lomod@divisor:
  4270                           	callstack 0
  4271                           
  4272                           ; 8 bytes @ 0x1A
  4273  00001B                     	ds	1
  4274  00001C                     ??_atoi:
  4275                           
  4276                           ; 1 bytes @ 0x1B
  4277  00001C                     	ds	2
  4278  00001E                     fputs@s:
  4279                           	callstack 0
  4280                           
  4281                           ; 2 bytes @ 0x1D
  4282  00001E                     	ds	1
  4283  00001F                     _toupper$2111:
  4284                           	callstack 0
  4285                           
  4286                           ; 2 bytes @ 0x1E
  4287  00001F                     	ds	1
  4288  000020                     atoi@neg:
  4289                           	callstack 0
  4290  000020                     fputs@fp:
  4291                           	callstack 0
  4292                           
  4293                           ; 2 bytes @ 0x1F
  4294  000020                     	ds	2
  4295  000022                     fputs@c:
  4296                           	callstack 0
  4297  000022                     _atoi$2035:
  4298                           	callstack 0
  4299                           
  4300                           ; 2 bytes @ 0x21
  4301  000022                     	ds	1
  4302  000023                     ___aodiv@counter:
  4303                           	callstack 0
  4304  000023                     ___aomod@counter:
  4305                           	callstack 0
  4306  000023                     ___lomod@counter:
  4307                           	callstack 0
  4308  000023                     fputs@i:
  4309                           	callstack 0
  4310  000023                     ___lodiv@quotient:
  4311                           	callstack 0
  4312                           
  4313                           ; 8 bytes @ 0x22
  4314  000023                     	ds	1
  4315  000024                     ___aodiv@sign:
  4316                           	callstack 0
  4317  000024                     ___aomod@sign:
  4318                           	callstack 0
  4319  000024                     _atoi$2037:
  4320                           	callstack 0
  4321                           
  4322                           ; 2 bytes @ 0x23
  4323  000024                     	ds	1
  4324  000025                     ?_abs:
  4325                           	callstack 0
  4326  000025                     ?_pad:
  4327                           	callstack 0
  4328  000025                     pad@fp:
  4329                           	callstack 0
  4330  000025                     abs@a:
  4331                           	callstack 0
  4332  000025                     ___aodiv@quotient:
  4333                           	callstack 0
  4334                           
  4335                           ; 8 bytes @ 0x24
  4336  000025                     	ds	1
  4337  000026                     _atoi$2036:
  4338                           	callstack 0
  4339                           
  4340                           ; 1 bytes @ 0x25
  4341  000026                     	ds	1
  4342  000027                     ??_abs:
  4343  000027                     pad@buf:
  4344                           	callstack 0
  4345  000027                     atoi@n:
  4346                           	callstack 0
  4347                           
  4348                           ; 2 bytes @ 0x26
  4349  000027                     	ds	2
  4350  000029                     pad@p:
  4351                           	callstack 0
  4352                           
  4353                           ; 2 bytes @ 0x28
  4354  000029                     	ds	2
  4355  00002B                     ??_pad:
  4356  00002B                     ___lodiv@counter:
  4357                           	callstack 0
  4358                           
  4359                           ; 1 bytes @ 0x2A
  4360  00002B                     	ds	1
  4361  00002C                     pad@i:
  4362                           	callstack 0
  4363                           
  4364                           ; 2 bytes @ 0x2B
  4365  00002C                     	ds	2
  4366  00002E                     pad@w:
  4367                           	callstack 0
  4368                           
  4369                           ; 2 bytes @ 0x2D
  4370  00002E                     	ds	2
  4371  000030                     ?_ctoa:
  4372                           	callstack 0
  4373  000030                     ?_dtoa:
  4374                           	callstack 0
  4375  000030                     ?_utoa:
  4376                           	callstack 0
  4377  000030                     ?_xtoa:
  4378                           	callstack 0
  4379  000030                     ctoa@fp:
  4380                           	callstack 0
  4381  000030                     dtoa@fp:
  4382                           	callstack 0
  4383  000030                     utoa@fp:
  4384                           	callstack 0
  4385  000030                     xtoa@fp:
  4386                           	callstack 0
  4387                           
  4388                           ; 2 bytes @ 0x2F
  4389  000030                     	ds	2
  4390  000032                     ctoa@c:
  4391                           	callstack 0
  4392  000032                     dtoa@d:
  4393                           	callstack 0
  4394  000032                     utoa@d:
  4395                           	callstack 0
  4396  000032                     xtoa@d:
  4397                           	callstack 0
  4398                           
  4399                           ; 8 bytes @ 0x31
  4400  000032                     	ds	1
  4401  000033                     ctoa@w:
  4402                           	callstack 0
  4403                           
  4404                           ; 2 bytes @ 0x32
  4405  000033                     	ds	7
  4406  00003A                     xtoa@x:
  4407                           	callstack 0
  4408                           
  4409                           ; 1 bytes @ 0x39
  4410  00003A                     	ds	1
  4411  00003B                     
  4412                           ; 1 bytes @ 0x3A
  4413 ;;
  4414 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4415 ;;
  4416 ;; *************** function _main *****************
  4417 ;; Defined at:
  4418 ;;		line 60 in file "main.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;		None
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  addr            4   11[BANK1 ] unsigned long 
  4423 ;;  printVal        2    5[BANK1 ] unsigned short 
  4424 ;;  i               1   23[BANK1 ] unsigned char 
  4425 ;;  i               2   21[BANK1 ] unsigned short 
  4426 ;;  i               2   19[BANK1 ] unsigned short 
  4427 ;;  writeAddress    4   49[BANK1 ] unsigned long 
  4428 ;;  failureIndex    1   47[BANK1 ] unsigned char 
  4429 ;;  readAddress     4   39[BANK1 ] unsigned long 
  4430 ;;  address         4   24[BANK1 ] unsigned long 
  4431 ;;  endAddress      4   15[BANK1 ] unsigned long 
  4432 ;;  printedBlock    4    7[BANK1 ] unsigned long 
  4433 ;;  numBlocks       4    1[BANK1 ] unsigned long 
  4434 ;;  sdCardAddres    4   43[BANK1 ] unsigned long 
  4435 ;;  writeEndAddr    4   35[BANK1 ] unsigned long 
  4436 ;;  writeStartAd    4   31[BANK1 ] unsigned long 
  4437 ;;  i               2   29[BANK1 ] unsigned short 
  4438 ;;  status          1   48[BANK1 ] unsigned char 
  4439 ;;  cmd             1   28[BANK1 ] unsigned char 
  4440 ;;  letter          1    0        unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0       4      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:       57 bytes
  4455 ;; Hardware stack levels required when called:   14
  4456 ;; This function calls:
  4457 ;;		_EUSART1_Read
  4458 ;;		_EUSART1_is_rx_ready
  4459 ;;		_SDCARD_Initialize
  4460 ;;		_SDCARD_PollWriteComplete
  4461 ;;		_SDCARD_ReadBlock
  4462 ;;		_SDCARD_WriteBlock
  4463 ;;		_SPI2_Close
  4464 ;;		_SPI2_Open
  4465 ;;		_SYSTEM_Initialize
  4466 ;;		_TMR0_SetInterruptHandler
  4467 ;;		_TMR0_WriteTimer
  4468 ;;		_hexDumpBuffer
  4469 ;;		_incrementAddress
  4470 ;;		_printAddress
  4471 ;;		_printAscii
  4472 ;;		_printf
  4473 ;; This function is called by:
  4474 ;;		Startup code after reset
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text0
  4479  000052                     __ptext0:
  4480                           	callstack 0
  4481  000052                     _main:
  4482                           	callstack 17
  4483  000052                     
  4484                           ;main.c: 62:     uint8_t status;;main.c: 63:     uint16_t i;;main.c: 64:     uint32_t sd
      +                          CardAddress = 0x00000000;
  4485  000052  0E00               	movlw	0
  4486  000054  0101               	movlb	1	; () banked
  4487  000056  6FCB               	movwf	main@sdCardAddress& (0+255),b
  4488  000058  0E00               	movlw	0
  4489  00005A  6FCC               	movwf	(main@sdCardAddress+1)& (0+255),b
  4490  00005C  0E00               	movlw	0
  4491  00005E  6FCD               	movwf	(main@sdCardAddress+2)& (0+255),b
  4492  000060  0E00               	movlw	0
  4493  000062  6FCE               	movwf	(main@sdCardAddress+3)& (0+255),b
  4494                           
  4495                           ;main.c: 65:     uint32_t writeStartAddress = 0x00000000;
  4496  000064  0E00               	movlw	0
  4497  000066  6FBF               	movwf	main@writeStartAddress& (0+255),b
  4498  000068  0E00               	movlw	0
  4499  00006A  6FC0               	movwf	(main@writeStartAddress+1)& (0+255),b
  4500  00006C  0E00               	movlw	0
  4501  00006E  6FC1               	movwf	(main@writeStartAddress+2)& (0+255),b
  4502  000070  0E00               	movlw	0
  4503  000072  6FC2               	movwf	(main@writeStartAddress+3)& (0+255),b
  4504                           
  4505                           ;main.c: 66:     uint32_t writeEndAddress = 0x00000000;
  4506  000074  0E00               	movlw	0
  4507  000076  6FC3               	movwf	main@writeEndAddress& (0+255),b
  4508  000078  0E00               	movlw	0
  4509  00007A  6FC4               	movwf	(main@writeEndAddress+1)& (0+255),b
  4510  00007C  0E00               	movlw	0
  4511  00007E  6FC5               	movwf	(main@writeEndAddress+2)& (0+255),b
  4512  000080  0E00               	movlw	0
  4513  000082  6FC6               	movwf	(main@writeEndAddress+3)& (0+255),b
  4514  000084                     
  4515                           ; BSR set to: 1
  4516                           ;main.c: 71:     SYSTEM_Initialize();
  4517  000084  EC43  F01B         	call	_SYSTEM_Initialize	;wreg free
  4518  000088  888A               	bsf	138,4,c	;volatile
  4519  00008A                     
  4520                           ;main.c: 75:     TMR0_WriteTimer(0x0000);
  4521  00008A  0E00               	movlw	0
  4522  00008C  6E14               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4523  00008E  0E00               	movlw	0
  4524  000090  6E13               	movwf	TMR0_WriteTimer@timerVal^0,c
  4525  000092  ECD4  F01B         	call	_TMR0_WriteTimer	;wreg free
  4526  000096                     
  4527                           ;main.c: 76:     INTCONbits.TMR0IF = 0;
  4528  000096  94F2               	bcf	242,2,c	;volatile
  4529  000098                     l455:
  4530  000098  A4F2               	btfss	242,2,c	;volatile
  4531  00009A  EF51  F000         	goto	u5951
  4532  00009E  EF53  F000         	goto	u5950
  4533  0000A2                     u5951:
  4534  0000A2  EF4C  F000         	goto	l455
  4535  0000A6                     u5950:
  4536  0000A6                     
  4537                           ;main.c: 79:     TMR0_SetInterruptHandler(myTMR0ISR);
  4538  0000A6  0E54               	movlw	low _myTMR0ISR
  4539  0000A8  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4540  0000AA  0E17               	movlw	high _myTMR0ISR
  4541  0000AC  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4542  0000AE  ECD9  F01B         	call	_TMR0_SetInterruptHandler	;wreg free
  4543  0000B2                     
  4544                           ;main.c: 81:     (INTCONbits.GIE = 1);
  4545  0000B2  8EF2               	bsf	242,7,c	;volatile
  4546  0000B4                     
  4547                           ;main.c: 82:     (INTCONbits.PEIE = 1);
  4548  0000B4  8CF2               	bsf	242,6,c	;volatile
  4549  0000B6                     
  4550                           ;main.c: 84:     printAscii();
  4551  0000B6  EC03  F011         	call	_printAscii	;wreg free
  4552  0000BA                     
  4553                           ;main.c: 86:     printf("Lab 10\r\n");
  4554  0000BA  0EC0               	movlw	low STR_1
  4555  0000BC  0100               	movlb	0	; () banked
  4556  0000BE  6FA3               	movwf	printf@fmt& (0+255),b
  4557  0000C0  0EFF               	movlw	high STR_1
  4558  0000C2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4559  0000C4  EC1B  F01B         	call	_printf	;wreg free
  4560  0000C8                     
  4561                           ;main.c: 87:     printf("SD card + playback\r\n");
  4562  0000C8  0EE1               	movlw	low STR_2
  4563  0000CA  0100               	movlb	0	; () banked
  4564  0000CC  6FA3               	movwf	printf@fmt& (0+255),b
  4565  0000CE  0EFE               	movlw	high STR_2
  4566  0000D0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4567  0000D2  EC1B  F01B         	call	_printf	;wreg free
  4568  0000D6                     
  4569                           ;main.c: 88:     printf("Dev'21\r\n");
  4570  0000D6  0EC9               	movlw	low STR_3
  4571  0000D8  0100               	movlb	0	; () banked
  4572  0000DA  6FA3               	movwf	printf@fmt& (0+255),b
  4573  0000DC  0EFF               	movlw	high STR_3
  4574  0000DE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4575  0000E0  EC1B  F01B         	call	_printf	;wreg free
  4576  0000E4                     
  4577                           ;main.c: 89:     printf("No configuration of development board\r\n");
  4578  0000E4  0E61               	movlw	low STR_4
  4579  0000E6  0100               	movlb	0	; () banked
  4580  0000E8  6FA3               	movwf	printf@fmt& (0+255),b
  4581  0000EA  0EFC               	movlw	high STR_4
  4582  0000EC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4583  0000EE  EC1B  F01B         	call	_printf	;wreg free
  4584  0000F2                     
  4585                           ;main.c: 91:     SPI2_Close();
  4586  0000F2  ECFB  F01B         	call	_SPI2_Close	;wreg free
  4587  0000F6                     
  4588                           ;main.c: 92:     SPI2_Open(SPI2_DEFAULT);
  4589  0000F6  0E00               	movlw	0
  4590  0000F8  EC2F  F017         	call	_SPI2_Open
  4591  0000FC                     l5953:
  4592                           
  4593                           ;main.c: 95:         printf("> ");
  4594  0000FC  0EFA               	movlw	low STR_5
  4595  0000FE  0100               	movlb	0	; () banked
  4596  000100  6FA3               	movwf	printf@fmt& (0+255),b
  4597  000102  0EFF               	movlw	high STR_5
  4598  000104  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4599  000106  EC1B  F01B         	call	_printf	;wreg free
  4600  00010A                     l5955:
  4601  00010A  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  4602  00010E  0900               	iorlw	0
  4603  000110  B4D8               	btfsc	status,2,c
  4604  000112  EF8D  F000         	goto	u5961
  4605  000116  EF8F  F000         	goto	u5960
  4606  00011A                     u5961:
  4607  00011A  EF85  F000         	goto	l5955
  4608  00011E                     u5960:
  4609  00011E                     
  4610                           ;main.c: 97:         cmd = EUSART1_Read();
  4611  00011E  EC2F  F01B         	call	_EUSART1_Read	;wreg free
  4612  000122  0101               	movlb	1	; () banked
  4613  000124  6FBC               	movwf	main@cmd& (0+255),b
  4614  000126                     
  4615                           ; BSR set to: 1
  4616                           ;main.c: 98:         printf("%c\r\n", cmd);
  4617  000126  0E7B               	movlw	low (STR_72+12)
  4618  000128  0100               	movlb	0	; () banked
  4619  00012A  6FA3               	movwf	printf@fmt& (0+255),b
  4620  00012C  0EFF               	movlw	high (STR_72+12)
  4621  00012E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4622  000130  C1BC  F0A5         	movff	main@cmd,?_printf+2
  4623  000134  6BA6               	clrf	(?_printf+3)& (0+255),b
  4624  000136  EC1B  F01B         	call	_printf	;wreg free
  4625                           
  4626                           ;main.c: 99:         switch (cmd) {
  4627  00013A  EF9F  F008         	goto	l6307
  4628  00013E                     l5961:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;main.c: 105:                 printf("\r\n----------------------------------------------
      +                          ---\r\n");
  4632  00013E  0E41               	movlw	low STR_7
  4633  000140  6FA3               	movwf	printf@fmt& (0+255),b
  4634  000142  0EFB               	movlw	high STR_7
  4635  000144  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4636  000146  EC1B  F01B         	call	_printf	;wreg free
  4637                           
  4638                           ;main.c: 106:                 printf("\tPlay length in blocks: %d\r\n", (writeEndAddress
      +                          -writeStartAddress)>>9);
  4639  00014A  0EB1               	movlw	low STR_8
  4640  00014C  0100               	movlb	0	; () banked
  4641  00014E  6FA3               	movwf	printf@fmt& (0+255),b
  4642  000150  0EFD               	movlw	high STR_8
  4643  000152  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4644  000154  0101               	movlb	1	; () banked
  4645  000156  51BF               	movf	main@writeStartAddress& (0+255),w,b
  4646  000158  5DC3               	subwf	main@writeEndAddress& (0+255),w,b
  4647  00015A  0100               	movlb	0	; () banked
  4648  00015C  6FBB               	movwf	??_main& (0+255),b
  4649  00015E  0101               	movlb	1	; () banked
  4650  000160  51C0               	movf	(main@writeStartAddress+1)& (0+255),w,b
  4651  000162  59C4               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  4652  000164  0100               	movlb	0	; () banked
  4653  000166  6FBC               	movwf	(??_main+1)& (0+255),b
  4654  000168  0101               	movlb	1	; () banked
  4655  00016A  51C1               	movf	(main@writeStartAddress+2)& (0+255),w,b
  4656  00016C  59C5               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  4657  00016E  0100               	movlb	0	; () banked
  4658  000170  6FBD               	movwf	(??_main+2)& (0+255),b
  4659  000172  0101               	movlb	1	; () banked
  4660  000174  51C2               	movf	(main@writeStartAddress+3)& (0+255),w,b
  4661  000176  59C6               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  4662  000178  0100               	movlb	0	; () banked
  4663  00017A  6FBE               	movwf	(??_main+3)& (0+255),b
  4664  00017C  0E0A               	movlw	10
  4665  00017E  EFC6  F000         	goto	u5970
  4666  000182                     u5975:
  4667  000182  90D8               	bcf	status,0,c
  4668  000184  33BE               	rrcf	(??_main+3)& (0+255),f,b
  4669  000186  33BD               	rrcf	(??_main+2)& (0+255),f,b
  4670  000188  33BC               	rrcf	(??_main+1)& (0+255),f,b
  4671  00018A  33BB               	rrcf	??_main& (0+255),f,b
  4672  00018C                     u5970:
  4673  00018C  2EE8               	decfsz	wreg,f,c
  4674  00018E  EFC1  F000         	goto	u5975
  4675  000192  C0BB  F0A5         	movff	??_main,?_printf+2
  4676  000196  C0BC  F0A6         	movff	??_main+1,?_printf+3
  4677  00019A  C0BD  F0A7         	movff	??_main+2,?_printf+4
  4678  00019E  C0BE  F0A8         	movff	??_main+3,?_printf+5
  4679  0001A2  EC1B  F01B         	call	_printf	;wreg free
  4680                           
  4681                           ;main.c: 107:                 printf("\tsdCardAddress: ");
  4682  0001A6  0E91               	movlw	low STR_9
  4683  0001A8  0100               	movlb	0	; () banked
  4684  0001AA  6FA3               	movwf	printf@fmt& (0+255),b
  4685  0001AC  0EFF               	movlw	high STR_9
  4686  0001AE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4687  0001B0  EC1B  F01B         	call	_printf	;wreg free
  4688                           
  4689                           ;main.c: 108:                 printf("%04x", sdCardAddress >> 16);
  4690  0001B4  0EEE               	movlw	low STR_10
  4691  0001B6  0100               	movlb	0	; () banked
  4692  0001B8  6FA3               	movwf	printf@fmt& (0+255),b
  4693  0001BA  0EFF               	movlw	high STR_10
  4694  0001BC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4695  0001BE  C1CD  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  4696  0001C2  C1CE  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  4697  0001C6  6BA7               	clrf	(?_printf+4)& (0+255),b
  4698  0001C8  6BA8               	clrf	(?_printf+5)& (0+255),b
  4699  0001CA  EC1B  F01B         	call	_printf	;wreg free
  4700                           
  4701                           ;main.c: 109:                 printf(":");
  4702  0001CE  0EFD               	movlw	low STR_11
  4703  0001D0  0100               	movlb	0	; () banked
  4704  0001D2  6FA3               	movwf	printf@fmt& (0+255),b
  4705  0001D4  0EFF               	movlw	high STR_11
  4706  0001D6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4707  0001D8  EC1B  F01B         	call	_printf	;wreg free
  4708                           
  4709                           ;main.c: 110:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  4710  0001DC  0EEE               	movlw	low STR_10
  4711  0001DE  0100               	movlb	0	; () banked
  4712  0001E0  6FA3               	movwf	printf@fmt& (0+255),b
  4713  0001E2  0EFF               	movlw	high STR_10
  4714  0001E4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4715  0001E6  0EFF               	movlw	255
  4716  0001E8  0101               	movlb	1	; () banked
  4717  0001EA  15CB               	andwf	main@sdCardAddress& (0+255),w,b
  4718  0001EC  0100               	movlb	0	; () banked
  4719  0001EE  6FA5               	movwf	(?_printf+2)& (0+255),b
  4720  0001F0  0EFF               	movlw	255
  4721  0001F2  0101               	movlb	1	; () banked
  4722  0001F4  15CC               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  4723  0001F6  0100               	movlb	0	; () banked
  4724  0001F8  6FA6               	movwf	(?_printf+3)& (0+255),b
  4725  0001FA  0E00               	movlw	0
  4726  0001FC  0101               	movlb	1	; () banked
  4727  0001FE  15CD               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  4728  000200  0100               	movlb	0	; () banked
  4729  000202  6FA7               	movwf	(?_printf+4)& (0+255),b
  4730  000204  0E00               	movlw	0
  4731  000206  0101               	movlb	1	; () banked
  4732  000208  15CE               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  4733  00020A  0100               	movlb	0	; () banked
  4734  00020C  6FA8               	movwf	(?_printf+5)& (0+255),b
  4735  00020E  EC1B  F01B         	call	_printf	;wreg free
  4736                           
  4737                           ;main.c: 111:                 printf("\r\n");
  4738  000212  0EAE               	movlw	low (STR_71+12)
  4739  000214  0100               	movlb	0	; () banked
  4740  000216  6FA3               	movwf	printf@fmt& (0+255),b
  4741  000218  0EFF               	movlw	high (STR_71+12)
  4742  00021A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4743  00021C  EC1B  F01B         	call	_printf	;wreg free
  4744                           
  4745                           ;main.c: 112:                 printf("\tsample rate: %dus\r\n", sampleRate / 16);
  4746  000220  0E0B               	movlw	low STR_14
  4747  000222  0100               	movlb	0	; () banked
  4748  000224  6FA3               	movwf	printf@fmt& (0+255),b
  4749  000226  0EFF               	movlw	high STR_14
  4750  000228  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4751  00022A  C0D4  F0BB         	movff	_sampleRate,??_main
  4752  00022E  C0D5  F0BC         	movff	_sampleRate+1,??_main+1
  4753  000232  0E04               	movlw	4
  4754  000234  6FBD               	movwf	(??_main+2)& (0+255),b
  4755  000236                     u5985:
  4756  000236  90D8               	bcf	status,0,c
  4757  000238  33BC               	rrcf	(??_main+1)& (0+255),f,b
  4758  00023A  33BB               	rrcf	??_main& (0+255),f,b
  4759  00023C  2FBD               	decfsz	(??_main+2)& (0+255),f,b
  4760  00023E  EF1B  F001         	goto	u5985
  4761  000242  C0BB  F0A5         	movff	??_main,?_printf+2
  4762  000246  C0BC  F0A6         	movff	??_main+1,?_printf+3
  4763  00024A  EC1B  F01B         	call	_printf	;wreg free
  4764                           
  4765                           ;main.c: 113:                 printf("-------------------------------------------------\
      +                          r\n");
  4766  00024E  0E43               	movlw	low (STR_7+2)
  4767  000250  0100               	movlb	0	; () banked
  4768  000252  6FA3               	movwf	printf@fmt& (0+255),b
  4769  000254  0EFB               	movlw	high (STR_7+2)
  4770  000256  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4771  000258  EC1B  F01B         	call	_printf	;wreg free
  4772                           
  4773                           ;main.c: 114:                 printf("?: help menu\r\n");
  4774  00025C  0EB1               	movlw	low STR_16
  4775  00025E  0100               	movlb	0	; () banked
  4776  000260  6FA3               	movwf	printf@fmt& (0+255),b
  4777  000262  0EFF               	movlw	high STR_16
  4778  000264  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4779  000266  EC1B  F01B         	call	_printf	;wreg free
  4780                           
  4781                           ;main.c: 115:                 printf("o: k\r\n");
  4782  00026A  0EDA               	movlw	low STR_17
  4783  00026C  0100               	movlb	0	; () banked
  4784  00026E  6FA3               	movwf	printf@fmt& (0+255),b
  4785  000270  0EFF               	movlw	high STR_17
  4786  000272  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4787  000274  EC1B  F01B         	call	_printf	;wreg free
  4788                           
  4789                           ;main.c: 116:                 printf("Z: Reset processor\r\n");
  4790  000278  0EF6               	movlw	low STR_18
  4791  00027A  0100               	movlb	0	; () banked
  4792  00027C  6FA3               	movwf	printf@fmt& (0+255),b
  4793  00027E  0EFE               	movlw	high STR_18
  4794  000280  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4795  000282  EC1B  F01B         	call	_printf	;wreg free
  4796                           
  4797                           ;main.c: 117:                 printf("z: Clear the terminal\r\n");
  4798  000286  0E87               	movlw	low STR_19
  4799  000288  0100               	movlb	0	; () banked
  4800  00028A  6FA3               	movwf	printf@fmt& (0+255),b
  4801  00028C  0EFE               	movlw	high STR_19
  4802  00028E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4803  000290  EC1B  F01B         	call	_printf	;wreg free
  4804                           
  4805                           ;main.c: 118:                 printf("-------------------------------------------------\
      +                          r\n");
  4806  000294  0E43               	movlw	low (STR_7+2)
  4807  000296  0100               	movlb	0	; () banked
  4808  000298  6FA3               	movwf	printf@fmt& (0+255),b
  4809  00029A  0EFB               	movlw	high (STR_7+2)
  4810  00029C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4811  00029E  EC1B  F01B         	call	_printf	;wreg free
  4812                           
  4813                           ;main.c: 119:                 printf("i: Initialize SD card\r\n");
  4814  0002A2  0E6F               	movlw	low STR_21
  4815  0002A4  0100               	movlb	0	; () banked
  4816  0002A6  6FA3               	movwf	printf@fmt& (0+255),b
  4817  0002A8  0EFE               	movlw	high STR_21
  4818  0002AA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4819  0002AC  EC1B  F01B         	call	_printf	;wreg free
  4820                           
  4821                           ;main.c: 120:                 printf("-------------------------------------------------\
      +                          r\n");
  4822  0002B0  0E43               	movlw	low (STR_7+2)
  4823  0002B2  0100               	movlb	0	; () banked
  4824  0002B4  6FA3               	movwf	printf@fmt& (0+255),b
  4825  0002B6  0EFB               	movlw	high (STR_7+2)
  4826  0002B8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4827  0002BA  EC1B  F01B         	call	_printf	;wreg free
  4828                           
  4829                           ;main.c: 121:                 printf("a/A decrease/increase read address\r\n");
  4830  0002BE  0EAE               	movlw	low STR_23
  4831  0002C0  0100               	movlb	0	; () banked
  4832  0002C2  6FA3               	movwf	printf@fmt& (0+255),b
  4833  0002C4  0EFC               	movlw	high STR_23
  4834  0002C6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4835  0002C8  EC1B  F01B         	call	_printf	;wreg free
  4836                           
  4837                           ;main.c: 122:                 printf("r: read a block of %d bytes from SD card\r\n", 512
      +                          );
  4838  0002CC  0E36               	movlw	low STR_24
  4839  0002CE  0100               	movlb	0	; () banked
  4840  0002D0  6FA3               	movwf	printf@fmt& (0+255),b
  4841  0002D2  0EFC               	movlw	high STR_24
  4842  0002D4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4843  0002D6  0E02               	movlw	2
  4844  0002D8  6FA6               	movwf	(?_printf+3)& (0+255),b
  4845  0002DA  0E00               	movlw	0
  4846  0002DC  6FA5               	movwf	(?_printf+2)& (0+255),b
  4847  0002DE  EC1B  F01B         	call	_printf	;wreg free
  4848                           
  4849                           ;main.c: 123:                 printf("1: write a perfect 26 value sine wave to the SD ca
      +                          rd\r\n", 512);
  4850  0002E2  0E0A               	movlw	low STR_25
  4851  0002E4  0100               	movlb	0	; () banked
  4852  0002E6  6FA3               	movwf	printf@fmt& (0+255),b
  4853  0002E8  0EFB               	movlw	high STR_25
  4854  0002EA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4855  0002EC  0E02               	movlw	2
  4856  0002EE  6FA6               	movwf	(?_printf+3)& (0+255),b
  4857  0002F0  0E00               	movlw	0
  4858  0002F2  6FA5               	movwf	(?_printf+2)& (0+255),b
  4859  0002F4  EC1B  F01B         	call	_printf	;wreg free
  4860                           
  4861                           ;main.c: 124:                 printf("-------------------------------------------------\
      +                          r\n");
  4862  0002F8  0E43               	movlw	low (STR_7+2)
  4863  0002FA  0100               	movlb	0	; () banked
  4864  0002FC  6FA3               	movwf	printf@fmt& (0+255),b
  4865  0002FE  0EFB               	movlw	high (STR_7+2)
  4866  000300  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4867  000302  EC1B  F01B         	call	_printf	;wreg free
  4868                           
  4869                           ;main.c: 125:                 printf("+/- Increase/Decrease the sample rate by 10 us\r\n
      +                          ");
  4870  000306  0EA9               	movlw	low STR_27
  4871  000308  0100               	movlb	0	; () banked
  4872  00030A  6FA3               	movwf	printf@fmt& (0+255),b
  4873  00030C  0EFB               	movlw	high STR_27
  4874  00030E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4875  000310  EC1B  F01B         	call	_printf	;wreg free
  4876                           
  4877                           ;main.c: 126:                 printf("W: Write microphone => SD card at 1600 us\r\n");
  4878  000314  0E0A               	movlw	low STR_28
  4879  000316  0100               	movlb	0	; () banked
  4880  000318  6FA3               	movwf	printf@fmt& (0+255),b
  4881  00031A  0EFC               	movlw	high STR_28
  4882  00031C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4883  00031E  EC1B  F01B         	call	_printf	;wreg free
  4884                           
  4885                           ;main.c: 127:                 printf("s: spool memory to a csv file\r\n");
  4886  000322  0E17               	movlw	low STR_29
  4887  000324  0100               	movlb	0	; () banked
  4888  000326  6FA3               	movwf	printf@fmt& (0+255),b
  4889  000328  0EFD               	movlw	high STR_29
  4890  00032A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4891  00032C  EC1B  F01B         	call	_printf	;wreg free
  4892                           
  4893                           ;main.c: 128:                 printf("-------------------------------------------------\
      +                          r\n");
  4894  000330  0E43               	movlw	low (STR_7+2)
  4895  000332  0100               	movlb	0	; () banked
  4896  000334  6FA3               	movwf	printf@fmt& (0+255),b
  4897  000336  0EFB               	movlw	high (STR_7+2)
  4898  000338  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4899  00033A  EC1B  F01B         	call	_printf	;wreg free
  4900                           
  4901                           ;main.c: 129:                 break;
  4902  00033E  EF7E  F000         	goto	l5953
  4903  000342                     l5963:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;main.c: 135:                 printf("o:	ok\r\n");
  4907  000342  0ED2               	movlw	low STR_31
  4908  000344  6FA3               	movwf	printf@fmt& (0+255),b
  4909  000346  0EFF               	movlw	high STR_31
  4910  000348  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4911  00034A  EC1B  F01B         	call	_printf	;wreg free
  4912                           
  4913                           ;main.c: 136:                 break;
  4914  00034E  EF7E  F000         	goto	l5953
  4915  000352                     l5965:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;main.c: 142:                 for (i = 0; i < 40; i++) printf("\n");
  4919  000352  0E00               	movlw	0
  4920  000354  0101               	movlb	1	; () banked
  4921  000356  6FBE               	movwf	(main@i+1)& (0+255),b
  4922  000358  0E00               	movlw	0
  4923  00035A  6FBD               	movwf	main@i& (0+255),b
  4924  00035C                     l5967:
  4925                           
  4926                           ; BSR set to: 1
  4927  00035C  51BE               	movf	(main@i+1)& (0+255),w,b
  4928  00035E  E109               	bnz	u5990
  4929  000360  0E28               	movlw	40
  4930  000362  5DBD               	subwf	main@i& (0+255),w,b
  4931  000364  A0D8               	btfss	status,0,c
  4932  000366  EFB7  F001         	goto	u5991
  4933  00036A  EFB9  F001         	goto	u5990
  4934  00036E                     u5991:
  4935  00036E  EFBB  F001         	goto	l5971
  4936  000372                     u5990:
  4937  000372  EFC7  F001         	goto	l468
  4938  000376                     l5971:
  4939                           
  4940                           ; BSR set to: 1
  4941  000376  0EF5               	movlw	low (STR_116+2)
  4942  000378  0100               	movlb	0	; () banked
  4943  00037A  6FA3               	movwf	printf@fmt& (0+255),b
  4944  00037C  0EFF               	movlw	high (STR_116+2)
  4945  00037E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4946  000380  EC1B  F01B         	call	_printf	;wreg free
  4947  000384  0101               	movlb	1	; () banked
  4948  000386  4BBD               	infsnz	main@i& (0+255),f,b
  4949  000388  2BBE               	incf	(main@i+1)& (0+255),f,b
  4950  00038A  EFAE  F001         	goto	l5967
  4951  00038E                     l468:
  4952                           
  4953                           ; BSR set to: 1
  4954  00038E  00FF               	reset		;# 
  4955                           
  4956                           ;main.c: 144:                 break;
  4957  000390  EF7E  F000         	goto	l5953
  4958  000394                     l5977:
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;main.c: 150:                 for (i = 0; i < 40; i++) printf("\n");
  4962  000394  0E00               	movlw	0
  4963  000396  0101               	movlb	1	; () banked
  4964  000398  6FBE               	movwf	(main@i+1)& (0+255),b
  4965  00039A  0E00               	movlw	0
  4966  00039C  6FBD               	movwf	main@i& (0+255),b
  4967  00039E                     l5979:
  4968                           
  4969                           ; BSR set to: 1
  4970  00039E  51BE               	movf	(main@i+1)& (0+255),w,b
  4971  0003A0  E109               	bnz	u6000
  4972  0003A2  0E28               	movlw	40
  4973  0003A4  5DBD               	subwf	main@i& (0+255),w,b
  4974  0003A6  A0D8               	btfss	status,0,c
  4975  0003A8  EFD8  F001         	goto	u6001
  4976  0003AC  EFDA  F001         	goto	u6000
  4977  0003B0                     u6001:
  4978  0003B0  EFDC  F001         	goto	l5983
  4979  0003B4                     u6000:
  4980  0003B4  EF7E  F000         	goto	l5953
  4981  0003B8                     l5983:
  4982                           
  4983                           ; BSR set to: 1
  4984  0003B8  0EF5               	movlw	low (STR_116+2)
  4985  0003BA  0100               	movlb	0	; () banked
  4986  0003BC  6FA3               	movwf	printf@fmt& (0+255),b
  4987  0003BE  0EFF               	movlw	high (STR_116+2)
  4988  0003C0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4989  0003C2  EC1B  F01B         	call	_printf	;wreg free
  4990  0003C6  0101               	movlb	1	; () banked
  4991  0003C8  4BBD               	infsnz	main@i& (0+255),f,b
  4992  0003CA  2BBE               	incf	(main@i+1)& (0+255),f,b
  4993  0003CC  EFCF  F001         	goto	l5979
  4994  0003D0                     l472:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;main.c: 154:                 static uint8_t sinIndex = 0;;main.c: 155:                 
      +                          static uint32_t writeAddress = 0x00000000;;main.c: 156:                 writeStartAddres
      +                          s = sdCardAddress;
  4998  0003D0  C1CB  F1BF         	movff	main@sdCardAddress,main@writeStartAddress
  4999  0003D4  C1CC  F1C0         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5000  0003D8  C1CD  F1C1         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5001  0003DC  C1CE  F1C2         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5002  0003E0                     
  5003                           ; BSR set to: 0
  5004                           ;main.c: 161:                     for (uint16_t i = 0; i < 512; i++) {
  5005  0003E0  0E00               	movlw	0
  5006  0003E2  0101               	movlb	1	; () banked
  5007  0003E4  6FB4               	movwf	(main@i_1279+1)& (0+255),b
  5008  0003E6  0E00               	movlw	0
  5009  0003E8  6FB3               	movwf	main@i_1279& (0+255),b
  5010  0003EA                     l5991:
  5011                           
  5012                           ; BSR set to: 1
  5013  0003EA  0E02               	movlw	2
  5014  0003EC  5DB4               	subwf	(main@i_1279+1)& (0+255),w,b
  5015  0003EE  A0D8               	btfss	status,0,c
  5016  0003F0  EFFC  F001         	goto	u6011
  5017  0003F4  EFFE  F001         	goto	u6010
  5018  0003F8                     u6011:
  5019  0003F8  EF00  F002         	goto	l5995
  5020  0003FC                     u6010:
  5021  0003FC  EF25  F002         	goto	l6005
  5022  000400                     l5995:
  5023                           
  5024                           ; BSR set to: 1
  5025                           ;main.c: 162:                         sdCardBuffer[i] = sin[sinIndex];
  5026  000400  0E17               	movlw	low _sin
  5027  000402  0100               	movlb	0	; () banked
  5028  000404  25CD               	addwf	main@sinIndex& (0+255),w,b
  5029  000406  6EF6               	movwf	tblptrl,c
  5030  000408  6AF7               	clrf	tblptrh,c
  5031  00040A  0EF3               	movlw	high _sin
  5032  00040C  22F7               	addwfc	tblptrh,f,c
  5033  00040E                     	if	1	;There are 3 active tblptr bytes
  5034  00040E  6AF8               	clrf	tblptru,c
  5035  000410  0E00               	movlw	low (__mediumconst shr (0+16))
  5036  000412  22F8               	addwfc	tblptru,f,c
  5037  000414                     	endif
  5038  000414  0ED5               	movlw	low _sdCardBuffer
  5039  000416  0101               	movlb	1	; () banked
  5040  000418  25B3               	addwf	main@i_1279& (0+255),w,b
  5041  00041A  6ED9               	movwf	fsr2l,c
  5042  00041C  0E07               	movlw	high _sdCardBuffer
  5043  00041E  21B4               	addwfc	(main@i_1279+1)& (0+255),w,b
  5044  000420  6EDA               	movwf	fsr2h,c
  5045  000422  0008               	tblrd		*
  5046  000424  CFF5 FFDF          	movff	tablat,indf2
  5047  000428                     
  5048                           ; BSR set to: 1
  5049                           ;main.c: 163:                         if (++sinIndex >= sizeof(sin))
  5050  000428  0100               	movlb	0	; () banked
  5051  00042A  2BCD               	incf	main@sinIndex& (0+255),f,b
  5052  00042C  0E19               	movlw	25
  5053  00042E  65CD               	cpfsgt	main@sinIndex& (0+255),b
  5054  000430  EF1C  F002         	goto	u6021
  5055  000434  EF1E  F002         	goto	u6020
  5056  000438                     u6021:
  5057  000438  EF20  F002         	goto	l6001
  5058  00043C                     u6020:
  5059  00043C                     
  5060                           ; BSR set to: 0
  5061                           ;main.c: 164:                             sinIndex = 0;
  5062  00043C  0E00               	movlw	0
  5063  00043E  6FCD               	movwf	main@sinIndex& (0+255),b
  5064  000440                     l6001:
  5065                           
  5066                           ; BSR set to: 0
  5067                           ;main.c: 165:                     }
  5068  000440  0101               	movlb	1	; () banked
  5069  000442  4BB3               	infsnz	main@i_1279& (0+255),f,b
  5070  000444  2BB4               	incf	(main@i_1279+1)& (0+255),f,b
  5071  000446  EFF5  F001         	goto	l5991
  5072  00044A                     l6005:
  5073                           
  5074                           ; BSR set to: 1
  5075                           ;main.c: 167:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer);
  5076  00044A  C0BF  F014         	movff	main@writeAddress,SDCARD_WriteBlock@addr
  5077  00044E  C0C0  F015         	movff	main@writeAddress+1,SDCARD_WriteBlock@addr+1
  5078  000452  C0C1  F016         	movff	main@writeAddress+2,SDCARD_WriteBlock@addr+2
  5079  000456  C0C2  F017         	movff	main@writeAddress+3,SDCARD_WriteBlock@addr+3
  5080  00045A  0ED5               	movlw	low _sdCardBuffer
  5081  00045C  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5082  00045E  0E07               	movlw	high _sdCardBuffer
  5083  000460  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5084  000462  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5085  000466                     l6007:
  5086  000466  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5087  00046A  0101               	movlb	1	; () banked
  5088  00046C  6FD0               	movwf	main@status& (0+255),b
  5089  00046E  29D0               	incf	main@status& (0+255),w,b
  5090  000470  B4D8               	btfsc	status,2,c
  5091  000472  EF3D  F002         	goto	u6031
  5092  000476  EF3F  F002         	goto	u6030
  5093  00047A                     u6031:
  5094  00047A  EF33  F002         	goto	l6007
  5095  00047E                     u6030:
  5096  00047E                     
  5097                           ; BSR set to: 1
  5098                           ;main.c: 171:                     writeAddress = incrementAddress(writeAddress);
  5099  00047E  C0BF  F013         	movff	main@writeAddress,incrementAddress@sdCardAddress
  5100  000482  C0C0  F014         	movff	main@writeAddress+1,incrementAddress@sdCardAddress+1
  5101  000486  C0C1  F015         	movff	main@writeAddress+2,incrementAddress@sdCardAddress+2
  5102  00048A  C0C2  F016         	movff	main@writeAddress+3,incrementAddress@sdCardAddress+3
  5103  00048E  EC8B  F019         	call	_incrementAddress	;wreg free
  5104  000492  C013  F0BF         	movff	?_incrementAddress,main@writeAddress
  5105  000496  C014  F0C0         	movff	?_incrementAddress+1,main@writeAddress+1
  5106  00049A  C015  F0C1         	movff	?_incrementAddress+2,main@writeAddress+2
  5107  00049E  C016  F0C2         	movff	?_incrementAddress+3,main@writeAddress+3
  5108  0004A2                     
  5109                           ;main.c: 176:                 writeEndAddress = writeAddress;
  5110  0004A2  C0BF  F1C3         	movff	main@writeAddress,main@writeEndAddress
  5111  0004A6  C0C0  F1C4         	movff	main@writeAddress+1,main@writeEndAddress+1
  5112  0004AA  C0C1  F1C5         	movff	main@writeAddress+2,main@writeEndAddress+2
  5113  0004AE  C0C2  F1C6         	movff	main@writeAddress+3,main@writeEndAddress+3
  5114  0004B2                     
  5115                           ;main.c: 178:                 printf("Write block sin wave values:\r\n");
  5116  0004B2  0E37               	movlw	low STR_34
  5117  0004B4  0100               	movlb	0	; () banked
  5118  0004B6  6FA3               	movwf	printf@fmt& (0+255),b
  5119  0004B8  0EFD               	movlw	high STR_34
  5120  0004BA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5121  0004BC  EC1B  F01B         	call	_printf	;wreg free
  5122  0004C0                     
  5123                           ;main.c: 179:                 printf("Amount of blocks stored: %d\r\n", (writeEndAddress
      +                           - writeStartAddress)>>9);
  5124  0004C0  0E75               	movlw	low STR_35
  5125  0004C2  0100               	movlb	0	; () banked
  5126  0004C4  6FA3               	movwf	printf@fmt& (0+255),b
  5127  0004C6  0EFD               	movlw	high STR_35
  5128  0004C8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5129  0004CA  0101               	movlb	1	; () banked
  5130  0004CC  51BF               	movf	main@writeStartAddress& (0+255),w,b
  5131  0004CE  5DC3               	subwf	main@writeEndAddress& (0+255),w,b
  5132  0004D0  0100               	movlb	0	; () banked
  5133  0004D2  6FBB               	movwf	??_main& (0+255),b
  5134  0004D4  0101               	movlb	1	; () banked
  5135  0004D6  51C0               	movf	(main@writeStartAddress+1)& (0+255),w,b
  5136  0004D8  59C4               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  5137  0004DA  0100               	movlb	0	; () banked
  5138  0004DC  6FBC               	movwf	(??_main+1)& (0+255),b
  5139  0004DE  0101               	movlb	1	; () banked
  5140  0004E0  51C1               	movf	(main@writeStartAddress+2)& (0+255),w,b
  5141  0004E2  59C5               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  5142  0004E4  0100               	movlb	0	; () banked
  5143  0004E6  6FBD               	movwf	(??_main+2)& (0+255),b
  5144  0004E8  0101               	movlb	1	; () banked
  5145  0004EA  51C2               	movf	(main@writeStartAddress+3)& (0+255),w,b
  5146  0004EC  59C6               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  5147  0004EE  0100               	movlb	0	; () banked
  5148  0004F0  6FBE               	movwf	(??_main+3)& (0+255),b
  5149  0004F2  0E0A               	movlw	10
  5150  0004F4  EF81  F002         	goto	u6040
  5151  0004F8                     u6045:
  5152  0004F8  90D8               	bcf	status,0,c
  5153  0004FA  33BE               	rrcf	(??_main+3)& (0+255),f,b
  5154  0004FC  33BD               	rrcf	(??_main+2)& (0+255),f,b
  5155  0004FE  33BC               	rrcf	(??_main+1)& (0+255),f,b
  5156  000500  33BB               	rrcf	??_main& (0+255),f,b
  5157  000502                     u6040:
  5158  000502  2EE8               	decfsz	wreg,f,c
  5159  000504  EF7C  F002         	goto	u6045
  5160  000508  C0BB  F0A5         	movff	??_main,?_printf+2
  5161  00050C  C0BC  F0A6         	movff	??_main+1,?_printf+3
  5162  000510  C0BD  F0A7         	movff	??_main+2,?_printf+4
  5163  000514  C0BE  F0A8         	movff	??_main+3,?_printf+5
  5164  000518  EC1B  F01B         	call	_printf	;wreg free
  5165  00051C                     
  5166                           ;main.c: 180:                 printAddress(writeStartAddress);
  5167  00051C  C1BF  F0B1         	movff	main@writeStartAddress,printAddress@address
  5168  000520  C1C0  F0B2         	movff	main@writeStartAddress+1,printAddress@address+1
  5169  000524  C1C1  F0B3         	movff	main@writeStartAddress+2,printAddress@address+2
  5170  000528  C1C2  F0B4         	movff	main@writeStartAddress+3,printAddress@address+3
  5171  00052C  EC9E  F018         	call	_printAddress	;wreg free
  5172  000530                     
  5173                           ;main.c: 181:                 printAddress(writeEndAddress);
  5174  000530  C1C3  F0B1         	movff	main@writeEndAddress,printAddress@address
  5175  000534  C1C4  F0B2         	movff	main@writeEndAddress+1,printAddress@address+1
  5176  000538  C1C5  F0B3         	movff	main@writeEndAddress+2,printAddress@address+2
  5177  00053C  C1C6  F0B4         	movff	main@writeEndAddress+3,printAddress@address+3
  5178  000540  EC9E  F018         	call	_printAddress	;wreg free
  5179  000544                     
  5180                           ;main.c: 182:                 printf("    Status:     %02x\r\n", status);
  5181  000544  0E9F               	movlw	low STR_36
  5182  000546  0100               	movlb	0	; () banked
  5183  000548  6FA3               	movwf	printf@fmt& (0+255),b
  5184  00054A  0EFE               	movlw	high STR_36
  5185  00054C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5186  00054E  C1D0  F0A5         	movff	main@status,?_printf+2
  5187  000552  6BA6               	clrf	(?_printf+3)& (0+255),b
  5188  000554  EC1B  F01B         	call	_printf	;wreg free
  5189                           
  5190                           ;main.c: 183:             };main.c: 184:                 break;
  5191  000558  EF7E  F000         	goto	l5953
  5192  00055C                     l6023:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;main.c: 187:                 sampleRate = sampleRate + 160;
  5196  00055C  0EA0               	movlw	160
  5197  00055E  25D4               	addwf	_sampleRate& (0+255),w,b
  5198  000560  6FD4               	movwf	_sampleRate& (0+255),b
  5199  000562  0E00               	movlw	0
  5200  000564  21D5               	addwfc	(_sampleRate+1)& (0+255),w,b
  5201  000566  6FD5               	movwf	(_sampleRate+1)& (0+255),b
  5202                           
  5203                           ;main.c: 188:                 break;
  5204  000568  EF7E  F000         	goto	l5953
  5205  00056C                     l6025:
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;main.c: 191:                 if (sampleRate > 320 ) {
  5209  00056C  0E41               	movlw	65
  5210  00056E  5DD4               	subwf	_sampleRate& (0+255),w,b
  5211  000570  0E01               	movlw	1
  5212  000572  59D5               	subwfb	(_sampleRate+1)& (0+255),w,b
  5213  000574  A0D8               	btfss	status,0,c
  5214  000576  EFBF  F002         	goto	u6051
  5215  00057A  EFC1  F002         	goto	u6050
  5216  00057E                     u6051:
  5217  00057E  EF7E  F000         	goto	l5953
  5218  000582                     u6050:
  5219  000582                     
  5220                           ; BSR set to: 0
  5221                           ;main.c: 192:                     sampleRate = sampleRate - 160;
  5222  000582  0E60               	movlw	96
  5223  000584  25D4               	addwf	_sampleRate& (0+255),w,b
  5224  000586  6FD4               	movwf	_sampleRate& (0+255),b
  5225  000588  0EFF               	movlw	255
  5226  00058A  21D5               	addwfc	(_sampleRate+1)& (0+255),w,b
  5227  00058C  6FD5               	movwf	(_sampleRate+1)& (0+255),b
  5228                           
  5229                           ;main.c: 193:                 } else {
  5230  00058E  EF7E  F000         	goto	l5953
  5231  000592                     l487:
  5232                           
  5233                           ; BSR set to: 0
  5234                           ;main.c: 199:                 uint32_t readAddress = writeStartAddress;
  5235  000592  C1BF  F1C7         	movff	main@writeStartAddress,main@readAddress
  5236  000596  C1C0  F1C8         	movff	main@writeStartAddress+1,main@readAddress+1
  5237  00059A  C1C1  F1C9         	movff	main@writeStartAddress+2,main@readAddress+2
  5238  00059E  C1C2  F1CA         	movff	main@writeStartAddress+3,main@readAddress+3
  5239  0005A2                     
  5240                           ; BSR set to: 0
  5241                           ;main.c: 200:                 buffer1Full = 0;
  5242  0005A2  0E00               	movlw	0
  5243  0005A4  6FD1               	movwf	_buffer1Full& (0+255),b
  5244                           
  5245                           ;main.c: 201:                 buffer2Full = 0;
  5246  0005A6  0E00               	movlw	0
  5247  0005A8  6FD0               	movwf	_buffer2Full& (0+255),b
  5248                           
  5249                           ;main.c: 202:                 doPlayback = 1;
  5250  0005AA  0E01               	movlw	1
  5251  0005AC  6FCE               	movwf	_doPlayback& (0+255),b
  5252                           
  5253                           ;main.c: 203:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5254  0005AE  EF46  F003         	goto	l6051
  5255  0005B2                     l6031:
  5256  0005B2  0100               	movlb	0	; () banked
  5257  0005B4  51D1               	movf	_buffer1Full& (0+255),w,b
  5258  0005B6  A4D8               	btfss	status,2,c
  5259  0005B8  EFE0  F002         	goto	u6061
  5260  0005BC  EFE2  F002         	goto	u6060
  5261  0005C0                     u6061:
  5262  0005C0  EFD9  F002         	goto	l6031
  5263  0005C4                     u6060:
  5264  0005C4                     
  5265                           ; BSR set to: 0
  5266                           ;main.c: 205:                     SDCARD_ReadBlock(readAddress, sdCardBuffer1);
  5267  0005C4  C1C7  F014         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5268  0005C8  C1C8  F015         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5269  0005CC  C1C9  F016         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5270  0005D0  C1CA  F017         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5271  0005D4  0ED5               	movlw	low _sdCardBuffer1
  5272  0005D6  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5273  0005D8  0E05               	movlw	high _sdCardBuffer1
  5274  0005DA  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5275  0005DC  EC85  F017         	call	_SDCARD_ReadBlock	;wreg free
  5276  0005E0                     
  5277                           ;main.c: 206:                     buffer1Full = 1;
  5278  0005E0  0E01               	movlw	1
  5279  0005E2  0100               	movlb	0	; () banked
  5280  0005E4  6FD1               	movwf	_buffer1Full& (0+255),b
  5281  0005E6                     
  5282                           ; BSR set to: 0
  5283                           ;main.c: 207:                     readAddress = incrementAddress(readAddress);
  5284  0005E6  C1C7  F013         	movff	main@readAddress,incrementAddress@sdCardAddress
  5285  0005EA  C1C8  F014         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5286  0005EE  C1C9  F015         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5287  0005F2  C1CA  F016         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5288  0005F6  EC8B  F019         	call	_incrementAddress	;wreg free
  5289  0005FA  C013  F1C7         	movff	?_incrementAddress,main@readAddress
  5290  0005FE  C014  F1C8         	movff	?_incrementAddress+1,main@readAddress+1
  5291  000602  C015  F1C9         	movff	?_incrementAddress+2,main@readAddress+2
  5292  000606  C016  F1CA         	movff	?_incrementAddress+3,main@readAddress+3
  5293  00060A                     
  5294                           ;main.c: 208:                     if (readAddress == writeEndAddress)
  5295  00060A  0101               	movlb	1	; () banked
  5296  00060C  51C3               	movf	main@writeEndAddress& (0+255),w,b
  5297  00060E  19C7               	xorwf	main@readAddress& (0+255),w,b
  5298  000610  E10D               	bnz	u6071
  5299  000612  51C4               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5300  000614  19C8               	xorwf	(main@readAddress+1)& (0+255),w,b
  5301  000616  E10A               	bnz	u6071
  5302  000618  51C5               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5303  00061A  19C9               	xorwf	(main@readAddress+2)& (0+255),w,b
  5304  00061C  E107               	bnz	u6071
  5305  00061E  51C6               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5306  000620  19CA               	xorwf	(main@readAddress+3)& (0+255),w,b
  5307  000622  A4D8               	btfss	status,2,c
  5308  000624  EF16  F003         	goto	u6071
  5309  000628  EF18  F003         	goto	u6070
  5310  00062C                     u6071:
  5311  00062C  EF1A  F003         	goto	l6043
  5312  000630                     u6070:
  5313  000630  EF63  F003         	goto	l6055
  5314  000634                     l6043:
  5315  000634  0100               	movlb	0	; () banked
  5316  000636  51D0               	movf	_buffer2Full& (0+255),w,b
  5317  000638  A4D8               	btfss	status,2,c
  5318  00063A  EF21  F003         	goto	u6081
  5319  00063E  EF23  F003         	goto	u6080
  5320  000642                     u6081:
  5321  000642  EF1A  F003         	goto	l6043
  5322  000646                     u6080:
  5323  000646                     
  5324                           ; BSR set to: 0
  5325                           ;main.c: 211:                     SDCARD_ReadBlock(readAddress, sdCardBuffer2);
  5326  000646  C1C7  F014         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5327  00064A  C1C8  F015         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5328  00064E  C1C9  F016         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5329  000652  C1CA  F017         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5330  000656  0ED5               	movlw	low _sdCardBuffer2
  5331  000658  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5332  00065A  0E03               	movlw	high _sdCardBuffer2
  5333  00065C  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5334  00065E  EC85  F017         	call	_SDCARD_ReadBlock	;wreg free
  5335  000662                     
  5336                           ;main.c: 212:                     buffer2Full = 1;
  5337  000662  0E01               	movlw	1
  5338  000664  0100               	movlb	0	; () banked
  5339  000666  6FD0               	movwf	_buffer2Full& (0+255),b
  5340  000668                     
  5341                           ; BSR set to: 0
  5342                           ;main.c: 213:                     readAddress = incrementAddress(readAddress);
  5343  000668  C1C7  F013         	movff	main@readAddress,incrementAddress@sdCardAddress
  5344  00066C  C1C8  F014         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5345  000670  C1C9  F015         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5346  000674  C1CA  F016         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5347  000678  EC8B  F019         	call	_incrementAddress	;wreg free
  5348  00067C  C013  F1C7         	movff	?_incrementAddress,main@readAddress
  5349  000680  C014  F1C8         	movff	?_incrementAddress+1,main@readAddress+1
  5350  000684  C015  F1C9         	movff	?_incrementAddress+2,main@readAddress+2
  5351  000688  C016  F1CA         	movff	?_incrementAddress+3,main@readAddress+3
  5352  00068C                     l6051:
  5353                           
  5354                           ;main.c: 203:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5355  00068C  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5356  000690  0900               	iorlw	0
  5357  000692  A4D8               	btfss	status,2,c
  5358  000694  EF4E  F003         	goto	u6091
  5359  000698  EF50  F003         	goto	u6090
  5360  00069C                     u6091:
  5361  00069C  EF63  F003         	goto	l6055
  5362  0006A0                     u6090:
  5363  0006A0  0101               	movlb	1	; () banked
  5364  0006A2  51C3               	movf	main@writeEndAddress& (0+255),w,b
  5365  0006A4  19C7               	xorwf	main@readAddress& (0+255),w,b
  5366  0006A6  E10D               	bnz	u6101
  5367  0006A8  51C4               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5368  0006AA  19C8               	xorwf	(main@readAddress+1)& (0+255),w,b
  5369  0006AC  E10A               	bnz	u6101
  5370  0006AE  51C5               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5371  0006B0  19C9               	xorwf	(main@readAddress+2)& (0+255),w,b
  5372  0006B2  E107               	bnz	u6101
  5373  0006B4  51C6               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5374  0006B6  19CA               	xorwf	(main@readAddress+3)& (0+255),w,b
  5375  0006B8  A4D8               	btfss	status,2,c
  5376  0006BA  EF61  F003         	goto	u6101
  5377  0006BE  EF63  F003         	goto	u6100
  5378  0006C2                     u6101:
  5379  0006C2  EFD9  F002         	goto	l6031
  5380  0006C6                     u6100:
  5381  0006C6                     l6055:
  5382                           
  5383                           ;main.c: 215:                 stopPlayback = 1;
  5384  0006C6  0E01               	movlw	1
  5385  0006C8  6E48               	movwf	_stopPlayback^0,c
  5386  0006CA                     
  5387                           ;main.c: 216:                 if ((EUSART1_is_rx_ready())) {
  5388  0006CA  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5389  0006CE  0900               	iorlw	0
  5390  0006D0  B4D8               	btfsc	status,2,c
  5391  0006D2  EF6D  F003         	goto	u6111
  5392  0006D6  EF6F  F003         	goto	u6110
  5393  0006DA                     u6111:
  5394  0006DA  EF71  F003         	goto	l6061
  5395  0006DE                     u6110:
  5396  0006DE                     
  5397                           ;main.c: 217:                     EUSART1_Read();
  5398  0006DE  EC2F  F01B         	call	_EUSART1_Read	;wreg free
  5399  0006E2                     l6061:
  5400  0006E2  0100               	movlb	0	; () banked
  5401  0006E4  51CE               	movf	_doPlayback& (0+255),w,b
  5402  0006E6  A4D8               	btfss	status,2,c
  5403  0006E8  EF78  F003         	goto	u6121
  5404  0006EC  EF7A  F003         	goto	u6120
  5405  0006F0                     u6121:
  5406  0006F0  EF71  F003         	goto	l6061
  5407  0006F4                     u6120:
  5408  0006F4  EF7E  F000         	goto	l5953
  5409  0006F8                     l6063:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;main.c: 224:                 printf("Press any key to start recording audio and press a
      +                          ny key to stop recording.");
  5413  0006F8  0E35               	movlw	low STR_37
  5414  0006FA  6FA3               	movwf	printf@fmt& (0+255),b
  5415  0006FC  0EF3               	movlw	high STR_37
  5416  0006FE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5417  000700  EC1B  F01B         	call	_printf	;wreg free
  5418  000704                     l6065:
  5419  000704  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5420  000708  0900               	iorlw	0
  5421  00070A  B4D8               	btfsc	status,2,c
  5422  00070C  EF8A  F003         	goto	u6131
  5423  000710  EF8C  F003         	goto	u6130
  5424  000714                     u6131:
  5425  000714  EF82  F003         	goto	l6065
  5426  000718                     u6130:
  5427  000718                     
  5428                           ;main.c: 226:                 EUSART1_Read();
  5429  000718  EC2F  F01B         	call	_EUSART1_Read	;wreg free
  5430  00071C                     
  5431                           ;main.c: 227:                 writeStartAddress = sdCardAddress;
  5432  00071C  C1CB  F1BF         	movff	main@sdCardAddress,main@writeStartAddress
  5433  000720  C1CC  F1C0         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5434  000724  C1CD  F1C1         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5435  000728  C1CE  F1C2         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5436  00072C                     
  5437                           ;main.c: 228:                 uint32_t writeAddress = sdCardAddress;
  5438  00072C  C1CB  F1D1         	movff	main@sdCardAddress,main@writeAddress_1285
  5439  000730  C1CC  F1D2         	movff	main@sdCardAddress+1,main@writeAddress_1285+1
  5440  000734  C1CD  F1D3         	movff	main@sdCardAddress+2,main@writeAddress_1285+2
  5441  000738  C1CE  F1D4         	movff	main@sdCardAddress+3,main@writeAddress_1285+3
  5442  00073C                     
  5443                           ;main.c: 229:                 uint8_t failureIndex = 0;
  5444  00073C  0E00               	movlw	0
  5445  00073E  0101               	movlb	1	; () banked
  5446  000740  6FCF               	movwf	main@failureIndex& (0+255),b
  5447  000742                     
  5448                           ; BSR set to: 1
  5449                           ;main.c: 230:                 startCollect = 1;
  5450  000742  0E01               	movlw	1
  5451  000744  6E4A               	movwf	_startCollect^0,c
  5452                           
  5453                           ;main.c: 232:                 while (!(EUSART1_is_rx_ready())) {
  5454  000746  EFB5  F004         	goto	l6129
  5455  00074A                     l6077:
  5456                           
  5457                           ;main.c: 233:                     if (buffer1Full) {
  5458  00074A  0100               	movlb	0	; () banked
  5459  00074C  51D1               	movf	_buffer1Full& (0+255),w,b
  5460  00074E  B4D8               	btfsc	status,2,c
  5461  000750  EFAC  F003         	goto	u6141
  5462  000754  EFAE  F003         	goto	u6140
  5463  000758                     u6141:
  5464  000758  EF2D  F004         	goto	l6103
  5465  00075C                     u6140:
  5466  00075C                     
  5467                           ; BSR set to: 0
  5468                           ;main.c: 234:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5469  00075C  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5470  000760  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5471  000764  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5472  000768  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5473  00076C  0ED5               	movlw	low _sdCardBuffer1
  5474  00076E  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5475  000770  0E05               	movlw	high _sdCardBuffer1
  5476  000772  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5477  000774  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5478  000778                     l6081:
  5479  000778  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5480  00077C  0101               	movlb	1	; () banked
  5481  00077E  6FD0               	movwf	main@status& (0+255),b
  5482  000780  29D0               	incf	main@status& (0+255),w,b
  5483  000782  B4D8               	btfsc	status,2,c
  5484  000784  EFC6  F003         	goto	u6151
  5485  000788  EFC8  F003         	goto	u6150
  5486  00078C                     u6151:
  5487  00078C  EFBC  F003         	goto	l6081
  5488  000790                     u6150:
  5489  000790                     
  5490                           ; BSR set to: 1
  5491                           ;main.c: 236:                         if ((status & 0x1F) != 0x5) {
  5492  000790  51D0               	movf	main@status& (0+255),w,b
  5493  000792  0B1F               	andlw	31
  5494  000794  0A05               	xorlw	5
  5495  000796  B4D8               	btfsc	status,2,c
  5496  000798  EFD0  F003         	goto	u6161
  5497  00079C  EFD2  F003         	goto	u6160
  5498  0007A0                     u6161:
  5499  0007A0  EFEC  F003         	goto	l6089
  5500  0007A4                     u6160:
  5501  0007A4                     
  5502                           ; BSR set to: 1
  5503                           ;main.c: 237:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5504  0007A4  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5505  0007A8  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5506  0007AC  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5507  0007B0  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5508  0007B4  0ED5               	movlw	low _sdCardBuffer1
  5509  0007B6  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5510  0007B8  0E05               	movlw	high _sdCardBuffer1
  5511  0007BA  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5512  0007BC  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5513  0007C0                     l6087:
  5514  0007C0  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5515  0007C4  0101               	movlb	1	; () banked
  5516  0007C6  6FD0               	movwf	main@status& (0+255),b
  5517  0007C8  29D0               	incf	main@status& (0+255),w,b
  5518  0007CA  B4D8               	btfsc	status,2,c
  5519  0007CC  EFEA  F003         	goto	u6171
  5520  0007D0  EFEC  F003         	goto	u6170
  5521  0007D4                     u6171:
  5522  0007D4  EFE0  F003         	goto	l6087
  5523  0007D8                     u6170:
  5524  0007D8                     l6089:
  5525                           
  5526                           ; BSR set to: 1
  5527                           ;main.c: 240:                         buffer1Full = 0;
  5528  0007D8  0E00               	movlw	0
  5529  0007DA  0100               	movlb	0	; () banked
  5530  0007DC  6FD1               	movwf	_buffer1Full& (0+255),b
  5531  0007DE                     
  5532                           ; BSR set to: 0
  5533                           ;main.c: 241:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5534  0007DE  0101               	movlb	1	; () banked
  5535  0007E0  51D0               	movf	main@status& (0+255),w,b
  5536  0007E2  0B1F               	andlw	31
  5537  0007E4  0A05               	xorlw	5
  5538  0007E6  B4D8               	btfsc	status,2,c
  5539  0007E8  EFF8  F003         	goto	u6181
  5540  0007EC  EFFA  F003         	goto	u6180
  5541  0007F0                     u6181:
  5542  0007F0  EF1B  F004         	goto	l6101
  5543  0007F4                     u6180:
  5544  0007F4                     
  5545                           ; BSR set to: 1
  5546  0007F4  0E80               	movlw	128
  5547  0007F6  61CF               	cpfslt	main@failureIndex& (0+255),b
  5548  0007F8  EF00  F004         	goto	u6191
  5549  0007FC  EF02  F004         	goto	u6190
  5550  000800                     u6191:
  5551  000800  EF1B  F004         	goto	l6101
  5552  000804                     u6190:
  5553  000804                     
  5554                           ; BSR set to: 1
  5555                           ;main.c: 242:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5556  000804  51CF               	movf	main@failureIndex& (0+255),w,b
  5557  000806  0D04               	mullw	4
  5558  000808  0ED5               	movlw	low _writeFailureTable
  5559  00080A  24F3               	addwf	243,w,c
  5560  00080C  6ED9               	movwf	fsr2l,c
  5561  00080E  0E01               	movlw	high _writeFailureTable
  5562  000810  20F4               	addwfc	prodh,w,c
  5563  000812  6EDA               	movwf	fsr2h,c
  5564  000814  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  5565  000818  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  5566  00081C  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  5567  000820  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  5568  000824                     
  5569                           ; BSR set to: 1
  5570                           ;main.c: 243:                             writeFailureStatus[failureIndex] = status;
  5571  000824  0E00               	movlw	low _writeFailureStatus
  5572  000826  25CF               	addwf	main@failureIndex& (0+255),w,b
  5573  000828  6ED9               	movwf	fsr2l,c
  5574  00082A  6ADA               	clrf	fsr2h,c
  5575  00082C  0E01               	movlw	high _writeFailureStatus
  5576  00082E  22DA               	addwfc	fsr2h,f,c
  5577  000830  C1D0  FFDF         	movff	main@status,indf2
  5578  000834                     
  5579                           ; BSR set to: 1
  5580                           ;main.c: 244:                             failureIndex++;
  5581  000834  2BCF               	incf	main@failureIndex& (0+255),f,b
  5582  000836                     l6101:
  5583                           
  5584                           ; BSR set to: 1
  5585                           ;main.c: 246:                         writeAddress = incrementAddress(writeAddress);
  5586  000836  C1D1  F013         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  5587  00083A  C1D2  F014         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  5588  00083E  C1D3  F015         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  5589  000842  C1D4  F016         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  5590  000846  EC8B  F019         	call	_incrementAddress	;wreg free
  5591  00084A  C013  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  5592  00084E  C014  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  5593  000852  C015  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  5594  000856  C016  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  5595  00085A                     l6103:
  5596                           
  5597                           ;main.c: 248:                     if (buffer2Full) {
  5598  00085A  0100               	movlb	0	; () banked
  5599  00085C  51D0               	movf	_buffer2Full& (0+255),w,b
  5600  00085E  B4D8               	btfsc	status,2,c
  5601  000860  EF34  F004         	goto	u6201
  5602  000864  EF36  F004         	goto	u6200
  5603  000868                     u6201:
  5604  000868  EFB5  F004         	goto	l6129
  5605  00086C                     u6200:
  5606  00086C                     
  5607                           ; BSR set to: 0
  5608                           ;main.c: 249:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  5609  00086C  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5610  000870  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5611  000874  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5612  000878  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5613  00087C  0ED5               	movlw	low _sdCardBuffer2
  5614  00087E  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5615  000880  0E03               	movlw	high _sdCardBuffer2
  5616  000882  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5617  000884  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5618  000888                     l6107:
  5619  000888  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5620  00088C  0101               	movlb	1	; () banked
  5621  00088E  6FD0               	movwf	main@status& (0+255),b
  5622  000890  29D0               	incf	main@status& (0+255),w,b
  5623  000892  B4D8               	btfsc	status,2,c
  5624  000894  EF4E  F004         	goto	u6211
  5625  000898  EF50  F004         	goto	u6210
  5626  00089C                     u6211:
  5627  00089C  EF44  F004         	goto	l6107
  5628  0008A0                     u6210:
  5629  0008A0                     
  5630                           ; BSR set to: 1
  5631                           ;main.c: 251:                         if ((status & 0x1F) != 0x5) {
  5632  0008A0  51D0               	movf	main@status& (0+255),w,b
  5633  0008A2  0B1F               	andlw	31
  5634  0008A4  0A05               	xorlw	5
  5635  0008A6  B4D8               	btfsc	status,2,c
  5636  0008A8  EF58  F004         	goto	u6221
  5637  0008AC  EF5A  F004         	goto	u6220
  5638  0008B0                     u6221:
  5639  0008B0  EF74  F004         	goto	l6115
  5640  0008B4                     u6220:
  5641  0008B4                     
  5642                           ; BSR set to: 1
  5643                           ;main.c: 252:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  5644  0008B4  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5645  0008B8  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5646  0008BC  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5647  0008C0  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5648  0008C4  0ED5               	movlw	low _sdCardBuffer2
  5649  0008C6  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5650  0008C8  0E03               	movlw	high _sdCardBuffer2
  5651  0008CA  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5652  0008CC  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5653  0008D0                     l6113:
  5654  0008D0  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5655  0008D4  0101               	movlb	1	; () banked
  5656  0008D6  6FD0               	movwf	main@status& (0+255),b
  5657  0008D8  29D0               	incf	main@status& (0+255),w,b
  5658  0008DA  B4D8               	btfsc	status,2,c
  5659  0008DC  EF72  F004         	goto	u6231
  5660  0008E0  EF74  F004         	goto	u6230
  5661  0008E4                     u6231:
  5662  0008E4  EF68  F004         	goto	l6113
  5663  0008E8                     u6230:
  5664  0008E8                     l6115:
  5665                           
  5666                           ; BSR set to: 1
  5667                           ;main.c: 255:                         buffer2Full = 0;
  5668  0008E8  0E00               	movlw	0
  5669  0008EA  0100               	movlb	0	; () banked
  5670  0008EC  6FD0               	movwf	_buffer2Full& (0+255),b
  5671  0008EE                     
  5672                           ; BSR set to: 0
  5673                           ;main.c: 256:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5674  0008EE  0101               	movlb	1	; () banked
  5675  0008F0  51D0               	movf	main@status& (0+255),w,b
  5676  0008F2  0B1F               	andlw	31
  5677  0008F4  0A05               	xorlw	5
  5678  0008F6  B4D8               	btfsc	status,2,c
  5679  0008F8  EF80  F004         	goto	u6241
  5680  0008FC  EF82  F004         	goto	u6240
  5681  000900                     u6241:
  5682  000900  EFA3  F004         	goto	l6127
  5683  000904                     u6240:
  5684  000904                     
  5685                           ; BSR set to: 1
  5686  000904  0E80               	movlw	128
  5687  000906  61CF               	cpfslt	main@failureIndex& (0+255),b
  5688  000908  EF88  F004         	goto	u6251
  5689  00090C  EF8A  F004         	goto	u6250
  5690  000910                     u6251:
  5691  000910  EFA3  F004         	goto	l6127
  5692  000914                     u6250:
  5693  000914                     
  5694                           ; BSR set to: 1
  5695                           ;main.c: 257:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5696  000914  51CF               	movf	main@failureIndex& (0+255),w,b
  5697  000916  0D04               	mullw	4
  5698  000918  0ED5               	movlw	low _writeFailureTable
  5699  00091A  24F3               	addwf	243,w,c
  5700  00091C  6ED9               	movwf	fsr2l,c
  5701  00091E  0E01               	movlw	high _writeFailureTable
  5702  000920  20F4               	addwfc	prodh,w,c
  5703  000922  6EDA               	movwf	fsr2h,c
  5704  000924  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  5705  000928  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  5706  00092C  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  5707  000930  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  5708  000934                     
  5709                           ; BSR set to: 1
  5710                           ;main.c: 258:                             writeFailureStatus[failureIndex] = status;
  5711  000934  0E00               	movlw	low _writeFailureStatus
  5712  000936  25CF               	addwf	main@failureIndex& (0+255),w,b
  5713  000938  6ED9               	movwf	fsr2l,c
  5714  00093A  6ADA               	clrf	fsr2h,c
  5715  00093C  0E01               	movlw	high _writeFailureStatus
  5716  00093E  22DA               	addwfc	fsr2h,f,c
  5717  000940  C1D0  FFDF         	movff	main@status,indf2
  5718  000944                     
  5719                           ; BSR set to: 1
  5720                           ;main.c: 259:                             failureIndex++;
  5721  000944  2BCF               	incf	main@failureIndex& (0+255),f,b
  5722  000946                     l6127:
  5723                           
  5724                           ; BSR set to: 1
  5725                           ;main.c: 261:                         writeAddress = incrementAddress(writeAddress);
  5726  000946  C1D1  F013         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  5727  00094A  C1D2  F014         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  5728  00094E  C1D3  F015         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  5729  000952  C1D4  F016         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  5730  000956  EC8B  F019         	call	_incrementAddress	;wreg free
  5731  00095A  C013  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  5732  00095E  C014  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  5733  000962  C015  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  5734  000966  C016  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  5735  00096A                     l6129:
  5736                           
  5737                           ;main.c: 232:                 while (!(EUSART1_is_rx_ready())) {
  5738  00096A  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5739  00096E  0900               	iorlw	0
  5740  000970  B4D8               	btfsc	status,2,c
  5741  000972  EFBD  F004         	goto	u6261
  5742  000976  EFBF  F004         	goto	u6260
  5743  00097A                     u6261:
  5744  00097A  EFA5  F003         	goto	l6077
  5745  00097E                     u6260:
  5746  00097E                     
  5747                           ;main.c: 264:                 EUSART1_Read();
  5748  00097E  EC2F  F01B         	call	_EUSART1_Read	;wreg free
  5749  000982                     
  5750                           ;main.c: 265:                 stopCollect = 1;
  5751  000982  0E01               	movlw	1
  5752  000984  6E49               	movwf	_stopCollect^0,c
  5753                           
  5754                           ;main.c: 267:                 while (buffer1Full || buffer2Full || collecting) {
  5755  000986  EFD4  F005         	goto	l6187
  5756  00098A                     l6135:
  5757                           
  5758                           ; BSR set to: 0
  5759                           ;main.c: 268:                     if (buffer1Full) {
  5760  00098A  51D1               	movf	_buffer1Full& (0+255),w,b
  5761  00098C  B4D8               	btfsc	status,2,c
  5762  00098E  EFCB  F004         	goto	u6271
  5763  000992  EFCD  F004         	goto	u6270
  5764  000996                     u6271:
  5765  000996  EF4C  F005         	goto	l6161
  5766  00099A                     u6270:
  5767  00099A                     
  5768                           ; BSR set to: 0
  5769                           ;main.c: 269:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5770  00099A  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5771  00099E  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5772  0009A2  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5773  0009A6  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5774  0009AA  0ED5               	movlw	low _sdCardBuffer1
  5775  0009AC  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5776  0009AE  0E05               	movlw	high _sdCardBuffer1
  5777  0009B0  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5778  0009B2  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5779  0009B6                     l6139:
  5780  0009B6  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5781  0009BA  0101               	movlb	1	; () banked
  5782  0009BC  6FD0               	movwf	main@status& (0+255),b
  5783  0009BE  29D0               	incf	main@status& (0+255),w,b
  5784  0009C0  B4D8               	btfsc	status,2,c
  5785  0009C2  EFE5  F004         	goto	u6281
  5786  0009C6  EFE7  F004         	goto	u6280
  5787  0009CA                     u6281:
  5788  0009CA  EFDB  F004         	goto	l6139
  5789  0009CE                     u6280:
  5790  0009CE                     
  5791                           ; BSR set to: 1
  5792                           ;main.c: 271:                         if ((status & 0x1F) != 0x5) {
  5793  0009CE  51D0               	movf	main@status& (0+255),w,b
  5794  0009D0  0B1F               	andlw	31
  5795  0009D2  0A05               	xorlw	5
  5796  0009D4  B4D8               	btfsc	status,2,c
  5797  0009D6  EFEF  F004         	goto	u6291
  5798  0009DA  EFF1  F004         	goto	u6290
  5799  0009DE                     u6291:
  5800  0009DE  EF0B  F005         	goto	l6147
  5801  0009E2                     u6290:
  5802  0009E2                     
  5803                           ; BSR set to: 1
  5804                           ;main.c: 272:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5805  0009E2  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5806  0009E6  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5807  0009EA  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5808  0009EE  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5809  0009F2  0ED5               	movlw	low _sdCardBuffer1
  5810  0009F4  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5811  0009F6  0E05               	movlw	high _sdCardBuffer1
  5812  0009F8  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5813  0009FA  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5814  0009FE                     l6145:
  5815  0009FE  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5816  000A02  0101               	movlb	1	; () banked
  5817  000A04  6FD0               	movwf	main@status& (0+255),b
  5818  000A06  29D0               	incf	main@status& (0+255),w,b
  5819  000A08  B4D8               	btfsc	status,2,c
  5820  000A0A  EF09  F005         	goto	u6301
  5821  000A0E  EF0B  F005         	goto	u6300
  5822  000A12                     u6301:
  5823  000A12  EFFF  F004         	goto	l6145
  5824  000A16                     u6300:
  5825  000A16                     l6147:
  5826                           
  5827                           ; BSR set to: 1
  5828                           ;main.c: 275:                         buffer1Full = 0;
  5829  000A16  0E00               	movlw	0
  5830  000A18  0100               	movlb	0	; () banked
  5831  000A1A  6FD1               	movwf	_buffer1Full& (0+255),b
  5832  000A1C                     
  5833                           ; BSR set to: 0
  5834                           ;main.c: 276:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5835  000A1C  0101               	movlb	1	; () banked
  5836  000A1E  51D0               	movf	main@status& (0+255),w,b
  5837  000A20  0B1F               	andlw	31
  5838  000A22  0A05               	xorlw	5
  5839  000A24  B4D8               	btfsc	status,2,c
  5840  000A26  EF17  F005         	goto	u6311
  5841  000A2A  EF19  F005         	goto	u6310
  5842  000A2E                     u6311:
  5843  000A2E  EF3A  F005         	goto	l6159
  5844  000A32                     u6310:
  5845  000A32                     
  5846                           ; BSR set to: 1
  5847  000A32  0E80               	movlw	128
  5848  000A34  61CF               	cpfslt	main@failureIndex& (0+255),b
  5849  000A36  EF1F  F005         	goto	u6321
  5850  000A3A  EF21  F005         	goto	u6320
  5851  000A3E                     u6321:
  5852  000A3E  EF3A  F005         	goto	l6159
  5853  000A42                     u6320:
  5854  000A42                     
  5855                           ; BSR set to: 1
  5856                           ;main.c: 277:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5857  000A42  51CF               	movf	main@failureIndex& (0+255),w,b
  5858  000A44  0D04               	mullw	4
  5859  000A46  0ED5               	movlw	low _writeFailureTable
  5860  000A48  24F3               	addwf	243,w,c
  5861  000A4A  6ED9               	movwf	fsr2l,c
  5862  000A4C  0E01               	movlw	high _writeFailureTable
  5863  000A4E  20F4               	addwfc	prodh,w,c
  5864  000A50  6EDA               	movwf	fsr2h,c
  5865  000A52  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  5866  000A56  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  5867  000A5A  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  5868  000A5E  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  5869  000A62                     
  5870                           ; BSR set to: 1
  5871                           ;main.c: 278:                             writeFailureStatus[failureIndex] = status;
  5872  000A62  0E00               	movlw	low _writeFailureStatus
  5873  000A64  25CF               	addwf	main@failureIndex& (0+255),w,b
  5874  000A66  6ED9               	movwf	fsr2l,c
  5875  000A68  6ADA               	clrf	fsr2h,c
  5876  000A6A  0E01               	movlw	high _writeFailureStatus
  5877  000A6C  22DA               	addwfc	fsr2h,f,c
  5878  000A6E  C1D0  FFDF         	movff	main@status,indf2
  5879  000A72                     
  5880                           ; BSR set to: 1
  5881                           ;main.c: 279:                             failureIndex++;
  5882  000A72  2BCF               	incf	main@failureIndex& (0+255),f,b
  5883  000A74                     l6159:
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;main.c: 281:                         writeAddress = incrementAddress(writeAddress);
  5887  000A74  C1D1  F013         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  5888  000A78  C1D2  F014         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  5889  000A7C  C1D3  F015         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  5890  000A80  C1D4  F016         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  5891  000A84  EC8B  F019         	call	_incrementAddress	;wreg free
  5892  000A88  C013  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  5893  000A8C  C014  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  5894  000A90  C015  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  5895  000A94  C016  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  5896  000A98                     l6161:
  5897                           
  5898                           ;main.c: 283:                     if (buffer2Full) {
  5899  000A98  0100               	movlb	0	; () banked
  5900  000A9A  51D0               	movf	_buffer2Full& (0+255),w,b
  5901  000A9C  B4D8               	btfsc	status,2,c
  5902  000A9E  EF53  F005         	goto	u6331
  5903  000AA2  EF55  F005         	goto	u6330
  5904  000AA6                     u6331:
  5905  000AA6  EFD4  F005         	goto	l6187
  5906  000AAA                     u6330:
  5907  000AAA                     
  5908                           ; BSR set to: 0
  5909                           ;main.c: 284:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  5910  000AAA  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5911  000AAE  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5912  000AB2  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5913  000AB6  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5914  000ABA  0ED5               	movlw	low _sdCardBuffer2
  5915  000ABC  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5916  000ABE  0E03               	movlw	high _sdCardBuffer2
  5917  000AC0  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5918  000AC2  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5919  000AC6                     l6165:
  5920  000AC6  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5921  000ACA  0101               	movlb	1	; () banked
  5922  000ACC  6FD0               	movwf	main@status& (0+255),b
  5923  000ACE  29D0               	incf	main@status& (0+255),w,b
  5924  000AD0  B4D8               	btfsc	status,2,c
  5925  000AD2  EF6D  F005         	goto	u6341
  5926  000AD6  EF6F  F005         	goto	u6340
  5927  000ADA                     u6341:
  5928  000ADA  EF63  F005         	goto	l6165
  5929  000ADE                     u6340:
  5930  000ADE                     
  5931                           ; BSR set to: 1
  5932                           ;main.c: 286:                         if ((status & 0x1F) != 0x5) {
  5933  000ADE  51D0               	movf	main@status& (0+255),w,b
  5934  000AE0  0B1F               	andlw	31
  5935  000AE2  0A05               	xorlw	5
  5936  000AE4  B4D8               	btfsc	status,2,c
  5937  000AE6  EF77  F005         	goto	u6351
  5938  000AEA  EF79  F005         	goto	u6350
  5939  000AEE                     u6351:
  5940  000AEE  EF93  F005         	goto	l6173
  5941  000AF2                     u6350:
  5942  000AF2                     
  5943                           ; BSR set to: 1
  5944                           ;main.c: 287:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  5945  000AF2  C1D1  F014         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5946  000AF6  C1D2  F015         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5947  000AFA  C1D3  F016         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5948  000AFE  C1D4  F017         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5949  000B02  0ED5               	movlw	low _sdCardBuffer2
  5950  000B04  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5951  000B06  0E03               	movlw	high _sdCardBuffer2
  5952  000B08  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5953  000B0A  EC1D  F018         	call	_SDCARD_WriteBlock	;wreg free
  5954  000B0E                     l6171:
  5955  000B0E  EC2C  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5956  000B12  0101               	movlb	1	; () banked
  5957  000B14  6FD0               	movwf	main@status& (0+255),b
  5958  000B16  29D0               	incf	main@status& (0+255),w,b
  5959  000B18  B4D8               	btfsc	status,2,c
  5960  000B1A  EF91  F005         	goto	u6361
  5961  000B1E  EF93  F005         	goto	u6360
  5962  000B22                     u6361:
  5963  000B22  EF87  F005         	goto	l6171
  5964  000B26                     u6360:
  5965  000B26                     l6173:
  5966                           
  5967                           ; BSR set to: 1
  5968                           ;main.c: 290:                         buffer2Full = 0;
  5969  000B26  0E00               	movlw	0
  5970  000B28  0100               	movlb	0	; () banked
  5971  000B2A  6FD0               	movwf	_buffer2Full& (0+255),b
  5972  000B2C                     
  5973                           ; BSR set to: 0
  5974                           ;main.c: 291:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5975  000B2C  0101               	movlb	1	; () banked
  5976  000B2E  51D0               	movf	main@status& (0+255),w,b
  5977  000B30  0B1F               	andlw	31
  5978  000B32  0A05               	xorlw	5
  5979  000B34  B4D8               	btfsc	status,2,c
  5980  000B36  EF9F  F005         	goto	u6371
  5981  000B3A  EFA1  F005         	goto	u6370
  5982  000B3E                     u6371:
  5983  000B3E  EFC2  F005         	goto	l6185
  5984  000B42                     u6370:
  5985  000B42                     
  5986                           ; BSR set to: 1
  5987  000B42  0E80               	movlw	128
  5988  000B44  61CF               	cpfslt	main@failureIndex& (0+255),b
  5989  000B46  EFA7  F005         	goto	u6381
  5990  000B4A  EFA9  F005         	goto	u6380
  5991  000B4E                     u6381:
  5992  000B4E  EFC2  F005         	goto	l6185
  5993  000B52                     u6380:
  5994  000B52                     
  5995                           ; BSR set to: 1
  5996                           ;main.c: 292:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5997  000B52  51CF               	movf	main@failureIndex& (0+255),w,b
  5998  000B54  0D04               	mullw	4
  5999  000B56  0ED5               	movlw	low _writeFailureTable
  6000  000B58  24F3               	addwf	243,w,c
  6001  000B5A  6ED9               	movwf	fsr2l,c
  6002  000B5C  0E01               	movlw	high _writeFailureTable
  6003  000B5E  20F4               	addwfc	prodh,w,c
  6004  000B60  6EDA               	movwf	fsr2h,c
  6005  000B62  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  6006  000B66  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  6007  000B6A  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  6008  000B6E  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  6009  000B72                     
  6010                           ; BSR set to: 1
  6011                           ;main.c: 293:                             writeFailureStatus[failureIndex] = status;
  6012  000B72  0E00               	movlw	low _writeFailureStatus
  6013  000B74  25CF               	addwf	main@failureIndex& (0+255),w,b
  6014  000B76  6ED9               	movwf	fsr2l,c
  6015  000B78  6ADA               	clrf	fsr2h,c
  6016  000B7A  0E01               	movlw	high _writeFailureStatus
  6017  000B7C  22DA               	addwfc	fsr2h,f,c
  6018  000B7E  C1D0  FFDF         	movff	main@status,indf2
  6019  000B82                     
  6020                           ; BSR set to: 1
  6021                           ;main.c: 294:                             failureIndex++;
  6022  000B82  2BCF               	incf	main@failureIndex& (0+255),f,b
  6023  000B84                     l6185:
  6024                           
  6025                           ; BSR set to: 1
  6026                           ;main.c: 296:                         writeAddress = incrementAddress(writeAddress);
  6027  000B84  C1D1  F013         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  6028  000B88  C1D2  F014         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  6029  000B8C  C1D3  F015         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  6030  000B90  C1D4  F016         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  6031  000B94  EC8B  F019         	call	_incrementAddress	;wreg free
  6032  000B98  C013  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  6033  000B9C  C014  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  6034  000BA0  C015  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  6035  000BA4  C016  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  6036  000BA8                     l6187:
  6037                           
  6038                           ;main.c: 267:                 while (buffer1Full || buffer2Full || collecting) {
  6039  000BA8  0100               	movlb	0	; () banked
  6040  000BAA  51D1               	movf	_buffer1Full& (0+255),w,b
  6041  000BAC  A4D8               	btfss	status,2,c
  6042  000BAE  EFDB  F005         	goto	u6391
  6043  000BB2  EFDD  F005         	goto	u6390
  6044  000BB6                     u6391:
  6045  000BB6  EFC5  F004         	goto	l6135
  6046  000BBA                     u6390:
  6047  000BBA                     
  6048                           ; BSR set to: 0
  6049  000BBA  51D0               	movf	_buffer2Full& (0+255),w,b
  6050  000BBC  A4D8               	btfss	status,2,c
  6051  000BBE  EFE3  F005         	goto	u6401
  6052  000BC2  EFE5  F005         	goto	u6400
  6053  000BC6                     u6401:
  6054  000BC6  EFC5  F004         	goto	l6135
  6055  000BCA                     u6400:
  6056  000BCA                     
  6057                           ; BSR set to: 0
  6058  000BCA  51CF               	movf	_collecting& (0+255),w,b
  6059  000BCC  A4D8               	btfss	status,2,c
  6060  000BCE  EFEB  F005         	goto	u6411
  6061  000BD2  EFED  F005         	goto	u6410
  6062  000BD6                     u6411:
  6063  000BD6  EFC5  F004         	goto	l6135
  6064  000BDA                     u6410:
  6065  000BDA                     
  6066                           ; BSR set to: 0
  6067                           ;main.c: 299:                 writeEndAddress = writeAddress;
  6068  000BDA  C1D1  F1C3         	movff	main@writeAddress_1285,main@writeEndAddress
  6069  000BDE  C1D2  F1C4         	movff	main@writeAddress_1285+1,main@writeEndAddress+1
  6070  000BE2  C1D3  F1C5         	movff	main@writeAddress_1285+2,main@writeEndAddress+2
  6071  000BE6  C1D4  F1C6         	movff	main@writeAddress_1285+3,main@writeEndAddress+3
  6072  000BEA                     
  6073                           ; BSR set to: 0
  6074                           ;main.c: 300:                 printf ("\r\n");
  6075  000BEA  0EAE               	movlw	low (STR_71+12)
  6076  000BEC  6FA3               	movwf	printf@fmt& (0+255),b
  6077  000BEE  0EFF               	movlw	high (STR_71+12)
  6078  000BF0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6079  000BF2  EC1B  F01B         	call	_printf	;wreg free
  6080  000BF6                     
  6081                           ;main.c: 301:                 if (failureIndex > 0) {
  6082  000BF6  0101               	movlb	1	; () banked
  6083  000BF8  51CF               	movf	main@failureIndex& (0+255),w,b
  6084  000BFA  B4D8               	btfsc	status,2,c
  6085  000BFC  EF02  F006         	goto	u6421
  6086  000C00  EF04  F006         	goto	u6420
  6087  000C04                     u6421:
  6088  000C04  EF7E  F000         	goto	l5953
  6089  000C08                     u6420:
  6090  000C08                     
  6091                           ; BSR set to: 1
  6092                           ;main.c: 302:                     printf ("Listing write failures: \r\n");
  6093  000C08  0E21               	movlw	low STR_39
  6094  000C0A  0100               	movlb	0	; () banked
  6095  000C0C  6FA3               	movwf	printf@fmt& (0+255),b
  6096  000C0E  0EFE               	movlw	high STR_39
  6097  000C10  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6098  000C12  EC1B  F01B         	call	_printf	;wreg free
  6099  000C16                     
  6100                           ;main.c: 303:                     for (uint8_t i = 0; i < failureIndex; i++) {
  6101  000C16  0E00               	movlw	0
  6102  000C18  0101               	movlb	1	; () banked
  6103  000C1A  6FB7               	movwf	main@i_1289& (0+255),b
  6104  000C1C  EF65  F006         	goto	l6213
  6105  000C20                     l6201:
  6106                           
  6107                           ; BSR set to: 1
  6108                           ;main.c: 304:                         uint32_t addr = writeFailureTable[i];
  6109  000C20  51B7               	movf	main@i_1289& (0+255),w,b
  6110  000C22  0D04               	mullw	4
  6111  000C24  0ED5               	movlw	low _writeFailureTable
  6112  000C26  24F3               	addwf	243,w,c
  6113  000C28  6ED9               	movwf	fsr2l,c
  6114  000C2A  0E01               	movlw	high _writeFailureTable
  6115  000C2C  20F4               	addwfc	prodh,w,c
  6116  000C2E  6EDA               	movwf	fsr2h,c
  6117  000C30  CFDE F1AB          	movff	postinc2,main@addr
  6118  000C34  CFDE F1AC          	movff	postinc2,main@addr+1
  6119  000C38  CFDE F1AD          	movff	postinc2,main@addr+2
  6120  000C3C  CFDE F1AE          	movff	postinc2,main@addr+3
  6121  000C40                     
  6122                           ; BSR set to: 1
  6123                           ;main.c: 305:                         printf("Status code: %d ---- Address: ", writeFail
      +                          ureStatus[i]);
  6124  000C40  0E56               	movlw	low STR_40
  6125  000C42  0100               	movlb	0	; () banked
  6126  000C44  6FA3               	movwf	printf@fmt& (0+255),b
  6127  000C46  0EFD               	movlw	high STR_40
  6128  000C48  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6129  000C4A  0E00               	movlw	low _writeFailureStatus
  6130  000C4C  0101               	movlb	1	; () banked
  6131  000C4E  25B7               	addwf	main@i_1289& (0+255),w,b
  6132  000C50  6ED9               	movwf	fsr2l,c
  6133  000C52  6ADA               	clrf	fsr2h,c
  6134  000C54  0E01               	movlw	high _writeFailureStatus
  6135  000C56  22DA               	addwfc	fsr2h,f,c
  6136  000C58  50DF               	movf	indf2,w,c
  6137  000C5A  0100               	movlb	0	; () banked
  6138  000C5C  6FBB               	movwf	??_main& (0+255),b
  6139  000C5E  51BB               	movf	??_main& (0+255),w,b
  6140  000C60  6FA5               	movwf	(?_printf+2)& (0+255),b
  6141  000C62  6BA6               	clrf	(?_printf+3)& (0+255),b
  6142  000C64  EC1B  F01B         	call	_printf	;wreg free
  6143  000C68                     
  6144                           ;main.c: 306:                         printf("%04x", addr >> 16);
  6145  000C68  0EEE               	movlw	low STR_10
  6146  000C6A  0100               	movlb	0	; () banked
  6147  000C6C  6FA3               	movwf	printf@fmt& (0+255),b
  6148  000C6E  0EFF               	movlw	high STR_10
  6149  000C70  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6150  000C72  C1AD  F0A5         	movff	main@addr+2,?_printf+2
  6151  000C76  C1AE  F0A6         	movff	main@addr+3,?_printf+3
  6152  000C7A  6BA7               	clrf	(?_printf+4)& (0+255),b
  6153  000C7C  6BA8               	clrf	(?_printf+5)& (0+255),b
  6154  000C7E  EC1B  F01B         	call	_printf	;wreg free
  6155  000C82                     
  6156                           ;main.c: 307:                         printf(":");
  6157  000C82  0EFD               	movlw	low STR_11
  6158  000C84  0100               	movlb	0	; () banked
  6159  000C86  6FA3               	movwf	printf@fmt& (0+255),b
  6160  000C88  0EFF               	movlw	high STR_11
  6161  000C8A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6162  000C8C  EC1B  F01B         	call	_printf	;wreg free
  6163  000C90                     
  6164                           ;main.c: 308:                         printf("%04x\r\n", addr & 0X0000FFFF);
  6165  000C90  0EE1               	movlw	low STR_43
  6166  000C92  0100               	movlb	0	; () banked
  6167  000C94  6FA3               	movwf	printf@fmt& (0+255),b
  6168  000C96  0EFF               	movlw	high STR_43
  6169  000C98  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6170  000C9A  0EFF               	movlw	255
  6171  000C9C  0101               	movlb	1	; () banked
  6172  000C9E  15AB               	andwf	main@addr& (0+255),w,b
  6173  000CA0  0100               	movlb	0	; () banked
  6174  000CA2  6FA5               	movwf	(?_printf+2)& (0+255),b
  6175  000CA4  0EFF               	movlw	255
  6176  000CA6  0101               	movlb	1	; () banked
  6177  000CA8  15AC               	andwf	(main@addr+1)& (0+255),w,b
  6178  000CAA  0100               	movlb	0	; () banked
  6179  000CAC  6FA6               	movwf	(?_printf+3)& (0+255),b
  6180  000CAE  0E00               	movlw	0
  6181  000CB0  0101               	movlb	1	; () banked
  6182  000CB2  15AD               	andwf	(main@addr+2)& (0+255),w,b
  6183  000CB4  0100               	movlb	0	; () banked
  6184  000CB6  6FA7               	movwf	(?_printf+4)& (0+255),b
  6185  000CB8  0E00               	movlw	0
  6186  000CBA  0101               	movlb	1	; () banked
  6187  000CBC  15AE               	andwf	(main@addr+3)& (0+255),w,b
  6188  000CBE  0100               	movlb	0	; () banked
  6189  000CC0  6FA8               	movwf	(?_printf+5)& (0+255),b
  6190  000CC2  EC1B  F01B         	call	_printf	;wreg free
  6191  000CC6                     
  6192                           ;main.c: 309:                     }
  6193  000CC6  0101               	movlb	1	; () banked
  6194  000CC8  2BB7               	incf	main@i_1289& (0+255),f,b
  6195  000CCA                     l6213:
  6196                           
  6197                           ; BSR set to: 1
  6198  000CCA  51CF               	movf	main@failureIndex& (0+255),w,b
  6199  000CCC  5DB7               	subwf	main@i_1289& (0+255),w,b
  6200  000CCE  A0D8               	btfss	status,0,c
  6201  000CD0  EF6C  F006         	goto	u6431
  6202  000CD4  EF6E  F006         	goto	u6430
  6203  000CD8                     u6431:
  6204  000CD8  EF10  F006         	goto	l6201
  6205  000CDC                     u6430:
  6206  000CDC  EF7E  F000         	goto	l5953
  6207  000CE0                     l6215:
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;main.c: 316:                 printf("You may terminate spooling at anytime with a key p
      +                          ress.\r\n");
  6211  000CE0  0E96               	movlw	low STR_44
  6212  000CE2  6FA3               	movwf	printf@fmt& (0+255),b
  6213  000CE4  0EFA               	movlw	high STR_44
  6214  000CE6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6215  000CE8  EC1B  F01B         	call	_printf	;wreg free
  6216                           
  6217                           ;main.c: 317:                 printf("To spool terminal contents into a file follow thes
      +                          e instructions:\r\n");
  6218  000CEC  0EC8               	movlw	low STR_45
  6219  000CEE  0100               	movlb	0	; () banked
  6220  000CF0  6FA3               	movwf	printf@fmt& (0+255),b
  6221  000CF2  0EF3               	movlw	high STR_45
  6222  000CF4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6223  000CF6  EC1B  F01B         	call	_printf	;wreg free
  6224                           
  6225                           ;main.c: 318:                 printf("\r\n");
  6226  000CFA  0EAE               	movlw	low (STR_71+12)
  6227  000CFC  0100               	movlb	0	; () banked
  6228  000CFE  6FA3               	movwf	printf@fmt& (0+255),b
  6229  000D00  0EFF               	movlw	high (STR_71+12)
  6230  000D02  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6231  000D04  EC1B  F01B         	call	_printf	;wreg free
  6232                           
  6233                           ;main.c: 319:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6234  000D08  0ED0               	movlw	low STR_47
  6235  000D0A  0100               	movlb	0	; () banked
  6236  000D0C  6FA3               	movwf	printf@fmt& (0+255),b
  6237  000D0E  0EFA               	movlw	high STR_47
  6238  000D10  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6239  000D12  EC1B  F01B         	call	_printf	;wreg free
  6240                           
  6241                           ;main.c: 320:                 printf("Select:     Change settings...\r\n");
  6242  000D16  0EF6               	movlw	low STR_48
  6243  000D18  0100               	movlb	0	; () banked
  6244  000D1A  6FA3               	movwf	printf@fmt& (0+255),b
  6245  000D1C  0EFC               	movlw	high STR_48
  6246  000D1E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6247  000D20  EC1B  F01B         	call	_printf	;wreg free
  6248                           
  6249                           ;main.c: 321:                 printf("Select:     Logging\r\n");
  6250  000D24  0EB6               	movlw	low STR_49
  6251  000D26  0100               	movlb	0	; () banked
  6252  000D28  6FA3               	movwf	printf@fmt& (0+255),b
  6253  000D2A  0EFE               	movlw	high STR_49
  6254  000D2C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6255  000D2E  EC1B  F01B         	call	_printf	;wreg free
  6256                           
  6257                           ;main.c: 322:                 printf("Select:     Session logging: All session output\r\
      +                          n");
  6258  000D32  0E77               	movlw	low STR_50
  6259  000D34  0100               	movlb	0	; () banked
  6260  000D36  6FA3               	movwf	printf@fmt& (0+255),b
  6261  000D38  0EFB               	movlw	high STR_50
  6262  000D3A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6263  000D3C  EC1B  F01B         	call	_printf	;wreg free
  6264                           
  6265                           ;main.c: 323:                 printf("Log file name: Browse and provide a .csv extension
      +                           to your file name\r\n");
  6266  000D40  0E81               	movlw	low STR_51
  6267  000D42  0100               	movlb	0	; () banked
  6268  000D44  6FA3               	movwf	printf@fmt& (0+255),b
  6269  000D46  0EF3               	movlw	high STR_51
  6270  000D48  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6271  000D4A  EC1B  F01B         	call	_printf	;wreg free
  6272                           
  6273                           ;main.c: 324:                 printf("Select:     Apply\r\n");
  6274  000D4E  0E48               	movlw	low STR_52
  6275  000D50  0100               	movlb	0	; () banked
  6276  000D52  6FA3               	movwf	printf@fmt& (0+255),b
  6277  000D54  0EFF               	movlw	high STR_52
  6278  000D56  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6279  000D58  EC1B  F01B         	call	_printf	;wreg free
  6280                           
  6281                           ;main.c: 325:                 printf("Press any key to start\r\n");
  6282  000D5C  0E56               	movlw	low STR_53
  6283  000D5E  0100               	movlb	0	; () banked
  6284  000D60  6FA3               	movwf	printf@fmt& (0+255),b
  6285  000D62  0EFE               	movlw	high STR_53
  6286  000D64  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6287  000D66  EC1B  F01B         	call	_printf	;wreg free
  6288  000D6A                     l6217:
  6289  000D6A  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6290  000D6E  0900               	iorlw	0
  6291  000D70  B4D8               	btfsc	status,2,c
  6292  000D72  EFBD  F006         	goto	u6441
  6293  000D76  EFBF  F006         	goto	u6440
  6294  000D7A                     u6441:
  6295  000D7A  EFB5  F006         	goto	l6217
  6296  000D7E                     u6440:
  6297  000D7E                     
  6298                           ;main.c: 328:                 EUSART1_Read();
  6299  000D7E  EC2F  F01B         	call	_EUSART1_Read	;wreg free
  6300  000D82                     
  6301                           ;main.c: 330:                 uint32_t address = writeStartAddress;
  6302  000D82  C1BF  F1B8         	movff	main@writeStartAddress,main@address
  6303  000D86  C1C0  F1B9         	movff	main@writeStartAddress+1,main@address+1
  6304  000D8A  C1C1  F1BA         	movff	main@writeStartAddress+2,main@address+2
  6305  000D8E  C1C2  F1BB         	movff	main@writeStartAddress+3,main@address+3
  6306  000D92                     
  6307                           ;main.c: 331:                 uint32_t endAddress = writeEndAddress;
  6308  000D92  C1C3  F1AF         	movff	main@writeEndAddress,main@endAddress
  6309  000D96  C1C4  F1B0         	movff	main@writeEndAddress+1,main@endAddress+1
  6310  000D9A  C1C5  F1B1         	movff	main@writeEndAddress+2,main@endAddress+2
  6311  000D9E  C1C6  F1B2         	movff	main@writeEndAddress+3,main@endAddress+3
  6312  000DA2                     
  6313                           ;main.c: 332:                 uint32_t numBlocks = (endAddress - address) >> 9;
  6314  000DA2  0101               	movlb	1	; () banked
  6315  000DA4  51B8               	movf	main@address& (0+255),w,b
  6316  000DA6  5DAF               	subwf	main@endAddress& (0+255),w,b
  6317  000DA8  0100               	movlb	0	; () banked
  6318  000DAA  6FBB               	movwf	??_main& (0+255),b
  6319  000DAC  0101               	movlb	1	; () banked
  6320  000DAE  51B9               	movf	(main@address+1)& (0+255),w,b
  6321  000DB0  59B0               	subwfb	(main@endAddress+1)& (0+255),w,b
  6322  000DB2  0100               	movlb	0	; () banked
  6323  000DB4  6FBC               	movwf	(??_main+1)& (0+255),b
  6324  000DB6  0101               	movlb	1	; () banked
  6325  000DB8  51BA               	movf	(main@address+2)& (0+255),w,b
  6326  000DBA  59B1               	subwfb	(main@endAddress+2)& (0+255),w,b
  6327  000DBC  0100               	movlb	0	; () banked
  6328  000DBE  6FBD               	movwf	(??_main+2)& (0+255),b
  6329  000DC0  0101               	movlb	1	; () banked
  6330  000DC2  51BB               	movf	(main@address+3)& (0+255),w,b
  6331  000DC4  59B2               	subwfb	(main@endAddress+3)& (0+255),w,b
  6332  000DC6  0100               	movlb	0	; () banked
  6333  000DC8  6FBE               	movwf	(??_main+3)& (0+255),b
  6334  000DCA  0E0A               	movlw	10
  6335  000DCC  EFED  F006         	goto	u6450
  6336  000DD0                     u6455:
  6337  000DD0  90D8               	bcf	status,0,c
  6338  000DD2  33BE               	rrcf	(??_main+3)& (0+255),f,b
  6339  000DD4  33BD               	rrcf	(??_main+2)& (0+255),f,b
  6340  000DD6  33BC               	rrcf	(??_main+1)& (0+255),f,b
  6341  000DD8  33BB               	rrcf	??_main& (0+255),f,b
  6342  000DDA                     u6450:
  6343  000DDA  2EE8               	decfsz	wreg,f,c
  6344  000DDC  EFE8  F006         	goto	u6455
  6345  000DE0  C0BB  F1A1         	movff	??_main,main@numBlocks
  6346  000DE4  C0BC  F1A2         	movff	??_main+1,main@numBlocks+1
  6347  000DE8  C0BD  F1A3         	movff	??_main+2,main@numBlocks+2
  6348  000DEC  C0BE  F1A4         	movff	??_main+3,main@numBlocks+3
  6349  000DF0                     
  6350                           ; BSR set to: 0
  6351                           ;main.c: 333:                 uint32_t printedBlocks = 0;
  6352  000DF0  0E00               	movlw	0
  6353  000DF2  0101               	movlb	1	; () banked
  6354  000DF4  6FA7               	movwf	main@printedBlocks& (0+255),b
  6355  000DF6  0E00               	movlw	0
  6356  000DF8  6FA8               	movwf	(main@printedBlocks+1)& (0+255),b
  6357  000DFA  0E00               	movlw	0
  6358  000DFC  6FA9               	movwf	(main@printedBlocks+2)& (0+255),b
  6359  000DFE  0E00               	movlw	0
  6360  000E00  6FAA               	movwf	(main@printedBlocks+3)& (0+255),b
  6361                           
  6362                           ;main.c: 335:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6363  000E02  EF57  F007         	goto	l6249
  6364  000E06                     l6229:
  6365                           
  6366                           ; BSR set to: 1
  6367                           ;main.c: 336:                     SDCARD_ReadBlock(address, sdCardBuffer);
  6368  000E06  C1B8  F014         	movff	main@address,SDCARD_ReadBlock@addr
  6369  000E0A  C1B9  F015         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  6370  000E0E  C1BA  F016         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  6371  000E12  C1BB  F017         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  6372  000E16  0ED5               	movlw	low _sdCardBuffer
  6373  000E18  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6374  000E1A  0E07               	movlw	high _sdCardBuffer
  6375  000E1C  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6376  000E1E  EC85  F017         	call	_SDCARD_ReadBlock	;wreg free
  6377  000E22                     
  6378                           ;main.c: 337:                     address = incrementAddress(address);
  6379  000E22  C1B8  F013         	movff	main@address,incrementAddress@sdCardAddress
  6380  000E26  C1B9  F014         	movff	main@address+1,incrementAddress@sdCardAddress+1
  6381  000E2A  C1BA  F015         	movff	main@address+2,incrementAddress@sdCardAddress+2
  6382  000E2E  C1BB  F016         	movff	main@address+3,incrementAddress@sdCardAddress+3
  6383  000E32  EC8B  F019         	call	_incrementAddress	;wreg free
  6384  000E36  C013  F1B8         	movff	?_incrementAddress,main@address
  6385  000E3A  C014  F1B9         	movff	?_incrementAddress+1,main@address+1
  6386  000E3E  C015  F1BA         	movff	?_incrementAddress+2,main@address+2
  6387  000E42  C016  F1BB         	movff	?_incrementAddress+3,main@address+3
  6388  000E46                     
  6389                           ;main.c: 339:                     for (uint16_t i = 0; i != 512; i++) {
  6390  000E46  0E00               	movlw	0
  6391  000E48  0101               	movlb	1	; () banked
  6392  000E4A  6FB6               	movwf	(main@i_1309+1)& (0+255),b
  6393  000E4C  0E00               	movlw	0
  6394  000E4E  6FB5               	movwf	main@i_1309& (0+255),b
  6395  000E50                     l6235:
  6396                           
  6397                           ; BSR set to: 1
  6398  000E50  0E02               	movlw	2
  6399  000E52  19B6               	xorwf	(main@i_1309+1)& (0+255),w,b
  6400  000E54  11B5               	iorwf	main@i_1309& (0+255),w,b
  6401  000E56  A4D8               	btfss	status,2,c
  6402  000E58  EF30  F007         	goto	u6461
  6403  000E5C  EF32  F007         	goto	u6460
  6404  000E60                     u6461:
  6405  000E60  EF34  F007         	goto	l6239
  6406  000E64                     u6460:
  6407  000E64  EF51  F007         	goto	l6247
  6408  000E68                     l6239:
  6409                           
  6410                           ; BSR set to: 1
  6411                           ;main.c: 340:                         uint16_t printVal = sdCardBuffer[i];
  6412  000E68  0ED5               	movlw	low _sdCardBuffer
  6413  000E6A  25B5               	addwf	main@i_1309& (0+255),w,b
  6414  000E6C  6ED9               	movwf	fsr2l,c
  6415  000E6E  0E07               	movlw	high _sdCardBuffer
  6416  000E70  21B6               	addwfc	(main@i_1309+1)& (0+255),w,b
  6417  000E72  6EDA               	movwf	fsr2h,c
  6418  000E74  50DF               	movf	indf2,w,c
  6419  000E76  0100               	movlb	0	; () banked
  6420  000E78  6FBB               	movwf	??_main& (0+255),b
  6421  000E7A  51BB               	movf	??_main& (0+255),w,b
  6422  000E7C  0101               	movlb	1	; () banked
  6423  000E7E  6FA5               	movwf	main@printVal& (0+255),b
  6424  000E80  6BA6               	clrf	(main@printVal+1)& (0+255),b
  6425  000E82                     
  6426                           ; BSR set to: 1
  6427                           ;main.c: 341:                         printf("%d\r\n", printVal);
  6428  000E82  0E8E               	movlw	low (STR_35+25)
  6429  000E84  0100               	movlb	0	; () banked
  6430  000E86  6FA3               	movwf	printf@fmt& (0+255),b
  6431  000E88  0EFD               	movlw	high (STR_35+25)
  6432  000E8A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6433  000E8C  C1A5  F0A5         	movff	main@printVal,?_printf+2
  6434  000E90  C1A6  F0A6         	movff	main@printVal+1,?_printf+3
  6435  000E94  EC1B  F01B         	call	_printf	;wreg free
  6436  000E98                     
  6437                           ;main.c: 342:                     }
  6438  000E98  0101               	movlb	1	; () banked
  6439  000E9A  4BB5               	infsnz	main@i_1309& (0+255),f,b
  6440  000E9C  2BB6               	incf	(main@i_1309+1)& (0+255),f,b
  6441  000E9E  EF28  F007         	goto	l6235
  6442  000EA2                     l6247:
  6443                           
  6444                           ; BSR set to: 1
  6445                           ;main.c: 343:                     printedBlocks++;
  6446  000EA2  0E01               	movlw	1
  6447  000EA4  27A7               	addwf	main@printedBlocks& (0+255),f,b
  6448  000EA6  0E00               	movlw	0
  6449  000EA8  23A8               	addwfc	(main@printedBlocks+1)& (0+255),f,b
  6450  000EAA  23A9               	addwfc	(main@printedBlocks+2)& (0+255),f,b
  6451  000EAC  23AA               	addwfc	(main@printedBlocks+3)& (0+255),f,b
  6452  000EAE                     l6249:
  6453                           
  6454                           ; BSR set to: 1
  6455                           ;main.c: 335:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6456  000EAE  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6457  000EB2  0900               	iorlw	0
  6458  000EB4  A4D8               	btfss	status,2,c
  6459  000EB6  EF5F  F007         	goto	u6471
  6460  000EBA  EF61  F007         	goto	u6470
  6461  000EBE                     u6471:
  6462  000EBE  EF74  F007         	goto	l6253
  6463  000EC2                     u6470:
  6464  000EC2  0101               	movlb	1	; () banked
  6465  000EC4  51AF               	movf	main@endAddress& (0+255),w,b
  6466  000EC6  19B8               	xorwf	main@address& (0+255),w,b
  6467  000EC8  E10D               	bnz	u6481
  6468  000ECA  51B0               	movf	(main@endAddress+1)& (0+255),w,b
  6469  000ECC  19B9               	xorwf	(main@address+1)& (0+255),w,b
  6470  000ECE  E10A               	bnz	u6481
  6471  000ED0  51B1               	movf	(main@endAddress+2)& (0+255),w,b
  6472  000ED2  19BA               	xorwf	(main@address+2)& (0+255),w,b
  6473  000ED4  E107               	bnz	u6481
  6474  000ED6  51B2               	movf	(main@endAddress+3)& (0+255),w,b
  6475  000ED8  19BB               	xorwf	(main@address+3)& (0+255),w,b
  6476  000EDA  A4D8               	btfss	status,2,c
  6477  000EDC  EF72  F007         	goto	u6481
  6478  000EE0  EF74  F007         	goto	u6480
  6479  000EE4                     u6481:
  6480  000EE4  EF03  F007         	goto	l6229
  6481  000EE8                     u6480:
  6482  000EE8                     l6253:
  6483                           
  6484                           ;main.c: 345:                 if ((EUSART1_is_rx_ready()))
  6485  000EE8  ECB9  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6486  000EEC  0900               	iorlw	0
  6487  000EEE  B4D8               	btfsc	status,2,c
  6488  000EF0  EF7C  F007         	goto	u6491
  6489  000EF4  EF7E  F007         	goto	u6490
  6490  000EF8                     u6491:
  6491  000EF8  EF80  F007         	goto	l6257
  6492  000EFC                     u6490:
  6493  000EFC                     
  6494                           ;main.c: 346:                     EUSART1_Read();
  6495  000EFC  EC2F  F01B         	call	_EUSART1_Read	;wreg free
  6496  000F00                     l6257:
  6497                           
  6498                           ;main.c: 348:                 printf("Spooled %u out of the %u blocks.\r\n", printedBloc
      +                          ks, numBlocks);
  6499  000F00  0ED3               	movlw	low STR_55
  6500  000F02  0100               	movlb	0	; () banked
  6501  000F04  6FA3               	movwf	printf@fmt& (0+255),b
  6502  000F06  0EFC               	movlw	high STR_55
  6503  000F08  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6504  000F0A  C1A7  F0A5         	movff	main@printedBlocks,?_printf+2
  6505  000F0E  C1A8  F0A6         	movff	main@printedBlocks+1,?_printf+3
  6506  000F12  C1A9  F0A7         	movff	main@printedBlocks+2,?_printf+4
  6507  000F16  C1AA  F0A8         	movff	main@printedBlocks+3,?_printf+5
  6508  000F1A  C1A1  F0A9         	movff	main@numBlocks,?_printf+6
  6509  000F1E  C1A2  F0AA         	movff	main@numBlocks+1,?_printf+7
  6510  000F22  C1A3  F0AB         	movff	main@numBlocks+2,?_printf+8
  6511  000F26  C1A4  F0AC         	movff	main@numBlocks+3,?_printf+9
  6512  000F2A  EC1B  F01B         	call	_printf	;wreg free
  6513  000F2E                     
  6514                           ;main.c: 349:                 printf("To close the file follow these instructions: \r\n"
      +                          );
  6515  000F2E  0EDA               	movlw	low STR_56
  6516  000F30  0100               	movlb	0	; () banked
  6517  000F32  6FA3               	movwf	printf@fmt& (0+255),b
  6518  000F34  0EFB               	movlw	high STR_56
  6519  000F36  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6520  000F38  EC1B  F01B         	call	_printf	;wreg free
  6521  000F3C                     
  6522                           ;main.c: 350:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6523  000F3C  0ED0               	movlw	low STR_47
  6524  000F3E  0100               	movlb	0	; () banked
  6525  000F40  6FA3               	movwf	printf@fmt& (0+255),b
  6526  000F42  0EFA               	movlw	high STR_47
  6527  000F44  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6528  000F46  EC1B  F01B         	call	_printf	;wreg free
  6529  000F4A                     
  6530                           ;main.c: 351:                 printf("Select:     Change settings...\r\n");
  6531  000F4A  0EF6               	movlw	low STR_48
  6532  000F4C  0100               	movlb	0	; () banked
  6533  000F4E  6FA3               	movwf	printf@fmt& (0+255),b
  6534  000F50  0EFC               	movlw	high STR_48
  6535  000F52  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6536  000F54  EC1B  F01B         	call	_printf	;wreg free
  6537  000F58                     
  6538                           ;main.c: 352:                 printf("Select:     Logging\r\n");
  6539  000F58  0EB6               	movlw	low STR_49
  6540  000F5A  0100               	movlb	0	; () banked
  6541  000F5C  6FA3               	movwf	printf@fmt& (0+255),b
  6542  000F5E  0EFE               	movlw	high STR_49
  6543  000F60  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6544  000F62  EC1B  F01B         	call	_printf	;wreg free
  6545  000F66                     
  6546                           ;main.c: 353:                 printf("Select:     Session  logging: None\r\n");
  6547  000F66  0E89               	movlw	low STR_60
  6548  000F68  0100               	movlb	0	; () banked
  6549  000F6A  6FA3               	movwf	printf@fmt& (0+255),b
  6550  000F6C  0EFC               	movlw	high STR_60
  6551  000F6E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6552  000F70  EC1B  F01B         	call	_printf	;wreg free
  6553  000F74                     
  6554                           ;main.c: 354:                 printf("Select:     Apply \r\n");
  6555  000F74  0ECC               	movlw	low STR_61
  6556  000F76  0100               	movlb	0	; () banked
  6557  000F78  6FA3               	movwf	printf@fmt& (0+255),b
  6558  000F7A  0EFE               	movlw	high STR_61
  6559  000F7C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6560  000F7E  EC1B  F01B         	call	_printf	;wreg free
  6561                           
  6562                           ;main.c: 356:                 break;
  6563  000F82  EF7E  F000         	goto	l5953
  6564  000F86                     l6271:
  6565                           
  6566                           ; BSR set to: 0
  6567                           ;main.c: 364:                 SPI2_Close();
  6568  000F86  ECFB  F01B         	call	_SPI2_Close	;wreg free
  6569  000F8A                     
  6570                           ;main.c: 365:                 SPI2_Open(SPI2_DEFAULT);
  6571  000F8A  0E00               	movlw	0
  6572  000F8C  EC2F  F017         	call	_SPI2_Open
  6573  000F90                     
  6574                           ;main.c: 366:                 SDCARD_Initialize(1);
  6575  000F90  0E01               	movlw	1
  6576  000F92  EC80  F014         	call	_SDCARD_Initialize
  6577                           
  6578                           ;main.c: 367:                 break;
  6579  000F96  EF7E  F000         	goto	l5953
  6580  000F9A                     l6277:
  6581                           
  6582                           ; BSR set to: 0
  6583                           ;main.c: 374:                 if (cmd == 'a') {
  6584  000F9A  0E61               	movlw	97
  6585  000F9C  0101               	movlb	1	; () banked
  6586  000F9E  19BC               	xorwf	main@cmd& (0+255),w,b
  6587  000FA0  A4D8               	btfss	status,2,c
  6588  000FA2  EFD5  F007         	goto	u6501
  6589  000FA6  EFD7  F007         	goto	u6500
  6590  000FAA                     u6501:
  6591  000FAA  EF03  F008         	goto	l6287
  6592  000FAE                     u6500:
  6593  000FAE                     
  6594                           ; BSR set to: 1
  6595                           ;main.c: 375:                     sdCardAddress -= 512;
  6596  000FAE  0E00               	movlw	0
  6597  000FB0  5FCB               	subwf	main@sdCardAddress& (0+255),f,b
  6598  000FB2  0E02               	movlw	2
  6599  000FB4  5BCC               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  6600  000FB6  0E00               	movlw	0
  6601  000FB8  5BCD               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  6602  000FBA  0E00               	movlw	0
  6603  000FBC  5BCE               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  6604                           
  6605                           ;main.c: 376:                     if (sdCardAddress >= 0x04000000) {
  6606  000FBE  0E04               	movlw	4
  6607  000FC0  5DCE               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6608  000FC2  A0D8               	btfss	status,0,c
  6609  000FC4  EFE6  F007         	goto	u6511
  6610  000FC8  EFE8  F007         	goto	u6510
  6611  000FCC                     u6511:
  6612  000FCC  EFFA  F007         	goto	l6285
  6613  000FD0                     u6510:
  6614  000FD0                     
  6615                           ; BSR set to: 1
  6616                           ;main.c: 377:                         printf("Underflowed to high address\r\n");
  6617  000FD0  0E93               	movlw	low STR_62
  6618  000FD2  0100               	movlb	0	; () banked
  6619  000FD4  6FA3               	movwf	printf@fmt& (0+255),b
  6620  000FD6  0EFD               	movlw	high STR_62
  6621  000FD8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6622  000FDA  EC1B  F01B         	call	_printf	;wreg free
  6623  000FDE                     
  6624                           ;main.c: 378:                         sdCardAddress = 0x04000000 - 512;
  6625  000FDE  0E00               	movlw	0
  6626  000FE0  0101               	movlb	1	; () banked
  6627  000FE2  6FCB               	movwf	main@sdCardAddress& (0+255),b
  6628  000FE4  0EFE               	movlw	254
  6629  000FE6  6FCC               	movwf	(main@sdCardAddress+1)& (0+255),b
  6630  000FE8  0EFF               	movlw	255
  6631  000FEA  6FCD               	movwf	(main@sdCardAddress+2)& (0+255),b
  6632  000FEC  0E03               	movlw	3
  6633  000FEE  6FCE               	movwf	(main@sdCardAddress+3)& (0+255),b
  6634                           
  6635                           ;main.c: 379:                     } else {
  6636  000FF0  EF2D  F008         	goto	l572
  6637  000FF4                     l6285:
  6638                           
  6639                           ; BSR set to: 1
  6640                           ;main.c: 380:                         printf("Decreased address\r\n");
  6641  000FF4  0E20               	movlw	low STR_63
  6642  000FF6  0100               	movlb	0	; () banked
  6643  000FF8  6FA3               	movwf	printf@fmt& (0+255),b
  6644  000FFA  0EFF               	movlw	high STR_63
  6645  000FFC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6646  000FFE  EC1B  F01B         	call	_printf	;wreg free
  6647  001002  EF2D  F008         	goto	l572
  6648  001006                     l6287:
  6649                           
  6650                           ; BSR set to: 1
  6651                           ;main.c: 383:                     sdCardAddress += 512;
  6652  001006  0E00               	movlw	0
  6653  001008  27CB               	addwf	main@sdCardAddress& (0+255),f,b
  6654  00100A  0E02               	movlw	2
  6655  00100C  23CC               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  6656  00100E  0E00               	movlw	0
  6657  001010  23CD               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  6658  001012  0E00               	movlw	0
  6659  001014  23CE               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  6660                           
  6661                           ;main.c: 384:                     if (sdCardAddress >= 0x04000000) {
  6662  001016  0E04               	movlw	4
  6663  001018  5DCE               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6664  00101A  A0D8               	btfss	status,0,c
  6665  00101C  EF12  F008         	goto	u6521
  6666  001020  EF14  F008         	goto	u6520
  6667  001024                     u6521:
  6668  001024  EF26  F008         	goto	l6293
  6669  001028                     u6520:
  6670  001028                     
  6671                           ; BSR set to: 1
  6672                           ;main.c: 385:                         printf("Overflowed to low address\r\n");
  6673  001028  0EEA               	movlw	low STR_64
  6674  00102A  0100               	movlb	0	; () banked
  6675  00102C  6FA3               	movwf	printf@fmt& (0+255),b
  6676  00102E  0EFD               	movlw	high STR_64
  6677  001030  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6678  001032  EC1B  F01B         	call	_printf	;wreg free
  6679  001036                     
  6680                           ;main.c: 386:                         sdCardAddress = 0x00000000;
  6681  001036  0E00               	movlw	0
  6682  001038  0101               	movlb	1	; () banked
  6683  00103A  6FCB               	movwf	main@sdCardAddress& (0+255),b
  6684  00103C  0E00               	movlw	0
  6685  00103E  6FCC               	movwf	(main@sdCardAddress+1)& (0+255),b
  6686  001040  0E00               	movlw	0
  6687  001042  6FCD               	movwf	(main@sdCardAddress+2)& (0+255),b
  6688  001044  0E00               	movlw	0
  6689  001046  6FCE               	movwf	(main@sdCardAddress+3)& (0+255),b
  6690                           
  6691                           ;main.c: 387:                     } else {
  6692  001048  EF2D  F008         	goto	l572
  6693  00104C                     l6293:
  6694                           
  6695                           ; BSR set to: 1
  6696                           ;main.c: 388:                         printf("Increased address\r\n");
  6697  00104C  0E34               	movlw	low STR_65
  6698  00104E  0100               	movlb	0	; () banked
  6699  001050  6FA3               	movwf	printf@fmt& (0+255),b
  6700  001052  0EFF               	movlw	high STR_65
  6701  001054  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6702  001056  EC1B  F01B         	call	_printf	;wreg free
  6703  00105A                     l572:
  6704                           
  6705                           ;main.c: 393:                 printf("SD card address:  ");
  6706  00105A  0E5C               	movlw	low STR_66
  6707  00105C  0100               	movlb	0	; () banked
  6708  00105E  6FA3               	movwf	printf@fmt& (0+255),b
  6709  001060  0EFF               	movlw	high STR_66
  6710  001062  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6711  001064  EC1B  F01B         	call	_printf	;wreg free
  6712                           
  6713                           ;main.c: 394:                 printf("%04x", sdCardAddress >> 16);
  6714  001068  0EEE               	movlw	low STR_10
  6715  00106A  0100               	movlb	0	; () banked
  6716  00106C  6FA3               	movwf	printf@fmt& (0+255),b
  6717  00106E  0EFF               	movlw	high STR_10
  6718  001070  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6719  001072  C1CD  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  6720  001076  C1CE  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  6721  00107A  6BA7               	clrf	(?_printf+4)& (0+255),b
  6722  00107C  6BA8               	clrf	(?_printf+5)& (0+255),b
  6723  00107E  EC1B  F01B         	call	_printf	;wreg free
  6724                           
  6725                           ;main.c: 395:                 printf(":");
  6726  001082  0EFD               	movlw	low STR_11
  6727  001084  0100               	movlb	0	; () banked
  6728  001086  6FA3               	movwf	printf@fmt& (0+255),b
  6729  001088  0EFF               	movlw	high STR_11
  6730  00108A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6731  00108C  EC1B  F01B         	call	_printf	;wreg free
  6732                           
  6733                           ;main.c: 396:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  6734  001090  0EEE               	movlw	low STR_10
  6735  001092  0100               	movlb	0	; () banked
  6736  001094  6FA3               	movwf	printf@fmt& (0+255),b
  6737  001096  0EFF               	movlw	high STR_10
  6738  001098  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6739  00109A  0EFF               	movlw	255
  6740  00109C  0101               	movlb	1	; () banked
  6741  00109E  15CB               	andwf	main@sdCardAddress& (0+255),w,b
  6742  0010A0  0100               	movlb	0	; () banked
  6743  0010A2  6FA5               	movwf	(?_printf+2)& (0+255),b
  6744  0010A4  0EFF               	movlw	255
  6745  0010A6  0101               	movlb	1	; () banked
  6746  0010A8  15CC               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  6747  0010AA  0100               	movlb	0	; () banked
  6748  0010AC  6FA6               	movwf	(?_printf+3)& (0+255),b
  6749  0010AE  0E00               	movlw	0
  6750  0010B0  0101               	movlb	1	; () banked
  6751  0010B2  15CD               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  6752  0010B4  0100               	movlb	0	; () banked
  6753  0010B6  6FA7               	movwf	(?_printf+4)& (0+255),b
  6754  0010B8  0E00               	movlw	0
  6755  0010BA  0101               	movlb	1	; () banked
  6756  0010BC  15CE               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  6757  0010BE  0100               	movlb	0	; () banked
  6758  0010C0  6FA8               	movwf	(?_printf+5)& (0+255),b
  6759  0010C2  EC1B  F01B         	call	_printf	;wreg free
  6760                           
  6761                           ;main.c: 397:                 printf("\r\n");
  6762  0010C6  0EAE               	movlw	low (STR_71+12)
  6763  0010C8  0100               	movlb	0	; () banked
  6764  0010CA  6FA3               	movwf	printf@fmt& (0+255),b
  6765  0010CC  0EFF               	movlw	high (STR_71+12)
  6766  0010CE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6767  0010D0  EC1B  F01B         	call	_printf	;wreg free
  6768                           
  6769                           ;main.c: 398:                 break;
  6770  0010D4  EF7E  F000         	goto	l5953
  6771  0010D8                     l6295:
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;main.c: 404:                 SDCARD_ReadBlock(sdCardAddress, sdCardBuffer);
  6775  0010D8  C1CB  F014         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  6776  0010DC  C1CC  F015         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  6777  0010E0  C1CD  F016         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  6778  0010E4  C1CE  F017         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  6779  0010E8  0ED5               	movlw	low _sdCardBuffer
  6780  0010EA  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6781  0010EC  0E07               	movlw	high _sdCardBuffer
  6782  0010EE  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6783  0010F0  EC85  F017         	call	_SDCARD_ReadBlock	;wreg free
  6784  0010F4                     
  6785                           ;main.c: 405:                 printf("Read block: \r\n");
  6786  0010F4  0EA2               	movlw	low STR_71
  6787  0010F6  0100               	movlb	0	; () banked
  6788  0010F8  6FA3               	movwf	printf@fmt& (0+255),b
  6789  0010FA  0EFF               	movlw	high STR_71
  6790  0010FC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6791  0010FE  EC1B  F01B         	call	_printf	;wreg free
  6792  001102                     
  6793                           ;main.c: 406:                 printAddress(sdCardAddress);
  6794  001102  C1CB  F0B1         	movff	main@sdCardAddress,printAddress@address
  6795  001106  C1CC  F0B2         	movff	main@sdCardAddress+1,printAddress@address+1
  6796  00110A  C1CD  F0B3         	movff	main@sdCardAddress+2,printAddress@address+2
  6797  00110E  C1CE  F0B4         	movff	main@sdCardAddress+3,printAddress@address+3
  6798  001112  EC9E  F018         	call	_printAddress	;wreg free
  6799  001116                     
  6800                           ;main.c: 407:                 hexDumpBuffer(sdCardBuffer);
  6801  001116  0ED5               	movlw	low _sdCardBuffer
  6802  001118  0100               	movlb	0	; () banked
  6803  00111A  6FB1               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  6804  00111C  0E07               	movlw	high _sdCardBuffer
  6805  00111E  6FB2               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  6806  001120  ECF9  F011         	call	_hexDumpBuffer	;wreg free
  6807                           
  6808                           ;main.c: 408:                 break;
  6809  001124  EF7E  F000         	goto	l5953
  6810  001128                     l6303:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;main.c: 414:                 printf("Unknown key %c\r\n", cmd);
  6814  001128  0E6F               	movlw	low STR_72
  6815  00112A  6FA3               	movwf	printf@fmt& (0+255),b
  6816  00112C  0EFF               	movlw	high STR_72
  6817  00112E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6818  001130  C1BC  F0A5         	movff	main@cmd,?_printf+2
  6819  001134  6BA6               	clrf	(?_printf+3)& (0+255),b
  6820  001136  EC1B  F01B         	call	_printf	;wreg free
  6821                           
  6822                           ;main.c: 415:                 break;
  6823  00113A  EF7E  F000         	goto	l5953
  6824  00113E                     l6307:
  6825  00113E  0101               	movlb	1	; () banked
  6826  001140  51BC               	movf	main@cmd& (0+255),w,b
  6827  001142  0100               	movlb	0	; () banked
  6828  001144  6FBB               	movwf	??_main& (0+255),b
  6829  001146  6BBC               	clrf	(??_main+1)& (0+255),b
  6830                           
  6831                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6832                           ; Switch size 1, requested type "simple"
  6833                           ; Number of cases is 1, Range of values is 0 to 0
  6834                           ; switch strategies available:
  6835                           ; Name         Instructions Cycles
  6836                           ; simple_byte            4     3 (average)
  6837                           ;	Chosen strategy is simple_byte
  6838  001148  51BC               	movf	(??_main+1)& (0+255),w,b
  6839  00114A  0A00               	xorlw	0	; case 0
  6840  00114C  B4D8               	btfsc	status,2,c
  6841  00114E  EFAB  F008         	goto	l6435
  6842  001152  EF94  F008         	goto	l6303
  6843  001156                     l6435:
  6844                           
  6845                           ; BSR set to: 0
  6846                           ; Switch size 1, requested type "simple"
  6847                           ; Number of cases is 14, Range of values is 43 to 122
  6848                           ; switch strategies available:
  6849                           ; Name         Instructions Cycles
  6850                           ; simple_byte           43    22 (average)
  6851                           ;	Chosen strategy is simple_byte
  6852  001156  51BB               	movf	??_main& (0+255),w,b
  6853  001158  0A2B               	xorlw	43	; case 43
  6854  00115A  B4D8               	btfsc	status,2,c
  6855  00115C  EFAE  F002         	goto	l6023
  6856  001160  0A06               	xorlw	6	; case 45
  6857  001162  B4D8               	btfsc	status,2,c
  6858  001164  EFB6  F002         	goto	l6025
  6859  001168  0A1C               	xorlw	28	; case 49
  6860  00116A  B4D8               	btfsc	status,2,c
  6861  00116C  EFE8  F001         	goto	l472
  6862  001170  0A0E               	xorlw	14	; case 63
  6863  001172  B4D8               	btfsc	status,2,c
  6864  001174  EF9F  F000         	goto	l5961
  6865  001178  0A7E               	xorlw	126	; case 65
  6866  00117A  B4D8               	btfsc	status,2,c
  6867  00117C  EFCD  F007         	goto	l6277
  6868  001180  0A11               	xorlw	17	; case 80
  6869  001182  B4D8               	btfsc	status,2,c
  6870  001184  EFC9  F002         	goto	l487
  6871  001188  0A07               	xorlw	7	; case 87
  6872  00118A  B4D8               	btfsc	status,2,c
  6873  00118C  EF7C  F003         	goto	l6063
  6874  001190  0A0D               	xorlw	13	; case 90
  6875  001192  B4D8               	btfsc	status,2,c
  6876  001194  EFA9  F001         	goto	l5965
  6877  001198  0A3B               	xorlw	59	; case 97
  6878  00119A  B4D8               	btfsc	status,2,c
  6879  00119C  EFCD  F007         	goto	l6277
  6880  0011A0  0A08               	xorlw	8	; case 105
  6881  0011A2  B4D8               	btfsc	status,2,c
  6882  0011A4  EFC3  F007         	goto	l6271
  6883  0011A8  0A06               	xorlw	6	; case 111
  6884  0011AA  B4D8               	btfsc	status,2,c
  6885  0011AC  EFA1  F001         	goto	l5963
  6886  0011B0  0A1D               	xorlw	29	; case 114
  6887  0011B2  B4D8               	btfsc	status,2,c
  6888  0011B4  EF6C  F008         	goto	l6295
  6889  0011B8  0A01               	xorlw	1	; case 115
  6890  0011BA  B4D8               	btfsc	status,2,c
  6891  0011BC  EF70  F006         	goto	l6215
  6892  0011C0  0A09               	xorlw	9	; case 122
  6893  0011C2  B4D8               	btfsc	status,2,c
  6894  0011C4  EFCA  F001         	goto	l5977
  6895  0011C8  EF94  F008         	goto	l6303
  6896  0011CC  EF27  F000         	goto	start
  6897  0011D0                     __end_of_main:
  6898                           	callstack 0
  6899                           
  6900 ;; *************** function _printAscii *****************
  6901 ;; Defined at:
  6902 ;;		line 551 in file "main.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;		None
  6905 ;; Auto vars:     Size  Location     Type
  6906 ;;		None
  6907 ;; Return value:  Size  Location     Type
  6908 ;;                  1    wreg      void 
  6909 ;; Registers used:
  6910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6911 ;; Tracked objects:
  6912 ;;		On entry : 0/0
  6913 ;;		On exit  : 0/0
  6914 ;;		Unchanged: 0/0
  6915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;Total ram usage:        0 bytes
  6921 ;; Hardware stack levels used:    1
  6922 ;; Hardware stack levels required when called:   13
  6923 ;; This function calls:
  6924 ;;		_printf
  6925 ;; This function is called by:
  6926 ;;		_main
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text1
  6931  002206                     __ptext1:
  6932                           	callstack 0
  6933  002206                     _printAscii:
  6934                           	callstack 17
  6935  002206                     
  6936                           ;main.c: 552:     printf("...........................................................\r\
      +                          n");
  6937  002206  0E0C               	movlw	low STR_78
  6938  002208  0100               	movlb	0	; () banked
  6939  00220A  6FA3               	movwf	printf@fmt& (0+255),b
  6940  00220C  0EF4               	movlw	high STR_78
  6941  00220E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6942  002210  EC1B  F01B         	call	_printf	;wreg free
  6943                           
  6944                           ;main.c: 553:     printf(".....................?????????????????.....................\r\
      +                          n");
  6945  002214  0E4A               	movlw	low STR_79
  6946  002216  0100               	movlb	0	; () banked
  6947  002218  6FA3               	movwf	printf@fmt& (0+255),b
  6948  00221A  0EF4               	movlw	high STR_79
  6949  00221C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6950  00221E  EC1B  F01B         	call	_printf	;wreg free
  6951                           
  6952                           ;main.c: 554:     printf(".................?????????????????????????.................\r\
      +                          n");
  6953  002222  0E88               	movlw	low STR_80
  6954  002224  0100               	movlb	0	; () banked
  6955  002226  6FA3               	movwf	printf@fmt& (0+255),b
  6956  002228  0EF4               	movlw	high STR_80
  6957  00222A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6958  00222C  EC1B  F01B         	call	_printf	;wreg free
  6959                           
  6960                           ;main.c: 555:     printf("..............???????????????????????????????..............\r\
      +                          n");
  6961  002230  0EC6               	movlw	low STR_81
  6962  002232  0100               	movlb	0	; () banked
  6963  002234  6FA3               	movwf	printf@fmt& (0+255),b
  6964  002236  0EF4               	movlw	high STR_81
  6965  002238  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6966  00223A  EC1B  F01B         	call	_printf	;wreg free
  6967                           
  6968                           ;main.c: 556:     printf("............???????????????????????????????????............\r\
      +                          n");
  6969  00223E  0E04               	movlw	low STR_82
  6970  002240  0100               	movlb	0	; () banked
  6971  002242  6FA3               	movwf	printf@fmt& (0+255),b
  6972  002244  0EF5               	movlw	high STR_82
  6973  002246  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6974  002248  EC1B  F01B         	call	_printf	;wreg free
  6975                           
  6976                           ;main.c: 557:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  6977  00224C  0E42               	movlw	low STR_83
  6978  00224E  0100               	movlb	0	; () banked
  6979  002250  6FA3               	movwf	printf@fmt& (0+255),b
  6980  002252  0EF5               	movlw	high STR_83
  6981  002254  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6982  002256  EC1B  F01B         	call	_printf	;wreg free
  6983                           
  6984                           ;main.c: 558:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  6985  00225A  0E80               	movlw	low STR_84
  6986  00225C  0100               	movlb	0	; () banked
  6987  00225E  6FA3               	movwf	printf@fmt& (0+255),b
  6988  002260  0EF5               	movlw	high STR_84
  6989  002262  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6990  002264  EC1B  F01B         	call	_printf	;wreg free
  6991                           
  6992                           ;main.c: 559:     printf(".......?????????????????????????????????????????????.......\r\
      +                          n");
  6993  002268  0EFC               	movlw	low STR_85
  6994  00226A  0100               	movlb	0	; () banked
  6995  00226C  6FA3               	movwf	printf@fmt& (0+255),b
  6996  00226E  0EF5               	movlw	high STR_85
  6997  002270  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6998  002272  EC1B  F01B         	call	_printf	;wreg free
  6999                           
  7000                           ;main.c: 560:     printf("......???????????????????????????????????????????????......\r\
      +                          n");
  7001  002276  0E78               	movlw	low STR_86
  7002  002278  0100               	movlb	0	; () banked
  7003  00227A  6FA3               	movwf	printf@fmt& (0+255),b
  7004  00227C  0EF6               	movlw	high STR_86
  7005  00227E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7006  002280  EC1B  F01B         	call	_printf	;wreg free
  7007                           
  7008                           ;main.c: 561:     printf(".....?????????????????????????????????????????????????.....\r\
      +                          n");
  7009  002284  0EF4               	movlw	low STR_87
  7010  002286  0100               	movlb	0	; () banked
  7011  002288  6FA3               	movwf	printf@fmt& (0+255),b
  7012  00228A  0EF6               	movlw	high STR_87
  7013  00228C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7014  00228E  EC1B  F01B         	call	_printf	;wreg free
  7015                           
  7016                           ;main.c: 562:     printf("....????:::::::::::?????????????????????:::::::::::????....\r\
      +                          n");
  7017  002292  0E32               	movlw	low STR_88
  7018  002294  0100               	movlb	0	; () banked
  7019  002296  6FA3               	movwf	printf@fmt& (0+255),b
  7020  002298  0EF7               	movlw	high STR_88
  7021  00229A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7022  00229C  EC1B  F01B         	call	_printf	;wreg free
  7023                           
  7024                           ;main.c: 563:     printf("...??::::::::::::::::::::?????????::::::::::::::::::::??...\r\
      +                          n");
  7025  0022A0  0EAE               	movlw	low STR_89
  7026  0022A2  0100               	movlb	0	; () banked
  7027  0022A4  6FA3               	movwf	printf@fmt& (0+255),b
  7028  0022A6  0EF7               	movlw	high STR_89
  7029  0022A8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7030  0022AA  EC1B  F01B         	call	_printf	;wreg free
  7031                           
  7032                           ;main.c: 564:     printf("..???:::::::::::::::::::::::::::::::::::::::::::::::::???..\r\
      +                          n");
  7033  0022AE  0E68               	movlw	low STR_90
  7034  0022B0  0100               	movlb	0	; () banked
  7035  0022B2  6FA3               	movwf	printf@fmt& (0+255),b
  7036  0022B4  0EF8               	movlw	high STR_90
  7037  0022B6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7038  0022B8  EC1B  F01B         	call	_printf	;wreg free
  7039                           
  7040                           ;main.c: 565:     printf("..????::::::::::::::::::::::???::::::::::::::::::::::????..\r\
      +                          n");
  7041  0022BC  0EA6               	movlw	low STR_91
  7042  0022BE  0100               	movlb	0	; () banked
  7043  0022C0  6FA3               	movwf	printf@fmt& (0+255),b
  7044  0022C2  0EF8               	movlw	high STR_91
  7045  0022C4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7046  0022C6  EC1B  F01B         	call	_printf	;wreg free
  7047                           
  7048                           ;main.c: 566:     printf(".??????::::::::::::::::::::?????:::::::::::::::::::::?????.\r\
      +                          n");
  7049  0022CA  0E60               	movlw	low STR_92
  7050  0022CC  0100               	movlb	0	; () banked
  7051  0022CE  6FA3               	movwf	printf@fmt& (0+255),b
  7052  0022D0  0EF9               	movlw	high STR_92
  7053  0022D2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7054  0022D4  EC1B  F01B         	call	_printf	;wreg free
  7055                           
  7056                           ;main.c: 567:     printf(".???????::::::::::::::::::???????:::::::::::::::::::??????.\r\
      +                          n");
  7057  0022D8  0E9E               	movlw	low STR_93
  7058  0022DA  0100               	movlb	0	; () banked
  7059  0022DC  6FA3               	movwf	printf@fmt& (0+255),b
  7060  0022DE  0EF9               	movlw	high STR_93
  7061  0022E0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7062  0022E2  EC1B  F01B         	call	_printf	;wreg free
  7063                           
  7064                           ;main.c: 568:     printf(".???????:::::::::::::::::?????????::::::::::::::::::??????.\r\
      +                          n");
  7065  0022E6  0EDC               	movlw	low STR_94
  7066  0022E8  0100               	movlb	0	; () banked
  7067  0022EA  6FA3               	movwf	printf@fmt& (0+255),b
  7068  0022EC  0EF9               	movlw	high STR_94
  7069  0022EE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7070  0022F0  EC1B  F01B         	call	_printf	;wreg free
  7071                           
  7072                           ;main.c: 569:     printf(".????????:::::::::::::::???????????:::::::::::::::????????.\r\
      +                          n");
  7073  0022F4  0E1A               	movlw	low STR_95
  7074  0022F6  0100               	movlb	0	; () banked
  7075  0022F8  6FA3               	movwf	printf@fmt& (0+255),b
  7076  0022FA  0EFA               	movlw	high STR_95
  7077  0022FC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7078  0022FE  EC1B  F01B         	call	_printf	;wreg free
  7079                           
  7080                           ;main.c: 570:     printf(".??????????::::::::::?????????????????::::::::::??????????.\r\
      +                          n");
  7081  002302  0E58               	movlw	low STR_96
  7082  002304  0100               	movlb	0	; () banked
  7083  002306  6FA3               	movwf	printf@fmt& (0+255),b
  7084  002308  0EFA               	movlw	high STR_96
  7085  00230A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7086  00230C  EC1B  F01B         	call	_printf	;wreg free
  7087                           
  7088                           ;main.c: 571:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7089  002310  0E22               	movlw	low STR_97
  7090  002312  0100               	movlb	0	; () banked
  7091  002314  6FA3               	movwf	printf@fmt& (0+255),b
  7092  002316  0EF9               	movlw	high STR_97
  7093  002318  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7094  00231A  EC1B  F01B         	call	_printf	;wreg free
  7095                           
  7096                           ;main.c: 572:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7097  00231E  0E22               	movlw	low STR_97
  7098  002320  0100               	movlb	0	; () banked
  7099  002322  6FA3               	movwf	printf@fmt& (0+255),b
  7100  002324  0EF9               	movlw	high STR_97
  7101  002326  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7102  002328  EC1B  F01B         	call	_printf	;wreg free
  7103                           
  7104                           ;main.c: 573:     printf("...??????????????????????????????????????????????????????..\r\
      +                          n");
  7105  00232C  0EE4               	movlw	low STR_99
  7106  00232E  0100               	movlb	0	; () banked
  7107  002330  6FA3               	movwf	printf@fmt& (0+255),b
  7108  002332  0EF8               	movlw	high STR_99
  7109  002334  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7110  002336  EC1B  F01B         	call	_printf	;wreg free
  7111                           
  7112                           ;main.c: 574:     printf("...?????????????:::?????????????????????:::?????????????...\r\
      +                          n");
  7113  00233A  0EEC               	movlw	low STR_100
  7114  00233C  0100               	movlb	0	; () banked
  7115  00233E  6FA3               	movwf	printf@fmt& (0+255),b
  7116  002340  0EF7               	movlw	high STR_100
  7117  002342  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7118  002344  EC1B  F01B         	call	_printf	;wreg free
  7119                           
  7120                           ;main.c: 575:     printf("....?????????????:::???????????????????:::??????????????...\r\
      +                          n");
  7121  002348  0E2A               	movlw	low STR_101
  7122  00234A  0100               	movlb	0	; () banked
  7123  00234C  6FA3               	movwf	printf@fmt& (0+255),b
  7124  00234E  0EF8               	movlw	high STR_101
  7125  002350  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7126  002352  EC1B  F01B         	call	_printf	;wreg free
  7127                           
  7128                           ;main.c: 576:     printf("....??????????????:::?????????????????:::??????????????....\r\
      +                          n");
  7129  002356  0E70               	movlw	low STR_102
  7130  002358  0100               	movlb	0	; () banked
  7131  00235A  6FA3               	movwf	printf@fmt& (0+255),b
  7132  00235C  0EF7               	movlw	high STR_102
  7133  00235E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7134  002360  EC1B  F01B         	call	_printf	;wreg free
  7135                           
  7136                           ;main.c: 577:     printf(".....??????????????::::?????????????::::??????????????.....\r\
      +                          n");
  7137  002364  0EB6               	movlw	low STR_103
  7138  002366  0100               	movlb	0	; () banked
  7139  002368  6FA3               	movwf	printf@fmt& (0+255),b
  7140  00236A  0EF6               	movlw	high STR_103
  7141  00236C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7142  00236E  EC1B  F01B         	call	_printf	;wreg free
  7143                           
  7144                           ;main.c: 578:     printf("......???????????????:::::???????:::::???????????????......\r\
      +                          n");
  7145  002372  0E3A               	movlw	low STR_104
  7146  002374  0100               	movlb	0	; () banked
  7147  002376  6FA3               	movwf	printf@fmt& (0+255),b
  7148  002378  0EF6               	movlw	high STR_104
  7149  00237A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7150  00237C  EC1B  F01B         	call	_printf	;wreg free
  7151                           
  7152                           ;main.c: 579:     printf(".......?????????????????:::::::::::?????????????????.......\r\
      +                          n");
  7153  002380  0EBE               	movlw	low STR_105
  7154  002382  0100               	movlb	0	; () banked
  7155  002384  6FA3               	movwf	printf@fmt& (0+255),b
  7156  002386  0EF5               	movlw	high STR_105
  7157  002388  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7158  00238A  EC1B  F01B         	call	_printf	;wreg free
  7159                           
  7160                           ;main.c: 580:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  7161  00238E  0E80               	movlw	low STR_84
  7162  002390  0100               	movlb	0	; () banked
  7163  002392  6FA3               	movwf	printf@fmt& (0+255),b
  7164  002394  0EF5               	movlw	high STR_84
  7165  002396  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7166  002398  EC1B  F01B         	call	_printf	;wreg free
  7167                           
  7168                           ;main.c: 581:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  7169  00239C  0E42               	movlw	low STR_83
  7170  00239E  0100               	movlb	0	; () banked
  7171  0023A0  6FA3               	movwf	printf@fmt& (0+255),b
  7172  0023A2  0EF5               	movlw	high STR_83
  7173  0023A4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7174  0023A6  EC1B  F01B         	call	_printf	;wreg free
  7175                           
  7176                           ;main.c: 582:     printf("............???????????????????????????????????............\r\
      +                          n");
  7177  0023AA  0E04               	movlw	low STR_82
  7178  0023AC  0100               	movlb	0	; () banked
  7179  0023AE  6FA3               	movwf	printf@fmt& (0+255),b
  7180  0023B0  0EF5               	movlw	high STR_82
  7181  0023B2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7182  0023B4  EC1B  F01B         	call	_printf	;wreg free
  7183                           
  7184                           ;main.c: 583:     printf("..............???????????????????????????????..............\r\
      +                          n");
  7185  0023B8  0EC6               	movlw	low STR_81
  7186  0023BA  0100               	movlb	0	; () banked
  7187  0023BC  6FA3               	movwf	printf@fmt& (0+255),b
  7188  0023BE  0EF4               	movlw	high STR_81
  7189  0023C0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7190  0023C2  EC1B  F01B         	call	_printf	;wreg free
  7191                           
  7192                           ;main.c: 584:     printf(".................?????????????????????????.................\r\
      +                          n");
  7193  0023C6  0E88               	movlw	low STR_80
  7194  0023C8  0100               	movlb	0	; () banked
  7195  0023CA  6FA3               	movwf	printf@fmt& (0+255),b
  7196  0023CC  0EF4               	movlw	high STR_80
  7197  0023CE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7198  0023D0  EC1B  F01B         	call	_printf	;wreg free
  7199                           
  7200                           ;main.c: 585:     printf(".....................?????????????????.....................\r\
      +                          n");
  7201  0023D4  0E4A               	movlw	low STR_79
  7202  0023D6  0100               	movlb	0	; () banked
  7203  0023D8  6FA3               	movwf	printf@fmt& (0+255),b
  7204  0023DA  0EF4               	movlw	high STR_79
  7205  0023DC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7206  0023DE  EC1B  F01B         	call	_printf	;wreg free
  7207                           
  7208                           ;main.c: 586:     printf("...........................................................\r\
      +                          n");
  7209  0023E2  0E0C               	movlw	low STR_78
  7210  0023E4  0100               	movlb	0	; () banked
  7211  0023E6  6FA3               	movwf	printf@fmt& (0+255),b
  7212  0023E8  0EF4               	movlw	high STR_78
  7213  0023EA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7214  0023EC  EC1B  F01B         	call	_printf	;wreg free
  7215  0023F0  0012               	return		;funcret
  7216  0023F2                     __end_of_printAscii:
  7217                           	callstack 0
  7218                           
  7219 ;; *************** function _printAddress *****************
  7220 ;; Defined at:
  7221 ;;		line 435 in file "main.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  address         4   81[BANK0 ] unsigned long 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;		None
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      void 
  7228 ;; Registers used:
  7229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7235 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7238 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7239 ;;Total ram usage:        4 bytes
  7240 ;; Hardware stack levels used:    1
  7241 ;; Hardware stack levels required when called:   13
  7242 ;; This function calls:
  7243 ;;		_printf
  7244 ;; This function is called by:
  7245 ;;		_main
  7246 ;; This function uses a non-reentrant model
  7247 ;;
  7248                           
  7249                           	psect	text2
  7250  00313C                     __ptext2:
  7251                           	callstack 0
  7252  00313C                     _printAddress:
  7253                           	callstack 17
  7254  00313C                     
  7255                           ;main.c: 435: void printAddress(uint32_t address);main.c: 436: {;main.c: 437:     printf
      +                          ("    Address:    ");
  7256  00313C  0E80               	movlw	low STR_73
  7257  00313E  0100               	movlb	0	; () banked
  7258  003140  6FA3               	movwf	printf@fmt& (0+255),b
  7259  003142  0EFF               	movlw	high STR_73
  7260  003144  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7261  003146  EC1B  F01B         	call	_printf	;wreg free
  7262                           
  7263                           ;main.c: 438:     printf("%04x", address >> 16);
  7264  00314A  0EEE               	movlw	low STR_10
  7265  00314C  0100               	movlb	0	; () banked
  7266  00314E  6FA3               	movwf	printf@fmt& (0+255),b
  7267  003150  0EFF               	movlw	high STR_10
  7268  003152  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7269  003154  C0B3  F0A5         	movff	printAddress@address+2,?_printf+2
  7270  003158  C0B4  F0A6         	movff	printAddress@address+3,?_printf+3
  7271  00315C  6BA7               	clrf	(?_printf+4)& (0+255),b
  7272  00315E  6BA8               	clrf	(?_printf+5)& (0+255),b
  7273  003160  EC1B  F01B         	call	_printf	;wreg free
  7274                           
  7275                           ;main.c: 439:     printf(":");
  7276  003164  0EFD               	movlw	low STR_11
  7277  003166  0100               	movlb	0	; () banked
  7278  003168  6FA3               	movwf	printf@fmt& (0+255),b
  7279  00316A  0EFF               	movlw	high STR_11
  7280  00316C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7281  00316E  EC1B  F01B         	call	_printf	;wreg free
  7282                           
  7283                           ;main.c: 440:     printf("%04x", address & 0X0000FFFF);
  7284  003172  0EEE               	movlw	low STR_10
  7285  003174  0100               	movlb	0	; () banked
  7286  003176  6FA3               	movwf	printf@fmt& (0+255),b
  7287  003178  0EFF               	movlw	high STR_10
  7288  00317A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7289  00317C  0EFF               	movlw	255
  7290  00317E  15B1               	andwf	printAddress@address& (0+255),w,b
  7291  003180  6FA5               	movwf	(?_printf+2)& (0+255),b
  7292  003182  0EFF               	movlw	255
  7293  003184  15B2               	andwf	(printAddress@address+1)& (0+255),w,b
  7294  003186  6FA6               	movwf	(?_printf+3)& (0+255),b
  7295  003188  0E00               	movlw	0
  7296  00318A  15B3               	andwf	(printAddress@address+2)& (0+255),w,b
  7297  00318C  6FA7               	movwf	(?_printf+4)& (0+255),b
  7298  00318E  0E00               	movlw	0
  7299  003190  15B4               	andwf	(printAddress@address+3)& (0+255),w,b
  7300  003192  6FA8               	movwf	(?_printf+5)& (0+255),b
  7301  003194  EC1B  F01B         	call	_printf	;wreg free
  7302                           
  7303                           ;main.c: 441:     printf("\r\n");
  7304  003198  0EAE               	movlw	low (STR_71+12)
  7305  00319A  0100               	movlb	0	; () banked
  7306  00319C  6FA3               	movwf	printf@fmt& (0+255),b
  7307  00319E  0EFF               	movlw	high (STR_71+12)
  7308  0031A0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7309  0031A2  EC1B  F01B         	call	_printf	;wreg free
  7310  0031A6  0012               	return		;funcret
  7311  0031A8                     __end_of_printAddress:
  7312                           	callstack 0
  7313                           
  7314 ;; *************** function _incrementAddress *****************
  7315 ;; Defined at:
  7316 ;;		line 420 in file "main.c"
  7317 ;; Parameters:    Size  Location     Type
  7318 ;;  sdCardAddres    4   18[COMRAM] unsigned long 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;		None
  7321 ;; Return value:  Size  Location     Type
  7322 ;;                  4   18[COMRAM] unsigned long 
  7323 ;; Registers used:
  7324 ;;		wreg, status,2, status,0
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;Total ram usage:        4 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    4
  7337 ;; This function calls:
  7338 ;;		Nothing
  7339 ;; This function is called by:
  7340 ;;		_main
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text3
  7345  003316                     __ptext3:
  7346                           	callstack 0
  7347  003316                     _incrementAddress:
  7348                           	callstack 26
  7349  003316                     
  7350                           ;main.c: 420: uint32_t incrementAddress(uint32_t sdCardAddress);main.c: 421: {;main.c: 4
      +                          22:     sdCardAddress += 512;
  7351  003316  0E00               	movlw	0
  7352  003318  2613               	addwf	incrementAddress@sdCardAddress^0,f,c
  7353  00331A  0E02               	movlw	2
  7354  00331C  2214               	addwfc	(incrementAddress@sdCardAddress+1)^0,f,c
  7355  00331E  0E00               	movlw	0
  7356  003320  2215               	addwfc	(incrementAddress@sdCardAddress+2)^0,f,c
  7357  003322  0E00               	movlw	0
  7358  003324  2216               	addwfc	(incrementAddress@sdCardAddress+3)^0,f,c
  7359                           
  7360                           ;main.c: 423:     if (sdCardAddress >= 0x04000000)
  7361  003326  0E04               	movlw	4
  7362  003328  5C16               	subwf	(incrementAddress@sdCardAddress+3)^0,w,c
  7363  00332A  A0D8               	btfss	status,0,c
  7364  00332C  EF9A  F019         	goto	u5741
  7365  003330  EF9C  F019         	goto	u5740
  7366  003334                     u5741:
  7367  003334  EFA4  F019         	goto	l5729
  7368  003338                     u5740:
  7369  003338                     
  7370                           ;main.c: 424:         sdCardAddress = 0x00000000;
  7371  003338  0E00               	movlw	0
  7372  00333A  6E13               	movwf	incrementAddress@sdCardAddress^0,c
  7373  00333C  0E00               	movlw	0
  7374  00333E  6E14               	movwf	(incrementAddress@sdCardAddress+1)^0,c
  7375  003340  0E00               	movlw	0
  7376  003342  6E15               	movwf	(incrementAddress@sdCardAddress+2)^0,c
  7377  003344  0E00               	movlw	0
  7378  003346  6E16               	movwf	(incrementAddress@sdCardAddress+3)^0,c
  7379  003348                     l5729:
  7380                           
  7381                           ;main.c: 425:     return sdCardAddress;
  7382  003348  C013  F013         	movff	incrementAddress@sdCardAddress,?_incrementAddress
  7383  00334C  C014  F014         	movff	incrementAddress@sdCardAddress+1,?_incrementAddress+1
  7384  003350  C015  F015         	movff	incrementAddress@sdCardAddress+2,?_incrementAddress+2
  7385  003354  C016  F016         	movff	incrementAddress@sdCardAddress+3,?_incrementAddress+3
  7386  003358  0012               	return		;funcret
  7387  00335A                     __end_of_incrementAddress:
  7388                           	callstack 0
  7389                           
  7390 ;; *************** function _hexDumpBuffer *****************
  7391 ;; Defined at:
  7392 ;;		line 179 in file "sdCard.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  sdCardBuffer    2   81[BANK0 ] PTR unsigned char 
  7395 ;;		 -> sdCardBuffer(512), 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  j               2   85[BANK0 ] int 
  7398 ;;  j               2   87[BANK0 ] int 
  7399 ;;  i               2   89[BANK0 ] unsigned short 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  1    wreg      void 
  7402 ;; Registers used:
  7403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7409 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;Total ram usage:       10 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:   13
  7416 ;; This function calls:
  7417 ;;		_printf
  7418 ;; This function is called by:
  7419 ;;		_main
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text4
  7424  0023F2                     __ptext4:
  7425                           	callstack 0
  7426  0023F2                     _hexDumpBuffer:
  7427                           	callstack 17
  7428  0023F2                     
  7429                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  7430  0023F2  0EF3               	movlw	low STR_116
  7431  0023F4  0100               	movlb	0	; () banked
  7432  0023F6  6FA3               	movwf	printf@fmt& (0+255),b
  7433  0023F8  0EFF               	movlw	high STR_116
  7434  0023FA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7435  0023FC  EC1B  F01B         	call	_printf	;wreg free
  7436  002400                     
  7437                           ;sdCard.c: 185:                     printf(".");
  7438  002400  0E00               	movlw	0
  7439  002402  0100               	movlb	0	; () banked
  7440  002404  6FBA               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  7441  002406  0E00               	movlw	0
  7442  002408  6FB9               	movwf	hexDumpBuffer@i& (0+255),b
  7443  00240A                     l5857:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;sdCard.c: 186:                 } else {
  7447  00240A  51B9               	movf	hexDumpBuffer@i& (0+255),w,b
  7448  00240C  11BA               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7449  00240E  B4D8               	btfsc	status,2,c
  7450  002410  EF0C  F012         	goto	u5841
  7451  002414  EF0E  F012         	goto	u5840
  7452  002418                     u5841:
  7453  002418  EF23  F012         	goto	l5863
  7454  00241C                     u5840:
  7455  00241C                     
  7456                           ; BSR set to: 0
  7457  00241C  0E07               	movlw	7
  7458  00241E  15B9               	andwf	hexDumpBuffer@i& (0+255),w,b
  7459  002420  6FB3               	movwf	??_hexDumpBuffer& (0+255),b
  7460  002422  0E00               	movlw	0
  7461  002424  15BA               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7462  002426  6FB4               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7463  002428  51B3               	movf	??_hexDumpBuffer& (0+255),w,b
  7464  00242A  11B4               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7465  00242C  A4D8               	btfss	status,2,c
  7466  00242E  EF1B  F012         	goto	u5851
  7467  002432  EF1D  F012         	goto	u5850
  7468  002436                     u5851:
  7469  002436  EF23  F012         	goto	l5863
  7470  00243A                     u5850:
  7471  00243A                     
  7472                           ; BSR set to: 0
  7473  00243A  0E8F               	movlw	low (STR_73+15)
  7474  00243C  6FA3               	movwf	printf@fmt& (0+255),b
  7475  00243E  0EFF               	movlw	high (STR_73+15)
  7476  002440  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7477  002442  EC1B  F01B         	call	_printf	;wreg free
  7478  002446                     l5863:
  7479                           
  7480                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  7481  002446  0100               	movlb	0	; () banked
  7482  002448  51B9               	movf	hexDumpBuffer@i& (0+255),w,b
  7483  00244A  11BA               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7484  00244C  B4D8               	btfsc	status,2,c
  7485  00244E  EF2B  F012         	goto	u5861
  7486  002452  EF2D  F012         	goto	u5860
  7487  002456                     u5861:
  7488  002456  EF86  F012         	goto	l707
  7489  00245A                     u5860:
  7490  00245A                     
  7491                           ; BSR set to: 0
  7492  00245A  0E0F               	movlw	15
  7493  00245C  15B9               	andwf	hexDumpBuffer@i& (0+255),w,b
  7494  00245E  6FB3               	movwf	??_hexDumpBuffer& (0+255),b
  7495  002460  0E00               	movlw	0
  7496  002462  15BA               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7497  002464  6FB4               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7498  002466  51B3               	movf	??_hexDumpBuffer& (0+255),w,b
  7499  002468  11B4               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7500  00246A  A4D8               	btfss	status,2,c
  7501  00246C  EF3A  F012         	goto	u5871
  7502  002470  EF3C  F012         	goto	u5870
  7503  002474                     u5871:
  7504  002474  EF86  F012         	goto	l707
  7505  002478                     u5870:
  7506  002478                     
  7507                           ; BSR set to: 0
  7508                           ;sdCard.c: 188:                 }
  7509  002478  0E8E               	movlw	low (STR_73+14)
  7510  00247A  6FA3               	movwf	printf@fmt& (0+255),b
  7511  00247C  0EFF               	movlw	high (STR_73+14)
  7512  00247E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7513  002480  EC1B  F01B         	call	_printf	;wreg free
  7514  002484                     
  7515                           ;sdCard.c: 189:             }
  7516  002484  0EF0               	movlw	240
  7517  002486  0100               	movlb	0	; () banked
  7518  002488  25B9               	addwf	hexDumpBuffer@i& (0+255),w,b
  7519  00248A  6FB5               	movwf	hexDumpBuffer@j& (0+255),b
  7520  00248C  0EFF               	movlw	255
  7521  00248E  21BA               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7522  002490  6FB6               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  7523  002492  EF75  F012         	goto	l5879
  7524  002496                     l5871:
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;sdCard.c: 190:             printf("\r\n");
  7528  002496  51B5               	movf	hexDumpBuffer@j& (0+255),w,b
  7529  002498  25B1               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7530  00249A  6ED9               	movwf	fsr2l,c
  7531  00249C  51B6               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7532  00249E  21B2               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7533  0024A0  6EDA               	movwf	fsr2h,c
  7534  0024A2  0E20               	movlw	32
  7535  0024A4  60DF               	cpfslt	indf2,c
  7536  0024A6  EF57  F012         	goto	u5881
  7537  0024AA  EF59  F012         	goto	u5880
  7538  0024AE                     u5881:
  7539  0024AE  EF61  F012         	goto	l5875
  7540  0024B2                     u5880:
  7541  0024B2                     
  7542                           ; BSR set to: 0
  7543                           ;sdCard.c: 191:         }
  7544  0024B2  0E7F               	movlw	low (STR_37+74)
  7545  0024B4  6FA3               	movwf	printf@fmt& (0+255),b
  7546  0024B6  0EF3               	movlw	high (STR_37+74)
  7547  0024B8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7548  0024BA  EC1B  F01B         	call	_printf	;wreg free
  7549                           
  7550                           ;sdCard.c: 192: 
  7551  0024BE  EF72  F012         	goto	l5877
  7552  0024C2                     l5875:
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  7556  0024C2  0EF7               	movlw	low STR_120
  7557  0024C4  6FA3               	movwf	printf@fmt& (0+255),b
  7558  0024C6  0EFF               	movlw	high STR_120
  7559  0024C8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7560  0024CA  51B5               	movf	hexDumpBuffer@j& (0+255),w,b
  7561  0024CC  25B1               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7562  0024CE  6ED9               	movwf	fsr2l,c
  7563  0024D0  51B6               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7564  0024D2  21B2               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7565  0024D4  6EDA               	movwf	fsr2h,c
  7566  0024D6  50DF               	movf	indf2,w,c
  7567  0024D8  6FB3               	movwf	??_hexDumpBuffer& (0+255),b
  7568  0024DA  51B3               	movf	??_hexDumpBuffer& (0+255),w,b
  7569  0024DC  6FA5               	movwf	(?_printf+2)& (0+255),b
  7570  0024DE  6BA6               	clrf	(?_printf+3)& (0+255),b
  7571  0024E0  EC1B  F01B         	call	_printf	;wreg free
  7572  0024E4                     l5877:
  7573                           
  7574                           ;sdCard.c: 195: 
  7575  0024E4  0100               	movlb	0	; () banked
  7576  0024E6  4BB5               	infsnz	hexDumpBuffer@j& (0+255),f,b
  7577  0024E8  2BB6               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  7578  0024EA                     l5879:
  7579                           
  7580                           ; BSR set to: 0
  7581  0024EA  51B9               	movf	hexDumpBuffer@i& (0+255),w,b
  7582  0024EC  5DB5               	subwf	hexDumpBuffer@j& (0+255),w,b
  7583  0024EE  51BA               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7584  0024F0  59B6               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  7585  0024F2  A0D8               	btfss	status,0,c
  7586  0024F4  EF7E  F012         	goto	u5891
  7587  0024F8  EF80  F012         	goto	u5890
  7588  0024FC                     u5891:
  7589  0024FC  EF4B  F012         	goto	l5871
  7590  002500                     u5890:
  7591  002500                     
  7592                           ; BSR set to: 0
  7593                           ;sdCard.c: 196:     printf("   ");
  7594  002500  0EAE               	movlw	low (STR_71+12)
  7595  002502  6FA3               	movwf	printf@fmt& (0+255),b
  7596  002504  0EFF               	movlw	high (STR_71+12)
  7597  002506  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7598  002508  EC1B  F01B         	call	_printf	;wreg free
  7599  00250C                     l707:
  7600                           
  7601                           ;sdCard.c: 199:             printf(".");
  7602  00250C  0EE8               	movlw	low STR_122
  7603  00250E  0100               	movlb	0	; () banked
  7604  002510  6FA3               	movwf	printf@fmt& (0+255),b
  7605  002512  0EFF               	movlw	high STR_122
  7606  002514  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7607  002516  51B9               	movf	hexDumpBuffer@i& (0+255),w,b
  7608  002518  25B1               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7609  00251A  6ED9               	movwf	fsr2l,c
  7610  00251C  51BA               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7611  00251E  21B2               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7612  002520  6EDA               	movwf	fsr2h,c
  7613  002522  50DF               	movf	indf2,w,c
  7614  002524  6FB3               	movwf	??_hexDumpBuffer& (0+255),b
  7615  002526  51B3               	movf	??_hexDumpBuffer& (0+255),w,b
  7616  002528  6FA5               	movwf	(?_printf+2)& (0+255),b
  7617  00252A  6BA6               	clrf	(?_printf+3)& (0+255),b
  7618  00252C  EC1B  F01B         	call	_printf	;wreg free
  7619  002530                     
  7620                           ;sdCard.c: 200:         } else {
  7621  002530  0100               	movlb	0	; () banked
  7622  002532  4BB9               	infsnz	hexDumpBuffer@i& (0+255),f,b
  7623  002534  2BBA               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  7624  002536                     
  7625                           ; BSR set to: 0
  7626  002536  0E02               	movlw	2
  7627  002538  5DBA               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7628  00253A  A0D8               	btfss	status,0,c
  7629  00253C  EFA2  F012         	goto	u5901
  7630  002540  EFA4  F012         	goto	u5900
  7631  002544                     u5901:
  7632  002544  EF05  F012         	goto	l5857
  7633  002548                     u5900:
  7634  002548                     
  7635                           ; BSR set to: 0
  7636                           ;sdCard.c: 202:         }
  7637  002548  0E8D               	movlw	low (STR_73+13)
  7638  00254A  6FA3               	movwf	printf@fmt& (0+255),b
  7639  00254C  0EFF               	movlw	high (STR_73+13)
  7640  00254E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7641  002550  EC1B  F01B         	call	_printf	;wreg free
  7642  002554                     
  7643                           ;sdCard.c: 203:     }
  7644  002554  0EF0               	movlw	240
  7645  002556  0100               	movlb	0	; () banked
  7646  002558  25B9               	addwf	hexDumpBuffer@i& (0+255),w,b
  7647  00255A  6FB7               	movwf	hexDumpBuffer@j_1440& (0+255),b
  7648  00255C  0EFF               	movlw	255
  7649  00255E  21BA               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7650  002560  6FB8               	movwf	(hexDumpBuffer@j_1440+1)& (0+255),b
  7651  002562  EFDD  F012         	goto	l5899
  7652  002566                     l5891:
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;sdCard.c: 204:     printf("\r\n");
  7656  002566  51B7               	movf	hexDumpBuffer@j_1440& (0+255),w,b
  7657  002568  25B1               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7658  00256A  6ED9               	movwf	fsr2l,c
  7659  00256C  51B8               	movf	(hexDumpBuffer@j_1440+1)& (0+255),w,b
  7660  00256E  21B2               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7661  002570  6EDA               	movwf	fsr2h,c
  7662  002572  0E20               	movlw	32
  7663  002574  60DF               	cpfslt	indf2,c
  7664  002576  EFBF  F012         	goto	u5911
  7665  00257A  EFC1  F012         	goto	u5910
  7666  00257E                     u5911:
  7667  00257E  EFC9  F012         	goto	l5895
  7668  002582                     u5910:
  7669  002582                     
  7670                           ; BSR set to: 0
  7671                           ;sdCard.c: 205: }
  7672  002582  0E7F               	movlw	low (STR_37+74)
  7673  002584  6FA3               	movwf	printf@fmt& (0+255),b
  7674  002586  0EF3               	movlw	high (STR_37+74)
  7675  002588  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7676  00258A  EC1B  F01B         	call	_printf	;wreg free
  7677  00258E  EFDA  F012         	goto	l5897
  7678  002592                     l5895:
  7679                           
  7680                           ; BSR set to: 0
  7681  002592  0EF7               	movlw	low STR_120
  7682  002594  6FA3               	movwf	printf@fmt& (0+255),b
  7683  002596  0EFF               	movlw	high STR_120
  7684  002598  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7685  00259A  51B7               	movf	hexDumpBuffer@j_1440& (0+255),w,b
  7686  00259C  25B1               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7687  00259E  6ED9               	movwf	fsr2l,c
  7688  0025A0  51B8               	movf	(hexDumpBuffer@j_1440+1)& (0+255),w,b
  7689  0025A2  21B2               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7690  0025A4  6EDA               	movwf	fsr2h,c
  7691  0025A6  50DF               	movf	indf2,w,c
  7692  0025A8  6FB3               	movwf	??_hexDumpBuffer& (0+255),b
  7693  0025AA  51B3               	movf	??_hexDumpBuffer& (0+255),w,b
  7694  0025AC  6FA5               	movwf	(?_printf+2)& (0+255),b
  7695  0025AE  6BA6               	clrf	(?_printf+3)& (0+255),b
  7696  0025B0  EC1B  F01B         	call	_printf	;wreg free
  7697  0025B4                     l5897:
  7698  0025B4  0100               	movlb	0	; () banked
  7699  0025B6  4BB7               	infsnz	hexDumpBuffer@j_1440& (0+255),f,b
  7700  0025B8  2BB8               	incf	(hexDumpBuffer@j_1440+1)& (0+255),f,b
  7701  0025BA                     l5899:
  7702                           
  7703                           ; BSR set to: 0
  7704  0025BA  51B9               	movf	hexDumpBuffer@i& (0+255),w,b
  7705  0025BC  5DB7               	subwf	hexDumpBuffer@j_1440& (0+255),w,b
  7706  0025BE  51BA               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7707  0025C0  59B8               	subwfb	(hexDumpBuffer@j_1440+1)& (0+255),w,b
  7708  0025C2  A0D8               	btfss	status,0,c
  7709  0025C4  EFE6  F012         	goto	u5921
  7710  0025C8  EFE8  F012         	goto	u5920
  7711  0025CC                     u5921:
  7712  0025CC  EFB3  F012         	goto	l5891
  7713  0025D0                     u5920:
  7714  0025D0                     
  7715                           ; BSR set to: 0
  7716  0025D0  0EAE               	movlw	low (STR_71+12)
  7717  0025D2  6FA3               	movwf	printf@fmt& (0+255),b
  7718  0025D4  0EFF               	movlw	high (STR_71+12)
  7719  0025D6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7720  0025D8  EC1B  F01B         	call	_printf	;wreg free
  7721  0025DC  0012               	return		;funcret
  7722  0025DE                     __end_of_hexDumpBuffer:
  7723                           	callstack 0
  7724                           
  7725 ;; *************** function _TMR0_WriteTimer *****************
  7726 ;; Defined at:
  7727 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  timerVal        2   18[COMRAM] unsigned short 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      void 
  7734 ;; Registers used:
  7735 ;;		wreg, status,2
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;Total ram usage:        2 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    4
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_main
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text5
  7756  0037A8                     __ptext5:
  7757                           	callstack 0
  7758  0037A8                     _TMR0_WriteTimer:
  7759                           	callstack 26
  7760  0037A8                     
  7761                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  7762  0037A8  5014               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  7763  0037AA  6ED7               	movwf	215,c	;volatile
  7764  0037AC                     
  7765                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  7766  0037AC  C013  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  7767  0037B0  0012               	return		;funcret
  7768  0037B2                     __end_of_TMR0_WriteTimer:
  7769                           	callstack 0
  7770                           
  7771 ;; *************** function _SYSTEM_Initialize *****************
  7772 ;; Defined at:
  7773 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;		None
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    6
  7794 ;; This function calls:
  7795 ;;		_ADC_Initialize
  7796 ;;		_EPWM1_Initialize
  7797 ;;		_EUSART1_Initialize
  7798 ;;		_INTERRUPT_Initialize
  7799 ;;		_OSCILLATOR_Initialize
  7800 ;;		_PIN_MANAGER_Initialize
  7801 ;;		_SPI2_Initialize
  7802 ;;		_TMR0_Initialize
  7803 ;;		_TMR2_Initialize
  7804 ;; This function is called by:
  7805 ;;		_main
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text6
  7810  003686                     __ptext6:
  7811                           	callstack 0
  7812  003686                     _SYSTEM_Initialize:
  7813                           	callstack 24
  7814  003686                     
  7815                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7816  003686  ECF9  F01B         	call	_INTERRUPT_Initialize	;wreg free
  7817  00368A                     
  7818                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  7819  00368A  ECC3  F01B         	call	_SPI2_Initialize	;wreg free
  7820  00368E                     
  7821                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7822  00368E  EC05  F01B         	call	_PIN_MANAGER_Initialize	;wreg free
  7823  003692                     
  7824                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7825  003692  EC88  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  7826  003696                     
  7827                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  7828  003696  ECA3  F01B         	call	_ADC_Initialize	;wreg free
  7829  00369A                     
  7830                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  7831  00369A  EC69  F01B         	call	_EPWM1_Initialize	;wreg free
  7832  00369E                     
  7833                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7834  00369E  ECCC  F01B         	call	_TMR2_Initialize	;wreg free
  7835  0036A2                     
  7836                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7837  0036A2  EC9C  F01A         	call	_TMR0_Initialize	;wreg free
  7838  0036A6                     
  7839                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  7840  0036A6  ECEF  F019         	call	_EUSART1_Initialize	;wreg free
  7841  0036AA  0012               	return		;funcret
  7842  0036AC                     __end_of_SYSTEM_Initialize:
  7843                           	callstack 0
  7844                           
  7845 ;; *************** function _TMR2_Initialize *****************
  7846 ;; Defined at:
  7847 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;		None
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7865 ;;Total ram usage:        0 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    4
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_SYSTEM_Initialize
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           	psect	text7
  7876  003798                     __ptext7:
  7877                           	callstack 0
  7878  003798                     _TMR2_Initialize:
  7879                           	callstack 25
  7880  003798                     
  7881                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  7882  003798  0E3F               	movlw	63
  7883  00379A  6EBB               	movwf	187,c	;volatile
  7884                           
  7885                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7886  00379C  0E00               	movlw	0
  7887  00379E  6EBC               	movwf	188,c	;volatile
  7888  0037A0                     
  7889                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7890  0037A0  929E               	bcf	158,1,c	;volatile
  7891                           
  7892                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x1C;
  7893  0037A2  0E1C               	movlw	28
  7894  0037A4  6EBA               	movwf	186,c	;volatile
  7895  0037A6  0012               	return		;funcret
  7896  0037A8                     __end_of_TMR2_Initialize:
  7897                           	callstack 0
  7898                           
  7899 ;; *************** function _TMR0_Initialize *****************
  7900 ;; Defined at:
  7901 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		wreg, status,2, status,0, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7919 ;;Total ram usage:        2 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:    5
  7922 ;; This function calls:
  7923 ;;		_TMR0_SetInterruptHandler
  7924 ;; This function is called by:
  7925 ;;		_SYSTEM_Initialize
  7926 ;; This function uses a non-reentrant model
  7927 ;;
  7928                           
  7929                           	psect	text8
  7930  003538                     __ptext8:
  7931                           	callstack 0
  7932  003538                     _TMR0_Initialize:
  7933                           	callstack 24
  7934  003538                     
  7935                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  7936  003538  9CD5               	bcf	213,6,c	;volatile
  7937  00353A                     
  7938                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  7939  00353A  0E00               	movlw	0
  7940  00353C  6ED7               	movwf	215,c	;volatile
  7941                           
  7942                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  7943  00353E  0E00               	movlw	0
  7944  003540  6ED6               	movwf	214,c	;volatile
  7945  003542                     
  7946                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  7947  003542  50D6               	movf	214,w,c	;volatile
  7948  003544  CFD7 F015          	movff	4055,??_TMR0_Initialize	;volatile
  7949  003548  6A16               	clrf	(??_TMR0_Initialize+1)^0,c
  7950  00354A  C015  F016         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  7951  00354E  6A15               	clrf	??_TMR0_Initialize^0,c
  7952  003550  1015               	iorwf	??_TMR0_Initialize^0,w,c
  7953  003552  6E43               	movwf	_timer0ReloadVal^0,c	;volatile
  7954  003554  5016               	movf	(??_TMR0_Initialize+1)^0,w,c
  7955  003556  6E44               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  7956  003558                     
  7957                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  7958  003558  94F2               	bcf	242,2,c	;volatile
  7959  00355A                     
  7960                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  7961  00355A  8AF2               	bsf	242,5,c	;volatile
  7962  00355C                     
  7963                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7964  00355C  0EFA               	movlw	low _TMR0_DefaultInterruptHandler
  7965  00355E  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  7966  003560  0E37               	movlw	high _TMR0_DefaultInterruptHandler
  7967  003562  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  7968  003564  ECD9  F01B         	call	_TMR0_SetInterruptHandler	;wreg free
  7969  003568                     
  7970                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  7971  003568  0E9F               	movlw	159
  7972  00356A  6ED5               	movwf	213,c	;volatile
  7973  00356C  0012               	return		;funcret
  7974  00356E                     __end_of_TMR0_Initialize:
  7975                           	callstack 0
  7976                           
  7977 ;; *************** function _TMR0_SetInterruptHandler *****************
  7978 ;; Defined at:
  7979 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  7982 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;		None
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7998 ;;Total ram usage:        2 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; Hardware stack levels required when called:    4
  8001 ;; This function calls:
  8002 ;;		Nothing
  8003 ;; This function is called by:
  8004 ;;		_TMR0_Initialize
  8005 ;;		_main
  8006 ;; This function uses a non-reentrant model
  8007 ;;
  8008                           
  8009                           	psect	text9
  8010  0037B2                     __ptext9:
  8011                           	callstack 0
  8012  0037B2                     _TMR0_SetInterruptHandler:
  8013                           	callstack 26
  8014  0037B2                     
  8015                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  8016  0037B2  C013  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8017  0037B6  C014  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8018  0037BA  0012               	return		;funcret
  8019  0037BC                     __end_of_TMR0_SetInterruptHandler:
  8020                           	callstack 0
  8021                           
  8022 ;; *************** function _SPI2_Initialize *****************
  8023 ;; Defined at:
  8024 ;;		line 62 in file "mcc_generated_files/spi2.c"
  8025 ;; Parameters:    Size  Location     Type
  8026 ;;		None
  8027 ;; Auto vars:     Size  Location     Type
  8028 ;;		None
  8029 ;; Return value:  Size  Location     Type
  8030 ;;                  1    wreg      void 
  8031 ;; Registers used:
  8032 ;;		wreg, status,2
  8033 ;; Tracked objects:
  8034 ;;		On entry : 0/0
  8035 ;;		On exit  : 0/0
  8036 ;;		Unchanged: 0/0
  8037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8042 ;;Total ram usage:        0 bytes
  8043 ;; Hardware stack levels used:    1
  8044 ;; Hardware stack levels required when called:    4
  8045 ;; This function calls:
  8046 ;;		Nothing
  8047 ;; This function is called by:
  8048 ;;		_SYSTEM_Initialize
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text10
  8053  003786                     __ptext10:
  8054                           	callstack 0
  8055  003786                     _SPI2_Initialize:
  8056                           	callstack 25
  8057  003786                     
  8058                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  8059  003786  0E40               	movlw	64
  8060  003788  6E6D               	movwf	109,c	;volatile
  8061                           
  8062                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  8063  00378A  0E01               	movlw	1
  8064  00378C  6E6C               	movwf	108,c	;volatile
  8065                           
  8066                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  8067  00378E  0E01               	movlw	1
  8068  003790  6E6E               	movwf	110,c	;volatile
  8069  003792                     
  8070                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  8071  003792  9293               	bcf	147,1,c	;volatile
  8072  003794                     
  8073                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  8074  003794  9A6C               	bcf	108,5,c	;volatile
  8075  003796  0012               	return		;funcret
  8076  003798                     __end_of_SPI2_Initialize:
  8077                           	callstack 0
  8078                           
  8079 ;; *************** function _PIN_MANAGER_Initialize *****************
  8080 ;; Defined at:
  8081 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    4
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_SYSTEM_Initialize
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text11
  8110  00360A                     __ptext11:
  8111                           	callstack 0
  8112  00360A                     _PIN_MANAGER_Initialize:
  8113                           	callstack 25
  8114  00360A                     
  8115                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8116  00360A  0E00               	movlw	0
  8117  00360C  6E89               	movwf	137,c	;volatile
  8118                           
  8119                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8120  00360E  0E00               	movlw	0
  8121  003610  6E8A               	movwf	138,c	;volatile
  8122                           
  8123                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8124  003612  0E00               	movlw	0
  8125  003614  6E8B               	movwf	139,c	;volatile
  8126  003616                     
  8127                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  8128  003616  6892               	setf	146,c	;volatile
  8129                           
  8130                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  8131  003618  0EE5               	movlw	229
  8132  00361A  6E93               	movwf	147,c	;volatile
  8133                           
  8134                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  8135  00361C  0EBB               	movlw	187
  8136  00361E  6E94               	movwf	148,c	;volatile
  8137                           
  8138                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  8139  003620  0E3C               	movlw	60
  8140  003622  010F               	movlb	15	; () banked
  8141  003624  6F3A               	movwf	58,b	;volatile
  8142                           
  8143                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  8144  003626  0E31               	movlw	49
  8145  003628  6F39               	movwf	57,b	;volatile
  8146                           
  8147                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  8148  00362A  0E2F               	movlw	47
  8149  00362C  6F38               	movwf	56,b	;volatile
  8150                           
  8151                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8152  00362E  0E00               	movlw	0
  8153  003630  6E61               	movwf	97,c	;volatile
  8154  003632                     
  8155                           ; BSR set to: 15
  8156                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8157  003632  8EF1               	bsf	241,7,c	;volatile
  8158  003634                     
  8159                           ; BSR set to: 15
  8160  003634  0012               	return		;funcret
  8161  003636                     __end_of_PIN_MANAGER_Initialize:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function _OSCILLATOR_Initialize *****************
  8165 ;; Defined at:
  8166 ;;		line 64 in file "mcc_generated_files/mcc.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;		None
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      void 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;Total ram usage:        0 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    4
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_SYSTEM_Initialize
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text12
  8195  003710                     __ptext12:
  8196                           	callstack 0
  8197  003710                     _OSCILLATOR_Initialize:
  8198                           	callstack 25
  8199  003710                     
  8200                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  8201  003710  0E70               	movlw	112
  8202  003712  6ED3               	movwf	211,c	;volatile
  8203                           
  8204                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  8205  003714  0E04               	movlw	4
  8206  003716  6ED2               	movwf	210,c	;volatile
  8207                           
  8208                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  8209  003718  0E40               	movlw	64
  8210  00371A  6E9B               	movwf	155,c	;volatile
  8211  00371C                     l270:
  8212                           
  8213                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  8214  00371C  AED2               	btfss	4050,7,c	;volatile
  8215  00371E  EF93  F01B         	goto	u5651
  8216  003722  EF95  F01B         	goto	u5650
  8217  003726                     u5651:
  8218  003726  EF8E  F01B         	goto	l270
  8219  00372A                     u5650:
  8220  00372A  0012               	return		;funcret
  8221  00372C                     __end_of_OSCILLATOR_Initialize:
  8222                           	callstack 0
  8223                           
  8224 ;; *************** function _INTERRUPT_Initialize *****************
  8225 ;; Defined at:
  8226 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8227 ;; Parameters:    Size  Location     Type
  8228 ;;		None
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      void 
  8233 ;; Registers used:
  8234 ;;		None
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8244 ;;Total ram usage:        0 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:    4
  8247 ;; This function calls:
  8248 ;;		Nothing
  8249 ;; This function is called by:
  8250 ;;		_SYSTEM_Initialize
  8251 ;; This function uses a non-reentrant model
  8252 ;;
  8253                           
  8254                           	psect	text13
  8255  0037F2                     __ptext13:
  8256                           	callstack 0
  8257  0037F2                     _INTERRUPT_Initialize:
  8258                           	callstack 25
  8259  0037F2                     
  8260                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8261  0037F2  9ED0               	bcf	208,7,c	;volatile
  8262  0037F4  0012               	return		;funcret
  8263  0037F6                     __end_of_INTERRUPT_Initialize:
  8264                           	callstack 0
  8265                           
  8266 ;; *************** function _EUSART1_Initialize *****************
  8267 ;; Defined at:
  8268 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;		None
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;		None
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  1    wreg      void 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;Total ram usage:        0 bytes
  8287 ;; Hardware stack levels used:    1
  8288 ;; Hardware stack levels required when called:    5
  8289 ;; This function calls:
  8290 ;;		_EUSART1_SetErrorHandler
  8291 ;;		_EUSART1_SetFramingErrorHandler
  8292 ;;		_EUSART1_SetOverrunErrorHandler
  8293 ;; This function is called by:
  8294 ;;		_SYSTEM_Initialize
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text14
  8299  0033DE                     __ptext14:
  8300                           	callstack 0
  8301  0033DE                     _EUSART1_Initialize:
  8302                           	callstack 24
  8303  0033DE                     
  8304                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8305  0033DE  0E08               	movlw	8
  8306  0033E0  6EB8               	movwf	184,c	;volatile
  8307                           
  8308                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8309  0033E2  0E90               	movlw	144
  8310  0033E4  6EAB               	movwf	171,c	;volatile
  8311                           
  8312                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8313  0033E6  0E24               	movlw	36
  8314  0033E8  6EAC               	movwf	172,c	;volatile
  8315                           
  8316                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  8317  0033EA  0E82               	movlw	130
  8318  0033EC  6EAF               	movwf	175,c	;volatile
  8319                           
  8320                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  8321  0033EE  0E06               	movlw	6
  8322  0033F0  6EB0               	movwf	176,c	;volatile
  8323  0033F2                     
  8324                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8325  0033F2  0E00               	movlw	0
  8326  0033F4  6E13               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8327  0033F6  0E00               	movlw	0
  8328  0033F8  6E14               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8329  0033FA  ECE3  F01B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8330  0033FE                     
  8331                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8332  0033FE  0E00               	movlw	0
  8333  003400  6E13               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8334  003402  0E00               	movlw	0
  8335  003404  6E14               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8336  003406  ECDE  F01B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8337  00340A                     
  8338                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8339  00340A  0E00               	movlw	0
  8340  00340C  6E13               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8341  00340E  0E00               	movlw	0
  8342  003410  6E14               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8343  003412  ECE8  F01B         	call	_EUSART1_SetErrorHandler	;wreg free
  8344  003416                     
  8345                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8346  003416  0E00               	movlw	0
  8347  003418  6E4B               	movwf	_eusart1RxLastError^0,c	;volatile
  8348  00341A  0012               	return		;funcret
  8349  00341C                     __end_of_EUSART1_Initialize:
  8350                           	callstack 0
  8351                           
  8352 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8353 ;; Defined at:
  8354 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  8357 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, status,2, status,0
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8372 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;Total ram usage:        2 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    4
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_EUSART1_Initialize
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text15
  8384  0037BC                     __ptext15:
  8385                           	callstack 0
  8386  0037BC                     _EUSART1_SetOverrunErrorHandler:
  8387                           	callstack 24
  8388  0037BC                     
  8389                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8390  0037BC  C013  F0C9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8391  0037C0  C014  F0CA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8392  0037C4  0012               	return		;funcret
  8393  0037C6                     __end_of_EUSART1_SetOverrunErrorHandler:
  8394                           	callstack 0
  8395                           
  8396 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8397 ;; Defined at:
  8398 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8399 ;; Parameters:    Size  Location     Type
  8400 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  8401 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8402 ;; Auto vars:     Size  Location     Type
  8403 ;;		None
  8404 ;; Return value:  Size  Location     Type
  8405 ;;                  1    wreg      void 
  8406 ;; Registers used:
  8407 ;;		wreg, status,2, status,0
  8408 ;; Tracked objects:
  8409 ;;		On entry : 0/0
  8410 ;;		On exit  : 0/0
  8411 ;;		Unchanged: 0/0
  8412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8417 ;;Total ram usage:        2 bytes
  8418 ;; Hardware stack levels used:    1
  8419 ;; Hardware stack levels required when called:    4
  8420 ;; This function calls:
  8421 ;;		Nothing
  8422 ;; This function is called by:
  8423 ;;		_EUSART1_Initialize
  8424 ;; This function uses a non-reentrant model
  8425 ;;
  8426                           
  8427                           	psect	text16
  8428  0037C6                     __ptext16:
  8429                           	callstack 0
  8430  0037C6                     _EUSART1_SetFramingErrorHandler:
  8431                           	callstack 24
  8432  0037C6                     
  8433                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8434  0037C6  C013  F0CB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8435  0037CA  C014  F0CC         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8436  0037CE  0012               	return		;funcret
  8437  0037D0                     __end_of_EUSART1_SetFramingErrorHandler:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function _EUSART1_SetErrorHandler *****************
  8441 ;; Defined at:
  8442 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  8445 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;		None
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg, status,2, status,0
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8460 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8461 ;;Total ram usage:        2 bytes
  8462 ;; Hardware stack levels used:    1
  8463 ;; Hardware stack levels required when called:    4
  8464 ;; This function calls:
  8465 ;;		Nothing
  8466 ;; This function is called by:
  8467 ;;		_EUSART1_Initialize
  8468 ;; This function uses a non-reentrant model
  8469 ;;
  8470                           
  8471                           	psect	text17
  8472  0037D0                     __ptext17:
  8473                           	callstack 0
  8474  0037D0                     _EUSART1_SetErrorHandler:
  8475                           	callstack 24
  8476  0037D0                     
  8477                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8478  0037D0  C013  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8479  0037D4  C014  F0C8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8480  0037D8  0012               	return		;funcret
  8481  0037DA                     __end_of_EUSART1_SetErrorHandler:
  8482                           	callstack 0
  8483                           
  8484 ;; *************** function _EPWM1_Initialize *****************
  8485 ;; Defined at:
  8486 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    4
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_SYSTEM_Initialize
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text18
  8515  0036D2                     __ptext18:
  8516                           	callstack 0
  8517  0036D2                     _EPWM1_Initialize:
  8518                           	callstack 25
  8519  0036D2                     
  8520                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  8521  0036D2  0E3C               	movlw	60
  8522  0036D4  6EBD               	movwf	189,c	;volatile
  8523                           
  8524                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8525  0036D6  0E00               	movlw	0
  8526  0036D8  6EB6               	movwf	182,c	;volatile
  8527                           
  8528                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  8529  0036DA  0E80               	movlw	128
  8530  0036DC  6EB7               	movwf	183,c	;volatile
  8531                           
  8532                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  8533  0036DE  0E01               	movlw	1
  8534  0036E0  6EB9               	movwf	185,c	;volatile
  8535                           
  8536                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8537  0036E2  0E00               	movlw	0
  8538  0036E4  6EBF               	movwf	191,c	;volatile
  8539                           
  8540                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  8541  0036E6  0E1F               	movlw	31
  8542  0036E8  6EBE               	movwf	190,c	;volatile
  8543                           
  8544                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  8545  0036EA  0EFC               	movlw	-4
  8546  0036EC  010F               	movlb	15	; () banked
  8547  0036EE  1749               	andwf	73,f,b	;volatile
  8548  0036F0                     
  8549                           ; BSR set to: 15
  8550  0036F0  0012               	return		;funcret
  8551  0036F2                     __end_of_EPWM1_Initialize:
  8552                           	callstack 0
  8553                           
  8554 ;; *************** function _ADC_Initialize *****************
  8555 ;; Defined at:
  8556 ;;		line 62 in file "mcc_generated_files/adc.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;		None
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  1    wreg      void 
  8563 ;; Registers used:
  8564 ;;		wreg, status,2
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8574 ;;Total ram usage:        0 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; Hardware stack levels required when called:    4
  8577 ;; This function calls:
  8578 ;;		Nothing
  8579 ;; This function is called by:
  8580 ;;		_SYSTEM_Initialize
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text19
  8585  003746                     __ptext19:
  8586                           	callstack 0
  8587  003746                     _ADC_Initialize:
  8588                           	callstack 25
  8589  003746                     
  8590                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  8591  003746  0E00               	movlw	0
  8592  003748  6EC1               	movwf	193,c	;volatile
  8593                           
  8594                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  8595  00374A  0E26               	movlw	38
  8596  00374C  6EC0               	movwf	192,c	;volatile
  8597                           
  8598                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  8599  00374E  0E00               	movlw	0
  8600  003750  6EC3               	movwf	195,c	;volatile
  8601                           
  8602                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  8603  003752  0E00               	movlw	0
  8604  003754  6EC4               	movwf	196,c	;volatile
  8605                           
  8606                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  8607  003756  0E11               	movlw	17
  8608  003758  6EC2               	movwf	194,c	;volatile
  8609  00375A  0012               	return		;funcret
  8610  00375C                     __end_of_ADC_Initialize:
  8611                           	callstack 0
  8612                           
  8613 ;; *************** function _SPI2_Open *****************
  8614 ;; Defined at:
  8615 ;;		line 72 in file "mcc_generated_files/spi2.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  spi2UniqueCo    1    wreg     enum E353
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;  spi2UniqueCo    1   19[COMRAM] enum E353
  8620 ;; Return value:  Size  Location     Type
  8621 ;;                  1    wreg      _Bool 
  8622 ;; Registers used:
  8623 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8633 ;;Total ram usage:        2 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; Hardware stack levels required when called:    4
  8636 ;; This function calls:
  8637 ;;		Nothing
  8638 ;; This function is called by:
  8639 ;;		_main
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           	psect	text20
  8644  002E5E                     __ptext20:
  8645                           	callstack 0
  8646  002E5E                     _SPI2_Open:
  8647                           	callstack 26
  8648                           
  8649                           ;incstack = 0
  8650                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  8651  002E5E  6E14               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  8652  002E60                     
  8653                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  8654  002E60  BA6C               	btfsc	108,5,c	;volatile
  8655  002E62  EF35  F017         	goto	u5701
  8656  002E66  EF37  F017         	goto	u5700
  8657  002E6A                     u5701:
  8658  002E6A  EF84  F017         	goto	l338
  8659  002E6E                     u5700:
  8660  002E6E                     
  8661                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  8662  002E6E  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8663  002E70  0D04               	mullw	4
  8664  002E72  0E01               	movlw	1
  8665  002E74  26F3               	addwf	243,f,c
  8666  002E76  0E00               	movlw	0
  8667  002E78  22F4               	addwfc	244,f,c
  8668  002E7A  0E31               	movlw	low _spi2_configuration
  8669  002E7C  24F3               	addwf	243,w,c
  8670  002E7E  6EF6               	movwf	tblptrl,c
  8671  002E80  0EF3               	movlw	high _spi2_configuration
  8672  002E82  20F4               	addwfc	244,w,c
  8673  002E84  6EF7               	movwf	tblptrh,c
  8674  002E86                     	if	1	;There are 3 active tblptr bytes
  8675  002E86  6AF8               	clrf	tblptru,c
  8676  002E88  0E00               	movlw	low (__mediumconst shr (0+16))
  8677  002E8A  22F8               	addwfc	tblptru,f,c
  8678  002E8C                     	endif
  8679  002E8C  0008               	tblrd		*
  8680  002E8E  CFF5 FF6D          	movff	tablat,3949	;volatile
  8681                           
  8682                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  8683  002E92  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8684  002E94  0D04               	mullw	4
  8685  002E96  0E31               	movlw	low _spi2_configuration
  8686  002E98  24F3               	addwf	243,w,c
  8687  002E9A  6EF6               	movwf	tblptrl,c
  8688  002E9C  0EF3               	movlw	high _spi2_configuration
  8689  002E9E  20F4               	addwfc	244,w,c
  8690  002EA0  6EF7               	movwf	tblptrh,c
  8691  002EA2                     	if	1	;There are 3 active tblptr bytes
  8692  002EA2  6AF8               	clrf	tblptru,c
  8693  002EA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8694  002EA6  22F8               	addwfc	tblptru,f,c
  8695  002EA8                     	endif
  8696  002EA8  0008               	tblrd		*
  8697  002EAA  CFF5 FF6C          	movff	tablat,3948	;volatile
  8698  002EAE                     
  8699                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  8700  002EAE  0E00               	movlw	0
  8701  002EB0  6E6B               	movwf	107,c	;volatile
  8702  002EB2                     
  8703                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  8704  002EB2  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8705  002EB4  0D04               	mullw	4
  8706  002EB6  0E02               	movlw	2
  8707  002EB8  26F3               	addwf	243,f,c
  8708  002EBA  0E00               	movlw	0
  8709  002EBC  22F4               	addwfc	244,f,c
  8710  002EBE  0E31               	movlw	low _spi2_configuration
  8711  002EC0  24F3               	addwf	243,w,c
  8712  002EC2  6EF6               	movwf	tblptrl,c
  8713  002EC4  0EF3               	movlw	high _spi2_configuration
  8714  002EC6  20F4               	addwfc	244,w,c
  8715  002EC8  6EF7               	movwf	tblptrh,c
  8716  002ECA                     	if	1	;There are 3 active tblptr bytes
  8717  002ECA  6AF8               	clrf	tblptru,c
  8718  002ECC  0E00               	movlw	low (__mediumconst shr (0+16))
  8719  002ECE  22F8               	addwfc	tblptru,f,c
  8720  002ED0                     	endif
  8721  002ED0  0008               	tblrd		*
  8722  002ED2  CFF5 FF6E          	movff	tablat,3950	;volatile
  8723  002ED6                     
  8724                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  8725  002ED6  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8726  002ED8  0D04               	mullw	4
  8727  002EDA  0E03               	movlw	3
  8728  002EDC  26F3               	addwf	243,f,c
  8729  002EDE  0E00               	movlw	0
  8730  002EE0  22F4               	addwfc	244,f,c
  8731  002EE2  0E31               	movlw	low _spi2_configuration
  8732  002EE4  24F3               	addwf	243,w,c
  8733  002EE6  6EF6               	movwf	tblptrl,c
  8734  002EE8  0EF3               	movlw	high _spi2_configuration
  8735  002EEA  20F4               	addwfc	244,w,c
  8736  002EEC  6EF7               	movwf	tblptrh,c
  8737  002EEE                     	if	1	;There are 3 active tblptr bytes
  8738  002EEE  6AF8               	clrf	tblptru,c
  8739  002EF0  0E00               	movlw	low (__mediumconst shr (0+16))
  8740  002EF2  22F8               	addwfc	tblptru,f,c
  8741  002EF4                     	endif
  8742  002EF4  0008               	tblrd		*
  8743  002EF6  CFF5 F013          	movff	tablat,??_SPI2_Open
  8744  002EFA  4613               	rlncf	??_SPI2_Open^0,f,c
  8745  002EFC  5093               	movf	147,w,c	;volatile
  8746  002EFE  1813               	xorwf	??_SPI2_Open^0,w,c
  8747  002F00  0BFD               	andlw	-3
  8748  002F02  1813               	xorwf	??_SPI2_Open^0,w,c
  8749  002F04  6E93               	movwf	147,c	;volatile
  8750  002F06                     
  8751                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  8752  002F06  8A6C               	bsf	108,5,c	;volatile
  8753  002F08                     l338:
  8754  002F08  0012               	return		;funcret
  8755  002F0A                     __end_of_SPI2_Open:
  8756                           	callstack 0
  8757                           
  8758 ;; *************** function _SPI2_Close *****************
  8759 ;; Defined at:
  8760 ;;		line 87 in file "mcc_generated_files/spi2.c"
  8761 ;; Parameters:    Size  Location     Type
  8762 ;;		None
  8763 ;; Auto vars:     Size  Location     Type
  8764 ;;		None
  8765 ;; Return value:  Size  Location     Type
  8766 ;;                  1    wreg      void 
  8767 ;; Registers used:
  8768 ;;		None
  8769 ;; Tracked objects:
  8770 ;;		On entry : 0/0
  8771 ;;		On exit  : 0/0
  8772 ;;		Unchanged: 0/0
  8773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8778 ;;Total ram usage:        0 bytes
  8779 ;; Hardware stack levels used:    1
  8780 ;; Hardware stack levels required when called:    4
  8781 ;; This function calls:
  8782 ;;		Nothing
  8783 ;; This function is called by:
  8784 ;;		_main
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text21
  8789  0037F6                     __ptext21:
  8790                           	callstack 0
  8791  0037F6                     _SPI2_Close:
  8792                           	callstack 26
  8793  0037F6                     
  8794                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  8795  0037F6  9A6C               	bcf	108,5,c	;volatile
  8796  0037F8  0012               	return		;funcret
  8797  0037FA                     __end_of_SPI2_Close:
  8798                           	callstack 0
  8799                           
  8800 ;; *************** function _SDCARD_WriteBlock *****************
  8801 ;; Defined at:
  8802 ;;		line 48 in file "sdCard.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  addr            4   19[COMRAM] unsigned long 
  8805 ;;  sdCardBuffer    2   23[COMRAM] PTR unsigned char 
  8806 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  i               2   25[COMRAM] unsigned short 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8818 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8821 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8822 ;;Total ram usage:        8 bytes
  8823 ;; Hardware stack levels used:    1
  8824 ;; Hardware stack levels required when called:    5
  8825 ;; This function calls:
  8826 ;;		_SPI2_ExchangeByte
  8827 ;; This function is called by:
  8828 ;;		_main
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           	psect	text22
  8833  00303A                     __ptext22:
  8834                           	callstack 0
  8835  00303A                     _SDCARD_WriteBlock:
  8836                           	callstack 25
  8837  00303A  988A               	bcf	138,4,c	;volatile
  8838  00303C                     
  8839                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  8840  00303C  0EFF               	movlw	255
  8841  00303E  EC96  F01B         	call	_SPI2_ExchangeByte
  8842  003042                     
  8843                           ;sdCard.c: 55: 
  8844  003042  0E58               	movlw	88
  8845  003044  EC96  F01B         	call	_SPI2_ExchangeByte
  8846  003048                     
  8847                           ;sdCard.c: 56: 
  8848  003048  5017               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  8849  00304A  EC96  F01B         	call	_SPI2_ExchangeByte
  8850  00304E                     
  8851                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  8852  00304E  5016               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  8853  003050  EC96  F01B         	call	_SPI2_ExchangeByte
  8854  003054                     
  8855                           ;sdCard.c: 58: 
  8856  003054  5015               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  8857  003056  EC96  F01B         	call	_SPI2_ExchangeByte
  8858  00305A                     
  8859                           ;sdCard.c: 59: 
  8860  00305A  5014               	movf	SDCARD_WriteBlock@addr^0,w,c
  8861  00305C  EC96  F01B         	call	_SPI2_ExchangeByte
  8862  003060                     
  8863                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  8864  003060  0EFF               	movlw	255
  8865  003062  EC96  F01B         	call	_SPI2_ExchangeByte
  8866  003066                     l5691:
  8867  003066  0EFF               	movlw	255
  8868  003068  EC96  F01B         	call	_SPI2_ExchangeByte
  8869  00306C  0AFF               	xorlw	255
  8870  00306E  B4D8               	btfsc	status,2,c
  8871  003070  EF3C  F018         	goto	u5711
  8872  003074  EF3E  F018         	goto	u5710
  8873  003078                     u5711:
  8874  003078  EF33  F018         	goto	l5691
  8875  00307C                     u5710:
  8876  00307C                     
  8877                           ;sdCard.c: 66: 
  8878  00307C  0EFF               	movlw	255
  8879  00307E  EC96  F01B         	call	_SPI2_ExchangeByte
  8880                           
  8881                           ;sdCard.c: 67: 
  8882  003082  0EFF               	movlw	255
  8883  003084  EC96  F01B         	call	_SPI2_ExchangeByte
  8884                           
  8885                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  8886  003088  0EFF               	movlw	255
  8887  00308A  EC96  F01B         	call	_SPI2_ExchangeByte
  8888                           
  8889                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  8890  00308E  0EFE               	movlw	254
  8891  003090  EC96  F01B         	call	_SPI2_ExchangeByte
  8892  003094                     
  8893                           ;sdCard.c: 74: 
  8894  003094  0E00               	movlw	0
  8895  003096  6E1B               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  8896  003098  0E00               	movlw	0
  8897  00309A  6E1A               	movwf	SDCARD_WriteBlock@i^0,c
  8898  00309C                     l5701:
  8899                           
  8900                           ;sdCard.c: 75: 
  8901  00309C  501A               	movf	SDCARD_WriteBlock@i^0,w,c
  8902  00309E  2418               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  8903  0030A0  6ED9               	movwf	fsr2l,c
  8904  0030A2  501B               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  8905  0030A4  2019               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  8906  0030A6  6EDA               	movwf	fsr2h,c
  8907  0030A8  50DF               	movf	indf2,w,c
  8908  0030AA  EC96  F01B         	call	_SPI2_ExchangeByte
  8909  0030AE  4A1A               	infsnz	SDCARD_WriteBlock@i^0,f,c
  8910  0030B0  2A1B               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  8911  0030B2  0E02               	movlw	2
  8912  0030B4  5C1B               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  8913  0030B6  A0D8               	btfss	status,0,c
  8914  0030B8  EF60  F018         	goto	u5721
  8915  0030BC  EF62  F018         	goto	u5720
  8916  0030C0                     u5721:
  8917  0030C0  EF4E  F018         	goto	l5701
  8918  0030C4                     u5720:
  8919  0030C4  888A               	bsf	138,4,c	;volatile
  8920  0030C6  0012               	return		;funcret
  8921  0030C8                     __end_of_SDCARD_WriteBlock:
  8922                           	callstack 0
  8923                           
  8924 ;; *************** function _SDCARD_ReadBlock *****************
  8925 ;; Defined at:
  8926 ;;		line 13 in file "sdCard.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;  addr            4   19[COMRAM] unsigned long 
  8929 ;;  sdCardBuffer    2   23[COMRAM] PTR unsigned char 
  8930 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  i               2   25[COMRAM] unsigned short 
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  1    wreg      void 
  8935 ;; Registers used:
  8936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8942 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8945 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8946 ;;Total ram usage:        8 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; Hardware stack levels required when called:    5
  8949 ;; This function calls:
  8950 ;;		_SPI2_ExchangeByte
  8951 ;; This function is called by:
  8952 ;;		_main
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text23
  8957  002F0A                     __ptext23:
  8958                           	callstack 0
  8959  002F0A                     _SDCARD_ReadBlock:
  8960                           	callstack 25
  8961  002F0A  988A               	bcf	138,4,c	;volatile
  8962  002F0C                     
  8963                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  8964  002F0C  0EFF               	movlw	255
  8965  002F0E  EC96  F01B         	call	_SPI2_ExchangeByte
  8966  002F12                     
  8967                           ;sdCard.c: 19: 
  8968  002F12  0E51               	movlw	81
  8969  002F14  EC96  F01B         	call	_SPI2_ExchangeByte
  8970  002F18                     
  8971                           ;sdCard.c: 20: 
  8972  002F18  5017               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  8973  002F1A  EC96  F01B         	call	_SPI2_ExchangeByte
  8974  002F1E                     
  8975                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  8976  002F1E  5016               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  8977  002F20  EC96  F01B         	call	_SPI2_ExchangeByte
  8978  002F24                     
  8979                           ;sdCard.c: 22: 
  8980  002F24  5015               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  8981  002F26  EC96  F01B         	call	_SPI2_ExchangeByte
  8982  002F2A                     
  8983                           ;sdCard.c: 23: 
  8984  002F2A  5014               	movf	SDCARD_ReadBlock@addr^0,w,c
  8985  002F2C  EC96  F01B         	call	_SPI2_ExchangeByte
  8986  002F30                     
  8987                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  8988  002F30  0EFF               	movlw	255
  8989  002F32  EC96  F01B         	call	_SPI2_ExchangeByte
  8990  002F36                     l5753:
  8991  002F36  0EFF               	movlw	255
  8992  002F38  EC96  F01B         	call	_SPI2_ExchangeByte
  8993  002F3C  0AFF               	xorlw	255
  8994  002F3E  B4D8               	btfsc	status,2,c
  8995  002F40  EFA4  F017         	goto	u5751
  8996  002F44  EFA6  F017         	goto	u5750
  8997  002F48                     u5751:
  8998  002F48  EF9B  F017         	goto	l5753
  8999  002F4C                     u5750:
  9000  002F4C                     l5755:
  9001  002F4C  0EFF               	movlw	255
  9002  002F4E  EC96  F01B         	call	_SPI2_ExchangeByte
  9003  002F52  0AFF               	xorlw	255
  9004  002F54  B4D8               	btfsc	status,2,c
  9005  002F56  EFAF  F017         	goto	u5761
  9006  002F5A  EFB1  F017         	goto	u5760
  9007  002F5E                     u5761:
  9008  002F5E  EFA6  F017         	goto	l5755
  9009  002F62                     u5760:
  9010  002F62                     
  9011                           ;sdCard.c: 33: 
  9012  002F62  0E00               	movlw	0
  9013  002F64  6E1B               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  9014  002F66  0E00               	movlw	0
  9015  002F68  6E1A               	movwf	SDCARD_ReadBlock@i^0,c
  9016  002F6A                     l5763:
  9017                           
  9018                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  9019  002F6A  501A               	movf	SDCARD_ReadBlock@i^0,w,c
  9020  002F6C  2418               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  9021  002F6E  6ED9               	movwf	fsr2l,c
  9022  002F70  501B               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  9023  002F72  2019               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  9024  002F74  6EDA               	movwf	fsr2h,c
  9025  002F76  0EFF               	movlw	255
  9026  002F78  EC96  F01B         	call	_SPI2_ExchangeByte
  9027  002F7C  6EDF               	movwf	indf2,c
  9028  002F7E  4A1A               	infsnz	SDCARD_ReadBlock@i^0,f,c
  9029  002F80  2A1B               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  9030  002F82  0E02               	movlw	2
  9031  002F84  5C1B               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  9032  002F86  A0D8               	btfss	status,0,c
  9033  002F88  EFC8  F017         	goto	u5771
  9034  002F8C  EFCA  F017         	goto	u5770
  9035  002F90                     u5771:
  9036  002F90  EFB5  F017         	goto	l5763
  9037  002F94                     u5770:
  9038  002F94                     
  9039                           ;sdCard.c: 37: 
  9040  002F94  0EFF               	movlw	255
  9041  002F96  EC96  F01B         	call	_SPI2_ExchangeByte
  9042                           
  9043                           ;sdCard.c: 38: 
  9044  002F9A  0EFF               	movlw	255
  9045  002F9C  EC96  F01B         	call	_SPI2_ExchangeByte
  9046  002FA0  888A               	bsf	138,4,c	;volatile
  9047  002FA2  0012               	return		;funcret
  9048  002FA4                     __end_of_SDCARD_ReadBlock:
  9049                           	callstack 0
  9050                           
  9051 ;; *************** function _SDCARD_PollWriteComplete *****************
  9052 ;; Defined at:
  9053 ;;		line 86 in file "sdCard.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;		None
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;  status          1   19[COMRAM] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      unsigned char 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9071 ;;Total ram usage:        1 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; Hardware stack levels required when called:    5
  9074 ;; This function calls:
  9075 ;;		_SPI2_ExchangeByte
  9076 ;; This function is called by:
  9077 ;;		_main
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text24
  9082  003458                     __ptext24:
  9083                           	callstack 0
  9084  003458                     _SDCARD_PollWriteComplete:
  9085                           	callstack 25
  9086  003458  988A               	bcf	138,4,c	;volatile
  9087  00345A                     
  9088                           ;sdCard.c: 91: 
  9089  00345A  0E0D               	movlw	13
  9090  00345C  EC96  F01B         	call	_SPI2_ExchangeByte
  9091  003460  6E14               	movwf	SDCARD_PollWriteComplete@status^0,c
  9092  003462  888A               	bsf	138,4,c	;volatile
  9093  003464                     
  9094                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  9095  003464  2814               	incf	SDCARD_PollWriteComplete@status^0,w,c
  9096  003466  A4D8               	btfss	status,2,c
  9097  003468  EF38  F01A         	goto	u5731
  9098  00346C  EF3A  F01A         	goto	u5730
  9099  003470                     u5731:
  9100  003470  EF3D  F01A         	goto	l5719
  9101  003474                     u5730:
  9102  003474                     
  9103                           ;sdCard.c: 95:         return (status);
  9104  003474  0EFF               	movlw	255
  9105  003476  EF47  F01A         	goto	l676
  9106  00347A                     l5719:
  9107                           
  9108                           ;sdCard.c: 98: }
  9109  00347A  0EFF               	movlw	255
  9110  00347C  EC96  F01B         	call	_SPI2_ExchangeByte
  9111                           
  9112                           ;sdCard.c: 99: 
  9113  003480  0EFF               	movlw	255
  9114  003482  EC96  F01B         	call	_SPI2_ExchangeByte
  9115                           
  9116                           ;sdCard.c: 100: 
  9117  003486  0EFF               	movlw	255
  9118  003488  EC96  F01B         	call	_SPI2_ExchangeByte
  9119  00348C                     
  9120                           ;sdCard.c: 101: 
  9121  00348C  5014               	movf	SDCARD_PollWriteComplete@status^0,w,c
  9122  00348E                     l676:
  9123  00348E  0012               	return		;funcret
  9124  003490                     __end_of_SDCARD_PollWriteComplete:
  9125                           	callstack 0
  9126                           
  9127 ;; *************** function _SDCARD_Initialize *****************
  9128 ;; Defined at:
  9129 ;;		line 111 in file "sdCard.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  verbose         1    wreg     unsigned char 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  verbose         1   83[BANK0 ] unsigned char 
  9134 ;;  i               2   81[BANK0 ] int 
  9135 ;;  response        1   84[BANK0 ] unsigned char 
  9136 ;; Return value:  Size  Location     Type
  9137 ;;                  1    wreg      void 
  9138 ;; Registers used:
  9139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9140 ;; Tracked objects:
  9141 ;;		On entry : 0/0
  9142 ;;		On exit  : 0/0
  9143 ;;		Unchanged: 0/0
  9144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9146 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9148 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9149 ;;Total ram usage:        4 bytes
  9150 ;; Hardware stack levels used:    1
  9151 ;; Hardware stack levels required when called:   13
  9152 ;; This function calls:
  9153 ;;		_SPI2_ExchangeByte
  9154 ;;		_printf
  9155 ;; This function is called by:
  9156 ;;		_main
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text25
  9161  002900                     __ptext25:
  9162                           	callstack 0
  9163  002900                     _SDCARD_Initialize:
  9164                           	callstack 17
  9165                           
  9166                           ;incstack = 0
  9167                           ;SDCARD_Initialize@verbose stored from wreg
  9168  002900  0100               	movlb	0	; () banked
  9169  002902  6FB3               	movwf	SDCARD_Initialize@verbose& (0+255),b
  9170  002904                     
  9171                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  9172  002904  0E00               	movlw	0
  9173  002906  0100               	movlb	0	; () banked
  9174  002908  6FB2               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  9175  00290A  0E00               	movlw	0
  9176  00290C  6FB1               	movwf	SDCARD_Initialize@i& (0+255),b
  9177  00290E                     l5779:
  9178                           
  9179                           ; BSR set to: 0
  9180                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  9181  00290E  0EFF               	movlw	255
  9182  002910  EC96  F01B         	call	_SPI2_ExchangeByte
  9183  002914                     
  9184                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  9185  002914  0100               	movlb	0	; () banked
  9186  002916  4BB1               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  9187  002918  2BB2               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  9188  00291A                     
  9189                           ; BSR set to: 0
  9190  00291A  BFB2               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  9191  00291C  EF99  F014         	goto	u5781
  9192  002920  51B2               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  9193  002922  E109               	bnz	u5780
  9194  002924  0E0A               	movlw	10
  9195  002926  5DB1               	subwf	SDCARD_Initialize@i& (0+255),w,b
  9196  002928  A0D8               	btfss	status,0,c
  9197  00292A  EF99  F014         	goto	u5781
  9198  00292E  EF9B  F014         	goto	u5780
  9199  002932                     u5781:
  9200  002932  EF87  F014         	goto	l5779
  9201  002936                     u5780:
  9202  002936                     
  9203                           ; BSR set to: 0
  9204  002936  988A               	bcf	138,4,c	;volatile
  9205  002938                     
  9206                           ; BSR set to: 0
  9207                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  9208  002938  0EFF               	movlw	255
  9209  00293A  EC96  F01B         	call	_SPI2_ExchangeByte
  9210                           
  9211                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  9212  00293E  0E40               	movlw	64
  9213  002940  EC96  F01B         	call	_SPI2_ExchangeByte
  9214                           
  9215                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  9216  002944  0E00               	movlw	0
  9217  002946  EC96  F01B         	call	_SPI2_ExchangeByte
  9218                           
  9219                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  9220  00294A  0E00               	movlw	0
  9221  00294C  EC96  F01B         	call	_SPI2_ExchangeByte
  9222                           
  9223                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  9224  002950  0E00               	movlw	0
  9225  002952  EC96  F01B         	call	_SPI2_ExchangeByte
  9226                           
  9227                           ;sdCard.c: 130: 
  9228  002956  0E00               	movlw	0
  9229  002958  EC96  F01B         	call	_SPI2_ExchangeByte
  9230                           
  9231                           ;sdCard.c: 131: 
  9232  00295C  0E95               	movlw	149
  9233  00295E  EC96  F01B         	call	_SPI2_ExchangeByte
  9234                           
  9235                           ;sdCard.c: 132: 
  9236  002962  0EFF               	movlw	255
  9237  002964  EC96  F01B         	call	_SPI2_ExchangeByte
  9238                           
  9239                           ;sdCard.c: 133:     do {
  9240  002968  0EFF               	movlw	255
  9241  00296A  EC96  F01B         	call	_SPI2_ExchangeByte
  9242  00296E  0100               	movlb	0	; () banked
  9243  002970  6FB4               	movwf	SDCARD_Initialize@response& (0+255),b
  9244  002972                     
  9245                           ; BSR set to: 0
  9246  002972  888A               	bsf	138,4,c	;volatile
  9247  002974                     
  9248                           ; BSR set to: 0
  9249                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  9250  002974  05B3               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9251  002976  A4D8               	btfss	status,2,c
  9252  002978  EFC0  F014         	goto	u5791
  9253  00297C  EFC2  F014         	goto	u5790
  9254  002980                     u5791:
  9255  002980  EFCB  F014         	goto	l5793
  9256  002984                     u5790:
  9257  002984                     
  9258                           ; BSR set to: 0
  9259  002984  0E06               	movlw	low STR_113
  9260  002986  6FA3               	movwf	printf@fmt& (0+255),b
  9261  002988  0EFE               	movlw	high STR_113
  9262  00298A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  9263  00298C  C0B4  F0A5         	movff	SDCARD_Initialize@response,?_printf+2
  9264  002990  6BA6               	clrf	(?_printf+3)& (0+255),b
  9265  002992  EC1B  F01B         	call	_printf	;wreg free
  9266  002996                     l5793:
  9267  002996  988A               	bcf	138,4,c	;volatile
  9268  002998                     
  9269                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  9270  002998  0EFF               	movlw	255
  9271  00299A  EC96  F01B         	call	_SPI2_ExchangeByte
  9272  00299E                     
  9273                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  9274  00299E  0E41               	movlw	65
  9275  0029A0  EC96  F01B         	call	_SPI2_ExchangeByte
  9276  0029A4                     
  9277                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  9278  0029A4  0E00               	movlw	0
  9279  0029A6  EC96  F01B         	call	_SPI2_ExchangeByte
  9280  0029AA                     
  9281                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  9282  0029AA  0E00               	movlw	0
  9283  0029AC  EC96  F01B         	call	_SPI2_ExchangeByte
  9284  0029B0                     
  9285                           ;sdCard.c: 145:     } while (response != 0);
  9286  0029B0  0E00               	movlw	0
  9287  0029B2  EC96  F01B         	call	_SPI2_ExchangeByte
  9288  0029B6                     
  9289                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  9290  0029B6  0E00               	movlw	0
  9291  0029B8  EC96  F01B         	call	_SPI2_ExchangeByte
  9292  0029BC                     
  9293                           ;sdCard.c: 147: 
  9294  0029BC  0EFF               	movlw	255
  9295  0029BE  EC96  F01B         	call	_SPI2_ExchangeByte
  9296  0029C2                     
  9297                           ;sdCard.c: 148: 
  9298  0029C2  0EFF               	movlw	255
  9299  0029C4  EC96  F01B         	call	_SPI2_ExchangeByte
  9300  0029C8                     
  9301                           ;sdCard.c: 149: 
  9302  0029C8  0EFF               	movlw	255
  9303  0029CA  EC96  F01B         	call	_SPI2_ExchangeByte
  9304  0029CE  0100               	movlb	0	; () banked
  9305  0029D0  6FB4               	movwf	SDCARD_Initialize@response& (0+255),b
  9306  0029D2                     
  9307                           ; BSR set to: 0
  9308  0029D2  888A               	bsf	138,4,c	;volatile
  9309  0029D4                     
  9310                           ; BSR set to: 0
  9311                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  9312  0029D4  51B4               	movf	SDCARD_Initialize@response& (0+255),w,b
  9313  0029D6  A4D8               	btfss	status,2,c
  9314  0029D8  EFF0  F014         	goto	u5801
  9315  0029DC  EFF2  F014         	goto	u5800
  9316  0029E0                     u5801:
  9317  0029E0  EFCB  F014         	goto	l5793
  9318  0029E4                     u5800:
  9319  0029E4                     
  9320                           ; BSR set to: 0
  9321                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  9322  0029E4  05B3               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9323  0029E6  A4D8               	btfss	status,2,c
  9324  0029E8  EFF8  F014         	goto	u5811
  9325  0029EC  EFFA  F014         	goto	u5810
  9326  0029F0                     u5811:
  9327  0029F0  EF03  F015         	goto	l5821
  9328  0029F4                     u5810:
  9329  0029F4                     
  9330                           ; BSR set to: 0
  9331  0029F4  0E3C               	movlw	low STR_114
  9332  0029F6  6FA3               	movwf	printf@fmt& (0+255),b
  9333  0029F8  0EFE               	movlw	high STR_114
  9334  0029FA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  9335  0029FC  C0B4  F0A5         	movff	SDCARD_Initialize@response,?_printf+2
  9336  002A00  6BA6               	clrf	(?_printf+3)& (0+255),b
  9337  002A02  EC1B  F01B         	call	_printf	;wreg free
  9338  002A06                     l5821:
  9339  002A06  988A               	bcf	138,4,c	;volatile
  9340  002A08                     
  9341                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  9342  002A08  0EFF               	movlw	255
  9343  002A0A  EC96  F01B         	call	_SPI2_ExchangeByte
  9344  002A0E                     
  9345                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  9346  002A0E  0E50               	movlw	80
  9347  002A10  EC96  F01B         	call	_SPI2_ExchangeByte
  9348  002A14                     
  9349                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  9350  002A14  0E00               	movlw	0
  9351  002A16  EC96  F01B         	call	_SPI2_ExchangeByte
  9352  002A1A                     
  9353                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  9354  002A1A  0E00               	movlw	0
  9355  002A1C  EC96  F01B         	call	_SPI2_ExchangeByte
  9356  002A20                     
  9357                           ;sdCard.c: 162:     } while (response == 0xFF);
  9358  002A20  0E02               	movlw	2
  9359  002A22  EC96  F01B         	call	_SPI2_ExchangeByte
  9360  002A26                     
  9361                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  9362  002A26  0E00               	movlw	0
  9363  002A28  EC96  F01B         	call	_SPI2_ExchangeByte
  9364  002A2C                     
  9365                           ;sdCard.c: 164: 
  9366  002A2C  0EFF               	movlw	255
  9367  002A2E  EC96  F01B         	call	_SPI2_ExchangeByte
  9368  002A32                     
  9369                           ;sdCard.c: 165: }
  9370  002A32  0EFF               	movlw	255
  9371  002A34  EC96  F01B         	call	_SPI2_ExchangeByte
  9372  002A38                     
  9373                           ;sdCard.c: 166: 
  9374  002A38  0EFF               	movlw	255
  9375  002A3A  EC96  F01B         	call	_SPI2_ExchangeByte
  9376  002A3E  0100               	movlb	0	; () banked
  9377  002A40  6FB4               	movwf	SDCARD_Initialize@response& (0+255),b
  9378  002A42                     
  9379                           ; BSR set to: 0
  9380  002A42  888A               	bsf	138,4,c	;volatile
  9381  002A44                     
  9382                           ; BSR set to: 0
  9383                           ;sdCard.c: 168: 
  9384  002A44  29B4               	incf	SDCARD_Initialize@response& (0+255),w,b
  9385  002A46  B4D8               	btfsc	status,2,c
  9386  002A48  EF28  F015         	goto	u5821
  9387  002A4C  EF2A  F015         	goto	u5820
  9388  002A50                     u5821:
  9389  002A50  EF03  F015         	goto	l5821
  9390  002A54                     u5820:
  9391  002A54                     
  9392                           ; BSR set to: 0
  9393                           ;sdCard.c: 169: 
  9394  002A54  05B3               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9395  002A56  A4D8               	btfss	status,2,c
  9396  002A58  EF30  F015         	goto	u5831
  9397  002A5C  EF32  F015         	goto	u5830
  9398  002A60                     u5831:
  9399  002A60  EF3B  F015         	goto	l701
  9400  002A64                     u5830:
  9401  002A64                     
  9402                           ; BSR set to: 0
  9403  002A64  0ECE               	movlw	low STR_115
  9404  002A66  6FA3               	movwf	printf@fmt& (0+255),b
  9405  002A68  0EFD               	movlw	high STR_115
  9406  002A6A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  9407  002A6C  C0B4  F0A5         	movff	SDCARD_Initialize@response,?_printf+2
  9408  002A70  6BA6               	clrf	(?_printf+3)& (0+255),b
  9409  002A72  EC1B  F01B         	call	_printf	;wreg free
  9410  002A76                     l701:
  9411  002A76  0012               	return		;funcret
  9412  002A78                     __end_of_SDCARD_Initialize:
  9413                           	callstack 0
  9414                           
  9415 ;; *************** function _printf *****************
  9416 ;; Defined at:
  9417 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  9420 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9421 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9422 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9423 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9424 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9425 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9426 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9427 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9428 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9429 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9430 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9431 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9432 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9433 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9434 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9435 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9436 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9437 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
  9438 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
  9439 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
  9440 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
  9441 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
  9442 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
  9443 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
  9444 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9445 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9446 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9447 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9448 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9449 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9450 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9451 ;;		 -> STR_2(21), STR_1(9), 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;  ap              2   79[BANK0 ] PTR void [1]
  9454 ;;		 -> ?_printf(2), 
  9455 ;;  ret             2    0        int 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  2   67[BANK0 ] int 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9465 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9469 ;;Total ram usage:       14 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:   12
  9472 ;; This function calls:
  9473 ;;		_vfprintf
  9474 ;; This function is called by:
  9475 ;;		_main
  9476 ;;		_printAddress
  9477 ;;		_printAscii
  9478 ;;		_SDCARD_Initialize
  9479 ;;		_hexDumpBuffer
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text26
  9484  003636                     __ptext26:
  9485                           	callstack 0
  9486  003636                     _printf:
  9487                           	callstack 18
  9488  003636  0EA5               	movlw	low (?_printf+2)
  9489  003638  0100               	movlb	0	; () banked
  9490  00363A  6FAF               	movwf	printf@ap& (0+255),b
  9491  00363C  0E00               	movlw	high (?_printf+2)
  9492  00363E  6FB0               	movwf	(printf@ap+1)& (0+255),b
  9493  003640                     
  9494                           ; BSR set to: 0
  9495  003640  0E00               	movlw	0
  9496  003642  6F9B               	movwf	vfprintf@fp& (0+255),b
  9497  003644  0E00               	movlw	0
  9498  003646  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  9499  003648  C0A3  F09D         	movff	printf@fmt,vfprintf@fmt
  9500  00364C  C0A4  F09E         	movff	printf@fmt+1,vfprintf@fmt+1
  9501  003650  0EAF               	movlw	low printf@ap
  9502  003652  6F9F               	movwf	vfprintf@ap& (0+255),b
  9503  003654  0E00               	movlw	high printf@ap
  9504  003656  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  9505  003658  ECD4  F018         	call	_vfprintf	;wreg free
  9506  00365C  0012               	return		;funcret
  9507  00365E                     __end_of_printf:
  9508                           	callstack 0
  9509                           
  9510 ;; *************** function _vfprintf *****************
  9511 ;; Defined at:
  9512 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  9515 ;;		 -> NULL(0), 
  9516 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  9517 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9518 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9519 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9520 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9521 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9522 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9523 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9524 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9525 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9526 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9527 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9528 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9529 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9530 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9531 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9532 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9533 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9534 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
  9535 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
  9536 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
  9537 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
  9538 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
  9539 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
  9540 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
  9541 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9542 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9543 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9544 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9545 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9546 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9547 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9548 ;;		 -> STR_2(21), STR_1(9), 
  9549 ;;  ap              2   63[BANK0 ] PTR PTR void 
  9550 ;;		 -> printf@ap(2), 
  9551 ;; Auto vars:     Size  Location     Type
  9552 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  9553 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9554 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9555 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9556 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9557 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9558 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9559 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9560 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9561 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9562 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9563 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9564 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9565 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9566 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9567 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9568 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9569 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9570 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
  9571 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
  9572 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
  9573 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
  9574 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
  9575 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
  9576 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
  9577 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9578 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9579 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9580 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9581 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9582 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9583 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9584 ;;		 -> STR_2(21), STR_1(9), 
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  2   59[BANK0 ] int 
  9587 ;; Registers used:
  9588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9594 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9595 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;Total ram usage:        8 bytes
  9599 ;; Hardware stack levels used:    1
  9600 ;; Hardware stack levels required when called:   11
  9601 ;; This function calls:
  9602 ;;		_vfpfcnvrt
  9603 ;; This function is called by:
  9604 ;;		_printf
  9605 ;; This function uses a non-reentrant model
  9606 ;;
  9607                           
  9608                           	psect	text27
  9609  0031A8                     __ptext27:
  9610                           	callstack 0
  9611  0031A8                     _vfprintf:
  9612                           	callstack 18
  9613  0031A8                     
  9614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9615  0031A8  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  9616  0031AC  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9617  0031B0                     
  9618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  9619  0031B0  0E00               	movlw	0
  9620  0031B2  0100               	movlb	0	; () banked
  9621  0031B4  6FC4               	movwf	(_nout+1)& (0+255),b
  9622  0031B6  0E00               	movlw	0
  9623  0031B8  6FC3               	movwf	_nout& (0+255),b
  9624                           
  9625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  9626  0031BA  EFF2  F018         	goto	l5559
  9627  0031BE                     l5557:
  9628                           
  9629                           ; BSR set to: 0
  9630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9631  0031BE  C09B  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9632  0031C2  C09C  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9633  0031C6  0EA1               	movlw	low vfprintf@cfmt
  9634  0031C8  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  9635  0031CA  0E00               	movlw	high vfprintf@cfmt
  9636  0031CC  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9637  0031CE  C09F  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  9638  0031D2  C0A0  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9639  0031D6  ECE8  F008         	call	_vfpfcnvrt	;wreg free
  9640  0031DA  0100               	movlb	0	; () banked
  9641  0031DC  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  9642  0031DE  27C3               	addwf	_nout& (0+255),f,b
  9643  0031E0  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9644  0031E2  23C4               	addwfc	(_nout+1)& (0+255),f,b
  9645  0031E4                     l5559:
  9646                           
  9647                           ; BSR set to: 0
  9648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  9649  0031E4  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  9650  0031E8  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9651  0031EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9652  0031EC  6AF8               	clrf	tblptru,c
  9653  0031EE                     	endif
  9654  0031EE                     	if	0	;tblptru may be non-zero
  9655  0031EE                     	endif
  9656  0031EE  0008               	tblrd		*
  9657  0031F0  50F5               	movf	tablat,w,c
  9658  0031F2  0900               	iorlw	0
  9659  0031F4  A4D8               	btfss	status,2,c
  9660  0031F6  EFFF  F018         	goto	u5641
  9661  0031FA  EF01  F019         	goto	u5640
  9662  0031FE                     u5641:
  9663  0031FE  EFDF  F018         	goto	l5557
  9664  003202                     u5640:
  9665  003202                     
  9666                           ; BSR set to: 0
  9667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  9668  003202  C0C3  F09B         	movff	_nout,?_vfprintf
  9669  003206  C0C4  F09C         	movff	_nout+1,?_vfprintf+1
  9670  00320A                     
  9671                           ; BSR set to: 0
  9672  00320A  0012               	return		;funcret
  9673  00320C                     __end_of_vfprintf:
  9674                           	callstack 0
  9675                           
  9676 ;; *************** function _vfpfcnvrt *****************
  9677 ;; Defined at:
  9678 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9679 ;; Parameters:    Size  Location     Type
  9680 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  9681 ;;		 -> NULL(0), 
  9682 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  9683 ;;		 -> vfprintf@cfmt(2), 
  9684 ;;  ap              2   32[BANK0 ] PTR PTR void 
  9685 ;;		 -> printf@ap(2), 
  9686 ;; Auto vars:     Size  Location     Type
  9687 ;;  llu             8   50[BANK0 ] unsigned long long 
  9688 ;;  ll              8   38[BANK0 ] long long 
  9689 ;;  f               4    0        long long 
  9690 ;;  vp              3    0        PTR void 
  9691 ;;  ct              3    0        unsigned char [3]
  9692 ;;  cp              3    0        PTR unsigned char 
  9693 ;;  done            2   46[BANK0 ] int 
  9694 ;;  i               2    0        int 
  9695 ;;  c               1   58[BANK0 ] unsigned char 
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  2   28[BANK0 ] int 
  9698 ;; Registers used:
  9699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9705 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9706 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9707 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9708 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9709 ;;Total ram usage:       31 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:   10
  9712 ;; This function calls:
  9713 ;;		_atoi
  9714 ;;		_ctoa
  9715 ;;		_dtoa
  9716 ;;		_fputc
  9717 ;;		_isdigit
  9718 ;;		_utoa
  9719 ;;		_xtoa
  9720 ;; This function is called by:
  9721 ;;		_vfprintf
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           	psect	text28
  9726  0011D0                     __ptext28:
  9727                           	callstack 0
  9728  0011D0                     _vfpfcnvrt:
  9729                           	callstack 18
  9730  0011D0                     
  9731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  9732  0011D0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9733  0011D4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9734  0011D8  CFDE FFF6          	movff	postinc2,tblptrl
  9735  0011DC  CFDD FFF7          	movff	postdec2,tblptrh
  9736  0011E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9737  0011E0  6AF8               	clrf	tblptru,c
  9738  0011E2                     	endif
  9739  0011E2                     	if	0	;tblptru may be non-zero
  9740  0011E2                     	endif
  9741  0011E2  0008               	tblrd		*
  9742  0011E4  50F5               	movf	tablat,w,c
  9743  0011E6  0A25               	xorlw	37
  9744  0011E8  A4D8               	btfss	status,2,c
  9745  0011EA  EFF9  F008         	goto	u5491
  9746  0011EE  EFFB  F008         	goto	u5490
  9747  0011F2                     u5491:
  9748  0011F2  EF8D  F00B         	goto	l5529
  9749  0011F6                     u5490:
  9750  0011F6                     
  9751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  9752  0011F6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9753  0011FA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9754  0011FE  2ADE               	incf	postinc2,f,c
  9755  001200  0E00               	movlw	0
  9756  001202  22DD               	addwfc	postdec2,f,c
  9757  001204                     
  9758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  9759  001204  0E00               	movlw	0
  9760  001206  6E3C               	movwf	(_width+1)^0,c
  9761  001208  0E00               	movlw	0
  9762  00120A  6E3B               	movwf	_width^0,c
  9763  00120C  C03B  F03F         	movff	_width,_flags
  9764  001210  C03C  F040         	movff	_width+1,_flags+1
  9765  001214                     
  9766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  9767  001214  683D               	setf	_prec^0,c
  9768  001216  683E               	setf	(_prec+1)^0,c
  9769  001218                     
  9770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  9771  001218  0E00               	movlw	0
  9772  00121A  0100               	movlb	0	; () banked
  9773  00121C  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9774  00121E  0E00               	movlw	0
  9775  001220  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  9776                           
  9777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  9778  001222  EF5A  F009         	goto	l5451
  9779  001226                     l5425:
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  9783  001226  803F               	bsf	_flags^0,0,c
  9784  001228                     l5427:
  9785                           
  9786                           ; BSR set to: 0
  9787                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  9788  001228  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9789  00122C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9790  001230  2ADE               	incf	postinc2,f,c
  9791  001232  0E00               	movlw	0
  9792  001234  22DD               	addwfc	postdec2,f,c
  9793                           
  9794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  9795  001236  EF5A  F009         	goto	l5451
  9796  00123A                     l5429:
  9797                           
  9798                           ; BSR set to: 0
  9799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  9800  00123A  823F               	bsf	_flags^0,1,c
  9801  00123C  EF14  F009         	goto	l5427
  9802  001240                     l5433:
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  9806  001240  843F               	bsf	_flags^0,2,c
  9807  001242  EF14  F009         	goto	l5427
  9808  001246                     l5437:
  9809                           
  9810                           ; BSR set to: 0
  9811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  9812  001246  863F               	bsf	_flags^0,3,c
  9813  001248  EF14  F009         	goto	l5427
  9814  00124C                     l5441:
  9815                           
  9816                           ; BSR set to: 0
  9817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  9818  00124C  883F               	bsf	_flags^0,4,c
  9819  00124E  EF14  F009         	goto	l5427
  9820  001252                     l5445:
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  9824  001252  0E00               	movlw	0
  9825  001254  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9826  001256  0E01               	movlw	1
  9827  001258  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  9828                           
  9829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  9830  00125A  EF5A  F009         	goto	l5451
  9831  00125E                     l5449:
  9832                           
  9833                           ; BSR set to: 0
  9834  00125E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9835  001262  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9836  001266  CFDE FFF6          	movff	postinc2,tblptrl
  9837  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  9838  00126E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9839  00126E  6AF8               	clrf	tblptru,c
  9840  001270                     	endif
  9841  001270                     	if	0	;tblptru may be non-zero
  9842  001270                     	endif
  9843  001270  0008               	tblrd		*
  9844  001272  50F5               	movf	tablat,w,c
  9845  001274  6F82               	movwf	??_vfpfcnvrt& (0+255),b
  9846  001276  6B83               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9847                           
  9848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9849                           ; Switch size 1, requested type "simple"
  9850                           ; Number of cases is 1, Range of values is 0 to 0
  9851                           ; switch strategies available:
  9852                           ; Name         Instructions Cycles
  9853                           ; simple_byte            4     3 (average)
  9854                           ;	Chosen strategy is simple_byte
  9855  001278  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9856  00127A  0A00               	xorlw	0	; case 0
  9857  00127C  B4D8               	btfsc	status,2,c
  9858  00127E  EF43  F009         	goto	l6437
  9859  001282  EF29  F009         	goto	l5445
  9860  001286                     l6437:
  9861                           
  9862                           ; BSR set to: 0
  9863                           ; Switch size 1, requested type "simple"
  9864                           ; Number of cases is 5, Range of values is 32 to 48
  9865                           ; switch strategies available:
  9866                           ; Name         Instructions Cycles
  9867                           ; simple_byte           16     9 (average)
  9868                           ;	Chosen strategy is simple_byte
  9869  001286  5182               	movf	??_vfpfcnvrt& (0+255),w,b
  9870  001288  0A20               	xorlw	32	; case 32
  9871  00128A  B4D8               	btfsc	status,2,c
  9872  00128C  EF23  F009         	goto	l5437
  9873  001290  0A03               	xorlw	3	; case 35
  9874  001292  B4D8               	btfsc	status,2,c
  9875  001294  EF26  F009         	goto	l5441
  9876  001298  0A08               	xorlw	8	; case 43
  9877  00129A  B4D8               	btfsc	status,2,c
  9878  00129C  EF20  F009         	goto	l5433
  9879  0012A0  0A06               	xorlw	6	; case 45
  9880  0012A2  B4D8               	btfsc	status,2,c
  9881  0012A4  EF13  F009         	goto	l5425
  9882  0012A8  0A1D               	xorlw	29	; case 48
  9883  0012AA  B4D8               	btfsc	status,2,c
  9884  0012AC  EF1D  F009         	goto	l5429
  9885  0012B0  EF29  F009         	goto	l5445
  9886  0012B4                     l5451:
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  9890  0012B4  518E               	movf	vfpfcnvrt@done& (0+255),w,b
  9891  0012B6  118F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9892  0012B8  B4D8               	btfsc	status,2,c
  9893  0012BA  EF61  F009         	goto	u5501
  9894  0012BE  EF63  F009         	goto	u5500
  9895  0012C2                     u5501:
  9896  0012C2  EF2F  F009         	goto	l5449
  9897  0012C6                     u5500:
  9898  0012C6                     
  9899                           ; BSR set to: 0
  9900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  9901  0012C6  A03F               	btfss	_flags^0,0,c
  9902  0012C8  EF68  F009         	goto	u5511
  9903  0012CC  EF6A  F009         	goto	u5510
  9904  0012D0                     u5511:
  9905  0012D0  EF6B  F009         	goto	l5455
  9906  0012D4                     u5510:
  9907  0012D4                     
  9908                           ; BSR set to: 0
  9909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  9910  0012D4  923F               	bcf	_flags^0,1,c
  9911  0012D6                     l5455:
  9912                           
  9913                           ; BSR set to: 0
  9914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  9915  0012D6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9916  0012DA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9917  0012DE  CFDE FFF6          	movff	postinc2,tblptrl
  9918  0012E2  CFDD FFF7          	movff	postdec2,tblptrh
  9919  0012E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9920  0012E6  6AF8               	clrf	tblptru,c
  9921  0012E8                     	endif
  9922  0012E8                     	if	0	;tblptru may be non-zero
  9923  0012E8                     	endif
  9924  0012E8  0008               	tblrd		*
  9925  0012EA  50F5               	movf	tablat,w,c
  9926  0012EC  0A2A               	xorlw	42
  9927  0012EE  A4D8               	btfss	status,2,c
  9928  0012F0  EF7C  F009         	goto	u5521
  9929  0012F4  EF7E  F009         	goto	u5520
  9930  0012F8                     u5521:
  9931  0012F8  EFA7  F009         	goto	l5463
  9932  0012FC                     u5520:
  9933  0012FC                     
  9934                           ; BSR set to: 0
  9935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  9936  0012FC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9937  001300  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9938  001304  2ADE               	incf	postinc2,f,c
  9939  001306  0E00               	movlw	0
  9940  001308  22DD               	addwfc	postdec2,f,c
  9941                           
  9942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9943  00130A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9944  00130E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9945  001312  CFDF F082          	movff	indf2,??_vfpfcnvrt
  9946  001316  0E02               	movlw	2
  9947  001318  26DE               	addwf	postinc2,f,c
  9948  00131A  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
  9949  00131E  0E00               	movlw	0
  9950  001320  22DD               	addwfc	postdec2,f,c
  9951  001322  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9952  001326  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9953  00132A  CFDE F03B          	movff	postinc2,_width
  9954  00132E  CFDD F03C          	movff	postdec2,_width+1
  9955  001332                     
  9956                           ; BSR set to: 0
  9957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  9958  001332  BE3C               	btfsc	(_width+1)^0,7,c
  9959  001334  EFA0  F009         	goto	u5530
  9960  001338  EF9E  F009         	goto	u5531
  9961  00133C                     u5531:
  9962  00133C  EFEC  F009         	goto	l5473
  9963  001340                     u5530:
  9964  001340                     
  9965                           ; BSR set to: 0
  9966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  9967  001340  803F               	bsf	_flags^0,0,c
  9968                           
  9969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  9970  001342  6C3B               	negf	_width^0,c
  9971  001344  1E3C               	comf	(_width+1)^0,f,c
  9972  001346  B0D8               	btfsc	status,0,c
  9973  001348  2A3C               	incf	(_width+1)^0,f,c
  9974  00134A  EFEC  F009         	goto	l5473
  9975  00134E                     l5463:
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  9979  00134E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9980  001352  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9981  001356  CFDE F01A          	movff	postinc2,atoi@s
  9982  00135A  CFDD F01B          	movff	postdec2,atoi@s+1
  9983  00135E  ECEF  F012         	call	_atoi	;wreg free
  9984  001362  C01A  F03B         	movff	?_atoi,_width
  9985  001366  C01B  F03C         	movff	?_atoi+1,_width+1
  9986                           
  9987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9988  00136A  EFBE  F009         	goto	l5467
  9989  00136E                     l5465:
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  9993  00136E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9994  001372  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9995  001376  2ADE               	incf	postinc2,f,c
  9996  001378  0E00               	movlw	0
  9997  00137A  22DD               	addwfc	postdec2,f,c
  9998  00137C                     l5467:
  9999  00137C  0ED0               	movlw	208
 10000  00137E  0100               	movlb	0	; () banked
 10001  001380  6F82               	movwf	??_vfpfcnvrt& (0+255),b
 10002  001382  0EFF               	movlw	255
 10003  001384  6F83               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10004  001386  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10005  00138A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10006  00138E  CFDE FFF6          	movff	postinc2,tblptrl
 10007  001392  CFDD FFF7          	movff	postdec2,tblptrh
 10008  001396                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10009  001396  6AF8               	clrf	tblptru,c
 10010  001398                     	endif
 10011  001398                     	if	0	;tblptru may be non-zero
 10012  001398                     	endif
 10013  001398  0008               	tblrd		*
 10014  00139A  50F5               	movf	tablat,w,c
 10015  00139C  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10016  00139E  6B85               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10017  0013A0  5182               	movf	??_vfpfcnvrt& (0+255),w,b
 10018  0013A2  2784               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10019  0013A4  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10020  0013A6  2385               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10021  0013A8  5185               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10022  0013AA  E10A               	bnz	u5540
 10023  0013AC  0E0A               	movlw	10
 10024  0013AE  5D84               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10025  0013B0  A0D8               	btfss	status,0,c
 10026  0013B2  EFDD  F009         	goto	u5541
 10027  0013B6  EFE0  F009         	goto	u5540
 10028  0013BA                     u5541:
 10029  0013BA  0E01               	movlw	1
 10030  0013BC  EFE1  F009         	goto	u5550
 10031  0013C0                     u5540:
 10032  0013C0  0E00               	movlw	0
 10033  0013C2                     u5550:
 10034  0013C2  6F90               	movwf	_vfpfcnvrt$2012& (0+255),b
 10035  0013C4  6B91               	clrf	(_vfpfcnvrt$2012+1)& (0+255),b
 10036  0013C6                     
 10037                           ; BSR set to: 0
 10038  0013C6  5190               	movf	_vfpfcnvrt$2012& (0+255),w,b
 10039  0013C8  1191               	iorwf	(_vfpfcnvrt$2012+1)& (0+255),w,b
 10040  0013CA  A4D8               	btfss	status,2,c
 10041  0013CC  EFEA  F009         	goto	u5561
 10042  0013D0  EFEC  F009         	goto	u5560
 10043  0013D4                     u5561:
 10044  0013D4  EFB7  F009         	goto	l5465
 10045  0013D8                     u5560:
 10046  0013D8                     l5473:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
 10050  0013D8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10051  0013DC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10052  0013E0  CFDE FFF6          	movff	postinc2,tblptrl
 10053  0013E4  CFDD FFF7          	movff	postdec2,tblptrh
 10054  0013E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10055  0013E8  6AF8               	clrf	tblptru,c
 10056  0013EA                     	endif
 10057  0013EA                     	if	0	;tblptru may be non-zero
 10058  0013EA                     	endif
 10059  0013EA  0008               	tblrd		*
 10060  0013EC  50F5               	movf	tablat,w,c
 10061  0013EE  0A63               	xorlw	99
 10062  0013F0  A4D8               	btfss	status,2,c
 10063  0013F2  EFFD  F009         	goto	u5571
 10064  0013F6  EFFF  F009         	goto	u5570
 10065  0013FA                     u5571:
 10066  0013FA  EF26  F00A         	goto	l5481
 10067  0013FE                     u5570:
 10068  0013FE                     
 10069                           ; BSR set to: 0
 10070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
 10071  0013FE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10072  001402  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10073  001406  2ADE               	incf	postinc2,f,c
 10074  001408  0E00               	movlw	0
 10075  00140A  22DD               	addwfc	postdec2,f,c
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10078  00140C  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10079  001410  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10080  001414  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10081  001418  0E02               	movlw	2
 10082  00141A  26DE               	addwf	postinc2,f,c
 10083  00141C  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10084  001420  0E00               	movlw	0
 10085  001422  22DD               	addwfc	postdec2,f,c
 10086  001424  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10087  001428  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10088  00142C  50DF               	movf	indf2,w,c
 10089  00142E  6F9A               	movwf	vfpfcnvrt@c& (0+255),b
 10090  001430                     
 10091                           ; BSR set to: 0
 10092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
 10093  001430  C07C  F030         	movff	vfpfcnvrt@fp,ctoa@fp
 10094  001434  C07D  F031         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10095  001438  C09A  F032         	movff	vfpfcnvrt@c,ctoa@c
 10096  00143C  EC35  F019         	call	_ctoa	;wreg free
 10097  001440  C030  F07C         	movff	?_ctoa,?_vfpfcnvrt
 10098  001444  C031  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10099  001448  EFA9  F00B         	goto	l1546
 10100  00144C                     l5481:
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10104  00144C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10105  001450  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10106  001454  CFDE FFF6          	movff	postinc2,tblptrl
 10107  001458  CFDD FFF7          	movff	postdec2,tblptrh
 10108  00145C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10109  00145C  6AF8               	clrf	tblptru,c
 10110  00145E                     	endif
 10111  00145E                     	if	0	;tblptru may be non-zero
 10112  00145E                     	endif
 10113  00145E  0008               	tblrd		*
 10114  001460  50F5               	movf	tablat,w,c
 10115  001462  0A64               	xorlw	100
 10116  001464  B4D8               	btfsc	status,2,c
 10117  001466  EF37  F00A         	goto	u5581
 10118  00146A  EF39  F00A         	goto	u5580
 10119  00146E                     u5581:
 10120  00146E  EF4C  F00A         	goto	l5485
 10121  001472                     u5580:
 10122  001472                     
 10123                           ; BSR set to: 0
 10124  001472  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10125  001476  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10126  00147A  CFDE FFF6          	movff	postinc2,tblptrl
 10127  00147E  CFDD FFF7          	movff	postdec2,tblptrh
 10128  001482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10129  001482  6AF8               	clrf	tblptru,c
 10130  001484                     	endif
 10131  001484                     	if	0	;tblptru may be non-zero
 10132  001484                     	endif
 10133  001484  0008               	tblrd		*
 10134  001486  50F5               	movf	tablat,w,c
 10135  001488  0A69               	xorlw	105
 10136  00148A  A4D8               	btfss	status,2,c
 10137  00148C  EF4A  F00A         	goto	u5591
 10138  001490  EF4C  F00A         	goto	u5590
 10139  001494                     u5591:
 10140  001494  EF8C  F00A         	goto	l5491
 10141  001498                     u5590:
 10142  001498                     l5485:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
 10146  001498  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10147  00149C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10148  0014A0  2ADE               	incf	postinc2,f,c
 10149  0014A2  0E00               	movlw	0
 10150  0014A4  22DD               	addwfc	postdec2,f,c
 10151                           
 10152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10153  0014A6  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10154  0014AA  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10155  0014AE  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10156  0014B2  0E02               	movlw	2
 10157  0014B4  26DE               	addwf	postinc2,f,c
 10158  0014B6  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10159  0014BA  0E00               	movlw	0
 10160  0014BC  22DD               	addwfc	postdec2,f,c
 10161  0014BE  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10162  0014C2  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10163  0014C6  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
 10164  0014CA  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
 10165  0014CE  0E00               	movlw	0
 10166  0014D0  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10167  0014D2  0EFF               	movlw	-1
 10168  0014D4  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10169  0014D6  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10170  0014D8  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10171  0014DA  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10172  0014DC  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10173  0014DE  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10174  0014E0                     
 10175                           ; BSR set to: 0
 10176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
 10177  0014E0  C07C  F030         	movff	vfpfcnvrt@fp,dtoa@fp
 10178  0014E4  C07D  F031         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10179  0014E8  C086  F032         	movff	vfpfcnvrt@ll,dtoa@d
 10180  0014EC  C087  F033         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10181  0014F0  C088  F034         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10182  0014F4  C089  F035         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10183  0014F8  C08A  F036         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10184  0014FC  C08B  F037         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10185  001500  C08C  F038         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10186  001504  C08D  F039         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10187  001508  EC1E  F00D         	call	_dtoa	;wreg free
 10188  00150C  C030  F07C         	movff	?_dtoa,?_vfpfcnvrt
 10189  001510  C031  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10190  001514  EFA9  F00B         	goto	l1546
 10191  001518                     l5491:
 10192                           
 10193                           ; BSR set to: 0
 10194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
 10195  001518  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10196  00151C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10197  001520  CFDE FFF6          	movff	postinc2,tblptrl
 10198  001524  CFDD FFF7          	movff	postdec2,tblptrh
 10199  001528                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10200  001528  6AF8               	clrf	tblptru,c
 10201  00152A                     	endif
 10202  00152A                     	if	0	;tblptru may be non-zero
 10203  00152A                     	endif
 10204  00152A  0008               	tblrd		*
 10205  00152C  50F5               	movf	tablat,w,c
 10206  00152E  0A75               	xorlw	117
 10207  001530  A4D8               	btfss	status,2,c
 10208  001532  EF9D  F00A         	goto	u5601
 10209  001536  EF9F  F00A         	goto	u5600
 10210  00153A                     u5601:
 10211  00153A  EFE0  F00A         	goto	l5499
 10212  00153E                     u5600:
 10213  00153E                     
 10214                           ; BSR set to: 0
 10215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
 10216  00153E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10217  001542  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10218  001546  2ADE               	incf	postinc2,f,c
 10219  001548  0E00               	movlw	0
 10220  00154A  22DD               	addwfc	postdec2,f,c
 10221                           
 10222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10223  00154C  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10224  001550  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10225  001554  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10226  001558  0E02               	movlw	2
 10227  00155A  26DE               	addwf	postinc2,f,c
 10228  00155C  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10229  001560  0E00               	movlw	0
 10230  001562  22DD               	addwfc	postdec2,f,c
 10231  001564  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10232  001568  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10233  00156C  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 10234  001570  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 10235  001574  C084  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10236  001578  C085  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10237  00157C  6B94               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10238  00157E  6B95               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10239  001580  6B96               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10240  001582  6B97               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10241  001584  6B98               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10242  001586  6B99               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10243  001588                     
 10244                           ; BSR set to: 0
 10245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1187:            
      +                           return utoa(fp, llu);
 10246  001588  C07C  F030         	movff	vfpfcnvrt@fp,utoa@fp
 10247  00158C  C07D  F031         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10248  001590  C092  F032         	movff	vfpfcnvrt@llu,utoa@d
 10249  001594  C093  F033         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10250  001598  C094  F034         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10251  00159C  C095  F035         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10252  0015A0  C096  F036         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10253  0015A4  C097  F037         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10254  0015A8  C098  F038         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10255  0015AC  C099  F039         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10256  0015B0  ECFF  F00F         	call	_utoa	;wreg free
 10257  0015B4  C030  F07C         	movff	?_utoa,?_vfpfcnvrt
 10258  0015B8  C031  F07D         	movff	?_utoa+1,?_vfpfcnvrt+1
 10259  0015BC  EFA9  F00B         	goto	l1546
 10260  0015C0                     l5499:
 10261                           
 10262                           ; BSR set to: 0
 10263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10264  0015C0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10265  0015C4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10266  0015C8  CFDE FFF6          	movff	postinc2,tblptrl
 10267  0015CC  CFDD FFF7          	movff	postdec2,tblptrh
 10268  0015D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10269  0015D0  6AF8               	clrf	tblptru,c
 10270  0015D2                     	endif
 10271  0015D2                     	if	0	;tblptru may be non-zero
 10272  0015D2                     	endif
 10273  0015D2  0008               	tblrd		*
 10274  0015D4  50F5               	movf	tablat,w,c
 10275  0015D6  0A78               	xorlw	120
 10276  0015D8  B4D8               	btfsc	status,2,c
 10277  0015DA  EFF1  F00A         	goto	u5611
 10278  0015DE  EFF3  F00A         	goto	u5610
 10279  0015E2                     u5611:
 10280  0015E2  EF06  F00B         	goto	l5503
 10281  0015E6                     u5610:
 10282  0015E6                     
 10283                           ; BSR set to: 0
 10284  0015E6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10285  0015EA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10286  0015EE  CFDE FFF6          	movff	postinc2,tblptrl
 10287  0015F2  CFDD FFF7          	movff	postdec2,tblptrh
 10288  0015F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10289  0015F6  6AF8               	clrf	tblptru,c
 10290  0015F8                     	endif
 10291  0015F8                     	if	0	;tblptru may be non-zero
 10292  0015F8                     	endif
 10293  0015F8  0008               	tblrd		*
 10294  0015FA  50F5               	movf	tablat,w,c
 10295  0015FC  0A58               	xorlw	88
 10296  0015FE  A4D8               	btfss	status,2,c
 10297  001600  EF04  F00B         	goto	u5621
 10298  001604  EF06  F00B         	goto	u5620
 10299  001608                     u5621:
 10300  001608  EF55  F00B         	goto	l5513
 10301  00160C                     u5620:
 10302  00160C                     l5503:
 10303                           
 10304                           ; BSR set to: 0
 10305                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
 10306  00160C  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10307  001610  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10308  001614  CFDE FFF6          	movff	postinc2,tblptrl
 10309  001618  CFDD FFF7          	movff	postdec2,tblptrh
 10310  00161C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10311  00161C  6AF8               	clrf	tblptru,c
 10312  00161E                     	endif
 10313  00161E                     	if	0	;tblptru may be non-zero
 10314  00161E                     	endif
 10315  00161E  0008               	tblrd		*
 10316  001620  CFF5 F09A          	movff	tablat,vfpfcnvrt@c
 10317  001624                     
 10318                           ; BSR set to: 0
 10319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
 10320  001624  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10321  001628  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10322  00162C  2ADE               	incf	postinc2,f,c
 10323  00162E  0E00               	movlw	0
 10324  001630  22DD               	addwfc	postdec2,f,c
 10325  001632                     
 10326                           ; BSR set to: 0
 10327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10328  001632  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10329  001636  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10330  00163A  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10331  00163E  0E02               	movlw	2
 10332  001640  26DE               	addwf	postinc2,f,c
 10333  001642  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10334  001646  0E00               	movlw	0
 10335  001648  22DD               	addwfc	postdec2,f,c
 10336  00164A  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10337  00164E  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10338  001652  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 10339  001656  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 10340  00165A  C084  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10341  00165E  C085  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10342  001662  6B94               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10343  001664  6B95               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10344  001666  6B96               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10345  001668  6B97               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10346  00166A  6B98               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10347  00166C  6B99               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10348  00166E                     
 10349                           ; BSR set to: 0
 10350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
 10351  00166E  C07C  F030         	movff	vfpfcnvrt@fp,xtoa@fp
 10352  001672  C07D  F031         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10353  001676  C092  F032         	movff	vfpfcnvrt@llu,xtoa@d
 10354  00167A  C093  F033         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10355  00167E  C094  F034         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10356  001682  C095  F035         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10357  001686  C096  F036         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10358  00168A  C097  F037         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10359  00168E  C098  F038         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10360  001692  C099  F039         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10361  001696  C09A  F03A         	movff	vfpfcnvrt@c,xtoa@x
 10362  00169A  EC90  F00E         	call	_xtoa	;wreg free
 10363  00169E  C030  F07C         	movff	?_xtoa,?_vfpfcnvrt
 10364  0016A2  C031  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10365  0016A6  EFA9  F00B         	goto	l1546
 10366  0016AA                     l5513:
 10367                           
 10368                           ; BSR set to: 0
 10369                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
 10370  0016AA  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10371  0016AE  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10372  0016B2  CFDE FFF6          	movff	postinc2,tblptrl
 10373  0016B6  CFDD FFF7          	movff	postdec2,tblptrh
 10374  0016BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10375  0016BA  6AF8               	clrf	tblptru,c
 10376  0016BC                     	endif
 10377  0016BC                     	if	0	;tblptru may be non-zero
 10378  0016BC                     	endif
 10379  0016BC  0008               	tblrd		*
 10380  0016BE  50F5               	movf	tablat,w,c
 10381  0016C0  0A25               	xorlw	37
 10382  0016C2  A4D8               	btfss	status,2,c
 10383  0016C4  EF66  F00B         	goto	u5631
 10384  0016C8  EF68  F00B         	goto	u5630
 10385  0016CC                     u5631:
 10386  0016CC  EF80  F00B         	goto	l5523
 10387  0016D0                     u5630:
 10388  0016D0                     
 10389                           ; BSR set to: 0
 10390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
 10391  0016D0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10392  0016D4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10393  0016D8  2ADE               	incf	postinc2,f,c
 10394  0016DA  0E00               	movlw	0
 10395  0016DC  22DD               	addwfc	postdec2,f,c
 10396  0016DE                     
 10397                           ; BSR set to: 0
 10398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
 10399  0016DE  0E00               	movlw	0
 10400  0016E0  6E16               	movwf	(fputc@c+1)^0,c
 10401  0016E2  0E25               	movlw	37
 10402  0016E4  6E15               	movwf	fputc@c^0,c
 10403  0016E6  C07C  F017         	movff	vfpfcnvrt@fp,fputc@fp
 10404  0016EA  C07D  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10405  0016EE  ECD2  F017         	call	_fputc	;wreg free
 10406  0016F2                     l5519:
 10407                           
 10408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
 10409  0016F2  0E00               	movlw	0
 10410  0016F4  0100               	movlb	0	; () banked
 10411  0016F6  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10412  0016F8  0E01               	movlw	1
 10413  0016FA  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
 10414  0016FC  EFA9  F00B         	goto	l1546
 10415  001700                     l5523:
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
 10419  001700  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10420  001704  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10421  001708  2ADE               	incf	postinc2,f,c
 10422  00170A  0E00               	movlw	0
 10423  00170C  22DD               	addwfc	postdec2,f,c
 10424  00170E                     
 10425                           ; BSR set to: 0
 10426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
 10427  00170E  0E00               	movlw	0
 10428  001710  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10429  001712  0E00               	movlw	0
 10430  001714  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
 10431  001716  EFA9  F00B         	goto	l1546
 10432  00171A                     l5529:
 10433                           
 10434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
 10435  00171A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10436  00171E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10437  001722  CFDE FFF6          	movff	postinc2,tblptrl
 10438  001726  CFDD FFF7          	movff	postdec2,tblptrh
 10439  00172A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10440  00172A  6AF8               	clrf	tblptru,c
 10441  00172C                     	endif
 10442  00172C                     	if	0	;tblptru may be non-zero
 10443  00172C                     	endif
 10444  00172C  0008               	tblrd		*
 10445  00172E  50F5               	movf	tablat,w,c
 10446  001730  6E15               	movwf	fputc@c^0,c
 10447  001732  6A16               	clrf	(fputc@c+1)^0,c
 10448  001734  C07C  F017         	movff	vfpfcnvrt@fp,fputc@fp
 10449  001738  C07D  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10450  00173C  ECD2  F017         	call	_fputc	;wreg free
 10451  001740                     
 10452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
 10453  001740  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10454  001744  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10455  001748  2ADE               	incf	postinc2,f,c
 10456  00174A  0E00               	movlw	0
 10457  00174C  22DD               	addwfc	postdec2,f,c
 10458  00174E  EF79  F00B         	goto	l5519
 10459  001752                     l1546:
 10460  001752  0012               	return		;funcret
 10461  001754                     __end_of_vfpfcnvrt:
 10462                           	callstack 0
 10463                           
 10464 ;; *************** function _xtoa *****************
 10465 ;; Defined at:
 10466 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 10467 ;; Parameters:    Size  Location     Type
 10468 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 10469 ;;		 -> NULL(0), 
 10470 ;;  d               8   49[COMRAM] unsigned long long 
 10471 ;;  x               1   57[COMRAM] unsigned char 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  n               8   16[BANK0 ] unsigned long long 
 10474 ;;  c               2   26[BANK0 ] int 
 10475 ;;  i               2   24[BANK0 ] int 
 10476 ;;  w               2   14[BANK0 ] int 
 10477 ;;  p               2   12[BANK0 ] int 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  2   47[COMRAM] int 
 10480 ;; Registers used:
 10481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10487 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10488 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10490 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10491 ;;Total ram usage:       39 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    9
 10494 ;; This function calls:
 10495 ;;		_isalpha
 10496 ;;		_isupper
 10497 ;;		_pad
 10498 ;;		_toupper
 10499 ;; This function is called by:
 10500 ;;		_vfpfcnvrt
 10501 ;; This function uses a non-reentrant model
 10502 ;;
 10503                           
 10504                           	psect	text29
 10505  001D20                     __ptext29:
 10506                           	callstack 0
 10507  001D20                     _xtoa:
 10508                           	callstack 18
 10509  001D20                     
 10510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
 10511  001D20  BE3E               	btfsc	(_prec+1)^0,7,c
 10512  001D22  EF95  F00E         	goto	u5251
 10513  001D26  EF97  F00E         	goto	u5250
 10514  001D2A                     u5251:
 10515  001D2A  EF98  F00E         	goto	l5311
 10516  001D2E                     u5250:
 10517  001D2E                     
 10518                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
 10519  001D2E  923F               	bcf	_flags^0,1,c
 10520  001D30                     l5311:
 10521                           
 10522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
 10523  001D30  BE3E               	btfsc	(_prec+1)^0,7,c
 10524  001D32  EFA5  F00E         	goto	u5260
 10525  001D36  503E               	movf	(_prec+1)^0,w,c
 10526  001D38  E106               	bnz	u5261
 10527  001D3A  043D               	decf	_prec^0,w,c
 10528  001D3C  B0D8               	btfsc	status,0,c
 10529  001D3E  EFA3  F00E         	goto	u5261
 10530  001D42  EFA5  F00E         	goto	u5260
 10531  001D46                     u5261:
 10532  001D46  EFAC  F00E         	goto	l1494
 10533  001D4A                     u5260:
 10534  001D4A  0E00               	movlw	0
 10535  001D4C  0100               	movlb	0	; () banked
 10536  001D4E  6F6D               	movwf	(xtoa@p+1)& (0+255),b
 10537  001D50  0E01               	movlw	1
 10538  001D52  6F6C               	movwf	xtoa@p& (0+255),b
 10539  001D54  EFB0  F00E         	goto	l1496
 10540  001D58                     l1494:
 10541  001D58  C03D  F06C         	movff	_prec,xtoa@p
 10542  001D5C  C03E  F06D         	movff	_prec+1,xtoa@p+1
 10543  001D60                     l1496:
 10544                           
 10545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
 10546  001D60  C03B  F06E         	movff	_width,xtoa@w
 10547  001D64  C03C  F06F         	movff	_width+1,xtoa@w+1
 10548                           
 10549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
 10550  001D68  A83F               	btfss	_flags^0,4,c
 10551  001D6A  EFB9  F00E         	goto	u5271
 10552  001D6E  EFBB  F00E         	goto	u5270
 10553  001D72                     u5271:
 10554  001D72  EFC0  F00E         	goto	l5317
 10555  001D76                     u5270:
 10556  001D76                     
 10557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
 10558  001D76  0100               	movlb	0	; () banked
 10559  001D78  0EFE               	movlw	254
 10560  001D7A  276E               	addwf	xtoa@w& (0+255),f,b
 10561  001D7C  0EFF               	movlw	255
 10562  001D7E  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
 10563  001D80                     l5317:
 10564                           
 10565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
 10566  001D80  C032  F070         	movff	xtoa@d,xtoa@n
 10567  001D84  C033  F071         	movff	xtoa@d+1,xtoa@n+1
 10568  001D88  C034  F072         	movff	xtoa@d+2,xtoa@n+2
 10569  001D8C  C035  F073         	movff	xtoa@d+3,xtoa@n+3
 10570  001D90  C036  F074         	movff	xtoa@d+4,xtoa@n+4
 10571  001D94  C037  F075         	movff	xtoa@d+5,xtoa@n+5
 10572  001D98  C038  F076         	movff	xtoa@d+6,xtoa@n+6
 10573  001D9C  C039  F077         	movff	xtoa@d+7,xtoa@n+7
 10574  001DA0                     
 10575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
 10576  001DA0  0E00               	movlw	0
 10577  001DA2  0100               	movlb	0	; () banked
 10578  001DA4  6F79               	movwf	(xtoa@i+1)& (0+255),b
 10579  001DA6  0E1F               	movlw	31
 10580  001DA8  6F78               	movwf	xtoa@i& (0+255),b
 10581  001DAA                     
 10582                           ; BSR set to: 0
 10583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
 10584  001DAA  0E00               	movlw	0
 10585  001DAC  0101               	movlb	1	; () banked
 10586  001DAE  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10587                           
 10588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10589  001DB0  EF8E  F00F         	goto	l5353
 10590  001DB4                     l5323:
 10591                           
 10592                           ; BSR set to: 0
 10593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
 10594  001DB4  0778               	decf	xtoa@i& (0+255),f,b
 10595  001DB6  A0D8               	btfss	status,0,c
 10596  001DB8  0779               	decf	(xtoa@i+1)& (0+255),f,b
 10597  001DBA                     
 10598                           ; BSR set to: 0
 10599                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
 10600  001DBA  0E0F               	movlw	15
 10601  001DBC  1570               	andwf	xtoa@n& (0+255),w,b
 10602  001DBE  6F7A               	movwf	xtoa@c& (0+255),b
 10603  001DC0  6B7B               	clrf	(xtoa@c+1)& (0+255),b
 10604  001DC2                     
 10605                           ; BSR set to: 0
 10606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
 10607  001DC2  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
 10608  001DC4  EFED  F00E         	goto	u5281
 10609  001DC8  517B               	movf	(xtoa@c+1)& (0+255),w,b
 10610  001DCA  E109               	bnz	u5280
 10611  001DCC  0E0A               	movlw	10
 10612  001DCE  5D7A               	subwf	xtoa@c& (0+255),w,b
 10613  001DD0  A0D8               	btfss	status,0,c
 10614  001DD2  EFED  F00E         	goto	u5281
 10615  001DD6  EFEF  F00E         	goto	u5280
 10616  001DDA                     u5281:
 10617  001DDA  EFF7  F00E         	goto	l5331
 10618  001DDE                     u5280:
 10619  001DDE                     
 10620                           ; BSR set to: 0
 10621  001DDE  0E57               	movlw	87
 10622  001DE0  257A               	addwf	xtoa@c& (0+255),w,b
 10623  001DE2  6F7A               	movwf	xtoa@c& (0+255),b
 10624  001DE4  0E00               	movlw	0
 10625  001DE6  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
 10626  001DE8  6F7B               	movwf	(xtoa@c+1)& (0+255),b
 10627  001DEA  EFFD  F00E         	goto	l1503
 10628  001DEE                     l5331:
 10629                           
 10630                           ; BSR set to: 0
 10631  001DEE  0E30               	movlw	48
 10632  001DF0  257A               	addwf	xtoa@c& (0+255),w,b
 10633  001DF2  6F7A               	movwf	xtoa@c& (0+255),b
 10634  001DF4  0E00               	movlw	0
 10635  001DF6  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
 10636  001DF8  6F7B               	movwf	(xtoa@c+1)& (0+255),b
 10637  001DFA                     l1503:
 10638                           
 10639                           ; BSR set to: 0
 10640  001DFA  0EBF               	movlw	191
 10641  001DFC  6F60               	movwf	??_xtoa& (0+255),b
 10642  001DFE  0EFF               	movlw	255
 10643  001E00  6F61               	movwf	(??_xtoa+1)& (0+255),b
 10644  001E02  503A               	movf	xtoa@x^0,w,c
 10645  001E04  6F62               	movwf	(??_xtoa+2)& (0+255),b
 10646  001E06  6B63               	clrf	(??_xtoa+3)& (0+255),b
 10647  001E08  5160               	movf	??_xtoa& (0+255),w,b
 10648  001E0A  2762               	addwf	(??_xtoa+2)& (0+255),f,b
 10649  001E0C  5161               	movf	(??_xtoa+1)& (0+255),w,b
 10650  001E0E  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
 10651  001E10  5163               	movf	(??_xtoa+3)& (0+255),w,b
 10652  001E12  E10A               	bnz	u5290
 10653  001E14  0E1A               	movlw	26
 10654  001E16  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
 10655  001E18  A0D8               	btfss	status,0,c
 10656  001E1A  EF11  F00F         	goto	u5291
 10657  001E1E  EF14  F00F         	goto	u5290
 10658  001E22                     u5291:
 10659  001E22  0E01               	movlw	1
 10660  001E24  EF15  F00F         	goto	u5300
 10661  001E28                     u5290:
 10662  001E28  0E00               	movlw	0
 10663  001E2A                     u5300:
 10664  001E2A  6F68               	movwf	_xtoa$1997& (0+255),b
 10665  001E2C  6B69               	clrf	(_xtoa$1997+1)& (0+255),b
 10666  001E2E                     
 10667                           ; BSR set to: 0
 10668  001E2E  5168               	movf	_xtoa$1997& (0+255),w,b
 10669  001E30  1169               	iorwf	(_xtoa$1997+1)& (0+255),w,b
 10670  001E32  B4D8               	btfsc	status,2,c
 10671  001E34  EF1E  F00F         	goto	u5311
 10672  001E38  EF20  F00F         	goto	u5310
 10673  001E3C                     u5311:
 10674  001E3C  EF50  F00F         	goto	l5345
 10675  001E40                     u5310:
 10676  001E40                     
 10677                           ; BSR set to: 0
 10678  001E40  0E9F               	movlw	159
 10679  001E42  6F60               	movwf	??_xtoa& (0+255),b
 10680  001E44  0EFF               	movlw	255
 10681  001E46  6F61               	movwf	(??_xtoa+1)& (0+255),b
 10682  001E48  0E20               	movlw	32
 10683  001E4A  117A               	iorwf	xtoa@c& (0+255),w,b
 10684  001E4C  6F62               	movwf	(??_xtoa+2)& (0+255),b
 10685  001E4E  0E00               	movlw	0
 10686  001E50  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
 10687  001E52  6F63               	movwf	(??_xtoa+3)& (0+255),b
 10688  001E54  5160               	movf	??_xtoa& (0+255),w,b
 10689  001E56  2762               	addwf	(??_xtoa+2)& (0+255),f,b
 10690  001E58  5161               	movf	(??_xtoa+1)& (0+255),w,b
 10691  001E5A  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
 10692  001E5C  5163               	movf	(??_xtoa+3)& (0+255),w,b
 10693  001E5E  E10A               	bnz	u5320
 10694  001E60  0E1A               	movlw	26
 10695  001E62  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
 10696  001E64  A0D8               	btfss	status,0,c
 10697  001E66  EF37  F00F         	goto	u5321
 10698  001E6A  EF3A  F00F         	goto	u5320
 10699  001E6E                     u5321:
 10700  001E6E  0E01               	movlw	1
 10701  001E70  EF3B  F00F         	goto	u5330
 10702  001E74                     u5320:
 10703  001E74  0E00               	movlw	0
 10704  001E76                     u5330:
 10705  001E76  6F6A               	movwf	_xtoa$1998& (0+255),b
 10706  001E78  6B6B               	clrf	(_xtoa$1998+1)& (0+255),b
 10707  001E7A                     
 10708                           ; BSR set to: 0
 10709  001E7A  516A               	movf	_xtoa$1998& (0+255),w,b
 10710  001E7C  116B               	iorwf	(_xtoa$1998+1)& (0+255),w,b
 10711  001E7E  B4D8               	btfsc	status,2,c
 10712  001E80  EF44  F00F         	goto	u5341
 10713  001E84  EF46  F00F         	goto	u5340
 10714  001E88                     u5341:
 10715  001E88  EF50  F00F         	goto	l5345
 10716  001E8C                     u5340:
 10717  001E8C                     
 10718                           ; BSR set to: 0
 10719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
 10720  001E8C  C07A  F019         	movff	xtoa@c,toupper@c
 10721  001E90  C07B  F01A         	movff	xtoa@c+1,toupper@c+1
 10722  001E94  EC06  F019         	call	_toupper	;wreg free
 10723  001E98  C019  F07A         	movff	?_toupper,xtoa@c
 10724  001E9C  C01A  F07B         	movff	?_toupper+1,xtoa@c+1
 10725  001EA0                     l5345:
 10726                           
 10727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
 10728  001EA0  0E80               	movlw	low _dbuf
 10729  001EA2  0100               	movlb	0	; () banked
 10730  001EA4  2578               	addwf	xtoa@i& (0+255),w,b
 10731  001EA6  6ED9               	movwf	fsr2l,c
 10732  001EA8  0E01               	movlw	high _dbuf
 10733  001EAA  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 10734  001EAC  6EDA               	movwf	fsr2h,c
 10735  001EAE  C07A  FFDF         	movff	xtoa@c,indf2
 10736  001EB2                     
 10737                           ; BSR set to: 0
 10738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
 10739  001EB2  076C               	decf	xtoa@p& (0+255),f,b
 10740  001EB4  A0D8               	btfss	status,0,c
 10741  001EB6  076D               	decf	(xtoa@p+1)& (0+255),f,b
 10742  001EB8                     
 10743                           ; BSR set to: 0
 10744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
 10745  001EB8  076E               	decf	xtoa@w& (0+255),f,b
 10746  001EBA  A0D8               	btfss	status,0,c
 10747  001EBC  076F               	decf	(xtoa@w+1)& (0+255),f,b
 10748  001EBE                     
 10749                           ; BSR set to: 0
 10750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
 10751  001EBE  C070  F060         	movff	xtoa@n,??_xtoa
 10752  001EC2  C071  F061         	movff	xtoa@n+1,??_xtoa+1
 10753  001EC6  C072  F062         	movff	xtoa@n+2,??_xtoa+2
 10754  001ECA  C073  F063         	movff	xtoa@n+3,??_xtoa+3
 10755  001ECE  C074  F064         	movff	xtoa@n+4,??_xtoa+4
 10756  001ED2  C075  F065         	movff	xtoa@n+5,??_xtoa+5
 10757  001ED6  C076  F066         	movff	xtoa@n+6,??_xtoa+6
 10758  001EDA  C077  F067         	movff	xtoa@n+7,??_xtoa+7
 10759  001EDE  0E05               	movlw	5
 10760  001EE0  EF7B  F00F         	goto	u5350
 10761  001EE4                     u5355:
 10762  001EE4  90D8               	bcf	status,0,c
 10763  001EE6  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
 10764  001EE8  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
 10765  001EEA  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
 10766  001EEC  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
 10767  001EEE  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
 10768  001EF0  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
 10769  001EF2  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
 10770  001EF4  3360               	rrcf	??_xtoa& (0+255),f,b
 10771  001EF6                     u5350:
 10772  001EF6  2EE8               	decfsz	wreg,f,c
 10773  001EF8  EF72  F00F         	goto	u5355
 10774  001EFC  C060  F070         	movff	??_xtoa,xtoa@n
 10775  001F00  C061  F071         	movff	??_xtoa+1,xtoa@n+1
 10776  001F04  C062  F072         	movff	??_xtoa+2,xtoa@n+2
 10777  001F08  C063  F073         	movff	??_xtoa+3,xtoa@n+3
 10778  001F0C  C064  F074         	movff	??_xtoa+4,xtoa@n+4
 10779  001F10  C065  F075         	movff	??_xtoa+5,xtoa@n+5
 10780  001F14  C066  F076         	movff	??_xtoa+6,xtoa@n+6
 10781  001F18  C067  F077         	movff	??_xtoa+7,xtoa@n+7
 10782  001F1C                     l5353:
 10783                           
 10784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10785  001F1C  0100               	movlb	0	; () banked
 10786  001F1E  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
 10787  001F20  EF9B  F00F         	goto	u5361
 10788  001F24  5179               	movf	(xtoa@i+1)& (0+255),w,b
 10789  001F26  E109               	bnz	u5360
 10790  001F28  0E02               	movlw	2
 10791  001F2A  5D78               	subwf	xtoa@i& (0+255),w,b
 10792  001F2C  A0D8               	btfss	status,0,c
 10793  001F2E  EF9B  F00F         	goto	u5361
 10794  001F32  EF9D  F00F         	goto	u5360
 10795  001F36                     u5361:
 10796  001F36  EFCD  F00F         	goto	l1517
 10797  001F3A                     u5360:
 10798  001F3A                     
 10799                           ; BSR set to: 0
 10800  001F3A  5170               	movf	xtoa@n& (0+255),w,b
 10801  001F3C  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
 10802  001F3E  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
 10803  001F40  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
 10804  001F42  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
 10805  001F44  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
 10806  001F46  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
 10807  001F48  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
 10808  001F4A  A4D8               	btfss	status,2,c
 10809  001F4C  EFAA  F00F         	goto	u5371
 10810  001F50  EFAC  F00F         	goto	u5370
 10811  001F54                     u5371:
 10812  001F54  EFDA  F00E         	goto	l5323
 10813  001F58                     u5370:
 10814  001F58                     
 10815                           ; BSR set to: 0
 10816  001F58  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
 10817  001F5A  EFB9  F00F         	goto	u5380
 10818  001F5E  516D               	movf	(xtoa@p+1)& (0+255),w,b
 10819  001F60  E106               	bnz	u5381
 10820  001F62  056C               	decf	xtoa@p& (0+255),w,b
 10821  001F64  B0D8               	btfsc	status,0,c
 10822  001F66  EFB7  F00F         	goto	u5381
 10823  001F6A  EFB9  F00F         	goto	u5380
 10824  001F6E                     u5381:
 10825  001F6E  EFDA  F00E         	goto	l5323
 10826  001F72                     u5380:
 10827  001F72                     
 10828                           ; BSR set to: 0
 10829  001F72  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
 10830  001F74  EFC4  F00F         	goto	u5391
 10831  001F78  516F               	movf	(xtoa@w+1)& (0+255),w,b
 10832  001F7A  E108               	bnz	u5390
 10833  001F7C  056E               	decf	xtoa@w& (0+255),w,b
 10834  001F7E  A0D8               	btfss	status,0,c
 10835  001F80  EFC4  F00F         	goto	u5391
 10836  001F84  EFC6  F00F         	goto	u5390
 10837  001F88                     u5391:
 10838  001F88  EFCD  F00F         	goto	l1517
 10839  001F8C                     u5390:
 10840  001F8C                     
 10841                           ; BSR set to: 0
 10842  001F8C  B23F               	btfsc	_flags^0,1,c
 10843  001F8E  EFCB  F00F         	goto	u5401
 10844  001F92  EFCD  F00F         	goto	u5400
 10845  001F96                     u5401:
 10846  001F96  EFDA  F00E         	goto	l5323
 10847  001F9A                     u5400:
 10848  001F9A                     l1517:
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 10852  001F9A  A83F               	btfss	_flags^0,4,c
 10853  001F9C  EFD2  F00F         	goto	u5411
 10854  001FA0  EFD4  F00F         	goto	u5410
 10855  001FA4                     u5411:
 10856  001FA4  EFEA  F00F         	goto	l5369
 10857  001FA8                     u5410:
 10858  001FA8                     
 10859                           ; BSR set to: 0
 10860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
 10861  001FA8  0778               	decf	xtoa@i& (0+255),f,b
 10862  001FAA  A0D8               	btfss	status,0,c
 10863  001FAC  0779               	decf	(xtoa@i+1)& (0+255),f,b
 10864  001FAE                     
 10865                           ; BSR set to: 0
 10866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
 10867  001FAE  0E80               	movlw	low _dbuf
 10868  001FB0  2578               	addwf	xtoa@i& (0+255),w,b
 10869  001FB2  6ED9               	movwf	fsr2l,c
 10870  001FB4  0E01               	movlw	high _dbuf
 10871  001FB6  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 10872  001FB8  6EDA               	movwf	fsr2h,c
 10873  001FBA  C03A  FFDF         	movff	xtoa@x,indf2
 10874  001FBE                     
 10875                           ; BSR set to: 0
 10876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
 10877  001FBE  0778               	decf	xtoa@i& (0+255),f,b
 10878  001FC0  A0D8               	btfss	status,0,c
 10879  001FC2  0779               	decf	(xtoa@i+1)& (0+255),f,b
 10880                           
 10881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
 10882  001FC4  0E80               	movlw	low _dbuf
 10883  001FC6  2578               	addwf	xtoa@i& (0+255),w,b
 10884  001FC8  6ED9               	movwf	fsr2l,c
 10885  001FCA  0E01               	movlw	high _dbuf
 10886  001FCC  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 10887  001FCE  6EDA               	movwf	fsr2h,c
 10888  001FD0  0E30               	movlw	48
 10889  001FD2  6EDF               	movwf	indf2,c
 10890  001FD4                     l5369:
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
 10894  001FD4  C030  F025         	movff	xtoa@fp,pad@fp
 10895  001FD8  C031  F026         	movff	xtoa@fp+1,pad@fp+1
 10896  001FDC  0E80               	movlw	low _dbuf
 10897  001FDE  2578               	addwf	xtoa@i& (0+255),w,b
 10898  001FE0  6E27               	movwf	pad@buf^0,c
 10899  001FE2  0E01               	movlw	high _dbuf
 10900  001FE4  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 10901  001FE6  6E28               	movwf	(pad@buf+1)^0,c
 10902  001FE8  C06E  F029         	movff	xtoa@w,pad@p
 10903  001FEC  C06F  F02A         	movff	xtoa@w+1,pad@p+1
 10904  001FF0  ECCE  F016         	call	_pad	;wreg free
 10905  001FF4  C025  F030         	movff	?_pad,?_xtoa
 10906  001FF8  C026  F031         	movff	?_pad+1,?_xtoa+1
 10907  001FFC  0012               	return		;funcret
 10908  001FFE                     __end_of_xtoa:
 10909                           	callstack 0
 10910                           
 10911 ;; *************** function _toupper *****************
 10912 ;; Defined at:
 10913 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
 10914 ;; Parameters:    Size  Location     Type
 10915 ;;  c               2   24[COMRAM] int 
 10916 ;; Auto vars:     Size  Location     Type
 10917 ;;		None
 10918 ;; Return value:  Size  Location     Type
 10919 ;;                  2   24[COMRAM] int 
 10920 ;; Registers used:
 10921 ;;		wreg, status,2, status,0
 10922 ;; Tracked objects:
 10923 ;;		On entry : 0/0
 10924 ;;		On exit  : 0/0
 10925 ;;		Unchanged: 0/0
 10926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10929 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10930 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10931 ;;Total ram usage:        8 bytes
 10932 ;; Hardware stack levels used:    1
 10933 ;; Hardware stack levels required when called:    5
 10934 ;; This function calls:
 10935 ;;		_islower
 10936 ;; This function is called by:
 10937 ;;		_xtoa
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941                           	psect	text30
 10942  00320C                     __ptext30:
 10943                           	callstack 0
 10944  00320C                     _toupper:
 10945                           	callstack 21
 10946  00320C  0E9F               	movlw	159
 10947  00320E  6E1B               	movwf	??_toupper^0,c
 10948  003210  0EFF               	movlw	255
 10949  003212  6E1C               	movwf	(??_toupper+1)^0,c
 10950  003214  C019  F01D         	movff	toupper@c,??_toupper+2
 10951  003218  C01A  F01E         	movff	toupper@c+1,??_toupper+3
 10952  00321C  501B               	movf	??_toupper^0,w,c
 10953  00321E  261D               	addwf	(??_toupper+2)^0,f,c
 10954  003220  501C               	movf	(??_toupper+1)^0,w,c
 10955  003222  221E               	addwfc	(??_toupper+3)^0,f,c
 10956  003224  501E               	movf	(??_toupper+3)^0,w,c
 10957  003226  E10A               	bnz	u4950
 10958  003228  0E1A               	movlw	26
 10959  00322A  5C1D               	subwf	(??_toupper+2)^0,w,c
 10960  00322C  A0D8               	btfss	status,0,c
 10961  00322E  EF1B  F019         	goto	u4951
 10962  003232  EF1E  F019         	goto	u4950
 10963  003236                     u4951:
 10964  003236  0E01               	movlw	1
 10965  003238  EF1F  F019         	goto	u4960
 10966  00323C                     u4950:
 10967  00323C  0E00               	movlw	0
 10968  00323E                     u4960:
 10969  00323E  6E1F               	movwf	_toupper$2111^0,c
 10970  003240  6A20               	clrf	(_toupper$2111+1)^0,c
 10971  003242  501F               	movf	_toupper$2111^0,w,c
 10972  003244  1020               	iorwf	(_toupper$2111+1)^0,w,c
 10973  003246  B4D8               	btfsc	status,2,c
 10974  003248  EF28  F019         	goto	u4971
 10975  00324C  EF2A  F019         	goto	u4970
 10976  003250                     u4971:
 10977  003250  EF30  F019         	goto	l1655
 10978  003254                     u4970:
 10979  003254  0E5F               	movlw	95
 10980  003256  1419               	andwf	toupper@c^0,w,c
 10981  003258  6E19               	movwf	?_toupper^0,c
 10982  00325A  6A1A               	clrf	(?_toupper+1)^0,c
 10983  00325C  EF34  F019         	goto	l1660
 10984  003260                     l1655:
 10985  003260  C019  F019         	movff	toupper@c,?_toupper
 10986  003264  C01A  F01A         	movff	toupper@c+1,?_toupper+1
 10987  003268                     l1660:
 10988  003268  0012               	return		;funcret
 10989  00326A                     __end_of_toupper:
 10990                           	callstack 0
 10991                           
 10992 ;; *************** function _islower *****************
 10993 ;; Defined at:
 10994 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;  c               2   18[COMRAM] int 
 10997 ;; Auto vars:     Size  Location     Type
 10998 ;;		None
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  2   18[COMRAM] int 
 11001 ;; Registers used:
 11002 ;;		wreg, status,2, status,0
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/0
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11012 ;;Total ram usage:        6 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    4
 11015 ;; This function calls:
 11016 ;;		Nothing
 11017 ;; This function is called by:
 11018 ;;		_toupper
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           	psect	text31
 11023  003490                     __ptext31:
 11024                           	callstack 0
 11025  003490                     _islower:
 11026                           	callstack 21
 11027  003490  0E9F               	movlw	159
 11028  003492  6E15               	movwf	??_islower^0,c
 11029  003494  0EFF               	movlw	255
 11030  003496  6E16               	movwf	(??_islower+1)^0,c
 11031  003498  C013  F017         	movff	islower@c,??_islower+2
 11032  00349C  C014  F018         	movff	islower@c+1,??_islower+3
 11033  0034A0  5015               	movf	??_islower^0,w,c
 11034  0034A2  2617               	addwf	(??_islower+2)^0,f,c
 11035  0034A4  5016               	movf	(??_islower+1)^0,w,c
 11036  0034A6  2218               	addwfc	(??_islower+3)^0,f,c
 11037  0034A8  5018               	movf	(??_islower+3)^0,w,c
 11038  0034AA  E10A               	bnz	u4640
 11039  0034AC  0E1A               	movlw	26
 11040  0034AE  5C17               	subwf	(??_islower+2)^0,w,c
 11041  0034B0  A0D8               	btfss	status,0,c
 11042  0034B2  EF5D  F01A         	goto	u4641
 11043  0034B6  EF60  F01A         	goto	u4640
 11044  0034BA                     u4641:
 11045  0034BA  0E01               	movlw	1
 11046  0034BC  EF61  F01A         	goto	u4650
 11047  0034C0                     u4640:
 11048  0034C0  0E00               	movlw	0
 11049  0034C2                     u4650:
 11050  0034C2  6E13               	movwf	?_islower^0,c
 11051  0034C4  6A14               	clrf	(?_islower+1)^0,c
 11052  0034C6  0012               	return		;funcret
 11053  0034C8                     __end_of_islower:
 11054                           	callstack 0
 11055                           
 11056 ;; *************** function _isupper *****************
 11057 ;; Defined at:
 11058 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
 11059 ;; Parameters:    Size  Location     Type
 11060 ;;  c               2   18[COMRAM] int 
 11061 ;; Auto vars:     Size  Location     Type
 11062 ;;		None
 11063 ;; Return value:  Size  Location     Type
 11064 ;;                  2   18[COMRAM] int 
 11065 ;; Registers used:
 11066 ;;		wreg, status,2, status,0
 11067 ;; Tracked objects:
 11068 ;;		On entry : 0/0
 11069 ;;		On exit  : 0/0
 11070 ;;		Unchanged: 0/0
 11071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;Total ram usage:        6 bytes
 11077 ;; Hardware stack levels used:    1
 11078 ;; Hardware stack levels required when called:    4
 11079 ;; This function calls:
 11080 ;;		Nothing
 11081 ;; This function is called by:
 11082 ;;		_xtoa
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           	psect	text32
 11087  0034C8                     __ptext32:
 11088                           	callstack 0
 11089  0034C8                     _isupper:
 11090                           	callstack 22
 11091  0034C8  0EBF               	movlw	191
 11092  0034CA  6E15               	movwf	??_isupper^0,c
 11093  0034CC  0EFF               	movlw	255
 11094  0034CE  6E16               	movwf	(??_isupper+1)^0,c
 11095  0034D0  C013  F017         	movff	isupper@c,??_isupper+2
 11096  0034D4  C014  F018         	movff	isupper@c+1,??_isupper+3
 11097  0034D8  5015               	movf	??_isupper^0,w,c
 11098  0034DA  2617               	addwf	(??_isupper+2)^0,f,c
 11099  0034DC  5016               	movf	(??_isupper+1)^0,w,c
 11100  0034DE  2218               	addwfc	(??_isupper+3)^0,f,c
 11101  0034E0  5018               	movf	(??_isupper+3)^0,w,c
 11102  0034E2  E10A               	bnz	u4910
 11103  0034E4  0E1A               	movlw	26
 11104  0034E6  5C17               	subwf	(??_isupper+2)^0,w,c
 11105  0034E8  A0D8               	btfss	status,0,c
 11106  0034EA  EF79  F01A         	goto	u4911
 11107  0034EE  EF7C  F01A         	goto	u4910
 11108  0034F2                     u4911:
 11109  0034F2  0E01               	movlw	1
 11110  0034F4  EF7D  F01A         	goto	u4920
 11111  0034F8                     u4910:
 11112  0034F8  0E00               	movlw	0
 11113  0034FA                     u4920:
 11114  0034FA  6E13               	movwf	?_isupper^0,c
 11115  0034FC  6A14               	clrf	(?_isupper+1)^0,c
 11116  0034FE  0012               	return		;funcret
 11117  003500                     __end_of_isupper:
 11118                           	callstack 0
 11119                           
 11120 ;; *************** function _isalpha *****************
 11121 ;; Defined at:
 11122 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  c               2   18[COMRAM] int 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;		None
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  2   18[COMRAM] int 
 11129 ;; Registers used:
 11130 ;;		wreg, status,2, status,0
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;Total ram usage:        6 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:    4
 11143 ;; This function calls:
 11144 ;;		Nothing
 11145 ;; This function is called by:
 11146 ;;		_xtoa
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           	psect	text33
 11151  00341C                     __ptext33:
 11152                           	callstack 0
 11153  00341C                     _isalpha:
 11154                           	callstack 22
 11155  00341C  0E9F               	movlw	159
 11156  00341E  6E15               	movwf	??_isalpha^0,c
 11157  003420  0EFF               	movlw	255
 11158  003422  6E16               	movwf	(??_isalpha+1)^0,c
 11159  003424  0E20               	movlw	32
 11160  003426  1013               	iorwf	isalpha@c^0,w,c
 11161  003428  6E17               	movwf	(??_isalpha+2)^0,c
 11162  00342A  0E00               	movlw	0
 11163  00342C  1014               	iorwf	(isalpha@c+1)^0,w,c
 11164  00342E  6E18               	movwf	(??_isalpha+3)^0,c
 11165  003430  5015               	movf	??_isalpha^0,w,c
 11166  003432  2617               	addwf	(??_isalpha+2)^0,f,c
 11167  003434  5016               	movf	(??_isalpha+1)^0,w,c
 11168  003436  2218               	addwfc	(??_isalpha+3)^0,f,c
 11169  003438  5018               	movf	(??_isalpha+3)^0,w,c
 11170  00343A  E10A               	bnz	u4930
 11171  00343C  0E1A               	movlw	26
 11172  00343E  5C17               	subwf	(??_isalpha+2)^0,w,c
 11173  003440  A0D8               	btfss	status,0,c
 11174  003442  EF25  F01A         	goto	u4931
 11175  003446  EF28  F01A         	goto	u4930
 11176  00344A                     u4931:
 11177  00344A  0E01               	movlw	1
 11178  00344C  EF29  F01A         	goto	u4940
 11179  003450                     u4930:
 11180  003450  0E00               	movlw	0
 11181  003452                     u4940:
 11182  003452  6E13               	movwf	?_isalpha^0,c
 11183  003454  6A14               	clrf	(?_isalpha+1)^0,c
 11184  003456  0012               	return		;funcret
 11185  003458                     __end_of_isalpha:
 11186                           	callstack 0
 11187                           
 11188 ;; *************** function _utoa *****************
 11189 ;; Defined at:
 11190 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 11193 ;;		 -> NULL(0), 
 11194 ;;  d               8   49[COMRAM] unsigned long long 
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;  n               8   12[BANK0 ] unsigned long long 
 11197 ;;  i               2   20[BANK0 ] int 
 11198 ;;  w               2   10[BANK0 ] int 
 11199 ;;  p               2    8[BANK0 ] int 
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  2   47[COMRAM] int 
 11202 ;; Registers used:
 11203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11209 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11210 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11211 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11212 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11213 ;;Total ram usage:       32 bytes
 11214 ;; Hardware stack levels used:    1
 11215 ;; Hardware stack levels required when called:    9
 11216 ;; This function calls:
 11217 ;;		___lodiv
 11218 ;;		___lomod
 11219 ;;		_pad
 11220 ;; This function is called by:
 11221 ;;		_vfpfcnvrt
 11222 ;; This function uses a non-reentrant model
 11223 ;;
 11224                           
 11225                           	psect	text34
 11226  001FFE                     __ptext34:
 11227                           	callstack 0
 11228  001FFE                     _utoa:
 11229                           	callstack 18
 11230  001FFE                     
 11231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 11232  001FFE  BE3E               	btfsc	(_prec+1)^0,7,c
 11233  002000  EF04  F010         	goto	u5181
 11234  002004  EF06  F010         	goto	u5180
 11235  002008                     u5181:
 11236  002008  EF07  F010         	goto	l5275
 11237  00200C                     u5180:
 11238  00200C                     
 11239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
 11240  00200C  923F               	bcf	_flags^0,1,c
 11241  00200E                     l5275:
 11242                           
 11243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
 11244  00200E  BE3E               	btfsc	(_prec+1)^0,7,c
 11245  002010  EF14  F010         	goto	u5190
 11246  002014  503E               	movf	(_prec+1)^0,w,c
 11247  002016  E106               	bnz	u5191
 11248  002018  043D               	decf	_prec^0,w,c
 11249  00201A  B0D8               	btfsc	status,0,c
 11250  00201C  EF12  F010         	goto	u5191
 11251  002020  EF14  F010         	goto	u5190
 11252  002024                     u5191:
 11253  002024  EF1B  F010         	goto	l1479
 11254  002028                     u5190:
 11255  002028  0E00               	movlw	0
 11256  00202A  0100               	movlb	0	; () banked
 11257  00202C  6F69               	movwf	(utoa@p+1)& (0+255),b
 11258  00202E  0E01               	movlw	1
 11259  002030  6F68               	movwf	utoa@p& (0+255),b
 11260  002032  EF1F  F010         	goto	l1481
 11261  002036                     l1479:
 11262  002036  C03D  F068         	movff	_prec,utoa@p
 11263  00203A  C03E  F069         	movff	_prec+1,utoa@p+1
 11264  00203E                     l1481:
 11265                           
 11266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
 11267  00203E  C03B  F06A         	movff	_width,utoa@w
 11268  002042  C03C  F06B         	movff	_width+1,utoa@w+1
 11269                           
 11270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
 11271  002046  C032  F06C         	movff	utoa@d,utoa@n
 11272  00204A  C033  F06D         	movff	utoa@d+1,utoa@n+1
 11273  00204E  C034  F06E         	movff	utoa@d+2,utoa@n+2
 11274  002052  C035  F06F         	movff	utoa@d+3,utoa@n+3
 11275  002056  C036  F070         	movff	utoa@d+4,utoa@n+4
 11276  00205A  C037  F071         	movff	utoa@d+5,utoa@n+5
 11277  00205E  C038  F072         	movff	utoa@d+6,utoa@n+6
 11278  002062  C039  F073         	movff	utoa@d+7,utoa@n+7
 11279  002066                     
 11280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
 11281  002066  0E00               	movlw	0
 11282  002068  0100               	movlb	0	; () banked
 11283  00206A  6F75               	movwf	(utoa@i+1)& (0+255),b
 11284  00206C  0E1F               	movlw	31
 11285  00206E  6F74               	movwf	utoa@i& (0+255),b
 11286  002070                     
 11287                           ; BSR set to: 0
 11288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
 11289  002070  0E00               	movlw	0
 11290  002072  0101               	movlb	1	; () banked
 11291  002074  6F9F               	movwf	(_dbuf+31)& (0+255),b
 11292                           
 11293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11294  002076  EFB4  F010         	goto	l5293
 11295  00207A                     l5283:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
 11299  00207A  0774               	decf	utoa@i& (0+255),f,b
 11300  00207C  A0D8               	btfss	status,0,c
 11301  00207E  0775               	decf	(utoa@i+1)& (0+255),f,b
 11302  002080                     
 11303                           ; BSR set to: 0
 11304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
 11305  002080  0E80               	movlw	low _dbuf
 11306  002082  2574               	addwf	utoa@i& (0+255),w,b
 11307  002084  6ED9               	movwf	fsr2l,c
 11308  002086  0E01               	movlw	high _dbuf
 11309  002088  2175               	addwfc	(utoa@i+1)& (0+255),w,b
 11310  00208A  6EDA               	movwf	fsr2h,c
 11311  00208C  C06C  F013         	movff	utoa@n,___lomod@dividend
 11312  002090  C06D  F014         	movff	utoa@n+1,___lomod@dividend+1
 11313  002094  C06E  F015         	movff	utoa@n+2,___lomod@dividend+2
 11314  002098  C06F  F016         	movff	utoa@n+3,___lomod@dividend+3
 11315  00209C  C070  F017         	movff	utoa@n+4,___lomod@dividend+4
 11316  0020A0  C071  F018         	movff	utoa@n+5,___lomod@dividend+5
 11317  0020A4  C072  F019         	movff	utoa@n+6,___lomod@dividend+6
 11318  0020A8  C073  F01A         	movff	utoa@n+7,___lomod@dividend+7
 11319  0020AC  0E0A               	movlw	10
 11320  0020AE  6E1B               	movwf	___lomod@divisor^0,c
 11321  0020B0  0E00               	movlw	0
 11322  0020B2  6E1C               	movwf	(___lomod@divisor+1)^0,c
 11323  0020B4  0E00               	movlw	0
 11324  0020B6  6E1D               	movwf	(___lomod@divisor+2)^0,c
 11325  0020B8  0E00               	movlw	0
 11326  0020BA  6E1E               	movwf	(___lomod@divisor+3)^0,c
 11327  0020BC  0E00               	movlw	0
 11328  0020BE  6E1F               	movwf	(___lomod@divisor+4)^0,c
 11329  0020C0  0E00               	movlw	0
 11330  0020C2  6E20               	movwf	(___lomod@divisor+5)^0,c
 11331  0020C4  0E00               	movlw	0
 11332  0020C6  6E21               	movwf	(___lomod@divisor+6)^0,c
 11333  0020C8  0E00               	movlw	0
 11334  0020CA  6E22               	movwf	(___lomod@divisor+7)^0,c
 11335  0020CC  EC66  F016         	call	___lomod	;wreg free
 11336  0020D0  C013  F060         	movff	?___lomod,??_utoa
 11337  0020D4  C014  F061         	movff	?___lomod+1,??_utoa+1
 11338  0020D8  C015  F062         	movff	?___lomod+2,??_utoa+2
 11339  0020DC  C016  F063         	movff	?___lomod+3,??_utoa+3
 11340  0020E0  C017  F064         	movff	?___lomod+4,??_utoa+4
 11341  0020E4  C018  F065         	movff	?___lomod+5,??_utoa+5
 11342  0020E8  C019  F066         	movff	?___lomod+6,??_utoa+6
 11343  0020EC  C01A  F067         	movff	?___lomod+7,??_utoa+7
 11344  0020F0  0100               	movlb	0	; () banked
 11345  0020F2  5160               	movf	??_utoa& (0+255),w,b
 11346  0020F4  0F30               	addlw	48
 11347  0020F6  6EDF               	movwf	indf2,c
 11348  0020F8                     
 11349                           ; BSR set to: 0
 11350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
 11351  0020F8  0768               	decf	utoa@p& (0+255),f,b
 11352  0020FA  A0D8               	btfss	status,0,c
 11353  0020FC  0769               	decf	(utoa@p+1)& (0+255),f,b
 11354  0020FE                     
 11355                           ; BSR set to: 0
 11356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
 11357  0020FE  076A               	decf	utoa@w& (0+255),f,b
 11358  002100  A0D8               	btfss	status,0,c
 11359  002102  076B               	decf	(utoa@w+1)& (0+255),f,b
 11360  002104                     
 11361                           ; BSR set to: 0
 11362                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
 11363  002104  C06C  F013         	movff	utoa@n,___lodiv@dividend
 11364  002108  C06D  F014         	movff	utoa@n+1,___lodiv@dividend+1
 11365  00210C  C06E  F015         	movff	utoa@n+2,___lodiv@dividend+2
 11366  002110  C06F  F016         	movff	utoa@n+3,___lodiv@dividend+3
 11367  002114  C070  F017         	movff	utoa@n+4,___lodiv@dividend+4
 11368  002118  C071  F018         	movff	utoa@n+5,___lodiv@dividend+5
 11369  00211C  C072  F019         	movff	utoa@n+6,___lodiv@dividend+6
 11370  002120  C073  F01A         	movff	utoa@n+7,___lodiv@dividend+7
 11371  002124  0E0A               	movlw	10
 11372  002126  6E1B               	movwf	___lodiv@divisor^0,c
 11373  002128  0E00               	movlw	0
 11374  00212A  6E1C               	movwf	(___lodiv@divisor+1)^0,c
 11375  00212C  0E00               	movlw	0
 11376  00212E  6E1D               	movwf	(___lodiv@divisor+2)^0,c
 11377  002130  0E00               	movlw	0
 11378  002132  6E1E               	movwf	(___lodiv@divisor+3)^0,c
 11379  002134  0E00               	movlw	0
 11380  002136  6E1F               	movwf	(___lodiv@divisor+4)^0,c
 11381  002138  0E00               	movlw	0
 11382  00213A  6E20               	movwf	(___lodiv@divisor+5)^0,c
 11383  00213C  0E00               	movlw	0
 11384  00213E  6E21               	movwf	(___lodiv@divisor+6)^0,c
 11385  002140  0E00               	movlw	0
 11386  002142  6E22               	movwf	(___lodiv@divisor+7)^0,c
 11387  002144  ECEE  F015         	call	___lodiv	;wreg free
 11388  002148  C013  F06C         	movff	?___lodiv,utoa@n
 11389  00214C  C014  F06D         	movff	?___lodiv+1,utoa@n+1
 11390  002150  C015  F06E         	movff	?___lodiv+2,utoa@n+2
 11391  002154  C016  F06F         	movff	?___lodiv+3,utoa@n+3
 11392  002158  C017  F070         	movff	?___lodiv+4,utoa@n+4
 11393  00215C  C018  F071         	movff	?___lodiv+5,utoa@n+5
 11394  002160  C019  F072         	movff	?___lodiv+6,utoa@n+6
 11395  002164  C01A  F073         	movff	?___lodiv+7,utoa@n+7
 11396  002168                     l5293:
 11397                           
 11398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11399  002168  0100               	movlb	0	; () banked
 11400  00216A  5174               	movf	utoa@i& (0+255),w,b
 11401  00216C  1175               	iorwf	(utoa@i+1)& (0+255),w,b
 11402  00216E  B4D8               	btfsc	status,2,c
 11403  002170  EFBC  F010         	goto	u5201
 11404  002174  EFBE  F010         	goto	u5200
 11405  002178                     u5201:
 11406  002178  EFEE  F010         	goto	l5303
 11407  00217C                     u5200:
 11408  00217C                     
 11409                           ; BSR set to: 0
 11410  00217C  516C               	movf	utoa@n& (0+255),w,b
 11411  00217E  116D               	iorwf	(utoa@n+1)& (0+255),w,b
 11412  002180  116E               	iorwf	(utoa@n+2)& (0+255),w,b
 11413  002182  116F               	iorwf	(utoa@n+3)& (0+255),w,b
 11414  002184  1170               	iorwf	(utoa@n+4)& (0+255),w,b
 11415  002186  1171               	iorwf	(utoa@n+5)& (0+255),w,b
 11416  002188  1172               	iorwf	(utoa@n+6)& (0+255),w,b
 11417  00218A  1173               	iorwf	(utoa@n+7)& (0+255),w,b
 11418  00218C  A4D8               	btfss	status,2,c
 11419  00218E  EFCB  F010         	goto	u5211
 11420  002192  EFCD  F010         	goto	u5210
 11421  002196                     u5211:
 11422  002196  EF3D  F010         	goto	l5283
 11423  00219A                     u5210:
 11424  00219A                     
 11425                           ; BSR set to: 0
 11426  00219A  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
 11427  00219C  EFDA  F010         	goto	u5220
 11428  0021A0  5169               	movf	(utoa@p+1)& (0+255),w,b
 11429  0021A2  E106               	bnz	u5221
 11430  0021A4  0568               	decf	utoa@p& (0+255),w,b
 11431  0021A6  B0D8               	btfsc	status,0,c
 11432  0021A8  EFD8  F010         	goto	u5221
 11433  0021AC  EFDA  F010         	goto	u5220
 11434  0021B0                     u5221:
 11435  0021B0  EF3D  F010         	goto	l5283
 11436  0021B4                     u5220:
 11437  0021B4                     
 11438                           ; BSR set to: 0
 11439  0021B4  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
 11440  0021B6  EFE5  F010         	goto	u5231
 11441  0021BA  516B               	movf	(utoa@w+1)& (0+255),w,b
 11442  0021BC  E108               	bnz	u5230
 11443  0021BE  056A               	decf	utoa@w& (0+255),w,b
 11444  0021C0  A0D8               	btfss	status,0,c
 11445  0021C2  EFE5  F010         	goto	u5231
 11446  0021C6  EFE7  F010         	goto	u5230
 11447  0021CA                     u5231:
 11448  0021CA  EFEE  F010         	goto	l5303
 11449  0021CE                     u5230:
 11450  0021CE                     
 11451                           ; BSR set to: 0
 11452  0021CE  B23F               	btfsc	_flags^0,1,c
 11453  0021D0  EFEC  F010         	goto	u5241
 11454  0021D4  EFEE  F010         	goto	u5240
 11455  0021D8                     u5241:
 11456  0021D8  EF3D  F010         	goto	l5283
 11457  0021DC                     u5240:
 11458  0021DC                     l5303:
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
 11462  0021DC  C030  F025         	movff	utoa@fp,pad@fp
 11463  0021E0  C031  F026         	movff	utoa@fp+1,pad@fp+1
 11464  0021E4  0E80               	movlw	low _dbuf
 11465  0021E6  2574               	addwf	utoa@i& (0+255),w,b
 11466  0021E8  6E27               	movwf	pad@buf^0,c
 11467  0021EA  0E01               	movlw	high _dbuf
 11468  0021EC  2175               	addwfc	(utoa@i+1)& (0+255),w,b
 11469  0021EE  6E28               	movwf	(pad@buf+1)^0,c
 11470  0021F0  C06A  F029         	movff	utoa@w,pad@p
 11471  0021F4  C06B  F02A         	movff	utoa@w+1,pad@p+1
 11472  0021F8  ECCE  F016         	call	_pad	;wreg free
 11473  0021FC  C025  F030         	movff	?_pad,?_utoa
 11474  002200  C026  F031         	movff	?_pad+1,?_utoa+1
 11475  002204  0012               	return		;funcret
 11476  002206                     __end_of_utoa:
 11477                           	callstack 0
 11478                           
 11479 ;; *************** function ___lomod *****************
 11480 ;; Defined at:
 11481 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  dividend        8   18[COMRAM] unsigned long long 
 11484 ;;  divisor         8   26[COMRAM] unsigned long long 
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;  counter         1   34[COMRAM] unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  8   18[COMRAM] unsigned long long 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2, status,0
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11496 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;Total ram usage:       17 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:    4
 11503 ;; This function calls:
 11504 ;;		Nothing
 11505 ;; This function is called by:
 11506 ;;		_utoa
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           	psect	text35
 11511  002CCC                     __ptext35:
 11512                           	callstack 0
 11513  002CCC                     ___lomod:
 11514                           	callstack 22
 11515  002CCC  501B               	movf	___lomod@divisor^0,w,c
 11516  002CCE  101C               	iorwf	(___lomod@divisor+1)^0,w,c
 11517  002CD0  101D               	iorwf	(___lomod@divisor+2)^0,w,c
 11518  002CD2  101E               	iorwf	(___lomod@divisor+3)^0,w,c
 11519  002CD4  101F               	iorwf	(___lomod@divisor+4)^0,w,c
 11520  002CD6  1020               	iorwf	(___lomod@divisor+5)^0,w,c
 11521  002CD8  1021               	iorwf	(___lomod@divisor+6)^0,w,c
 11522  002CDA  1022               	iorwf	(___lomod@divisor+7)^0,w,c
 11523  002CDC  B4D8               	btfsc	status,2,c
 11524  002CDE  EF73  F016         	goto	u4831
 11525  002CE2  EF75  F016         	goto	u4830
 11526  002CE6                     u4831:
 11527  002CE6  EFBD  F016         	goto	l1169
 11528  002CEA                     u4830:
 11529  002CEA  0E01               	movlw	1
 11530  002CEC  6E23               	movwf	___lomod@counter^0,c
 11531  002CEE  EF83  F016         	goto	l5125
 11532  002CF2                     l5123:
 11533  002CF2  90D8               	bcf	status,0,c
 11534  002CF4  361B               	rlcf	___lomod@divisor^0,f,c
 11535  002CF6  361C               	rlcf	(___lomod@divisor+1)^0,f,c
 11536  002CF8  361D               	rlcf	(___lomod@divisor+2)^0,f,c
 11537  002CFA  361E               	rlcf	(___lomod@divisor+3)^0,f,c
 11538  002CFC  361F               	rlcf	(___lomod@divisor+4)^0,f,c
 11539  002CFE  3620               	rlcf	(___lomod@divisor+5)^0,f,c
 11540  002D00  3621               	rlcf	(___lomod@divisor+6)^0,f,c
 11541  002D02  3622               	rlcf	(___lomod@divisor+7)^0,f,c
 11542  002D04  2A23               	incf	___lomod@counter^0,f,c
 11543  002D06                     l5125:
 11544  002D06  AE22               	btfss	(___lomod@divisor+7)^0,7,c
 11545  002D08  EF88  F016         	goto	u4841
 11546  002D0C  EF8A  F016         	goto	u4840
 11547  002D10                     u4841:
 11548  002D10  EF79  F016         	goto	l5123
 11549  002D14                     u4840:
 11550  002D14                     l5127:
 11551  002D14  501B               	movf	___lomod@divisor^0,w,c
 11552  002D16  5C13               	subwf	___lomod@dividend^0,w,c
 11553  002D18  501C               	movf	(___lomod@divisor+1)^0,w,c
 11554  002D1A  5814               	subwfb	(___lomod@dividend+1)^0,w,c
 11555  002D1C  501D               	movf	(___lomod@divisor+2)^0,w,c
 11556  002D1E  5815               	subwfb	(___lomod@dividend+2)^0,w,c
 11557  002D20  501E               	movf	(___lomod@divisor+3)^0,w,c
 11558  002D22  5816               	subwfb	(___lomod@dividend+3)^0,w,c
 11559  002D24  501F               	movf	(___lomod@divisor+4)^0,w,c
 11560  002D26  5817               	subwfb	(___lomod@dividend+4)^0,w,c
 11561  002D28  5020               	movf	(___lomod@divisor+5)^0,w,c
 11562  002D2A  5818               	subwfb	(___lomod@dividend+5)^0,w,c
 11563  002D2C  5021               	movf	(___lomod@divisor+6)^0,w,c
 11564  002D2E  5819               	subwfb	(___lomod@dividend+6)^0,w,c
 11565  002D30  5022               	movf	(___lomod@divisor+7)^0,w,c
 11566  002D32  581A               	subwfb	(___lomod@dividend+7)^0,w,c
 11567  002D34  A0D8               	btfss	status,0,c
 11568  002D36  EF9F  F016         	goto	u4851
 11569  002D3A  EFA1  F016         	goto	u4850
 11570  002D3E                     u4851:
 11571  002D3E  EFB1  F016         	goto	l5131
 11572  002D42                     u4850:
 11573  002D42  501B               	movf	___lomod@divisor^0,w,c
 11574  002D44  5E13               	subwf	___lomod@dividend^0,f,c
 11575  002D46  501C               	movf	(___lomod@divisor+1)^0,w,c
 11576  002D48  5A14               	subwfb	(___lomod@dividend+1)^0,f,c
 11577  002D4A  501D               	movf	(___lomod@divisor+2)^0,w,c
 11578  002D4C  5A15               	subwfb	(___lomod@dividend+2)^0,f,c
 11579  002D4E  501E               	movf	(___lomod@divisor+3)^0,w,c
 11580  002D50  5A16               	subwfb	(___lomod@dividend+3)^0,f,c
 11581  002D52  501F               	movf	(___lomod@divisor+4)^0,w,c
 11582  002D54  5A17               	subwfb	(___lomod@dividend+4)^0,f,c
 11583  002D56  5020               	movf	(___lomod@divisor+5)^0,w,c
 11584  002D58  5A18               	subwfb	(___lomod@dividend+5)^0,f,c
 11585  002D5A  5021               	movf	(___lomod@divisor+6)^0,w,c
 11586  002D5C  5A19               	subwfb	(___lomod@dividend+6)^0,f,c
 11587  002D5E  5022               	movf	(___lomod@divisor+7)^0,w,c
 11588  002D60  5A1A               	subwfb	(___lomod@dividend+7)^0,f,c
 11589  002D62                     l5131:
 11590  002D62  90D8               	bcf	status,0,c
 11591  002D64  3222               	rrcf	(___lomod@divisor+7)^0,f,c
 11592  002D66  3221               	rrcf	(___lomod@divisor+6)^0,f,c
 11593  002D68  3220               	rrcf	(___lomod@divisor+5)^0,f,c
 11594  002D6A  321F               	rrcf	(___lomod@divisor+4)^0,f,c
 11595  002D6C  321E               	rrcf	(___lomod@divisor+3)^0,f,c
 11596  002D6E  321D               	rrcf	(___lomod@divisor+2)^0,f,c
 11597  002D70  321C               	rrcf	(___lomod@divisor+1)^0,f,c
 11598  002D72  321B               	rrcf	___lomod@divisor^0,f,c
 11599  002D74  2E23               	decfsz	___lomod@counter^0,f,c
 11600  002D76  EF8A  F016         	goto	l5127
 11601  002D7A                     l1169:
 11602  002D7A  C013  F013         	movff	___lomod@dividend,?___lomod
 11603  002D7E  C014  F014         	movff	___lomod@dividend+1,?___lomod+1
 11604  002D82  C015  F015         	movff	___lomod@dividend+2,?___lomod+2
 11605  002D86  C016  F016         	movff	___lomod@dividend+3,?___lomod+3
 11606  002D8A  C017  F017         	movff	___lomod@dividend+4,?___lomod+4
 11607  002D8E  C018  F018         	movff	___lomod@dividend+5,?___lomod+5
 11608  002D92  C019  F019         	movff	___lomod@dividend+6,?___lomod+6
 11609  002D96  C01A  F01A         	movff	___lomod@dividend+7,?___lomod+7
 11610  002D9A  0012               	return		;funcret
 11611  002D9C                     __end_of___lomod:
 11612                           	callstack 0
 11613                           
 11614 ;; *************** function ___lodiv *****************
 11615 ;; Defined at:
 11616 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
 11617 ;; Parameters:    Size  Location     Type
 11618 ;;  dividend        8   18[COMRAM] unsigned long long 
 11619 ;;  divisor         8   26[COMRAM] unsigned long long 
 11620 ;; Auto vars:     Size  Location     Type
 11621 ;;  quotient        8   34[COMRAM] unsigned long long 
 11622 ;;  counter         1   42[COMRAM] unsigned char 
 11623 ;; Return value:  Size  Location     Type
 11624 ;;                  8   18[COMRAM] unsigned long long 
 11625 ;; Registers used:
 11626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11627 ;; Tracked objects:
 11628 ;;		On entry : 0/0
 11629 ;;		On exit  : 0/0
 11630 ;;		Unchanged: 0/0
 11631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11632 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11633 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11635 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11636 ;;Total ram usage:       25 bytes
 11637 ;; Hardware stack levels used:    1
 11638 ;; Hardware stack levels required when called:    4
 11639 ;; This function calls:
 11640 ;;		Nothing
 11641 ;; This function is called by:
 11642 ;;		_utoa
 11643 ;; This function uses a non-reentrant model
 11644 ;;
 11645                           
 11646                           	psect	text36
 11647  002BDC                     __ptext36:
 11648                           	callstack 0
 11649  002BDC                     ___lodiv:
 11650                           	callstack 22
 11651  002BDC  EE20  F023         	lfsr	2,___lodiv@quotient
 11652  002BE0  0E07               	movlw	7
 11653  002BE2                     u4791:
 11654  002BE2  6ADE               	clrf	postinc2,c
 11655  002BE4  06E8               	decf	wreg,f,c
 11656  002BE6  E2FD               	bc	u4791
 11657  002BE8  501B               	movf	___lodiv@divisor^0,w,c
 11658  002BEA  101C               	iorwf	(___lodiv@divisor+1)^0,w,c
 11659  002BEC  101D               	iorwf	(___lodiv@divisor+2)^0,w,c
 11660  002BEE  101E               	iorwf	(___lodiv@divisor+3)^0,w,c
 11661  002BF0  101F               	iorwf	(___lodiv@divisor+4)^0,w,c
 11662  002BF2  1020               	iorwf	(___lodiv@divisor+5)^0,w,c
 11663  002BF4  1021               	iorwf	(___lodiv@divisor+6)^0,w,c
 11664  002BF6  1022               	iorwf	(___lodiv@divisor+7)^0,w,c
 11665  002BF8  B4D8               	btfsc	status,2,c
 11666  002BFA  EF01  F016         	goto	u4801
 11667  002BFE  EF03  F016         	goto	u4800
 11668  002C02                     u4801:
 11669  002C02  EF55  F016         	goto	l1159
 11670  002C06                     u4800:
 11671  002C06  0E01               	movlw	1
 11672  002C08  6E2B               	movwf	___lodiv@counter^0,c
 11673  002C0A  EF11  F016         	goto	l5105
 11674  002C0E                     l5103:
 11675  002C0E  90D8               	bcf	status,0,c
 11676  002C10  361B               	rlcf	___lodiv@divisor^0,f,c
 11677  002C12  361C               	rlcf	(___lodiv@divisor+1)^0,f,c
 11678  002C14  361D               	rlcf	(___lodiv@divisor+2)^0,f,c
 11679  002C16  361E               	rlcf	(___lodiv@divisor+3)^0,f,c
 11680  002C18  361F               	rlcf	(___lodiv@divisor+4)^0,f,c
 11681  002C1A  3620               	rlcf	(___lodiv@divisor+5)^0,f,c
 11682  002C1C  3621               	rlcf	(___lodiv@divisor+6)^0,f,c
 11683  002C1E  3622               	rlcf	(___lodiv@divisor+7)^0,f,c
 11684  002C20  2A2B               	incf	___lodiv@counter^0,f,c
 11685  002C22                     l5105:
 11686  002C22  AE22               	btfss	(___lodiv@divisor+7)^0,7,c
 11687  002C24  EF16  F016         	goto	u4811
 11688  002C28  EF18  F016         	goto	u4810
 11689  002C2C                     u4811:
 11690  002C2C  EF07  F016         	goto	l5103
 11691  002C30                     u4810:
 11692  002C30                     l5107:
 11693  002C30  90D8               	bcf	status,0,c
 11694  002C32  3623               	rlcf	___lodiv@quotient^0,f,c
 11695  002C34  3624               	rlcf	(___lodiv@quotient+1)^0,f,c
 11696  002C36  3625               	rlcf	(___lodiv@quotient+2)^0,f,c
 11697  002C38  3626               	rlcf	(___lodiv@quotient+3)^0,f,c
 11698  002C3A  3627               	rlcf	(___lodiv@quotient+4)^0,f,c
 11699  002C3C  3628               	rlcf	(___lodiv@quotient+5)^0,f,c
 11700  002C3E  3629               	rlcf	(___lodiv@quotient+6)^0,f,c
 11701  002C40  362A               	rlcf	(___lodiv@quotient+7)^0,f,c
 11702  002C42  501B               	movf	___lodiv@divisor^0,w,c
 11703  002C44  5C13               	subwf	___lodiv@dividend^0,w,c
 11704  002C46  501C               	movf	(___lodiv@divisor+1)^0,w,c
 11705  002C48  5814               	subwfb	(___lodiv@dividend+1)^0,w,c
 11706  002C4A  501D               	movf	(___lodiv@divisor+2)^0,w,c
 11707  002C4C  5815               	subwfb	(___lodiv@dividend+2)^0,w,c
 11708  002C4E  501E               	movf	(___lodiv@divisor+3)^0,w,c
 11709  002C50  5816               	subwfb	(___lodiv@dividend+3)^0,w,c
 11710  002C52  501F               	movf	(___lodiv@divisor+4)^0,w,c
 11711  002C54  5817               	subwfb	(___lodiv@dividend+4)^0,w,c
 11712  002C56  5020               	movf	(___lodiv@divisor+5)^0,w,c
 11713  002C58  5818               	subwfb	(___lodiv@dividend+5)^0,w,c
 11714  002C5A  5021               	movf	(___lodiv@divisor+6)^0,w,c
 11715  002C5C  5819               	subwfb	(___lodiv@dividend+6)^0,w,c
 11716  002C5E  5022               	movf	(___lodiv@divisor+7)^0,w,c
 11717  002C60  581A               	subwfb	(___lodiv@dividend+7)^0,w,c
 11718  002C62  A0D8               	btfss	status,0,c
 11719  002C64  EF36  F016         	goto	u4821
 11720  002C68  EF38  F016         	goto	u4820
 11721  002C6C                     u4821:
 11722  002C6C  EF49  F016         	goto	l5115
 11723  002C70                     u4820:
 11724  002C70  501B               	movf	___lodiv@divisor^0,w,c
 11725  002C72  5E13               	subwf	___lodiv@dividend^0,f,c
 11726  002C74  501C               	movf	(___lodiv@divisor+1)^0,w,c
 11727  002C76  5A14               	subwfb	(___lodiv@dividend+1)^0,f,c
 11728  002C78  501D               	movf	(___lodiv@divisor+2)^0,w,c
 11729  002C7A  5A15               	subwfb	(___lodiv@dividend+2)^0,f,c
 11730  002C7C  501E               	movf	(___lodiv@divisor+3)^0,w,c
 11731  002C7E  5A16               	subwfb	(___lodiv@dividend+3)^0,f,c
 11732  002C80  501F               	movf	(___lodiv@divisor+4)^0,w,c
 11733  002C82  5A17               	subwfb	(___lodiv@dividend+4)^0,f,c
 11734  002C84  5020               	movf	(___lodiv@divisor+5)^0,w,c
 11735  002C86  5A18               	subwfb	(___lodiv@dividend+5)^0,f,c
 11736  002C88  5021               	movf	(___lodiv@divisor+6)^0,w,c
 11737  002C8A  5A19               	subwfb	(___lodiv@dividend+6)^0,f,c
 11738  002C8C  5022               	movf	(___lodiv@divisor+7)^0,w,c
 11739  002C8E  5A1A               	subwfb	(___lodiv@dividend+7)^0,f,c
 11740  002C90  8023               	bsf	___lodiv@quotient^0,0,c
 11741  002C92                     l5115:
 11742  002C92  90D8               	bcf	status,0,c
 11743  002C94  3222               	rrcf	(___lodiv@divisor+7)^0,f,c
 11744  002C96  3221               	rrcf	(___lodiv@divisor+6)^0,f,c
 11745  002C98  3220               	rrcf	(___lodiv@divisor+5)^0,f,c
 11746  002C9A  321F               	rrcf	(___lodiv@divisor+4)^0,f,c
 11747  002C9C  321E               	rrcf	(___lodiv@divisor+3)^0,f,c
 11748  002C9E  321D               	rrcf	(___lodiv@divisor+2)^0,f,c
 11749  002CA0  321C               	rrcf	(___lodiv@divisor+1)^0,f,c
 11750  002CA2  321B               	rrcf	___lodiv@divisor^0,f,c
 11751  002CA4  2E2B               	decfsz	___lodiv@counter^0,f,c
 11752  002CA6  EF18  F016         	goto	l5107
 11753  002CAA                     l1159:
 11754  002CAA  C023  F013         	movff	___lodiv@quotient,?___lodiv
 11755  002CAE  C024  F014         	movff	___lodiv@quotient+1,?___lodiv+1
 11756  002CB2  C025  F015         	movff	___lodiv@quotient+2,?___lodiv+2
 11757  002CB6  C026  F016         	movff	___lodiv@quotient+3,?___lodiv+3
 11758  002CBA  C027  F017         	movff	___lodiv@quotient+4,?___lodiv+4
 11759  002CBE  C028  F018         	movff	___lodiv@quotient+5,?___lodiv+5
 11760  002CC2  C029  F019         	movff	___lodiv@quotient+6,?___lodiv+6
 11761  002CC6  C02A  F01A         	movff	___lodiv@quotient+7,?___lodiv+7
 11762  002CCA  0012               	return		;funcret
 11763  002CCC                     __end_of___lodiv:
 11764                           	callstack 0
 11765                           
 11766 ;; *************** function _dtoa *****************
 11767 ;; Defined at:
 11768 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 11771 ;;		 -> NULL(0), 
 11772 ;;  d               8   49[COMRAM] long long 
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;  n               8   16[BANK0 ] long long 
 11775 ;;  i               2   24[BANK0 ] int 
 11776 ;;  s               2   14[BANK0 ] int 
 11777 ;;  w               2   12[BANK0 ] int 
 11778 ;;  p               2   10[BANK0 ] int 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  2   47[COMRAM] int 
 11781 ;; Registers used:
 11782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11788 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11789 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11790 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11791 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11792 ;;Total ram usage:       36 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; Hardware stack levels required when called:    9
 11795 ;; This function calls:
 11796 ;;		___aodiv
 11797 ;;		___aomod
 11798 ;;		_abs
 11799 ;;		_pad
 11800 ;; This function is called by:
 11801 ;;		_vfpfcnvrt
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text37
 11806  001A3C                     __ptext37:
 11807                           	callstack 0
 11808  001A3C                     _dtoa:
 11809                           	callstack 18
 11810  001A3C                     
 11811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 11812  001A3C  C032  F070         	movff	dtoa@d,dtoa@n
 11813  001A40  C033  F071         	movff	dtoa@d+1,dtoa@n+1
 11814  001A44  C034  F072         	movff	dtoa@d+2,dtoa@n+2
 11815  001A48  C035  F073         	movff	dtoa@d+3,dtoa@n+3
 11816  001A4C  C036  F074         	movff	dtoa@d+4,dtoa@n+4
 11817  001A50  C037  F075         	movff	dtoa@d+5,dtoa@n+5
 11818  001A54  C038  F076         	movff	dtoa@d+6,dtoa@n+6
 11819  001A58  C039  F077         	movff	dtoa@d+7,dtoa@n+7
 11820  001A5C                     
 11821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 11822  001A5C  0100               	movlb	0	; () banked
 11823  001A5E  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
 11824  001A60  EF34  F00D         	goto	u5031
 11825  001A64  EF37  F00D         	goto	u5030
 11826  001A68                     u5031:
 11827  001A68  0E01               	movlw	1
 11828  001A6A  EF38  F00D         	goto	u5040
 11829  001A6E                     u5030:
 11830  001A6E  0E00               	movlw	0
 11831  001A70                     u5040:
 11832  001A70  6F6E               	movwf	dtoa@s& (0+255),b
 11833  001A72  6B6F               	clrf	(dtoa@s+1)& (0+255),b
 11834                           
 11835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 11836  001A74  516E               	movf	dtoa@s& (0+255),w,b
 11837  001A76  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 11838  001A78  B4D8               	btfsc	status,2,c
 11839  001A7A  EF41  F00D         	goto	u5051
 11840  001A7E  EF43  F00D         	goto	u5050
 11841  001A82                     u5051:
 11842  001A82  EF53  F00D         	goto	l5215
 11843  001A86                     u5050:
 11844  001A86                     
 11845                           ; BSR set to: 0
 11846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 11847  001A86  1F77               	comf	(dtoa@n+7)& (0+255),f,b
 11848  001A88  1F76               	comf	(dtoa@n+6)& (0+255),f,b
 11849  001A8A  1F75               	comf	(dtoa@n+5)& (0+255),f,b
 11850  001A8C  1F74               	comf	(dtoa@n+4)& (0+255),f,b
 11851  001A8E  1F73               	comf	(dtoa@n+3)& (0+255),f,b
 11852  001A90  1F72               	comf	(dtoa@n+2)& (0+255),f,b
 11853  001A92  1F71               	comf	(dtoa@n+1)& (0+255),f,b
 11854  001A94  6D70               	negf	dtoa@n& (0+255),b
 11855  001A96  0E00               	movlw	0
 11856  001A98  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
 11857  001A9A  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
 11858  001A9C  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
 11859  001A9E  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
 11860  001AA0  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
 11861  001AA2  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
 11862  001AA4  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
 11863  001AA6                     l5215:
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 11867  001AA6  BE3E               	btfsc	(_prec+1)^0,7,c
 11868  001AA8  EF58  F00D         	goto	u5061
 11869  001AAC  EF5A  F00D         	goto	u5060
 11870  001AB0                     u5061:
 11871  001AB0  EF5B  F00D         	goto	l5219
 11872  001AB4                     u5060:
 11873  001AB4                     
 11874                           ; BSR set to: 0
 11875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 11876  001AB4  923F               	bcf	_flags^0,1,c
 11877  001AB6                     l5219:
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 11881  001AB6  BE3E               	btfsc	(_prec+1)^0,7,c
 11882  001AB8  EF68  F00D         	goto	u5070
 11883  001ABC  503E               	movf	(_prec+1)^0,w,c
 11884  001ABE  E106               	bnz	u5071
 11885  001AC0  043D               	decf	_prec^0,w,c
 11886  001AC2  B0D8               	btfsc	status,0,c
 11887  001AC4  EF66  F00D         	goto	u5071
 11888  001AC8  EF68  F00D         	goto	u5070
 11889  001ACC                     u5071:
 11890  001ACC  EF6E  F00D         	goto	l1454
 11891  001AD0                     u5070:
 11892  001AD0                     
 11893                           ; BSR set to: 0
 11894  001AD0  0E00               	movlw	0
 11895  001AD2  6F6B               	movwf	(dtoa@p+1)& (0+255),b
 11896  001AD4  0E01               	movlw	1
 11897  001AD6  6F6A               	movwf	dtoa@p& (0+255),b
 11898  001AD8  EF72  F00D         	goto	l1456
 11899  001ADC                     l1454:
 11900                           
 11901                           ; BSR set to: 0
 11902  001ADC  C03D  F06A         	movff	_prec,dtoa@p
 11903  001AE0  C03E  F06B         	movff	_prec+1,dtoa@p+1
 11904  001AE4                     l1456:
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 11908  001AE4  C03B  F06C         	movff	_width,dtoa@w
 11909  001AE8  C03C  F06D         	movff	_width+1,dtoa@w+1
 11910  001AEC                     
 11911                           ; BSR set to: 0
 11912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 11913  001AEC  516E               	movf	dtoa@s& (0+255),w,b
 11914  001AEE  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 11915  001AF0  A4D8               	btfss	status,2,c
 11916  001AF2  EF7D  F00D         	goto	u5081
 11917  001AF6  EF7F  F00D         	goto	u5080
 11918  001AFA                     u5081:
 11919  001AFA  EF86  F00D         	goto	l5227
 11920  001AFE                     u5080:
 11921  001AFE                     
 11922                           ; BSR set to: 0
 11923  001AFE  A43F               	btfss	_flags^0,2,c
 11924  001B00  EF84  F00D         	goto	u5091
 11925  001B04  EF86  F00D         	goto	u5090
 11926  001B08                     u5091:
 11927  001B08  EF89  F00D         	goto	l5229
 11928  001B0C                     u5090:
 11929  001B0C                     l5227:
 11930                           
 11931                           ; BSR set to: 0
 11932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 11933  001B0C  076C               	decf	dtoa@w& (0+255),f,b
 11934  001B0E  A0D8               	btfss	status,0,c
 11935  001B10  076D               	decf	(dtoa@w+1)& (0+255),f,b
 11936  001B12                     l5229:
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 11940  001B12  0E00               	movlw	0
 11941  001B14  6F79               	movwf	(dtoa@i+1)& (0+255),b
 11942  001B16  0E1F               	movlw	31
 11943  001B18  6F78               	movwf	dtoa@i& (0+255),b
 11944  001B1A                     
 11945                           ; BSR set to: 0
 11946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 11947  001B1A  0E00               	movlw	0
 11948  001B1C  0101               	movlb	1	; () banked
 11949  001B1E  6F9F               	movwf	(_dbuf+31)& (0+255),b
 11950                           
 11951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11952  001B20  EF0F  F00E         	goto	l5243
 11953  001B24                     l5233:
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 11957  001B24  0778               	decf	dtoa@i& (0+255),f,b
 11958  001B26  A0D8               	btfss	status,0,c
 11959  001B28  0779               	decf	(dtoa@i+1)& (0+255),f,b
 11960  001B2A                     
 11961                           ; BSR set to: 0
 11962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 11963  001B2A  0E80               	movlw	low _dbuf
 11964  001B2C  2578               	addwf	dtoa@i& (0+255),w,b
 11965  001B2E  6ED9               	movwf	fsr2l,c
 11966  001B30  0E01               	movlw	high _dbuf
 11967  001B32  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 11968  001B34  6EDA               	movwf	fsr2h,c
 11969  001B36  C070  F013         	movff	dtoa@n,___aomod@dividend
 11970  001B3A  C071  F014         	movff	dtoa@n+1,___aomod@dividend+1
 11971  001B3E  C072  F015         	movff	dtoa@n+2,___aomod@dividend+2
 11972  001B42  C073  F016         	movff	dtoa@n+3,___aomod@dividend+3
 11973  001B46  C074  F017         	movff	dtoa@n+4,___aomod@dividend+4
 11974  001B4A  C075  F018         	movff	dtoa@n+5,___aomod@dividend+5
 11975  001B4E  C076  F019         	movff	dtoa@n+6,___aomod@dividend+6
 11976  001B52  C077  F01A         	movff	dtoa@n+7,___aomod@dividend+7
 11977  001B56  0E0A               	movlw	10
 11978  001B58  6E1B               	movwf	___aomod@divisor^0,c
 11979  001B5A  0E00               	movlw	0
 11980  001B5C  6E1C               	movwf	(___aomod@divisor+1)^0,c
 11981  001B5E  0E00               	movlw	0
 11982  001B60  6E1D               	movwf	(___aomod@divisor+2)^0,c
 11983  001B62  0E00               	movlw	0
 11984  001B64  6E1E               	movwf	(___aomod@divisor+3)^0,c
 11985  001B66  0E00               	movlw	0
 11986  001B68  6E1F               	movwf	(___aomod@divisor+4)^0,c
 11987  001B6A  0E00               	movlw	0
 11988  001B6C  6E20               	movwf	(___aomod@divisor+5)^0,c
 11989  001B6E  0E00               	movlw	0
 11990  001B70  6E21               	movwf	(___aomod@divisor+6)^0,c
 11991  001B72  0E00               	movlw	0
 11992  001B74  6E22               	movwf	(___aomod@divisor+7)^0,c
 11993  001B76  EC3C  F015         	call	___aomod	;wreg free
 11994  001B7A  C013  F060         	movff	?___aomod,??_dtoa
 11995  001B7E  C014  F061         	movff	?___aomod+1,??_dtoa+1
 11996  001B82  C015  F062         	movff	?___aomod+2,??_dtoa+2
 11997  001B86  C016  F063         	movff	?___aomod+3,??_dtoa+3
 11998  001B8A  C017  F064         	movff	?___aomod+4,??_dtoa+4
 11999  001B8E  C018  F065         	movff	?___aomod+5,??_dtoa+5
 12000  001B92  C019  F066         	movff	?___aomod+6,??_dtoa+6
 12001  001B96  C01A  F067         	movff	?___aomod+7,??_dtoa+7
 12002  001B9A  C060  F025         	movff	??_dtoa,abs@a
 12003  001B9E  C062  F026         	movff	??_dtoa+2,abs@a+1
 12004  001BA2  ECCF  F019         	call	_abs	;wreg free
 12005  001BA6  5025               	movf	?_abs^0,w,c
 12006  001BA8  0F30               	addlw	48
 12007  001BAA  6EDF               	movwf	indf2,c
 12008  001BAC                     
 12009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12010  001BAC  0100               	movlb	0	; () banked
 12011  001BAE  076A               	decf	dtoa@p& (0+255),f,b
 12012  001BB0  A0D8               	btfss	status,0,c
 12013  001BB2  076B               	decf	(dtoa@p+1)& (0+255),f,b
 12014  001BB4                     
 12015                           ; BSR set to: 0
 12016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12017  001BB4  076C               	decf	dtoa@w& (0+255),f,b
 12018  001BB6  A0D8               	btfss	status,0,c
 12019  001BB8  076D               	decf	(dtoa@w+1)& (0+255),f,b
 12020  001BBA                     
 12021                           ; BSR set to: 0
 12022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12023  001BBA  C070  F013         	movff	dtoa@n,___aodiv@dividend
 12024  001BBE  C071  F014         	movff	dtoa@n+1,___aodiv@dividend+1
 12025  001BC2  C072  F015         	movff	dtoa@n+2,___aodiv@dividend+2
 12026  001BC6  C073  F016         	movff	dtoa@n+3,___aodiv@dividend+3
 12027  001BCA  C074  F017         	movff	dtoa@n+4,___aodiv@dividend+4
 12028  001BCE  C075  F018         	movff	dtoa@n+5,___aodiv@dividend+5
 12029  001BD2  C076  F019         	movff	dtoa@n+6,___aodiv@dividend+6
 12030  001BD6  C077  F01A         	movff	dtoa@n+7,___aodiv@dividend+7
 12031  001BDA  0E0A               	movlw	10
 12032  001BDC  6E1B               	movwf	___aodiv@divisor^0,c
 12033  001BDE  0E00               	movlw	0
 12034  001BE0  6E1C               	movwf	(___aodiv@divisor+1)^0,c
 12035  001BE2  0E00               	movlw	0
 12036  001BE4  6E1D               	movwf	(___aodiv@divisor+2)^0,c
 12037  001BE6  0E00               	movlw	0
 12038  001BE8  6E1E               	movwf	(___aodiv@divisor+3)^0,c
 12039  001BEA  0E00               	movlw	0
 12040  001BEC  6E1F               	movwf	(___aodiv@divisor+4)^0,c
 12041  001BEE  0E00               	movlw	0
 12042  001BF0  6E20               	movwf	(___aodiv@divisor+5)^0,c
 12043  001BF2  0E00               	movlw	0
 12044  001BF4  6E21               	movwf	(___aodiv@divisor+6)^0,c
 12045  001BF6  0E00               	movlw	0
 12046  001BF8  6E22               	movwf	(___aodiv@divisor+7)^0,c
 12047  001BFA  ECBC  F013         	call	___aodiv	;wreg free
 12048  001BFE  C013  F070         	movff	?___aodiv,dtoa@n
 12049  001C02  C014  F071         	movff	?___aodiv+1,dtoa@n+1
 12050  001C06  C015  F072         	movff	?___aodiv+2,dtoa@n+2
 12051  001C0A  C016  F073         	movff	?___aodiv+3,dtoa@n+3
 12052  001C0E  C017  F074         	movff	?___aodiv+4,dtoa@n+4
 12053  001C12  C018  F075         	movff	?___aodiv+5,dtoa@n+5
 12054  001C16  C019  F076         	movff	?___aodiv+6,dtoa@n+6
 12055  001C1A  C01A  F077         	movff	?___aodiv+7,dtoa@n+7
 12056  001C1E                     l5243:
 12057                           
 12058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12059  001C1E  0100               	movlb	0	; () banked
 12060  001C20  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
 12061  001C22  EF1B  F00E         	goto	u5101
 12062  001C26  5179               	movf	(dtoa@i+1)& (0+255),w,b
 12063  001C28  E108               	bnz	u5100
 12064  001C2A  0578               	decf	dtoa@i& (0+255),w,b
 12065  001C2C  A0D8               	btfss	status,0,c
 12066  001C2E  EF1B  F00E         	goto	u5101
 12067  001C32  EF1D  F00E         	goto	u5100
 12068  001C36                     u5101:
 12069  001C36  EF4D  F00E         	goto	l5253
 12070  001C3A                     u5100:
 12071  001C3A                     
 12072                           ; BSR set to: 0
 12073  001C3A  5170               	movf	dtoa@n& (0+255),w,b
 12074  001C3C  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
 12075  001C3E  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
 12076  001C40  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
 12077  001C42  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
 12078  001C44  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
 12079  001C46  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
 12080  001C48  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
 12081  001C4A  A4D8               	btfss	status,2,c
 12082  001C4C  EF2A  F00E         	goto	u5111
 12083  001C50  EF2C  F00E         	goto	u5110
 12084  001C54                     u5111:
 12085  001C54  EF92  F00D         	goto	l5233
 12086  001C58                     u5110:
 12087  001C58                     
 12088                           ; BSR set to: 0
 12089  001C58  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
 12090  001C5A  EF39  F00E         	goto	u5120
 12091  001C5E  516B               	movf	(dtoa@p+1)& (0+255),w,b
 12092  001C60  E106               	bnz	u5121
 12093  001C62  056A               	decf	dtoa@p& (0+255),w,b
 12094  001C64  B0D8               	btfsc	status,0,c
 12095  001C66  EF37  F00E         	goto	u5121
 12096  001C6A  EF39  F00E         	goto	u5120
 12097  001C6E                     u5121:
 12098  001C6E  EF92  F00D         	goto	l5233
 12099  001C72                     u5120:
 12100  001C72                     
 12101                           ; BSR set to: 0
 12102  001C72  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
 12103  001C74  EF44  F00E         	goto	u5131
 12104  001C78  516D               	movf	(dtoa@w+1)& (0+255),w,b
 12105  001C7A  E108               	bnz	u5130
 12106  001C7C  056C               	decf	dtoa@w& (0+255),w,b
 12107  001C7E  A0D8               	btfss	status,0,c
 12108  001C80  EF44  F00E         	goto	u5131
 12109  001C84  EF46  F00E         	goto	u5130
 12110  001C88                     u5131:
 12111  001C88  EF4D  F00E         	goto	l5253
 12112  001C8C                     u5130:
 12113  001C8C                     
 12114                           ; BSR set to: 0
 12115  001C8C  B23F               	btfsc	_flags^0,1,c
 12116  001C8E  EF4B  F00E         	goto	u5141
 12117  001C92  EF4D  F00E         	goto	u5140
 12118  001C96                     u5141:
 12119  001C96  EF92  F00D         	goto	l5233
 12120  001C9A                     u5140:
 12121  001C9A                     l5253:
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12125  001C9A  516E               	movf	dtoa@s& (0+255),w,b
 12126  001C9C  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 12127  001C9E  A4D8               	btfss	status,2,c
 12128  001CA0  EF54  F00E         	goto	u5151
 12129  001CA4  EF56  F00E         	goto	u5150
 12130  001CA8                     u5151:
 12131  001CA8  EF5D  F00E         	goto	l5257
 12132  001CAC                     u5150:
 12133  001CAC                     
 12134                           ; BSR set to: 0
 12135  001CAC  A43F               	btfss	_flags^0,2,c
 12136  001CAE  EF5B  F00E         	goto	u5161
 12137  001CB2  EF5D  F00E         	goto	u5160
 12138  001CB6                     u5161:
 12139  001CB6  EF7B  F00E         	goto	l5267
 12140  001CBA                     u5160:
 12141  001CBA                     l5257:
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12145  001CBA  0778               	decf	dtoa@i& (0+255),f,b
 12146  001CBC  A0D8               	btfss	status,0,c
 12147  001CBE  0779               	decf	(dtoa@i+1)& (0+255),f,b
 12148  001CC0                     
 12149                           ; BSR set to: 0
 12150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12151  001CC0  516E               	movf	dtoa@s& (0+255),w,b
 12152  001CC2  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 12153  001CC4  A4D8               	btfss	status,2,c
 12154  001CC6  EF67  F00E         	goto	u5171
 12155  001CCA  EF69  F00E         	goto	u5170
 12156  001CCE                     u5171:
 12157  001CCE  EF6F  F00E         	goto	l5263
 12158  001CD2                     u5170:
 12159  001CD2                     
 12160                           ; BSR set to: 0
 12161  001CD2  0E00               	movlw	0
 12162  001CD4  6F69               	movwf	(_dtoa$1980+1)& (0+255),b
 12163  001CD6  0E2B               	movlw	43
 12164  001CD8  6F68               	movwf	_dtoa$1980& (0+255),b
 12165  001CDA  EF73  F00E         	goto	l5265
 12166  001CDE                     l5263:
 12167                           
 12168                           ; BSR set to: 0
 12169  001CDE  0E00               	movlw	0
 12170  001CE0  6F69               	movwf	(_dtoa$1980+1)& (0+255),b
 12171  001CE2  0E2D               	movlw	45
 12172  001CE4  6F68               	movwf	_dtoa$1980& (0+255),b
 12173  001CE6                     l5265:
 12174                           
 12175                           ; BSR set to: 0
 12176  001CE6  0E80               	movlw	low _dbuf
 12177  001CE8  2578               	addwf	dtoa@i& (0+255),w,b
 12178  001CEA  6ED9               	movwf	fsr2l,c
 12179  001CEC  0E01               	movlw	high _dbuf
 12180  001CEE  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 12181  001CF0  6EDA               	movwf	fsr2h,c
 12182  001CF2  C068  FFDF         	movff	_dtoa$1980,indf2
 12183  001CF6                     l5267:
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12187  001CF6  C030  F025         	movff	dtoa@fp,pad@fp
 12188  001CFA  C031  F026         	movff	dtoa@fp+1,pad@fp+1
 12189  001CFE  0E80               	movlw	low _dbuf
 12190  001D00  2578               	addwf	dtoa@i& (0+255),w,b
 12191  001D02  6E27               	movwf	pad@buf^0,c
 12192  001D04  0E01               	movlw	high _dbuf
 12193  001D06  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 12194  001D08  6E28               	movwf	(pad@buf+1)^0,c
 12195  001D0A  C06C  F029         	movff	dtoa@w,pad@p
 12196  001D0E  C06D  F02A         	movff	dtoa@w+1,pad@p+1
 12197  001D12  ECCE  F016         	call	_pad	;wreg free
 12198  001D16  C025  F030         	movff	?_pad,?_dtoa
 12199  001D1A  C026  F031         	movff	?_pad+1,?_dtoa+1
 12200  001D1E  0012               	return		;funcret
 12201  001D20                     __end_of_dtoa:
 12202                           	callstack 0
 12203                           
 12204 ;; *************** function _abs *****************
 12205 ;; Defined at:
 12206 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;  a               2   36[COMRAM] int 
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  2   36[COMRAM] int 
 12213 ;; Registers used:
 12214 ;;		wreg, status,2, status,0
 12215 ;; Tracked objects:
 12216 ;;		On entry : 0/0
 12217 ;;		On exit  : 0/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12223 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12224 ;;Total ram usage:        4 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:    4
 12227 ;; This function calls:
 12228 ;;		Nothing
 12229 ;; This function is called by:
 12230 ;;		_dtoa
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text38
 12235  00339E                     __ptext38:
 12236                           	callstack 0
 12237  00339E                     _abs:
 12238                           	callstack 22
 12239  00339E  BE26               	btfsc	(abs@a+1)^0,7,c
 12240  0033A0  EFDC  F019         	goto	u4900
 12241  0033A4  5026               	movf	(abs@a+1)^0,w,c
 12242  0033A6  E106               	bnz	u4901
 12243  0033A8  0425               	decf	abs@a^0,w,c
 12244  0033AA  B0D8               	btfsc	status,0,c
 12245  0033AC  EFDA  F019         	goto	u4901
 12246  0033B0  EFDC  F019         	goto	u4900
 12247  0033B4                     u4901:
 12248  0033B4  EFEA  F019         	goto	l1564
 12249  0033B8                     u4900:
 12250  0033B8  C025  F027         	movff	abs@a,??_abs
 12251  0033BC  C026  F028         	movff	abs@a+1,??_abs+1
 12252  0033C0  1E27               	comf	??_abs^0,f,c
 12253  0033C2  1E28               	comf	(??_abs+1)^0,f,c
 12254  0033C4  4A27               	infsnz	??_abs^0,f,c
 12255  0033C6  2A28               	incf	(??_abs+1)^0,f,c
 12256  0033C8  C027  F025         	movff	??_abs,?_abs
 12257  0033CC  C028  F026         	movff	??_abs+1,?_abs+1
 12258  0033D0  EFEE  F019         	goto	l1567
 12259  0033D4                     l1564:
 12260  0033D4  C025  F025         	movff	abs@a,?_abs
 12261  0033D8  C026  F026         	movff	abs@a+1,?_abs+1
 12262  0033DC                     l1567:
 12263  0033DC  0012               	return		;funcret
 12264  0033DE                     __end_of_abs:
 12265                           	callstack 0
 12266                           
 12267 ;; *************** function ___aomod *****************
 12268 ;; Defined at:
 12269 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;  dividend        8   18[COMRAM] long long 
 12272 ;;  divisor         8   26[COMRAM] long long 
 12273 ;; Auto vars:     Size  Location     Type
 12274 ;;  sign            1   35[COMRAM] unsigned char 
 12275 ;;  counter         1   34[COMRAM] unsigned char 
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  8   18[COMRAM] long long 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2, status,0
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12285 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12288 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12289 ;;Total ram usage:       18 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:    4
 12292 ;; This function calls:
 12293 ;;		Nothing
 12294 ;; This function is called by:
 12295 ;;		_dtoa
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           	psect	text39
 12300  002A78                     __ptext39:
 12301                           	callstack 0
 12302  002A78                     ___aomod:
 12303                           	callstack 22
 12304  002A78  0E00               	movlw	0
 12305  002A7A  6E24               	movwf	___aomod@sign^0,c
 12306  002A7C  BE1A               	btfsc	(___aomod@dividend+7)^0,7,c
 12307  002A7E  EF45  F015         	goto	u4730
 12308  002A82  EF43  F015         	goto	u4731
 12309  002A86                     u4731:
 12310  002A86  EF57  F015         	goto	l5069
 12311  002A8A                     u4730:
 12312  002A8A  1E1A               	comf	(___aomod@dividend+7)^0,f,c
 12313  002A8C  1E19               	comf	(___aomod@dividend+6)^0,f,c
 12314  002A8E  1E18               	comf	(___aomod@dividend+5)^0,f,c
 12315  002A90  1E17               	comf	(___aomod@dividend+4)^0,f,c
 12316  002A92  1E16               	comf	(___aomod@dividend+3)^0,f,c
 12317  002A94  1E15               	comf	(___aomod@dividend+2)^0,f,c
 12318  002A96  1E14               	comf	(___aomod@dividend+1)^0,f,c
 12319  002A98  6C13               	negf	___aomod@dividend^0,c
 12320  002A9A  0E00               	movlw	0
 12321  002A9C  2214               	addwfc	(___aomod@dividend+1)^0,f,c
 12322  002A9E  2215               	addwfc	(___aomod@dividend+2)^0,f,c
 12323  002AA0  2216               	addwfc	(___aomod@dividend+3)^0,f,c
 12324  002AA2  2217               	addwfc	(___aomod@dividend+4)^0,f,c
 12325  002AA4  2218               	addwfc	(___aomod@dividend+5)^0,f,c
 12326  002AA6  2219               	addwfc	(___aomod@dividend+6)^0,f,c
 12327  002AA8  221A               	addwfc	(___aomod@dividend+7)^0,f,c
 12328  002AAA  0E01               	movlw	1
 12329  002AAC  6E24               	movwf	___aomod@sign^0,c
 12330  002AAE                     l5069:
 12331  002AAE  BE22               	btfsc	(___aomod@divisor+7)^0,7,c
 12332  002AB0  EF5E  F015         	goto	u4740
 12333  002AB4  EF5C  F015         	goto	u4741
 12334  002AB8                     u4741:
 12335  002AB8  EF6E  F015         	goto	l5073
 12336  002ABC                     u4740:
 12337  002ABC  1E22               	comf	(___aomod@divisor+7)^0,f,c
 12338  002ABE  1E21               	comf	(___aomod@divisor+6)^0,f,c
 12339  002AC0  1E20               	comf	(___aomod@divisor+5)^0,f,c
 12340  002AC2  1E1F               	comf	(___aomod@divisor+4)^0,f,c
 12341  002AC4  1E1E               	comf	(___aomod@divisor+3)^0,f,c
 12342  002AC6  1E1D               	comf	(___aomod@divisor+2)^0,f,c
 12343  002AC8  1E1C               	comf	(___aomod@divisor+1)^0,f,c
 12344  002ACA  6C1B               	negf	___aomod@divisor^0,c
 12345  002ACC  0E00               	movlw	0
 12346  002ACE  221C               	addwfc	(___aomod@divisor+1)^0,f,c
 12347  002AD0  221D               	addwfc	(___aomod@divisor+2)^0,f,c
 12348  002AD2  221E               	addwfc	(___aomod@divisor+3)^0,f,c
 12349  002AD4  221F               	addwfc	(___aomod@divisor+4)^0,f,c
 12350  002AD6  2220               	addwfc	(___aomod@divisor+5)^0,f,c
 12351  002AD8  2221               	addwfc	(___aomod@divisor+6)^0,f,c
 12352  002ADA  2222               	addwfc	(___aomod@divisor+7)^0,f,c
 12353  002ADC                     l5073:
 12354  002ADC  501B               	movf	___aomod@divisor^0,w,c
 12355  002ADE  101C               	iorwf	(___aomod@divisor+1)^0,w,c
 12356  002AE0  101D               	iorwf	(___aomod@divisor+2)^0,w,c
 12357  002AE2  101E               	iorwf	(___aomod@divisor+3)^0,w,c
 12358  002AE4  101F               	iorwf	(___aomod@divisor+4)^0,w,c
 12359  002AE6  1020               	iorwf	(___aomod@divisor+5)^0,w,c
 12360  002AE8  1021               	iorwf	(___aomod@divisor+6)^0,w,c
 12361  002AEA  1022               	iorwf	(___aomod@divisor+7)^0,w,c
 12362  002AEC  B4D8               	btfsc	status,2,c
 12363  002AEE  EF7B  F015         	goto	u4751
 12364  002AF2  EF7D  F015         	goto	u4750
 12365  002AF6                     u4751:
 12366  002AF6  EFC5  F015         	goto	l5089
 12367  002AFA                     u4750:
 12368  002AFA  0E01               	movlw	1
 12369  002AFC  6E23               	movwf	___aomod@counter^0,c
 12370  002AFE  EF8B  F015         	goto	l5079
 12371  002B02                     l5077:
 12372  002B02  90D8               	bcf	status,0,c
 12373  002B04  361B               	rlcf	___aomod@divisor^0,f,c
 12374  002B06  361C               	rlcf	(___aomod@divisor+1)^0,f,c
 12375  002B08  361D               	rlcf	(___aomod@divisor+2)^0,f,c
 12376  002B0A  361E               	rlcf	(___aomod@divisor+3)^0,f,c
 12377  002B0C  361F               	rlcf	(___aomod@divisor+4)^0,f,c
 12378  002B0E  3620               	rlcf	(___aomod@divisor+5)^0,f,c
 12379  002B10  3621               	rlcf	(___aomod@divisor+6)^0,f,c
 12380  002B12  3622               	rlcf	(___aomod@divisor+7)^0,f,c
 12381  002B14  2A23               	incf	___aomod@counter^0,f,c
 12382  002B16                     l5079:
 12383  002B16  AE22               	btfss	(___aomod@divisor+7)^0,7,c
 12384  002B18  EF90  F015         	goto	u4761
 12385  002B1C  EF92  F015         	goto	u4760
 12386  002B20                     u4761:
 12387  002B20  EF81  F015         	goto	l5077
 12388  002B24                     u4760:
 12389  002B24                     l5081:
 12390  002B24  501B               	movf	___aomod@divisor^0,w,c
 12391  002B26  5C13               	subwf	___aomod@dividend^0,w,c
 12392  002B28  501C               	movf	(___aomod@divisor+1)^0,w,c
 12393  002B2A  5814               	subwfb	(___aomod@dividend+1)^0,w,c
 12394  002B2C  501D               	movf	(___aomod@divisor+2)^0,w,c
 12395  002B2E  5815               	subwfb	(___aomod@dividend+2)^0,w,c
 12396  002B30  501E               	movf	(___aomod@divisor+3)^0,w,c
 12397  002B32  5816               	subwfb	(___aomod@dividend+3)^0,w,c
 12398  002B34  501F               	movf	(___aomod@divisor+4)^0,w,c
 12399  002B36  5817               	subwfb	(___aomod@dividend+4)^0,w,c
 12400  002B38  5020               	movf	(___aomod@divisor+5)^0,w,c
 12401  002B3A  5818               	subwfb	(___aomod@dividend+5)^0,w,c
 12402  002B3C  5021               	movf	(___aomod@divisor+6)^0,w,c
 12403  002B3E  5819               	subwfb	(___aomod@dividend+6)^0,w,c
 12404  002B40  5022               	movf	(___aomod@divisor+7)^0,w,c
 12405  002B42  581A               	subwfb	(___aomod@dividend+7)^0,w,c
 12406  002B44  A0D8               	btfss	status,0,c
 12407  002B46  EFA7  F015         	goto	u4771
 12408  002B4A  EFA9  F015         	goto	u4770
 12409  002B4E                     u4771:
 12410  002B4E  EFB9  F015         	goto	l5085
 12411  002B52                     u4770:
 12412  002B52  501B               	movf	___aomod@divisor^0,w,c
 12413  002B54  5E13               	subwf	___aomod@dividend^0,f,c
 12414  002B56  501C               	movf	(___aomod@divisor+1)^0,w,c
 12415  002B58  5A14               	subwfb	(___aomod@dividend+1)^0,f,c
 12416  002B5A  501D               	movf	(___aomod@divisor+2)^0,w,c
 12417  002B5C  5A15               	subwfb	(___aomod@dividend+2)^0,f,c
 12418  002B5E  501E               	movf	(___aomod@divisor+3)^0,w,c
 12419  002B60  5A16               	subwfb	(___aomod@dividend+3)^0,f,c
 12420  002B62  501F               	movf	(___aomod@divisor+4)^0,w,c
 12421  002B64  5A17               	subwfb	(___aomod@dividend+4)^0,f,c
 12422  002B66  5020               	movf	(___aomod@divisor+5)^0,w,c
 12423  002B68  5A18               	subwfb	(___aomod@dividend+5)^0,f,c
 12424  002B6A  5021               	movf	(___aomod@divisor+6)^0,w,c
 12425  002B6C  5A19               	subwfb	(___aomod@dividend+6)^0,f,c
 12426  002B6E  5022               	movf	(___aomod@divisor+7)^0,w,c
 12427  002B70  5A1A               	subwfb	(___aomod@dividend+7)^0,f,c
 12428  002B72                     l5085:
 12429  002B72  90D8               	bcf	status,0,c
 12430  002B74  3222               	rrcf	(___aomod@divisor+7)^0,f,c
 12431  002B76  3221               	rrcf	(___aomod@divisor+6)^0,f,c
 12432  002B78  3220               	rrcf	(___aomod@divisor+5)^0,f,c
 12433  002B7A  321F               	rrcf	(___aomod@divisor+4)^0,f,c
 12434  002B7C  321E               	rrcf	(___aomod@divisor+3)^0,f,c
 12435  002B7E  321D               	rrcf	(___aomod@divisor+2)^0,f,c
 12436  002B80  321C               	rrcf	(___aomod@divisor+1)^0,f,c
 12437  002B82  321B               	rrcf	___aomod@divisor^0,f,c
 12438  002B84  2E23               	decfsz	___aomod@counter^0,f,c
 12439  002B86  EF92  F015         	goto	l5081
 12440  002B8A                     l5089:
 12441  002B8A  5024               	movf	___aomod@sign^0,w,c
 12442  002B8C  B4D8               	btfsc	status,2,c
 12443  002B8E  EFCB  F015         	goto	u4781
 12444  002B92  EFCD  F015         	goto	u4780
 12445  002B96                     u4781:
 12446  002B96  EFDD  F015         	goto	l5093
 12447  002B9A                     u4780:
 12448  002B9A  1E1A               	comf	(___aomod@dividend+7)^0,f,c
 12449  002B9C  1E19               	comf	(___aomod@dividend+6)^0,f,c
 12450  002B9E  1E18               	comf	(___aomod@dividend+5)^0,f,c
 12451  002BA0  1E17               	comf	(___aomod@dividend+4)^0,f,c
 12452  002BA2  1E16               	comf	(___aomod@dividend+3)^0,f,c
 12453  002BA4  1E15               	comf	(___aomod@dividend+2)^0,f,c
 12454  002BA6  1E14               	comf	(___aomod@dividend+1)^0,f,c
 12455  002BA8  6C13               	negf	___aomod@dividend^0,c
 12456  002BAA  0E00               	movlw	0
 12457  002BAC  2214               	addwfc	(___aomod@dividend+1)^0,f,c
 12458  002BAE  2215               	addwfc	(___aomod@dividend+2)^0,f,c
 12459  002BB0  2216               	addwfc	(___aomod@dividend+3)^0,f,c
 12460  002BB2  2217               	addwfc	(___aomod@dividend+4)^0,f,c
 12461  002BB4  2218               	addwfc	(___aomod@dividend+5)^0,f,c
 12462  002BB6  2219               	addwfc	(___aomod@dividend+6)^0,f,c
 12463  002BB8  221A               	addwfc	(___aomod@dividend+7)^0,f,c
 12464  002BBA                     l5093:
 12465  002BBA  C013  F013         	movff	___aomod@dividend,?___aomod
 12466  002BBE  C014  F014         	movff	___aomod@dividend+1,?___aomod+1
 12467  002BC2  C015  F015         	movff	___aomod@dividend+2,?___aomod+2
 12468  002BC6  C016  F016         	movff	___aomod@dividend+3,?___aomod+3
 12469  002BCA  C017  F017         	movff	___aomod@dividend+4,?___aomod+4
 12470  002BCE  C018  F018         	movff	___aomod@dividend+5,?___aomod+5
 12471  002BD2  C019  F019         	movff	___aomod@dividend+6,?___aomod+6
 12472  002BD6  C01A  F01A         	movff	___aomod@dividend+7,?___aomod+7
 12473  002BDA  0012               	return		;funcret
 12474  002BDC                     __end_of___aomod:
 12475                           	callstack 0
 12476                           
 12477 ;; *************** function ___aodiv *****************
 12478 ;; Defined at:
 12479 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 12480 ;; Parameters:    Size  Location     Type
 12481 ;;  dividend        8   18[COMRAM] long long 
 12482 ;;  divisor         8   26[COMRAM] long long 
 12483 ;; Auto vars:     Size  Location     Type
 12484 ;;  quotient        8   36[COMRAM] long long 
 12485 ;;  sign            1   35[COMRAM] unsigned char 
 12486 ;;  counter         1   34[COMRAM] unsigned char 
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  8   18[COMRAM] long long 
 12489 ;; Registers used:
 12490 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12496 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12497 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12500 ;;Total ram usage:       26 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    4
 12503 ;; This function calls:
 12504 ;;		Nothing
 12505 ;; This function is called by:
 12506 ;;		_dtoa
 12507 ;; This function uses a non-reentrant model
 12508 ;;
 12509                           
 12510                           	psect	text40
 12511  002778                     __ptext40:
 12512                           	callstack 0
 12513  002778                     ___aodiv:
 12514                           	callstack 22
 12515  002778  0E00               	movlw	0
 12516  00277A  6E24               	movwf	___aodiv@sign^0,c
 12517  00277C  BE22               	btfsc	(___aodiv@divisor+7)^0,7,c
 12518  00277E  EFC5  F013         	goto	u4660
 12519  002782  EFC3  F013         	goto	u4661
 12520  002786                     u4661:
 12521  002786  EFD7  F013         	goto	l5025
 12522  00278A                     u4660:
 12523  00278A  1E22               	comf	(___aodiv@divisor+7)^0,f,c
 12524  00278C  1E21               	comf	(___aodiv@divisor+6)^0,f,c
 12525  00278E  1E20               	comf	(___aodiv@divisor+5)^0,f,c
 12526  002790  1E1F               	comf	(___aodiv@divisor+4)^0,f,c
 12527  002792  1E1E               	comf	(___aodiv@divisor+3)^0,f,c
 12528  002794  1E1D               	comf	(___aodiv@divisor+2)^0,f,c
 12529  002796  1E1C               	comf	(___aodiv@divisor+1)^0,f,c
 12530  002798  6C1B               	negf	___aodiv@divisor^0,c
 12531  00279A  0E00               	movlw	0
 12532  00279C  221C               	addwfc	(___aodiv@divisor+1)^0,f,c
 12533  00279E  221D               	addwfc	(___aodiv@divisor+2)^0,f,c
 12534  0027A0  221E               	addwfc	(___aodiv@divisor+3)^0,f,c
 12535  0027A2  221F               	addwfc	(___aodiv@divisor+4)^0,f,c
 12536  0027A4  2220               	addwfc	(___aodiv@divisor+5)^0,f,c
 12537  0027A6  2221               	addwfc	(___aodiv@divisor+6)^0,f,c
 12538  0027A8  2222               	addwfc	(___aodiv@divisor+7)^0,f,c
 12539  0027AA  0E01               	movlw	1
 12540  0027AC  6E24               	movwf	___aodiv@sign^0,c
 12541  0027AE                     l5025:
 12542  0027AE  BE1A               	btfsc	(___aodiv@dividend+7)^0,7,c
 12543  0027B0  EFDE  F013         	goto	u4670
 12544  0027B4  EFDC  F013         	goto	u4671
 12545  0027B8                     u4671:
 12546  0027B8  EFF0  F013         	goto	l5031
 12547  0027BC                     u4670:
 12548  0027BC  1E1A               	comf	(___aodiv@dividend+7)^0,f,c
 12549  0027BE  1E19               	comf	(___aodiv@dividend+6)^0,f,c
 12550  0027C0  1E18               	comf	(___aodiv@dividend+5)^0,f,c
 12551  0027C2  1E17               	comf	(___aodiv@dividend+4)^0,f,c
 12552  0027C4  1E16               	comf	(___aodiv@dividend+3)^0,f,c
 12553  0027C6  1E15               	comf	(___aodiv@dividend+2)^0,f,c
 12554  0027C8  1E14               	comf	(___aodiv@dividend+1)^0,f,c
 12555  0027CA  6C13               	negf	___aodiv@dividend^0,c
 12556  0027CC  0E00               	movlw	0
 12557  0027CE  2214               	addwfc	(___aodiv@dividend+1)^0,f,c
 12558  0027D0  2215               	addwfc	(___aodiv@dividend+2)^0,f,c
 12559  0027D2  2216               	addwfc	(___aodiv@dividend+3)^0,f,c
 12560  0027D4  2217               	addwfc	(___aodiv@dividend+4)^0,f,c
 12561  0027D6  2218               	addwfc	(___aodiv@dividend+5)^0,f,c
 12562  0027D8  2219               	addwfc	(___aodiv@dividend+6)^0,f,c
 12563  0027DA  221A               	addwfc	(___aodiv@dividend+7)^0,f,c
 12564  0027DC  0E01               	movlw	1
 12565  0027DE  1A24               	xorwf	___aodiv@sign^0,f,c
 12566  0027E0                     l5031:
 12567  0027E0  EE20  F025         	lfsr	2,___aodiv@quotient
 12568  0027E4  0E07               	movlw	7
 12569  0027E6                     u4681:
 12570  0027E6  6ADE               	clrf	postinc2,c
 12571  0027E8  06E8               	decf	wreg,f,c
 12572  0027EA  E2FD               	bc	u4681
 12573  0027EC  501B               	movf	___aodiv@divisor^0,w,c
 12574  0027EE  101C               	iorwf	(___aodiv@divisor+1)^0,w,c
 12575  0027F0  101D               	iorwf	(___aodiv@divisor+2)^0,w,c
 12576  0027F2  101E               	iorwf	(___aodiv@divisor+3)^0,w,c
 12577  0027F4  101F               	iorwf	(___aodiv@divisor+4)^0,w,c
 12578  0027F6  1020               	iorwf	(___aodiv@divisor+5)^0,w,c
 12579  0027F8  1021               	iorwf	(___aodiv@divisor+6)^0,w,c
 12580  0027FA  1022               	iorwf	(___aodiv@divisor+7)^0,w,c
 12581  0027FC  B4D8               	btfsc	status,2,c
 12582  0027FE  EF03  F014         	goto	u4691
 12583  002802  EF05  F014         	goto	u4690
 12584  002806                     u4691:
 12585  002806  EF57  F014         	goto	l5053
 12586  00280A                     u4690:
 12587  00280A  0E01               	movlw	1
 12588  00280C  6E23               	movwf	___aodiv@counter^0,c
 12589  00280E  EF13  F014         	goto	l5039
 12590  002812                     l5037:
 12591  002812  90D8               	bcf	status,0,c
 12592  002814  361B               	rlcf	___aodiv@divisor^0,f,c
 12593  002816  361C               	rlcf	(___aodiv@divisor+1)^0,f,c
 12594  002818  361D               	rlcf	(___aodiv@divisor+2)^0,f,c
 12595  00281A  361E               	rlcf	(___aodiv@divisor+3)^0,f,c
 12596  00281C  361F               	rlcf	(___aodiv@divisor+4)^0,f,c
 12597  00281E  3620               	rlcf	(___aodiv@divisor+5)^0,f,c
 12598  002820  3621               	rlcf	(___aodiv@divisor+6)^0,f,c
 12599  002822  3622               	rlcf	(___aodiv@divisor+7)^0,f,c
 12600  002824  2A23               	incf	___aodiv@counter^0,f,c
 12601  002826                     l5039:
 12602  002826  AE22               	btfss	(___aodiv@divisor+7)^0,7,c
 12603  002828  EF18  F014         	goto	u4701
 12604  00282C  EF1A  F014         	goto	u4700
 12605  002830                     u4701:
 12606  002830  EF09  F014         	goto	l5037
 12607  002834                     u4700:
 12608  002834                     l5041:
 12609  002834  90D8               	bcf	status,0,c
 12610  002836  3625               	rlcf	___aodiv@quotient^0,f,c
 12611  002838  3626               	rlcf	(___aodiv@quotient+1)^0,f,c
 12612  00283A  3627               	rlcf	(___aodiv@quotient+2)^0,f,c
 12613  00283C  3628               	rlcf	(___aodiv@quotient+3)^0,f,c
 12614  00283E  3629               	rlcf	(___aodiv@quotient+4)^0,f,c
 12615  002840  362A               	rlcf	(___aodiv@quotient+5)^0,f,c
 12616  002842  362B               	rlcf	(___aodiv@quotient+6)^0,f,c
 12617  002844  362C               	rlcf	(___aodiv@quotient+7)^0,f,c
 12618  002846  501B               	movf	___aodiv@divisor^0,w,c
 12619  002848  5C13               	subwf	___aodiv@dividend^0,w,c
 12620  00284A  501C               	movf	(___aodiv@divisor+1)^0,w,c
 12621  00284C  5814               	subwfb	(___aodiv@dividend+1)^0,w,c
 12622  00284E  501D               	movf	(___aodiv@divisor+2)^0,w,c
 12623  002850  5815               	subwfb	(___aodiv@dividend+2)^0,w,c
 12624  002852  501E               	movf	(___aodiv@divisor+3)^0,w,c
 12625  002854  5816               	subwfb	(___aodiv@dividend+3)^0,w,c
 12626  002856  501F               	movf	(___aodiv@divisor+4)^0,w,c
 12627  002858  5817               	subwfb	(___aodiv@dividend+4)^0,w,c
 12628  00285A  5020               	movf	(___aodiv@divisor+5)^0,w,c
 12629  00285C  5818               	subwfb	(___aodiv@dividend+5)^0,w,c
 12630  00285E  5021               	movf	(___aodiv@divisor+6)^0,w,c
 12631  002860  5819               	subwfb	(___aodiv@dividend+6)^0,w,c
 12632  002862  5022               	movf	(___aodiv@divisor+7)^0,w,c
 12633  002864  581A               	subwfb	(___aodiv@dividend+7)^0,w,c
 12634  002866  A0D8               	btfss	status,0,c
 12635  002868  EF38  F014         	goto	u4711
 12636  00286C  EF3A  F014         	goto	u4710
 12637  002870                     u4711:
 12638  002870  EF4B  F014         	goto	l5049
 12639  002874                     u4710:
 12640  002874  501B               	movf	___aodiv@divisor^0,w,c
 12641  002876  5E13               	subwf	___aodiv@dividend^0,f,c
 12642  002878  501C               	movf	(___aodiv@divisor+1)^0,w,c
 12643  00287A  5A14               	subwfb	(___aodiv@dividend+1)^0,f,c
 12644  00287C  501D               	movf	(___aodiv@divisor+2)^0,w,c
 12645  00287E  5A15               	subwfb	(___aodiv@dividend+2)^0,f,c
 12646  002880  501E               	movf	(___aodiv@divisor+3)^0,w,c
 12647  002882  5A16               	subwfb	(___aodiv@dividend+3)^0,f,c
 12648  002884  501F               	movf	(___aodiv@divisor+4)^0,w,c
 12649  002886  5A17               	subwfb	(___aodiv@dividend+4)^0,f,c
 12650  002888  5020               	movf	(___aodiv@divisor+5)^0,w,c
 12651  00288A  5A18               	subwfb	(___aodiv@dividend+5)^0,f,c
 12652  00288C  5021               	movf	(___aodiv@divisor+6)^0,w,c
 12653  00288E  5A19               	subwfb	(___aodiv@dividend+6)^0,f,c
 12654  002890  5022               	movf	(___aodiv@divisor+7)^0,w,c
 12655  002892  5A1A               	subwfb	(___aodiv@dividend+7)^0,f,c
 12656  002894  8025               	bsf	___aodiv@quotient^0,0,c
 12657  002896                     l5049:
 12658  002896  90D8               	bcf	status,0,c
 12659  002898  3222               	rrcf	(___aodiv@divisor+7)^0,f,c
 12660  00289A  3221               	rrcf	(___aodiv@divisor+6)^0,f,c
 12661  00289C  3220               	rrcf	(___aodiv@divisor+5)^0,f,c
 12662  00289E  321F               	rrcf	(___aodiv@divisor+4)^0,f,c
 12663  0028A0  321E               	rrcf	(___aodiv@divisor+3)^0,f,c
 12664  0028A2  321D               	rrcf	(___aodiv@divisor+2)^0,f,c
 12665  0028A4  321C               	rrcf	(___aodiv@divisor+1)^0,f,c
 12666  0028A6  321B               	rrcf	___aodiv@divisor^0,f,c
 12667  0028A8  2E23               	decfsz	___aodiv@counter^0,f,c
 12668  0028AA  EF1A  F014         	goto	l5041
 12669  0028AE                     l5053:
 12670  0028AE  5024               	movf	___aodiv@sign^0,w,c
 12671  0028B0  B4D8               	btfsc	status,2,c
 12672  0028B2  EF5D  F014         	goto	u4721
 12673  0028B6  EF5F  F014         	goto	u4720
 12674  0028BA                     u4721:
 12675  0028BA  EF6F  F014         	goto	l5057
 12676  0028BE                     u4720:
 12677  0028BE  1E2C               	comf	(___aodiv@quotient+7)^0,f,c
 12678  0028C0  1E2B               	comf	(___aodiv@quotient+6)^0,f,c
 12679  0028C2  1E2A               	comf	(___aodiv@quotient+5)^0,f,c
 12680  0028C4  1E29               	comf	(___aodiv@quotient+4)^0,f,c
 12681  0028C6  1E28               	comf	(___aodiv@quotient+3)^0,f,c
 12682  0028C8  1E27               	comf	(___aodiv@quotient+2)^0,f,c
 12683  0028CA  1E26               	comf	(___aodiv@quotient+1)^0,f,c
 12684  0028CC  6C25               	negf	___aodiv@quotient^0,c
 12685  0028CE  0E00               	movlw	0
 12686  0028D0  2226               	addwfc	(___aodiv@quotient+1)^0,f,c
 12687  0028D2  2227               	addwfc	(___aodiv@quotient+2)^0,f,c
 12688  0028D4  2228               	addwfc	(___aodiv@quotient+3)^0,f,c
 12689  0028D6  2229               	addwfc	(___aodiv@quotient+4)^0,f,c
 12690  0028D8  222A               	addwfc	(___aodiv@quotient+5)^0,f,c
 12691  0028DA  222B               	addwfc	(___aodiv@quotient+6)^0,f,c
 12692  0028DC  222C               	addwfc	(___aodiv@quotient+7)^0,f,c
 12693  0028DE                     l5057:
 12694  0028DE  C025  F013         	movff	___aodiv@quotient,?___aodiv
 12695  0028E2  C026  F014         	movff	___aodiv@quotient+1,?___aodiv+1
 12696  0028E6  C027  F015         	movff	___aodiv@quotient+2,?___aodiv+2
 12697  0028EA  C028  F016         	movff	___aodiv@quotient+3,?___aodiv+3
 12698  0028EE  C029  F017         	movff	___aodiv@quotient+4,?___aodiv+4
 12699  0028F2  C02A  F018         	movff	___aodiv@quotient+5,?___aodiv+5
 12700  0028F6  C02B  F019         	movff	___aodiv@quotient+6,?___aodiv+6
 12701  0028FA  C02C  F01A         	movff	___aodiv@quotient+7,?___aodiv+7
 12702  0028FE  0012               	return		;funcret
 12703  002900                     __end_of___aodiv:
 12704                           	callstack 0
 12705                           
 12706 ;; *************** function _ctoa *****************
 12707 ;; Defined at:
 12708 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12709 ;; Parameters:    Size  Location     Type
 12710 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 12711 ;;		 -> NULL(0), 
 12712 ;;  c               1   49[COMRAM] unsigned char 
 12713 ;; Auto vars:     Size  Location     Type
 12714 ;;  w               2   50[COMRAM] int 
 12715 ;;  l               2    0        int 
 12716 ;; Return value:  Size  Location     Type
 12717 ;;                  2   47[COMRAM] int 
 12718 ;; Registers used:
 12719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12720 ;; Tracked objects:
 12721 ;;		On entry : 0/0
 12722 ;;		On exit  : 0/0
 12723 ;;		Unchanged: 0/0
 12724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12725 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12728 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12729 ;;Total ram usage:        5 bytes
 12730 ;; Hardware stack levels used:    1
 12731 ;; Hardware stack levels required when called:    9
 12732 ;; This function calls:
 12733 ;;		_pad
 12734 ;; This function is called by:
 12735 ;;		_vfpfcnvrt
 12736 ;; This function uses a non-reentrant model
 12737 ;;
 12738                           
 12739                           	psect	text41
 12740  00326A                     __ptext41:
 12741                           	callstack 0
 12742  00326A                     _ctoa:
 12743                           	callstack 18
 12744  00326A                     
 12745                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 12746  00326A  503B               	movf	_width^0,w,c
 12747  00326C  103C               	iorwf	(_width+1)^0,w,c
 12748  00326E  A4D8               	btfss	status,2,c
 12749  003270  EF3C  F019         	goto	u5021
 12750  003274  EF3E  F019         	goto	u5020
 12751  003278                     u5021:
 12752  003278  EF44  F019         	goto	l5199
 12753  00327C                     u5020:
 12754  00327C  C03B  F033         	movff	_width,ctoa@w
 12755  003280  C03C  F034         	movff	_width+1,ctoa@w+1
 12756  003284  EF4A  F019         	goto	l5201
 12757  003288                     l5199:
 12758  003288  0EFF               	movlw	255
 12759  00328A  243B               	addwf	_width^0,w,c
 12760  00328C  6E33               	movwf	ctoa@w^0,c
 12761  00328E  0EFF               	movlw	255
 12762  003290  203C               	addwfc	(_width+1)^0,w,c
 12763  003292  6E34               	movwf	(ctoa@w+1)^0,c
 12764  003294                     l5201:
 12765                           
 12766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
 12767  003294  C032  F180         	movff	ctoa@c,_dbuf
 12768  003298                     
 12769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
 12770  003298  0E00               	movlw	0
 12771  00329A  0101               	movlb	1	; () banked
 12772  00329C  6F81               	movwf	(_dbuf+1)& (0+255),b
 12773  00329E                     
 12774                           ; BSR set to: 1
 12775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
 12776  00329E  C030  F025         	movff	ctoa@fp,pad@fp
 12777  0032A2  C031  F026         	movff	ctoa@fp+1,pad@fp+1
 12778  0032A6  0E80               	movlw	low _dbuf
 12779  0032A8  6E27               	movwf	pad@buf^0,c
 12780  0032AA  0E01               	movlw	high _dbuf
 12781  0032AC  6E28               	movwf	(pad@buf+1)^0,c
 12782  0032AE  C033  F029         	movff	ctoa@w,pad@p
 12783  0032B2  C034  F02A         	movff	ctoa@w+1,pad@p+1
 12784  0032B6  ECCE  F016         	call	_pad	;wreg free
 12785  0032BA  C025  F030         	movff	?_pad,?_ctoa
 12786  0032BE  C026  F031         	movff	?_pad+1,?_ctoa+1
 12787  0032C2  0012               	return		;funcret
 12788  0032C4                     __end_of_ctoa:
 12789                           	callstack 0
 12790                           
 12791 ;; *************** function _pad *****************
 12792 ;; Defined at:
 12793 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 12796 ;;		 -> NULL(0), 
 12797 ;;  buf             2   38[COMRAM] PTR unsigned char 
 12798 ;;		 -> dbuf(32), 
 12799 ;;  p               2   40[COMRAM] int 
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;  w               2   45[COMRAM] int 
 12802 ;;  i               2   43[COMRAM] int 
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  2   36[COMRAM] int 
 12805 ;; Registers used:
 12806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12807 ;; Tracked objects:
 12808 ;;		On entry : 0/0
 12809 ;;		On exit  : 0/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12812 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12813 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12815 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12816 ;;Total ram usage:       11 bytes
 12817 ;; Hardware stack levels used:    1
 12818 ;; Hardware stack levels required when called:    8
 12819 ;; This function calls:
 12820 ;;		_fputc
 12821 ;;		_fputs
 12822 ;;		_strlen
 12823 ;; This function is called by:
 12824 ;;		_ctoa
 12825 ;;		_dtoa
 12826 ;;		_utoa
 12827 ;;		_xtoa
 12828 ;; This function uses a non-reentrant model
 12829 ;;
 12830                           
 12831                           	psect	text42
 12832  002D9C                     __ptext42:
 12833                           	callstack 0
 12834  002D9C                     _pad:
 12835                           	callstack 18
 12836  002D9C                     
 12837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12838  002D9C  A03F               	btfss	_flags^0,0,c
 12839  002D9E  EFD3  F016         	goto	u4861
 12840  002DA2  EFD5  F016         	goto	u4860
 12841  002DA6                     u4861:
 12842  002DA6  EFDF  F016         	goto	l5139
 12843  002DAA                     u4860:
 12844  002DAA                     
 12845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12846  002DAA  C027  F01E         	movff	pad@buf,fputs@s
 12847  002DAE  C028  F01F         	movff	pad@buf+1,fputs@s+1
 12848  002DB2  C025  F020         	movff	pad@fp,fputs@fp
 12849  002DB6  C026  F021         	movff	pad@fp+1,fputs@fp+1
 12850  002DBA  ECAD  F019         	call	_fputs	;wreg free
 12851  002DBE                     l5139:
 12852                           
 12853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12854  002DBE  BE2A               	btfsc	(pad@p+1)^0,7,c
 12855  002DC0  EFE4  F016         	goto	u4871
 12856  002DC4  EFE6  F016         	goto	u4870
 12857  002DC8                     u4871:
 12858  002DC8  EFEC  F016         	goto	l5143
 12859  002DCC                     u4870:
 12860  002DCC  C029  F02E         	movff	pad@p,pad@w
 12861  002DD0  C02A  F02F         	movff	pad@p+1,pad@w+1
 12862  002DD4  EFF0  F016         	goto	l1436
 12863  002DD8                     l5143:
 12864  002DD8  0E00               	movlw	0
 12865  002DDA  6E2F               	movwf	(pad@w+1)^0,c
 12866  002DDC  0E00               	movlw	0
 12867  002DDE  6E2E               	movwf	pad@w^0,c
 12868  002DE0                     l1436:
 12869                           
 12870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12871  002DE0  0E00               	movlw	0
 12872  002DE2  6E2D               	movwf	(pad@i+1)^0,c
 12873  002DE4  0E00               	movlw	0
 12874  002DE6  6E2C               	movwf	pad@i^0,c
 12875                           
 12876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12877  002DE8  EF02  F017         	goto	l5149
 12878  002DEC                     l5145:
 12879                           
 12880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12881  002DEC  0E00               	movlw	0
 12882  002DEE  6E16               	movwf	(fputc@c+1)^0,c
 12883  002DF0  0E20               	movlw	32
 12884  002DF2  6E15               	movwf	fputc@c^0,c
 12885  002DF4  C025  F017         	movff	pad@fp,fputc@fp
 12886  002DF8  C026  F018         	movff	pad@fp+1,fputc@fp+1
 12887  002DFC  ECD2  F017         	call	_fputc	;wreg free
 12888  002E00                     
 12889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12890  002E00  4A2C               	infsnz	pad@i^0,f,c
 12891  002E02  2A2D               	incf	(pad@i+1)^0,f,c
 12892  002E04                     l5149:
 12893                           
 12894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12895  002E04  502E               	movf	pad@w^0,w,c
 12896  002E06  5C2C               	subwf	pad@i^0,w,c
 12897  002E08  502D               	movf	(pad@i+1)^0,w,c
 12898  002E0A  0A80               	xorlw	128
 12899  002E0C  6E2B               	movwf	??_pad^0,c
 12900  002E0E  502F               	movf	(pad@w+1)^0,w,c
 12901  002E10  0A80               	xorlw	128
 12902  002E12  582B               	subwfb	??_pad^0,w,c
 12903  002E14  A0D8               	btfss	status,0,c
 12904  002E16  EF0F  F017         	goto	u4881
 12905  002E1A  EF11  F017         	goto	u4880
 12906  002E1E                     u4881:
 12907  002E1E  EFF6  F016         	goto	l5145
 12908  002E22                     u4880:
 12909  002E22                     
 12910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12911  002E22  B03F               	btfsc	_flags^0,0,c
 12912  002E24  EF16  F017         	goto	u4891
 12913  002E28  EF18  F017         	goto	u4890
 12914  002E2C                     u4891:
 12915  002E2C  EF22  F017         	goto	l5153
 12916  002E30                     u4890:
 12917  002E30                     
 12918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12919  002E30  C027  F01E         	movff	pad@buf,fputs@s
 12920  002E34  C028  F01F         	movff	pad@buf+1,fputs@s+1
 12921  002E38  C025  F020         	movff	pad@fp,fputs@fp
 12922  002E3C  C026  F021         	movff	pad@fp+1,fputs@fp+1
 12923  002E40  ECAD  F019         	call	_fputs	;wreg free
 12924  002E44                     l5153:
 12925                           
 12926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12927  002E44  C027  F013         	movff	pad@buf,strlen@s
 12928  002E48  C028  F014         	movff	pad@buf+1,strlen@s+1
 12929  002E4C  ECB7  F01A         	call	_strlen	;wreg free
 12930  002E50  502E               	movf	pad@w^0,w,c
 12931  002E52  2413               	addwf	?_strlen^0,w,c
 12932  002E54  6E25               	movwf	?_pad^0,c
 12933  002E56  502F               	movf	(pad@w+1)^0,w,c
 12934  002E58  2014               	addwfc	(?_strlen+1)^0,w,c
 12935  002E5A  6E26               	movwf	(?_pad+1)^0,c
 12936  002E5C  0012               	return		;funcret
 12937  002E5E                     __end_of_pad:
 12938                           	callstack 0
 12939                           
 12940 ;; *************** function _strlen *****************
 12941 ;; Defined at:
 12942 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;  s               2   18[COMRAM] PTR const unsigned char 
 12945 ;;		 -> dbuf(32), 
 12946 ;; Auto vars:     Size  Location     Type
 12947 ;;  a               2   20[COMRAM] PTR const unsigned char 
 12948 ;;		 -> dbuf(32), 
 12949 ;; Return value:  Size  Location     Type
 12950 ;;                  2   18[COMRAM] unsigned int 
 12951 ;; Registers used:
 12952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12953 ;; Tracked objects:
 12954 ;;		On entry : 0/0
 12955 ;;		On exit  : 0/0
 12956 ;;		Unchanged: 0/0
 12957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12962 ;;Total ram usage:        4 bytes
 12963 ;; Hardware stack levels used:    1
 12964 ;; Hardware stack levels required when called:    4
 12965 ;; This function calls:
 12966 ;;		Nothing
 12967 ;; This function is called by:
 12968 ;;		_pad
 12969 ;; This function uses a non-reentrant model
 12970 ;;
 12971                           
 12972                           	psect	text43
 12973  00356E                     __ptext43:
 12974                           	callstack 0
 12975  00356E                     _strlen:
 12976                           	callstack 21
 12977  00356E  C013  F015         	movff	strlen@s,strlen@a
 12978  003572  C014  F016         	movff	strlen@s+1,strlen@a+1
 12979  003576  EFBF  F01A         	goto	l5001
 12980  00357A                     l4999:
 12981  00357A  4A13               	infsnz	strlen@s^0,f,c
 12982  00357C  2A14               	incf	(strlen@s+1)^0,f,c
 12983  00357E                     l5001:
 12984  00357E  C013  FFD9         	movff	strlen@s,fsr2l
 12985  003582  C014  FFDA         	movff	strlen@s+1,fsr2h
 12986  003586  50DF               	movf	indf2,w,c
 12987  003588  A4D8               	btfss	status,2,c
 12988  00358A  EFC9  F01A         	goto	u4631
 12989  00358E  EFCB  F01A         	goto	u4630
 12990  003592                     u4631:
 12991  003592  EFBD  F01A         	goto	l4999
 12992  003596                     u4630:
 12993  003596  5015               	movf	strlen@a^0,w,c
 12994  003598  5C13               	subwf	strlen@s^0,w,c
 12995  00359A  6E13               	movwf	?_strlen^0,c
 12996  00359C  5016               	movf	(strlen@a+1)^0,w,c
 12997  00359E  5814               	subwfb	(strlen@s+1)^0,w,c
 12998  0035A0  6E14               	movwf	(?_strlen+1)^0,c
 12999  0035A2  0012               	return		;funcret
 13000  0035A4                     __end_of_strlen:
 13001                           	callstack 0
 13002                           
 13003 ;; *************** function _fputs *****************
 13004 ;; Defined at:
 13005 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 13006 ;; Parameters:    Size  Location     Type
 13007 ;;  s               2   29[COMRAM] PTR const unsigned char 
 13008 ;;		 -> dbuf(32), 
 13009 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 13010 ;;		 -> NULL(0), 
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;  i               2   34[COMRAM] int 
 13013 ;;  c               1   33[COMRAM] unsigned char 
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  2   29[COMRAM] int 
 13016 ;; Registers used:
 13017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13024 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13026 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13027 ;;Total ram usage:        7 bytes
 13028 ;; Hardware stack levels used:    1
 13029 ;; Hardware stack levels required when called:    7
 13030 ;; This function calls:
 13031 ;;		_fputc
 13032 ;; This function is called by:
 13033 ;;		_pad
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           
 13037                           	psect	text44
 13038  00335A                     __ptext44:
 13039                           	callstack 0
 13040  00335A                     _fputs:
 13041                           	callstack 18
 13042  00335A  0E00               	movlw	0
 13043  00335C  6E24               	movwf	(fputs@i+1)^0,c
 13044  00335E  0E00               	movlw	0
 13045  003360  6E23               	movwf	fputs@i^0,c
 13046  003362  EFBE  F019         	goto	l4995
 13047  003366                     l4991:
 13048  003366  C022  F015         	movff	fputs@c,fputc@c
 13049  00336A  6A16               	clrf	(fputc@c+1)^0,c
 13050  00336C  C020  F017         	movff	fputs@fp,fputc@fp
 13051  003370  C021  F018         	movff	fputs@fp+1,fputc@fp+1
 13052  003374  ECD2  F017         	call	_fputc	;wreg free
 13053  003378  4A23               	infsnz	fputs@i^0,f,c
 13054  00337A  2A24               	incf	(fputs@i+1)^0,f,c
 13055  00337C                     l4995:
 13056  00337C  5023               	movf	fputs@i^0,w,c
 13057  00337E  241E               	addwf	fputs@s^0,w,c
 13058  003380  6ED9               	movwf	fsr2l,c
 13059  003382  5024               	movf	(fputs@i+1)^0,w,c
 13060  003384  201F               	addwfc	(fputs@s+1)^0,w,c
 13061  003386  6EDA               	movwf	fsr2h,c
 13062  003388  50DF               	movf	indf2,w,c
 13063  00338A  6E22               	movwf	fputs@c^0,c
 13064  00338C  5022               	movf	fputs@c^0,w,c
 13065  00338E  A4D8               	btfss	status,2,c
 13066  003390  EFCC  F019         	goto	u4621
 13067  003394  EFCE  F019         	goto	u4620
 13068  003398                     u4621:
 13069  003398  EFB3  F019         	goto	l4991
 13070  00339C                     u4620:
 13071  00339C  0012               	return		;funcret
 13072  00339E                     __end_of_fputs:
 13073                           	callstack 0
 13074                           
 13075 ;; *************** function _fputc *****************
 13076 ;; Defined at:
 13077 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 13078 ;; Parameters:    Size  Location     Type
 13079 ;;  c               2   20[COMRAM] int 
 13080 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 13081 ;;		 -> NULL(0), 
 13082 ;; Auto vars:     Size  Location     Type
 13083 ;;		None
 13084 ;; Return value:  Size  Location     Type
 13085 ;;                  2   20[COMRAM] int 
 13086 ;; Registers used:
 13087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13088 ;; Tracked objects:
 13089 ;;		On entry : 0/0
 13090 ;;		On exit  : 0/0
 13091 ;;		Unchanged: 0/0
 13092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13095 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13096 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13097 ;;Total ram usage:        9 bytes
 13098 ;; Hardware stack levels used:    1
 13099 ;; Hardware stack levels required when called:    6
 13100 ;; This function calls:
 13101 ;;		_putch
 13102 ;; This function is called by:
 13103 ;;		_pad
 13104 ;;		_vfpfcnvrt
 13105 ;;		_fputs
 13106 ;; This function uses a non-reentrant model
 13107 ;;
 13108                           
 13109                           	psect	text45
 13110  002FA4                     __ptext45:
 13111                           	callstack 0
 13112  002FA4                     _fputc:
 13113                           	callstack 18
 13114  002FA4  5017               	movf	fputc@fp^0,w,c
 13115  002FA6  1018               	iorwf	(fputc@fp+1)^0,w,c
 13116  002FA8  B4D8               	btfsc	status,2,c
 13117  002FAA  EFD9  F017         	goto	u4581
 13118  002FAE  EFDB  F017         	goto	u4580
 13119  002FB2                     u4581:
 13120  002FB2  EFE4  F017         	goto	l4979
 13121  002FB6                     u4580:
 13122  002FB6  5017               	movf	fputc@fp^0,w,c
 13123  002FB8  1018               	iorwf	(fputc@fp+1)^0,w,c
 13124  002FBA  A4D8               	btfss	status,2,c
 13125  002FBC  EFE2  F017         	goto	u4591
 13126  002FC0  EFE4  F017         	goto	u4590
 13127  002FC4                     u4591:
 13128  002FC4  EFE9  F017         	goto	l4981
 13129  002FC8                     u4590:
 13130  002FC8                     l4979:
 13131  002FC8  5015               	movf	fputc@c^0,w,c
 13132  002FCA  ECED  F01B         	call	_putch
 13133  002FCE  EF1C  F018         	goto	l1636
 13134  002FD2                     l4981:
 13135  002FD2  EE20 F004          	lfsr	2,4
 13136  002FD6  5017               	movf	fputc@fp^0,w,c
 13137  002FD8  26D9               	addwf	fsr2l,f,c
 13138  002FDA  5018               	movf	(fputc@fp+1)^0,w,c
 13139  002FDC  22DA               	addwfc	fsr2h,f,c
 13140  002FDE  50DE               	movf	postinc2,w,c
 13141  002FE0  10DE               	iorwf	postinc2,w,c
 13142  002FE2  B4D8               	btfsc	status,2,c
 13143  002FE4  EFF6  F017         	goto	u4601
 13144  002FE8  EFF8  F017         	goto	u4600
 13145  002FEC                     u4601:
 13146  002FEC  EF13  F018         	goto	l4985
 13147  002FF0                     u4600:
 13148  002FF0  EE20 F004          	lfsr	2,4
 13149  002FF4  5017               	movf	fputc@fp^0,w,c
 13150  002FF6  26D9               	addwf	fsr2l,f,c
 13151  002FF8  5018               	movf	(fputc@fp+1)^0,w,c
 13152  002FFA  22DA               	addwfc	fsr2h,f,c
 13153  002FFC  EE10 F002          	lfsr	1,2
 13154  003000  5017               	movf	fputc@fp^0,w,c
 13155  003002  26E1               	addwf	fsr1l,f,c
 13156  003004  5018               	movf	(fputc@fp+1)^0,w,c
 13157  003006  22E2               	addwfc	fsr1h,f,c
 13158  003008  50DE               	movf	postinc2,w,c
 13159  00300A  5CE6               	subwf	postinc1,w,c
 13160  00300C  50E6               	movf	postinc1,w,c
 13161  00300E  0A80               	xorlw	128
 13162  003010  6E1D               	movwf	(??_fputc+4)^0,c
 13163  003012  50DE               	movf	postinc2,w,c
 13164  003014  0A80               	xorlw	128
 13165  003016  581D               	subwfb	(??_fputc+4)^0,w,c
 13166  003018  B0D8               	btfsc	status,0,c
 13167  00301A  EF11  F018         	goto	u4611
 13168  00301E  EF13  F018         	goto	u4610
 13169  003022                     u4611:
 13170  003022  EF1C  F018         	goto	l1636
 13171  003026                     u4610:
 13172  003026                     l4985:
 13173  003026  EE20 F002          	lfsr	2,2
 13174  00302A  5017               	movf	fputc@fp^0,w,c
 13175  00302C  26D9               	addwf	fsr2l,f,c
 13176  00302E  5018               	movf	(fputc@fp+1)^0,w,c
 13177  003030  22DA               	addwfc	fsr2h,f,c
 13178  003032  2ADE               	incf	postinc2,f,c
 13179  003034  0E00               	movlw	0
 13180  003036  22DD               	addwfc	postdec2,f,c
 13181  003038                     l1636:
 13182  003038  0012               	return		;funcret
 13183  00303A                     __end_of_fputc:
 13184                           	callstack 0
 13185                           
 13186 ;; *************** function _putch *****************
 13187 ;; Defined at:
 13188 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 13189 ;; Parameters:    Size  Location     Type
 13190 ;;  txData          1    wreg     unsigned char 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  txData          1   19[COMRAM] unsigned char 
 13193 ;; Return value:  Size  Location     Type
 13194 ;;                  1    wreg      void 
 13195 ;; Registers used:
 13196 ;;		wreg, status,2, cstack
 13197 ;; Tracked objects:
 13198 ;;		On entry : 0/0
 13199 ;;		On exit  : 0/0
 13200 ;;		Unchanged: 0/0
 13201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;Total ram usage:        1 bytes
 13207 ;; Hardware stack levels used:    1
 13208 ;; Hardware stack levels required when called:    5
 13209 ;; This function calls:
 13210 ;;		_EUSART1_Write
 13211 ;; This function is called by:
 13212 ;;		_fputc
 13213 ;; This function uses a non-reentrant model
 13214 ;;
 13215                           
 13216                           	psect	text46
 13217  0037DA                     __ptext46:
 13218                           	callstack 0
 13219  0037DA                     _putch:
 13220                           	callstack 18
 13221                           
 13222                           ;incstack = 0
 13223                           ;putch@txData stored from wreg
 13224  0037DA  6E14               	movwf	putch@txData^0,c
 13225  0037DC                     
 13226                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 13227  0037DC  5014               	movf	putch@txData^0,w,c
 13228  0037DE  ECAE  F01B         	call	_EUSART1_Write
 13229  0037E2  0012               	return		;funcret
 13230  0037E4                     __end_of_putch:
 13231                           	callstack 0
 13232                           
 13233 ;; *************** function _EUSART1_Write *****************
 13234 ;; Defined at:
 13235 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13236 ;; Parameters:    Size  Location     Type
 13237 ;;  txData          1    wreg     unsigned char 
 13238 ;; Auto vars:     Size  Location     Type
 13239 ;;  txData          1   18[COMRAM] unsigned char 
 13240 ;; Return value:  Size  Location     Type
 13241 ;;                  1    wreg      void 
 13242 ;; Registers used:
 13243 ;;		wreg
 13244 ;; Tracked objects:
 13245 ;;		On entry : 0/0
 13246 ;;		On exit  : 0/0
 13247 ;;		Unchanged: 0/0
 13248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13253 ;;Total ram usage:        1 bytes
 13254 ;; Hardware stack levels used:    1
 13255 ;; Hardware stack levels required when called:    4
 13256 ;; This function calls:
 13257 ;;		Nothing
 13258 ;; This function is called by:
 13259 ;;		_putch
 13260 ;; This function uses a non-reentrant model
 13261 ;;
 13262                           
 13263                           	psect	text47
 13264  00375C                     __ptext47:
 13265                           	callstack 0
 13266  00375C                     _EUSART1_Write:
 13267                           	callstack 18
 13268                           
 13269                           ;incstack = 0
 13270                           ;EUSART1_Write@txData stored from wreg
 13271  00375C  6E13               	movwf	EUSART1_Write@txData^0,c
 13272  00375E                     l103:
 13273                           
 13274                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 13275  00375E  A89E               	btfss	158,4,c	;volatile
 13276  003760  EFB4  F01B         	goto	u4571
 13277  003764  EFB6  F01B         	goto	u4570
 13278  003768                     u4571:
 13279  003768  EFAF  F01B         	goto	l103
 13280  00376C                     u4570:
 13281  00376C                     
 13282                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 13283  00376C  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 13284  003770  0012               	return		;funcret
 13285  003772                     __end_of_EUSART1_Write:
 13286                           	callstack 0
 13287                           
 13288 ;; *************** function _atoi *****************
 13289 ;; Defined at:
 13290 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  s               2   25[COMRAM] PTR const unsigned char 
 13293 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
 13294 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
 13295 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
 13296 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
 13297 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
 13298 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
 13299 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
 13300 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
 13301 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
 13302 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
 13303 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
 13304 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
 13305 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
 13306 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
 13307 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
 13308 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
 13309 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
 13310 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
 13311 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
 13312 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
 13313 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
 13314 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
 13315 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
 13316 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
 13317 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
 13318 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
 13319 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
 13320 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
 13321 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
 13322 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
 13323 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
 13324 ;;		 -> STR_2(21), STR_1(9), 
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;  n               2   38[COMRAM] int 
 13327 ;;  neg             2   31[COMRAM] int 
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  2   25[COMRAM] int 
 13330 ;; Registers used:
 13331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/0
 13334 ;;		On exit  : 0/0
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13338 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13339 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13340 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13341 ;;Total ram usage:       15 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:    5
 13344 ;; This function calls:
 13345 ;;		___wmul
 13346 ;;		_isdigit
 13347 ;;		_isspace
 13348 ;; This function is called by:
 13349 ;;		_vfpfcnvrt
 13350 ;; This function uses a non-reentrant model
 13351 ;;
 13352                           
 13353                           	psect	text48
 13354  0025DE                     __ptext48:
 13355                           	callstack 0
 13356  0025DE                     _atoi:
 13357                           	callstack 22
 13358  0025DE  0E00               	movlw	0
 13359  0025E0  6E28               	movwf	(atoi@n+1)^0,c
 13360  0025E2  0E00               	movlw	0
 13361  0025E4  6E27               	movwf	atoi@n^0,c
 13362  0025E6  0E00               	movlw	0
 13363  0025E8  6E21               	movwf	(atoi@neg+1)^0,c
 13364  0025EA  0E00               	movlw	0
 13365  0025EC  6E20               	movwf	atoi@neg^0,c
 13366  0025EE  EFFB  F012         	goto	l5377
 13367  0025F2                     l5375:
 13368  0025F2  4A1A               	infsnz	atoi@s^0,f,c
 13369  0025F4  2A1B               	incf	(atoi@s+1)^0,f,c
 13370  0025F6                     l5377:
 13371  0025F6  0E01               	movlw	1
 13372  0025F8  6E26               	movwf	_atoi$2036^0,c
 13373  0025FA  C01A  FFF6         	movff	atoi@s,tblptrl
 13374  0025FE  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13375  002602                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13376  002602  6AF8               	clrf	tblptru,c
 13377  002604                     	endif
 13378  002604                     	if	0	;tblptru may be non-zero
 13379  002604                     	endif
 13380  002604  0008               	tblrd		*
 13381  002606  50F5               	movf	tablat,w,c
 13382  002608  0A20               	xorlw	32
 13383  00260A  B4D8               	btfsc	status,2,c
 13384  00260C  EF0A  F013         	goto	u5421
 13385  002610  EF0C  F013         	goto	u5420
 13386  002614                     u5421:
 13387  002614  EF2A  F013         	goto	l5385
 13388  002618                     u5420:
 13389  002618  0EF7               	movlw	247
 13390  00261A  6E1C               	movwf	??_atoi^0,c
 13391  00261C  0EFF               	movlw	255
 13392  00261E  6E1D               	movwf	(??_atoi+1)^0,c
 13393  002620  C01A  FFF6         	movff	atoi@s,tblptrl
 13394  002624  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13395  002628                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13396  002628  6AF8               	clrf	tblptru,c
 13397  00262A                     	endif
 13398  00262A                     	if	0	;tblptru may be non-zero
 13399  00262A                     	endif
 13400  00262A  0008               	tblrd		*
 13401  00262C  50F5               	movf	tablat,w,c
 13402  00262E  6E1E               	movwf	(??_atoi+2)^0,c
 13403  002630  6A1F               	clrf	(??_atoi+3)^0,c
 13404  002632  501C               	movf	??_atoi^0,w,c
 13405  002634  261E               	addwf	(??_atoi+2)^0,f,c
 13406  002636  501D               	movf	(??_atoi+1)^0,w,c
 13407  002638  221F               	addwfc	(??_atoi+3)^0,f,c
 13408  00263A  501F               	movf	(??_atoi+3)^0,w,c
 13409  00263C  E109               	bnz	u5430
 13410  00263E  0E05               	movlw	5
 13411  002640  5C1E               	subwf	(??_atoi+2)^0,w,c
 13412  002642  A0D8               	btfss	status,0,c
 13413  002644  EF26  F013         	goto	u5431
 13414  002648  EF28  F013         	goto	u5430
 13415  00264C                     u5431:
 13416  00264C  EF2A  F013         	goto	l5385
 13417  002650                     u5430:
 13418  002650  0E00               	movlw	0
 13419  002652  6E26               	movwf	_atoi$2036^0,c
 13420  002654                     l5385:
 13421  002654  C026  F022         	movff	_atoi$2036,_atoi$2035
 13422  002658  6A23               	clrf	(_atoi$2035+1)^0,c
 13423  00265A  5022               	movf	_atoi$2035^0,w,c
 13424  00265C  1023               	iorwf	(_atoi$2035+1)^0,w,c
 13425  00265E  A4D8               	btfss	status,2,c
 13426  002660  EF34  F013         	goto	u5441
 13427  002664  EF36  F013         	goto	u5440
 13428  002668                     u5441:
 13429  002668  EFF9  F012         	goto	l5375
 13430  00266C                     u5440:
 13431  00266C  EF40  F013         	goto	l5395
 13432  002670                     l5391:
 13433  002670  0E00               	movlw	0
 13434  002672  6E21               	movwf	(atoi@neg+1)^0,c
 13435  002674  0E01               	movlw	1
 13436  002676  6E20               	movwf	atoi@neg^0,c
 13437  002678                     l5393:
 13438  002678  4A1A               	infsnz	atoi@s^0,f,c
 13439  00267A  2A1B               	incf	(atoi@s+1)^0,f,c
 13440  00267C  EF77  F013         	goto	l5401
 13441  002680                     l5395:
 13442  002680  C01A  FFF6         	movff	atoi@s,tblptrl
 13443  002684  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13444  002688                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13445  002688  6AF8               	clrf	tblptru,c
 13446  00268A                     	endif
 13447  00268A                     	if	0	;tblptru may be non-zero
 13448  00268A                     	endif
 13449  00268A  0008               	tblrd		*
 13450  00268C  50F5               	movf	tablat,w,c
 13451  00268E  6E1C               	movwf	??_atoi^0,c
 13452  002690  6A1D               	clrf	(??_atoi+1)^0,c
 13453                           
 13454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13455                           ; Switch size 1, requested type "simple"
 13456                           ; Number of cases is 1, Range of values is 0 to 0
 13457                           ; switch strategies available:
 13458                           ; Name         Instructions Cycles
 13459                           ; simple_byte            4     3 (average)
 13460                           ;	Chosen strategy is simple_byte
 13461  002692  501D               	movf	(??_atoi+1)^0,w,c
 13462  002694  0A00               	xorlw	0	; case 0
 13463  002696  B4D8               	btfsc	status,2,c
 13464  002698  EF50  F013         	goto	l6439
 13465  00269C  EF77  F013         	goto	l5401
 13466  0026A0                     l6439:
 13467                           
 13468                           ; Switch size 1, requested type "simple"
 13469                           ; Number of cases is 2, Range of values is 43 to 45
 13470                           ; switch strategies available:
 13471                           ; Name         Instructions Cycles
 13472                           ; simple_byte            7     4 (average)
 13473                           ;	Chosen strategy is simple_byte
 13474  0026A0  501C               	movf	??_atoi^0,w,c
 13475  0026A2  0A2B               	xorlw	43	; case 43
 13476  0026A4  B4D8               	btfsc	status,2,c
 13477  0026A6  EF3C  F013         	goto	l5393
 13478  0026AA  0A06               	xorlw	6	; case 45
 13479  0026AC  B4D8               	btfsc	status,2,c
 13480  0026AE  EF38  F013         	goto	l5391
 13481  0026B2  EF77  F013         	goto	l5401
 13482  0026B6                     l5397:
 13483  0026B6  C027  F013         	movff	atoi@n,___wmul@multiplier
 13484  0026BA  C028  F014         	movff	atoi@n+1,___wmul@multiplier+1
 13485  0026BE  0E00               	movlw	0
 13486  0026C0  6E16               	movwf	(___wmul@multiplicand+1)^0,c
 13487  0026C2  0E0A               	movlw	10
 13488  0026C4  6E15               	movwf	___wmul@multiplicand^0,c
 13489  0026C6  EC56  F01B         	call	___wmul	;wreg free
 13490  0026CA  C01A  FFF6         	movff	atoi@s,tblptrl
 13491  0026CE  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13492  0026D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13493  0026D2  6AF8               	clrf	tblptru,c
 13494  0026D4                     	endif
 13495  0026D4                     	if	0	;tblptru may be non-zero
 13496  0026D4                     	endif
 13497  0026D4  0008               	tblrd		*
 13498  0026D6  50F5               	movf	tablat,w,c
 13499  0026D8  5E13               	subwf	?___wmul^0,f,c
 13500  0026DA  0E00               	movlw	0
 13501  0026DC  5A14               	subwfb	(?___wmul+1)^0,f,c
 13502  0026DE  0E30               	movlw	48
 13503  0026E0  2413               	addwf	?___wmul^0,w,c
 13504  0026E2  6E27               	movwf	atoi@n^0,c
 13505  0026E4  0E00               	movlw	0
 13506  0026E6  2014               	addwfc	(?___wmul+1)^0,w,c
 13507  0026E8  6E28               	movwf	(atoi@n+1)^0,c
 13508  0026EA  EF3C  F013         	goto	l5393
 13509  0026EE                     l5401:
 13510  0026EE  0ED0               	movlw	208
 13511  0026F0  6E1C               	movwf	??_atoi^0,c
 13512  0026F2  0EFF               	movlw	255
 13513  0026F4  6E1D               	movwf	(??_atoi+1)^0,c
 13514  0026F6  C01A  FFF6         	movff	atoi@s,tblptrl
 13515  0026FA  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13516  0026FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13517  0026FE  6AF8               	clrf	tblptru,c
 13518  002700                     	endif
 13519  002700                     	if	0	;tblptru may be non-zero
 13520  002700                     	endif
 13521  002700  0008               	tblrd		*
 13522  002702  50F5               	movf	tablat,w,c
 13523  002704  6E1E               	movwf	(??_atoi+2)^0,c
 13524  002706  6A1F               	clrf	(??_atoi+3)^0,c
 13525  002708  501C               	movf	??_atoi^0,w,c
 13526  00270A  261E               	addwf	(??_atoi+2)^0,f,c
 13527  00270C  501D               	movf	(??_atoi+1)^0,w,c
 13528  00270E  221F               	addwfc	(??_atoi+3)^0,f,c
 13529  002710  501F               	movf	(??_atoi+3)^0,w,c
 13530  002712  E10A               	bnz	u5450
 13531  002714  0E0A               	movlw	10
 13532  002716  5C1E               	subwf	(??_atoi+2)^0,w,c
 13533  002718  A0D8               	btfss	status,0,c
 13534  00271A  EF91  F013         	goto	u5451
 13535  00271E  EF94  F013         	goto	u5450
 13536  002722                     u5451:
 13537  002722  0E01               	movlw	1
 13538  002724  EF95  F013         	goto	u5460
 13539  002728                     u5450:
 13540  002728  0E00               	movlw	0
 13541  00272A                     u5460:
 13542  00272A  6E24               	movwf	_atoi$2037^0,c
 13543  00272C  6A25               	clrf	(_atoi$2037+1)^0,c
 13544  00272E  5024               	movf	_atoi$2037^0,w,c
 13545  002730  1025               	iorwf	(_atoi$2037+1)^0,w,c
 13546  002732  A4D8               	btfss	status,2,c
 13547  002734  EF9E  F013         	goto	u5471
 13548  002738  EFA0  F013         	goto	u5470
 13549  00273C                     u5471:
 13550  00273C  EF5B  F013         	goto	l5397
 13551  002740                     u5470:
 13552  002740  5020               	movf	atoi@neg^0,w,c
 13553  002742  1021               	iorwf	(atoi@neg+1)^0,w,c
 13554  002744  A4D8               	btfss	status,2,c
 13555  002746  EFA7  F013         	goto	u5481
 13556  00274A  EFA9  F013         	goto	u5480
 13557  00274E                     u5481:
 13558  00274E  EFB7  F013         	goto	l1595
 13559  002752                     u5480:
 13560  002752  C027  F01C         	movff	atoi@n,??_atoi
 13561  002756  C028  F01D         	movff	atoi@n+1,??_atoi+1
 13562  00275A  1E1C               	comf	??_atoi^0,f,c
 13563  00275C  1E1D               	comf	(??_atoi+1)^0,f,c
 13564  00275E  4A1C               	infsnz	??_atoi^0,f,c
 13565  002760  2A1D               	incf	(??_atoi+1)^0,f,c
 13566  002762  C01C  F01A         	movff	??_atoi,?_atoi
 13567  002766  C01D  F01B         	movff	??_atoi+1,?_atoi+1
 13568  00276A  EFBB  F013         	goto	l1598
 13569  00276E                     l1595:
 13570  00276E  C027  F01A         	movff	atoi@n,?_atoi
 13571  002772  C028  F01B         	movff	atoi@n+1,?_atoi+1
 13572  002776                     l1598:
 13573  002776  0012               	return		;funcret
 13574  002778                     __end_of_atoi:
 13575                           	callstack 0
 13576                           
 13577 ;; *************** function _isspace *****************
 13578 ;; Defined at:
 13579 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;  c               2   18[COMRAM] int 
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;		None
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  2   18[COMRAM] int 
 13586 ;; Registers used:
 13587 ;;		wreg, status,2, status,0
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13595 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13596 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13597 ;;Total ram usage:        7 bytes
 13598 ;; Hardware stack levels used:    1
 13599 ;; Hardware stack levels required when called:    4
 13600 ;; This function calls:
 13601 ;;		Nothing
 13602 ;; This function is called by:
 13603 ;;		_atoi
 13604 ;; This function uses a non-reentrant model
 13605 ;;
 13606                           
 13607                           	psect	text49
 13608  0032C4                     __ptext49:
 13609                           	callstack 0
 13610  0032C4                     _isspace:
 13611                           	callstack 22
 13612  0032C4  0E01               	movlw	1
 13613  0032C6  6E19               	movwf	_isspace$2062^0,c
 13614  0032C8  0E20               	movlw	32
 13615  0032CA  1813               	xorwf	isspace@c^0,w,c
 13616  0032CC  1014               	iorwf	(isspace@c+1)^0,w,c
 13617  0032CE  B4D8               	btfsc	status,2,c
 13618  0032D0  EF6C  F019         	goto	u5001
 13619  0032D4  EF6E  F019         	goto	u5000
 13620  0032D8                     u5001:
 13621  0032D8  EF87  F019         	goto	l5191
 13622  0032DC                     u5000:
 13623  0032DC  0EF7               	movlw	247
 13624  0032DE  6E15               	movwf	??_isspace^0,c
 13625  0032E0  0EFF               	movlw	255
 13626  0032E2  6E16               	movwf	(??_isspace+1)^0,c
 13627  0032E4  C013  F017         	movff	isspace@c,??_isspace+2
 13628  0032E8  C014  F018         	movff	isspace@c+1,??_isspace+3
 13629  0032EC  5015               	movf	??_isspace^0,w,c
 13630  0032EE  2617               	addwf	(??_isspace+2)^0,f,c
 13631  0032F0  5016               	movf	(??_isspace+1)^0,w,c
 13632  0032F2  2218               	addwfc	(??_isspace+3)^0,f,c
 13633  0032F4  5018               	movf	(??_isspace+3)^0,w,c
 13634  0032F6  E109               	bnz	u5010
 13635  0032F8  0E05               	movlw	5
 13636  0032FA  5C17               	subwf	(??_isspace+2)^0,w,c
 13637  0032FC  A0D8               	btfss	status,0,c
 13638  0032FE  EF83  F019         	goto	u5011
 13639  003302  EF85  F019         	goto	u5010
 13640  003306                     u5011:
 13641  003306  EF87  F019         	goto	l5191
 13642  00330A                     u5010:
 13643  00330A  0E00               	movlw	0
 13644  00330C  6E19               	movwf	_isspace$2062^0,c
 13645  00330E                     l5191:
 13646  00330E  C019  F013         	movff	_isspace$2062,?_isspace
 13647  003312  6A14               	clrf	(?_isspace+1)^0,c
 13648  003314  0012               	return		;funcret
 13649  003316                     __end_of_isspace:
 13650                           	callstack 0
 13651                           
 13652 ;; *************** function _isdigit *****************
 13653 ;; Defined at:
 13654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;  c               2   18[COMRAM] int 
 13657 ;; Auto vars:     Size  Location     Type
 13658 ;;		None
 13659 ;; Return value:  Size  Location     Type
 13660 ;;                  2   18[COMRAM] int 
 13661 ;; Registers used:
 13662 ;;		wreg, status,2, status,0
 13663 ;; Tracked objects:
 13664 ;;		On entry : 0/0
 13665 ;;		On exit  : 0/0
 13666 ;;		Unchanged: 0/0
 13667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13668 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13671 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13672 ;;Total ram usage:        6 bytes
 13673 ;; Hardware stack levels used:    1
 13674 ;; Hardware stack levels required when called:    4
 13675 ;; This function calls:
 13676 ;;		Nothing
 13677 ;; This function is called by:
 13678 ;;		_vfpfcnvrt
 13679 ;;		_atoi
 13680 ;; This function uses a non-reentrant model
 13681 ;;
 13682                           
 13683                           	psect	text50
 13684  003500                     __ptext50:
 13685                           	callstack 0
 13686  003500                     _isdigit:
 13687                           	callstack 23
 13688  003500  0ED0               	movlw	208
 13689  003502  6E15               	movwf	??_isdigit^0,c
 13690  003504  0EFF               	movlw	255
 13691  003506  6E16               	movwf	(??_isdigit+1)^0,c
 13692  003508  C013  F017         	movff	isdigit@c,??_isdigit+2
 13693  00350C  C014  F018         	movff	isdigit@c+1,??_isdigit+3
 13694  003510  5015               	movf	??_isdigit^0,w,c
 13695  003512  2617               	addwf	(??_isdigit+2)^0,f,c
 13696  003514  5016               	movf	(??_isdigit+1)^0,w,c
 13697  003516  2218               	addwfc	(??_isdigit+3)^0,f,c
 13698  003518  5018               	movf	(??_isdigit+3)^0,w,c
 13699  00351A  E10A               	bnz	u4980
 13700  00351C  0E0A               	movlw	10
 13701  00351E  5C17               	subwf	(??_isdigit+2)^0,w,c
 13702  003520  A0D8               	btfss	status,0,c
 13703  003522  EF95  F01A         	goto	u4981
 13704  003526  EF98  F01A         	goto	u4980
 13705  00352A                     u4981:
 13706  00352A  0E01               	movlw	1
 13707  00352C  EF99  F01A         	goto	u4990
 13708  003530                     u4980:
 13709  003530  0E00               	movlw	0
 13710  003532                     u4990:
 13711  003532  6E13               	movwf	?_isdigit^0,c
 13712  003534  6A14               	clrf	(?_isdigit+1)^0,c
 13713  003536  0012               	return		;funcret
 13714  003538                     __end_of_isdigit:
 13715                           	callstack 0
 13716                           
 13717 ;; *************** function ___wmul *****************
 13718 ;; Defined at:
 13719 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13720 ;; Parameters:    Size  Location     Type
 13721 ;;  multiplier      2   18[COMRAM] unsigned int 
 13722 ;;  multiplicand    2   20[COMRAM] unsigned int 
 13723 ;; Auto vars:     Size  Location     Type
 13724 ;;  product         2   22[COMRAM] unsigned int 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  2   18[COMRAM] unsigned int 
 13727 ;; Registers used:
 13728 ;;		wreg, status,2, status,0, prodl, prodh
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13737 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13738 ;;Total ram usage:        6 bytes
 13739 ;; Hardware stack levels used:    1
 13740 ;; Hardware stack levels required when called:    4
 13741 ;; This function calls:
 13742 ;;		Nothing
 13743 ;; This function is called by:
 13744 ;;		_atoi
 13745 ;; This function uses a non-reentrant model
 13746 ;;
 13747                           
 13748                           	psect	text51
 13749  0036AC                     __ptext51:
 13750                           	callstack 0
 13751  0036AC                     ___wmul:
 13752                           	callstack 22
 13753  0036AC  5013               	movf	___wmul@multiplier^0,w,c
 13754  0036AE  0215               	mulwf	___wmul@multiplicand^0,c
 13755  0036B0  CFF3 F017          	movff	prodl,___wmul@product
 13756  0036B4  CFF4 F018          	movff	prodh,___wmul@product+1
 13757  0036B8  5013               	movf	___wmul@multiplier^0,w,c
 13758  0036BA  0216               	mulwf	(___wmul@multiplicand+1)^0,c
 13759  0036BC  50F3               	movf	243,w,c
 13760  0036BE  2618               	addwf	(___wmul@product+1)^0,f,c
 13761  0036C0  5014               	movf	(___wmul@multiplier+1)^0,w,c
 13762  0036C2  0215               	mulwf	___wmul@multiplicand^0,c
 13763  0036C4  50F3               	movf	243,w,c
 13764  0036C6  2618               	addwf	(___wmul@product+1)^0,f,c
 13765  0036C8  C017  F013         	movff	___wmul@product,?___wmul
 13766  0036CC  C018  F014         	movff	___wmul@product+1,?___wmul+1
 13767  0036D0  0012               	return		;funcret
 13768  0036D2                     __end_of___wmul:
 13769                           	callstack 0
 13770                           
 13771 ;; *************** function _SPI2_ExchangeByte *****************
 13772 ;; Defined at:
 13773 ;;		line 92 in file "mcc_generated_files/spi2.c"
 13774 ;; Parameters:    Size  Location     Type
 13775 ;;  data            1    wreg     unsigned char 
 13776 ;; Auto vars:     Size  Location     Type
 13777 ;;  data            1   18[COMRAM] unsigned char 
 13778 ;; Return value:  Size  Location     Type
 13779 ;;                  1    wreg      unsigned char 
 13780 ;; Registers used:
 13781 ;;		wreg, status,2
 13782 ;; Tracked objects:
 13783 ;;		On entry : 0/0
 13784 ;;		On exit  : 0/0
 13785 ;;		Unchanged: 0/0
 13786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13791 ;;Total ram usage:        1 bytes
 13792 ;; Hardware stack levels used:    1
 13793 ;; Hardware stack levels required when called:    4
 13794 ;; This function calls:
 13795 ;;		Nothing
 13796 ;; This function is called by:
 13797 ;;		_SDCARD_ReadBlock
 13798 ;;		_SDCARD_WriteBlock
 13799 ;;		_SDCARD_PollWriteComplete
 13800 ;;		_SDCARD_Initialize
 13801 ;;		_SPI2_WriteBlock
 13802 ;;		_SPI2_ReadBlock
 13803 ;; This function uses a non-reentrant model
 13804 ;;
 13805                           
 13806                           	psect	text52
 13807  00372C                     __ptext52:
 13808                           	callstack 0
 13809  00372C                     _SPI2_ExchangeByte:
 13810                           	callstack 25
 13811                           
 13812                           ;incstack = 0
 13813                           ;SPI2_ExchangeByte@data stored from wreg
 13814  00372C  6E13               	movwf	SPI2_ExchangeByte@data^0,c
 13815  00372E                     
 13816                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 13817  00372E  C013  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 13818  003732                     l344:
 13819  003732  AEA4               	btfss	164,7,c	;volatile
 13820  003734  EF9E  F01B         	goto	u5661
 13821  003738  EFA0  F01B         	goto	u5660
 13822  00373C                     u5661:
 13823  00373C  EF99  F01B         	goto	l344
 13824  003740                     u5660:
 13825  003740                     
 13826                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 13827  003740  9EA4               	bcf	164,7,c	;volatile
 13828                           
 13829                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 13830  003742  506F               	movf	111,w,c	;volatile
 13831  003744  0012               	return		;funcret
 13832  003746                     __end_of_SPI2_ExchangeByte:
 13833                           	callstack 0
 13834                           
 13835 ;; *************** function _EUSART1_is_rx_ready *****************
 13836 ;; Defined at:
 13837 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 13838 ;; Parameters:    Size  Location     Type
 13839 ;;		None
 13840 ;; Auto vars:     Size  Location     Type
 13841 ;;		None
 13842 ;; Return value:  Size  Location     Type
 13843 ;;                  1    wreg      _Bool 
 13844 ;; Registers used:
 13845 ;;		wreg
 13846 ;; Tracked objects:
 13847 ;;		On entry : 0/0
 13848 ;;		On exit  : 0/0
 13849 ;;		Unchanged: 0/0
 13850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13855 ;;Total ram usage:        0 bytes
 13856 ;; Hardware stack levels used:    1
 13857 ;; Hardware stack levels required when called:    4
 13858 ;; This function calls:
 13859 ;;		Nothing
 13860 ;; This function is called by:
 13861 ;;		_main
 13862 ;; This function uses a non-reentrant model
 13863 ;;
 13864                           
 13865                           	psect	text53
 13866  003772                     __ptext53:
 13867                           	callstack 0
 13868  003772                     _EUSART1_is_rx_ready:
 13869                           	callstack 26
 13870  003772                     
 13871                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 13872  003772  BA9E               	btfsc	158,5,c	;volatile
 13873  003774  EFBE  F01B         	goto	u5671
 13874  003778  EFC1  F01B         	goto	u5670
 13875  00377C                     u5671:
 13876  00377C  0E01               	movlw	1
 13877  00377E  EFC2  F01B         	goto	u5676
 13878  003782                     u5670:
 13879  003782  0E00               	movlw	0
 13880  003784                     u5676:
 13881  003784  0012               	return		;funcret
 13882  003786                     __end_of_EUSART1_is_rx_ready:
 13883                           	callstack 0
 13884                           
 13885 ;; *************** function _EUSART1_Read *****************
 13886 ;; Defined at:
 13887 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 13888 ;; Parameters:    Size  Location     Type
 13889 ;;		None
 13890 ;; Auto vars:     Size  Location     Type
 13891 ;;		None
 13892 ;; Return value:  Size  Location     Type
 13893 ;;                  1    wreg      unsigned char 
 13894 ;; Registers used:
 13895 ;;		wreg, status,2
 13896 ;; Tracked objects:
 13897 ;;		On entry : 0/0
 13898 ;;		On exit  : 0/0
 13899 ;;		Unchanged: 0/0
 13900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;Total ram usage:        0 bytes
 13906 ;; Hardware stack levels used:    1
 13907 ;; Hardware stack levels required when called:    4
 13908 ;; This function calls:
 13909 ;;		Nothing
 13910 ;; This function is called by:
 13911 ;;		_main
 13912 ;;		_getch
 13913 ;; This function uses a non-reentrant model
 13914 ;;
 13915                           
 13916                           	psect	text54
 13917  00365E                     __ptext54:
 13918                           	callstack 0
 13919  00365E                     _EUSART1_Read:
 13920                           	callstack 26
 13921  00365E                     l96:
 13922                           
 13923                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 13924  00365E  AA9E               	btfss	158,5,c	;volatile
 13925  003660  EF34  F01B         	goto	u5681
 13926  003664  EF36  F01B         	goto	u5680
 13927  003668                     u5681:
 13928  003668  EF2F  F01B         	goto	l96
 13929  00366C                     u5680:
 13930  00366C                     
 13931                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 13932  00366C  0E00               	movlw	0
 13933  00366E  6E4B               	movwf	_eusart1RxLastError^0,c	;volatile
 13934  003670                     
 13935                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 13936  003670  A2AB               	btfss	171,1,c	;volatile
 13937  003672  EF3D  F01B         	goto	u5691
 13938  003676  EF3F  F01B         	goto	u5690
 13939  00367A                     u5691:
 13940  00367A  EF41  F01B         	goto	l5629
 13941  00367E                     u5690:
 13942  00367E                     
 13943                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 13944  00367E  98AB               	bcf	171,4,c	;volatile
 13945                           
 13946                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 13947  003680  88AB               	bsf	171,4,c	;volatile
 13948  003682                     l5629:
 13949                           
 13950                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 13951  003682  50AE               	movf	174,w,c	;volatile
 13952  003684  0012               	return		;funcret
 13953  003686                     __end_of_EUSART1_Read:
 13954                           	callstack 0
 13955                           
 13956 ;; *************** function _INTERRUPT_InterruptManager *****************
 13957 ;; Defined at:
 13958 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13959 ;; Parameters:    Size  Location     Type
 13960 ;;		None
 13961 ;; Auto vars:     Size  Location     Type
 13962 ;;		None
 13963 ;; Return value:  Size  Location     Type
 13964 ;;                  1    wreg      void 
 13965 ;; Registers used:
 13966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13967 ;; Tracked objects:
 13968 ;;		On entry : 0/0
 13969 ;;		On exit  : 0/0
 13970 ;;		Unchanged: 0/0
 13971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13976 ;;Total ram usage:        4 bytes
 13977 ;; Hardware stack levels used:    1
 13978 ;; Hardware stack levels required when called:    3
 13979 ;; This function calls:
 13980 ;;		_TMR0_ISR
 13981 ;; This function is called by:
 13982 ;;		Interrupt level 2
 13983 ;; This function uses a non-reentrant model
 13984 ;;
 13985                           
 13986                           	psect	intcode
 13987  000008                     __pintcode:
 13988                           	callstack 0
 13989  000008                     _INTERRUPT_InterruptManager:
 13990                           	callstack 17
 13991                           
 13992                           ;incstack = 0
 13993  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13994  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
 13995  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13996  000012  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13997  000016  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13998  00001A                     
 13999                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 14000  00001A  AAF2               	btfss	242,5,c	;volatile
 14001  00001C  EF12  F000         	goto	i2u395_41
 14002  000020  EF14  F000         	goto	i2u395_40
 14003  000024                     i2u395_41:
 14004  000024  EF1D  F000         	goto	i2l36
 14005  000028                     i2u395_40:
 14006  000028  A4F2               	btfss	242,2,c	;volatile
 14007  00002A  EF19  F000         	goto	i2u396_41
 14008  00002E  EF1B  F000         	goto	i2u396_40
 14009  000032                     i2u396_41:
 14010  000032  EF1D  F000         	goto	i2l36
 14011  000036                     i2u396_40:
 14012  000036                     
 14013                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 14014  000036  ECD2  F01A         	call	_TMR0_ISR	;wreg free
 14015  00003A                     i2l36:
 14016  00003A  C012  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14017  00003E  C011  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14018  000042  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14019  000046  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14020  00004A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14021  00004C  0011               	retfie		f
 14022  00004E                     __end_of_INTERRUPT_InterruptManager:
 14023                           	callstack 0
 14024                           
 14025 ;; *************** function _TMR0_ISR *****************
 14026 ;; Defined at:
 14027 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;		None
 14030 ;; Auto vars:     Size  Location     Type
 14031 ;;		None
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  1    wreg      void 
 14034 ;; Registers used:
 14035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14036 ;; Tracked objects:
 14037 ;;		On entry : 0/0
 14038 ;;		On exit  : 0/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14045 ;;Total ram usage:        0 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; Hardware stack levels required when called:    2
 14048 ;; This function calls:
 14049 ;;		Absolute function
 14050 ;;		_TMR0_DefaultInterruptHandler
 14051 ;;		_myTMR0ISR
 14052 ;; This function is called by:
 14053 ;;		_INTERRUPT_InterruptManager
 14054 ;; This function uses a non-reentrant model
 14055 ;;
 14056                           
 14057                           	psect	text56
 14058  0035A4                     __ptext56:
 14059                           	callstack 0
 14060  0035A4                     _TMR0_ISR:
 14061                           	callstack 17
 14062  0035A4                     
 14063                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 14064  0035A4  94F2               	bcf	242,2,c	;volatile
 14065  0035A6                     
 14066                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 14067  0035A6  5044               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 14068  0035A8  6ED7               	movwf	215,c	;volatile
 14069  0035AA                     
 14070                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 14071  0035AA  C043  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 14072  0035AE                     
 14073                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 14074  0035AE  5045               	movf	_TMR0_InterruptHandler^0,w,c
 14075  0035B0  1046               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 14076  0035B2  B4D8               	btfsc	status,2,c
 14077  0035B4  EFDE  F01A         	goto	i2u367_41
 14078  0035B8  EFE0  F01A         	goto	i2u367_40
 14079  0035BC                     i2u367_41:
 14080  0035BC  EFEC  F01A         	goto	i2l170
 14081  0035C0                     i2u367_40:
 14082  0035C0                     
 14083                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 14084  0035C0  D802               	call	i2u368_48
 14085  0035C2  EFEC  F01A         	goto	i2u368_49
 14086  0035C6                     i2u368_48:
 14087  0035C6  0005               	push	
 14088  0035C8  6EFA               	movwf	pclath,c
 14089  0035CA  5045               	movf	_TMR0_InterruptHandler^0,w,c
 14090  0035CC  6EFD               	movwf	tosl,c
 14091  0035CE  5046               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 14092  0035D0  6EFE               	movwf	tosh,c
 14093  0035D2  6AFF               	clrf	tosu,c
 14094  0035D4  50FA               	movf	pclath,w,c
 14095  0035D6  0012               	return		;indir
 14096  0035D8                     i2u368_49:
 14097  0035D8                     i2l170:
 14098  0035D8  0012               	return		;funcret
 14099  0035DA                     __end_of_TMR0_ISR:
 14100                           	callstack 0
 14101                           
 14102 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14103 ;; Defined at:
 14104 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;		None
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;		None
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1    wreg      void 
 14111 ;; Registers used:
 14112 ;;		None
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;Total ram usage:        0 bytes
 14123 ;; Hardware stack levels used:    1
 14124 ;; This function calls:
 14125 ;;		Nothing
 14126 ;; This function is called by:
 14127 ;;		_TMR0_Initialize
 14128 ;;		_TMR0_ISR
 14129 ;; This function uses a non-reentrant model
 14130 ;;
 14131                           
 14132                           	psect	text57
 14133  0037FA                     __ptext57:
 14134                           	callstack 0
 14135  0037FA                     _TMR0_DefaultInterruptHandler:
 14136                           	callstack 18
 14137  0037FA  0012               	return		;funcret
 14138  0037FC                     __end_of_TMR0_DefaultInterruptHandler:
 14139                           	callstack 0
 14140                           
 14141 ;; *************** function _myTMR0ISR *****************
 14142 ;; Defined at:
 14143 ;;		line 456 in file "main.c"
 14144 ;; Parameters:    Size  Location     Type
 14145 ;;		None
 14146 ;; Auto vars:     Size  Location     Type
 14147 ;;  mic             2   12[COMRAM] unsigned short 
 14148 ;; Return value:  Size  Location     Type
 14149 ;;                  1    wreg      void 
 14150 ;; Registers used:
 14151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14152 ;; Tracked objects:
 14153 ;;		On entry : 0/0
 14154 ;;		On exit  : 0/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14161 ;;Total ram usage:        4 bytes
 14162 ;; Hardware stack levels used:    1
 14163 ;; Hardware stack levels required when called:    1
 14164 ;; This function calls:
 14165 ;;		_EPWM1_LoadDutyValue
 14166 ;;		_TMR0_ReadTimer
 14167 ;;		i2_TMR0_WriteTimer
 14168 ;; This function is called by:
 14169 ;;		_main
 14170 ;;		_TMR0_ISR
 14171 ;; This function uses a non-reentrant model
 14172 ;;
 14173                           
 14174                           	psect	text58
 14175  001754                     __ptext58:
 14176                           	callstack 0
 14177  001754                     _myTMR0ISR:
 14178                           	callstack 17
 14179  001754                     
 14180                           ;main.c: 457:     ADCON0bits.GO_NOT_DONE = 1;
 14181  001754  82C2               	bsf	194,1,c	;volatile
 14182  001756                     
 14183                           ;main.c: 459:     TMR0_WriteTimer(0x10000 - (sampleRate - TMR0_ReadTimer()));
 14184  001756  EC79  F01B         	call	_TMR0_ReadTimer	;wreg free
 14185  00175A  0100               	movlb	0	; () banked
 14186  00175C  51D4               	movf	_sampleRate& (0+255),w,b
 14187  00175E  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 14188  001760  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 14189  001762  51D5               	movf	(_sampleRate+1)& (0+255),w,b
 14190  001764  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 14191  001766  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 14192  001768  ECF2  F01B         	call	i2_TMR0_WriteTimer	;wreg free
 14193  00176C                     
 14194                           ;main.c: 460:     static uint16_t bufferIndex = 0;;main.c: 461:     static myTMR0states_
      +                          t state = IDLE;;main.c: 462:     static uint8_t *buffer = sdCardBuffer1;;main.c: 463:   
      +                            static uint8_t useBuffer1 = 1;;main.c: 465:     uint16_t mic = ADRESH;
 14195  00176C  CFC4 F00D          	movff	4036,myTMR0ISR@mic	;volatile
 14196  001770  6A0E               	clrf	(myTMR0ISR@mic+1)^0,c
 14197                           
 14198                           ;main.c: 467:     switch(state) {
 14199  001772  EFFC  F00C         	goto	i2l4117
 14200  001776                     i2l4027:
 14201                           
 14202                           ;main.c: 469:             if (startCollect) {
 14203  001776  504A               	movf	_startCollect^0,w,c
 14204  001778  B4D8               	btfsc	status,2,c
 14205  00177A  EFC1  F00B         	goto	i2u343_41
 14206  00177E  EFC3  F00B         	goto	i2u343_40
 14207  001782                     i2u343_41:
 14208  001782  EFD8  F00B         	goto	i2l4037
 14209  001786                     i2u343_40:
 14210  001786                     
 14211                           ;main.c: 470:                 collecting = 1;
 14212  001786  0E01               	movlw	1
 14213  001788  0100               	movlb	0	; () banked
 14214  00178A  6FCF               	movwf	_collecting& (0+255),b
 14215                           
 14216                           ;main.c: 471:                 stopCollect = 0;
 14217  00178C  0E00               	movlw	0
 14218  00178E  6E49               	movwf	_stopCollect^0,c
 14219                           
 14220                           ;main.c: 472:                 state = MIC_ACQUIRE;
 14221  001790  0E04               	movlw	4
 14222  001792  6E47               	movwf	myTMR0ISR@state^0,c
 14223                           
 14224                           ;main.c: 473:                 bufferIndex = 0;
 14225  001794  0E00               	movlw	0
 14226  001796  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14227  001798  0E00               	movlw	0
 14228  00179A  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14229  00179C                     
 14230                           ; BSR set to: 0
 14231                           ;main.c: 474:                 buffer = sdCardBuffer1;
 14232  00179C  0ED5               	movlw	low _sdCardBuffer1
 14233  00179E  6FD2               	movwf	myTMR0ISR@buffer& (0+255),b
 14234  0017A0  0E05               	movlw	high _sdCardBuffer1
 14235  0017A2  6FD3               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14236  0017A4                     
 14237                           ; BSR set to: 0
 14238                           ;main.c: 475:                 useBuffer1 = 1;
 14239  0017A4  0E01               	movlw	1
 14240  0017A6  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14241  0017A8                     
 14242                           ; BSR set to: 0
 14243                           ;main.c: 476:                 startCollect = 0;
 14244  0017A8  0E00               	movlw	0
 14245  0017AA  6E4A               	movwf	_startCollect^0,c
 14246                           
 14247                           ;main.c: 477:             } else if (doPlayback) {
 14248  0017AC  EF1D  F00D         	goto	i2l632
 14249  0017B0                     i2l4037:
 14250  0017B0  0100               	movlb	0	; () banked
 14251  0017B2  51CE               	movf	_doPlayback& (0+255),w,b
 14252  0017B4  B4D8               	btfsc	status,2,c
 14253  0017B6  EFDF  F00B         	goto	i2u344_41
 14254  0017BA  EFE1  F00B         	goto	i2u344_40
 14255  0017BE                     i2u344_41:
 14256  0017BE  EF1D  F00D         	goto	i2l632
 14257  0017C2                     i2u344_40:
 14258  0017C2                     
 14259                           ; BSR set to: 0
 14260                           ;main.c: 478:                 useBuffer1 = 1;
 14261  0017C2  0E01               	movlw	1
 14262  0017C4  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14263                           
 14264                           ;main.c: 479:                 stopPlayback = 0;
 14265  0017C6  0E00               	movlw	0
 14266  0017C8  6E48               	movwf	_stopPlayback^0,c
 14267  0017CA                     
 14268                           ; BSR set to: 0
 14269                           ;main.c: 480:                 buffer = sdCardBuffer1;
 14270  0017CA  0ED5               	movlw	low _sdCardBuffer1
 14271  0017CC  6FD2               	movwf	myTMR0ISR@buffer& (0+255),b
 14272  0017CE  0E05               	movlw	high _sdCardBuffer1
 14273  0017D0  6FD3               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14274  0017D2                     
 14275                           ; BSR set to: 0
 14276                           ;main.c: 481:                 bufferIndex = 0;
 14277  0017D2  0E00               	movlw	0
 14278  0017D4  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14279  0017D6  0E00               	movlw	0
 14280  0017D8  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14281  0017DA                     
 14282                           ; BSR set to: 0
 14283                           ;main.c: 482:                 state = PLAYBACK;
 14284  0017DA  0E02               	movlw	2
 14285  0017DC  6E47               	movwf	myTMR0ISR@state^0,c
 14286  0017DE  EF1D  F00D         	goto	i2l632
 14287  0017E2                     i2l4047:
 14288                           
 14289                           ;main.c: 487:             if ((useBuffer1 && buffer1Full) || (!useBuffer1 && buffer2Full
      +                          )) {
 14290  0017E2  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14291  0017E4  B4D8               	btfsc	status,2,c
 14292  0017E6  EFF7  F00B         	goto	i2u345_41
 14293  0017EA  EFF9  F00B         	goto	i2u345_40
 14294  0017EE                     i2u345_41:
 14295  0017EE  EF02  F00C         	goto	i2l4051
 14296  0017F2                     i2u345_40:
 14297  0017F2  0100               	movlb	0	; () banked
 14298  0017F4  51D1               	movf	_buffer1Full& (0+255),w,b
 14299  0017F6  A4D8               	btfss	status,2,c
 14300  0017F8  EF00  F00C         	goto	i2u346_41
 14301  0017FC  EF02  F00C         	goto	i2u346_40
 14302  001800                     i2u346_41:
 14303  001800  EF1D  F00D         	goto	i2l632
 14304  001804                     i2u346_40:
 14305  001804                     i2l4051:
 14306  001804  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14307  001806  A4D8               	btfss	status,2,c
 14308  001808  EF08  F00C         	goto	i2u347_41
 14309  00180C  EF0A  F00C         	goto	i2u347_40
 14310  001810                     i2u347_41:
 14311  001810  EF15  F00C         	goto	i2l4055
 14312  001814                     i2u347_40:
 14313  001814  0100               	movlb	0	; () banked
 14314  001816  51D0               	movf	_buffer2Full& (0+255),w,b
 14315  001818  B4D8               	btfsc	status,2,c
 14316  00181A  EF11  F00C         	goto	i2u348_41
 14317  00181E  EF13  F00C         	goto	i2u348_40
 14318  001822                     i2u348_41:
 14319  001822  EF15  F00C         	goto	i2l4055
 14320  001826                     i2u348_40:
 14321  001826  EF1D  F00D         	goto	i2l632
 14322  00182A                     i2l4055:
 14323                           
 14324                           ;main.c: 492:             EPWM1_LoadDutyValue(buffer[bufferIndex++]);
 14325  00182A  5041               	movf	myTMR0ISR@bufferIndex^0,w,c
 14326  00182C  0100               	movlb	0	; () banked
 14327  00182E  25D2               	addwf	myTMR0ISR@buffer& (0+255),w,b
 14328  001830  6ED9               	movwf	fsr2l,c
 14329  001832  5042               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14330  001834  21D3               	addwfc	(myTMR0ISR@buffer+1)& (0+255),w,b
 14331  001836  6EDA               	movwf	fsr2h,c
 14332  001838  50DF               	movf	indf2,w,c
 14333  00183A  6E0B               	movwf	??_myTMR0ISR^0,c
 14334  00183C  500B               	movf	??_myTMR0ISR^0,w,c
 14335  00183E  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
 14336  001840  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
 14337  001842  ECED  F01A         	call	_EPWM1_LoadDutyValue	;wreg free
 14338  001846  4A41               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14339  001848  2A42               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14340  00184A                     
 14341                           ;main.c: 494:             if(bufferIndex == 512) {
 14342  00184A  0E02               	movlw	2
 14343  00184C  1842               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14344  00184E  1041               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14345  001850  A4D8               	btfss	status,2,c
 14346  001852  EF2D  F00C         	goto	i2u349_41
 14347  001856  EF2F  F00C         	goto	i2u349_40
 14348  00185A                     i2u349_41:
 14349  00185A  EF1D  F00D         	goto	i2l632
 14350  00185E                     i2u349_40:
 14351  00185E                     
 14352                           ;main.c: 495:                 if (useBuffer1) {
 14353  00185E  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14354  001860  B4D8               	btfsc	status,2,c
 14355  001862  EF35  F00C         	goto	i2u350_41
 14356  001866  EF37  F00C         	goto	i2u350_40
 14357  00186A                     i2u350_41:
 14358  00186A  EF4A  F00C         	goto	i2l4071
 14359  00186E                     i2u350_40:
 14360  00186E                     
 14361                           ;main.c: 496:                     buffer1Full = 0;
 14362  00186E  0E00               	movlw	0
 14363  001870  0100               	movlb	0	; () banked
 14364  001872  6FD1               	movwf	_buffer1Full& (0+255),b
 14365  001874                     
 14366                           ; BSR set to: 0
 14367                           ;main.c: 497:                     buffer = sdCardBuffer2;
 14368  001874  0ED5               	movlw	low _sdCardBuffer2
 14369  001876  6FD2               	movwf	myTMR0ISR@buffer& (0+255),b
 14370  001878  0E03               	movlw	high _sdCardBuffer2
 14371  00187A  6FD3               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14372  00187C                     
 14373                           ; BSR set to: 0
 14374                           ;main.c: 498:                     if (!buffer2Full)
 14375  00187C  51D0               	movf	_buffer2Full& (0+255),w,b
 14376  00187E  A4D8               	btfss	status,2,c
 14377  001880  EF44  F00C         	goto	i2u351_41
 14378  001884  EF46  F00C         	goto	i2u351_40
 14379  001888                     i2u351_41:
 14380  001888  EF5B  F00C         	goto	i2l616
 14381  00188C                     i2u351_40:
 14382  00188C                     i2l4069:
 14383                           
 14384                           ; BSR set to: 0
 14385                           ;main.c: 499:                         state = MIC_AWAIT_BUFFER;
 14386  00188C  0E03               	movlw	3
 14387  00188E  6E47               	movwf	myTMR0ISR@state^0,c
 14388  001890  EF5B  F00C         	goto	i2l616
 14389  001894                     i2l4071:
 14390                           
 14391                           ;main.c: 501:                     buffer2Full = 0;
 14392  001894  0E00               	movlw	0
 14393  001896  0100               	movlb	0	; () banked
 14394  001898  6FD0               	movwf	_buffer2Full& (0+255),b
 14395  00189A                     
 14396                           ; BSR set to: 0
 14397                           ;main.c: 502:                     buffer = sdCardBuffer1;
 14398  00189A  0ED5               	movlw	low _sdCardBuffer1
 14399  00189C  6FD2               	movwf	myTMR0ISR@buffer& (0+255),b
 14400  00189E  0E05               	movlw	high _sdCardBuffer1
 14401  0018A0  6FD3               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14402  0018A2                     
 14403                           ; BSR set to: 0
 14404                           ;main.c: 503:                     if (!buffer1Full)
 14405  0018A2  51D1               	movf	_buffer1Full& (0+255),w,b
 14406  0018A4  A4D8               	btfss	status,2,c
 14407  0018A6  EF57  F00C         	goto	i2u352_41
 14408  0018AA  EF59  F00C         	goto	i2u352_40
 14409  0018AE                     i2u352_41:
 14410  0018AE  EF5B  F00C         	goto	i2l616
 14411  0018B2                     i2u352_40:
 14412  0018B2  EF46  F00C         	goto	i2l4069
 14413  0018B6                     i2l616:
 14414                           
 14415                           ; BSR set to: 0
 14416                           ;main.c: 506:                 useBuffer1 = !useBuffer1;
 14417  0018B6  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14418  0018B8  B4D8               	btfsc	status,2,c
 14419  0018BA  EF61  F00C         	goto	i2u353_41
 14420  0018BE  EF64  F00C         	goto	i2u353_40
 14421  0018C2                     i2u353_41:
 14422  0018C2  0E01               	movlw	1
 14423  0018C4  EF65  F00C         	goto	i2u354_40
 14424  0018C8                     i2u353_40:
 14425  0018C8  0E00               	movlw	0
 14426  0018CA                     i2u354_40:
 14427  0018CA  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14428                           
 14429                           ;main.c: 507:                 bufferIndex = 0;
 14430  0018CC  0E00               	movlw	0
 14431  0018CE  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14432  0018D0  0E00               	movlw	0
 14433  0018D2  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14434                           
 14435                           ;main.c: 508:                 if (stopPlayback) {
 14436  0018D4  5048               	movf	_stopPlayback^0,w,c
 14437  0018D6  B4D8               	btfsc	status,2,c
 14438  0018D8  EF70  F00C         	goto	i2u355_41
 14439  0018DC  EF72  F00C         	goto	i2u355_40
 14440  0018E0                     i2u355_41:
 14441  0018E0  EF1D  F00D         	goto	i2l632
 14442  0018E4                     i2u355_40:
 14443  0018E4                     
 14444                           ; BSR set to: 0
 14445                           ;main.c: 509:                     stopPlayback = 0;
 14446  0018E4  0E00               	movlw	0
 14447  0018E6  6E48               	movwf	_stopPlayback^0,c
 14448                           
 14449                           ;main.c: 510:                     state = IDLE;
 14450  0018E8  0E00               	movlw	0
 14451  0018EA  6E47               	movwf	myTMR0ISR@state^0,c
 14452                           
 14453                           ;main.c: 511:                     doPlayback = 0;
 14454  0018EC  0E00               	movlw	0
 14455  0018EE  6FCE               	movwf	_doPlayback& (0+255),b
 14456  0018F0  EF1D  F00D         	goto	i2l632
 14457  0018F4                     i2l4081:
 14458                           
 14459                           ;main.c: 518:             if ((useBuffer1 && buffer1Full) || (!useBuffer1 && buffer2Full
      +                          )) {
 14460  0018F4  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14461  0018F6  B4D8               	btfsc	status,2,c
 14462  0018F8  EF80  F00C         	goto	i2u356_41
 14463  0018FC  EF82  F00C         	goto	i2u356_40
 14464  001900                     i2u356_41:
 14465  001900  EF8B  F00C         	goto	i2l4085
 14466  001904                     i2u356_40:
 14467  001904  0100               	movlb	0	; () banked
 14468  001906  51D1               	movf	_buffer1Full& (0+255),w,b
 14469  001908  A4D8               	btfss	status,2,c
 14470  00190A  EF89  F00C         	goto	i2u357_41
 14471  00190E  EF8B  F00C         	goto	i2u357_40
 14472  001912                     i2u357_41:
 14473  001912  EF1D  F00D         	goto	i2l632
 14474  001916                     i2u357_40:
 14475  001916                     i2l4085:
 14476  001916  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14477  001918  A4D8               	btfss	status,2,c
 14478  00191A  EF91  F00C         	goto	i2u358_41
 14479  00191E  EF93  F00C         	goto	i2u358_40
 14480  001922                     i2u358_41:
 14481  001922  EF9E  F00C         	goto	i2l4089
 14482  001926                     i2u358_40:
 14483  001926  0100               	movlb	0	; () banked
 14484  001928  51D0               	movf	_buffer2Full& (0+255),w,b
 14485  00192A  B4D8               	btfsc	status,2,c
 14486  00192C  EF9A  F00C         	goto	i2u359_41
 14487  001930  EF9C  F00C         	goto	i2u359_40
 14488  001934                     i2u359_41:
 14489  001934  EF9E  F00C         	goto	i2l4089
 14490  001938                     i2u359_40:
 14491  001938  EF1D  F00D         	goto	i2l632
 14492  00193C                     i2l4089:
 14493                           
 14494                           ;main.c: 524:             buffer[bufferIndex++] = mic;
 14495  00193C  5041               	movf	myTMR0ISR@bufferIndex^0,w,c
 14496  00193E  0100               	movlb	0	; () banked
 14497  001940  25D2               	addwf	myTMR0ISR@buffer& (0+255),w,b
 14498  001942  6ED9               	movwf	fsr2l,c
 14499  001944  5042               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14500  001946  21D3               	addwfc	(myTMR0ISR@buffer+1)& (0+255),w,b
 14501  001948  6EDA               	movwf	fsr2h,c
 14502  00194A  C00D  FFDF         	movff	myTMR0ISR@mic,indf2
 14503  00194E                     
 14504                           ; BSR set to: 0
 14505  00194E  4A41               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14506  001950  2A42               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14507  001952                     
 14508                           ; BSR set to: 0
 14509                           ;main.c: 526:             if(bufferIndex == 512) {
 14510  001952  0E02               	movlw	2
 14511  001954  1842               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14512  001956  1041               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14513  001958  A4D8               	btfss	status,2,c
 14514  00195A  EFB1  F00C         	goto	i2u360_41
 14515  00195E  EFB3  F00C         	goto	i2u360_40
 14516  001962                     i2u360_41:
 14517  001962  EF1D  F00D         	goto	i2l632
 14518  001966                     i2u360_40:
 14519  001966                     
 14520                           ; BSR set to: 0
 14521                           ;main.c: 527:                 if (useBuffer1) {
 14522  001966  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14523  001968  B4D8               	btfsc	status,2,c
 14524  00196A  EFB9  F00C         	goto	i2u361_41
 14525  00196E  EFBB  F00C         	goto	i2u361_40
 14526  001972                     i2u361_41:
 14527  001972  EFCD  F00C         	goto	i2l4105
 14528  001976                     i2u361_40:
 14529  001976                     
 14530                           ; BSR set to: 0
 14531                           ;main.c: 528:                     buffer1Full = 1;
 14532  001976  0E01               	movlw	1
 14533  001978  6FD1               	movwf	_buffer1Full& (0+255),b
 14534  00197A                     
 14535                           ; BSR set to: 0
 14536                           ;main.c: 529:                     buffer = sdCardBuffer2;
 14537  00197A  0ED5               	movlw	low _sdCardBuffer2
 14538  00197C  6FD2               	movwf	myTMR0ISR@buffer& (0+255),b
 14539  00197E  0E03               	movlw	high _sdCardBuffer2
 14540  001980  6FD3               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14541  001982                     
 14542                           ; BSR set to: 0
 14543                           ;main.c: 530:                     if (buffer2Full)
 14544  001982  51D0               	movf	_buffer2Full& (0+255),w,b
 14545  001984  B4D8               	btfsc	status,2,c
 14546  001986  EFC7  F00C         	goto	i2u362_41
 14547  00198A  EFC9  F00C         	goto	i2u362_40
 14548  00198E                     i2u362_41:
 14549  00198E  EFDD  F00C         	goto	i2l629
 14550  001992                     i2u362_40:
 14551  001992                     i2l4103:
 14552                           
 14553                           ; BSR set to: 0
 14554                           ;main.c: 531:                         state = MIC_AWAIT_BUFFER;
 14555  001992  0E03               	movlw	3
 14556  001994  6E47               	movwf	myTMR0ISR@state^0,c
 14557  001996  EFDD  F00C         	goto	i2l629
 14558  00199A                     i2l4105:
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;main.c: 533:                     buffer2Full = 1;
 14562  00199A  0E01               	movlw	1
 14563  00199C  6FD0               	movwf	_buffer2Full& (0+255),b
 14564  00199E                     
 14565                           ; BSR set to: 0
 14566                           ;main.c: 534:                     buffer = sdCardBuffer1;
 14567  00199E  0ED5               	movlw	low _sdCardBuffer1
 14568  0019A0  6FD2               	movwf	myTMR0ISR@buffer& (0+255),b
 14569  0019A2  0E05               	movlw	high _sdCardBuffer1
 14570  0019A4  6FD3               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14571  0019A6                     
 14572                           ; BSR set to: 0
 14573                           ;main.c: 535:                     if (buffer1Full)
 14574  0019A6  51D1               	movf	_buffer1Full& (0+255),w,b
 14575  0019A8  B4D8               	btfsc	status,2,c
 14576  0019AA  EFD9  F00C         	goto	i2u363_41
 14577  0019AE  EFDB  F00C         	goto	i2u363_40
 14578  0019B2                     i2u363_41:
 14579  0019B2  EFDD  F00C         	goto	i2l629
 14580  0019B6                     i2u363_40:
 14581  0019B6  EFC9  F00C         	goto	i2l4103
 14582  0019BA                     i2l629:
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;main.c: 538:                 useBuffer1 = !useBuffer1;
 14586  0019BA  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14587  0019BC  B4D8               	btfsc	status,2,c
 14588  0019BE  EFE3  F00C         	goto	i2u364_41
 14589  0019C2  EFE6  F00C         	goto	i2u364_40
 14590  0019C6                     i2u364_41:
 14591  0019C6  0E01               	movlw	1
 14592  0019C8  EFE7  F00C         	goto	i2u365_40
 14593  0019CC                     i2u364_40:
 14594  0019CC  0E00               	movlw	0
 14595  0019CE                     i2u365_40:
 14596  0019CE  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14597                           
 14598                           ;main.c: 539:                 bufferIndex = 0;
 14599  0019D0  0E00               	movlw	0
 14600  0019D2  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14601  0019D4  0E00               	movlw	0
 14602  0019D6  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14603                           
 14604                           ;main.c: 540:                 if (stopCollect) {
 14605  0019D8  5049               	movf	_stopCollect^0,w,c
 14606  0019DA  B4D8               	btfsc	status,2,c
 14607  0019DC  EFF2  F00C         	goto	i2u366_41
 14608  0019E0  EFF4  F00C         	goto	i2u366_40
 14609  0019E4                     i2u366_41:
 14610  0019E4  EF1D  F00D         	goto	i2l632
 14611  0019E8                     i2u366_40:
 14612  0019E8                     
 14613                           ; BSR set to: 0
 14614                           ;main.c: 541:                     stopCollect = 0;
 14615  0019E8  0E00               	movlw	0
 14616  0019EA  6E49               	movwf	_stopCollect^0,c
 14617                           
 14618                           ;main.c: 542:                     collecting = 0;
 14619  0019EC  0E00               	movlw	0
 14620  0019EE  6FCF               	movwf	_collecting& (0+255),b
 14621                           
 14622                           ;main.c: 543:                     state = IDLE;
 14623  0019F0  0E00               	movlw	0
 14624  0019F2  6E47               	movwf	myTMR0ISR@state^0,c
 14625  0019F4  EF1D  F00D         	goto	i2l632
 14626  0019F8                     i2l4117:
 14627  0019F8  5047               	movf	myTMR0ISR@state^0,w,c
 14628  0019FA  6E0B               	movwf	??_myTMR0ISR^0,c
 14629  0019FC  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 14630                           
 14631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14632                           ; Switch size 1, requested type "simple"
 14633                           ; Number of cases is 1, Range of values is 0 to 0
 14634                           ; switch strategies available:
 14635                           ; Name         Instructions Cycles
 14636                           ; simple_byte            4     3 (average)
 14637                           ;	Chosen strategy is simple_byte
 14638  0019FE  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 14639  001A00  0A00               	xorlw	0	; case 0
 14640  001A02  B4D8               	btfsc	status,2,c
 14641  001A04  EF06  F00D         	goto	i2l6441
 14642  001A08  EF1D  F00D         	goto	i2l632
 14643  001A0C                     i2l6441:
 14644                           
 14645                           ; Switch size 1, requested type "simple"
 14646                           ; Number of cases is 5, Range of values is 0 to 4
 14647                           ; switch strategies available:
 14648                           ; Name         Instructions Cycles
 14649                           ; simple_byte           16     9 (average)
 14650                           ;	Chosen strategy is simple_byte
 14651  001A0C  500B               	movf	??_myTMR0ISR^0,w,c
 14652  001A0E  0A00               	xorlw	0	; case 0
 14653  001A10  B4D8               	btfsc	status,2,c
 14654  001A12  EFBB  F00B         	goto	i2l4027
 14655  001A16  0A01               	xorlw	1	; case 1
 14656  001A18  B4D8               	btfsc	status,2,c
 14657  001A1A  EFF1  F00B         	goto	i2l4047
 14658  001A1E  0A03               	xorlw	3	; case 2
 14659  001A20  B4D8               	btfsc	status,2,c
 14660  001A22  EF15  F00C         	goto	i2l4055
 14661  001A26  0A01               	xorlw	1	; case 3
 14662  001A28  B4D8               	btfsc	status,2,c
 14663  001A2A  EF7A  F00C         	goto	i2l4081
 14664  001A2E  0A07               	xorlw	7	; case 4
 14665  001A30  B4D8               	btfsc	status,2,c
 14666  001A32  EF9E  F00C         	goto	i2l4089
 14667  001A36  EF1D  F00D         	goto	i2l632
 14668  001A3A                     i2l632:
 14669  001A3A  0012               	return		;funcret
 14670  001A3C                     __end_of_myTMR0ISR:
 14671                           	callstack 0
 14672                           
 14673 ;; *************** function i2_TMR0_WriteTimer *****************
 14674 ;; Defined at:
 14675 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 14676 ;; Parameters:    Size  Location     Type
 14677 ;;  timerVal        2    8[COMRAM] unsigned short 
 14678 ;; Auto vars:     Size  Location     Type
 14679 ;;		None
 14680 ;; Return value:  Size  Location     Type
 14681 ;;                  1    wreg      void 
 14682 ;; Registers used:
 14683 ;;		wreg, status,2
 14684 ;; Tracked objects:
 14685 ;;		On entry : 0/0
 14686 ;;		On exit  : 0/0
 14687 ;;		Unchanged: 0/0
 14688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14689 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14693 ;;Total ram usage:        2 bytes
 14694 ;; Hardware stack levels used:    1
 14695 ;; This function calls:
 14696 ;;		Nothing
 14697 ;; This function is called by:
 14698 ;;		_myTMR0ISR
 14699 ;; This function uses a non-reentrant model
 14700 ;;
 14701                           
 14702                           	psect	text59
 14703  0037E4                     __ptext59:
 14704                           	callstack 0
 14705  0037E4                     i2_TMR0_WriteTimer:
 14706                           	callstack 17
 14707  0037E4                     
 14708                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 14709  0037E4  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 14710  0037E6  6ED7               	movwf	215,c	;volatile
 14711  0037E8                     
 14712                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 14713  0037E8  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 14714  0037EC  0012               	return		;funcret
 14715  0037EE                     __end_ofi2_TMR0_WriteTimer:
 14716                           	callstack 0
 14717                           
 14718 ;; *************** function _TMR0_ReadTimer *****************
 14719 ;; Defined at:
 14720 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 14721 ;; Parameters:    Size  Location     Type
 14722 ;;		None
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;  readVal         2    4[COMRAM] unsigned short 
 14725 ;;  readValHigh     1    7[COMRAM] unsigned char 
 14726 ;;  readValLow      1    6[COMRAM] unsigned char 
 14727 ;; Return value:  Size  Location     Type
 14728 ;;                  2    0[COMRAM] unsigned short 
 14729 ;; Registers used:
 14730 ;;		wreg, status,2
 14731 ;; Tracked objects:
 14732 ;;		On entry : 0/0
 14733 ;;		On exit  : 0/0
 14734 ;;		Unchanged: 0/0
 14735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14737 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14739 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14740 ;;Total ram usage:        8 bytes
 14741 ;; Hardware stack levels used:    1
 14742 ;; This function calls:
 14743 ;;		Nothing
 14744 ;; This function is called by:
 14745 ;;		_myTMR0ISR
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           	psect	text60
 14750  0036F2                     __ptext60:
 14751                           	callstack 0
 14752  0036F2                     _TMR0_ReadTimer:
 14753                           	callstack 17
 14754  0036F2                     
 14755                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 14756  0036F2  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 14757                           
 14758                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 14759  0036F6  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 14760  0036FA                     
 14761                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 14762  0036FA  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 14763  0036FC  6E03               	movwf	??_TMR0_ReadTimer^0,c
 14764  0036FE  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 14765  003700  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 14766  003702  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 14767  003706                     
 14768                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 14769  003706  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 14770  00370A  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 14771  00370E  0012               	return		;funcret
 14772  003710                     __end_of_TMR0_ReadTimer:
 14773                           	callstack 0
 14774                           
 14775 ;; *************** function _EPWM1_LoadDutyValue *****************
 14776 ;; Defined at:
 14777 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  dutyValue       2    0[COMRAM] unsigned short 
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;		None
 14782 ;; Return value:  Size  Location     Type
 14783 ;;                  1    wreg      void 
 14784 ;; Registers used:
 14785 ;;		wreg, status,2, status,0
 14786 ;; Tracked objects:
 14787 ;;		On entry : 0/0
 14788 ;;		On exit  : 0/0
 14789 ;;		Unchanged: 0/0
 14790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14795 ;;Total ram usage:        4 bytes
 14796 ;; Hardware stack levels used:    1
 14797 ;; This function calls:
 14798 ;;		Nothing
 14799 ;; This function is called by:
 14800 ;;		_myTMR0ISR
 14801 ;; This function uses a non-reentrant model
 14802 ;;
 14803                           
 14804                           	psect	text61
 14805  0035DA                     __ptext61:
 14806                           	callstack 0
 14807  0035DA                     _EPWM1_LoadDutyValue:
 14808                           	callstack 17
 14809  0035DA                     
 14810                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 14811  0035DA  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14812  0035DE  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 14813  0035E2  90D8               	bcf	status,0,c
 14814  0035E4  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14815  0035E6  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14816  0035E8  90D8               	bcf	status,0,c
 14817  0035EA  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14818  0035EC  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14819  0035EE  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
 14820  0035F0  6EBE               	movwf	190,c	;volatile
 14821                           
 14822                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 14823  0035F2  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14824  0035F6  0E03               	movlw	3
 14825  0035F8  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14826  0035FA  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
 14827  0035FC  0EF0               	movlw	240
 14828  0035FE  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14829  003600  50BD               	movf	189,w,c	;volatile
 14830  003602  0BCF               	andlw	207
 14831  003604  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
 14832  003606  6EBD               	movwf	189,c	;volatile
 14833  003608  0012               	return		;funcret
 14834  00360A                     __end_of_EPWM1_LoadDutyValue:
 14835                           	callstack 0
 14836                           
 14837                           	psect	text62
 14838  000000                     __ptext62:
 14839                           	callstack 0
 14840  000000                     
 14841                           	psect	rparam
 14842  0000                     
 14843                           	psect	temp
 14844  00004D                     btemp:
 14845                           	callstack 0
 14846  00004D                     	ds	1
 14847  0000                     int$flags	set	btemp
 14848  0000                     wtemp8	set	btemp+1
 14849  0000                     ttemp5	set	btemp+1
 14850  0000                     ttemp6	set	btemp+4
 14851  0000                     ttemp7	set	btemp+8
 14852                           
 14853                           	psect	idloc
 14854                           
 14855                           ;Config register IDLOC0 @ 0x200000
 14856                           ;	unspecified, using default values
 14857  200000                     	org	2097152
 14858  200000  FF                 	db	255
 14859                           
 14860                           ;Config register IDLOC1 @ 0x200001
 14861                           ;	unspecified, using default values
 14862  200001                     	org	2097153
 14863  200001  FF                 	db	255
 14864                           
 14865                           ;Config register IDLOC2 @ 0x200002
 14866                           ;	unspecified, using default values
 14867  200002                     	org	2097154
 14868  200002  FF                 	db	255
 14869                           
 14870                           ;Config register IDLOC3 @ 0x200003
 14871                           ;	unspecified, using default values
 14872  200003                     	org	2097155
 14873  200003  FF                 	db	255
 14874                           
 14875                           ;Config register IDLOC4 @ 0x200004
 14876                           ;	unspecified, using default values
 14877  200004                     	org	2097156
 14878  200004  FF                 	db	255
 14879                           
 14880                           ;Config register IDLOC5 @ 0x200005
 14881                           ;	unspecified, using default values
 14882  200005                     	org	2097157
 14883  200005  FF                 	db	255
 14884                           
 14885                           ;Config register IDLOC6 @ 0x200006
 14886                           ;	unspecified, using default values
 14887  200006                     	org	2097158
 14888  200006  FF                 	db	255
 14889                           
 14890                           ;Config register IDLOC7 @ 0x200007
 14891                           ;	unspecified, using default values
 14892  200007                     	org	2097159
 14893  200007  FF                 	db	255
 14894                           
 14895                           	psect	config
 14896                           
 14897                           ; Padding undefined space
 14898  300000                     	org	3145728
 14899  300000  FF                 	db	255
 14900                           
 14901                           ;Config register CONFIG1H @ 0x300001
 14902                           ;	Oscillator Selection bits
 14903                           ;	FOSC = INTIO67, Internal oscillator block
 14904                           ;	4X PLL Enable
 14905                           ;	PLLCFG = OFF, Oscillator used directly
 14906                           ;	Primary clock enable bit
 14907                           ;	PRICLKEN = ON, Primary clock enabled
 14908                           ;	Fail-Safe Clock Monitor Enable bit
 14909                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14910                           ;	Internal/External Oscillator Switchover bit
 14911                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14912  300001                     	org	3145729
 14913  300001  28                 	db	40
 14914                           
 14915                           ;Config register CONFIG2L @ 0x300002
 14916                           ;	Power-up Timer Enable bit
 14917                           ;	PWRTEN = OFF, Power up timer disabled
 14918                           ;	Brown-out Reset Enable bits
 14919                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14920                           ;	Brown Out Reset Voltage bits
 14921                           ;	BORV = 190, VBOR set to 1.90 V nominal
 14922  300002                     	org	3145730
 14923  300002  1F                 	db	31
 14924                           
 14925                           ;Config register CONFIG2H @ 0x300003
 14926                           ;	Watchdog Timer Enable bits
 14927                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 14928                           ;	Watchdog Timer Postscale Select bits
 14929                           ;	WDTPS = 32768, 1:32768
 14930  300003                     	org	3145731
 14931  300003  3C                 	db	60
 14932                           
 14933                           ; Padding undefined space
 14934  300004                     	org	3145732
 14935  300004  FF                 	db	255
 14936                           
 14937                           ;Config register CONFIG3H @ 0x300005
 14938                           ;	CCP2 MUX bit
 14939                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 14940                           ;	PORTB A/D Enable bit
 14941                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 14942                           ;	P3A/CCP3 Mux bit
 14943                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 14944                           ;	HFINTOSC Fast Start-up
 14945                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 14946                           ;	Timer3 Clock input mux bit
 14947                           ;	T3CMX = PORTC0, T3CKI is on RC0
 14948                           ;	ECCP2 B output mux bit
 14949                           ;	P2BMX = PORTB5, P2B is on RB5
 14950                           ;	MCLR Pin Enable bit
 14951                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 14952  300005                     	org	3145733
 14953  300005  BF                 	db	191
 14954                           
 14955                           ;Config register CONFIG4L @ 0x300006
 14956                           ;	Stack Full/Underflow Reset Enable bit
 14957                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14958                           ;	Single-Supply ICSP Enable bit
 14959                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 14960                           ;	Extended Instruction Set Enable bit
 14961                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14962                           ;	Background Debug
 14963                           ;	DEBUG = OFF, Disabled
 14964  300006                     	org	3145734
 14965  300006  85                 	db	133
 14966                           
 14967                           ; Padding undefined space
 14968  300007                     	org	3145735
 14969  300007  FF                 	db	255
 14970                           
 14971                           ;Config register CONFIG5L @ 0x300008
 14972                           ;	Code Protection Block 0
 14973                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14974                           ;	Code Protection Block 1
 14975                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14976                           ;	Code Protection Block 2
 14977                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14978                           ;	Code Protection Block 3
 14979                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14980  300008                     	org	3145736
 14981  300008  0F                 	db	15
 14982                           
 14983                           ;Config register CONFIG5H @ 0x300009
 14984                           ;	Boot Block Code Protection bit
 14985                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14986                           ;	Data EEPROM Code Protection bit
 14987                           ;	CPD = OFF, Data EEPROM not code-protected
 14988  300009                     	org	3145737
 14989  300009  C0                 	db	192
 14990                           
 14991                           ;Config register CONFIG6L @ 0x30000A
 14992                           ;	Write Protection Block 0
 14993                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14994                           ;	Write Protection Block 1
 14995                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14996                           ;	Write Protection Block 2
 14997                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14998                           ;	Write Protection Block 3
 14999                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 15000  30000A                     	org	3145738
 15001  30000A  0F                 	db	15
 15002                           
 15003                           ;Config register CONFIG6H @ 0x30000B
 15004                           ;	Configuration Register Write Protection bit
 15005                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15006                           ;	Boot Block Write Protection bit
 15007                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15008                           ;	Data EEPROM Write Protection bit
 15009                           ;	WRTD = OFF, Data EEPROM not write-protected
 15010  30000B                     	org	3145739
 15011  30000B  E0                 	db	224
 15012                           
 15013                           ;Config register CONFIG7L @ 0x30000C
 15014                           ;	Table Read Protection Block 0
 15015                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 15016                           ;	Table Read Protection Block 1
 15017                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15018                           ;	Table Read Protection Block 2
 15019                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 15020                           ;	Table Read Protection Block 3
 15021                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 15022  30000C                     	org	3145740
 15023  30000C  0F                 	db	15
 15024                           
 15025                           ;Config register CONFIG7H @ 0x30000D
 15026                           ;	Boot Block Table Read Protection bit
 15027                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15028  30000D                     	org	3145741
 15029  30000D  40                 	db	64
 15030                           tosu	equ	0xFFF
 15031                           tosh	equ	0xFFE
 15032                           tosl	equ	0xFFD
 15033                           stkptr	equ	0xFFC
 15034                           pclatu	equ	0xFFB
 15035                           pclath	equ	0xFFA
 15036                           pcl	equ	0xFF9
 15037                           tblptru	equ	0xFF8
 15038                           tblptrh	equ	0xFF7
 15039                           tblptrl	equ	0xFF6
 15040                           tablat	equ	0xFF5
 15041                           prodh	equ	0xFF4
 15042                           prodl	equ	0xFF3
 15043                           indf0	equ	0xFEF
 15044                           postinc0	equ	0xFEE
 15045                           postdec0	equ	0xFED
 15046                           preinc0	equ	0xFEC
 15047                           plusw0	equ	0xFEB
 15048                           fsr0h	equ	0xFEA
 15049                           fsr0l	equ	0xFE9
 15050                           wreg	equ	0xFE8
 15051                           indf1	equ	0xFE7
 15052                           postinc1	equ	0xFE6
 15053                           postdec1	equ	0xFE5
 15054                           preinc1	equ	0xFE4
 15055                           plusw1	equ	0xFE3
 15056                           fsr1h	equ	0xFE2
 15057                           fsr1l	equ	0xFE1
 15058                           bsr	equ	0xFE0
 15059                           indf2	equ	0xFDF
 15060                           postinc2	equ	0xFDE
 15061                           postdec2	equ	0xFDD
 15062                           preinc2	equ	0xFDC
 15063                           plusw2	equ	0xFDB
 15064                           fsr2h	equ	0xFDA
 15065                           fsr2l	equ	0xFD9
 15066                           status	equ	0xFD8

Data Sizes:
    Strings     3274
    Constant    30
    Data        5
    BSS         2244
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     95     118
    BANK1           256     53     213
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1885_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    myTMR0ISR@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _printAscii->_printf
    _printAddress->_printf
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0  207363
                                             91 BANK0      4     4      0
                                              0 BANK1     53    53      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                   _incrementAddress
                       _printAddress
                         _printAscii
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAscii                                           0     0      0   39542
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAddress                                         4     0      4   39874
                                             81 BANK0      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _incrementAddress                                     4     0      4     788
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   40332
                                             81 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             20 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0     124
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6    1908
                                             19 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6    1008
                                             19 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      96
                                             19 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   39898
                                             81 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   39542
                                             67 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28097
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   27534
                                             28 BANK0     31    25      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    6195
                                             47 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             24 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5577
                                             47 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             18 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             18 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6431
                                             47 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             36 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             18 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             18 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4444
                                             47 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4165
                                             36 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             29 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                             20 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             19 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             25 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     282
                                             14 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     282
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           4     4      0     282
                                             10 COMRAM     4     4      0
                _EPWM1_LoadDutyValue
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _EPWM1_LoadDutyValue                                 4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _incrementAddress
   _printAddress
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printAscii
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _EPWM1_LoadDutyValue
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     35      D5       7       83.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      76       5       73.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     197      12        0.0%
DATA                 0      0     997       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Nov 04 17:21:31 2020

                                            l17 36F0                                              l29 37F4  
                                            l87 3784                                              l79 341A  
                                            l96 365E                            myTMR0ISR@bufferIndex 0041  
                          SDCARD_ReadBlock@addr 0014                             ___wmul@multiplicand 0015  
                               _timer0ReloadVal 0043                                  hexDumpBuffer@i 00B9  
                                hexDumpBuffer@j 00B5                                             l100 3684  
                                           l103 375E                                             l112 37E2  
                                           l106 3770                                             l130 37D8  
                                           l124 37CE                                             l127 37C4  
                                           l151 356C                                             l235 3634  
                                           l163 37B0                                             l341 37F8  
                                           l173 37BA                                             l270 371C  
                                           l334 3796                                             l344 3732  
                                           l273 372A                                             l346 3740  
                                           l338 2F08                                             l347 3744  
                                           l267 36AA                                             l292 375A  
                                           l701 2A76                                             l189 37A6  
                                           l455 0098                                             l472 03D0  
                                           l721 36D0                                             l707 250C  
                                           l635 23F0                                             l572 105A  
                                           l468 038E                                             l549 0BDA  
                                           l718 25DC                                             l582 3358  
                                           l671 3458                                             l487 0592  
                                           l656 2FA2                                             l682 2936  
                                           l666 30C4                                             l835 28FE  
                                           l676 348E                                             l668 30C6  
                                           l589 31A6                                             l848 2BDA  
                                           _PR2 000FBB                                    _startCollect 004A  
                                           _abs 339E                                             _pad 2D9C  
                              main@writeAddress 00BF                                             _sin F317  
                               _TMR2_Initialize 3798                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                     main@address 01B8  
                                   _stopCollect 0049                                            ?_abs 0025  
                                          l1166 2CCA                                            l1159 2CAA  
                                          l1503 1DFA                                            l1176 2D9A  
                                          l1441 2E5C                                            l1169 2D7A  
                                          l1601 3456                                            l1436 2DE0  
                                          l1621 34FE                                            l1517 1F9A  
                                          l1533 12C6                                            l1454 1ADC  
                                          l1607 3536                                            l1615 3314  
                                          l1439 2E22                                            l1519 1FFC  
                                          l1448 32C2                                            l1456 1AE4  
                                          l1560 320A                                            l5001 357E  
                                          l1481 203E                                            l1650 35A2  
                                          l1474 1D1E                                            l1546 1752  
                                          l5011 36AC                                            l5003 3596  
                                          l1636 3038                                            l1644 339C  
                                          l1564 33D4                                            l1660 3268  
                                          l5013 36C8                                            l5021 278A  
                                          l5101 2C06                                            l1494 1D58  
                                          l5031 27E0                                            l5023 27AA  
                                          l1567 33DC                                            l5111 2C70  
                                          l5103 2C0E                                            l1479 2036  
                                          l5007 3490                                            l1655 3260  
                                          l1559 3202                                            l1399 365C  
                                          l1496 1D60                                            l5201 3294  
                                          l5041 2834                                            l5033 27EC  
                                          l5025 27AE                                            l5017 2778  
                                          l5113 2C90                                            l5105 2C22  
                                          l5121 2CEA                                            l1489 2204  
                                          l6001 0440                                            l1666 34C6  
                                          l1595 276E                                            l5203 3298  
                                          l5051 28A8                                            l5043 2846  
                                          l5035 280A                                            l5027 27BC  
                                          l5019 277C                                            l5211 1A5C  
                                          l5115 2C92                                            l5107 2C30  
                                          l5131 2D62                                            l5123 2CF2  
                                          l6011 04A2                                            l5141 2DCC  
                                          l5205 329E                                            l5045 2874  
                                          l5037 2812                                            l5053 28AE  
                                          l5029 27DC                                            l5061 2A78  
                                          l5221 1AD0                                            l5213 1A86  
                                          l5117 2CA4                                            l5109 2C42  
                                          l5133 2D74                                            l5125 2D06  
                                          l5301 21CE                                            l6101 0836  
                                          l6021 0544                                            l6013 04B2  
                                          l6005 044A                                            l1598 2776  
                                          l5151 2E30                                            l5143 2DD8  
                                          l5135 2D9C                                            l5055 28BE  
                                          l5047 2894                                            l5039 2826  
                                          l5071 2ABC                                            l5063 2A7C  
                                          l5231 1B1A                                            l5223 1AEC  
                                          l5215 1AA6                                            l5127 2D14  
                                          l5119 2CCC                                            l5303 21DC  
                                          l5311 1D30                                            l6111 08B4  
                                          l6103 085A                                            l6031 05B2  
                                          l6023 055C                                            l6015 04C0  
                                          l6007 0466                                            l5401 26EE  
                                          l5153 2E44                                            l5145 2DEC  
                                          l5137 2DAA                                            l5057 28DE  
                                          l5049 2896                                            l5081 2B24  
                                          l5073 2ADC                                            l5065 2A8A  
                                          l5241 1BBA                                            l5233 1B24  
                                          l5225 1AFE                                            l5217 1AB4  
                                          l5209 1A3C                                            l5129 2D42  
                                          l5161 34C8                                            l5321 1DAA  
                                          l5313 1D4A                                            l6201 0C20  
                                          l6121 0914                                            l6113 08D0  
                                          l6105 086C                                            l6033 05C4  
                                          l6025 056C                                            l6017 051C  
                                          l6009 047E                                            l5147 2E00  
                                          l5139 2DBE                                            l5091 2B9A  
                                          l5083 2B52                                            l5075 2AFA  
                                          l5067 2AAA                                            l5251 1C8C  
                                          l5235 1B2A                                            l5243 1C1E  
                                          l5227 1B0C                                            l5219 1AB6  
                                          l5331 1DEE                                            l5323 1DB4  
                                          l5315 1D76                                            l5307 1D20  
                                          l6211 0CC6                                            l6203 0C40  
                                          l6131 097E                                            l6123 0934  
                                          l6115 08E8                                            l6107 0888  
                                          l6043 0634                                            l6035 05E0  
                                          l6051 068C                                            l6027 0582  
                                          l6019 0530                                            l5405 272E  
                                          l5149 2E04                                            l5093 2BBA  
                                          l5085 2B72                                            l5077 2B02  
                                          l5069 2AAE                                            l5157 339E  
                                          l5261 1CD2                                            l5245 1C3A  
                                          l5253 1C9A                                            l5237 1BAC  
                                          l5229 1B12                                            l5165 341C  
                                          l5173 3242                                            l5341 1E7A  
                                          l5325 1DBA                                            l5317 1D80  
                                          l5309 1D2E                                            l5501 15E6  
                                          l5421 1214                                            l6301 1116  
                                          l6221 0D82                                            l6205 0C68  
                                          l6213 0CCA                                            l6141 09CE  
                                          l6133 0982                                            l6125 0944  
                                          l6117 08EE                                            l6109 08A0  
                                          l6061 06E2                                            l6053 06A0  
                                          l6045 0646                                            l6037 05E6  
                                          l6029 05A2                                            ?_pad 0025  
                                          l5191 330E                                            l5183 32C4  
                                          l5407 2740                                            l5087 2B84  
                                          l5079 2B16                                            l5159 33B8  
                                          l5263 1CDE                                            l5255 1CAC  
                                          l5247 1C58                                            l5239 1BB4  
                                          l5271 1FFE                                            l5175 3254  
                                          l5351 1EBE                                            l5343 1E8C  
                                          l5335 1E2E                                            l5327 1DC2  
                                          l5319 1DA0                                            l5503 160C  
                                          l5423 1218                                            l5415 11D0  
                                          l6303 1128                                            l6231 0E22  
                                          l6223 0D92                                            l6215 0CE0  
                                          l6207 0C82                                            l6151 0A32  
                                          l6143 09E2                                            l6135 098A  
                                          l6119 0904                                            l6127 0946  
                                          l6071 072C                                            l6063 06F8  
                                          l6047 0662                                            l6055 06C6  
                                          l6039 060A                                            l5185 32C8  
                                          l5409 2752                                            l5089 2B8A  
                                          l5265 1CE6                                            l5257 1CBA  
                                          l5249 1C72                                            l5097 2BDC  
                                          l5281 2070                                            l5273 200C  
                                          l5169 320C                                            l5361 1F8C  
                                          l5337 1E40                                            l5345 1EA0  
                                          l5329 1DDE                                            l5353 1F1C  
                                          l5505 1624                                            l5513 16AA  
                                          l5441 124C                                            l5433 1240  
                                          l5425 1226                                            l5417 11F6  
                                          l5601 3792                                            l6241 0E82  
                                          l6233 0E46                                            l6225 0DA2  
                                          l6217 0D6A                                            l6209 0C90  
                                          l6153 0A42                                            l6145 09FE  
                                          l6137 099A                                            l6161 0A98  
                                          l6081 0778                                            l6129 096A  
                                          l6073 073C                                            l6065 0704  
                                          l6057 06CA                                            l6049 0668  
                                          l5179 3500                                            l5187 32DC  
                                          l5195 326A                                            l5259 1CC0  
                                          l5267 1CF6                                            l5099 2BE8  
                                          l5291 2104                                            l5283 207A  
                                          l5275 200E                                            l5363 1FA8  
                                          l5355 1F3A                                            l5347 1EB2  
                                          l5531 1740                                            l5515 16D0  
                                          l5523 1700                                            l5507 1632  
                                          l5427 1228                                            l5451 12B4  
                                          l5419 1204                                            l5611 3636  
                                          l5603 3794                                            l6251 0EC2  
                                          l6243 0E98                                            l6235 0E50  
                                          l6227 0DF0                                            l6219 0D7E  
                                          l6171 0B0E                                            l6163 0AAA  
                                          l6155 0A62                                            l6147 0A16  
                                          l6139 09B6                                            l6091 07DE  
                                          l6083 0790                                            l6075 0742  
                                          l6067 0718                                            l6059 06DE  
                                          l6307 113E                                            l5621 365E  
                                          l5189 330A                                            l5381 2618  
                                          l5373 25DE                                            l5197 327C  
                                          l5285 2080                                            l5293 2168  
                                          l5277 2028                                            l5365 1FAE  
                                          l5357 1F58                                            l5349 1EB8  
                                          l5525 170E                                            l5517 16DE  
                                          l5509 166E                                            l5461 1340  
                                          l5453 12D4                                            l5445 1252  
                                          l5437 1246                                            l5429 123A  
                                          l5613 3640                                            l5701 309C  
                                          l5605 3710                                            l6261 0F3C  
                                          l6253 0EE8                                            l6229 0E06  
                                          l6181 0B72                                            l6173 0B26  
                                          l6165 0AC6                                            l6157 0A72  
                                          l6149 0A1C                                            l6093 07F4  
                                          l6085 07A4                                            l6077 074A  
                                          l6069 071C                                            l5623 366C  
                                          l5391 2670                                            l5383 2650  
                                          l5375 25F2                                            l5199 3288  
                                          l5295 217C                                            l5287 20F8  
                                          l5279 2066                                            l5367 1FBE  
                                          l5359 1F72                                            l5519 16F2  
                                          l5471 13C6                                            l5463 134E  
                                          l5455 12D6                                            l5711 3464  
                                          l5703 30AE                                            l5607 3746  
                                          l5551 37B2                                            l6271 0F86  
                                          l6263 0F4A                                            l6255 0EFC  
                                          l6247 0EA2                                            l6239 0E68  
                                          l6191 0BCA                                            l6183 0B82  
                                          l6175 0B2C                                            l6167 0ADE  
                                          l6159 0A74                                            l6095 0804  
                                          l6087 07C0                                            l6079 075C  
                                          l5625 3670                                            l5617 3772  
                                          l5609 372E                                            l5393 2678  
                                          l5385 2654                                            l5377 25F6  
                                          l5297 219A                                            l5289 20FE  
                                          l5369 1FD4                                            l5481 144C  
                                          l5465 136E                                            l5473 13D8  
                                          l5457 12FC                                            l5449 125E  
                                          l5529 171A                                            l5553 31A8  
                                          l5801 29AA                                            l5721 348C  
                                          l5713 3474                                            l5705 30B2  
                                          l5561 36D2                                            l5545 37C6  
                                          l5641 368E                                            l5633 37A8  
                                          l6281 0FD0                                            l6273 0F8A  
                                          l6265 0F58                                            l6257 0F00  
                                          l6249 0EAE                                            l6193 0BEA  
                                          l6177 0B42                                            l6185 0B84  
                                          l6169 0AF2                                            l6097 0824  
                                          l6089 07D8                                            l5627 367E  
                                          l5395 2680                                            l5379 25FA  
                                          l5299 21B4                                            l5491 1518  
                                          l5483 1472                                            l5475 13FE  
                                          l5467 137C                                            l5459 1332  
                                          l5555 31B0                                            l5811 29C8  
                                          l5803 29B0                                            l5707 345A  
                                          l5547 37BC                                            l5571 340A  
                                          l5563 37F2                                            l5651 36A2  
                                          l5643 3692                                            l5635 37AC  
                                          l6435 1156                                            l6291 1036  
                                          l6283 0FDE                                            l6275 0F90  
                                          l6267 0F66                                            l6259 0F2E  
                                          l6195 0BF6                                            l6179 0B52  
                                          l6187 0BA8                                            l6099 0834  
                                          l5629 3682                                            l5397 26B6  
                                          l5389 265A                                            l5493 153E  
                                          l5485 1498                                            l5477 1430  
                                          l6437 1286                                            l5557 31BE  
                                          l5821 2A06                                            l5813 29D2  
                                          l5805 29B6                                            l5709 3462  
                                          l5741 2F12                                            l5661 2EB2  
                                          l5549 37D0                                            l5573 3416  
                                          l5565 33DE                                            l5581 3558  
                                          l5653 36A6                                            l5645 3696  
                                          l5637 3686                                            l5901 25D0  
                                          l5725 3316                                            l5733 313C  
                                          l6293 104C                                            l6285 0FF4  
                                          l6277 0F9A                                            l6269 0F74  
                                          l6197 0C08                                            l6189 0BBA  
                                          l6439 26A0                                            l5495 1588  
                                          l5487 14E0                                            l5559 31E4  
                                          l5831 2A20                                            l5823 2A08  
                                          l5815 29D4                                            l5807 29BC  
                                          l5719 347A                                            l5751 2F30  
                                          l5743 2F18                                            l5735 2F0A  
                                          l5663 2ED6                                            l5655 2E60  
                                          l5567 33F2                                            l5583 355A  
                                          l5575 3538                                            l5591 37A0  
                                          l5647 369A                                            l5639 368A  
                                          l5727 3338                                            l5671 2206  
                                          l6295 10D8                                            l6279 0FAE  
                                          l6287 1006                                            l6199 0C16  
                                          l5841 2A42                                            l5833 2A26  
                                          l5825 2A0E                                            l5817 29E4  
                                          l5809 29C2                                            l5753 2F36  
                                          l5745 2F1E                                            l5737 2F0A  
                                          l5681 3048                                            l5673 303A  
                                          l5665 2F06                                            l5657 2E6E  
                                          l5569 33FE                                            l5593 360A  
                                          l5585 355C                                            l5577 353A  
                                          l5649 369E                                            l5729 3348  
                                          l6297 10F4                                            l6289 1028  
                                          l4971 376C                                            l5499 15C0  
                                          l5843 2A44                                            l5835 2A2C  
                                          l5827 2A14                                            l5819 29F4  
                                          l5771 2FA0                                            l5763 2F6A  
                                          l5755 2F4C                                            l5747 2F24  
                                          l5739 2F0C                                            l5691 3066  
                                          l5683 304E                                            l5675 303A  
                                          l5659 2EAE                                            l5595 3616  
                                          l5587 3568                                            l5579 3542  
                                          l5851 2400                                            l6299 1102  
                                          l5931 0096                                            l5923 0052  
                                          l4973 37DC                                            l4981 2FD2  
                                          l5845 2A54                                            l5837 2A32  
                                          l5829 2A1A                                            l5781 2914  
                                          l5773 2904                                            l5765 2F7E  
                                          l5757 2F62                                            l5749 2F2A  
                                          l5693 307C                                            l5685 3054  
                                          l5677 303C                                            l5669 37F6  
                                          l5597 3632                                            l5589 3798  
                                          l5861 243A                                            l5941 00BA  
                                          l5933 00A6                                            l5925 0084  
                                          l4983 2FF0                                            l4975 2FA4  
                                          l4991 3366                                            l5847 2A64  
                                          l5839 2A38                                            l5791 2984  
                                          l5783 291A                                            l5767 2F82  
                                          l5695 3094                                            l5687 305A  
                                          l5679 3042                                            l5599 3786  
                                          l5871 2496                                            l5863 2446  
                                          l5951 00F6                                            l5943 00C8  
                                          l5935 00B2                                            l5927 0088  
                                          l4969 375E                                            l4985 3026  
                                          l4977 2FB6                                            l4993 3378  
                                          l5793 2996                                            l5785 2938  
                                          l5769 2F94                                            l5689 3060  
                                          l5881 2500                                            l5873 24B2  
                                          l5865 245A                                            l5857 240A  
                                          l5849 23F2                                            l5961 013E  
                                          l5953 00FC                                            l5945 00D6  
                                          l5937 00B4                                            l5929 008A  
                                          l4979 2FC8                                            l4995 337C  
                                          l5795 2998                                            l5787 2972  
                                          l5779 290E                                            l5891 2566  
                                          l5883 2530                                            l5875 24C2  
                                          l5867 2478                                            l5859 241C  
                                          l5971 0376                                            l5963 0342  
                                          l5955 010A                                            l5947 00E4  
                                          l5939 00B6                                            l4989 335A  
                                          l4997 356E                                            l5797 299E  
                                          l5789 2974                                            l5893 2582  
                                          l5885 2536                                            l5877 24E4  
                                          l5869 2484                                            l5973 0384  
                                          l5965 0352                                            l5957 011E  
                                          l5949 00F2                                            l4999 357A  
                                          l5799 29A4                                            l5895 2592  
                                          l5887 2548                                            l5879 24EA  
                                          l5991 03EA                                            l5983 03B8  
                                          l5967 035C                                            l5959 0126  
                                          l5897 25B4                                            l5889 2554  
                                          l5985 03C6                                            l5977 0394  
                                          l5899 25BA                                            l5995 0400  
                                          l5979 039E                                            l5997 0428  
                                          l5989 03E0                                            l5999 043C  
                                          STR_1 FFC0                                            STR_2 FEE1  
                                          STR_3 FFC9                                            STR_4 FC61  
                                          STR_5 FFFA                                            STR_6 FF7B  
                                          STR_7 FB41                                            STR_8 FDB1  
                                          STR_9 FF91                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u5000 32DC                                            u5001 32D8  
                                          u5010 330A                                            u5011 3306  
                                          u5020 327C                                            u5100 1C3A  
                                          u5021 3278                                            u5101 1C36  
                                          u5110 1C58                                            u5030 1A6E  
                                          u5111 1C54                                            u5031 1A68  
                                          u5120 1C72                                            u5040 1A70  
                                          u5200 217C                                            u6000 03B4  
                                          u5121 1C6E                                            u5201 2178  
                                          u6001 03B0                                            u5130 1C8C  
                                          u5050 1A86                                            u5210 219A  
                                          u6010 03FC                                            u5131 1C88  
                                          u5051 1A82                                            u5211 2196  
                                          u6011 03F8                                            u5140 1C9A  
                                          u5060 1AB4                                            u5220 21B4  
                                          u5300 1E2A                                            u6100 06C6  
                                          u6020 043C                                            u5141 1C96  
                                          u5061 1AB0                                            u5221 21B0  
                                          u6101 06C2                                            u6021 0438  
                                          u5150 1CAC                                            u5070 1AD0  
                                          u5230 21CE                                            u5310 1E40  
                                          u6110 06DE                                            u6030 047E  
                                          u5151 1CA8                                            u5071 1ACC  
                                          u5231 21CA                                            u5311 1E3C  
                                          u6111 06DA                                            u6031 047A  
                                          u4600 2FF0                                            u5160 1CBA  
                                          u5080 1AFE                                            u5240 21DC  
                                          u5400 1F9A                                            u5320 1E74  
                                          u6200 086C                                            u6120 06F4  
                                          u6040 0502                                            u4601 2FEC  
                                          u5161 1CB6                                            u5081 1AFA  
                                          u5241 21D8                                            u5401 1F96  
                                          u5321 1E6E                                            u6201 0868  
                                          u6121 06F0                                            u4610 3026  
                                          u5170 1CD2                                            u5090 1B0C  
                                          u5410 1FA8                                            u5330 1E76  
                                          u5250 1D2E                                            u6210 08A0  
                                          u6130 0718                                            u6050 0582  
                                          u4611 3022                                            u5171 1CCE  
                                          u5091 1B08                                            u5411 1FA4  
                                          u5251 1D2A                                            u6211 089C  
                                          u6131 0714                                            u6051 057E  
                                          u5420 2618                                            u4620 339C  
                                          u4700 2834                                            u5180 200C  
                                          u5340 1E8C                                            u5260 1D4A  
                                          u5500 12C6                                            u6300 0A16  
                                          u6220 08B4                                            u6140 075C  
                                          u6060 05C4                                            u5421 2614  
                                          u4621 3398                                            u4701 2830  
                                          u5181 2008                                            u5341 1E88  
                                          u5261 1D46                                            u5501 12C2  
                                          u6301 0A12                                            u6221 08B0  
                                          u6141 0758                                            u6061 05C0  
                                          u6045 04F8                                            u5430 2650  
                                          u4630 3596                                            u4710 2874  
                                          u5190 2028                                            u5350 1EF6  
                                          u5270 1D76                                            u5510 12D4  
                                          u6310 0A32                                            u6230 08E8  
                                          u6150 0790                                            u6070 0630  
                                          u5431 264C                                            u4631 3592  
                                          u4711 2870                                            u5191 2024  
                                          u5271 1D72                                            u5511 12D0  
                                          u6311 0A2E                                            u6231 08E4  
                                          u6151 078C                                            u6071 062C  
                                          u5440 266C                                            u4720 28BE  
                                          u4800 2C06                                            u4640 34C0  
                                          u5360 1F3A                                            u5280 1DDE  
                                          u5600 153E                                            u5520 12FC  
                                          u6400 0BCA                                            u6320 0A42  
                                          u6240 0904                                            u6160 07A4  
                                          u6080 0646                                            u5441 2668  
                                          u4721 28BA                                            u4801 2C02  
                                          u4641 34BA                                            u5361 1F36  
                                          u5281 1DDA                                            u5601 153A  
                                          u5521 12F8                                            u6401 0BC6  
                                          u6321 0A3E                                            u6241 0900  
                                          u6161 07A0                                            u6081 0642  
                                          u5450 2728                                            u4570 376C  
                                          u4730 2A8A                                            u4810 2C30  
                                          u4650 34C2                                            u5370 1F58  
                                          u5290 1E28                                            u5610 15E6  
                                          u5530 1340                                            u6410 0BDA  
                                          u6330 0AAA                                            u6250 0914  
                                          u6170 07D8                                            u6090 06A0  
                                          u5451 2722                                            u4571 3768  
                                          u4731 2A86                                            u4811 2C2C  
                                          u5371 1F54                                            u5355 1EE4  
                                          u5291 1E22                                            u5611 15E2  
                                          u5531 133C                                            u6411 0BD6  
                                          u6331 0AA6                                            u6251 0910  
                                          u6171 07D4                                            u6091 069C  
                                          i2l20 3608                                            u5460 272A  
                                          u4580 2FB6                                            u4660 278A  
                                          u4740 2ABC                                            u4900 33B8  
                                          u4820 2C70                                            u5380 1F72  
                                          u5620 160C                                            u5540 13C0  
                                          u5700 2E6E                                            u6500 0FAE  
                                          u6420 0C08                                            u6340 0ADE  
                                          u6260 097E                                            u6180 07F4  
                                          u4581 2FB2                                            u4661 2786  
                                          u4741 2AB8                                            u4901 33B4  
                                          u4821 2C6C                                            u5381 1F6E  
                                          u5621 1608                                            u5541 13BA  
                                          u5701 2E6A                                            u6501 0FAA  
                                          u6421 0C04                                            u6341 0ADA  
                                          u6261 097A                                            u6181 07F0  
                                          u5470 2740                                            u4590 2FC8  
                                          u4670 27BC                                            u4750 2AFA  
                                          u4830 2CEA                                            u4910 34F8  
                                          u5390 1F8C                                            u5630 16D0  
                                          u5550 13C2                                            u5710 307C  
                                          u6510 0FD0                                            u6430 0CDC  
                                          u6350 0AF2                                            u6270 099A  
                                          u6190 0804                                            u5471 273C  
                                          u4591 2FC4                                            u4671 27B8  
                                          u4751 2AF6                                            u4831 2CE6  
                                          u4911 34F2                                            u5391 1F88  
                                          u5631 16CC                                            u5711 3078  
                                          u6511 0FCC                                            u6431 0CD8  
                                          u6351 0AEE                                            u6271 0996  
                                          u6191 0800                                            u5480 2752  
                                          u4760 2B24                                            u4840 2D14  
                                          u4920 34FA                                            u5560 13D8  
                                          u5640 3202                                            u5800 29E4  
                                          u5720 30C4                                            u6520 1028  
                                          u6440 0D7E                                            u6360 0B26  
                                          u6280 09CE                                            u5481 274E  
                                          u4681 27E6                                            u4761 2B20  
                                          u4841 2D10                                            u5561 13D4  
                                          u5641 31FE                                            u5801 29E0  
                                          u5721 30C0                                            u6521 1024  
                                          u6441 0D7A                                            u6361 0B22  
                                          u6281 09CA                                            u4690 280A  
                                          u4770 2B52                                            u4850 2D42  
                                          u4930 3450                                            u5570 13FE  
                                          u5490 11F6                                            u5810 29F4  
                                          u5730 3474                                            u5650 372A  
                                          u6450 0DDA                                            u6370 0B42  
                                          u6290 09E2                                            u4691 2806  
                                          u4771 2B4E                                            u4851 2D3E  
                                          u4931 344A                                            u5571 13FA  
                                          u5491 11F2                                            u5811 29F0  
                                          u5731 3470                                            u5651 3726  
                                          u6371 0B3E                                            u6291 09DE  
                                          i2l36 003A                                            u5660 3740  
                                          u4860 2DAA                                            u4780 2B9A  
                                          u4940 3452                                            u5580 1472  
                                          u5820 2A54                                            u5900 2548  
                                          u5740 3338                                            u6460 0E64  
                                          u6380 0B52                                            u5661 373C  
                                          u4861 2DA6                                            u4781 2B96  
                                          u5581 146E                                            u5821 2A50  
                                          u5901 2544                                            u5741 3334  
                                          u6461 0E60                                            u6381 0B4E  
                                          u5670 3782                                            u4870 2DCC  
                                          u4950 323C                                            u5590 1498  
                                          u5830 2A64                                            u5750 2F4C  
                                          u5910 2582                                            u6470 0EC2  
                                          u6390 0BBA                                            u5671 377C  
                                          u4871 2DC8                                            u4791 2BE2  
                                          u4951 3236                                            u5591 1494  
                                          u5831 2A60                                            u5751 2F48  
                                          u5911 257E                                            u6471 0EBE  
                                          u6455 0DD0                                            u6391 0BB6  
                                          u5680 366C                                            u4880 2E22  
                                          u4960 323E                                            u5760 2F62  
                                          u5920 25D0                                            u5840 241C  
                                          u6480 0EE8                                            u5681 3668  
                                          u4881 2E1E                                            u5761 2F5E  
                                          u5921 25CC                                            u5841 2418  
                                          u6481 0EE4                                            u5690 367E  
                                          u4890 2E30                                            u4970 3254  
                                          u5770 2F94                                            u5850 243A  
                                          u6490 0EFC                                            u5691 367A  
                                          u4891 2E2C                                            u4971 3250  
                                          u5771 2F90                                            u5851 2436  
                                          u6491 0EF8                                            u5676 3784  
                                          u4980 3530                                            u5780 2936  
                                          u5860 245A                                            u4981 352A  
                                          u5781 2932                                            u5861 2456  
                                          u4990 3532                                            u5790 2984  
                                          u5870 2478                                            u5950 00A6  
                                          u5791 2980                                            u5871 2474  
                                          u5951 00A2                                            u5880 24B2  
                                          u5960 011E                                            u5881 24AE  
                                          u5961 011A                                            u5890 2500  
                                          u5970 018C                                            u5891 24FC  
                                          u5990 0372                                            u5991 036E  
                                          u5975 0182                                            u5985 0236  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 375C                                            abs@a 0025  
                                          _dbuf 0180                                            _atoi 25DE  
                                          _ctoa 326A                                            _main 0052  
                                          _dtoa 1A3C                                   ?_EUSART1_Read 0001  
                                          _prec 003D                                            _nout 00C3  
                                          pad@i 002C                                            pad@p 0029  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002E                                            fsr2l 000FD9  
                                          btemp 004D                                            _utoa 1FFE  
                                          _xtoa 1D20                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00B3  
                                          start 004E                           ??_EPWM1_LoadDutyValue 0003  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0027                                           ??_pad 002B  
                       __end_of_TMR0_Initialize 356E                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 372C  
                               __end_of___aodiv 2900                                           ?_atoi 001A  
                                   ?_SPI2_Close 0001                                           ?_ctoa 0030  
                                         ?_main 0001                                           ?_dtoa 0030  
                               __end_of___aomod 2BDC                                           STR_10 FFEE  
                                         STR_11 FFFD                                           STR_20 FB43  
                                         STR_12 FFEE                                           STR_13 FFAE  
                                         STR_21 FE6F                                           STR_30 FB43  
                                         STR_22 FB43                                           STR_14 FF0B  
                                         STR_15 FB43                                           STR_31 FFD2  
                                         STR_23 FCAE                                           STR_32 FFF5  
                                         STR_16 FFB1                                           STR_40 FD56  
                                         STR_24 FC36                                           STR_33 FFF5  
                                         STR_41 FFEE                                           STR_17 FFDA  
                                         STR_25 FB0A                                           STR_26 FB43  
                                         STR_42 FFFD                                           STR_18 FEF6  
                                         STR_34 FD37                                           STR_50 FB77  
                                         STR_43 FFE1                                           STR_19 FE87  
                                         STR_35 FD75                                           STR_27 FBA9  
                                         STR_51 F381                                           STR_52 FF48  
                                         STR_36 FE9F                                           STR_60 FC89  
                                         STR_28 FC0A                                           STR_44 FA96  
                                         STR_61 FECC                                           STR_53 FE56  
                                         STR_29 FD17                                           STR_45 F3C8  
                                         STR_37 F335                                           STR_70 FFAE  
                                         STR_46 FFAE                                           STR_38 FFAE  
                                         STR_54 FD8E                                           STR_62 FD93  
                                         STR_71 FFA2                                           STR_63 FF20  
                                         STR_39 FE21                                           STR_55 FCD3  
                                         STR_47 FAD0                                           STR_72 FF6F  
                                         STR_64 FDEA                                           STR_48 FCF6  
                                         STR_56 FBDA                                           STR_80 F488  
                                         STR_57 FAD0                                           STR_73 FF80  
                                         STR_65 FF34                                           STR_49 FEB6  
                                         STR_81 F4C6                                           STR_58 FCF6  
                                         STR_74 FFEE                                           STR_66 FF5C  
                                         STR_90 F868                                           STR_82 F504  
                                         STR_59 FEB6                                           STR_75 FFFD  
                                         STR_67 FFEE                                           STR_91 F8A6  
                                         STR_83 F542                                           STR_68 FFFD  
                                         STR_76 FFEE                                           STR_92 F960  
                                         STR_84 F580                                           STR_77 FFAE  
                                         STR_69 FFEE                                           STR_93 F99E  
                                         STR_85 F5FC                                           STR_94 F9DC  
                                         STR_86 F678                                           STR_78 F40C  
                                         STR_95 FA1A                                           STR_87 F6F4  
                                         STR_79 F44A                                           STR_96 FA58  
                                         STR_88 F732                                           STR_97 F922  
                                         STR_89 F7AE                                           STR_98 F922  
                                         STR_99 F8E4                       TMR0_ReadTimer@readValHigh 0008  
                                         ?_utoa 0030                                           _T0CON 000FD5  
                               __end_of___lodiv 2CCC                                           ?_xtoa 0030  
                                         _T2CON 000FBA                                 __end_of___lomod 2D9C  
                                         i2l160 370E                                           i2l170 35D8  
                                         i2l163 37EC                                 _TMR0_WriteTimer 37A8  
                                         i2l176 37FA                                           i2l616 18B6  
                                         i2l632 1A3A                                           i2l629 19BA  
                                  vfpfcnvrt@fmt 007E                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 0092                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    _stopPlayback 0048  
             __size_of_TMR0_SetInterruptHandler 000A                              __size_of_SPI2_Open 00AC  
                     ?_TMR0_SetInterruptHandler 0013                                __end_of_TMR0_ISR 35DA  
                                  main@sinIndex 00CD                                           _flags 003F  
                                         _fputc 2FA4                                 __end_of_isalpha 3458  
                                         _fputs 335A                                 __end_of_isdigit 3538  
                                         atoi@n 0027                                           pad@fp 0025  
                                         atoi@s 001A                                           _width 003B  
                                         ctoa@c 0032                                           _putch 37DA  
                                         ctoa@w 0033                                           main@i 01BD  
                                         dtoa@d 0032                                           dtoa@i 0078  
                                         dtoa@n 0070                                           dtoa@p 006A  
                                         dtoa@s 006E                                           dtoa@w 006C  
                               __end_of_islower 34C8                                 __end_of_isspace 3316  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 3500  
                                         pclath 000FFA                                    main@printVal 01A5  
                                         tablat 000FF5                                  ??_EUSART1_Read 0013  
                                         ttemp5 004E                                           ttemp6 0051  
                                         ttemp7 0055                                           utoa@d 0032  
                                         utoa@i 0074                                           utoa@n 006C  
                                         utoa@p 0068                                           utoa@w 006A  
                                         status 000FD8                                           wtemp8 004E  
                                         xtoa@c 007A                                           xtoa@d 0032  
                                         xtoa@i 0078                                           xtoa@n 0070  
                                         xtoa@p 006C                                           xtoa@w 006E  
                                         xtoa@x 003A                                 __end_of_toupper 326A  
                              ___lodiv@dividend 0013              _EUSART1_DefaultFramingErrorHandler 000000  
                           myTMR0ISR@useBuffer1 004C                                    _toupper$2111 001F  
                               __initialization 30C8                    SDCARD_ReadBlock@sdCardBuffer 0018  
                                  __end_of_atoi 2778                                    __end_of_ctoa 32C4  
                    __end_of_EUSART1_Initialize 341C                                    __end_of_main 11D0  
                                  __end_of_dtoa 1D20                                    __end_of_utoa 2206  
                             _SPI2_ExchangeByte 372C                                    __end_of_xtoa 1FFE  
             __size_of_SDCARD_PollWriteComplete 0038                       ?_SDCARD_PollWriteComplete 0001  
                       __end_of_TMR2_Initialize 37A8                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                                          ??_atoi 001C  
                                        ??_ctoa 0033                                          ??_main 00BB  
                                        ??_dtoa 0060                                          ??_utoa 0060  
                                        ??_xtoa 0060                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 0012                                ___lodiv@quotient 0023  
                           ??_SPI2_ExchangeByte 0013                                    myTMR0ISR@mic 000D  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0015  
                                        STR_100 F7EC                                          STR_101 F82A  
                                        STR_110 F488                                          STR_102 F770  
                                        ?_fputs 001E                                          STR_111 F44A  
                                        STR_103 F6B6                                          STR_112 F40C  
                                        STR_120 FFF7                                          STR_104 F63A  
                                        STR_121 FFAE                                          STR_113 FE06  
                                        STR_105 F5BE                                          STR_106 F580  
                                        STR_122 FFE8                                          STR_114 FE3C  
                                        _ADRESH 000FC4                                          STR_107 F542  
                                        STR_123 FF8D                                          STR_115 FDCE  
                                        STR_108 F504                                          STR_124 F37F  
                                        STR_116 FFF3                                          STR_109 F4C6  
                                        STR_117 FF8F                                          STR_125 FFF7  
                                        STR_126 FFAE                                          STR_118 FF8E  
                                        _ADRESL 000FC3                                          STR_119 F37F  
                                        _CCPR1H 000FBF                                          _CCPR1L 000FBE  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l4101 1982  
                                        i2l4021 1754                                          i2l4103 1992  
                                        i2l4031 179C                                          i2l4023 1756  
                                        i2l4113 19E8                                          i2l4105 199A  
                                        i2l4041 17CA                                          i2l4033 17A4  
                                        i2l4025 176C                                          i2l4107 199E  
                                        i2l4051 1804                                          i2l4043 17D2  
                                        i2l4035 17A8                                          i2l4027 1776  
                                        i2l4131 35AE                                          i2l4109 19A6  
                                        i2l4061 185E                                          i2l4053 1814  
                                        i2l4045 17DA                                          i2l4029 1786  
                                        i2l4037 17B0                                          i2l4117 19F8  
                                        i2l4133 35C0                                          i2l4125 35A4  
                                        i2l4063 186E                                          i2l4071 1894  
                                        i2l4055 182A                                          i2l4047 17E2  
                                        i2l4039 17C2                                          i2l4127 35A6  
                                        i2l4081 18F4                                          i2l4073 189A  
                                        i2l4065 1874                                          i2l4057 1846  
                                        i2l4049 17F2                                          i2l4129 35AA  
                                        i2l4091 194E                                          i2l4083 1904  
                                        i2l4075 18A2                                          i2l4067 187C  
                                        i2l4059 184A                                          i2l4093 1952  
                                        i2l4085 1916                                          i2l4069 188C  
                                        i2l4421 001A                                          i2l4095 1966  
                                        i2l4087 1926                                          i2l4079 18E4  
                                        i2l4423 0028                                          i2l4097 1976  
                                        i2l4089 193C                                          i2l4425 0036  
                                        i2l4099 197A                                          i2l3935 35DA  
                                        i2l3945 36F2                                          i2l3961 37E4  
                                        i2l6441 1A0C                                          i2l3947 36FA  
                                        i2l3963 37E8                                          i2l3949 3706  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 008E                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                               __end_of_SPI2_Open 2F0A  
                     __end_of_SPI2_ExchangeByte 3746                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 00A1                                       ??___aodiv 0023  
                                     ??___aomod 0023                                          ___wmul 36AC  
                 incrementAddress@sdCardAddress 0013                                   main@numBlocks 01A1  
                       __end_of_TMR0_WriteTimer 37B2                                main@failureIndex 01CF  
                                     ??___lodiv 0023                                       ??___lomod 0023  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 0013  
                              ?_TMR0_Initialize 0001                                          clear_0 3102  
                                        clear_1 3114                                          clear_2 3120  
                                        clear_3 312C                                          _printf 3636  
                                        pad@buf 0027                ??_EUSART1_SetOverrunErrorHandler 0015  
               ?_EUSART1_SetOverrunErrorHandler 0013                                          ctoa@fp 0030  
                                        dtoa@fp 0030                                          _strlen 356E  
                                        fputc@c 0015                               ?_incrementAddress 0013  
                                        fputs@c 0022                                          fputs@i 0023  
                                  __pdataCOMRAM 004C                                          fputs@s 001E  
                                     ??_isalpha 0015                                       ??_isdigit 0015  
                                     ??_islower 0015                                    __mediumconst F316  
                                     ??_isspace 0015                                          tblptrh 000FF7  
                                     ??_isupper 0015                                          tblptrl 000FF6  
                                        tblptru 000FF8                              ??_incrementAddress 0017  
                           main@writeEndAddress 01C3                                __end_of_vfprintf 320C  
                               ??_EUSART1_Write 0013                                          utoa@fp 0030  
      TMR0_SetInterruptHandler@InterruptHandler 0013                                          xtoa@fp 0030  
                                     ??_toupper 001B                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 3686                                      __accesstop 0060  
                       __end_of__initialization 3132                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                _SDCARD_ReadBlock 2F0A  
                             ?_EPWM1_Initialize 0001                      __end_of_spi2_configuration F335  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 37EE  
                           ??_SYSTEM_Initialize 0017                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 0013                                   __end_of_fputc 303A  
                                 __end_of_fputs 339E                                   __end_of_putch 37E4  
                       __size_of_TMR0_ReadTimer 001E                                ?_TMR2_Initialize 0001  
                                main@endAddress 01AF                            __end_of_EUSART1_Read 3686  
                                       ??_fputc 0019                       __end_of_SYSTEM_Initialize 36AC  
                                       ??_fputs 0022                              __size_of_myTMR0ISR 02E8  
                                       ??_putch 0014                              SDCARD_WriteBlock@i 001A  
                             ??_SPI2_Initialize 0013                                      __pbssBANK0 00BF  
                                    __pbssBANK1 0100                                 myTMR0ISR@buffer 00D2  
                                    _doPlayback 00CE                               _writeFailureTable 01D5  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 37DA  
              __end_of_TMR0_SetInterruptHandler 37BC                                         ?___wmul 0013  
                                    ??_TMR0_ISR 000F                                ?_TMR0_WriteTimer 0013  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                       ?_printf 00A3                                    ??_SPI2_Close 0013  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0013  
        __end_of_EUSART1_SetFramingErrorHandler 37D0         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 37C6                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0584                                      _collecting 00CF  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                                ___lomod@dividend 0013  
                             SDCARD_ReadBlock@i 001A                     __end_of_EPWM1_LoadDutyValue 360A  
              __end_of_SDCARD_PollWriteComplete 3490                              __end_of_SPI2_Close 37FA  
                          _ADC_InterruptHandler 00C5                                         __Hparam 0000  
                                       __Lparam 0000                           __end_of_hexDumpBuffer 25DE  
                     SDCARD_Initialize@response 00B4                                         ___aodiv 2778  
                                       ___aomod 2A78                                 __size_of___wmul 0026  
                                       ___lodiv 2BDC                                         ___lomod 2CCC  
                             __end_of_myTMR0ISR 1A3C                                       ?_vfprintf 009B  
                           _EUSART1_is_rx_ready 3772                                         __pcinit 30C8  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 2206                                         __ptext2 313C  
                                       __ptext3 3316                                         __ptext4 23F2  
                                       __ptext5 37A8                                         __ptext6 3686  
                                       __ptext7 3798                                         __ptext8 3538  
                                       __ptext9 37B2                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 3710                                       _T2CONbits 000FBA  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 341C                                         _isdigit 3500  
                            _EUSART1_Initialize 33DE                                         _islower 3490  
                      ??_PIN_MANAGER_Initialize 0013                                         _isspace 32C4  
                                       _isupper 34C8                                    _sdCardBuffer 07D5  
                                       atoi@neg 0020                                         main@cmd 01BC  
                    __size_of_SYSTEM_Initialize 0026                                         _toupper 320C  
                          end_of_initialization 3132                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _sampleRate 00D4  
                                       fputc@fp 0017                     _EUSART1_OverrunErrorHandler 00C9  
                                       fputs@fp 0020                                   ?_printAddress 00B1  
                 SDCARD_WriteBlock@sdCardBuffer 0018                               __end_of_vfpfcnvrt 1754  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 003B  
                                     _SPI2_Open 2E5E                                  _TMR0_ReadTimer 36F2  
                          ??_EUSART1_Initialize 0015                           SDCARD_WriteBlock@addr 0014  
                                       strlen@a 0015                                         strlen@s 0013  
                                    _printAscii 2206                        _TMR0_SetInterruptHandler 37B2  
                      __end_of_SDCARD_ReadBlock 2FA4                                       _TRISBbits 000F93  
                                    main@i_1309 01B5                                      main@i_1279 01B3  
                                    main@i_1289 01B7                __size_of_EUSART1_SetErrorHandler 000A  
                SDCARD_PollWriteComplete@status 0014                             EUSART1_Write@txData 0013  
                         ??_EUSART1_is_rx_ready 0013                             printAddress@address 00B1  
                                  _EUSART1_Read 365E                       __size_of_incrementAddress 0044  
                                ??_printAddress 003B                                      main@status 01D0  
                      _SDCARD_PollWriteComplete 3458                          __end_of_TMR0_ReadTimer 3710  
                  __end_of_INTERRUPT_Initialize 37F6                               _SDCARD_Initialize 2900  
                                    ?_SPI2_Open 0001                                     vfpfcnvrt@ap 0080  
                                   vfpfcnvrt@fp 007C                                     vfpfcnvrt@ll 0086  
                                __end_of___wmul 36D2                                   __pidataCOMRAM 37FC  
                             __size_of_TMR0_ISR 0036                              ?_SDCARD_Initialize 0001  
                                _ADC_Initialize 3746                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 3786                                  __end_of_printf 365E  
                                __end_of_strlen 35A4                              _spi2_configuration F331  
                           start_initialization 30C8                                 ___lodiv@divisor 001B  
                     __size_of_EPWM1_Initialize 0020                                 ___lodiv@counter 002B  
                           ??_SDCARD_Initialize 003B                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 33DE  
                                   __end_of_pad 2E5E                                     __end_of_sin F331  
                                   putch@txData 0014                    EPWM1_LoadDutyValue@dutyValue 0001  
                         __end_of_EUSART1_Write 3772                               main@sdCardAddress 01CB  
                     __end_of_SDCARD_Initialize 2A78                                     vfprintf@fmt 009D  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0017  
                        __end_of_ADC_Initialize 375C                                     __pdataBANK0 00D2  
                                   ?_printAscii 0001                                        ??_printf 003B  
                         SPI2_ExchangeByte@data 0013                                        ??_strlen 0015  
                                   __pbssBIGRAM 01D5                                     __pbssCOMRAM 003B  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 01A0  
                           hexDumpBuffer@j_1440 00B7                                ___aodiv@dividend 0013  
                      __size_of_TMR2_Initialize 0010                ??_EUSART1_SetFramingErrorHandler 0015  
               ?_EUSART1_SetFramingErrorHandler 0013                               main@printedBlocks 01A7  
                            _writeFailureStatus 0100                                       _atoi$2035 0022  
                                     _atoi$2036 0026                                       _atoi$2037 0024  
                         _TMR0_InterruptHandler 0045                                  myTMR0ISR@state 0047  
                        _PIN_MANAGER_Initialize 360A                                       _dtoa$1980 0068  
                             _SDCARD_WriteBlock 303A                                       __pintcode 0008  
                                 __pmediumconst F316                         __end_of_SPI2_Initialize 3798  
                                      ?___aodiv 0013                                        ?___aomod 0013  
                              ___aodiv@quotient 0025                              ?_SDCARD_WriteBlock 0014  
                                      ?___lodiv 0013                                        ?___lomod 0013  
                               ?_ADC_Initialize 0001                                     ??_SPI2_Open 0013  
              SPI2_Open@spi2UniqueConfiguration 0014                    ??_INTERRUPT_InterruptManager 000F  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 1754  
                               ___lomod@divisor 001B                             ??_SDCARD_WriteBlock 001A  
                               ___lomod@counter 0023                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0013  
                                      ?_isdigit 0013                           main@writeStartAddress 01BF  
                          __end_of_printAddress 31A8                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00C7                                        ?_islower 0013  
                                      ?_isspace 0013                                        ?_isupper 0013  
                       _EUSART1_SetErrorHandler 37D0                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 0019  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 37F2  
                                   _buffer1Full 00D1                                     _buffer2Full 00D0  
                             ??_TMR0_Initialize 0015                                  ___wmul@product 0017  
       EUSART1_SetErrorHandler@interruptHandler 0013                                        _LATBbits 000F8A  
                           __size_of_printAscii 01EC                                _incrementAddress 3316  
                     __end_of_SDCARD_WriteBlock 30C8             __size_of_INTERRUPT_InterruptManager 0046  
                    ??_TMR0_SetInterruptHandler 0015                                        i2u350_40 186E  
                                      i2u350_41 186A                                        i2u351_40 188C  
                                      i2u343_40 1786                                        i2u351_41 1888  
                                      i2u343_41 1782                                        i2u360_40 1966  
                                      i2u352_40 18B2                                        i2u344_40 17C2  
                                      i2u360_41 1962                                        i2u352_41 18AE  
                                      i2u344_41 17BE                                        i2u361_40 1976  
                                      i2u353_40 18C8                                        i2u345_40 17F2  
                                      i2u361_41 1972                                        i2u353_41 18C2  
                                      i2u345_41 17EE                                        _PIR1bits 000F9E  
                                      i2u362_40 1992                                        i2u354_40 18CA  
                                      i2u346_40 1804                                        i2u362_41 198E  
                                      i2u346_41 1800                                        i2u363_40 19B6  
                                      i2u355_40 18E4                                        i2u347_40 1814  
                                      i2u363_41 19B2                                        i2u355_41 18E0  
                                      i2u347_41 1810                                        i2u364_40 19CC  
                                      i2u356_40 1904                                        i2u348_40 1826  
                                      i2u364_41 19C6                                        i2u356_41 1900  
                                      i2u348_41 1822                                        i2u365_40 19CE  
                                      i2u357_40 1916                                        i2u349_40 185E  
                                      i2u357_41 1912                                        i2u349_41 185A  
                                      _PIR3bits 000FA4                                        i2u366_40 19E8  
                                      i2u358_40 1926                                        i2u366_41 19E4  
                                      i2u358_41 1922                                        i2u359_40 1938  
                                      i2u367_40 35C0                                        i2u359_41 1934  
                                      i2u367_41 35BC                                 main@readAddress 01C7  
                                      i2u368_48 35C6                                        i2u368_49 35D8  
                                      i2u395_40 0028                                        i2u395_41 0024  
                                      i2u396_40 0036                                        i2u396_41 0032  
                  __size_of_EPWM1_LoadDutyValue 0030                      __size_of_SDCARD_Initialize 0178  
                                      _RCONbits 000FD0                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 35A4  
                                      _PSTR1CON 000FB9                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 11D0                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$1997 0068                                       _xtoa$1998 006A  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0013  
                                    ?_myTMR0ISR 0001                                _EPWM1_Initialize 36D2  
                             i2_TMR0_WriteTimer 37E4                               ?_SDCARD_ReadBlock 0014  
                                  _isspace$2062 0019                          __size_of_hexDumpBuffer 01EC  
                                    vfpfcnvrt@c 009A                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                                       copy_data0 30DC  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 001A  
                    ??_SDCARD_PollWriteComplete 0014                               ??_TMR2_Initialize 0013  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 009F                                        __Lrparam 0000  
                                    vfprintf@fp 009B                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0013                                __size_of___aodiv 0188  
                            SDCARD_Initialize@i 00B1                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 007C  
                               ___aodiv@divisor 001B                                 ___aodiv@counter 0023  
                     __end_ofi2_TMR0_WriteTimer 37EE                       ??_EUSART1_SetErrorHandler 0015  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 3786  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 3786                                        __ptext11 360A  
                                      __ptext20 2E5E                                        __ptext12 3710  
                                      __ptext21 37F6                                        __ptext13 37F2  
                                      __ptext30 320C                                        __ptext22 303A  
                                      __ptext14 33DE                                        __ptext31 3490  
                                      __ptext23 2F0A                                        __ptext15 37BC  
                                      __ptext40 2778                                        __ptext32 34C8  
                                      __ptext24 3458                                        __ptext16 37C6  
                                      __ptext41 326A                                        __ptext33 341C  
                                      __ptext25 2900                                        __ptext17 37D0  
                                      __ptext50 3500                                        __ptext42 2D9C  
                                      __ptext34 1FFE                                        __ptext26 3636  
                                      __ptext18 36D2                                        __ptext51 36AC  
                                      __ptext43 356E                                        __ptext35 2CCC  
                                      __ptext27 31A8                                        __ptext19 3746  
                                      __ptext60 36F2                                        __ptext52 372C  
                                      __ptext44 335A                                        __ptext36 2BDC  
                                      __ptext28 11D0                                        __ptext61 35DA  
                                      __ptext53 3772                                        __ptext45 2FA4  
                                      __ptext37 1A3C                                        __ptext29 1D20  
                                      __ptext62 0000                                        __ptext54 365E  
                                      __ptext46 37DA                                        __ptext38 339E  
                                      __ptext47 375C                                        __ptext39 2A78  
                                      __ptext56 35A4                                        __ptext48 25DE  
                                      __ptext57 37FA                                        __ptext49 32C4  
                                      __ptext58 1754                                        __ptext59 37E4  
                              __size_of_isupper 0038                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 0013                               ??_TMR0_WriteTimer 0015  
                              __size_of_toupper 005E                                   __size_of_atoi 019A  
                                 __size_of_ctoa 005A                           main@writeAddress_1285 01D1  
                                 __size_of_main 117E                                   __size_of_dtoa 02E4  
                                 __size_of_utoa 0208                                ??_TMR0_ReadTimer 0003  
                                 __size_of_xtoa 02DE                      __size_of_SDCARD_WriteBlock 008E  
          __end_of_TMR0_DefaultInterruptHandler 37FC           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 37FA  EUSART1_SetOverrunErrorHandler@interruptHandler 0013  
                                 _hexDumpBuffer 23F2                                   _sdCardBuffer1 05D5  
                                 _sdCardBuffer2 03D5                                        int$flags 004D  
                                      _vfprintf 31A8              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                        main@addr 01AB  
                                     printf@fmt 00A3                           __size_of_printAddress 006C  
                                  ??_printAscii 003B                     _EUSART1_FramingErrorHandler 00CB  
                              ___aomod@dividend 0013                                     ??_myTMR0ISR 000B  
                                _vfpfcnvrt$2012 0090                                      _INTCONbits 000FF2  
                                      isalpha@c 0013                                        isdigit@c 0013  
                        ??_INTERRUPT_Initialize 0013                        SDCARD_Initialize@verbose 00B3  
                                      intlevel2 0000                                        islower@c 0013  
                                      isspace@c 0013                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 37C6         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 37BC                                      _RCSTA1bits 000FAB  
                            __end_of_printAscii 23F2                                        isupper@c 0013  
                              ??_ADC_Initialize 0013                                    _printAddress 313C  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 00B1                                        printf@ap 00AF  
EUSART1_SetFramingErrorHandler@interruptHandler 0013                                 ___aomod@divisor 001B  
                                   ??_vfpfcnvrt 0082                                 ___aomod@counter 0023  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004B  
                                    _SPI2_Close 37F6                        __end_of_incrementAddress 335A  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 3538  
                                      toupper@c 0019                             _EPWM1_LoadDutyValue 35DA  
                                  ___aodiv@sign 0024                  __end_of_PIN_MANAGER_Initialize 3636  
                     hexDumpBuffer@sdCardBuffer 00B1                                    ___aomod@sign 0024  
                                  fp__myTMR0ISR 0000                        __end_of_EPWM1_Initialize 36F2  
                          ?_EPWM1_LoadDutyValue 0001  
