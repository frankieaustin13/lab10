

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 05 10:25:26 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    85                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    86                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    87  0000                     
    88                           ; Version 2.20
    89                           ; Generated 05/05/2020 GMT
    90                           ; 
    91                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F26K22 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   124  0000                     
   125 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   126  0000                     
   127 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   128  0000                     
   129                           	psect	idataCOMRAM
   130  003992                     __pidataCOMRAM:
   131                           	callstack 0
   132                           
   133                           ;initializer for myTMR0ISR@useBuffer1
   134  003992  01                 	db	1
   135                           
   136                           	psect	idataBANK0
   137  003984                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for myTMR0ISR@buffer
   141  003984  FC                 	db	low _sdCardBuffer1
   142  003985  05                 	db	high _sdCardBuffer1
   143                           
   144                           ;initializer for _sampleRate
   145  003986  0640               	dw	1600
   146                           
   147                           	psect	mediumconst
   148  00F346                     __pmediumconst:
   149                           	callstack 0
   150  00F346  00                 	db	0
   151  00F347                     main@F6231:
   152                           	callstack 0
   153  00F347  80                 	db	128
   154  00F348  9F                 	db	159
   155  00F349  BB                 	db	187
   156  00F34A  D5                 	db	213
   157  00F34B  E9                 	db	233
   158  00F34C  F8                 	db	248
   159  00F34D  FF                 	db	255
   160  00F34E  FF                 	db	255
   161  00F34F  F8                 	db	248
   162  00F350  E9                 	db	233
   163  00F351  D5                 	db	213
   164  00F352  BB                 	db	187
   165  00F353  9F                 	db	159
   166  00F354  80                 	db	128
   167  00F355  61                 	db	97
   168  00F356  45                 	db	69
   169  00F357  2B                 	db	43
   170  00F358  17                 	db	23
   171  00F359  08                 	db	8
   172  00F35A  01                 	db	1
   173  00F35B  01                 	db	1
   174  00F35C  08                 	db	8
   175  00F35D  17                 	db	23
   176  00F35E  2B                 	db	43
   177  00F35F  45                 	db	69
   178  00F360  61                 	db	97
   179  00F361                     __end_ofmain@F6231:
   180                           	callstack 0
   181  00F361                     _spi2_configuration:
   182                           	callstack 0
   183  00F361  01                 	db	1
   184  00F362  40                 	db	64
   185  00F363  01                 	db	1
   186  00F364  00                 	db	0
   187  00F365                     __end_of_spi2_configuration:
   188                           	callstack 0
   189  0000                     _ANSELA	set	3896
   190  0000                     _ANSELB	set	3897
   191  0000                     _ANSELC	set	3898
   192  0000                     _CCPTMRS0bits	set	3913
   193  0000                     _LATBbits	set	3978
   194  0000                     _ADCON0bits	set	4034
   195  0000                     _ADCON0	set	4034
   196  0000                     _ADRESH	set	4036
   197  0000                     _ADRESL	set	4035
   198  0000                     _ADCON2	set	4032
   199  0000                     _ADCON1	set	4033
   200  0000                     _RCONbits	set	4048
   201  0000                     _PIR3bits	set	4004
   202  0000                     _SSP2BUF	set	3951
   203  0000                     _SSP2CON2	set	3947
   204  0000                     _SSP2CON1bits	set	3948
   205  0000                     _TRISBbits	set	3987
   206  0000                     _SSP2ADD	set	3950
   207  0000                     _SSP2CON1	set	3948
   208  0000                     _SSP2STAT	set	3949
   209  0000                     _OSCTUNE	set	3995
   210  0000                     _OSCCON2	set	4050
   211  0000                     _OSCCON	set	4051
   212  0000                     _INTCON2bits	set	4081
   213  0000                     _WPUB	set	3937
   214  0000                     _TRISC	set	3988
   215  0000                     _TRISB	set	3987
   216  0000                     _TRISA	set	3986
   217  0000                     _LATC	set	3979
   218  0000                     _LATB	set	3978
   219  0000                     _LATA	set	3977
   220  0000                     _T2CONbits	set	4026
   221  0000                     _T2CON	set	4026
   222  0000                     _TMR2	set	4028
   223  0000                     _PR2	set	4027
   224  0000                     _T0CON	set	4053
   225  0000                     _INTCONbits	set	4082
   226  0000                     _TMR0L	set	4054
   227  0000                     _TMR0H	set	4055
   228  0000                     _T0CONbits	set	4053
   229  0000                     _TXREG1	set	4013
   230  0000                     _RCREG1	set	4014
   231  0000                     _RCSTA1bits	set	4011
   232  0000                     _TXSTA1bits	set	4012
   233  0000                     _PIR1bits	set	3998
   234  0000                     _SPBRGH1	set	4016
   235  0000                     _SPBRG1	set	4015
   236  0000                     _TXSTA1	set	4012
   237  0000                     _RCSTA1	set	4011
   238  0000                     _BAUDCON1	set	4024
   239  0000                     _CCPR1L	set	4030
   240  0000                     _CCPR1H	set	4031
   241  0000                     _PSTR1CON	set	4025
   242  0000                     _PWM1CON	set	4023
   243  0000                     _ECCP1AS	set	4022
   244  0000                     _CCP1CON	set	4029
   245  0000                     _PLLRDY	set	32407
   246  00F365                     STR_36:
   247  00F365  50                 	db	80	;'P'
   248  00F366  72                 	db	114	;'r'
   249  00F367  65                 	db	101	;'e'
   250  00F368  73                 	db	115	;'s'
   251  00F369  73                 	db	115	;'s'
   252  00F36A  20                 	db	32
   253  00F36B  61                 	db	97	;'a'
   254  00F36C  6E                 	db	110	;'n'
   255  00F36D  79                 	db	121	;'y'
   256  00F36E  20                 	db	32
   257  00F36F  6B                 	db	107	;'k'
   258  00F370  65                 	db	101	;'e'
   259  00F371  79                 	db	121	;'y'
   260  00F372  20                 	db	32
   261  00F373  74                 	db	116	;'t'
   262  00F374  6F                 	db	111	;'o'
   263  00F375  20                 	db	32
   264  00F376  73                 	db	115	;'s'
   265  00F377  74                 	db	116	;'t'
   266  00F378  61                 	db	97	;'a'
   267  00F379  72                 	db	114	;'r'
   268  00F37A  74                 	db	116	;'t'
   269  00F37B  20                 	db	32
   270  00F37C  72                 	db	114	;'r'
   271  00F37D  65                 	db	101	;'e'
   272  00F37E  63                 	db	99	;'c'
   273  00F37F  6F                 	db	111	;'o'
   274  00F380  72                 	db	114	;'r'
   275  00F381  64                 	db	100	;'d'
   276  00F382  69                 	db	105	;'i'
   277  00F383  6E                 	db	110	;'n'
   278  00F384  67                 	db	103	;'g'
   279  00F385  20                 	db	32
   280  00F386  61                 	db	97	;'a'
   281  00F387  75                 	db	117	;'u'
   282  00F388  64                 	db	100	;'d'
   283  00F389  69                 	db	105	;'i'
   284  00F38A  6F                 	db	111	;'o'
   285  00F38B  20                 	db	32
   286  00F38C  61                 	db	97	;'a'
   287  00F38D  6E                 	db	110	;'n'
   288  00F38E  64                 	db	100	;'d'
   289  00F38F  20                 	db	32
   290  00F390  70                 	db	112	;'p'
   291  00F391  72                 	db	114	;'r'
   292  00F392  65                 	db	101	;'e'
   293  00F393  73                 	db	115	;'s'
   294  00F394  73                 	db	115	;'s'
   295  00F395  20                 	db	32
   296  00F396  61                 	db	97	;'a'
   297  00F397  6E                 	db	110	;'n'
   298  00F398  79                 	db	121	;'y'
   299  00F399  20                 	db	32
   300  00F39A  6B                 	db	107	;'k'
   301  00F39B  65                 	db	101	;'e'
   302  00F39C  79                 	db	121	;'y'
   303  00F39D  20                 	db	32
   304  00F39E  74                 	db	116	;'t'
   305  00F39F  6F                 	db	111	;'o'
   306  00F3A0  20                 	db	32
   307  00F3A1  73                 	db	115	;'s'
   308  00F3A2  74                 	db	116	;'t'
   309  00F3A3  6F                 	db	111	;'o'
   310  00F3A4  70                 	db	112	;'p'
   311  00F3A5  20                 	db	32
   312  00F3A6  72                 	db	114	;'r'
   313  00F3A7  65                 	db	101	;'e'
   314  00F3A8  63                 	db	99	;'c'
   315  00F3A9  6F                 	db	111	;'o'
   316  00F3AA  72                 	db	114	;'r'
   317  00F3AB  64                 	db	100	;'d'
   318  00F3AC  69                 	db	105	;'i'
   319  00F3AD  6E                 	db	110	;'n'
   320  00F3AE  67                 	db	103	;'g'
   321  00F3AF  2E                 	db	46
   322  00F3B0  00                 	db	0
   323  00F3B1                     STR_50:
   324  00F3B1  4C                 	db	76	;'L'
   325  00F3B2  6F                 	db	111	;'o'
   326  00F3B3  67                 	db	103	;'g'
   327  00F3B4  20                 	db	32
   328  00F3B5  66                 	db	102	;'f'
   329  00F3B6  69                 	db	105	;'i'
   330  00F3B7  6C                 	db	108	;'l'
   331  00F3B8  65                 	db	101	;'e'
   332  00F3B9  20                 	db	32
   333  00F3BA  6E                 	db	110	;'n'
   334  00F3BB  61                 	db	97	;'a'
   335  00F3BC  6D                 	db	109	;'m'
   336  00F3BD  65                 	db	101	;'e'
   337  00F3BE  3A                 	db	58	;':'
   338  00F3BF  20                 	db	32
   339  00F3C0  42                 	db	66	;'B'
   340  00F3C1  72                 	db	114	;'r'
   341  00F3C2  6F                 	db	111	;'o'
   342  00F3C3  77                 	db	119	;'w'
   343  00F3C4  73                 	db	115	;'s'
   344  00F3C5  65                 	db	101	;'e'
   345  00F3C6  20                 	db	32
   346  00F3C7  61                 	db	97	;'a'
   347  00F3C8  6E                 	db	110	;'n'
   348  00F3C9  64                 	db	100	;'d'
   349  00F3CA  20                 	db	32
   350  00F3CB  70                 	db	112	;'p'
   351  00F3CC  72                 	db	114	;'r'
   352  00F3CD  6F                 	db	111	;'o'
   353  00F3CE  76                 	db	118	;'v'
   354  00F3CF  69                 	db	105	;'i'
   355  00F3D0  64                 	db	100	;'d'
   356  00F3D1  65                 	db	101	;'e'
   357  00F3D2  20                 	db	32
   358  00F3D3  61                 	db	97	;'a'
   359  00F3D4  20                 	db	32
   360  00F3D5  2E                 	db	46
   361  00F3D6  63                 	db	99	;'c'
   362  00F3D7  73                 	db	115	;'s'
   363  00F3D8  76                 	db	118	;'v'
   364  00F3D9  20                 	db	32
   365  00F3DA  65                 	db	101	;'e'
   366  00F3DB  78                 	db	120	;'x'
   367  00F3DC  74                 	db	116	;'t'
   368  00F3DD  65                 	db	101	;'e'
   369  00F3DE  6E                 	db	110	;'n'
   370  00F3DF  73                 	db	115	;'s'
   371  00F3E0  69                 	db	105	;'i'
   372  00F3E1  6F                 	db	111	;'o'
   373  00F3E2  6E                 	db	110	;'n'
   374  00F3E3  20                 	db	32
   375  00F3E4  74                 	db	116	;'t'
   376  00F3E5  6F                 	db	111	;'o'
   377  00F3E6  20                 	db	32
   378  00F3E7  79                 	db	121	;'y'
   379  00F3E8  6F                 	db	111	;'o'
   380  00F3E9  75                 	db	117	;'u'
   381  00F3EA  72                 	db	114	;'r'
   382  00F3EB  20                 	db	32
   383  00F3EC  66                 	db	102	;'f'
   384  00F3ED  69                 	db	105	;'i'
   385  00F3EE  6C                 	db	108	;'l'
   386  00F3EF  65                 	db	101	;'e'
   387  00F3F0  20                 	db	32
   388  00F3F1  6E                 	db	110	;'n'
   389  00F3F2  61                 	db	97	;'a'
   390  00F3F3  6D                 	db	109	;'m'
   391  00F3F4  65                 	db	101	;'e'
   392  00F3F5  0D                 	db	13
   393  00F3F6  0A                 	db	10
   394  00F3F7  00                 	db	0
   395  00F3F8                     STR_44:
   396  00F3F8  54                 	db	84	;'T'
   397  00F3F9  6F                 	db	111	;'o'
   398  00F3FA  20                 	db	32
   399  00F3FB  73                 	db	115	;'s'
   400  00F3FC  70                 	db	112	;'p'
   401  00F3FD  6F                 	db	111	;'o'
   402  00F3FE  6F                 	db	111	;'o'
   403  00F3FF  6C                 	db	108	;'l'
   404  00F400  20                 	db	32
   405  00F401  74                 	db	116	;'t'
   406  00F402  65                 	db	101	;'e'
   407  00F403  72                 	db	114	;'r'
   408  00F404  6D                 	db	109	;'m'
   409  00F405  69                 	db	105	;'i'
   410  00F406  6E                 	db	110	;'n'
   411  00F407  61                 	db	97	;'a'
   412  00F408  6C                 	db	108	;'l'
   413  00F409  20                 	db	32
   414  00F40A  63                 	db	99	;'c'
   415  00F40B  6F                 	db	111	;'o'
   416  00F40C  6E                 	db	110	;'n'
   417  00F40D  74                 	db	116	;'t'
   418  00F40E  65                 	db	101	;'e'
   419  00F40F  6E                 	db	110	;'n'
   420  00F410  74                 	db	116	;'t'
   421  00F411  73                 	db	115	;'s'
   422  00F412  20                 	db	32
   423  00F413  69                 	db	105	;'i'
   424  00F414  6E                 	db	110	;'n'
   425  00F415  74                 	db	116	;'t'
   426  00F416  6F                 	db	111	;'o'
   427  00F417  20                 	db	32
   428  00F418  61                 	db	97	;'a'
   429  00F419  20                 	db	32
   430  00F41A  66                 	db	102	;'f'
   431  00F41B  69                 	db	105	;'i'
   432  00F41C  6C                 	db	108	;'l'
   433  00F41D  65                 	db	101	;'e'
   434  00F41E  20                 	db	32
   435  00F41F  66                 	db	102	;'f'
   436  00F420  6F                 	db	111	;'o'
   437  00F421  6C                 	db	108	;'l'
   438  00F422  6C                 	db	108	;'l'
   439  00F423  6F                 	db	111	;'o'
   440  00F424  77                 	db	119	;'w'
   441  00F425  20                 	db	32
   442  00F426  74                 	db	116	;'t'
   443  00F427  68                 	db	104	;'h'
   444  00F428  65                 	db	101	;'e'
   445  00F429  73                 	db	115	;'s'
   446  00F42A  65                 	db	101	;'e'
   447  00F42B  20                 	db	32
   448  00F42C  69                 	db	105	;'i'
   449  00F42D  6E                 	db	110	;'n'
   450  00F42E  73                 	db	115	;'s'
   451  00F42F  74                 	db	116	;'t'
   452  00F430  72                 	db	114	;'r'
   453  00F431  75                 	db	117	;'u'
   454  00F432  63                 	db	99	;'c'
   455  00F433  74                 	db	116	;'t'
   456  00F434  69                 	db	105	;'i'
   457  00F435  6F                 	db	111	;'o'
   458  00F436  6E                 	db	110	;'n'
   459  00F437  73                 	db	115	;'s'
   460  00F438  3A                 	db	58	;':'
   461  00F439  0D                 	db	13
   462  00F43A  0A                 	db	10
   463  00F43B  00                 	db	0
   464  00F43C                     STR_78:
   465  00F43C  2E                 	db	46
   466  00F43D  2E                 	db	46
   467  00F43E  2E                 	db	46
   468  00F43F  2E                 	db	46
   469  00F440  2E                 	db	46
   470  00F441  2E                 	db	46
   471  00F442  2E                 	db	46
   472  00F443  2E                 	db	46
   473  00F444  2E                 	db	46
   474  00F445  2E                 	db	46
   475  00F446  2E                 	db	46
   476  00F447  2E                 	db	46
   477  00F448  2E                 	db	46
   478  00F449  2E                 	db	46
   479  00F44A  2E                 	db	46
   480  00F44B  2E                 	db	46
   481  00F44C  2E                 	db	46
   482  00F44D  2E                 	db	46
   483  00F44E  2E                 	db	46
   484  00F44F  2E                 	db	46
   485  00F450  2E                 	db	46
   486  00F451  2E                 	db	46
   487  00F452  2E                 	db	46
   488  00F453  2E                 	db	46
   489  00F454  2E                 	db	46
   490  00F455  2E                 	db	46
   491  00F456  2E                 	db	46
   492  00F457  2E                 	db	46
   493  00F458  2E                 	db	46
   494  00F459  2E                 	db	46
   495  00F45A  2E                 	db	46
   496  00F45B  2E                 	db	46
   497  00F45C  2E                 	db	46
   498  00F45D  2E                 	db	46
   499  00F45E  2E                 	db	46
   500  00F45F  2E                 	db	46
   501  00F460  2E                 	db	46
   502  00F461  2E                 	db	46
   503  00F462  2E                 	db	46
   504  00F463  2E                 	db	46
   505  00F464  2E                 	db	46
   506  00F465  2E                 	db	46
   507  00F466  2E                 	db	46
   508  00F467  2E                 	db	46
   509  00F468  2E                 	db	46
   510  00F469  2E                 	db	46
   511  00F46A  2E                 	db	46
   512  00F46B  2E                 	db	46
   513  00F46C  2E                 	db	46
   514  00F46D  2E                 	db	46
   515  00F46E  2E                 	db	46
   516  00F46F  2E                 	db	46
   517  00F470  2E                 	db	46
   518  00F471  2E                 	db	46
   519  00F472  2E                 	db	46
   520  00F473  2E                 	db	46
   521  00F474  2E                 	db	46
   522  00F475  2E                 	db	46
   523  00F476  2E                 	db	46
   524  00F477  0D                 	db	13
   525  00F478  0A                 	db	10
   526  00F479  00                 	db	0
   527  00F47A                     STR_79:
   528  00F47A  2E                 	db	46
   529  00F47B  2E                 	db	46
   530  00F47C  2E                 	db	46
   531  00F47D  2E                 	db	46
   532  00F47E  2E                 	db	46
   533  00F47F  2E                 	db	46
   534  00F480  2E                 	db	46
   535  00F481  2E                 	db	46
   536  00F482  2E                 	db	46
   537  00F483  2E                 	db	46
   538  00F484  2E                 	db	46
   539  00F485  2E                 	db	46
   540  00F486  2E                 	db	46
   541  00F487  2E                 	db	46
   542  00F488  2E                 	db	46
   543  00F489  2E                 	db	46
   544  00F48A  2E                 	db	46
   545  00F48B  2E                 	db	46
   546  00F48C  2E                 	db	46
   547  00F48D  2E                 	db	46
   548  00F48E  2E                 	db	46
   549  00F48F  3F                 	db	63	;'?'
   550  00F490  3F                 	db	63	;'?'
   551  00F491  3F                 	db	63	;'?'
   552  00F492  3F                 	db	63	;'?'
   553  00F493  3F                 	db	63	;'?'
   554  00F494  3F                 	db	63	;'?'
   555  00F495  3F                 	db	63	;'?'
   556  00F496  3F                 	db	63	;'?'
   557  00F497  3F                 	db	63	;'?'
   558  00F498  3F                 	db	63	;'?'
   559  00F499  3F                 	db	63	;'?'
   560  00F49A  3F                 	db	63	;'?'
   561  00F49B  3F                 	db	63	;'?'
   562  00F49C  3F                 	db	63	;'?'
   563  00F49D  3F                 	db	63	;'?'
   564  00F49E  3F                 	db	63	;'?'
   565  00F49F  3F                 	db	63	;'?'
   566  00F4A0  2E                 	db	46
   567  00F4A1  2E                 	db	46
   568  00F4A2  2E                 	db	46
   569  00F4A3  2E                 	db	46
   570  00F4A4  2E                 	db	46
   571  00F4A5  2E                 	db	46
   572  00F4A6  2E                 	db	46
   573  00F4A7  2E                 	db	46
   574  00F4A8  2E                 	db	46
   575  00F4A9  2E                 	db	46
   576  00F4AA  2E                 	db	46
   577  00F4AB  2E                 	db	46
   578  00F4AC  2E                 	db	46
   579  00F4AD  2E                 	db	46
   580  00F4AE  2E                 	db	46
   581  00F4AF  2E                 	db	46
   582  00F4B0  2E                 	db	46
   583  00F4B1  2E                 	db	46
   584  00F4B2  2E                 	db	46
   585  00F4B3  2E                 	db	46
   586  00F4B4  2E                 	db	46
   587  00F4B5  0D                 	db	13
   588  00F4B6  0A                 	db	10
   589  00F4B7  00                 	db	0
   590  00F4B8                     STR_80:
   591  00F4B8  2E                 	db	46
   592  00F4B9  2E                 	db	46
   593  00F4BA  2E                 	db	46
   594  00F4BB  2E                 	db	46
   595  00F4BC  2E                 	db	46
   596  00F4BD  2E                 	db	46
   597  00F4BE  2E                 	db	46
   598  00F4BF  2E                 	db	46
   599  00F4C0  2E                 	db	46
   600  00F4C1  2E                 	db	46
   601  00F4C2  2E                 	db	46
   602  00F4C3  2E                 	db	46
   603  00F4C4  2E                 	db	46
   604  00F4C5  2E                 	db	46
   605  00F4C6  2E                 	db	46
   606  00F4C7  2E                 	db	46
   607  00F4C8  2E                 	db	46
   608  00F4C9  3F                 	db	63	;'?'
   609  00F4CA  3F                 	db	63	;'?'
   610  00F4CB  3F                 	db	63	;'?'
   611  00F4CC  3F                 	db	63	;'?'
   612  00F4CD  3F                 	db	63	;'?'
   613  00F4CE  3F                 	db	63	;'?'
   614  00F4CF  3F                 	db	63	;'?'
   615  00F4D0  3F                 	db	63	;'?'
   616  00F4D1  3F                 	db	63	;'?'
   617  00F4D2  3F                 	db	63	;'?'
   618  00F4D3  3F                 	db	63	;'?'
   619  00F4D4  3F                 	db	63	;'?'
   620  00F4D5  3F                 	db	63	;'?'
   621  00F4D6  3F                 	db	63	;'?'
   622  00F4D7  3F                 	db	63	;'?'
   623  00F4D8  3F                 	db	63	;'?'
   624  00F4D9  3F                 	db	63	;'?'
   625  00F4DA  3F                 	db	63	;'?'
   626  00F4DB  3F                 	db	63	;'?'
   627  00F4DC  3F                 	db	63	;'?'
   628  00F4DD  3F                 	db	63	;'?'
   629  00F4DE  3F                 	db	63	;'?'
   630  00F4DF  3F                 	db	63	;'?'
   631  00F4E0  3F                 	db	63	;'?'
   632  00F4E1  3F                 	db	63	;'?'
   633  00F4E2  2E                 	db	46
   634  00F4E3  2E                 	db	46
   635  00F4E4  2E                 	db	46
   636  00F4E5  2E                 	db	46
   637  00F4E6  2E                 	db	46
   638  00F4E7  2E                 	db	46
   639  00F4E8  2E                 	db	46
   640  00F4E9  2E                 	db	46
   641  00F4EA  2E                 	db	46
   642  00F4EB  2E                 	db	46
   643  00F4EC  2E                 	db	46
   644  00F4ED  2E                 	db	46
   645  00F4EE  2E                 	db	46
   646  00F4EF  2E                 	db	46
   647  00F4F0  2E                 	db	46
   648  00F4F1  2E                 	db	46
   649  00F4F2  2E                 	db	46
   650  00F4F3  0D                 	db	13
   651  00F4F4  0A                 	db	10
   652  00F4F5  00                 	db	0
   653  00F4F6                     STR_81:
   654  00F4F6  2E                 	db	46
   655  00F4F7  2E                 	db	46
   656  00F4F8  2E                 	db	46
   657  00F4F9  2E                 	db	46
   658  00F4FA  2E                 	db	46
   659  00F4FB  2E                 	db	46
   660  00F4FC  2E                 	db	46
   661  00F4FD  2E                 	db	46
   662  00F4FE  2E                 	db	46
   663  00F4FF  2E                 	db	46
   664  00F500  2E                 	db	46
   665  00F501  2E                 	db	46
   666  00F502  2E                 	db	46
   667  00F503  2E                 	db	46
   668  00F504  3F                 	db	63	;'?'
   669  00F505  3F                 	db	63	;'?'
   670  00F506  3F                 	db	63	;'?'
   671  00F507  3F                 	db	63	;'?'
   672  00F508  3F                 	db	63	;'?'
   673  00F509  3F                 	db	63	;'?'
   674  00F50A  3F                 	db	63	;'?'
   675  00F50B  3F                 	db	63	;'?'
   676  00F50C  3F                 	db	63	;'?'
   677  00F50D  3F                 	db	63	;'?'
   678  00F50E  3F                 	db	63	;'?'
   679  00F50F  3F                 	db	63	;'?'
   680  00F510  3F                 	db	63	;'?'
   681  00F511  3F                 	db	63	;'?'
   682  00F512  3F                 	db	63	;'?'
   683  00F513  3F                 	db	63	;'?'
   684  00F514  3F                 	db	63	;'?'
   685  00F515  3F                 	db	63	;'?'
   686  00F516  3F                 	db	63	;'?'
   687  00F517  3F                 	db	63	;'?'
   688  00F518  3F                 	db	63	;'?'
   689  00F519  3F                 	db	63	;'?'
   690  00F51A  3F                 	db	63	;'?'
   691  00F51B  3F                 	db	63	;'?'
   692  00F51C  3F                 	db	63	;'?'
   693  00F51D  3F                 	db	63	;'?'
   694  00F51E  3F                 	db	63	;'?'
   695  00F51F  3F                 	db	63	;'?'
   696  00F520  3F                 	db	63	;'?'
   697  00F521  3F                 	db	63	;'?'
   698  00F522  3F                 	db	63	;'?'
   699  00F523  2E                 	db	46
   700  00F524  2E                 	db	46
   701  00F525  2E                 	db	46
   702  00F526  2E                 	db	46
   703  00F527  2E                 	db	46
   704  00F528  2E                 	db	46
   705  00F529  2E                 	db	46
   706  00F52A  2E                 	db	46
   707  00F52B  2E                 	db	46
   708  00F52C  2E                 	db	46
   709  00F52D  2E                 	db	46
   710  00F52E  2E                 	db	46
   711  00F52F  2E                 	db	46
   712  00F530  2E                 	db	46
   713  00F531  0D                 	db	13
   714  00F532  0A                 	db	10
   715  00F533  00                 	db	0
   716  00F534                     STR_82:
   717  00F534  2E                 	db	46
   718  00F535  2E                 	db	46
   719  00F536  2E                 	db	46
   720  00F537  2E                 	db	46
   721  00F538  2E                 	db	46
   722  00F539  2E                 	db	46
   723  00F53A  2E                 	db	46
   724  00F53B  2E                 	db	46
   725  00F53C  2E                 	db	46
   726  00F53D  2E                 	db	46
   727  00F53E  2E                 	db	46
   728  00F53F  2E                 	db	46
   729  00F540  3F                 	db	63	;'?'
   730  00F541  3F                 	db	63	;'?'
   731  00F542  3F                 	db	63	;'?'
   732  00F543  3F                 	db	63	;'?'
   733  00F544  3F                 	db	63	;'?'
   734  00F545  3F                 	db	63	;'?'
   735  00F546  3F                 	db	63	;'?'
   736  00F547  3F                 	db	63	;'?'
   737  00F548  3F                 	db	63	;'?'
   738  00F549  3F                 	db	63	;'?'
   739  00F54A  3F                 	db	63	;'?'
   740  00F54B  3F                 	db	63	;'?'
   741  00F54C  3F                 	db	63	;'?'
   742  00F54D  3F                 	db	63	;'?'
   743  00F54E  3F                 	db	63	;'?'
   744  00F54F  3F                 	db	63	;'?'
   745  00F550  3F                 	db	63	;'?'
   746  00F551  3F                 	db	63	;'?'
   747  00F552  3F                 	db	63	;'?'
   748  00F553  3F                 	db	63	;'?'
   749  00F554  3F                 	db	63	;'?'
   750  00F555  3F                 	db	63	;'?'
   751  00F556  3F                 	db	63	;'?'
   752  00F557  3F                 	db	63	;'?'
   753  00F558  3F                 	db	63	;'?'
   754  00F559  3F                 	db	63	;'?'
   755  00F55A  3F                 	db	63	;'?'
   756  00F55B  3F                 	db	63	;'?'
   757  00F55C  3F                 	db	63	;'?'
   758  00F55D  3F                 	db	63	;'?'
   759  00F55E  3F                 	db	63	;'?'
   760  00F55F  3F                 	db	63	;'?'
   761  00F560  3F                 	db	63	;'?'
   762  00F561  3F                 	db	63	;'?'
   763  00F562  3F                 	db	63	;'?'
   764  00F563  2E                 	db	46
   765  00F564  2E                 	db	46
   766  00F565  2E                 	db	46
   767  00F566  2E                 	db	46
   768  00F567  2E                 	db	46
   769  00F568  2E                 	db	46
   770  00F569  2E                 	db	46
   771  00F56A  2E                 	db	46
   772  00F56B  2E                 	db	46
   773  00F56C  2E                 	db	46
   774  00F56D  2E                 	db	46
   775  00F56E  2E                 	db	46
   776  00F56F  0D                 	db	13
   777  00F570  0A                 	db	10
   778  00F571  00                 	db	0
   779  00F572                     STR_83:
   780  00F572  2E                 	db	46
   781  00F573  2E                 	db	46
   782  00F574  2E                 	db	46
   783  00F575  2E                 	db	46
   784  00F576  2E                 	db	46
   785  00F577  2E                 	db	46
   786  00F578  2E                 	db	46
   787  00F579  2E                 	db	46
   788  00F57A  2E                 	db	46
   789  00F57B  2E                 	db	46
   790  00F57C  3F                 	db	63	;'?'
   791  00F57D  3F                 	db	63	;'?'
   792  00F57E  3F                 	db	63	;'?'
   793  00F57F  3F                 	db	63	;'?'
   794  00F580  3F                 	db	63	;'?'
   795  00F581  3F                 	db	63	;'?'
   796  00F582  3F                 	db	63	;'?'
   797  00F583  3F                 	db	63	;'?'
   798  00F584  3F                 	db	63	;'?'
   799  00F585  3F                 	db	63	;'?'
   800  00F586  3F                 	db	63	;'?'
   801  00F587  3F                 	db	63	;'?'
   802  00F588  3F                 	db	63	;'?'
   803  00F589  3F                 	db	63	;'?'
   804  00F58A  3F                 	db	63	;'?'
   805  00F58B  3F                 	db	63	;'?'
   806  00F58C  3F                 	db	63	;'?'
   807  00F58D  3F                 	db	63	;'?'
   808  00F58E  3F                 	db	63	;'?'
   809  00F58F  3F                 	db	63	;'?'
   810  00F590  3F                 	db	63	;'?'
   811  00F591  3F                 	db	63	;'?'
   812  00F592  3F                 	db	63	;'?'
   813  00F593  3F                 	db	63	;'?'
   814  00F594  3F                 	db	63	;'?'
   815  00F595  3F                 	db	63	;'?'
   816  00F596  3F                 	db	63	;'?'
   817  00F597  3F                 	db	63	;'?'
   818  00F598  3F                 	db	63	;'?'
   819  00F599  3F                 	db	63	;'?'
   820  00F59A  3F                 	db	63	;'?'
   821  00F59B  3F                 	db	63	;'?'
   822  00F59C  3F                 	db	63	;'?'
   823  00F59D  3F                 	db	63	;'?'
   824  00F59E  3F                 	db	63	;'?'
   825  00F59F  3F                 	db	63	;'?'
   826  00F5A0  3F                 	db	63	;'?'
   827  00F5A1  3F                 	db	63	;'?'
   828  00F5A2  3F                 	db	63	;'?'
   829  00F5A3  2E                 	db	46
   830  00F5A4  2E                 	db	46
   831  00F5A5  2E                 	db	46
   832  00F5A6  2E                 	db	46
   833  00F5A7  2E                 	db	46
   834  00F5A8  2E                 	db	46
   835  00F5A9  2E                 	db	46
   836  00F5AA  2E                 	db	46
   837  00F5AB  2E                 	db	46
   838  00F5AC  2E                 	db	46
   839  00F5AD  0D                 	db	13
   840  00F5AE  0A                 	db	10
   841  00F5AF  00                 	db	0
   842  00F5B0                     STR_84:
   843  00F5B0  2E                 	db	46
   844  00F5B1  2E                 	db	46
   845  00F5B2  2E                 	db	46
   846  00F5B3  2E                 	db	46
   847  00F5B4  2E                 	db	46
   848  00F5B5  2E                 	db	46
   849  00F5B6  2E                 	db	46
   850  00F5B7  2E                 	db	46
   851  00F5B8  2E                 	db	46
   852  00F5B9  3F                 	db	63	;'?'
   853  00F5BA  3F                 	db	63	;'?'
   854  00F5BB  3F                 	db	63	;'?'
   855  00F5BC  3F                 	db	63	;'?'
   856  00F5BD  3F                 	db	63	;'?'
   857  00F5BE  3F                 	db	63	;'?'
   858  00F5BF  3F                 	db	63	;'?'
   859  00F5C0  3F                 	db	63	;'?'
   860  00F5C1  3F                 	db	63	;'?'
   861  00F5C2  3F                 	db	63	;'?'
   862  00F5C3  3F                 	db	63	;'?'
   863  00F5C4  3F                 	db	63	;'?'
   864  00F5C5  3F                 	db	63	;'?'
   865  00F5C6  3F                 	db	63	;'?'
   866  00F5C7  3F                 	db	63	;'?'
   867  00F5C8  3F                 	db	63	;'?'
   868  00F5C9  3F                 	db	63	;'?'
   869  00F5CA  3F                 	db	63	;'?'
   870  00F5CB  3F                 	db	63	;'?'
   871  00F5CC  3F                 	db	63	;'?'
   872  00F5CD  3F                 	db	63	;'?'
   873  00F5CE  3F                 	db	63	;'?'
   874  00F5CF  3F                 	db	63	;'?'
   875  00F5D0  3F                 	db	63	;'?'
   876  00F5D1  3F                 	db	63	;'?'
   877  00F5D2  3F                 	db	63	;'?'
   878  00F5D3  3F                 	db	63	;'?'
   879  00F5D4  3F                 	db	63	;'?'
   880  00F5D5  3F                 	db	63	;'?'
   881  00F5D6  3F                 	db	63	;'?'
   882  00F5D7  3F                 	db	63	;'?'
   883  00F5D8  3F                 	db	63	;'?'
   884  00F5D9  3F                 	db	63	;'?'
   885  00F5DA  3F                 	db	63	;'?'
   886  00F5DB  3F                 	db	63	;'?'
   887  00F5DC  3F                 	db	63	;'?'
   888  00F5DD  3F                 	db	63	;'?'
   889  00F5DE  3F                 	db	63	;'?'
   890  00F5DF  3F                 	db	63	;'?'
   891  00F5E0  3F                 	db	63	;'?'
   892  00F5E1  3F                 	db	63	;'?'
   893  00F5E2  2E                 	db	46
   894  00F5E3  2E                 	db	46
   895  00F5E4  2E                 	db	46
   896  00F5E5  2E                 	db	46
   897  00F5E6  2E                 	db	46
   898  00F5E7  2E                 	db	46
   899  00F5E8  2E                 	db	46
   900  00F5E9  2E                 	db	46
   901  00F5EA  2E                 	db	46
   902  00F5EB  0D                 	db	13
   903  00F5EC  0A                 	db	10
   904  00F5ED  00                 	db	0
   905  00F5EE                     STR_105:
   906  00F5EE  2E                 	db	46
   907  00F5EF  2E                 	db	46
   908  00F5F0  2E                 	db	46
   909  00F5F1  2E                 	db	46
   910  00F5F2  2E                 	db	46
   911  00F5F3  2E                 	db	46
   912  00F5F4  2E                 	db	46
   913  00F5F5  3F                 	db	63	;'?'
   914  00F5F6  3F                 	db	63	;'?'
   915  00F5F7  3F                 	db	63	;'?'
   916  00F5F8  3F                 	db	63	;'?'
   917  00F5F9  3F                 	db	63	;'?'
   918  00F5FA  3F                 	db	63	;'?'
   919  00F5FB  3F                 	db	63	;'?'
   920  00F5FC  3F                 	db	63	;'?'
   921  00F5FD  3F                 	db	63	;'?'
   922  00F5FE  3F                 	db	63	;'?'
   923  00F5FF  3F                 	db	63	;'?'
   924  00F600  3F                 	db	63	;'?'
   925  00F601  3F                 	db	63	;'?'
   926  00F602  3F                 	db	63	;'?'
   927  00F603  3F                 	db	63	;'?'
   928  00F604  3F                 	db	63	;'?'
   929  00F605  3F                 	db	63	;'?'
   930  00F606  3A                 	db	58	;':'
   931  00F607  3A                 	db	58	;':'
   932  00F608  3A                 	db	58	;':'
   933  00F609  3A                 	db	58	;':'
   934  00F60A  3A                 	db	58	;':'
   935  00F60B  3A                 	db	58	;':'
   936  00F60C  3A                 	db	58	;':'
   937  00F60D  3A                 	db	58	;':'
   938  00F60E  3A                 	db	58	;':'
   939  00F60F  3A                 	db	58	;':'
   940  00F610  3A                 	db	58	;':'
   941  00F611  3F                 	db	63	;'?'
   942  00F612  3F                 	db	63	;'?'
   943  00F613  3F                 	db	63	;'?'
   944  00F614  3F                 	db	63	;'?'
   945  00F615  3F                 	db	63	;'?'
   946  00F616  3F                 	db	63	;'?'
   947  00F617  3F                 	db	63	;'?'
   948  00F618  3F                 	db	63	;'?'
   949  00F619  3F                 	db	63	;'?'
   950  00F61A  3F                 	db	63	;'?'
   951  00F61B  3F                 	db	63	;'?'
   952  00F61C  3F                 	db	63	;'?'
   953  00F61D  3F                 	db	63	;'?'
   954  00F61E  3F                 	db	63	;'?'
   955  00F61F  3F                 	db	63	;'?'
   956  00F620  3F                 	db	63	;'?'
   957  00F621  3F                 	db	63	;'?'
   958  00F622  2E                 	db	46
   959  00F623  2E                 	db	46
   960  00F624  2E                 	db	46
   961  00F625  2E                 	db	46
   962  00F626  2E                 	db	46
   963  00F627  2E                 	db	46
   964  00F628  2E                 	db	46
   965  00F629  0D                 	db	13
   966  00F62A  0A                 	db	10
   967  00F62B  00                 	db	0
   968  00F62C                     STR_85:
   969  00F62C  2E                 	db	46
   970  00F62D  2E                 	db	46
   971  00F62E  2E                 	db	46
   972  00F62F  2E                 	db	46
   973  00F630  2E                 	db	46
   974  00F631  2E                 	db	46
   975  00F632  2E                 	db	46
   976  00F633  3F                 	db	63	;'?'
   977  00F634  3F                 	db	63	;'?'
   978  00F635  3F                 	db	63	;'?'
   979  00F636  3F                 	db	63	;'?'
   980  00F637  3F                 	db	63	;'?'
   981  00F638  3F                 	db	63	;'?'
   982  00F639  3F                 	db	63	;'?'
   983  00F63A  3F                 	db	63	;'?'
   984  00F63B  3F                 	db	63	;'?'
   985  00F63C  3F                 	db	63	;'?'
   986  00F63D  3F                 	db	63	;'?'
   987  00F63E  3F                 	db	63	;'?'
   988  00F63F  3F                 	db	63	;'?'
   989  00F640  3F                 	db	63	;'?'
   990  00F641  3F                 	db	63	;'?'
   991  00F642  3F                 	db	63	;'?'
   992  00F643  3F                 	db	63	;'?'
   993  00F644  3F                 	db	63	;'?'
   994  00F645  3F                 	db	63	;'?'
   995  00F646  3F                 	db	63	;'?'
   996  00F647  3F                 	db	63	;'?'
   997  00F648  3F                 	db	63	;'?'
   998  00F649  3F                 	db	63	;'?'
   999  00F64A  3F                 	db	63	;'?'
  1000  00F64B  3F                 	db	63	;'?'
  1001  00F64C  3F                 	db	63	;'?'
  1002  00F64D  3F                 	db	63	;'?'
  1003  00F64E  3F                 	db	63	;'?'
  1004  00F64F  3F                 	db	63	;'?'
  1005  00F650  3F                 	db	63	;'?'
  1006  00F651  3F                 	db	63	;'?'
  1007  00F652  3F                 	db	63	;'?'
  1008  00F653  3F                 	db	63	;'?'
  1009  00F654  3F                 	db	63	;'?'
  1010  00F655  3F                 	db	63	;'?'
  1011  00F656  3F                 	db	63	;'?'
  1012  00F657  3F                 	db	63	;'?'
  1013  00F658  3F                 	db	63	;'?'
  1014  00F659  3F                 	db	63	;'?'
  1015  00F65A  3F                 	db	63	;'?'
  1016  00F65B  3F                 	db	63	;'?'
  1017  00F65C  3F                 	db	63	;'?'
  1018  00F65D  3F                 	db	63	;'?'
  1019  00F65E  3F                 	db	63	;'?'
  1020  00F65F  3F                 	db	63	;'?'
  1021  00F660  2E                 	db	46
  1022  00F661  2E                 	db	46
  1023  00F662  2E                 	db	46
  1024  00F663  2E                 	db	46
  1025  00F664  2E                 	db	46
  1026  00F665  2E                 	db	46
  1027  00F666  2E                 	db	46
  1028  00F667  0D                 	db	13
  1029  00F668  0A                 	db	10
  1030  00F669  00                 	db	0
  1031  00F66A                     STR_104:
  1032  00F66A  2E                 	db	46
  1033  00F66B  2E                 	db	46
  1034  00F66C  2E                 	db	46
  1035  00F66D  2E                 	db	46
  1036  00F66E  2E                 	db	46
  1037  00F66F  2E                 	db	46
  1038  00F670  3F                 	db	63	;'?'
  1039  00F671  3F                 	db	63	;'?'
  1040  00F672  3F                 	db	63	;'?'
  1041  00F673  3F                 	db	63	;'?'
  1042  00F674  3F                 	db	63	;'?'
  1043  00F675  3F                 	db	63	;'?'
  1044  00F676  3F                 	db	63	;'?'
  1045  00F677  3F                 	db	63	;'?'
  1046  00F678  3F                 	db	63	;'?'
  1047  00F679  3F                 	db	63	;'?'
  1048  00F67A  3F                 	db	63	;'?'
  1049  00F67B  3F                 	db	63	;'?'
  1050  00F67C  3F                 	db	63	;'?'
  1051  00F67D  3F                 	db	63	;'?'
  1052  00F67E  3F                 	db	63	;'?'
  1053  00F67F  3A                 	db	58	;':'
  1054  00F680  3A                 	db	58	;':'
  1055  00F681  3A                 	db	58	;':'
  1056  00F682  3A                 	db	58	;':'
  1057  00F683  3A                 	db	58	;':'
  1058  00F684  3F                 	db	63	;'?'
  1059  00F685  3F                 	db	63	;'?'
  1060  00F686  3F                 	db	63	;'?'
  1061  00F687  3F                 	db	63	;'?'
  1062  00F688  3F                 	db	63	;'?'
  1063  00F689  3F                 	db	63	;'?'
  1064  00F68A  3F                 	db	63	;'?'
  1065  00F68B  3A                 	db	58	;':'
  1066  00F68C  3A                 	db	58	;':'
  1067  00F68D  3A                 	db	58	;':'
  1068  00F68E  3A                 	db	58	;':'
  1069  00F68F  3A                 	db	58	;':'
  1070  00F690  3F                 	db	63	;'?'
  1071  00F691  3F                 	db	63	;'?'
  1072  00F692  3F                 	db	63	;'?'
  1073  00F693  3F                 	db	63	;'?'
  1074  00F694  3F                 	db	63	;'?'
  1075  00F695  3F                 	db	63	;'?'
  1076  00F696  3F                 	db	63	;'?'
  1077  00F697  3F                 	db	63	;'?'
  1078  00F698  3F                 	db	63	;'?'
  1079  00F699  3F                 	db	63	;'?'
  1080  00F69A  3F                 	db	63	;'?'
  1081  00F69B  3F                 	db	63	;'?'
  1082  00F69C  3F                 	db	63	;'?'
  1083  00F69D  3F                 	db	63	;'?'
  1084  00F69E  3F                 	db	63	;'?'
  1085  00F69F  2E                 	db	46
  1086  00F6A0  2E                 	db	46
  1087  00F6A1  2E                 	db	46
  1088  00F6A2  2E                 	db	46
  1089  00F6A3  2E                 	db	46
  1090  00F6A4  2E                 	db	46
  1091  00F6A5  0D                 	db	13
  1092  00F6A6  0A                 	db	10
  1093  00F6A7  00                 	db	0
  1094  00F6A8                     STR_86:
  1095  00F6A8  2E                 	db	46
  1096  00F6A9  2E                 	db	46
  1097  00F6AA  2E                 	db	46
  1098  00F6AB  2E                 	db	46
  1099  00F6AC  2E                 	db	46
  1100  00F6AD  2E                 	db	46
  1101  00F6AE  3F                 	db	63	;'?'
  1102  00F6AF  3F                 	db	63	;'?'
  1103  00F6B0  3F                 	db	63	;'?'
  1104  00F6B1  3F                 	db	63	;'?'
  1105  00F6B2  3F                 	db	63	;'?'
  1106  00F6B3  3F                 	db	63	;'?'
  1107  00F6B4  3F                 	db	63	;'?'
  1108  00F6B5  3F                 	db	63	;'?'
  1109  00F6B6  3F                 	db	63	;'?'
  1110  00F6B7  3F                 	db	63	;'?'
  1111  00F6B8  3F                 	db	63	;'?'
  1112  00F6B9  3F                 	db	63	;'?'
  1113  00F6BA  3F                 	db	63	;'?'
  1114  00F6BB  3F                 	db	63	;'?'
  1115  00F6BC  3F                 	db	63	;'?'
  1116  00F6BD  3F                 	db	63	;'?'
  1117  00F6BE  3F                 	db	63	;'?'
  1118  00F6BF  3F                 	db	63	;'?'
  1119  00F6C0  3F                 	db	63	;'?'
  1120  00F6C1  3F                 	db	63	;'?'
  1121  00F6C2  3F                 	db	63	;'?'
  1122  00F6C3  3F                 	db	63	;'?'
  1123  00F6C4  3F                 	db	63	;'?'
  1124  00F6C5  3F                 	db	63	;'?'
  1125  00F6C6  3F                 	db	63	;'?'
  1126  00F6C7  3F                 	db	63	;'?'
  1127  00F6C8  3F                 	db	63	;'?'
  1128  00F6C9  3F                 	db	63	;'?'
  1129  00F6CA  3F                 	db	63	;'?'
  1130  00F6CB  3F                 	db	63	;'?'
  1131  00F6CC  3F                 	db	63	;'?'
  1132  00F6CD  3F                 	db	63	;'?'
  1133  00F6CE  3F                 	db	63	;'?'
  1134  00F6CF  3F                 	db	63	;'?'
  1135  00F6D0  3F                 	db	63	;'?'
  1136  00F6D1  3F                 	db	63	;'?'
  1137  00F6D2  3F                 	db	63	;'?'
  1138  00F6D3  3F                 	db	63	;'?'
  1139  00F6D4  3F                 	db	63	;'?'
  1140  00F6D5  3F                 	db	63	;'?'
  1141  00F6D6  3F                 	db	63	;'?'
  1142  00F6D7  3F                 	db	63	;'?'
  1143  00F6D8  3F                 	db	63	;'?'
  1144  00F6D9  3F                 	db	63	;'?'
  1145  00F6DA  3F                 	db	63	;'?'
  1146  00F6DB  3F                 	db	63	;'?'
  1147  00F6DC  3F                 	db	63	;'?'
  1148  00F6DD  2E                 	db	46
  1149  00F6DE  2E                 	db	46
  1150  00F6DF  2E                 	db	46
  1151  00F6E0  2E                 	db	46
  1152  00F6E1  2E                 	db	46
  1153  00F6E2  2E                 	db	46
  1154  00F6E3  0D                 	db	13
  1155  00F6E4  0A                 	db	10
  1156  00F6E5  00                 	db	0
  1157  00F6E6                     STR_103:
  1158  00F6E6  2E                 	db	46
  1159  00F6E7  2E                 	db	46
  1160  00F6E8  2E                 	db	46
  1161  00F6E9  2E                 	db	46
  1162  00F6EA  2E                 	db	46
  1163  00F6EB  3F                 	db	63	;'?'
  1164  00F6EC  3F                 	db	63	;'?'
  1165  00F6ED  3F                 	db	63	;'?'
  1166  00F6EE  3F                 	db	63	;'?'
  1167  00F6EF  3F                 	db	63	;'?'
  1168  00F6F0  3F                 	db	63	;'?'
  1169  00F6F1  3F                 	db	63	;'?'
  1170  00F6F2  3F                 	db	63	;'?'
  1171  00F6F3  3F                 	db	63	;'?'
  1172  00F6F4  3F                 	db	63	;'?'
  1173  00F6F5  3F                 	db	63	;'?'
  1174  00F6F6  3F                 	db	63	;'?'
  1175  00F6F7  3F                 	db	63	;'?'
  1176  00F6F8  3F                 	db	63	;'?'
  1177  00F6F9  3A                 	db	58	;':'
  1178  00F6FA  3A                 	db	58	;':'
  1179  00F6FB  3A                 	db	58	;':'
  1180  00F6FC  3A                 	db	58	;':'
  1181  00F6FD  3F                 	db	63	;'?'
  1182  00F6FE  3F                 	db	63	;'?'
  1183  00F6FF  3F                 	db	63	;'?'
  1184  00F700  3F                 	db	63	;'?'
  1185  00F701  3F                 	db	63	;'?'
  1186  00F702  3F                 	db	63	;'?'
  1187  00F703  3F                 	db	63	;'?'
  1188  00F704  3F                 	db	63	;'?'
  1189  00F705  3F                 	db	63	;'?'
  1190  00F706  3F                 	db	63	;'?'
  1191  00F707  3F                 	db	63	;'?'
  1192  00F708  3F                 	db	63	;'?'
  1193  00F709  3F                 	db	63	;'?'
  1194  00F70A  3A                 	db	58	;':'
  1195  00F70B  3A                 	db	58	;':'
  1196  00F70C  3A                 	db	58	;':'
  1197  00F70D  3A                 	db	58	;':'
  1198  00F70E  3F                 	db	63	;'?'
  1199  00F70F  3F                 	db	63	;'?'
  1200  00F710  3F                 	db	63	;'?'
  1201  00F711  3F                 	db	63	;'?'
  1202  00F712  3F                 	db	63	;'?'
  1203  00F713  3F                 	db	63	;'?'
  1204  00F714  3F                 	db	63	;'?'
  1205  00F715  3F                 	db	63	;'?'
  1206  00F716  3F                 	db	63	;'?'
  1207  00F717  3F                 	db	63	;'?'
  1208  00F718  3F                 	db	63	;'?'
  1209  00F719  3F                 	db	63	;'?'
  1210  00F71A  3F                 	db	63	;'?'
  1211  00F71B  3F                 	db	63	;'?'
  1212  00F71C  2E                 	db	46
  1213  00F71D  2E                 	db	46
  1214  00F71E  2E                 	db	46
  1215  00F71F  2E                 	db	46
  1216  00F720  2E                 	db	46
  1217  00F721  0D                 	db	13
  1218  00F722  0A                 	db	10
  1219  00F723  00                 	db	0
  1220  00F724                     STR_87:
  1221  00F724  2E                 	db	46
  1222  00F725  2E                 	db	46
  1223  00F726  2E                 	db	46
  1224  00F727  2E                 	db	46
  1225  00F728  2E                 	db	46
  1226  00F729  3F                 	db	63	;'?'
  1227  00F72A  3F                 	db	63	;'?'
  1228  00F72B  3F                 	db	63	;'?'
  1229  00F72C  3F                 	db	63	;'?'
  1230  00F72D  3F                 	db	63	;'?'
  1231  00F72E  3F                 	db	63	;'?'
  1232  00F72F  3F                 	db	63	;'?'
  1233  00F730  3F                 	db	63	;'?'
  1234  00F731  3F                 	db	63	;'?'
  1235  00F732  3F                 	db	63	;'?'
  1236  00F733  3F                 	db	63	;'?'
  1237  00F734  3F                 	db	63	;'?'
  1238  00F735  3F                 	db	63	;'?'
  1239  00F736  3F                 	db	63	;'?'
  1240  00F737  3F                 	db	63	;'?'
  1241  00F738  3F                 	db	63	;'?'
  1242  00F739  3F                 	db	63	;'?'
  1243  00F73A  3F                 	db	63	;'?'
  1244  00F73B  3F                 	db	63	;'?'
  1245  00F73C  3F                 	db	63	;'?'
  1246  00F73D  3F                 	db	63	;'?'
  1247  00F73E  3F                 	db	63	;'?'
  1248  00F73F  3F                 	db	63	;'?'
  1249  00F740  3F                 	db	63	;'?'
  1250  00F741  3F                 	db	63	;'?'
  1251  00F742  3F                 	db	63	;'?'
  1252  00F743  3F                 	db	63	;'?'
  1253  00F744  3F                 	db	63	;'?'
  1254  00F745  3F                 	db	63	;'?'
  1255  00F746  3F                 	db	63	;'?'
  1256  00F747  3F                 	db	63	;'?'
  1257  00F748  3F                 	db	63	;'?'
  1258  00F749  3F                 	db	63	;'?'
  1259  00F74A  3F                 	db	63	;'?'
  1260  00F74B  3F                 	db	63	;'?'
  1261  00F74C  3F                 	db	63	;'?'
  1262  00F74D  3F                 	db	63	;'?'
  1263  00F74E  3F                 	db	63	;'?'
  1264  00F74F  3F                 	db	63	;'?'
  1265  00F750  3F                 	db	63	;'?'
  1266  00F751  3F                 	db	63	;'?'
  1267  00F752  3F                 	db	63	;'?'
  1268  00F753  3F                 	db	63	;'?'
  1269  00F754  3F                 	db	63	;'?'
  1270  00F755  3F                 	db	63	;'?'
  1271  00F756  3F                 	db	63	;'?'
  1272  00F757  3F                 	db	63	;'?'
  1273  00F758  3F                 	db	63	;'?'
  1274  00F759  3F                 	db	63	;'?'
  1275  00F75A  2E                 	db	46
  1276  00F75B  2E                 	db	46
  1277  00F75C  2E                 	db	46
  1278  00F75D  2E                 	db	46
  1279  00F75E  2E                 	db	46
  1280  00F75F  0D                 	db	13
  1281  00F760  0A                 	db	10
  1282  00F761  00                 	db	0
  1283  00F762                     STR_88:
  1284  00F762  2E                 	db	46
  1285  00F763  2E                 	db	46
  1286  00F764  2E                 	db	46
  1287  00F765  2E                 	db	46
  1288  00F766  3F                 	db	63	;'?'
  1289  00F767  3F                 	db	63	;'?'
  1290  00F768  3F                 	db	63	;'?'
  1291  00F769  3F                 	db	63	;'?'
  1292  00F76A  3A                 	db	58	;':'
  1293  00F76B  3A                 	db	58	;':'
  1294  00F76C  3A                 	db	58	;':'
  1295  00F76D  3A                 	db	58	;':'
  1296  00F76E  3A                 	db	58	;':'
  1297  00F76F  3A                 	db	58	;':'
  1298  00F770  3A                 	db	58	;':'
  1299  00F771  3A                 	db	58	;':'
  1300  00F772  3A                 	db	58	;':'
  1301  00F773  3A                 	db	58	;':'
  1302  00F774  3A                 	db	58	;':'
  1303  00F775  3F                 	db	63	;'?'
  1304  00F776  3F                 	db	63	;'?'
  1305  00F777  3F                 	db	63	;'?'
  1306  00F778  3F                 	db	63	;'?'
  1307  00F779  3F                 	db	63	;'?'
  1308  00F77A  3F                 	db	63	;'?'
  1309  00F77B  3F                 	db	63	;'?'
  1310  00F77C  3F                 	db	63	;'?'
  1311  00F77D  3F                 	db	63	;'?'
  1312  00F77E  3F                 	db	63	;'?'
  1313  00F77F  3F                 	db	63	;'?'
  1314  00F780  3F                 	db	63	;'?'
  1315  00F781  3F                 	db	63	;'?'
  1316  00F782  3F                 	db	63	;'?'
  1317  00F783  3F                 	db	63	;'?'
  1318  00F784  3F                 	db	63	;'?'
  1319  00F785  3F                 	db	63	;'?'
  1320  00F786  3F                 	db	63	;'?'
  1321  00F787  3F                 	db	63	;'?'
  1322  00F788  3F                 	db	63	;'?'
  1323  00F789  3F                 	db	63	;'?'
  1324  00F78A  3A                 	db	58	;':'
  1325  00F78B  3A                 	db	58	;':'
  1326  00F78C  3A                 	db	58	;':'
  1327  00F78D  3A                 	db	58	;':'
  1328  00F78E  3A                 	db	58	;':'
  1329  00F78F  3A                 	db	58	;':'
  1330  00F790  3A                 	db	58	;':'
  1331  00F791  3A                 	db	58	;':'
  1332  00F792  3A                 	db	58	;':'
  1333  00F793  3A                 	db	58	;':'
  1334  00F794  3A                 	db	58	;':'
  1335  00F795  3F                 	db	63	;'?'
  1336  00F796  3F                 	db	63	;'?'
  1337  00F797  3F                 	db	63	;'?'
  1338  00F798  3F                 	db	63	;'?'
  1339  00F799  2E                 	db	46
  1340  00F79A  2E                 	db	46
  1341  00F79B  2E                 	db	46
  1342  00F79C  2E                 	db	46
  1343  00F79D  0D                 	db	13
  1344  00F79E  0A                 	db	10
  1345  00F79F  00                 	db	0
  1346  00F7A0                     STR_102:
  1347  00F7A0  2E                 	db	46
  1348  00F7A1  2E                 	db	46
  1349  00F7A2  2E                 	db	46
  1350  00F7A3  2E                 	db	46
  1351  00F7A4  3F                 	db	63	;'?'
  1352  00F7A5  3F                 	db	63	;'?'
  1353  00F7A6  3F                 	db	63	;'?'
  1354  00F7A7  3F                 	db	63	;'?'
  1355  00F7A8  3F                 	db	63	;'?'
  1356  00F7A9  3F                 	db	63	;'?'
  1357  00F7AA  3F                 	db	63	;'?'
  1358  00F7AB  3F                 	db	63	;'?'
  1359  00F7AC  3F                 	db	63	;'?'
  1360  00F7AD  3F                 	db	63	;'?'
  1361  00F7AE  3F                 	db	63	;'?'
  1362  00F7AF  3F                 	db	63	;'?'
  1363  00F7B0  3F                 	db	63	;'?'
  1364  00F7B1  3F                 	db	63	;'?'
  1365  00F7B2  3A                 	db	58	;':'
  1366  00F7B3  3A                 	db	58	;':'
  1367  00F7B4  3A                 	db	58	;':'
  1368  00F7B5  3F                 	db	63	;'?'
  1369  00F7B6  3F                 	db	63	;'?'
  1370  00F7B7  3F                 	db	63	;'?'
  1371  00F7B8  3F                 	db	63	;'?'
  1372  00F7B9  3F                 	db	63	;'?'
  1373  00F7BA  3F                 	db	63	;'?'
  1374  00F7BB  3F                 	db	63	;'?'
  1375  00F7BC  3F                 	db	63	;'?'
  1376  00F7BD  3F                 	db	63	;'?'
  1377  00F7BE  3F                 	db	63	;'?'
  1378  00F7BF  3F                 	db	63	;'?'
  1379  00F7C0  3F                 	db	63	;'?'
  1380  00F7C1  3F                 	db	63	;'?'
  1381  00F7C2  3F                 	db	63	;'?'
  1382  00F7C3  3F                 	db	63	;'?'
  1383  00F7C4  3F                 	db	63	;'?'
  1384  00F7C5  3F                 	db	63	;'?'
  1385  00F7C6  3A                 	db	58	;':'
  1386  00F7C7  3A                 	db	58	;':'
  1387  00F7C8  3A                 	db	58	;':'
  1388  00F7C9  3F                 	db	63	;'?'
  1389  00F7CA  3F                 	db	63	;'?'
  1390  00F7CB  3F                 	db	63	;'?'
  1391  00F7CC  3F                 	db	63	;'?'
  1392  00F7CD  3F                 	db	63	;'?'
  1393  00F7CE  3F                 	db	63	;'?'
  1394  00F7CF  3F                 	db	63	;'?'
  1395  00F7D0  3F                 	db	63	;'?'
  1396  00F7D1  3F                 	db	63	;'?'
  1397  00F7D2  3F                 	db	63	;'?'
  1398  00F7D3  3F                 	db	63	;'?'
  1399  00F7D4  3F                 	db	63	;'?'
  1400  00F7D5  3F                 	db	63	;'?'
  1401  00F7D6  3F                 	db	63	;'?'
  1402  00F7D7  2E                 	db	46
  1403  00F7D8  2E                 	db	46
  1404  00F7D9  2E                 	db	46
  1405  00F7DA  2E                 	db	46
  1406  00F7DB  0D                 	db	13
  1407  00F7DC  0A                 	db	10
  1408  00F7DD  00                 	db	0
  1409  00F7DE                     STR_89:
  1410  00F7DE  2E                 	db	46
  1411  00F7DF  2E                 	db	46
  1412  00F7E0  2E                 	db	46
  1413  00F7E1  3F                 	db	63	;'?'
  1414  00F7E2  3F                 	db	63	;'?'
  1415  00F7E3  3A                 	db	58	;':'
  1416  00F7E4  3A                 	db	58	;':'
  1417  00F7E5  3A                 	db	58	;':'
  1418  00F7E6  3A                 	db	58	;':'
  1419  00F7E7  3A                 	db	58	;':'
  1420  00F7E8  3A                 	db	58	;':'
  1421  00F7E9  3A                 	db	58	;':'
  1422  00F7EA  3A                 	db	58	;':'
  1423  00F7EB  3A                 	db	58	;':'
  1424  00F7EC  3A                 	db	58	;':'
  1425  00F7ED  3A                 	db	58	;':'
  1426  00F7EE  3A                 	db	58	;':'
  1427  00F7EF  3A                 	db	58	;':'
  1428  00F7F0  3A                 	db	58	;':'
  1429  00F7F1  3A                 	db	58	;':'
  1430  00F7F2  3A                 	db	58	;':'
  1431  00F7F3  3A                 	db	58	;':'
  1432  00F7F4  3A                 	db	58	;':'
  1433  00F7F5  3A                 	db	58	;':'
  1434  00F7F6  3A                 	db	58	;':'
  1435  00F7F7  3F                 	db	63	;'?'
  1436  00F7F8  3F                 	db	63	;'?'
  1437  00F7F9  3F                 	db	63	;'?'
  1438  00F7FA  3F                 	db	63	;'?'
  1439  00F7FB  3F                 	db	63	;'?'
  1440  00F7FC  3F                 	db	63	;'?'
  1441  00F7FD  3F                 	db	63	;'?'
  1442  00F7FE  3F                 	db	63	;'?'
  1443  00F7FF  3F                 	db	63	;'?'
  1444  00F800  3A                 	db	58	;':'
  1445  00F801  3A                 	db	58	;':'
  1446  00F802  3A                 	db	58	;':'
  1447  00F803  3A                 	db	58	;':'
  1448  00F804  3A                 	db	58	;':'
  1449  00F805  3A                 	db	58	;':'
  1450  00F806  3A                 	db	58	;':'
  1451  00F807  3A                 	db	58	;':'
  1452  00F808  3A                 	db	58	;':'
  1453  00F809  3A                 	db	58	;':'
  1454  00F80A  3A                 	db	58	;':'
  1455  00F80B  3A                 	db	58	;':'
  1456  00F80C  3A                 	db	58	;':'
  1457  00F80D  3A                 	db	58	;':'
  1458  00F80E  3A                 	db	58	;':'
  1459  00F80F  3A                 	db	58	;':'
  1460  00F810  3A                 	db	58	;':'
  1461  00F811  3A                 	db	58	;':'
  1462  00F812  3A                 	db	58	;':'
  1463  00F813  3A                 	db	58	;':'
  1464  00F814  3F                 	db	63	;'?'
  1465  00F815  3F                 	db	63	;'?'
  1466  00F816  2E                 	db	46
  1467  00F817  2E                 	db	46
  1468  00F818  2E                 	db	46
  1469  00F819  0D                 	db	13
  1470  00F81A  0A                 	db	10
  1471  00F81B  00                 	db	0
  1472  00F81C                     STR_100:
  1473  00F81C  2E                 	db	46
  1474  00F81D  2E                 	db	46
  1475  00F81E  2E                 	db	46
  1476  00F81F  3F                 	db	63	;'?'
  1477  00F820  3F                 	db	63	;'?'
  1478  00F821  3F                 	db	63	;'?'
  1479  00F822  3F                 	db	63	;'?'
  1480  00F823  3F                 	db	63	;'?'
  1481  00F824  3F                 	db	63	;'?'
  1482  00F825  3F                 	db	63	;'?'
  1483  00F826  3F                 	db	63	;'?'
  1484  00F827  3F                 	db	63	;'?'
  1485  00F828  3F                 	db	63	;'?'
  1486  00F829  3F                 	db	63	;'?'
  1487  00F82A  3F                 	db	63	;'?'
  1488  00F82B  3F                 	db	63	;'?'
  1489  00F82C  3A                 	db	58	;':'
  1490  00F82D  3A                 	db	58	;':'
  1491  00F82E  3A                 	db	58	;':'
  1492  00F82F  3F                 	db	63	;'?'
  1493  00F830  3F                 	db	63	;'?'
  1494  00F831  3F                 	db	63	;'?'
  1495  00F832  3F                 	db	63	;'?'
  1496  00F833  3F                 	db	63	;'?'
  1497  00F834  3F                 	db	63	;'?'
  1498  00F835  3F                 	db	63	;'?'
  1499  00F836  3F                 	db	63	;'?'
  1500  00F837  3F                 	db	63	;'?'
  1501  00F838  3F                 	db	63	;'?'
  1502  00F839  3F                 	db	63	;'?'
  1503  00F83A  3F                 	db	63	;'?'
  1504  00F83B  3F                 	db	63	;'?'
  1505  00F83C  3F                 	db	63	;'?'
  1506  00F83D  3F                 	db	63	;'?'
  1507  00F83E  3F                 	db	63	;'?'
  1508  00F83F  3F                 	db	63	;'?'
  1509  00F840  3F                 	db	63	;'?'
  1510  00F841  3F                 	db	63	;'?'
  1511  00F842  3F                 	db	63	;'?'
  1512  00F843  3F                 	db	63	;'?'
  1513  00F844  3A                 	db	58	;':'
  1514  00F845  3A                 	db	58	;':'
  1515  00F846  3A                 	db	58	;':'
  1516  00F847  3F                 	db	63	;'?'
  1517  00F848  3F                 	db	63	;'?'
  1518  00F849  3F                 	db	63	;'?'
  1519  00F84A  3F                 	db	63	;'?'
  1520  00F84B  3F                 	db	63	;'?'
  1521  00F84C  3F                 	db	63	;'?'
  1522  00F84D  3F                 	db	63	;'?'
  1523  00F84E  3F                 	db	63	;'?'
  1524  00F84F  3F                 	db	63	;'?'
  1525  00F850  3F                 	db	63	;'?'
  1526  00F851  3F                 	db	63	;'?'
  1527  00F852  3F                 	db	63	;'?'
  1528  00F853  3F                 	db	63	;'?'
  1529  00F854  2E                 	db	46
  1530  00F855  2E                 	db	46
  1531  00F856  2E                 	db	46
  1532  00F857  0D                 	db	13
  1533  00F858  0A                 	db	10
  1534  00F859  00                 	db	0
  1535  00F85A                     STR_101:
  1536  00F85A  2E                 	db	46
  1537  00F85B  2E                 	db	46
  1538  00F85C  2E                 	db	46
  1539  00F85D  2E                 	db	46
  1540  00F85E  3F                 	db	63	;'?'
  1541  00F85F  3F                 	db	63	;'?'
  1542  00F860  3F                 	db	63	;'?'
  1543  00F861  3F                 	db	63	;'?'
  1544  00F862  3F                 	db	63	;'?'
  1545  00F863  3F                 	db	63	;'?'
  1546  00F864  3F                 	db	63	;'?'
  1547  00F865  3F                 	db	63	;'?'
  1548  00F866  3F                 	db	63	;'?'
  1549  00F867  3F                 	db	63	;'?'
  1550  00F868  3F                 	db	63	;'?'
  1551  00F869  3F                 	db	63	;'?'
  1552  00F86A  3F                 	db	63	;'?'
  1553  00F86B  3A                 	db	58	;':'
  1554  00F86C  3A                 	db	58	;':'
  1555  00F86D  3A                 	db	58	;':'
  1556  00F86E  3F                 	db	63	;'?'
  1557  00F86F  3F                 	db	63	;'?'
  1558  00F870  3F                 	db	63	;'?'
  1559  00F871  3F                 	db	63	;'?'
  1560  00F872  3F                 	db	63	;'?'
  1561  00F873  3F                 	db	63	;'?'
  1562  00F874  3F                 	db	63	;'?'
  1563  00F875  3F                 	db	63	;'?'
  1564  00F876  3F                 	db	63	;'?'
  1565  00F877  3F                 	db	63	;'?'
  1566  00F878  3F                 	db	63	;'?'
  1567  00F879  3F                 	db	63	;'?'
  1568  00F87A  3F                 	db	63	;'?'
  1569  00F87B  3F                 	db	63	;'?'
  1570  00F87C  3F                 	db	63	;'?'
  1571  00F87D  3F                 	db	63	;'?'
  1572  00F87E  3F                 	db	63	;'?'
  1573  00F87F  3F                 	db	63	;'?'
  1574  00F880  3F                 	db	63	;'?'
  1575  00F881  3A                 	db	58	;':'
  1576  00F882  3A                 	db	58	;':'
  1577  00F883  3A                 	db	58	;':'
  1578  00F884  3F                 	db	63	;'?'
  1579  00F885  3F                 	db	63	;'?'
  1580  00F886  3F                 	db	63	;'?'
  1581  00F887  3F                 	db	63	;'?'
  1582  00F888  3F                 	db	63	;'?'
  1583  00F889  3F                 	db	63	;'?'
  1584  00F88A  3F                 	db	63	;'?'
  1585  00F88B  3F                 	db	63	;'?'
  1586  00F88C  3F                 	db	63	;'?'
  1587  00F88D  3F                 	db	63	;'?'
  1588  00F88E  3F                 	db	63	;'?'
  1589  00F88F  3F                 	db	63	;'?'
  1590  00F890  3F                 	db	63	;'?'
  1591  00F891  3F                 	db	63	;'?'
  1592  00F892  2E                 	db	46
  1593  00F893  2E                 	db	46
  1594  00F894  2E                 	db	46
  1595  00F895  0D                 	db	13
  1596  00F896  0A                 	db	10
  1597  00F897  00                 	db	0
  1598  00F898                     STR_90:
  1599  00F898  2E                 	db	46
  1600  00F899  2E                 	db	46
  1601  00F89A  3F                 	db	63	;'?'
  1602  00F89B  3F                 	db	63	;'?'
  1603  00F89C  3F                 	db	63	;'?'
  1604  00F89D  3A                 	db	58	;':'
  1605  00F89E  3A                 	db	58	;':'
  1606  00F89F  3A                 	db	58	;':'
  1607  00F8A0  3A                 	db	58	;':'
  1608  00F8A1  3A                 	db	58	;':'
  1609  00F8A2  3A                 	db	58	;':'
  1610  00F8A3  3A                 	db	58	;':'
  1611  00F8A4  3A                 	db	58	;':'
  1612  00F8A5  3A                 	db	58	;':'
  1613  00F8A6  3A                 	db	58	;':'
  1614  00F8A7  3A                 	db	58	;':'
  1615  00F8A8  3A                 	db	58	;':'
  1616  00F8A9  3A                 	db	58	;':'
  1617  00F8AA  3A                 	db	58	;':'
  1618  00F8AB  3A                 	db	58	;':'
  1619  00F8AC  3A                 	db	58	;':'
  1620  00F8AD  3A                 	db	58	;':'
  1621  00F8AE  3A                 	db	58	;':'
  1622  00F8AF  3A                 	db	58	;':'
  1623  00F8B0  3A                 	db	58	;':'
  1624  00F8B1  3A                 	db	58	;':'
  1625  00F8B2  3A                 	db	58	;':'
  1626  00F8B3  3A                 	db	58	;':'
  1627  00F8B4  3A                 	db	58	;':'
  1628  00F8B5  3A                 	db	58	;':'
  1629  00F8B6  3A                 	db	58	;':'
  1630  00F8B7  3A                 	db	58	;':'
  1631  00F8B8  3A                 	db	58	;':'
  1632  00F8B9  3A                 	db	58	;':'
  1633  00F8BA  3A                 	db	58	;':'
  1634  00F8BB  3A                 	db	58	;':'
  1635  00F8BC  3A                 	db	58	;':'
  1636  00F8BD  3A                 	db	58	;':'
  1637  00F8BE  3A                 	db	58	;':'
  1638  00F8BF  3A                 	db	58	;':'
  1639  00F8C0  3A                 	db	58	;':'
  1640  00F8C1  3A                 	db	58	;':'
  1641  00F8C2  3A                 	db	58	;':'
  1642  00F8C3  3A                 	db	58	;':'
  1643  00F8C4  3A                 	db	58	;':'
  1644  00F8C5  3A                 	db	58	;':'
  1645  00F8C6  3A                 	db	58	;':'
  1646  00F8C7  3A                 	db	58	;':'
  1647  00F8C8  3A                 	db	58	;':'
  1648  00F8C9  3A                 	db	58	;':'
  1649  00F8CA  3A                 	db	58	;':'
  1650  00F8CB  3A                 	db	58	;':'
  1651  00F8CC  3A                 	db	58	;':'
  1652  00F8CD  3A                 	db	58	;':'
  1653  00F8CE  3F                 	db	63	;'?'
  1654  00F8CF  3F                 	db	63	;'?'
  1655  00F8D0  3F                 	db	63	;'?'
  1656  00F8D1  2E                 	db	46
  1657  00F8D2  2E                 	db	46
  1658  00F8D3  0D                 	db	13
  1659  00F8D4  0A                 	db	10
  1660  00F8D5  00                 	db	0
  1661  00F8D6                     STR_91:
  1662  00F8D6  2E                 	db	46
  1663  00F8D7  2E                 	db	46
  1664  00F8D8  3F                 	db	63	;'?'
  1665  00F8D9  3F                 	db	63	;'?'
  1666  00F8DA  3F                 	db	63	;'?'
  1667  00F8DB  3F                 	db	63	;'?'
  1668  00F8DC  3A                 	db	58	;':'
  1669  00F8DD  3A                 	db	58	;':'
  1670  00F8DE  3A                 	db	58	;':'
  1671  00F8DF  3A                 	db	58	;':'
  1672  00F8E0  3A                 	db	58	;':'
  1673  00F8E1  3A                 	db	58	;':'
  1674  00F8E2  3A                 	db	58	;':'
  1675  00F8E3  3A                 	db	58	;':'
  1676  00F8E4  3A                 	db	58	;':'
  1677  00F8E5  3A                 	db	58	;':'
  1678  00F8E6  3A                 	db	58	;':'
  1679  00F8E7  3A                 	db	58	;':'
  1680  00F8E8  3A                 	db	58	;':'
  1681  00F8E9  3A                 	db	58	;':'
  1682  00F8EA  3A                 	db	58	;':'
  1683  00F8EB  3A                 	db	58	;':'
  1684  00F8EC  3A                 	db	58	;':'
  1685  00F8ED  3A                 	db	58	;':'
  1686  00F8EE  3A                 	db	58	;':'
  1687  00F8EF  3A                 	db	58	;':'
  1688  00F8F0  3A                 	db	58	;':'
  1689  00F8F1  3A                 	db	58	;':'
  1690  00F8F2  3F                 	db	63	;'?'
  1691  00F8F3  3F                 	db	63	;'?'
  1692  00F8F4  3F                 	db	63	;'?'
  1693  00F8F5  3A                 	db	58	;':'
  1694  00F8F6  3A                 	db	58	;':'
  1695  00F8F7  3A                 	db	58	;':'
  1696  00F8F8  3A                 	db	58	;':'
  1697  00F8F9  3A                 	db	58	;':'
  1698  00F8FA  3A                 	db	58	;':'
  1699  00F8FB  3A                 	db	58	;':'
  1700  00F8FC  3A                 	db	58	;':'
  1701  00F8FD  3A                 	db	58	;':'
  1702  00F8FE  3A                 	db	58	;':'
  1703  00F8FF  3A                 	db	58	;':'
  1704  00F900  3A                 	db	58	;':'
  1705  00F901  3A                 	db	58	;':'
  1706  00F902  3A                 	db	58	;':'
  1707  00F903  3A                 	db	58	;':'
  1708  00F904  3A                 	db	58	;':'
  1709  00F905  3A                 	db	58	;':'
  1710  00F906  3A                 	db	58	;':'
  1711  00F907  3A                 	db	58	;':'
  1712  00F908  3A                 	db	58	;':'
  1713  00F909  3A                 	db	58	;':'
  1714  00F90A  3A                 	db	58	;':'
  1715  00F90B  3F                 	db	63	;'?'
  1716  00F90C  3F                 	db	63	;'?'
  1717  00F90D  3F                 	db	63	;'?'
  1718  00F90E  3F                 	db	63	;'?'
  1719  00F90F  2E                 	db	46
  1720  00F910  2E                 	db	46
  1721  00F911  0D                 	db	13
  1722  00F912  0A                 	db	10
  1723  00F913  00                 	db	0
  1724  00F914                     STR_99:
  1725  00F914  2E                 	db	46
  1726  00F915  2E                 	db	46
  1727  00F916  2E                 	db	46
  1728  00F917  3F                 	db	63	;'?'
  1729  00F918  3F                 	db	63	;'?'
  1730  00F919  3F                 	db	63	;'?'
  1731  00F91A  3F                 	db	63	;'?'
  1732  00F91B  3F                 	db	63	;'?'
  1733  00F91C  3F                 	db	63	;'?'
  1734  00F91D  3F                 	db	63	;'?'
  1735  00F91E  3F                 	db	63	;'?'
  1736  00F91F  3F                 	db	63	;'?'
  1737  00F920  3F                 	db	63	;'?'
  1738  00F921  3F                 	db	63	;'?'
  1739  00F922  3F                 	db	63	;'?'
  1740  00F923  3F                 	db	63	;'?'
  1741  00F924  3F                 	db	63	;'?'
  1742  00F925  3F                 	db	63	;'?'
  1743  00F926  3F                 	db	63	;'?'
  1744  00F927  3F                 	db	63	;'?'
  1745  00F928  3F                 	db	63	;'?'
  1746  00F929  3F                 	db	63	;'?'
  1747  00F92A  3F                 	db	63	;'?'
  1748  00F92B  3F                 	db	63	;'?'
  1749  00F92C  3F                 	db	63	;'?'
  1750  00F92D  3F                 	db	63	;'?'
  1751  00F92E  3F                 	db	63	;'?'
  1752  00F92F  3F                 	db	63	;'?'
  1753  00F930  3F                 	db	63	;'?'
  1754  00F931  3F                 	db	63	;'?'
  1755  00F932  3F                 	db	63	;'?'
  1756  00F933  3F                 	db	63	;'?'
  1757  00F934  3F                 	db	63	;'?'
  1758  00F935  3F                 	db	63	;'?'
  1759  00F936  3F                 	db	63	;'?'
  1760  00F937  3F                 	db	63	;'?'
  1761  00F938  3F                 	db	63	;'?'
  1762  00F939  3F                 	db	63	;'?'
  1763  00F93A  3F                 	db	63	;'?'
  1764  00F93B  3F                 	db	63	;'?'
  1765  00F93C  3F                 	db	63	;'?'
  1766  00F93D  3F                 	db	63	;'?'
  1767  00F93E  3F                 	db	63	;'?'
  1768  00F93F  3F                 	db	63	;'?'
  1769  00F940  3F                 	db	63	;'?'
  1770  00F941  3F                 	db	63	;'?'
  1771  00F942  3F                 	db	63	;'?'
  1772  00F943  3F                 	db	63	;'?'
  1773  00F944  3F                 	db	63	;'?'
  1774  00F945  3F                 	db	63	;'?'
  1775  00F946  3F                 	db	63	;'?'
  1776  00F947  3F                 	db	63	;'?'
  1777  00F948  3F                 	db	63	;'?'
  1778  00F949  3F                 	db	63	;'?'
  1779  00F94A  3F                 	db	63	;'?'
  1780  00F94B  3F                 	db	63	;'?'
  1781  00F94C  3F                 	db	63	;'?'
  1782  00F94D  2E                 	db	46
  1783  00F94E  2E                 	db	46
  1784  00F94F  0D                 	db	13
  1785  00F950  0A                 	db	10
  1786  00F951  00                 	db	0
  1787  00F952                     STR_97:
  1788  00F952  2E                 	db	46
  1789  00F953  2E                 	db	46
  1790  00F954  3F                 	db	63	;'?'
  1791  00F955  3F                 	db	63	;'?'
  1792  00F956  3F                 	db	63	;'?'
  1793  00F957  3F                 	db	63	;'?'
  1794  00F958  3F                 	db	63	;'?'
  1795  00F959  3F                 	db	63	;'?'
  1796  00F95A  3F                 	db	63	;'?'
  1797  00F95B  3F                 	db	63	;'?'
  1798  00F95C  3F                 	db	63	;'?'
  1799  00F95D  3F                 	db	63	;'?'
  1800  00F95E  3F                 	db	63	;'?'
  1801  00F95F  3F                 	db	63	;'?'
  1802  00F960  3F                 	db	63	;'?'
  1803  00F961  3F                 	db	63	;'?'
  1804  00F962  3F                 	db	63	;'?'
  1805  00F963  3F                 	db	63	;'?'
  1806  00F964  3F                 	db	63	;'?'
  1807  00F965  3F                 	db	63	;'?'
  1808  00F966  3F                 	db	63	;'?'
  1809  00F967  3F                 	db	63	;'?'
  1810  00F968  3F                 	db	63	;'?'
  1811  00F969  3F                 	db	63	;'?'
  1812  00F96A  3F                 	db	63	;'?'
  1813  00F96B  3F                 	db	63	;'?'
  1814  00F96C  3F                 	db	63	;'?'
  1815  00F96D  3F                 	db	63	;'?'
  1816  00F96E  3F                 	db	63	;'?'
  1817  00F96F  3F                 	db	63	;'?'
  1818  00F970  3F                 	db	63	;'?'
  1819  00F971  3F                 	db	63	;'?'
  1820  00F972  3F                 	db	63	;'?'
  1821  00F973  3F                 	db	63	;'?'
  1822  00F974  3F                 	db	63	;'?'
  1823  00F975  3F                 	db	63	;'?'
  1824  00F976  3F                 	db	63	;'?'
  1825  00F977  3F                 	db	63	;'?'
  1826  00F978  3F                 	db	63	;'?'
  1827  00F979  3F                 	db	63	;'?'
  1828  00F97A  3F                 	db	63	;'?'
  1829  00F97B  3F                 	db	63	;'?'
  1830  00F97C  3F                 	db	63	;'?'
  1831  00F97D  3F                 	db	63	;'?'
  1832  00F97E  3F                 	db	63	;'?'
  1833  00F97F  3F                 	db	63	;'?'
  1834  00F980  3F                 	db	63	;'?'
  1835  00F981  3F                 	db	63	;'?'
  1836  00F982  3F                 	db	63	;'?'
  1837  00F983  3F                 	db	63	;'?'
  1838  00F984  3F                 	db	63	;'?'
  1839  00F985  3F                 	db	63	;'?'
  1840  00F986  3F                 	db	63	;'?'
  1841  00F987  3F                 	db	63	;'?'
  1842  00F988  3F                 	db	63	;'?'
  1843  00F989  3F                 	db	63	;'?'
  1844  00F98A  3F                 	db	63	;'?'
  1845  00F98B  2E                 	db	46
  1846  00F98C  2E                 	db	46
  1847  00F98D  0D                 	db	13
  1848  00F98E  0A                 	db	10
  1849  00F98F  00                 	db	0
  1850  00F990                     STR_92:
  1851  00F990  2E                 	db	46
  1852  00F991  3F                 	db	63	;'?'
  1853  00F992  3F                 	db	63	;'?'
  1854  00F993  3F                 	db	63	;'?'
  1855  00F994  3F                 	db	63	;'?'
  1856  00F995  3F                 	db	63	;'?'
  1857  00F996  3F                 	db	63	;'?'
  1858  00F997  3A                 	db	58	;':'
  1859  00F998  3A                 	db	58	;':'
  1860  00F999  3A                 	db	58	;':'
  1861  00F99A  3A                 	db	58	;':'
  1862  00F99B  3A                 	db	58	;':'
  1863  00F99C  3A                 	db	58	;':'
  1864  00F99D  3A                 	db	58	;':'
  1865  00F99E  3A                 	db	58	;':'
  1866  00F99F  3A                 	db	58	;':'
  1867  00F9A0  3A                 	db	58	;':'
  1868  00F9A1  3A                 	db	58	;':'
  1869  00F9A2  3A                 	db	58	;':'
  1870  00F9A3  3A                 	db	58	;':'
  1871  00F9A4  3A                 	db	58	;':'
  1872  00F9A5  3A                 	db	58	;':'
  1873  00F9A6  3A                 	db	58	;':'
  1874  00F9A7  3A                 	db	58	;':'
  1875  00F9A8  3A                 	db	58	;':'
  1876  00F9A9  3A                 	db	58	;':'
  1877  00F9AA  3A                 	db	58	;':'
  1878  00F9AB  3F                 	db	63	;'?'
  1879  00F9AC  3F                 	db	63	;'?'
  1880  00F9AD  3F                 	db	63	;'?'
  1881  00F9AE  3F                 	db	63	;'?'
  1882  00F9AF  3F                 	db	63	;'?'
  1883  00F9B0  3A                 	db	58	;':'
  1884  00F9B1  3A                 	db	58	;':'
  1885  00F9B2  3A                 	db	58	;':'
  1886  00F9B3  3A                 	db	58	;':'
  1887  00F9B4  3A                 	db	58	;':'
  1888  00F9B5  3A                 	db	58	;':'
  1889  00F9B6  3A                 	db	58	;':'
  1890  00F9B7  3A                 	db	58	;':'
  1891  00F9B8  3A                 	db	58	;':'
  1892  00F9B9  3A                 	db	58	;':'
  1893  00F9BA  3A                 	db	58	;':'
  1894  00F9BB  3A                 	db	58	;':'
  1895  00F9BC  3A                 	db	58	;':'
  1896  00F9BD  3A                 	db	58	;':'
  1897  00F9BE  3A                 	db	58	;':'
  1898  00F9BF  3A                 	db	58	;':'
  1899  00F9C0  3A                 	db	58	;':'
  1900  00F9C1  3A                 	db	58	;':'
  1901  00F9C2  3A                 	db	58	;':'
  1902  00F9C3  3A                 	db	58	;':'
  1903  00F9C4  3A                 	db	58	;':'
  1904  00F9C5  3F                 	db	63	;'?'
  1905  00F9C6  3F                 	db	63	;'?'
  1906  00F9C7  3F                 	db	63	;'?'
  1907  00F9C8  3F                 	db	63	;'?'
  1908  00F9C9  3F                 	db	63	;'?'
  1909  00F9CA  2E                 	db	46
  1910  00F9CB  0D                 	db	13
  1911  00F9CC  0A                 	db	10
  1912  00F9CD  00                 	db	0
  1913  00F9CE                     STR_93:
  1914  00F9CE  2E                 	db	46
  1915  00F9CF  3F                 	db	63	;'?'
  1916  00F9D0  3F                 	db	63	;'?'
  1917  00F9D1  3F                 	db	63	;'?'
  1918  00F9D2  3F                 	db	63	;'?'
  1919  00F9D3  3F                 	db	63	;'?'
  1920  00F9D4  3F                 	db	63	;'?'
  1921  00F9D5  3F                 	db	63	;'?'
  1922  00F9D6  3A                 	db	58	;':'
  1923  00F9D7  3A                 	db	58	;':'
  1924  00F9D8  3A                 	db	58	;':'
  1925  00F9D9  3A                 	db	58	;':'
  1926  00F9DA  3A                 	db	58	;':'
  1927  00F9DB  3A                 	db	58	;':'
  1928  00F9DC  3A                 	db	58	;':'
  1929  00F9DD  3A                 	db	58	;':'
  1930  00F9DE  3A                 	db	58	;':'
  1931  00F9DF  3A                 	db	58	;':'
  1932  00F9E0  3A                 	db	58	;':'
  1933  00F9E1  3A                 	db	58	;':'
  1934  00F9E2  3A                 	db	58	;':'
  1935  00F9E3  3A                 	db	58	;':'
  1936  00F9E4  3A                 	db	58	;':'
  1937  00F9E5  3A                 	db	58	;':'
  1938  00F9E6  3A                 	db	58	;':'
  1939  00F9E7  3A                 	db	58	;':'
  1940  00F9E8  3F                 	db	63	;'?'
  1941  00F9E9  3F                 	db	63	;'?'
  1942  00F9EA  3F                 	db	63	;'?'
  1943  00F9EB  3F                 	db	63	;'?'
  1944  00F9EC  3F                 	db	63	;'?'
  1945  00F9ED  3F                 	db	63	;'?'
  1946  00F9EE  3F                 	db	63	;'?'
  1947  00F9EF  3A                 	db	58	;':'
  1948  00F9F0  3A                 	db	58	;':'
  1949  00F9F1  3A                 	db	58	;':'
  1950  00F9F2  3A                 	db	58	;':'
  1951  00F9F3  3A                 	db	58	;':'
  1952  00F9F4  3A                 	db	58	;':'
  1953  00F9F5  3A                 	db	58	;':'
  1954  00F9F6  3A                 	db	58	;':'
  1955  00F9F7  3A                 	db	58	;':'
  1956  00F9F8  3A                 	db	58	;':'
  1957  00F9F9  3A                 	db	58	;':'
  1958  00F9FA  3A                 	db	58	;':'
  1959  00F9FB  3A                 	db	58	;':'
  1960  00F9FC  3A                 	db	58	;':'
  1961  00F9FD  3A                 	db	58	;':'
  1962  00F9FE  3A                 	db	58	;':'
  1963  00F9FF  3A                 	db	58	;':'
  1964  00FA00  3A                 	db	58	;':'
  1965  00FA01  3A                 	db	58	;':'
  1966  00FA02  3F                 	db	63	;'?'
  1967  00FA03  3F                 	db	63	;'?'
  1968  00FA04  3F                 	db	63	;'?'
  1969  00FA05  3F                 	db	63	;'?'
  1970  00FA06  3F                 	db	63	;'?'
  1971  00FA07  3F                 	db	63	;'?'
  1972  00FA08  2E                 	db	46
  1973  00FA09  0D                 	db	13
  1974  00FA0A  0A                 	db	10
  1975  00FA0B  00                 	db	0
  1976  00FA0C                     STR_94:
  1977  00FA0C  2E                 	db	46
  1978  00FA0D  3F                 	db	63	;'?'
  1979  00FA0E  3F                 	db	63	;'?'
  1980  00FA0F  3F                 	db	63	;'?'
  1981  00FA10  3F                 	db	63	;'?'
  1982  00FA11  3F                 	db	63	;'?'
  1983  00FA12  3F                 	db	63	;'?'
  1984  00FA13  3F                 	db	63	;'?'
  1985  00FA14  3A                 	db	58	;':'
  1986  00FA15  3A                 	db	58	;':'
  1987  00FA16  3A                 	db	58	;':'
  1988  00FA17  3A                 	db	58	;':'
  1989  00FA18  3A                 	db	58	;':'
  1990  00FA19  3A                 	db	58	;':'
  1991  00FA1A  3A                 	db	58	;':'
  1992  00FA1B  3A                 	db	58	;':'
  1993  00FA1C  3A                 	db	58	;':'
  1994  00FA1D  3A                 	db	58	;':'
  1995  00FA1E  3A                 	db	58	;':'
  1996  00FA1F  3A                 	db	58	;':'
  1997  00FA20  3A                 	db	58	;':'
  1998  00FA21  3A                 	db	58	;':'
  1999  00FA22  3A                 	db	58	;':'
  2000  00FA23  3A                 	db	58	;':'
  2001  00FA24  3A                 	db	58	;':'
  2002  00FA25  3F                 	db	63	;'?'
  2003  00FA26  3F                 	db	63	;'?'
  2004  00FA27  3F                 	db	63	;'?'
  2005  00FA28  3F                 	db	63	;'?'
  2006  00FA29  3F                 	db	63	;'?'
  2007  00FA2A  3F                 	db	63	;'?'
  2008  00FA2B  3F                 	db	63	;'?'
  2009  00FA2C  3F                 	db	63	;'?'
  2010  00FA2D  3F                 	db	63	;'?'
  2011  00FA2E  3A                 	db	58	;':'
  2012  00FA2F  3A                 	db	58	;':'
  2013  00FA30  3A                 	db	58	;':'
  2014  00FA31  3A                 	db	58	;':'
  2015  00FA32  3A                 	db	58	;':'
  2016  00FA33  3A                 	db	58	;':'
  2017  00FA34  3A                 	db	58	;':'
  2018  00FA35  3A                 	db	58	;':'
  2019  00FA36  3A                 	db	58	;':'
  2020  00FA37  3A                 	db	58	;':'
  2021  00FA38  3A                 	db	58	;':'
  2022  00FA39  3A                 	db	58	;':'
  2023  00FA3A  3A                 	db	58	;':'
  2024  00FA3B  3A                 	db	58	;':'
  2025  00FA3C  3A                 	db	58	;':'
  2026  00FA3D  3A                 	db	58	;':'
  2027  00FA3E  3A                 	db	58	;':'
  2028  00FA3F  3A                 	db	58	;':'
  2029  00FA40  3F                 	db	63	;'?'
  2030  00FA41  3F                 	db	63	;'?'
  2031  00FA42  3F                 	db	63	;'?'
  2032  00FA43  3F                 	db	63	;'?'
  2033  00FA44  3F                 	db	63	;'?'
  2034  00FA45  3F                 	db	63	;'?'
  2035  00FA46  2E                 	db	46
  2036  00FA47  0D                 	db	13
  2037  00FA48  0A                 	db	10
  2038  00FA49  00                 	db	0
  2039  00FA4A                     STR_95:
  2040  00FA4A  2E                 	db	46
  2041  00FA4B  3F                 	db	63	;'?'
  2042  00FA4C  3F                 	db	63	;'?'
  2043  00FA4D  3F                 	db	63	;'?'
  2044  00FA4E  3F                 	db	63	;'?'
  2045  00FA4F  3F                 	db	63	;'?'
  2046  00FA50  3F                 	db	63	;'?'
  2047  00FA51  3F                 	db	63	;'?'
  2048  00FA52  3F                 	db	63	;'?'
  2049  00FA53  3A                 	db	58	;':'
  2050  00FA54  3A                 	db	58	;':'
  2051  00FA55  3A                 	db	58	;':'
  2052  00FA56  3A                 	db	58	;':'
  2053  00FA57  3A                 	db	58	;':'
  2054  00FA58  3A                 	db	58	;':'
  2055  00FA59  3A                 	db	58	;':'
  2056  00FA5A  3A                 	db	58	;':'
  2057  00FA5B  3A                 	db	58	;':'
  2058  00FA5C  3A                 	db	58	;':'
  2059  00FA5D  3A                 	db	58	;':'
  2060  00FA5E  3A                 	db	58	;':'
  2061  00FA5F  3A                 	db	58	;':'
  2062  00FA60  3A                 	db	58	;':'
  2063  00FA61  3A                 	db	58	;':'
  2064  00FA62  3F                 	db	63	;'?'
  2065  00FA63  3F                 	db	63	;'?'
  2066  00FA64  3F                 	db	63	;'?'
  2067  00FA65  3F                 	db	63	;'?'
  2068  00FA66  3F                 	db	63	;'?'
  2069  00FA67  3F                 	db	63	;'?'
  2070  00FA68  3F                 	db	63	;'?'
  2071  00FA69  3F                 	db	63	;'?'
  2072  00FA6A  3F                 	db	63	;'?'
  2073  00FA6B  3F                 	db	63	;'?'
  2074  00FA6C  3F                 	db	63	;'?'
  2075  00FA6D  3A                 	db	58	;':'
  2076  00FA6E  3A                 	db	58	;':'
  2077  00FA6F  3A                 	db	58	;':'
  2078  00FA70  3A                 	db	58	;':'
  2079  00FA71  3A                 	db	58	;':'
  2080  00FA72  3A                 	db	58	;':'
  2081  00FA73  3A                 	db	58	;':'
  2082  00FA74  3A                 	db	58	;':'
  2083  00FA75  3A                 	db	58	;':'
  2084  00FA76  3A                 	db	58	;':'
  2085  00FA77  3A                 	db	58	;':'
  2086  00FA78  3A                 	db	58	;':'
  2087  00FA79  3A                 	db	58	;':'
  2088  00FA7A  3A                 	db	58	;':'
  2089  00FA7B  3A                 	db	58	;':'
  2090  00FA7C  3F                 	db	63	;'?'
  2091  00FA7D  3F                 	db	63	;'?'
  2092  00FA7E  3F                 	db	63	;'?'
  2093  00FA7F  3F                 	db	63	;'?'
  2094  00FA80  3F                 	db	63	;'?'
  2095  00FA81  3F                 	db	63	;'?'
  2096  00FA82  3F                 	db	63	;'?'
  2097  00FA83  3F                 	db	63	;'?'
  2098  00FA84  2E                 	db	46
  2099  00FA85  0D                 	db	13
  2100  00FA86  0A                 	db	10
  2101  00FA87  00                 	db	0
  2102  00FA88                     STR_96:
  2103  00FA88  2E                 	db	46
  2104  00FA89  3F                 	db	63	;'?'
  2105  00FA8A  3F                 	db	63	;'?'
  2106  00FA8B  3F                 	db	63	;'?'
  2107  00FA8C  3F                 	db	63	;'?'
  2108  00FA8D  3F                 	db	63	;'?'
  2109  00FA8E  3F                 	db	63	;'?'
  2110  00FA8F  3F                 	db	63	;'?'
  2111  00FA90  3F                 	db	63	;'?'
  2112  00FA91  3F                 	db	63	;'?'
  2113  00FA92  3F                 	db	63	;'?'
  2114  00FA93  3A                 	db	58	;':'
  2115  00FA94  3A                 	db	58	;':'
  2116  00FA95  3A                 	db	58	;':'
  2117  00FA96  3A                 	db	58	;':'
  2118  00FA97  3A                 	db	58	;':'
  2119  00FA98  3A                 	db	58	;':'
  2120  00FA99  3A                 	db	58	;':'
  2121  00FA9A  3A                 	db	58	;':'
  2122  00FA9B  3A                 	db	58	;':'
  2123  00FA9C  3A                 	db	58	;':'
  2124  00FA9D  3F                 	db	63	;'?'
  2125  00FA9E  3F                 	db	63	;'?'
  2126  00FA9F  3F                 	db	63	;'?'
  2127  00FAA0  3F                 	db	63	;'?'
  2128  00FAA1  3F                 	db	63	;'?'
  2129  00FAA2  3F                 	db	63	;'?'
  2130  00FAA3  3F                 	db	63	;'?'
  2131  00FAA4  3F                 	db	63	;'?'
  2132  00FAA5  3F                 	db	63	;'?'
  2133  00FAA6  3F                 	db	63	;'?'
  2134  00FAA7  3F                 	db	63	;'?'
  2135  00FAA8  3F                 	db	63	;'?'
  2136  00FAA9  3F                 	db	63	;'?'
  2137  00FAAA  3F                 	db	63	;'?'
  2138  00FAAB  3F                 	db	63	;'?'
  2139  00FAAC  3F                 	db	63	;'?'
  2140  00FAAD  3F                 	db	63	;'?'
  2141  00FAAE  3A                 	db	58	;':'
  2142  00FAAF  3A                 	db	58	;':'
  2143  00FAB0  3A                 	db	58	;':'
  2144  00FAB1  3A                 	db	58	;':'
  2145  00FAB2  3A                 	db	58	;':'
  2146  00FAB3  3A                 	db	58	;':'
  2147  00FAB4  3A                 	db	58	;':'
  2148  00FAB5  3A                 	db	58	;':'
  2149  00FAB6  3A                 	db	58	;':'
  2150  00FAB7  3A                 	db	58	;':'
  2151  00FAB8  3F                 	db	63	;'?'
  2152  00FAB9  3F                 	db	63	;'?'
  2153  00FABA  3F                 	db	63	;'?'
  2154  00FABB  3F                 	db	63	;'?'
  2155  00FABC  3F                 	db	63	;'?'
  2156  00FABD  3F                 	db	63	;'?'
  2157  00FABE  3F                 	db	63	;'?'
  2158  00FABF  3F                 	db	63	;'?'
  2159  00FAC0  3F                 	db	63	;'?'
  2160  00FAC1  3F                 	db	63	;'?'
  2161  00FAC2  2E                 	db	46
  2162  00FAC3  0D                 	db	13
  2163  00FAC4  0A                 	db	10
  2164  00FAC5  00                 	db	0
  2165  00FAC6                     STR_43:
  2166  00FAC6  59                 	db	89	;'Y'
  2167  00FAC7  6F                 	db	111	;'o'
  2168  00FAC8  75                 	db	117	;'u'
  2169  00FAC9  20                 	db	32
  2170  00FACA  6D                 	db	109	;'m'
  2171  00FACB  61                 	db	97	;'a'
  2172  00FACC  79                 	db	121	;'y'
  2173  00FACD  20                 	db	32
  2174  00FACE  74                 	db	116	;'t'
  2175  00FACF  65                 	db	101	;'e'
  2176  00FAD0  72                 	db	114	;'r'
  2177  00FAD1  6D                 	db	109	;'m'
  2178  00FAD2  69                 	db	105	;'i'
  2179  00FAD3  6E                 	db	110	;'n'
  2180  00FAD4  61                 	db	97	;'a'
  2181  00FAD5  74                 	db	116	;'t'
  2182  00FAD6  65                 	db	101	;'e'
  2183  00FAD7  20                 	db	32
  2184  00FAD8  73                 	db	115	;'s'
  2185  00FAD9  70                 	db	112	;'p'
  2186  00FADA  6F                 	db	111	;'o'
  2187  00FADB  6F                 	db	111	;'o'
  2188  00FADC  6C                 	db	108	;'l'
  2189  00FADD  69                 	db	105	;'i'
  2190  00FADE  6E                 	db	110	;'n'
  2191  00FADF  67                 	db	103	;'g'
  2192  00FAE0  20                 	db	32
  2193  00FAE1  61                 	db	97	;'a'
  2194  00FAE2  74                 	db	116	;'t'
  2195  00FAE3  20                 	db	32
  2196  00FAE4  61                 	db	97	;'a'
  2197  00FAE5  6E                 	db	110	;'n'
  2198  00FAE6  79                 	db	121	;'y'
  2199  00FAE7  74                 	db	116	;'t'
  2200  00FAE8  69                 	db	105	;'i'
  2201  00FAE9  6D                 	db	109	;'m'
  2202  00FAEA  65                 	db	101	;'e'
  2203  00FAEB  20                 	db	32
  2204  00FAEC  77                 	db	119	;'w'
  2205  00FAED  69                 	db	105	;'i'
  2206  00FAEE  74                 	db	116	;'t'
  2207  00FAEF  68                 	db	104	;'h'
  2208  00FAF0  20                 	db	32
  2209  00FAF1  61                 	db	97	;'a'
  2210  00FAF2  20                 	db	32
  2211  00FAF3  6B                 	db	107	;'k'
  2212  00FAF4  65                 	db	101	;'e'
  2213  00FAF5  79                 	db	121	;'y'
  2214  00FAF6  20                 	db	32
  2215  00FAF7  70                 	db	112	;'p'
  2216  00FAF8  72                 	db	114	;'r'
  2217  00FAF9  65                 	db	101	;'e'
  2218  00FAFA  73                 	db	115	;'s'
  2219  00FAFB  73                 	db	115	;'s'
  2220  00FAFC  2E                 	db	46
  2221  00FAFD  0D                 	db	13
  2222  00FAFE  0A                 	db	10
  2223  00FAFF  00                 	db	0
  2224  00FB00                     STR_46:
  2225  00FB00  52                 	db	82	;'R'
  2226  00FB01  69                 	db	105	;'i'
  2227  00FB02  67                 	db	103	;'g'
  2228  00FB03  68                 	db	104	;'h'
  2229  00FB04  74                 	db	116	;'t'
  2230  00FB05  20                 	db	32
  2231  00FB06  6D                 	db	109	;'m'
  2232  00FB07  6F                 	db	111	;'o'
  2233  00FB08  75                 	db	117	;'u'
  2234  00FB09  73                 	db	115	;'s'
  2235  00FB0A  65                 	db	101	;'e'
  2236  00FB0B  20                 	db	32
  2237  00FB0C  63                 	db	99	;'c'
  2238  00FB0D  6C                 	db	108	;'l'
  2239  00FB0E  69                 	db	105	;'i'
  2240  00FB0F  63                 	db	99	;'c'
  2241  00FB10  6B                 	db	107	;'k'
  2242  00FB11  20                 	db	32
  2243  00FB12  6F                 	db	111	;'o'
  2244  00FB13  6E                 	db	110	;'n'
  2245  00FB14  20                 	db	32
  2246  00FB15  74                 	db	116	;'t'
  2247  00FB16  68                 	db	104	;'h'
  2248  00FB17  65                 	db	101	;'e'
  2249  00FB18  20                 	db	32
  2250  00FB19  75                 	db	117	;'u'
  2251  00FB1A  70                 	db	112	;'p'
  2252  00FB1B  70                 	db	112	;'p'
  2253  00FB1C  65                 	db	101	;'e'
  2254  00FB1D  72                 	db	114	;'r'
  2255  00FB1E  20                 	db	32
  2256  00FB1F  6C                 	db	108	;'l'
  2257  00FB20  65                 	db	101	;'e'
  2258  00FB21  66                 	db	102	;'f'
  2259  00FB22  74                 	db	116	;'t'
  2260  00FB23  20                 	db	32
  2261  00FB24  6F                 	db	111	;'o'
  2262  00FB25  66                 	db	102	;'f'
  2263  00FB26  20                 	db	32
  2264  00FB27  74                 	db	116	;'t'
  2265  00FB28  68                 	db	104	;'h'
  2266  00FB29  65                 	db	101	;'e'
  2267  00FB2A  20                 	db	32
  2268  00FB2B  50                 	db	80	;'P'
  2269  00FB2C  75                 	db	117	;'u'
  2270  00FB2D  54                 	db	84	;'T'
  2271  00FB2E  54                 	db	84	;'T'
  2272  00FB2F  59                 	db	89	;'Y'
  2273  00FB30  20                 	db	32
  2274  00FB31  77                 	db	119	;'w'
  2275  00FB32  69                 	db	105	;'i'
  2276  00FB33  6E                 	db	110	;'n'
  2277  00FB34  64                 	db	100	;'d'
  2278  00FB35  6F                 	db	111	;'o'
  2279  00FB36  77                 	db	119	;'w'
  2280  00FB37  0D                 	db	13
  2281  00FB38  0A                 	db	10
  2282  00FB39  00                 	db	0
  2283  00FB3A                     STR_25:
  2284  00FB3A  31                 	db	49	;'1'
  2285  00FB3B  3A                 	db	58	;':'
  2286  00FB3C  20                 	db	32
  2287  00FB3D  77                 	db	119	;'w'
  2288  00FB3E  72                 	db	114	;'r'
  2289  00FB3F  69                 	db	105	;'i'
  2290  00FB40  74                 	db	116	;'t'
  2291  00FB41  65                 	db	101	;'e'
  2292  00FB42  20                 	db	32
  2293  00FB43  61                 	db	97	;'a'
  2294  00FB44  20                 	db	32
  2295  00FB45  70                 	db	112	;'p'
  2296  00FB46  65                 	db	101	;'e'
  2297  00FB47  72                 	db	114	;'r'
  2298  00FB48  66                 	db	102	;'f'
  2299  00FB49  65                 	db	101	;'e'
  2300  00FB4A  63                 	db	99	;'c'
  2301  00FB4B  74                 	db	116	;'t'
  2302  00FB4C  20                 	db	32
  2303  00FB4D  32                 	db	50	;'2'
  2304  00FB4E  36                 	db	54	;'6'
  2305  00FB4F  20                 	db	32
  2306  00FB50  76                 	db	118	;'v'
  2307  00FB51  61                 	db	97	;'a'
  2308  00FB52  6C                 	db	108	;'l'
  2309  00FB53  75                 	db	117	;'u'
  2310  00FB54  65                 	db	101	;'e'
  2311  00FB55  20                 	db	32
  2312  00FB56  73                 	db	115	;'s'
  2313  00FB57  69                 	db	105	;'i'
  2314  00FB58  6E                 	db	110	;'n'
  2315  00FB59  65                 	db	101	;'e'
  2316  00FB5A  20                 	db	32
  2317  00FB5B  77                 	db	119	;'w'
  2318  00FB5C  61                 	db	97	;'a'
  2319  00FB5D  76                 	db	118	;'v'
  2320  00FB5E  65                 	db	101	;'e'
  2321  00FB5F  20                 	db	32
  2322  00FB60  74                 	db	116	;'t'
  2323  00FB61  6F                 	db	111	;'o'
  2324  00FB62  20                 	db	32
  2325  00FB63  74                 	db	116	;'t'
  2326  00FB64  68                 	db	104	;'h'
  2327  00FB65  65                 	db	101	;'e'
  2328  00FB66  20                 	db	32
  2329  00FB67  53                 	db	83	;'S'
  2330  00FB68  44                 	db	68	;'D'
  2331  00FB69  20                 	db	32
  2332  00FB6A  63                 	db	99	;'c'
  2333  00FB6B  61                 	db	97	;'a'
  2334  00FB6C  72                 	db	114	;'r'
  2335  00FB6D  64                 	db	100	;'d'
  2336  00FB6E  0D                 	db	13
  2337  00FB6F  0A                 	db	10
  2338  00FB70  00                 	db	0
  2339  00FB71                     STR_7:
  2340  00FB71  0D                 	db	13
  2341  00FB72  0A                 	db	10
  2342  00FB73  2D                 	db	45
  2343  00FB74  2D                 	db	45
  2344  00FB75  2D                 	db	45
  2345  00FB76  2D                 	db	45
  2346  00FB77  2D                 	db	45
  2347  00FB78  2D                 	db	45
  2348  00FB79  2D                 	db	45
  2349  00FB7A  2D                 	db	45
  2350  00FB7B  2D                 	db	45
  2351  00FB7C  2D                 	db	45
  2352  00FB7D  2D                 	db	45
  2353  00FB7E  2D                 	db	45
  2354  00FB7F  2D                 	db	45
  2355  00FB80  2D                 	db	45
  2356  00FB81  2D                 	db	45
  2357  00FB82  2D                 	db	45
  2358  00FB83  2D                 	db	45
  2359  00FB84  2D                 	db	45
  2360  00FB85  2D                 	db	45
  2361  00FB86  2D                 	db	45
  2362  00FB87  2D                 	db	45
  2363  00FB88  2D                 	db	45
  2364  00FB89  2D                 	db	45
  2365  00FB8A  2D                 	db	45
  2366  00FB8B  2D                 	db	45
  2367  00FB8C  2D                 	db	45
  2368  00FB8D  2D                 	db	45
  2369  00FB8E  2D                 	db	45
  2370  00FB8F  2D                 	db	45
  2371  00FB90  2D                 	db	45
  2372  00FB91  2D                 	db	45
  2373  00FB92  2D                 	db	45
  2374  00FB93  2D                 	db	45
  2375  00FB94  2D                 	db	45
  2376  00FB95  2D                 	db	45
  2377  00FB96  2D                 	db	45
  2378  00FB97  2D                 	db	45
  2379  00FB98  2D                 	db	45
  2380  00FB99  2D                 	db	45
  2381  00FB9A  2D                 	db	45
  2382  00FB9B  2D                 	db	45
  2383  00FB9C  2D                 	db	45
  2384  00FB9D  2D                 	db	45
  2385  00FB9E  2D                 	db	45
  2386  00FB9F  2D                 	db	45
  2387  00FBA0  2D                 	db	45
  2388  00FBA1  2D                 	db	45
  2389  00FBA2  2D                 	db	45
  2390  00FBA3  2D                 	db	45
  2391  00FBA4  0D                 	db	13
  2392  00FBA5  0A                 	db	10
  2393  00FBA6  00                 	db	0
  2394  00FBA7                     STR_49:
  2395  00FBA7  53                 	db	83	;'S'
  2396  00FBA8  65                 	db	101	;'e'
  2397  00FBA9  6C                 	db	108	;'l'
  2398  00FBAA  65                 	db	101	;'e'
  2399  00FBAB  63                 	db	99	;'c'
  2400  00FBAC  74                 	db	116	;'t'
  2401  00FBAD  3A                 	db	58	;':'
  2402  00FBAE  20                 	db	32
  2403  00FBAF  20                 	db	32
  2404  00FBB0  20                 	db	32
  2405  00FBB1  20                 	db	32
  2406  00FBB2  20                 	db	32
  2407  00FBB3  53                 	db	83	;'S'
  2408  00FBB4  65                 	db	101	;'e'
  2409  00FBB5  73                 	db	115	;'s'
  2410  00FBB6  73                 	db	115	;'s'
  2411  00FBB7  69                 	db	105	;'i'
  2412  00FBB8  6F                 	db	111	;'o'
  2413  00FBB9  6E                 	db	110	;'n'
  2414  00FBBA  20                 	db	32
  2415  00FBBB  6C                 	db	108	;'l'
  2416  00FBBC  6F                 	db	111	;'o'
  2417  00FBBD  67                 	db	103	;'g'
  2418  00FBBE  67                 	db	103	;'g'
  2419  00FBBF  69                 	db	105	;'i'
  2420  00FBC0  6E                 	db	110	;'n'
  2421  00FBC1  67                 	db	103	;'g'
  2422  00FBC2  3A                 	db	58	;':'
  2423  00FBC3  20                 	db	32
  2424  00FBC4  41                 	db	65	;'A'
  2425  00FBC5  6C                 	db	108	;'l'
  2426  00FBC6  6C                 	db	108	;'l'
  2427  00FBC7  20                 	db	32
  2428  00FBC8  73                 	db	115	;'s'
  2429  00FBC9  65                 	db	101	;'e'
  2430  00FBCA  73                 	db	115	;'s'
  2431  00FBCB  73                 	db	115	;'s'
  2432  00FBCC  69                 	db	105	;'i'
  2433  00FBCD  6F                 	db	111	;'o'
  2434  00FBCE  6E                 	db	110	;'n'
  2435  00FBCF  20                 	db	32
  2436  00FBD0  6F                 	db	111	;'o'
  2437  00FBD1  75                 	db	117	;'u'
  2438  00FBD2  74                 	db	116	;'t'
  2439  00FBD3  70                 	db	112	;'p'
  2440  00FBD4  75                 	db	117	;'u'
  2441  00FBD5  74                 	db	116	;'t'
  2442  00FBD6  0D                 	db	13
  2443  00FBD7  0A                 	db	10
  2444  00FBD8  00                 	db	0
  2445  00FBD9                     STR_27:
  2446  00FBD9  2B                 	db	43
  2447  00FBDA  2F                 	db	47
  2448  00FBDB  2D                 	db	45
  2449  00FBDC  20                 	db	32
  2450  00FBDD  49                 	db	73	;'I'
  2451  00FBDE  6E                 	db	110	;'n'
  2452  00FBDF  63                 	db	99	;'c'
  2453  00FBE0  72                 	db	114	;'r'
  2454  00FBE1  65                 	db	101	;'e'
  2455  00FBE2  61                 	db	97	;'a'
  2456  00FBE3  73                 	db	115	;'s'
  2457  00FBE4  65                 	db	101	;'e'
  2458  00FBE5  2F                 	db	47
  2459  00FBE6  44                 	db	68	;'D'
  2460  00FBE7  65                 	db	101	;'e'
  2461  00FBE8  63                 	db	99	;'c'
  2462  00FBE9  72                 	db	114	;'r'
  2463  00FBEA  65                 	db	101	;'e'
  2464  00FBEB  61                 	db	97	;'a'
  2465  00FBEC  73                 	db	115	;'s'
  2466  00FBED  65                 	db	101	;'e'
  2467  00FBEE  20                 	db	32
  2468  00FBEF  74                 	db	116	;'t'
  2469  00FBF0  68                 	db	104	;'h'
  2470  00FBF1  65                 	db	101	;'e'
  2471  00FBF2  20                 	db	32
  2472  00FBF3  73                 	db	115	;'s'
  2473  00FBF4  61                 	db	97	;'a'
  2474  00FBF5  6D                 	db	109	;'m'
  2475  00FBF6  70                 	db	112	;'p'
  2476  00FBF7  6C                 	db	108	;'l'
  2477  00FBF8  65                 	db	101	;'e'
  2478  00FBF9  20                 	db	32
  2479  00FBFA  72                 	db	114	;'r'
  2480  00FBFB  61                 	db	97	;'a'
  2481  00FBFC  74                 	db	116	;'t'
  2482  00FBFD  65                 	db	101	;'e'
  2483  00FBFE  20                 	db	32
  2484  00FBFF  62                 	db	98	;'b'
  2485  00FC00  79                 	db	121	;'y'
  2486  00FC01  20                 	db	32
  2487  00FC02  31                 	db	49	;'1'
  2488  00FC03  30                 	db	48	;'0'
  2489  00FC04  20                 	db	32
  2490  00FC05  75                 	db	117	;'u'
  2491  00FC06  73                 	db	115	;'s'
  2492  00FC07  0D                 	db	13
  2493  00FC08  0A                 	db	10
  2494  00FC09  00                 	db	0
  2495  00FC0A                     STR_56:
  2496  00FC0A  54                 	db	84	;'T'
  2497  00FC0B  6F                 	db	111	;'o'
  2498  00FC0C  20                 	db	32
  2499  00FC0D  63                 	db	99	;'c'
  2500  00FC0E  6C                 	db	108	;'l'
  2501  00FC0F  6F                 	db	111	;'o'
  2502  00FC10  73                 	db	115	;'s'
  2503  00FC11  65                 	db	101	;'e'
  2504  00FC12  20                 	db	32
  2505  00FC13  74                 	db	116	;'t'
  2506  00FC14  68                 	db	104	;'h'
  2507  00FC15  65                 	db	101	;'e'
  2508  00FC16  20                 	db	32
  2509  00FC17  66                 	db	102	;'f'
  2510  00FC18  69                 	db	105	;'i'
  2511  00FC19  6C                 	db	108	;'l'
  2512  00FC1A  65                 	db	101	;'e'
  2513  00FC1B  20                 	db	32
  2514  00FC1C  66                 	db	102	;'f'
  2515  00FC1D  6F                 	db	111	;'o'
  2516  00FC1E  6C                 	db	108	;'l'
  2517  00FC1F  6C                 	db	108	;'l'
  2518  00FC20  6F                 	db	111	;'o'
  2519  00FC21  77                 	db	119	;'w'
  2520  00FC22  20                 	db	32
  2521  00FC23  74                 	db	116	;'t'
  2522  00FC24  68                 	db	104	;'h'
  2523  00FC25  65                 	db	101	;'e'
  2524  00FC26  73                 	db	115	;'s'
  2525  00FC27  65                 	db	101	;'e'
  2526  00FC28  20                 	db	32
  2527  00FC29  69                 	db	105	;'i'
  2528  00FC2A  6E                 	db	110	;'n'
  2529  00FC2B  73                 	db	115	;'s'
  2530  00FC2C  74                 	db	116	;'t'
  2531  00FC2D  72                 	db	114	;'r'
  2532  00FC2E  75                 	db	117	;'u'
  2533  00FC2F  63                 	db	99	;'c'
  2534  00FC30  74                 	db	116	;'t'
  2535  00FC31  69                 	db	105	;'i'
  2536  00FC32  6F                 	db	111	;'o'
  2537  00FC33  6E                 	db	110	;'n'
  2538  00FC34  73                 	db	115	;'s'
  2539  00FC35  3A                 	db	58	;':'
  2540  00FC36  20                 	db	32
  2541  00FC37  0D                 	db	13
  2542  00FC38  0A                 	db	10
  2543  00FC39  00                 	db	0
  2544  00FC3A                     STR_28:
  2545  00FC3A  57                 	db	87	;'W'
  2546  00FC3B  3A                 	db	58	;':'
  2547  00FC3C  20                 	db	32
  2548  00FC3D  57                 	db	87	;'W'
  2549  00FC3E  72                 	db	114	;'r'
  2550  00FC3F  69                 	db	105	;'i'
  2551  00FC40  74                 	db	116	;'t'
  2552  00FC41  65                 	db	101	;'e'
  2553  00FC42  20                 	db	32
  2554  00FC43  6D                 	db	109	;'m'
  2555  00FC44  69                 	db	105	;'i'
  2556  00FC45  63                 	db	99	;'c'
  2557  00FC46  72                 	db	114	;'r'
  2558  00FC47  6F                 	db	111	;'o'
  2559  00FC48  70                 	db	112	;'p'
  2560  00FC49  68                 	db	104	;'h'
  2561  00FC4A  6F                 	db	111	;'o'
  2562  00FC4B  6E                 	db	110	;'n'
  2563  00FC4C  65                 	db	101	;'e'
  2564  00FC4D  20                 	db	32
  2565  00FC4E  3D                 	db	61	;'='
  2566  00FC4F  3E                 	db	62	;'>'
  2567  00FC50  20                 	db	32
  2568  00FC51  53                 	db	83	;'S'
  2569  00FC52  44                 	db	68	;'D'
  2570  00FC53  20                 	db	32
  2571  00FC54  63                 	db	99	;'c'
  2572  00FC55  61                 	db	97	;'a'
  2573  00FC56  72                 	db	114	;'r'
  2574  00FC57  64                 	db	100	;'d'
  2575  00FC58  20                 	db	32
  2576  00FC59  61                 	db	97	;'a'
  2577  00FC5A  74                 	db	116	;'t'
  2578  00FC5B  20                 	db	32
  2579  00FC5C  31                 	db	49	;'1'
  2580  00FC5D  36                 	db	54	;'6'
  2581  00FC5E  30                 	db	48	;'0'
  2582  00FC5F  30                 	db	48	;'0'
  2583  00FC60  20                 	db	32
  2584  00FC61  75                 	db	117	;'u'
  2585  00FC62  73                 	db	115	;'s'
  2586  00FC63  0D                 	db	13
  2587  00FC64  0A                 	db	10
  2588  00FC65  00                 	db	0
  2589  00FC66                     STR_24:
  2590  00FC66  72                 	db	114	;'r'
  2591  00FC67  3A                 	db	58	;':'
  2592  00FC68  20                 	db	32
  2593  00FC69  72                 	db	114	;'r'
  2594  00FC6A  65                 	db	101	;'e'
  2595  00FC6B  61                 	db	97	;'a'
  2596  00FC6C  64                 	db	100	;'d'
  2597  00FC6D  20                 	db	32
  2598  00FC6E  61                 	db	97	;'a'
  2599  00FC6F  20                 	db	32
  2600  00FC70  62                 	db	98	;'b'
  2601  00FC71  6C                 	db	108	;'l'
  2602  00FC72  6F                 	db	111	;'o'
  2603  00FC73  63                 	db	99	;'c'
  2604  00FC74  6B                 	db	107	;'k'
  2605  00FC75  20                 	db	32
  2606  00FC76  6F                 	db	111	;'o'
  2607  00FC77  66                 	db	102	;'f'
  2608  00FC78  20                 	db	32
  2609  00FC79  25                 	db	37
  2610  00FC7A  64                 	db	100	;'d'
  2611  00FC7B  20                 	db	32
  2612  00FC7C  62                 	db	98	;'b'
  2613  00FC7D  79                 	db	121	;'y'
  2614  00FC7E  74                 	db	116	;'t'
  2615  00FC7F  65                 	db	101	;'e'
  2616  00FC80  73                 	db	115	;'s'
  2617  00FC81  20                 	db	32
  2618  00FC82  66                 	db	102	;'f'
  2619  00FC83  72                 	db	114	;'r'
  2620  00FC84  6F                 	db	111	;'o'
  2621  00FC85  6D                 	db	109	;'m'
  2622  00FC86  20                 	db	32
  2623  00FC87  53                 	db	83	;'S'
  2624  00FC88  44                 	db	68	;'D'
  2625  00FC89  20                 	db	32
  2626  00FC8A  63                 	db	99	;'c'
  2627  00FC8B  61                 	db	97	;'a'
  2628  00FC8C  72                 	db	114	;'r'
  2629  00FC8D  64                 	db	100	;'d'
  2630  00FC8E  0D                 	db	13
  2631  00FC8F  0A                 	db	10
  2632  00FC90  00                 	db	0
  2633  00FC91                     STR_4:
  2634  00FC91  4E                 	db	78	;'N'
  2635  00FC92  6F                 	db	111	;'o'
  2636  00FC93  20                 	db	32
  2637  00FC94  63                 	db	99	;'c'
  2638  00FC95  6F                 	db	111	;'o'
  2639  00FC96  6E                 	db	110	;'n'
  2640  00FC97  66                 	db	102	;'f'
  2641  00FC98  69                 	db	105	;'i'
  2642  00FC99  67                 	db	103	;'g'
  2643  00FC9A  75                 	db	117	;'u'
  2644  00FC9B  72                 	db	114	;'r'
  2645  00FC9C  61                 	db	97	;'a'
  2646  00FC9D  74                 	db	116	;'t'
  2647  00FC9E  69                 	db	105	;'i'
  2648  00FC9F  6F                 	db	111	;'o'
  2649  00FCA0  6E                 	db	110	;'n'
  2650  00FCA1  20                 	db	32
  2651  00FCA2  6F                 	db	111	;'o'
  2652  00FCA3  66                 	db	102	;'f'
  2653  00FCA4  20                 	db	32
  2654  00FCA5  64                 	db	100	;'d'
  2655  00FCA6  65                 	db	101	;'e'
  2656  00FCA7  76                 	db	118	;'v'
  2657  00FCA8  65                 	db	101	;'e'
  2658  00FCA9  6C                 	db	108	;'l'
  2659  00FCAA  6F                 	db	111	;'o'
  2660  00FCAB  70                 	db	112	;'p'
  2661  00FCAC  6D                 	db	109	;'m'
  2662  00FCAD  65                 	db	101	;'e'
  2663  00FCAE  6E                 	db	110	;'n'
  2664  00FCAF  74                 	db	116	;'t'
  2665  00FCB0  20                 	db	32
  2666  00FCB1  62                 	db	98	;'b'
  2667  00FCB2  6F                 	db	111	;'o'
  2668  00FCB3  61                 	db	97	;'a'
  2669  00FCB4  72                 	db	114	;'r'
  2670  00FCB5  64                 	db	100	;'d'
  2671  00FCB6  0D                 	db	13
  2672  00FCB7  0A                 	db	10
  2673  00FCB8  00                 	db	0
  2674  00FCB9                     STR_60:
  2675  00FCB9  53                 	db	83	;'S'
  2676  00FCBA  65                 	db	101	;'e'
  2677  00FCBB  6C                 	db	108	;'l'
  2678  00FCBC  65                 	db	101	;'e'
  2679  00FCBD  63                 	db	99	;'c'
  2680  00FCBE  74                 	db	116	;'t'
  2681  00FCBF  3A                 	db	58	;':'
  2682  00FCC0  20                 	db	32
  2683  00FCC1  20                 	db	32
  2684  00FCC2  20                 	db	32
  2685  00FCC3  20                 	db	32
  2686  00FCC4  20                 	db	32
  2687  00FCC5  53                 	db	83	;'S'
  2688  00FCC6  65                 	db	101	;'e'
  2689  00FCC7  73                 	db	115	;'s'
  2690  00FCC8  73                 	db	115	;'s'
  2691  00FCC9  69                 	db	105	;'i'
  2692  00FCCA  6F                 	db	111	;'o'
  2693  00FCCB  6E                 	db	110	;'n'
  2694  00FCCC  20                 	db	32
  2695  00FCCD  20                 	db	32
  2696  00FCCE  6C                 	db	108	;'l'
  2697  00FCCF  6F                 	db	111	;'o'
  2698  00FCD0  67                 	db	103	;'g'
  2699  00FCD1  67                 	db	103	;'g'
  2700  00FCD2  69                 	db	105	;'i'
  2701  00FCD3  6E                 	db	110	;'n'
  2702  00FCD4  67                 	db	103	;'g'
  2703  00FCD5  3A                 	db	58	;':'
  2704  00FCD6  20                 	db	32
  2705  00FCD7  4E                 	db	78	;'N'
  2706  00FCD8  6F                 	db	111	;'o'
  2707  00FCD9  6E                 	db	110	;'n'
  2708  00FCDA  65                 	db	101	;'e'
  2709  00FCDB  0D                 	db	13
  2710  00FCDC  0A                 	db	10
  2711  00FCDD  00                 	db	0
  2712  00FCDE                     STR_23:
  2713  00FCDE  61                 	db	97	;'a'
  2714  00FCDF  2F                 	db	47
  2715  00FCE0  41                 	db	65	;'A'
  2716  00FCE1  20                 	db	32
  2717  00FCE2  64                 	db	100	;'d'
  2718  00FCE3  65                 	db	101	;'e'
  2719  00FCE4  63                 	db	99	;'c'
  2720  00FCE5  72                 	db	114	;'r'
  2721  00FCE6  65                 	db	101	;'e'
  2722  00FCE7  61                 	db	97	;'a'
  2723  00FCE8  73                 	db	115	;'s'
  2724  00FCE9  65                 	db	101	;'e'
  2725  00FCEA  2F                 	db	47
  2726  00FCEB  69                 	db	105	;'i'
  2727  00FCEC  6E                 	db	110	;'n'
  2728  00FCED  63                 	db	99	;'c'
  2729  00FCEE  72                 	db	114	;'r'
  2730  00FCEF  65                 	db	101	;'e'
  2731  00FCF0  61                 	db	97	;'a'
  2732  00FCF1  73                 	db	115	;'s'
  2733  00FCF2  65                 	db	101	;'e'
  2734  00FCF3  20                 	db	32
  2735  00FCF4  72                 	db	114	;'r'
  2736  00FCF5  65                 	db	101	;'e'
  2737  00FCF6  61                 	db	97	;'a'
  2738  00FCF7  64                 	db	100	;'d'
  2739  00FCF8  20                 	db	32
  2740  00FCF9  61                 	db	97	;'a'
  2741  00FCFA  64                 	db	100	;'d'
  2742  00FCFB  64                 	db	100	;'d'
  2743  00FCFC  72                 	db	114	;'r'
  2744  00FCFD  65                 	db	101	;'e'
  2745  00FCFE  73                 	db	115	;'s'
  2746  00FCFF  73                 	db	115	;'s'
  2747  00FD00  0D                 	db	13
  2748  00FD01  0A                 	db	10
  2749  00FD02  00                 	db	0
  2750  00FD03                     STR_47:
  2751  00FD03  53                 	db	83	;'S'
  2752  00FD04  65                 	db	101	;'e'
  2753  00FD05  6C                 	db	108	;'l'
  2754  00FD06  65                 	db	101	;'e'
  2755  00FD07  63                 	db	99	;'c'
  2756  00FD08  74                 	db	116	;'t'
  2757  00FD09  3A                 	db	58	;':'
  2758  00FD0A  20                 	db	32
  2759  00FD0B  20                 	db	32
  2760  00FD0C  20                 	db	32
  2761  00FD0D  20                 	db	32
  2762  00FD0E  20                 	db	32
  2763  00FD0F  43                 	db	67	;'C'
  2764  00FD10  68                 	db	104	;'h'
  2765  00FD11  61                 	db	97	;'a'
  2766  00FD12  6E                 	db	110	;'n'
  2767  00FD13  67                 	db	103	;'g'
  2768  00FD14  65                 	db	101	;'e'
  2769  00FD15  20                 	db	32
  2770  00FD16  73                 	db	115	;'s'
  2771  00FD17  65                 	db	101	;'e'
  2772  00FD18  74                 	db	116	;'t'
  2773  00FD19  74                 	db	116	;'t'
  2774  00FD1A  69                 	db	105	;'i'
  2775  00FD1B  6E                 	db	110	;'n'
  2776  00FD1C  67                 	db	103	;'g'
  2777  00FD1D  73                 	db	115	;'s'
  2778  00FD1E  2E                 	db	46
  2779  00FD1F  2E                 	db	46
  2780  00FD20  2E                 	db	46
  2781  00FD21  0D                 	db	13
  2782  00FD22  0A                 	db	10
  2783  00FD23  00                 	db	0
  2784  00FD24                     STR_29:
  2785  00FD24  73                 	db	115	;'s'
  2786  00FD25  3A                 	db	58	;':'
  2787  00FD26  20                 	db	32
  2788  00FD27  73                 	db	115	;'s'
  2789  00FD28  70                 	db	112	;'p'
  2790  00FD29  6F                 	db	111	;'o'
  2791  00FD2A  6F                 	db	111	;'o'
  2792  00FD2B  6C                 	db	108	;'l'
  2793  00FD2C  20                 	db	32
  2794  00FD2D  6D                 	db	109	;'m'
  2795  00FD2E  65                 	db	101	;'e'
  2796  00FD2F  6D                 	db	109	;'m'
  2797  00FD30  6F                 	db	111	;'o'
  2798  00FD31  72                 	db	114	;'r'
  2799  00FD32  79                 	db	121	;'y'
  2800  00FD33  20                 	db	32
  2801  00FD34  74                 	db	116	;'t'
  2802  00FD35  6F                 	db	111	;'o'
  2803  00FD36  20                 	db	32
  2804  00FD37  61                 	db	97	;'a'
  2805  00FD38  20                 	db	32
  2806  00FD39  63                 	db	99	;'c'
  2807  00FD3A  73                 	db	115	;'s'
  2808  00FD3B  76                 	db	118	;'v'
  2809  00FD3C  20                 	db	32
  2810  00FD3D  66                 	db	102	;'f'
  2811  00FD3E  69                 	db	105	;'i'
  2812  00FD3F  6C                 	db	108	;'l'
  2813  00FD40  65                 	db	101	;'e'
  2814  00FD41  0D                 	db	13
  2815  00FD42  0A                 	db	10
  2816  00FD43  00                 	db	0
  2817  00FD44                     STR_39:
  2818  00FD44  53                 	db	83	;'S'
  2819  00FD45  74                 	db	116	;'t'
  2820  00FD46  61                 	db	97	;'a'
  2821  00FD47  74                 	db	116	;'t'
  2822  00FD48  75                 	db	117	;'u'
  2823  00FD49  73                 	db	115	;'s'
  2824  00FD4A  20                 	db	32
  2825  00FD4B  63                 	db	99	;'c'
  2826  00FD4C  6F                 	db	111	;'o'
  2827  00FD4D  64                 	db	100	;'d'
  2828  00FD4E  65                 	db	101	;'e'
  2829  00FD4F  3A                 	db	58	;':'
  2830  00FD50  20                 	db	32
  2831  00FD51  25                 	db	37
  2832  00FD52  64                 	db	100	;'d'
  2833  00FD53  20                 	db	32
  2834  00FD54  2D                 	db	45
  2835  00FD55  2D                 	db	45
  2836  00FD56  2D                 	db	45
  2837  00FD57  2D                 	db	45
  2838  00FD58  20                 	db	32
  2839  00FD59  41                 	db	65	;'A'
  2840  00FD5A  64                 	db	100	;'d'
  2841  00FD5B  64                 	db	100	;'d'
  2842  00FD5C  72                 	db	114	;'r'
  2843  00FD5D  65                 	db	101	;'e'
  2844  00FD5E  73                 	db	115	;'s'
  2845  00FD5F  73                 	db	115	;'s'
  2846  00FD60  3A                 	db	58	;':'
  2847  00FD61  20                 	db	32
  2848  00FD62  00                 	db	0
  2849  00FD63                     STR_35:
  2850  00FD63  41                 	db	65	;'A'
  2851  00FD64  6D                 	db	109	;'m'
  2852  00FD65  6F                 	db	111	;'o'
  2853  00FD66  75                 	db	117	;'u'
  2854  00FD67  6E                 	db	110	;'n'
  2855  00FD68  74                 	db	116	;'t'
  2856  00FD69  20                 	db	32
  2857  00FD6A  6F                 	db	111	;'o'
  2858  00FD6B  66                 	db	102	;'f'
  2859  00FD6C  20                 	db	32
  2860  00FD6D  62                 	db	98	;'b'
  2861  00FD6E  6C                 	db	108	;'l'
  2862  00FD6F  6F                 	db	111	;'o'
  2863  00FD70  63                 	db	99	;'c'
  2864  00FD71  6B                 	db	107	;'k'
  2865  00FD72  73                 	db	115	;'s'
  2866  00FD73  20                 	db	32
  2867  00FD74  73                 	db	115	;'s'
  2868  00FD75  74                 	db	116	;'t'
  2869  00FD76  6F                 	db	111	;'o'
  2870  00FD77  72                 	db	114	;'r'
  2871  00FD78  65                 	db	101	;'e'
  2872  00FD79  64                 	db	100	;'d'
  2873  00FD7A  3A                 	db	58	;':'
  2874  00FD7B  20                 	db	32
  2875  00FD7C  25                 	db	37
  2876  00FD7D  64                 	db	100	;'d'
  2877  00FD7E  0D                 	db	13
  2878  00FD7F  0A                 	db	10
  2879  00FD80  00                 	db	0
  2880  00FD81                     STR_62:
  2881  00FD81  55                 	db	85	;'U'
  2882  00FD82  6E                 	db	110	;'n'
  2883  00FD83  64                 	db	100	;'d'
  2884  00FD84  65                 	db	101	;'e'
  2885  00FD85  72                 	db	114	;'r'
  2886  00FD86  66                 	db	102	;'f'
  2887  00FD87  6C                 	db	108	;'l'
  2888  00FD88  6F                 	db	111	;'o'
  2889  00FD89  77                 	db	119	;'w'
  2890  00FD8A  65                 	db	101	;'e'
  2891  00FD8B  64                 	db	100	;'d'
  2892  00FD8C  20                 	db	32
  2893  00FD8D  74                 	db	116	;'t'
  2894  00FD8E  6F                 	db	111	;'o'
  2895  00FD8F  20                 	db	32
  2896  00FD90  68                 	db	104	;'h'
  2897  00FD91  69                 	db	105	;'i'
  2898  00FD92  67                 	db	103	;'g'
  2899  00FD93  68                 	db	104	;'h'
  2900  00FD94  20                 	db	32
  2901  00FD95  61                 	db	97	;'a'
  2902  00FD96  64                 	db	100	;'d'
  2903  00FD97  64                 	db	100	;'d'
  2904  00FD98  72                 	db	114	;'r'
  2905  00FD99  65                 	db	101	;'e'
  2906  00FD9A  73                 	db	115	;'s'
  2907  00FD9B  73                 	db	115	;'s'
  2908  00FD9C  0D                 	db	13
  2909  00FD9D  0A                 	db	10
  2910  00FD9E  00                 	db	0
  2911  00FD9F                     STR_8:
  2912  00FD9F  09                 	db	9
  2913  00FDA0  50                 	db	80	;'P'
  2914  00FDA1  6C                 	db	108	;'l'
  2915  00FDA2  61                 	db	97	;'a'
  2916  00FDA3  79                 	db	121	;'y'
  2917  00FDA4  20                 	db	32
  2918  00FDA5  6C                 	db	108	;'l'
  2919  00FDA6  65                 	db	101	;'e'
  2920  00FDA7  6E                 	db	110	;'n'
  2921  00FDA8  67                 	db	103	;'g'
  2922  00FDA9  74                 	db	116	;'t'
  2923  00FDAA  68                 	db	104	;'h'
  2924  00FDAB  20                 	db	32
  2925  00FDAC  69                 	db	105	;'i'
  2926  00FDAD  6E                 	db	110	;'n'
  2927  00FDAE  20                 	db	32
  2928  00FDAF  62                 	db	98	;'b'
  2929  00FDB0  6C                 	db	108	;'l'
  2930  00FDB1  6F                 	db	111	;'o'
  2931  00FDB2  63                 	db	99	;'c'
  2932  00FDB3  6B                 	db	107	;'k'
  2933  00FDB4  73                 	db	115	;'s'
  2934  00FDB5  3A                 	db	58	;':'
  2935  00FDB6  20                 	db	32
  2936  00FDB7  25                 	db	37
  2937  00FDB8  64                 	db	100	;'d'
  2938  00FDB9  0D                 	db	13
  2939  00FDBA  0A                 	db	10
  2940  00FDBB  00                 	db	0
  2941  00FDBC                     STR_115:
  2942  00FDBC  42                 	db	66	;'B'
  2943  00FDBD  6C                 	db	108	;'l'
  2944  00FDBE  6F                 	db	111	;'o'
  2945  00FDBF  63                 	db	99	;'c'
  2946  00FDC0  6B                 	db	107	;'k'
  2947  00FDC1  20                 	db	32
  2948  00FDC2  4C                 	db	76	;'L'
  2949  00FDC3  65                 	db	101	;'e'
  2950  00FDC4  6E                 	db	110	;'n'
  2951  00FDC5  67                 	db	103	;'g'
  2952  00FDC6  74                 	db	116	;'t'
  2953  00FDC7  68                 	db	104	;'h'
  2954  00FDC8  20                 	db	32
  2955  00FDC9  52                 	db	82	;'R'
  2956  00FDCA  65                 	db	101	;'e'
  2957  00FDCB  73                 	db	115	;'s'
  2958  00FDCC  70                 	db	112	;'p'
  2959  00FDCD  6F                 	db	111	;'o'
  2960  00FDCE  6E                 	db	110	;'n'
  2961  00FDCF  73                 	db	115	;'s'
  2962  00FDD0  65                 	db	101	;'e'
  2963  00FDD1  3A                 	db	58	;':'
  2964  00FDD2  20                 	db	32
  2965  00FDD3  25                 	db	37
  2966  00FDD4  78                 	db	120	;'x'
  2967  00FDD5  0D                 	db	13
  2968  00FDD6  0A                 	db	10
  2969  00FDD7  00                 	db	0
  2970  00FDD8                     STR_64:
  2971  00FDD8  4F                 	db	79	;'O'
  2972  00FDD9  76                 	db	118	;'v'
  2973  00FDDA  65                 	db	101	;'e'
  2974  00FDDB  72                 	db	114	;'r'
  2975  00FDDC  66                 	db	102	;'f'
  2976  00FDDD  6C                 	db	108	;'l'
  2977  00FDDE  6F                 	db	111	;'o'
  2978  00FDDF  77                 	db	119	;'w'
  2979  00FDE0  65                 	db	101	;'e'
  2980  00FDE1  64                 	db	100	;'d'
  2981  00FDE2  20                 	db	32
  2982  00FDE3  74                 	db	116	;'t'
  2983  00FDE4  6F                 	db	111	;'o'
  2984  00FDE5  20                 	db	32
  2985  00FDE6  6C                 	db	108	;'l'
  2986  00FDE7  6F                 	db	111	;'o'
  2987  00FDE8  77                 	db	119	;'w'
  2988  00FDE9  20                 	db	32
  2989  00FDEA  61                 	db	97	;'a'
  2990  00FDEB  64                 	db	100	;'d'
  2991  00FDEC  64                 	db	100	;'d'
  2992  00FDED  72                 	db	114	;'r'
  2993  00FDEE  65                 	db	101	;'e'
  2994  00FDEF  73                 	db	115	;'s'
  2995  00FDF0  73                 	db	115	;'s'
  2996  00FDF1  0D                 	db	13
  2997  00FDF2  0A                 	db	10
  2998  00FDF3  00                 	db	0
  2999  00FDF4                     STR_113:
  3000  00FDF4  43                 	db	67	;'C'
  3001  00FDF5  4D                 	db	77	;'M'
  3002  00FDF6  44                 	db	68	;'D'
  3003  00FDF7  30                 	db	48	;'0'
  3004  00FDF8  2C                 	db	44
  3005  00FDF9  20                 	db	32
  3006  00FDFA  52                 	db	82	;'R'
  3007  00FDFB  65                 	db	101	;'e'
  3008  00FDFC  73                 	db	115	;'s'
  3009  00FDFD  65                 	db	101	;'e'
  3010  00FDFE  74                 	db	116	;'t'
  3011  00FDFF  20                 	db	32
  3012  00FE00  52                 	db	82	;'R'
  3013  00FE01  65                 	db	101	;'e'
  3014  00FE02  73                 	db	115	;'s'
  3015  00FE03  70                 	db	112	;'p'
  3016  00FE04  6F                 	db	111	;'o'
  3017  00FE05  6E                 	db	110	;'n'
  3018  00FE06  73                 	db	115	;'s'
  3019  00FE07  65                 	db	101	;'e'
  3020  00FE08  3A                 	db	58	;':'
  3021  00FE09  20                 	db	32
  3022  00FE0A  25                 	db	37
  3023  00FE0B  78                 	db	120	;'x'
  3024  00FE0C  0D                 	db	13
  3025  00FE0D  0A                 	db	10
  3026  00FE0E  00                 	db	0
  3027  00FE0F                     STR_38:
  3028  00FE0F  4C                 	db	76	;'L'
  3029  00FE10  69                 	db	105	;'i'
  3030  00FE11  73                 	db	115	;'s'
  3031  00FE12  74                 	db	116	;'t'
  3032  00FE13  69                 	db	105	;'i'
  3033  00FE14  6E                 	db	110	;'n'
  3034  00FE15  67                 	db	103	;'g'
  3035  00FE16  20                 	db	32
  3036  00FE17  77                 	db	119	;'w'
  3037  00FE18  72                 	db	114	;'r'
  3038  00FE19  69                 	db	105	;'i'
  3039  00FE1A  74                 	db	116	;'t'
  3040  00FE1B  65                 	db	101	;'e'
  3041  00FE1C  20                 	db	32
  3042  00FE1D  66                 	db	102	;'f'
  3043  00FE1E  61                 	db	97	;'a'
  3044  00FE1F  69                 	db	105	;'i'
  3045  00FE20  6C                 	db	108	;'l'
  3046  00FE21  75                 	db	117	;'u'
  3047  00FE22  72                 	db	114	;'r'
  3048  00FE23  65                 	db	101	;'e'
  3049  00FE24  73                 	db	115	;'s'
  3050  00FE25  3A                 	db	58	;':'
  3051  00FE26  20                 	db	32
  3052  00FE27  0D                 	db	13
  3053  00FE28  0A                 	db	10
  3054  00FE29  00                 	db	0
  3055  00FE2A                     STR_114:
  3056  00FE2A  43                 	db	67	;'C'
  3057  00FE2B  4D                 	db	77	;'M'
  3058  00FE2C  44                 	db	68	;'D'
  3059  00FE2D  31                 	db	49	;'1'
  3060  00FE2E  2C                 	db	44
  3061  00FE2F  20                 	db	32
  3062  00FE30  49                 	db	73	;'I'
  3063  00FE31  6E                 	db	110	;'n'
  3064  00FE32  69                 	db	105	;'i'
  3065  00FE33  74                 	db	116	;'t'
  3066  00FE34  20                 	db	32
  3067  00FE35  52                 	db	82	;'R'
  3068  00FE36  65                 	db	101	;'e'
  3069  00FE37  73                 	db	115	;'s'
  3070  00FE38  70                 	db	112	;'p'
  3071  00FE39  6F                 	db	111	;'o'
  3072  00FE3A  6E                 	db	110	;'n'
  3073  00FE3B  73                 	db	115	;'s'
  3074  00FE3C  65                 	db	101	;'e'
  3075  00FE3D  3A                 	db	58	;':'
  3076  00FE3E  20                 	db	32
  3077  00FE3F  25                 	db	37
  3078  00FE40  78                 	db	120	;'x'
  3079  00FE41  0D                 	db	13
  3080  00FE42  0A                 	db	10
  3081  00FE43  00                 	db	0
  3082  00FE44                     STR_52:
  3083  00FE44  50                 	db	80	;'P'
  3084  00FE45  72                 	db	114	;'r'
  3085  00FE46  65                 	db	101	;'e'
  3086  00FE47  73                 	db	115	;'s'
  3087  00FE48  73                 	db	115	;'s'
  3088  00FE49  20                 	db	32
  3089  00FE4A  61                 	db	97	;'a'
  3090  00FE4B  6E                 	db	110	;'n'
  3091  00FE4C  79                 	db	121	;'y'
  3092  00FE4D  20                 	db	32
  3093  00FE4E  6B                 	db	107	;'k'
  3094  00FE4F  65                 	db	101	;'e'
  3095  00FE50  79                 	db	121	;'y'
  3096  00FE51  20                 	db	32
  3097  00FE52  74                 	db	116	;'t'
  3098  00FE53  6F                 	db	111	;'o'
  3099  00FE54  20                 	db	32
  3100  00FE55  73                 	db	115	;'s'
  3101  00FE56  74                 	db	116	;'t'
  3102  00FE57  61                 	db	97	;'a'
  3103  00FE58  72                 	db	114	;'r'
  3104  00FE59  74                 	db	116	;'t'
  3105  00FE5A  0D                 	db	13
  3106  00FE5B  0A                 	db	10
  3107  00FE5C  00                 	db	0
  3108  00FE5D                     STR_21:
  3109  00FE5D  69                 	db	105	;'i'
  3110  00FE5E  3A                 	db	58	;':'
  3111  00FE5F  20                 	db	32
  3112  00FE60  49                 	db	73	;'I'
  3113  00FE61  6E                 	db	110	;'n'
  3114  00FE62  69                 	db	105	;'i'
  3115  00FE63  74                 	db	116	;'t'
  3116  00FE64  69                 	db	105	;'i'
  3117  00FE65  61                 	db	97	;'a'
  3118  00FE66  6C                 	db	108	;'l'
  3119  00FE67  69                 	db	105	;'i'
  3120  00FE68  7A                 	db	122	;'z'
  3121  00FE69  65                 	db	101	;'e'
  3122  00FE6A  20                 	db	32
  3123  00FE6B  53                 	db	83	;'S'
  3124  00FE6C  44                 	db	68	;'D'
  3125  00FE6D  20                 	db	32
  3126  00FE6E  63                 	db	99	;'c'
  3127  00FE6F  61                 	db	97	;'a'
  3128  00FE70  72                 	db	114	;'r'
  3129  00FE71  64                 	db	100	;'d'
  3130  00FE72  0D                 	db	13
  3131  00FE73  0A                 	db	10
  3132  00FE74  00                 	db	0
  3133  00FE75                     STR_19:
  3134  00FE75  7A                 	db	122	;'z'
  3135  00FE76  3A                 	db	58	;':'
  3136  00FE77  20                 	db	32
  3137  00FE78  43                 	db	67	;'C'
  3138  00FE79  6C                 	db	108	;'l'
  3139  00FE7A  65                 	db	101	;'e'
  3140  00FE7B  61                 	db	97	;'a'
  3141  00FE7C  72                 	db	114	;'r'
  3142  00FE7D  20                 	db	32
  3143  00FE7E  74                 	db	116	;'t'
  3144  00FE7F  68                 	db	104	;'h'
  3145  00FE80  65                 	db	101	;'e'
  3146  00FE81  20                 	db	32
  3147  00FE82  74                 	db	116	;'t'
  3148  00FE83  65                 	db	101	;'e'
  3149  00FE84  72                 	db	114	;'r'
  3150  00FE85  6D                 	db	109	;'m'
  3151  00FE86  69                 	db	105	;'i'
  3152  00FE87  6E                 	db	110	;'n'
  3153  00FE88  61                 	db	97	;'a'
  3154  00FE89  6C                 	db	108	;'l'
  3155  00FE8A  0D                 	db	13
  3156  00FE8B  0A                 	db	10
  3157  00FE8C  00                 	db	0
  3158  00FE8D                     STR_54:
  3159  00FE8D  53                 	db	83	;'S'
  3160  00FE8E  70                 	db	112	;'p'
  3161  00FE8F  6F                 	db	111	;'o'
  3162  00FE90  6F                 	db	111	;'o'
  3163  00FE91  6C                 	db	108	;'l'
  3164  00FE92  65                 	db	101	;'e'
  3165  00FE93  64                 	db	100	;'d'
  3166  00FE94  20                 	db	32
  3167  00FE95  25                 	db	37
  3168  00FE96  75                 	db	117	;'u'
  3169  00FE97  20                 	db	32
  3170  00FE98  6F                 	db	111	;'o'
  3171  00FE99  75                 	db	117	;'u'
  3172  00FE9A  74                 	db	116	;'t'
  3173  00FE9B  20                 	db	32
  3174  00FE9C  6F                 	db	111	;'o'
  3175  00FE9D  66                 	db	102	;'f'
  3176  00FE9E  20                 	db	32
  3177  00FE9F  74                 	db	116	;'t'
  3178  00FEA0  68                 	db	104	;'h'
  3179  00FEA1  65                 	db	101	;'e'
  3180  00FEA2  20                 	db	32
  3181  00FEA3  00                 	db	0
  3182  00FEA4                     STR_48:
  3183  00FEA4  53                 	db	83	;'S'
  3184  00FEA5  65                 	db	101	;'e'
  3185  00FEA6  6C                 	db	108	;'l'
  3186  00FEA7  65                 	db	101	;'e'
  3187  00FEA8  63                 	db	99	;'c'
  3188  00FEA9  74                 	db	116	;'t'
  3189  00FEAA  3A                 	db	58	;':'
  3190  00FEAB  20                 	db	32
  3191  00FEAC  20                 	db	32
  3192  00FEAD  20                 	db	32
  3193  00FEAE  20                 	db	32
  3194  00FEAF  20                 	db	32
  3195  00FEB0  4C                 	db	76	;'L'
  3196  00FEB1  6F                 	db	111	;'o'
  3197  00FEB2  67                 	db	103	;'g'
  3198  00FEB3  67                 	db	103	;'g'
  3199  00FEB4  69                 	db	105	;'i'
  3200  00FEB5  6E                 	db	110	;'n'
  3201  00FEB6  67                 	db	103	;'g'
  3202  00FEB7  0D                 	db	13
  3203  00FEB8  0A                 	db	10
  3204  00FEB9  00                 	db	0
  3205  00FEBA                     STR_61:
  3206  00FEBA  53                 	db	83	;'S'
  3207  00FEBB  65                 	db	101	;'e'
  3208  00FEBC  6C                 	db	108	;'l'
  3209  00FEBD  65                 	db	101	;'e'
  3210  00FEBE  63                 	db	99	;'c'
  3211  00FEBF  74                 	db	116	;'t'
  3212  00FEC0  3A                 	db	58	;':'
  3213  00FEC1  20                 	db	32
  3214  00FEC2  20                 	db	32
  3215  00FEC3  20                 	db	32
  3216  00FEC4  20                 	db	32
  3217  00FEC5  20                 	db	32
  3218  00FEC6  41                 	db	65	;'A'
  3219  00FEC7  70                 	db	112	;'p'
  3220  00FEC8  70                 	db	112	;'p'
  3221  00FEC9  6C                 	db	108	;'l'
  3222  00FECA  79                 	db	121	;'y'
  3223  00FECB  20                 	db	32
  3224  00FECC  0D                 	db	13
  3225  00FECD  0A                 	db	10
  3226  00FECE  00                 	db	0
  3227  00FECF                     STR_2:
  3228  00FECF  53                 	db	83	;'S'
  3229  00FED0  44                 	db	68	;'D'
  3230  00FED1  20                 	db	32
  3231  00FED2  63                 	db	99	;'c'
  3232  00FED3  61                 	db	97	;'a'
  3233  00FED4  72                 	db	114	;'r'
  3234  00FED5  64                 	db	100	;'d'
  3235  00FED6  20                 	db	32
  3236  00FED7  2B                 	db	43
  3237  00FED8  20                 	db	32
  3238  00FED9  70                 	db	112	;'p'
  3239  00FEDA  6C                 	db	108	;'l'
  3240  00FEDB  61                 	db	97	;'a'
  3241  00FEDC  79                 	db	121	;'y'
  3242  00FEDD  62                 	db	98	;'b'
  3243  00FEDE  61                 	db	97	;'a'
  3244  00FEDF  63                 	db	99	;'c'
  3245  00FEE0  6B                 	db	107	;'k'
  3246  00FEE1  0D                 	db	13
  3247  00FEE2  0A                 	db	10
  3248  00FEE3  00                 	db	0
  3249  00FEE4                     STR_18:
  3250  00FEE4  5A                 	db	90	;'Z'
  3251  00FEE5  3A                 	db	58	;':'
  3252  00FEE6  20                 	db	32
  3253  00FEE7  52                 	db	82	;'R'
  3254  00FEE8  65                 	db	101	;'e'
  3255  00FEE9  73                 	db	115	;'s'
  3256  00FEEA  65                 	db	101	;'e'
  3257  00FEEB  74                 	db	116	;'t'
  3258  00FEEC  20                 	db	32
  3259  00FEED  70                 	db	112	;'p'
  3260  00FEEE  72                 	db	114	;'r'
  3261  00FEEF  6F                 	db	111	;'o'
  3262  00FEF0  63                 	db	99	;'c'
  3263  00FEF1  65                 	db	101	;'e'
  3264  00FEF2  73                 	db	115	;'s'
  3265  00FEF3  73                 	db	115	;'s'
  3266  00FEF4  6F                 	db	111	;'o'
  3267  00FEF5  72                 	db	114	;'r'
  3268  00FEF6  0D                 	db	13
  3269  00FEF7  0A                 	db	10
  3270  00FEF8  00                 	db	0
  3271  00FEF9                     STR_14:
  3272  00FEF9  09                 	db	9
  3273  00FEFA  73                 	db	115	;'s'
  3274  00FEFB  61                 	db	97	;'a'
  3275  00FEFC  6D                 	db	109	;'m'
  3276  00FEFD  70                 	db	112	;'p'
  3277  00FEFE  6C                 	db	108	;'l'
  3278  00FEFF  65                 	db	101	;'e'
  3279  00FF00  20                 	db	32
  3280  00FF01  72                 	db	114	;'r'
  3281  00FF02  61                 	db	97	;'a'
  3282  00FF03  74                 	db	116	;'t'
  3283  00FF04  65                 	db	101	;'e'
  3284  00FF05  3A                 	db	58	;':'
  3285  00FF06  20                 	db	32
  3286  00FF07  25                 	db	37
  3287  00FF08  64                 	db	100	;'d'
  3288  00FF09  75                 	db	117	;'u'
  3289  00FF0A  73                 	db	115	;'s'
  3290  00FF0B  0D                 	db	13
  3291  00FF0C  0A                 	db	10
  3292  00FF0D  00                 	db	0
  3293  00FF0E                     STR_63:
  3294  00FF0E  44                 	db	68	;'D'
  3295  00FF0F  65                 	db	101	;'e'
  3296  00FF10  63                 	db	99	;'c'
  3297  00FF11  72                 	db	114	;'r'
  3298  00FF12  65                 	db	101	;'e'
  3299  00FF13  61                 	db	97	;'a'
  3300  00FF14  73                 	db	115	;'s'
  3301  00FF15  65                 	db	101	;'e'
  3302  00FF16  64                 	db	100	;'d'
  3303  00FF17  20                 	db	32
  3304  00FF18  61                 	db	97	;'a'
  3305  00FF19  64                 	db	100	;'d'
  3306  00FF1A  64                 	db	100	;'d'
  3307  00FF1B  72                 	db	114	;'r'
  3308  00FF1C  65                 	db	101	;'e'
  3309  00FF1D  73                 	db	115	;'s'
  3310  00FF1E  73                 	db	115	;'s'
  3311  00FF1F  0D                 	db	13
  3312  00FF20  0A                 	db	10
  3313  00FF21  00                 	db	0
  3314  00FF22                     STR_65:
  3315  00FF22  49                 	db	73	;'I'
  3316  00FF23  6E                 	db	110	;'n'
  3317  00FF24  63                 	db	99	;'c'
  3318  00FF25  72                 	db	114	;'r'
  3319  00FF26  65                 	db	101	;'e'
  3320  00FF27  61                 	db	97	;'a'
  3321  00FF28  73                 	db	115	;'s'
  3322  00FF29  65                 	db	101	;'e'
  3323  00FF2A  64                 	db	100	;'d'
  3324  00FF2B  20                 	db	32
  3325  00FF2C  61                 	db	97	;'a'
  3326  00FF2D  64                 	db	100	;'d'
  3327  00FF2E  64                 	db	100	;'d'
  3328  00FF2F  72                 	db	114	;'r'
  3329  00FF30  65                 	db	101	;'e'
  3330  00FF31  73                 	db	115	;'s'
  3331  00FF32  73                 	db	115	;'s'
  3332  00FF33  0D                 	db	13
  3333  00FF34  0A                 	db	10
  3334  00FF35  00                 	db	0
  3335  00FF36                     STR_51:
  3336  00FF36  53                 	db	83	;'S'
  3337  00FF37  65                 	db	101	;'e'
  3338  00FF38  6C                 	db	108	;'l'
  3339  00FF39  65                 	db	101	;'e'
  3340  00FF3A  63                 	db	99	;'c'
  3341  00FF3B  74                 	db	116	;'t'
  3342  00FF3C  3A                 	db	58	;':'
  3343  00FF3D  20                 	db	32
  3344  00FF3E  20                 	db	32
  3345  00FF3F  20                 	db	32
  3346  00FF40  20                 	db	32
  3347  00FF41  20                 	db	32
  3348  00FF42  41                 	db	65	;'A'
  3349  00FF43  70                 	db	112	;'p'
  3350  00FF44  70                 	db	112	;'p'
  3351  00FF45  6C                 	db	108	;'l'
  3352  00FF46  79                 	db	121	;'y'
  3353  00FF47  0D                 	db	13
  3354  00FF48  0A                 	db	10
  3355  00FF49  00                 	db	0
  3356  00FF4A                     STR_66:
  3357  00FF4A  53                 	db	83	;'S'
  3358  00FF4B  44                 	db	68	;'D'
  3359  00FF4C  20                 	db	32
  3360  00FF4D  63                 	db	99	;'c'
  3361  00FF4E  61                 	db	97	;'a'
  3362  00FF4F  72                 	db	114	;'r'
  3363  00FF50  64                 	db	100	;'d'
  3364  00FF51  20                 	db	32
  3365  00FF52  61                 	db	97	;'a'
  3366  00FF53  64                 	db	100	;'d'
  3367  00FF54  64                 	db	100	;'d'
  3368  00FF55  72                 	db	114	;'r'
  3369  00FF56  65                 	db	101	;'e'
  3370  00FF57  73                 	db	115	;'s'
  3371  00FF58  73                 	db	115	;'s'
  3372  00FF59  3A                 	db	58	;':'
  3373  00FF5A  20                 	db	32
  3374  00FF5B  20                 	db	32
  3375  00FF5C  00                 	db	0
  3376  00FF5D                     STR_72:
  3377  00FF5D  55                 	db	85	;'U'
  3378  00FF5E  6E                 	db	110	;'n'
  3379  00FF5F  6B                 	db	107	;'k'
  3380  00FF60  6E                 	db	110	;'n'
  3381  00FF61  6F                 	db	111	;'o'
  3382  00FF62  77                 	db	119	;'w'
  3383  00FF63  6E                 	db	110	;'n'
  3384  00FF64  20                 	db	32
  3385  00FF65  6B                 	db	107	;'k'
  3386  00FF66  65                 	db	101	;'e'
  3387  00FF67  79                 	db	121	;'y'
  3388  00FF68  20                 	db	32
  3389  00FF69  25                 	db	37
  3390  00FF6A  63                 	db	99	;'c'
  3391  00FF6B  0D                 	db	13
  3392  00FF6C  0A                 	db	10
  3393  00FF6D  00                 	db	0
  3394  00FF6E                     STR_73:
  3395  00FF6E  20                 	db	32
  3396  00FF6F  20                 	db	32
  3397  00FF70  20                 	db	32
  3398  00FF71  20                 	db	32
  3399  00FF72  41                 	db	65	;'A'
  3400  00FF73  64                 	db	100	;'d'
  3401  00FF74  64                 	db	100	;'d'
  3402  00FF75  72                 	db	114	;'r'
  3403  00FF76  65                 	db	101	;'e'
  3404  00FF77  73                 	db	115	;'s'
  3405  00FF78  73                 	db	115	;'s'
  3406  00FF79  3A                 	db	58	;':'
  3407  00FF7A  20                 	db	32
  3408  00FF7B  20                 	db	32
  3409  00FF7C  20                 	db	32
  3410  00FF7D  20                 	db	32
  3411  00FF7E  00                 	db	0
  3412  00FF7F                     STR_9:
  3413  00FF7F  09                 	db	9
  3414  00FF80  73                 	db	115	;'s'
  3415  00FF81  64                 	db	100	;'d'
  3416  00FF82  43                 	db	67	;'C'
  3417  00FF83  61                 	db	97	;'a'
  3418  00FF84  72                 	db	114	;'r'
  3419  00FF85  64                 	db	100	;'d'
  3420  00FF86  41                 	db	65	;'A'
  3421  00FF87  64                 	db	100	;'d'
  3422  00FF88  64                 	db	100	;'d'
  3423  00FF89  72                 	db	114	;'r'
  3424  00FF8A  65                 	db	101	;'e'
  3425  00FF8B  73                 	db	115	;'s'
  3426  00FF8C  73                 	db	115	;'s'
  3427  00FF8D  3A                 	db	58	;':'
  3428  00FF8E  20                 	db	32
  3429  00FF8F  00                 	db	0
  3430  00FF90                     STR_71:
  3431  00FF90  52                 	db	82	;'R'
  3432  00FF91  65                 	db	101	;'e'
  3433  00FF92  61                 	db	97	;'a'
  3434  00FF93  64                 	db	100	;'d'
  3435  00FF94  20                 	db	32
  3436  00FF95  62                 	db	98	;'b'
  3437  00FF96  6C                 	db	108	;'l'
  3438  00FF97  6F                 	db	111	;'o'
  3439  00FF98  63                 	db	99	;'c'
  3440  00FF99  6B                 	db	107	;'k'
  3441  00FF9A  3A                 	db	58	;':'
  3442  00FF9B  20                 	db	32
  3443  00FF9C  0D                 	db	13
  3444  00FF9D  0A                 	db	10
  3445  00FF9E  00                 	db	0
  3446  00FF9F                     STR_16:
  3447  00FF9F  3F                 	db	63	;'?'
  3448  00FFA0  3A                 	db	58	;':'
  3449  00FFA1  20                 	db	32
  3450  00FFA2  68                 	db	104	;'h'
  3451  00FFA3  65                 	db	101	;'e'
  3452  00FFA4  6C                 	db	108	;'l'
  3453  00FFA5  70                 	db	112	;'p'
  3454  00FFA6  20                 	db	32
  3455  00FFA7  6D                 	db	109	;'m'
  3456  00FFA8  65                 	db	101	;'e'
  3457  00FFA9  6E                 	db	110	;'n'
  3458  00FFAA  75                 	db	117	;'u'
  3459  00FFAB  0D                 	db	13
  3460  00FFAC  0A                 	db	10
  3461  00FFAD  00                 	db	0
  3462  00FFAE                     STR_55:
  3463  00FFAE  25                 	db	37
  3464  00FFAF  75                 	db	117	;'u'
  3465  00FFB0  20                 	db	32
  3466  00FFB1  62                 	db	98	;'b'
  3467  00FFB2  6C                 	db	108	;'l'
  3468  00FFB3  6F                 	db	111	;'o'
  3469  00FFB4  63                 	db	99	;'c'
  3470  00FFB5  6B                 	db	107	;'k'
  3471  00FFB6  73                 	db	115	;'s'
  3472  00FFB7  2E                 	db	46
  3473  00FFB8  0D                 	db	13
  3474  00FFB9  0A                 	db	10
  3475  00FFBA  00                 	db	0
  3476  00FFBB                     STR_1:
  3477  00FFBB  4C                 	db	76	;'L'
  3478  00FFBC  61                 	db	97	;'a'
  3479  00FFBD  62                 	db	98	;'b'
  3480  00FFBE  20                 	db	32
  3481  00FFBF  31                 	db	49	;'1'
  3482  00FFC0  30                 	db	48	;'0'
  3483  00FFC1  0D                 	db	13
  3484  00FFC2  0A                 	db	10
  3485  00FFC3  00                 	db	0
  3486  00FFC4                     STR_3:
  3487  00FFC4  44                 	db	68	;'D'
  3488  00FFC5  65                 	db	101	;'e'
  3489  00FFC6  76                 	db	118	;'v'
  3490  00FFC7  27                 	db	39
  3491  00FFC8  32                 	db	50	;'2'
  3492  00FFC9  31                 	db	49	;'1'
  3493  00FFCA  0D                 	db	13
  3494  00FFCB  0A                 	db	10
  3495  00FFCC  00                 	db	0
  3496  00FFCD                     STR_31:
  3497  00FFCD  6F                 	db	111	;'o'
  3498  00FFCE  3A                 	db	58	;':'
  3499  00FFCF  09                 	db	9
  3500  00FFD0  6F                 	db	111	;'o'
  3501  00FFD1  6B                 	db	107	;'k'
  3502  00FFD2  0D                 	db	13
  3503  00FFD3  0A                 	db	10
  3504  00FFD4  00                 	db	0
  3505  00FFD5                     STR_17:
  3506  00FFD5  6F                 	db	111	;'o'
  3507  00FFD6  3A                 	db	58	;':'
  3508  00FFD7  20                 	db	32
  3509  00FFD8  6B                 	db	107	;'k'
  3510  00FFD9  0D                 	db	13
  3511  00FFDA  0A                 	db	10
  3512  00FFDB  00                 	db	0
  3513  00FFDC                     STR_42:
  3514  00FFDC  25                 	db	37
  3515  00FFDD  30                 	db	48	;'0'
  3516  00FFDE  34                 	db	52	;'4'
  3517  00FFDF  78                 	db	120	;'x'
  3518  00FFE0  0D                 	db	13
  3519  00FFE1  0A                 	db	10
  3520  00FFE2  00                 	db	0
  3521  00FFE3                     STR_122:
  3522  00FFE3  25                 	db	37
  3523  00FFE4  30                 	db	48	;'0'
  3524  00FFE5  32                 	db	50	;'2'
  3525  00FFE6  78                 	db	120	;'x'
  3526  00FFE7  20                 	db	32
  3527  00FFE8  00                 	db	0
  3528  00FFE9                     STR_10:
  3529  00FFE9  25                 	db	37
  3530  00FFEA  30                 	db	48	;'0'
  3531  00FFEB  34                 	db	52	;'4'
  3532  00FFEC  78                 	db	120	;'x'
  3533  00FFED  00                 	db	0
  3534  00FFEE                     STR_116:
  3535  00FFEE  0D                 	db	13
  3536  00FFEF  0A                 	db	10
  3537  00FFF0  0A                 	db	10
  3538  00FFF1  00                 	db	0
  3539  00FFF2                     STR_34:
  3540  00FFF2  25                 	db	37
  3541  00FFF3  64                 	db	100	;'d'
  3542  00FFF4  0D                 	db	13
  3543  00FFF5  00                 	db	0
  3544  00FFF6                     STR_120:
  3545  00FFF6  25                 	db	37
  3546  00FFF7  63                 	db	99	;'c'
  3547  00FFF8  00                 	db	0
  3548  00FFF9                     STR_5:
  3549  00FFF9  3E                 	db	62	;'>'
  3550  00FFFA  20                 	db	32
  3551  00FFFB  00                 	db	0
  3552  00FFFC                     STR_11:
  3553  00FFFC  3A                 	db	58	;':'
  3554  00FFFD  00                 	db	0
  3555  00FFFE  00                 	db	0	; dummy byte at the end
  3556  0000                     
  3557                           ; #config settings
  3558                           
  3559                           	psect	cinit
  3560  003274                     __pcinit:
  3561                           	callstack 0
  3562  003274                     start_initialization:
  3563                           	callstack 0
  3564  003274                     __initialization:
  3565                           	callstack 0
  3566                           
  3567                           ; Initialize objects allocated to BANK0 (4 bytes)
  3568                           ; load TBLPTR registers with __pidataBANK0
  3569  003274  0E84               	movlw	low __pidataBANK0
  3570  003276  6EF6               	movwf	tblptrl,c
  3571  003278  0E39               	movlw	high __pidataBANK0
  3572  00327A  6EF7               	movwf	tblptrh,c
  3573  00327C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3574  00327E  6EF8               	movwf	tblptru,c
  3575  003280  EE00  F0C0         	lfsr	0,__pdataBANK0
  3576  003284  EE10 F004          	lfsr	1,4
  3577  003288                     copy_data0:
  3578  003288  0009               	tblrd		*+
  3579  00328A  CFF5 FFEE          	movff	tablat,postinc0
  3580  00328E  50E5               	movf	postdec1,w,c
  3581  003290  50E1               	movf	fsr1l,w,c
  3582  003292  E1FA               	bnz	copy_data0
  3583                           
  3584                           ; Initialize objects allocated to COMRAM (1 bytes)
  3585                           ; load TBLPTR registers with __pidataCOMRAM
  3586  003294  0E92               	movlw	low __pidataCOMRAM
  3587  003296  6EF6               	movwf	tblptrl,c
  3588  003298  0E39               	movlw	high __pidataCOMRAM
  3589  00329A  6EF7               	movwf	tblptrh,c
  3590  00329C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3591  00329E  6EF8               	movwf	tblptru,c
  3592  0032A0  0009               	tblrd		*+	;fetch initializer
  3593  0032A2  CFF5 F04C          	movff	tablat,__pdataCOMRAM
  3594                           
  3595                           ; Clear objects allocated to BIGRAM (2048 bytes)
  3596  0032A6  EE01  F0FC         	lfsr	0,__pbssBIGRAM
  3597  0032AA  EE18 F000          	lfsr	1,2048
  3598  0032AE                     clear_0:
  3599  0032AE  6AEE               	clrf	postinc0,c
  3600  0032B0  50E5               	movf	postdec1,w,c
  3601  0032B2  50E1               	movf	fsr1l,w,c
  3602  0032B4  E1FC               	bnz	clear_0
  3603  0032B6  50E2               	movf	fsr1h,w,c
  3604  0032B8  E1FA               	bnz	clear_0
  3605                           
  3606                           ; Clear objects allocated to BANK1 (174 bytes)
  3607  0032BA  EE01  F000         	lfsr	0,__pbssBANK1
  3608  0032BE  0EAE               	movlw	174
  3609  0032C0                     clear_1:
  3610  0032C0  6AEE               	clrf	postinc0,c
  3611  0032C2  06E8               	decf	wreg,f,c
  3612  0032C4  E1FD               	bnz	clear_1
  3613                           
  3614                           ; Clear objects allocated to BANK0 (5 bytes)
  3615  0032C6  0100               	movlb	0
  3616  0032C8  6BBF               	clrf	(__pbssBANK0+4)& (0+255),b
  3617  0032CA  6BBE               	clrf	(__pbssBANK0+3)& (0+255),b
  3618  0032CC  6BBD               	clrf	(__pbssBANK0+2)& (0+255),b
  3619  0032CE  6BBC               	clrf	(__pbssBANK0+1)& (0+255),b
  3620  0032D0  6BBB               	clrf	__pbssBANK0& (0+255),b
  3621                           
  3622                           ; Clear objects allocated to COMRAM (17 bytes)
  3623  0032D2  EE00  F03B         	lfsr	0,__pbssCOMRAM
  3624  0032D6  0E11               	movlw	17
  3625  0032D8                     clear_2:
  3626  0032D8  6AEE               	clrf	postinc0,c
  3627  0032DA  06E8               	decf	wreg,f,c
  3628  0032DC  E1FD               	bnz	clear_2
  3629  0032DE                     end_of_initialization:
  3630                           	callstack 0
  3631  0032DE                     __end_of__initialization:
  3632                           	callstack 0
  3633  0032DE  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3634  0032E0  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3635  0032E2  0100               	movlb	0
  3636  0032E4  EF29  F000         	goto	_main	;jump to C main() function
  3637                           
  3638                           	psect	bssCOMRAM
  3639  00003B                     __pbssCOMRAM:
  3640                           	callstack 0
  3641  00003B                     _width:
  3642                           	callstack 0
  3643  00003B                     	ds	2
  3644  00003D                     _prec:
  3645                           	callstack 0
  3646  00003D                     	ds	2
  3647  00003F                     _flags:
  3648                           	callstack 0
  3649  00003F                     	ds	2
  3650  000041                     myTMR0ISR@bufferIndex:
  3651                           	callstack 0
  3652  000041                     	ds	2
  3653  000043                     _timer0ReloadVal:
  3654                           	callstack 0
  3655  000043                     	ds	2
  3656  000045                     _TMR0_InterruptHandler:
  3657                           	callstack 0
  3658  000045                     	ds	2
  3659  000047                     myTMR0ISR@state:
  3660                           	callstack 0
  3661  000047                     	ds	1
  3662  000048                     _stopPlayback:
  3663                           	callstack 0
  3664  000048                     	ds	1
  3665  000049                     _stopCollect:
  3666                           	callstack 0
  3667  000049                     	ds	1
  3668  00004A                     _startCollect:
  3669                           	callstack 0
  3670  00004A                     	ds	1
  3671  00004B                     _eusart1RxLastError:
  3672                           	callstack 0
  3673  00004B                     	ds	1
  3674                           
  3675                           	psect	dataCOMRAM
  3676  00004C                     __pdataCOMRAM:
  3677                           	callstack 0
  3678  00004C                     myTMR0ISR@useBuffer1:
  3679                           	callstack 0
  3680  00004C                     	ds	1
  3681                           
  3682                           	psect	bssBANK0
  3683  0000BB                     __pbssBANK0:
  3684                           	callstack 0
  3685  0000BB                     main@sinIndex:
  3686                           	callstack 0
  3687  0000BB                     	ds	1
  3688  0000BC                     _doPlayback:
  3689                           	callstack 0
  3690  0000BC                     	ds	1
  3691  0000BD                     _collecting:
  3692                           	callstack 0
  3693  0000BD                     	ds	1
  3694  0000BE                     _buffer2Full:
  3695                           	callstack 0
  3696  0000BE                     	ds	1
  3697  0000BF                     _buffer1Full:
  3698                           	callstack 0
  3699  0000BF                     	ds	1
  3700                           
  3701                           	psect	dataBANK0
  3702  0000C0                     __pdataBANK0:
  3703                           	callstack 0
  3704  0000C0                     myTMR0ISR@buffer:
  3705                           	callstack 0
  3706  0000C0                     	ds	2
  3707  0000C2                     _sampleRate:
  3708                           	callstack 0
  3709  0000C2                     	ds	2
  3710                           
  3711                           	psect	bssBANK1
  3712  000100                     __pbssBANK1:
  3713                           	callstack 0
  3714  000100                     _writeFailureStatus:
  3715                           	callstack 0
  3716  000100                     	ds	128
  3717  000180                     main@writeAddress:
  3718                           	callstack 0
  3719  000180                     	ds	4
  3720  000184                     _nout:
  3721                           	callstack 0
  3722  000184                     	ds	2
  3723  000186                     _ADC_InterruptHandler:
  3724                           	callstack 0
  3725  000186                     	ds	2
  3726  000188                     _EUSART1_ErrorHandler:
  3727                           	callstack 0
  3728  000188                     	ds	2
  3729  00018A                     _EUSART1_OverrunErrorHandler:
  3730                           	callstack 0
  3731  00018A                     	ds	2
  3732  00018C                     _EUSART1_FramingErrorHandler:
  3733                           	callstack 0
  3734  00018C                     	ds	2
  3735  00018E                     _dbuf:
  3736                           	callstack 0
  3737  00018E                     	ds	32
  3738                           
  3739                           	psect	bssBIGRAM
  3740  0001FC                     __pbssBIGRAM:
  3741                           	callstack 0
  3742  0001FC                     _writeFailureTable:
  3743                           	callstack 0
  3744  0001FC                     	ds	512
  3745  0003FC                     _sdCardBuffer2:
  3746                           	callstack 0
  3747  0003FC                     	ds	512
  3748  0005FC                     _sdCardBuffer1:
  3749                           	callstack 0
  3750  0005FC                     	ds	512
  3751  0007FC                     _sdCardBuffer:
  3752                           	callstack 0
  3753  0007FC                     	ds	512
  3754                           
  3755                           	psect	cstackBANK1
  3756  0001AE                     __pcstackBANK1:
  3757                           	callstack 0
  3758  0001AE                     main@sin:
  3759                           	callstack 0
  3760                           
  3761                           ; 26 bytes @ 0x0
  3762  0001AE                     	ds	26
  3763  0001C8                     main@endAddress:
  3764                           	callstack 0
  3765                           
  3766                           ; 4 bytes @ 0x1A
  3767  0001C8                     	ds	4
  3768  0001CC                     main@printVal:
  3769                           	callstack 0
  3770                           
  3771                           ; 2 bytes @ 0x1E
  3772  0001CC                     	ds	2
  3773  0001CE                     main@printedBlocks:
  3774                           	callstack 0
  3775                           
  3776                           ; 4 bytes @ 0x20
  3777  0001CE                     	ds	4
  3778  0001D2                     main@timeout:
  3779                           	callstack 0
  3780                           
  3781                           ; 1 bytes @ 0x24
  3782  0001D2                     	ds	1
  3783  0001D3                     main@addr:
  3784                           	callstack 0
  3785                           
  3786                           ; 4 bytes @ 0x25
  3787  0001D3                     	ds	4
  3788  0001D7                     main@j:
  3789                           	callstack 0
  3790                           
  3791                           ; 1 bytes @ 0x29
  3792  0001D7                     	ds	1
  3793  0001D8                     main@timeout_1293:
  3794                           	callstack 0
  3795                           
  3796                           ; 1 bytes @ 0x2A
  3797  0001D8                     	ds	1
  3798  0001D9                     main@timeout_1294:
  3799                           	callstack 0
  3800                           
  3801                           ; 1 bytes @ 0x2B
  3802  0001D9                     	ds	1
  3803  0001DA                     main@address:
  3804                           	callstack 0
  3805                           
  3806                           ; 4 bytes @ 0x2C
  3807  0001DA                     	ds	4
  3808  0001DE                     main@i_1286:
  3809                           	callstack 0
  3810                           
  3811                           ; 2 bytes @ 0x30
  3812  0001DE                     	ds	2
  3813  0001E0                     main@i_1316:
  3814                           	callstack 0
  3815                           
  3816                           ; 2 bytes @ 0x32
  3817  0001E0                     	ds	2
  3818  0001E2                     main@i_1297:
  3819                           	callstack 0
  3820                           
  3821                           ; 1 bytes @ 0x34
  3822  0001E2                     	ds	1
  3823  0001E3                     main@cmd:
  3824                           	callstack 0
  3825                           
  3826                           ; 1 bytes @ 0x35
  3827  0001E3                     	ds	1
  3828  0001E4                     main@i:
  3829                           	callstack 0
  3830                           
  3831                           ; 2 bytes @ 0x36
  3832  0001E4                     	ds	2
  3833  0001E6                     main@readAddress:
  3834                           	callstack 0
  3835                           
  3836                           ; 4 bytes @ 0x38
  3837  0001E6                     	ds	4
  3838  0001EA                     main@writeStartAddress:
  3839                           	callstack 0
  3840                           
  3841                           ; 4 bytes @ 0x3C
  3842  0001EA                     	ds	4
  3843  0001EE                     main@writeEndAddress:
  3844                           	callstack 0
  3845                           
  3846                           ; 4 bytes @ 0x40
  3847  0001EE                     	ds	4
  3848  0001F2                     main@sdCardAddress:
  3849                           	callstack 0
  3850                           
  3851                           ; 4 bytes @ 0x44
  3852  0001F2                     	ds	4
  3853  0001F6                     main@status:
  3854                           	callstack 0
  3855                           
  3856                           ; 1 bytes @ 0x48
  3857  0001F6                     	ds	1
  3858  0001F7                     main@failureIndex:
  3859                           	callstack 0
  3860                           
  3861                           ; 1 bytes @ 0x49
  3862  0001F7                     	ds	1
  3863  0001F8                     main@writeAddress_1291:
  3864                           	callstack 0
  3865                           
  3866                           ; 4 bytes @ 0x4A
  3867  0001F8                     	ds	4
  3868                           
  3869                           	psect	cstackBANK0
  3870  000060                     __pcstackBANK0:
  3871                           	callstack 0
  3872  000060                     ??_dtoa:
  3873  000060                     ??_utoa:
  3874  000060                     ??_xtoa:
  3875                           
  3876                           ; 1 bytes @ 0x0
  3877  000060                     	ds	8
  3878  000068                     _dtoa$1990:
  3879                           	callstack 0
  3880  000068                     utoa@p:
  3881                           	callstack 0
  3882  000068                     _xtoa$2008:
  3883                           	callstack 0
  3884                           
  3885                           ; 2 bytes @ 0x8
  3886  000068                     	ds	2
  3887  00006A                     dtoa@p:
  3888                           	callstack 0
  3889  00006A                     utoa@w:
  3890                           	callstack 0
  3891  00006A                     _xtoa$2009:
  3892                           	callstack 0
  3893                           
  3894                           ; 2 bytes @ 0xA
  3895  00006A                     	ds	2
  3896  00006C                     dtoa@w:
  3897                           	callstack 0
  3898  00006C                     xtoa@p:
  3899                           	callstack 0
  3900  00006C                     utoa@n:
  3901                           	callstack 0
  3902                           
  3903                           ; 8 bytes @ 0xC
  3904  00006C                     	ds	2
  3905  00006E                     dtoa@s:
  3906                           	callstack 0
  3907  00006E                     xtoa@w:
  3908                           	callstack 0
  3909                           
  3910                           ; 2 bytes @ 0xE
  3911  00006E                     	ds	2
  3912  000070                     dtoa@n:
  3913                           	callstack 0
  3914  000070                     xtoa@n:
  3915                           	callstack 0
  3916                           
  3917                           ; 8 bytes @ 0x10
  3918  000070                     	ds	4
  3919  000074                     utoa@i:
  3920                           	callstack 0
  3921                           
  3922                           ; 2 bytes @ 0x14
  3923  000074                     	ds	4
  3924  000078                     dtoa@i:
  3925                           	callstack 0
  3926  000078                     xtoa@i:
  3927                           	callstack 0
  3928                           
  3929                           ; 2 bytes @ 0x18
  3930  000078                     	ds	2
  3931  00007A                     xtoa@c:
  3932                           	callstack 0
  3933                           
  3934                           ; 2 bytes @ 0x1A
  3935  00007A                     	ds	2
  3936  00007C                     ?_vfpfcnvrt:
  3937                           	callstack 0
  3938  00007C                     vfpfcnvrt@fp:
  3939                           	callstack 0
  3940                           
  3941                           ; 2 bytes @ 0x1C
  3942  00007C                     	ds	2
  3943  00007E                     vfpfcnvrt@fmt:
  3944                           	callstack 0
  3945                           
  3946                           ; 2 bytes @ 0x1E
  3947  00007E                     	ds	2
  3948  000080                     vfpfcnvrt@ap:
  3949                           	callstack 0
  3950                           
  3951                           ; 2 bytes @ 0x20
  3952  000080                     	ds	2
  3953  000082                     ??_vfpfcnvrt:
  3954                           
  3955                           ; 1 bytes @ 0x22
  3956  000082                     	ds	4
  3957  000086                     vfpfcnvrt@ll:
  3958                           	callstack 0
  3959                           
  3960                           ; 8 bytes @ 0x26
  3961  000086                     	ds	8
  3962  00008E                     vfpfcnvrt@done:
  3963                           	callstack 0
  3964                           
  3965                           ; 2 bytes @ 0x2E
  3966  00008E                     	ds	2
  3967  000090                     _vfpfcnvrt$2023:
  3968                           	callstack 0
  3969                           
  3970                           ; 2 bytes @ 0x30
  3971  000090                     	ds	2
  3972  000092                     vfpfcnvrt@llu:
  3973                           	callstack 0
  3974                           
  3975                           ; 8 bytes @ 0x32
  3976  000092                     	ds	8
  3977  00009A                     vfpfcnvrt@c:
  3978                           	callstack 0
  3979                           
  3980                           ; 1 bytes @ 0x3A
  3981  00009A                     	ds	1
  3982  00009B                     ?_vfprintf:
  3983                           	callstack 0
  3984  00009B                     vfprintf@fp:
  3985                           	callstack 0
  3986                           
  3987                           ; 2 bytes @ 0x3B
  3988  00009B                     	ds	2
  3989  00009D                     vfprintf@fmt:
  3990                           	callstack 0
  3991                           
  3992                           ; 2 bytes @ 0x3D
  3993  00009D                     	ds	2
  3994  00009F                     vfprintf@ap:
  3995                           	callstack 0
  3996                           
  3997                           ; 2 bytes @ 0x3F
  3998  00009F                     	ds	2
  3999  0000A1                     vfprintf@cfmt:
  4000                           	callstack 0
  4001                           
  4002                           ; 2 bytes @ 0x41
  4003  0000A1                     	ds	2
  4004  0000A3                     ?_printf:
  4005                           	callstack 0
  4006  0000A3                     printf@fmt:
  4007                           	callstack 0
  4008                           
  4009                           ; 2 bytes @ 0x43
  4010  0000A3                     	ds	8
  4011  0000AB                     printf@ap:
  4012                           	callstack 0
  4013                           
  4014                           ; 2 bytes @ 0x4B
  4015  0000AB                     	ds	2
  4016  0000AD                     SDCARD_Initialize@i:
  4017                           	callstack 0
  4018  0000AD                     hexDumpBuffer@sdCardBuffer:
  4019                           	callstack 0
  4020  0000AD                     printAddress@address:
  4021                           	callstack 0
  4022                           
  4023                           ; 4 bytes @ 0x4D
  4024  0000AD                     	ds	2
  4025  0000AF                     ??_hexDumpBuffer:
  4026  0000AF                     SDCARD_Initialize@verbose:
  4027                           	callstack 0
  4028                           
  4029                           ; 1 bytes @ 0x4F
  4030  0000AF                     	ds	1
  4031  0000B0                     SDCARD_Initialize@response:
  4032                           	callstack 0
  4033                           
  4034                           ; 1 bytes @ 0x50
  4035  0000B0                     	ds	1
  4036  0000B1                     hexDumpBuffer@j:
  4037                           	callstack 0
  4038                           
  4039                           ; 2 bytes @ 0x51
  4040  0000B1                     	ds	2
  4041  0000B3                     hexDumpBuffer@j_1451:
  4042                           	callstack 0
  4043                           
  4044                           ; 2 bytes @ 0x53
  4045  0000B3                     	ds	2
  4046  0000B5                     hexDumpBuffer@i:
  4047                           	callstack 0
  4048                           
  4049                           ; 2 bytes @ 0x55
  4050  0000B5                     	ds	2
  4051  0000B7                     ??_main:
  4052                           
  4053                           ; 1 bytes @ 0x57
  4054  0000B7                     	ds	4
  4055                           
  4056                           	psect	cstackCOMRAM
  4057  000001                     __pcstackCOMRAM:
  4058                           	callstack 0
  4059  000001                     ?_TMR0_ReadTimer:
  4060                           	callstack 0
  4061  000001                     EPWM1_LoadDutyValue@dutyValue:
  4062                           	callstack 0
  4063                           
  4064                           ; 2 bytes @ 0x0
  4065  000001                     	ds	2
  4066  000003                     ??_EPWM1_LoadDutyValue:
  4067  000003                     ??_TMR0_ReadTimer:
  4068                           
  4069                           ; 1 bytes @ 0x2
  4070  000003                     	ds	2
  4071  000005                     TMR0_ReadTimer@readVal:
  4072                           	callstack 0
  4073                           
  4074                           ; 2 bytes @ 0x4
  4075  000005                     	ds	2
  4076  000007                     TMR0_ReadTimer@readValLow:
  4077                           	callstack 0
  4078                           
  4079                           ; 1 bytes @ 0x6
  4080  000007                     	ds	1
  4081  000008                     TMR0_ReadTimer@readValHigh:
  4082                           	callstack 0
  4083                           
  4084                           ; 1 bytes @ 0x7
  4085  000008                     	ds	1
  4086  000009                     i2TMR0_WriteTimer@timerVal:
  4087                           	callstack 0
  4088                           
  4089                           ; 2 bytes @ 0x8
  4090  000009                     	ds	2
  4091  00000B                     ??_myTMR0ISR:
  4092  00000B                     
  4093                           ; 1 bytes @ 0xA
  4094  00000B                     	ds	2
  4095  00000D                     myTMR0ISR@mic:
  4096                           	callstack 0
  4097                           
  4098                           ; 2 bytes @ 0xC
  4099  00000D                     	ds	2
  4100  00000F                     ??_INTERRUPT_InterruptManager:
  4101                           
  4102                           ; 1 bytes @ 0xE
  4103  00000F                     	ds	4
  4104  000013                     ??_SPI2_Open:
  4105  000013                     ?_strlen:
  4106                           	callstack 0
  4107  000013                     ?_isupper:
  4108                           	callstack 0
  4109  000013                     ?_isalpha:
  4110                           	callstack 0
  4111  000013                     ?_isdigit:
  4112                           	callstack 0
  4113  000013                     ?_isspace:
  4114                           	callstack 0
  4115  000013                     ?_islower:
  4116                           	callstack 0
  4117  000013                     ?___wmul:
  4118                           	callstack 0
  4119  000013                     ?_incrementAddress:
  4120                           	callstack 0
  4121  000013                     ?___aodiv:
  4122                           	callstack 0
  4123  000013                     ?___aomod:
  4124                           	callstack 0
  4125  000013                     ?___lodiv:
  4126                           	callstack 0
  4127  000013                     ?___lomod:
  4128                           	callstack 0
  4129  000013                     EUSART1_Write@txData:
  4130                           	callstack 0
  4131  000013                     SPI2_ExchangeByte@data:
  4132                           	callstack 0
  4133  000013                     EUSART1_SetFramingErrorHandler@interruptHandler:
  4134                           	callstack 0
  4135  000013                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  4136                           	callstack 0
  4137  000013                     EUSART1_SetErrorHandler@interruptHandler:
  4138                           	callstack 0
  4139  000013                     TMR0_WriteTimer@timerVal:
  4140                           	callstack 0
  4141  000013                     TMR0_SetInterruptHandler@InterruptHandler:
  4142                           	callstack 0
  4143  000013                     microSecondDelay@us:
  4144                           	callstack 0
  4145  000013                     ___wmul@multiplier:
  4146                           	callstack 0
  4147  000013                     isalpha@c:
  4148                           	callstack 0
  4149  000013                     isdigit@c:
  4150                           	callstack 0
  4151  000013                     isspace@c:
  4152                           	callstack 0
  4153  000013                     isupper@c:
  4154                           	callstack 0
  4155  000013                     strlen@s:
  4156                           	callstack 0
  4157  000013                     islower@c:
  4158                           	callstack 0
  4159  000013                     incrementAddress@sdCardAddress:
  4160                           	callstack 0
  4161  000013                     ___aodiv@dividend:
  4162                           	callstack 0
  4163  000013                     ___aomod@dividend:
  4164                           	callstack 0
  4165  000013                     ___lodiv@dividend:
  4166                           	callstack 0
  4167  000013                     ___lomod@dividend:
  4168                           	callstack 0
  4169                           
  4170                           ; 8 bytes @ 0x12
  4171  000013                     	ds	1
  4172  000014                     putch@txData:
  4173                           	callstack 0
  4174  000014                     SPI2_Open@spi2UniqueConfiguration:
  4175                           	callstack 0
  4176  000014                     SDCARD_PollWriteComplete@status:
  4177                           	callstack 0
  4178  000014                     SDCARD_ReadBlock@addr:
  4179                           	callstack 0
  4180  000014                     SDCARD_WriteBlock@addr:
  4181                           	callstack 0
  4182                           
  4183                           ; 4 bytes @ 0x13
  4184  000014                     	ds	1
  4185  000015                     ??_isupper:
  4186  000015                     ??_isalpha:
  4187  000015                     ??_isdigit:
  4188  000015                     ??_isspace:
  4189  000015                     ??_islower:
  4190  000015                     ??_TMR0_Initialize:
  4191  000015                     microSecondDelay@i:
  4192                           	callstack 0
  4193  000015                     ___wmul@multiplicand:
  4194                           	callstack 0
  4195  000015                     fputc@c:
  4196                           	callstack 0
  4197  000015                     strlen@a:
  4198                           	callstack 0
  4199                           
  4200                           ; 2 bytes @ 0x14
  4201  000015                     	ds	2
  4202  000017                     ___wmul@product:
  4203                           	callstack 0
  4204  000017                     fputc@fp:
  4205                           	callstack 0
  4206                           
  4207                           ; 2 bytes @ 0x16
  4208  000017                     	ds	1
  4209  000018                     SDCARD_ReadBlock@sdCardBuffer:
  4210                           	callstack 0
  4211  000018                     SDCARD_WriteBlock@sdCardBuffer:
  4212                           	callstack 0
  4213                           
  4214                           ; 2 bytes @ 0x17
  4215  000018                     	ds	1
  4216  000019                     ??_fputc:
  4217  000019                     ?_toupper:
  4218                           	callstack 0
  4219  000019                     _isspace$2073:
  4220                           	callstack 0
  4221  000019                     toupper@c:
  4222                           	callstack 0
  4223                           
  4224                           ; 2 bytes @ 0x18
  4225  000019                     	ds	1
  4226  00001A                     ?_atoi:
  4227                           	callstack 0
  4228  00001A                     SDCARD_ReadBlock@i:
  4229                           	callstack 0
  4230  00001A                     SDCARD_WriteBlock@i:
  4231                           	callstack 0
  4232  00001A                     atoi@s:
  4233                           	callstack 0
  4234                           
  4235                           ; 2 bytes @ 0x19
  4236  00001A                     	ds	1
  4237  00001B                     ??_toupper:
  4238  00001B                     ___aodiv@divisor:
  4239                           	callstack 0
  4240  00001B                     ___aomod@divisor:
  4241                           	callstack 0
  4242  00001B                     ___lodiv@divisor:
  4243                           	callstack 0
  4244  00001B                     ___lomod@divisor:
  4245                           	callstack 0
  4246                           
  4247                           ; 8 bytes @ 0x1A
  4248  00001B                     	ds	1
  4249  00001C                     ??_atoi:
  4250                           
  4251                           ; 1 bytes @ 0x1B
  4252  00001C                     	ds	2
  4253  00001E                     ?_ctoa:
  4254                           	callstack 0
  4255  00001E                     ctoa@fp:
  4256                           	callstack 0
  4257  00001E                     fputs@s:
  4258                           	callstack 0
  4259                           
  4260                           ; 2 bytes @ 0x1D
  4261  00001E                     	ds	1
  4262  00001F                     _toupper$2122:
  4263                           	callstack 0
  4264                           
  4265                           ; 2 bytes @ 0x1E
  4266  00001F                     	ds	1
  4267  000020                     ctoa@c:
  4268                           	callstack 0
  4269  000020                     atoi@neg:
  4270                           	callstack 0
  4271  000020                     fputs@fp:
  4272                           	callstack 0
  4273                           
  4274                           ; 2 bytes @ 0x1F
  4275  000020                     	ds	1
  4276  000021                     ??_ctoa:
  4277                           
  4278                           ; 1 bytes @ 0x20
  4279  000021                     	ds	1
  4280  000022                     fputs@c:
  4281                           	callstack 0
  4282  000022                     ctoa@l:
  4283                           	callstack 0
  4284  000022                     _atoi$2046:
  4285                           	callstack 0
  4286                           
  4287                           ; 2 bytes @ 0x21
  4288  000022                     	ds	1
  4289  000023                     ___aodiv@counter:
  4290                           	callstack 0
  4291  000023                     ___aomod@counter:
  4292                           	callstack 0
  4293  000023                     ___lomod@counter:
  4294                           	callstack 0
  4295  000023                     fputs@i:
  4296                           	callstack 0
  4297  000023                     ___lodiv@quotient:
  4298                           	callstack 0
  4299                           
  4300                           ; 8 bytes @ 0x22
  4301  000023                     	ds	1
  4302  000024                     ___aodiv@sign:
  4303                           	callstack 0
  4304  000024                     ___aomod@sign:
  4305                           	callstack 0
  4306  000024                     ctoa@w:
  4307                           	callstack 0
  4308  000024                     _atoi$2048:
  4309                           	callstack 0
  4310                           
  4311                           ; 2 bytes @ 0x23
  4312  000024                     	ds	1
  4313  000025                     ?_abs:
  4314                           	callstack 0
  4315  000025                     ?_pad:
  4316                           	callstack 0
  4317  000025                     pad@fp:
  4318                           	callstack 0
  4319  000025                     abs@a:
  4320                           	callstack 0
  4321  000025                     ___aodiv@quotient:
  4322                           	callstack 0
  4323                           
  4324                           ; 8 bytes @ 0x24
  4325  000025                     	ds	1
  4326  000026                     _atoi$2047:
  4327                           	callstack 0
  4328                           
  4329                           ; 1 bytes @ 0x25
  4330  000026                     	ds	1
  4331  000027                     ??_abs:
  4332  000027                     pad@buf:
  4333                           	callstack 0
  4334  000027                     atoi@n:
  4335                           	callstack 0
  4336                           
  4337                           ; 2 bytes @ 0x26
  4338  000027                     	ds	2
  4339  000029                     pad@p:
  4340                           	callstack 0
  4341                           
  4342                           ; 2 bytes @ 0x28
  4343  000029                     	ds	2
  4344  00002B                     ??_pad:
  4345  00002B                     ___lodiv@counter:
  4346                           	callstack 0
  4347                           
  4348                           ; 1 bytes @ 0x2A
  4349  00002B                     	ds	1
  4350  00002C                     pad@i:
  4351                           	callstack 0
  4352                           
  4353                           ; 2 bytes @ 0x2B
  4354  00002C                     	ds	2
  4355  00002E                     pad@w:
  4356                           	callstack 0
  4357                           
  4358                           ; 2 bytes @ 0x2D
  4359  00002E                     	ds	2
  4360  000030                     ?_dtoa:
  4361                           	callstack 0
  4362  000030                     ?_utoa:
  4363                           	callstack 0
  4364  000030                     ?_xtoa:
  4365                           	callstack 0
  4366  000030                     dtoa@fp:
  4367                           	callstack 0
  4368  000030                     utoa@fp:
  4369                           	callstack 0
  4370  000030                     xtoa@fp:
  4371                           	callstack 0
  4372                           
  4373                           ; 2 bytes @ 0x2F
  4374  000030                     	ds	2
  4375  000032                     dtoa@d:
  4376                           	callstack 0
  4377  000032                     utoa@d:
  4378                           	callstack 0
  4379  000032                     xtoa@d:
  4380                           	callstack 0
  4381                           
  4382                           ; 8 bytes @ 0x31
  4383  000032                     	ds	8
  4384  00003A                     xtoa@x:
  4385                           	callstack 0
  4386                           
  4387                           ; 1 bytes @ 0x39
  4388  00003A                     	ds	1
  4389  00003B                     
  4390                           ; 1 bytes @ 0x3A
  4391 ;;
  4392 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4393 ;;
  4394 ;; *************** function _main *****************
  4395 ;; Defined at:
  4396 ;;		line 57 in file "main.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  addr            4   37[BANK1 ] unsigned long 
  4401 ;;  timeout         1   43[BANK1 ] unsigned char 
  4402 ;;  timeout         1   42[BANK1 ] unsigned char 
  4403 ;;  i               2   48[BANK1 ] unsigned short 
  4404 ;;  printVal        2   30[BANK1 ] unsigned short 
  4405 ;;  i               1   52[BANK1 ] unsigned char 
  4406 ;;  timeout         1   36[BANK1 ] unsigned char 
  4407 ;;  i               2   50[BANK1 ] unsigned short 
  4408 ;;  j               1   41[BANK1 ] unsigned char 
  4409 ;;  writeAddress    4   74[BANK1 ] unsigned long 
  4410 ;;  failureIndex    1   73[BANK1 ] unsigned char 
  4411 ;;  readAddress     4   56[BANK1 ] unsigned long 
  4412 ;;  address         4   44[BANK1 ] unsigned long 
  4413 ;;  printedBlock    4   32[BANK1 ] unsigned long 
  4414 ;;  endAddress      4   26[BANK1 ] unsigned long 
  4415 ;;  sin            26    0[BANK1 ] const unsigned char [26]
  4416 ;;  sdCardAddres    4   68[BANK1 ] unsigned long 
  4417 ;;  writeEndAddr    4   64[BANK1 ] unsigned long 
  4418 ;;  writeStartAd    4   60[BANK1 ] unsigned long 
  4419 ;;  i               2   54[BANK1 ] unsigned short 
  4420 ;;  status          1   72[BANK1 ] unsigned char 
  4421 ;;  cmd             1   53[BANK1 ] unsigned char 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Locals:         0       0      78       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4434 ;;      Totals:         0       4      78       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4435 ;;Total ram usage:       82 bytes
  4436 ;; Hardware stack levels required when called:   14
  4437 ;; This function calls:
  4438 ;;		_EUSART1_Read
  4439 ;;		_EUSART1_is_rx_ready
  4440 ;;		_SDCARD_Initialize
  4441 ;;		_SDCARD_PollWriteComplete
  4442 ;;		_SDCARD_ReadBlock
  4443 ;;		_SDCARD_WriteBlock
  4444 ;;		_SPI2_Close
  4445 ;;		_SPI2_Open
  4446 ;;		_SYSTEM_Initialize
  4447 ;;		_TMR0_SetInterruptHandler
  4448 ;;		_TMR0_WriteTimer
  4449 ;;		_hexDumpBuffer
  4450 ;;		_incrementAddress
  4451 ;;		_microSecondDelay
  4452 ;;		_printAddress
  4453 ;;		_printAscii
  4454 ;;		_printf
  4455 ;; This function is called by:
  4456 ;;		Startup code after reset
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text0
  4461  000052                     __ptext0:
  4462                           	callstack 0
  4463  000052                     _main:
  4464                           	callstack 17
  4465  000052                     
  4466                           ;main.c: 59:     printf("Lab 10\r\n");;main.c: 60:     printf("SD card + playback\r\n");
      +                          ;main.c: 61:     printf("Dev'21\r\n");
  4467  000052  0E00               	movlw	0
  4468  000054  0101               	movlb	1	; () banked
  4469  000056  6FF2               	movwf	main@sdCardAddress& (0+255),b
  4470  000058  0E00               	movlw	0
  4471  00005A  6FF3               	movwf	(main@sdCardAddress+1)& (0+255),b
  4472  00005C  0E00               	movlw	0
  4473  00005E  6FF4               	movwf	(main@sdCardAddress+2)& (0+255),b
  4474  000060  0E00               	movlw	0
  4475  000062  6FF5               	movwf	(main@sdCardAddress+3)& (0+255),b
  4476                           
  4477                           ;main.c: 62:     printf("No configuration of development board\r\n");
  4478  000064  0E00               	movlw	0
  4479  000066  6FEA               	movwf	main@writeStartAddress& (0+255),b
  4480  000068  0E00               	movlw	0
  4481  00006A  6FEB               	movwf	(main@writeStartAddress+1)& (0+255),b
  4482  00006C  0E00               	movlw	0
  4483  00006E  6FEC               	movwf	(main@writeStartAddress+2)& (0+255),b
  4484  000070  0E00               	movlw	0
  4485  000072  6FED               	movwf	(main@writeStartAddress+3)& (0+255),b
  4486                           
  4487                           ;main.c: 63: 
  4488  000074  0E00               	movlw	0
  4489  000076  6FEE               	movwf	main@writeEndAddress& (0+255),b
  4490  000078  0E00               	movlw	0
  4491  00007A  6FEF               	movwf	(main@writeEndAddress+1)& (0+255),b
  4492  00007C  0E00               	movlw	0
  4493  00007E  6FF0               	movwf	(main@writeEndAddress+2)& (0+255),b
  4494  000080  0E00               	movlw	0
  4495  000082  6FF1               	movwf	(main@writeEndAddress+3)& (0+255),b
  4496  000084                     
  4497                           ; BSR set to: 1
  4498                           ;main.c: 64:     SPI2_Close();;main.c: 65:     SPI2_Open(SPI2_DEFAULT);
  4499  000084  0E47               	movlw	low main@F6231
  4500  000086  6EF6               	movwf	tblptrl,c
  4501  000088                     	if	1	;There is more than 1 active tblptr byte
  4502  000088  0EF3               	movlw	high main@F6231
  4503  00008A  6EF7               	movwf	tblptrh,c
  4504  00008C                     	endif
  4505  00008C                     	if	1	;There are 3 active tblptr bytes
  4506  00008C  0E00               	movlw	low (main@F6231 shr (0+16))
  4507  00008E  6EF8               	movwf	tblptru,c
  4508  000090                     	endif
  4509  000090  EE21  F0AE         	lfsr	2,main@sin
  4510  000094  0E19               	movlw	25
  4511  000096                     u6240:
  4512  000096  0009               	tblrd		*+
  4513  000098  CFF5 FFDE          	movff	tablat,postinc2
  4514  00009C  06E8               	decf	wreg,f,c
  4515  00009E  E2FB               	bc	u6240
  4516  0000A0                     
  4517                           ; BSR set to: 1
  4518                           ;main.c: 68:         printf("> ");
  4519  0000A0  EC0E  F01C         	call	_SYSTEM_Initialize	;wreg free
  4520  0000A4  888A               	bsf	138,4,c	;volatile
  4521  0000A6                     
  4522                           ;main.c: 72:         switch (cmd) {
  4523  0000A6  0E00               	movlw	0
  4524  0000A8  6E14               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4525  0000AA  0E00               	movlw	0
  4526  0000AC  6E13               	movwf	TMR0_WriteTimer@timerVal^0,c
  4527  0000AE  EC9F  F01C         	call	_TMR0_WriteTimer	;wreg free
  4528  0000B2                     
  4529                           ;main.c: 73: 
  4530  0000B2  94F2               	bcf	242,2,c	;volatile
  4531  0000B4                     l457:
  4532  0000B4  A4F2               	btfss	242,2,c	;volatile
  4533  0000B6  EF5F  F000         	goto	u6251
  4534  0000BA  EF61  F000         	goto	u6250
  4535  0000BE                     u6251:
  4536  0000BE  EF5A  F000         	goto	l457
  4537  0000C2                     u6250:
  4538  0000C2                     
  4539                           ;main.c: 76: 
  4540  0000C2  0E2C               	movlw	low _myTMR0ISR
  4541  0000C4  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4542  0000C6  0E18               	movlw	high _myTMR0ISR
  4543  0000C8  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4544  0000CA  ECA4  F01C         	call	_TMR0_SetInterruptHandler	;wreg free
  4545  0000CE                     
  4546                           ;main.c: 78:                 printf("\r\n-----------------------------------------------
      +                          --\r\n");
  4547  0000CE  8EF2               	bsf	242,7,c	;volatile
  4548  0000D0                     
  4549                           ;main.c: 79:                 printf("\tPlay length in blocks: %d\r\n", (writeEndAddress-
      +                          writeStartAddress)>>9);
  4550  0000D0  8CF2               	bsf	242,6,c	;volatile
  4551  0000D2                     
  4552                           ;main.c: 81:                 printf("%04x", sdCardAddress >> 16);
  4553  0000D2  EC6F  F011         	call	_printAscii	;wreg free
  4554  0000D6                     
  4555                           ;main.c: 83:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  4556  0000D6  0EBB               	movlw	low STR_1
  4557  0000D8  0100               	movlb	0	; () banked
  4558  0000DA  6FA3               	movwf	printf@fmt& (0+255),b
  4559  0000DC  0EFF               	movlw	high STR_1
  4560  0000DE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4561  0000E0  ECE6  F01B         	call	_printf	;wreg free
  4562  0000E4                     
  4563                           ;main.c: 84:                 printf("\r\n");
  4564  0000E4  0ECF               	movlw	low STR_2
  4565  0000E6  0100               	movlb	0	; () banked
  4566  0000E8  6FA3               	movwf	printf@fmt& (0+255),b
  4567  0000EA  0EFE               	movlw	high STR_2
  4568  0000EC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4569  0000EE  ECE6  F01B         	call	_printf	;wreg free
  4570  0000F2                     
  4571                           ;main.c: 85:                 printf("\tsample rate: %dus\r\n", sampleRate / 16);
  4572  0000F2  0EC4               	movlw	low STR_3
  4573  0000F4  0100               	movlb	0	; () banked
  4574  0000F6  6FA3               	movwf	printf@fmt& (0+255),b
  4575  0000F8  0EFF               	movlw	high STR_3
  4576  0000FA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4577  0000FC  ECE6  F01B         	call	_printf	;wreg free
  4578  000100                     
  4579                           ;main.c: 86:                 printf("-------------------------------------------------\r
      +                          \n");
  4580  000100  0E91               	movlw	low STR_4
  4581  000102  0100               	movlb	0	; () banked
  4582  000104  6FA3               	movwf	printf@fmt& (0+255),b
  4583  000106  0EFC               	movlw	high STR_4
  4584  000108  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4585  00010A  ECE6  F01B         	call	_printf	;wreg free
  4586  00010E                     
  4587                           ;main.c: 88:                 printf("o: k\r\n");
  4588  00010E  ECC6  F01C         	call	_SPI2_Close	;wreg free
  4589  000112                     
  4590                           ;main.c: 89:                 printf("Z: Reset processor\r\n");
  4591  000112  0E00               	movlw	0
  4592  000114  EC05  F018         	call	_SPI2_Open
  4593  000118                     l6128:
  4594                           
  4595                           ;main.c: 92:                 printf("i: Initialize SD card\r\n");
  4596  000118  0EF9               	movlw	low STR_5
  4597  00011A  0100               	movlb	0	; () banked
  4598  00011C  6FA3               	movwf	printf@fmt& (0+255),b
  4599  00011E  0EFF               	movlw	high STR_5
  4600  000120  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4601  000122  ECE6  F01B         	call	_printf	;wreg free
  4602  000126                     l6130:
  4603  000126  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  4604  00012A  0900               	iorlw	0
  4605  00012C  B4D8               	btfsc	status,2,c
  4606  00012E  EF9B  F000         	goto	u6261
  4607  000132  EF9D  F000         	goto	u6260
  4608  000136                     u6261:
  4609  000136  EF93  F000         	goto	l6130
  4610  00013A                     u6260:
  4611  00013A                     
  4612                           ;main.c: 94:                 printf("a/A decrease/increase read address\r\n");
  4613  00013A  ECFA  F01B         	call	_EUSART1_Read	;wreg free
  4614  00013E  0101               	movlb	1	; () banked
  4615  000140  6FE3               	movwf	main@cmd& (0+255),b
  4616  000142                     
  4617                           ; BSR set to: 1
  4618                           ;main.c: 95:                 printf("r: read a block of %d bytes from SD card\r\n", 512)
      +                          ;
  4619  000142  0E69               	movlw	low (STR_72+12)
  4620  000144  0100               	movlb	0	; () banked
  4621  000146  6FA3               	movwf	printf@fmt& (0+255),b
  4622  000148  0EFF               	movlw	high (STR_72+12)
  4623  00014A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4624  00014C  C1E3  F0A5         	movff	main@cmd,?_printf+2
  4625  000150  6BA6               	clrf	(?_printf+3)& (0+255),b
  4626  000152  ECE6  F01B         	call	_printf	;wreg free
  4627                           
  4628                           ;main.c: 96:                 printf("1: write a perfect 26 value sine wave to the SD car
      +                          d\r\n", 512);
  4629  000156  EF0B  F009         	goto	l6524
  4630  00015A                     l6136:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;main.c: 102:                 break;
  4634  00015A  0E71               	movlw	low STR_7
  4635  00015C  6FA3               	movwf	printf@fmt& (0+255),b
  4636  00015E  0EFB               	movlw	high STR_7
  4637  000160  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4638  000162  ECE6  F01B         	call	_printf	;wreg free
  4639                           
  4640                           ;main.c: 103: 
  4641  000166  0E9F               	movlw	low STR_8
  4642  000168  0100               	movlb	0	; () banked
  4643  00016A  6FA3               	movwf	printf@fmt& (0+255),b
  4644  00016C  0EFD               	movlw	high STR_8
  4645  00016E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4646  000170  0101               	movlb	1	; () banked
  4647  000172  51EA               	movf	main@writeStartAddress& (0+255),w,b
  4648  000174  5DEE               	subwf	main@writeEndAddress& (0+255),w,b
  4649  000176  0100               	movlb	0	; () banked
  4650  000178  6FB7               	movwf	??_main& (0+255),b
  4651  00017A  0101               	movlb	1	; () banked
  4652  00017C  51EB               	movf	(main@writeStartAddress+1)& (0+255),w,b
  4653  00017E  59EF               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  4654  000180  0100               	movlb	0	; () banked
  4655  000182  6FB8               	movwf	(??_main+1)& (0+255),b
  4656  000184  0101               	movlb	1	; () banked
  4657  000186  51EC               	movf	(main@writeStartAddress+2)& (0+255),w,b
  4658  000188  59F0               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  4659  00018A  0100               	movlb	0	; () banked
  4660  00018C  6FB9               	movwf	(??_main+2)& (0+255),b
  4661  00018E  0101               	movlb	1	; () banked
  4662  000190  51ED               	movf	(main@writeStartAddress+3)& (0+255),w,b
  4663  000192  59F1               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  4664  000194  0100               	movlb	0	; () banked
  4665  000196  6FBA               	movwf	(??_main+3)& (0+255),b
  4666  000198  0E0A               	movlw	10
  4667  00019A  EFD4  F000         	goto	u6270
  4668  00019E                     u6275:
  4669  00019E  90D8               	bcf	status,0,c
  4670  0001A0  33BA               	rrcf	(??_main+3)& (0+255),f,b
  4671  0001A2  33B9               	rrcf	(??_main+2)& (0+255),f,b
  4672  0001A4  33B8               	rrcf	(??_main+1)& (0+255),f,b
  4673  0001A6  33B7               	rrcf	??_main& (0+255),f,b
  4674  0001A8                     u6270:
  4675  0001A8  2EE8               	decfsz	wreg,f,c
  4676  0001AA  EFCF  F000         	goto	u6275
  4677  0001AE  C0B7  F0A5         	movff	??_main,?_printf+2
  4678  0001B2  C0B8  F0A6         	movff	??_main+1,?_printf+3
  4679  0001B6  C0B9  F0A7         	movff	??_main+2,?_printf+4
  4680  0001BA  C0BA  F0A8         	movff	??_main+3,?_printf+5
  4681  0001BE  ECE6  F01B         	call	_printf	;wreg free
  4682                           
  4683                           ;main.c: 104: 
  4684  0001C2  0E7F               	movlw	low STR_9
  4685  0001C4  0100               	movlb	0	; () banked
  4686  0001C6  6FA3               	movwf	printf@fmt& (0+255),b
  4687  0001C8  0EFF               	movlw	high STR_9
  4688  0001CA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4689  0001CC  ECE6  F01B         	call	_printf	;wreg free
  4690                           
  4691                           ;main.c: 105: 
  4692  0001D0  0EE9               	movlw	low STR_10
  4693  0001D2  0100               	movlb	0	; () banked
  4694  0001D4  6FA3               	movwf	printf@fmt& (0+255),b
  4695  0001D6  0EFF               	movlw	high STR_10
  4696  0001D8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4697  0001DA  C1F4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  4698  0001DE  C1F5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  4699  0001E2  6BA7               	clrf	(?_printf+4)& (0+255),b
  4700  0001E4  6BA8               	clrf	(?_printf+5)& (0+255),b
  4701  0001E6  ECE6  F01B         	call	_printf	;wreg free
  4702                           
  4703                           ;main.c: 106: 
  4704  0001EA  0EFC               	movlw	low STR_11
  4705  0001EC  0100               	movlb	0	; () banked
  4706  0001EE  6FA3               	movwf	printf@fmt& (0+255),b
  4707  0001F0  0EFF               	movlw	high STR_11
  4708  0001F2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4709  0001F4  ECE6  F01B         	call	_printf	;wreg free
  4710                           
  4711                           ;main.c: 107:             case 'o':
  4712  0001F8  0EE9               	movlw	low STR_10
  4713  0001FA  0100               	movlb	0	; () banked
  4714  0001FC  6FA3               	movwf	printf@fmt& (0+255),b
  4715  0001FE  0EFF               	movlw	high STR_10
  4716  000200  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4717  000202  0EFF               	movlw	255
  4718  000204  0101               	movlb	1	; () banked
  4719  000206  15F2               	andwf	main@sdCardAddress& (0+255),w,b
  4720  000208  0100               	movlb	0	; () banked
  4721  00020A  6FA5               	movwf	(?_printf+2)& (0+255),b
  4722  00020C  0EFF               	movlw	255
  4723  00020E  0101               	movlb	1	; () banked
  4724  000210  15F3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  4725  000212  0100               	movlb	0	; () banked
  4726  000214  6FA6               	movwf	(?_printf+3)& (0+255),b
  4727  000216  0E00               	movlw	0
  4728  000218  0101               	movlb	1	; () banked
  4729  00021A  15F4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  4730  00021C  0100               	movlb	0	; () banked
  4731  00021E  6FA7               	movwf	(?_printf+4)& (0+255),b
  4732  000220  0E00               	movlw	0
  4733  000222  0101               	movlb	1	; () banked
  4734  000224  15F5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  4735  000226  0100               	movlb	0	; () banked
  4736  000228  6FA8               	movwf	(?_printf+5)& (0+255),b
  4737  00022A  ECE6  F01B         	call	_printf	;wreg free
  4738                           
  4739                           ;main.c: 108:                 printf("o:	ok\r\n");
  4740  00022E  0E9C               	movlw	low (STR_71+12)
  4741  000230  0100               	movlb	0	; () banked
  4742  000232  6FA3               	movwf	printf@fmt& (0+255),b
  4743  000234  0EFF               	movlw	high (STR_71+12)
  4744  000236  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4745  000238  ECE6  F01B         	call	_printf	;wreg free
  4746                           
  4747                           ;main.c: 109:                 break;
  4748  00023C  0EF9               	movlw	low STR_14
  4749  00023E  0100               	movlb	0	; () banked
  4750  000240  6FA3               	movwf	printf@fmt& (0+255),b
  4751  000242  0EFE               	movlw	high STR_14
  4752  000244  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4753  000246  C0C2  F0B7         	movff	_sampleRate,??_main
  4754  00024A  C0C3  F0B8         	movff	_sampleRate+1,??_main+1
  4755  00024E  0E04               	movlw	4
  4756  000250  6FB9               	movwf	(??_main+2)& (0+255),b
  4757  000252                     u6285:
  4758  000252  90D8               	bcf	status,0,c
  4759  000254  33B8               	rrcf	(??_main+1)& (0+255),f,b
  4760  000256  33B7               	rrcf	??_main& (0+255),f,b
  4761  000258  2FB9               	decfsz	(??_main+2)& (0+255),f,b
  4762  00025A  EF29  F001         	goto	u6285
  4763  00025E  C0B7  F0A5         	movff	??_main,?_printf+2
  4764  000262  C0B8  F0A6         	movff	??_main+1,?_printf+3
  4765  000266  ECE6  F01B         	call	_printf	;wreg free
  4766                           
  4767                           ;main.c: 110: 
  4768  00026A  0E73               	movlw	low (STR_7+2)
  4769  00026C  0100               	movlb	0	; () banked
  4770  00026E  6FA3               	movwf	printf@fmt& (0+255),b
  4771  000270  0EFB               	movlw	high (STR_7+2)
  4772  000272  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4773  000274  ECE6  F01B         	call	_printf	;wreg free
  4774                           
  4775                           ;main.c: 111: 
  4776  000278  0E9F               	movlw	low STR_16
  4777  00027A  0100               	movlb	0	; () banked
  4778  00027C  6FA3               	movwf	printf@fmt& (0+255),b
  4779  00027E  0EFF               	movlw	high STR_16
  4780  000280  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4781  000282  ECE6  F01B         	call	_printf	;wreg free
  4782                           
  4783                           ;main.c: 112: 
  4784  000286  0ED5               	movlw	low STR_17
  4785  000288  0100               	movlb	0	; () banked
  4786  00028A  6FA3               	movwf	printf@fmt& (0+255),b
  4787  00028C  0EFF               	movlw	high STR_17
  4788  00028E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4789  000290  ECE6  F01B         	call	_printf	;wreg free
  4790                           
  4791                           ;main.c: 113: 
  4792  000294  0EE4               	movlw	low STR_18
  4793  000296  0100               	movlb	0	; () banked
  4794  000298  6FA3               	movwf	printf@fmt& (0+255),b
  4795  00029A  0EFE               	movlw	high STR_18
  4796  00029C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4797  00029E  ECE6  F01B         	call	_printf	;wreg free
  4798                           
  4799                           ;main.c: 114:             case 'Z':
  4800  0002A2  0E75               	movlw	low STR_19
  4801  0002A4  0100               	movlb	0	; () banked
  4802  0002A6  6FA3               	movwf	printf@fmt& (0+255),b
  4803  0002A8  0EFE               	movlw	high STR_19
  4804  0002AA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4805  0002AC  ECE6  F01B         	call	_printf	;wreg free
  4806                           
  4807                           ;main.c: 115:                 for (i = 0; i < 40; i++) printf("\n");
  4808  0002B0  0E73               	movlw	low (STR_7+2)
  4809  0002B2  0100               	movlb	0	; () banked
  4810  0002B4  6FA3               	movwf	printf@fmt& (0+255),b
  4811  0002B6  0EFB               	movlw	high (STR_7+2)
  4812  0002B8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4813  0002BA  ECE6  F01B         	call	_printf	;wreg free
  4814                           
  4815                           ;main.c: 116:                 __asm("reset");
  4816  0002BE  0E5D               	movlw	low STR_21
  4817  0002C0  0100               	movlb	0	; () banked
  4818  0002C2  6FA3               	movwf	printf@fmt& (0+255),b
  4819  0002C4  0EFE               	movlw	high STR_21
  4820  0002C6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4821  0002C8  ECE6  F01B         	call	_printf	;wreg free
  4822                           
  4823                           ;main.c: 117:                 break;
  4824  0002CC  0E73               	movlw	low (STR_7+2)
  4825  0002CE  0100               	movlb	0	; () banked
  4826  0002D0  6FA3               	movwf	printf@fmt& (0+255),b
  4827  0002D2  0EFB               	movlw	high (STR_7+2)
  4828  0002D4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4829  0002D6  ECE6  F01B         	call	_printf	;wreg free
  4830                           
  4831                           ;main.c: 118: 
  4832  0002DA  0EDE               	movlw	low STR_23
  4833  0002DC  0100               	movlb	0	; () banked
  4834  0002DE  6FA3               	movwf	printf@fmt& (0+255),b
  4835  0002E0  0EFC               	movlw	high STR_23
  4836  0002E2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4837  0002E4  ECE6  F01B         	call	_printf	;wreg free
  4838                           
  4839                           ;main.c: 119: 
  4840  0002E8  0E66               	movlw	low STR_24
  4841  0002EA  0100               	movlb	0	; () banked
  4842  0002EC  6FA3               	movwf	printf@fmt& (0+255),b
  4843  0002EE  0EFC               	movlw	high STR_24
  4844  0002F0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4845  0002F2  0E02               	movlw	2
  4846  0002F4  6FA6               	movwf	(?_printf+3)& (0+255),b
  4847  0002F6  0E00               	movlw	0
  4848  0002F8  6FA5               	movwf	(?_printf+2)& (0+255),b
  4849  0002FA  ECE6  F01B         	call	_printf	;wreg free
  4850                           
  4851                           ;main.c: 120: 
  4852  0002FE  0E3A               	movlw	low STR_25
  4853  000300  0100               	movlb	0	; () banked
  4854  000302  6FA3               	movwf	printf@fmt& (0+255),b
  4855  000304  0EFB               	movlw	high STR_25
  4856  000306  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4857  000308  0E02               	movlw	2
  4858  00030A  6FA6               	movwf	(?_printf+3)& (0+255),b
  4859  00030C  0E00               	movlw	0
  4860  00030E  6FA5               	movwf	(?_printf+2)& (0+255),b
  4861  000310  ECE6  F01B         	call	_printf	;wreg free
  4862                           
  4863                           ;main.c: 121: 
  4864  000314  0E73               	movlw	low (STR_7+2)
  4865  000316  0100               	movlb	0	; () banked
  4866  000318  6FA3               	movwf	printf@fmt& (0+255),b
  4867  00031A  0EFB               	movlw	high (STR_7+2)
  4868  00031C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4869  00031E  ECE6  F01B         	call	_printf	;wreg free
  4870                           
  4871                           ;main.c: 122:             case 'z':
  4872  000322  0ED9               	movlw	low STR_27
  4873  000324  0100               	movlb	0	; () banked
  4874  000326  6FA3               	movwf	printf@fmt& (0+255),b
  4875  000328  0EFB               	movlw	high STR_27
  4876  00032A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4877  00032C  ECE6  F01B         	call	_printf	;wreg free
  4878                           
  4879                           ;main.c: 123:                 for (i = 0; i < 40; i++) printf("\n");
  4880  000330  0E3A               	movlw	low STR_28
  4881  000332  0100               	movlb	0	; () banked
  4882  000334  6FA3               	movwf	printf@fmt& (0+255),b
  4883  000336  0EFC               	movlw	high STR_28
  4884  000338  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4885  00033A  ECE6  F01B         	call	_printf	;wreg free
  4886                           
  4887                           ;main.c: 124:                 break;
  4888  00033E  0E24               	movlw	low STR_29
  4889  000340  0100               	movlb	0	; () banked
  4890  000342  6FA3               	movwf	printf@fmt& (0+255),b
  4891  000344  0EFD               	movlw	high STR_29
  4892  000346  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4893  000348  ECE6  F01B         	call	_printf	;wreg free
  4894                           
  4895                           ;main.c: 125: 
  4896  00034C  0E73               	movlw	low (STR_7+2)
  4897  00034E  0100               	movlb	0	; () banked
  4898  000350  6FA3               	movwf	printf@fmt& (0+255),b
  4899  000352  0EFB               	movlw	high (STR_7+2)
  4900  000354  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4901  000356  ECE6  F01B         	call	_printf	;wreg free
  4902                           
  4903                           ;main.c: 126:             case '1': {
  4904  00035A  EF8C  F000         	goto	l6128
  4905  00035E                     l6138:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;main.c: 132: 
  4909  00035E  0ECD               	movlw	low STR_31
  4910  000360  6FA3               	movwf	printf@fmt& (0+255),b
  4911  000362  0EFF               	movlw	high STR_31
  4912  000364  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4913  000366  ECE6  F01B         	call	_printf	;wreg free
  4914                           
  4915                           ;main.c: 133:                 for (uint8_t j = 0; j < 128 && !(EUSART1_is_rx_ready()); j
      +                          ++){
  4916  00036A  EF8C  F000         	goto	l6128
  4917  00036E                     l6140:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;main.c: 139:                     }
  4921  00036E  0E00               	movlw	0
  4922  000370  0101               	movlb	1	; () banked
  4923  000372  6FE5               	movwf	(main@i+1)& (0+255),b
  4924  000374  0E00               	movlw	0
  4925  000376  6FE4               	movwf	main@i& (0+255),b
  4926  000378                     l6142:
  4927                           
  4928                           ; BSR set to: 1
  4929  000378  51E5               	movf	(main@i+1)& (0+255),w,b
  4930  00037A  E109               	bnz	u6290
  4931  00037C  0E28               	movlw	40
  4932  00037E  5DE4               	subwf	main@i& (0+255),w,b
  4933  000380  A0D8               	btfss	status,0,c
  4934  000382  EFC5  F001         	goto	u6291
  4935  000386  EFC7  F001         	goto	u6290
  4936  00038A                     u6291:
  4937  00038A  EFC9  F001         	goto	l6146
  4938  00038E                     u6290:
  4939  00038E  EFD5  F001         	goto	l470
  4940  000392                     l6146:
  4941                           
  4942                           ; BSR set to: 1
  4943  000392  0EF0               	movlw	low (STR_116+2)
  4944  000394  0100               	movlb	0	; () banked
  4945  000396  6FA3               	movwf	printf@fmt& (0+255),b
  4946  000398  0EFF               	movlw	high (STR_116+2)
  4947  00039A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4948  00039C  ECE6  F01B         	call	_printf	;wreg free
  4949  0003A0  0101               	movlb	1	; () banked
  4950  0003A2  4BE4               	infsnz	main@i& (0+255),f,b
  4951  0003A4  2BE5               	incf	(main@i+1)& (0+255),f,b
  4952  0003A6  EFBC  F001         	goto	l6142
  4953  0003AA                     l470:
  4954                           
  4955                           ; BSR set to: 1
  4956  0003AA  00FF               	reset		;# 
  4957                           
  4958                           ;main.c: 141:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer);
  4959  0003AC  EF8C  F000         	goto	l6128
  4960  0003B0                     l6152:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;main.c: 147:                     microSecondDelay(51200);
  4964  0003B0  0E00               	movlw	0
  4965  0003B2  0101               	movlb	1	; () banked
  4966  0003B4  6FE5               	movwf	(main@i+1)& (0+255),b
  4967  0003B6  0E00               	movlw	0
  4968  0003B8  6FE4               	movwf	main@i& (0+255),b
  4969  0003BA                     l6154:
  4970                           
  4971                           ; BSR set to: 1
  4972  0003BA  51E5               	movf	(main@i+1)& (0+255),w,b
  4973  0003BC  E109               	bnz	u6300
  4974  0003BE  0E28               	movlw	40
  4975  0003C0  5DE4               	subwf	main@i& (0+255),w,b
  4976  0003C2  A0D8               	btfss	status,0,c
  4977  0003C4  EFE6  F001         	goto	u6301
  4978  0003C8  EFE8  F001         	goto	u6300
  4979  0003CC                     u6301:
  4980  0003CC  EFEA  F001         	goto	l6158
  4981  0003D0                     u6300:
  4982  0003D0  EF8C  F000         	goto	l6128
  4983  0003D4                     l6158:
  4984                           
  4985                           ; BSR set to: 1
  4986  0003D4  0EF0               	movlw	low (STR_116+2)
  4987  0003D6  0100               	movlb	0	; () banked
  4988  0003D8  6FA3               	movwf	printf@fmt& (0+255),b
  4989  0003DA  0EFF               	movlw	high (STR_116+2)
  4990  0003DC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  4991  0003DE  ECE6  F01B         	call	_printf	;wreg free
  4992  0003E2  0101               	movlb	1	; () banked
  4993  0003E4  4BE4               	infsnz	main@i& (0+255),f,b
  4994  0003E6  2BE5               	incf	(main@i+1)& (0+255),f,b
  4995  0003E8  EFDD  F001         	goto	l6154
  4996  0003EC                     l474:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;main.c: 151:                     EUSART1_Read();;main.c: 152: ;main.c: 153:            
      +                               writeEndAddress = writeAddress;
  5000  0003EC  C1F2  F1EA         	movff	main@sdCardAddress,main@writeStartAddress
  5001  0003F0  C1F3  F1EB         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5002  0003F4  C1F4  F1EC         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5003  0003F8  C1F5  F1ED         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5004  0003FC                     
  5005                           ; BSR set to: 0
  5006                           ;main.c: 157:                 printAddress(writeEndAddress);
  5007  0003FC  0E00               	movlw	0
  5008  0003FE  0101               	movlb	1	; () banked
  5009  000400  6FD7               	movwf	main@j& (0+255),b
  5010  000402  EF89  F002         	goto	l6200
  5011  000406                     l6166:
  5012                           
  5013                           ;main.c: 158:             }
  5014  000406  0E00               	movlw	0
  5015  000408  0101               	movlb	1	; () banked
  5016  00040A  6FD2               	movwf	main@timeout& (0+255),b
  5017                           
  5018                           ;main.c: 159:                 break;
  5019  00040C  0E00               	movlw	0
  5020  00040E  6FDF               	movwf	(main@i_1286+1)& (0+255),b
  5021  000410  0E00               	movlw	0
  5022  000412  6FDE               	movwf	main@i_1286& (0+255),b
  5023  000414                     l6168:
  5024                           
  5025                           ; BSR set to: 1
  5026  000414  0E02               	movlw	2
  5027  000416  5DDF               	subwf	(main@i_1286+1)& (0+255),w,b
  5028  000418  A0D8               	btfss	status,0,c
  5029  00041A  EF11  F002         	goto	u6311
  5030  00041E  EF13  F002         	goto	u6310
  5031  000422                     u6311:
  5032  000422  EF15  F002         	goto	l6172
  5033  000426                     u6310:
  5034  000426  EF36  F002         	goto	l6182
  5035  00042A                     l6172:
  5036                           
  5037                           ; BSR set to: 1
  5038                           ;main.c: 160: 
  5039  00042A  0EAE               	movlw	low main@sin
  5040  00042C  0100               	movlb	0	; () banked
  5041  00042E  25BB               	addwf	main@sinIndex& (0+255),w,b
  5042  000430  6ED9               	movwf	fsr2l,c
  5043  000432  6ADA               	clrf	fsr2h,c
  5044  000434  0E01               	movlw	high main@sin
  5045  000436  22DA               	addwfc	fsr2h,f,c
  5046  000438  0EFC               	movlw	low _sdCardBuffer
  5047  00043A  0101               	movlb	1	; () banked
  5048  00043C  25DE               	addwf	main@i_1286& (0+255),w,b
  5049  00043E  6EE1               	movwf	fsr1l,c
  5050  000440  0E07               	movlw	high _sdCardBuffer
  5051  000442  21DF               	addwfc	(main@i_1286+1)& (0+255),w,b
  5052  000444  6EE2               	movwf	fsr1h,c
  5053  000446  CFDF FFE7          	movff	indf2,indf1
  5054  00044A                     
  5055                           ; BSR set to: 1
  5056                           ;main.c: 161:             case '+':
  5057  00044A  0100               	movlb	0	; () banked
  5058  00044C  2BBB               	incf	main@sinIndex& (0+255),f,b
  5059  00044E  0E19               	movlw	25
  5060  000450  65BB               	cpfsgt	main@sinIndex& (0+255),b
  5061  000452  EF2D  F002         	goto	u6321
  5062  000456  EF2F  F002         	goto	u6320
  5063  00045A                     u6321:
  5064  00045A  EF31  F002         	goto	l6178
  5065  00045E                     u6320:
  5066  00045E                     
  5067                           ; BSR set to: 0
  5068                           ;main.c: 162:                 sampleRate = sampleRate + 160;
  5069  00045E  0E00               	movlw	0
  5070  000460  6FBB               	movwf	main@sinIndex& (0+255),b
  5071  000462                     l6178:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;main.c: 163:                 break;
  5075  000462  0101               	movlb	1	; () banked
  5076  000464  4BDE               	infsnz	main@i_1286& (0+255),f,b
  5077  000466  2BDF               	incf	(main@i_1286+1)& (0+255),f,b
  5078  000468  EF0A  F002         	goto	l6168
  5079  00046C                     l6182:
  5080                           
  5081                           ; BSR set to: 1
  5082                           ;main.c: 165:             case '-':
  5083  00046C  C180  F014         	movff	main@writeAddress,SDCARD_WriteBlock@addr
  5084  000470  C181  F015         	movff	main@writeAddress+1,SDCARD_WriteBlock@addr+1
  5085  000474  C182  F016         	movff	main@writeAddress+2,SDCARD_WriteBlock@addr+2
  5086  000478  C183  F017         	movff	main@writeAddress+3,SDCARD_WriteBlock@addr+3
  5087  00047C  0EFC               	movlw	low _sdCardBuffer
  5088  00047E  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5089  000480  0E07               	movlw	high _sdCardBuffer
  5090  000482  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5091  000484  ECF3  F018         	call	_SDCARD_WriteBlock	;wreg free
  5092  000488                     l6184:
  5093  000488  ECF7  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5094  00048C  0101               	movlb	1	; () banked
  5095  00048E  6FF6               	movwf	main@status& (0+255),b
  5096  000490  29F6               	incf	main@status& (0+255),w,b
  5097  000492  B4D8               	btfsc	status,2,c
  5098  000494  EF4E  F002         	goto	u6331
  5099  000498  EF50  F002         	goto	u6330
  5100  00049C                     u6331:
  5101  00049C  EF44  F002         	goto	l6184
  5102  0004A0                     u6330:
  5103  0004A0                     
  5104                           ; BSR set to: 1
  5105                           ;main.c: 167:                     sampleRate = sampleRate - 160;
  5106  0004A0  2BD2               	incf	main@timeout& (0+255),f,b
  5107  0004A2  0E1F               	movlw	31
  5108  0004A4  19D2               	xorwf	main@timeout& (0+255),w,b
  5109  0004A6  A4D8               	btfss	status,2,c
  5110  0004A8  EF58  F002         	goto	u6341
  5111  0004AC  EF5A  F002         	goto	u6340
  5112  0004B0                     u6341:
  5113  0004B0  EF5C  F002         	goto	l6190
  5114  0004B4                     u6340:
  5115  0004B4  EF65  F002         	goto	l6192
  5116  0004B8                     l6190:
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;main.c: 169:                     sampleRate = sampleRate;
  5120  0004B8  0E05               	movlw	5
  5121  0004BA  19F6               	xorwf	main@status& (0+255),w,b
  5122  0004BC  A4D8               	btfss	status,2,c
  5123  0004BE  EF63  F002         	goto	u6351
  5124  0004C2  EF65  F002         	goto	u6350
  5125  0004C6                     u6351:
  5126  0004C6  EF36  F002         	goto	l6182
  5127  0004CA                     u6350:
  5128  0004CA                     l6192:
  5129                           
  5130                           ; BSR set to: 1
  5131                           ;main.c: 170:                 }
  5132  0004CA  0EF2               	movlw	low STR_34
  5133  0004CC  0100               	movlb	0	; () banked
  5134  0004CE  6FA3               	movwf	printf@fmt& (0+255),b
  5135  0004D0  0EFF               	movlw	high STR_34
  5136  0004D2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5137  0004D4  C1D7  F0A5         	movff	main@j,?_printf+2
  5138  0004D8  6BA6               	clrf	(?_printf+3)& (0+255),b
  5139  0004DA  ECE6  F01B         	call	_printf	;wreg free
  5140  0004DE                     
  5141                           ;main.c: 171:                 break;
  5142  0004DE  0EC8               	movlw	200
  5143  0004E0  6E14               	movwf	(microSecondDelay@us+1)^0,c
  5144  0004E2  0E00               	movlw	0
  5145  0004E4  6E13               	movwf	microSecondDelay@us^0,c
  5146  0004E6  ECBB  F01A         	call	_microSecondDelay	;wreg free
  5147  0004EA                     
  5148                           ;main.c: 172: 
  5149  0004EA  C180  F013         	movff	main@writeAddress,incrementAddress@sdCardAddress
  5150  0004EE  C181  F014         	movff	main@writeAddress+1,incrementAddress@sdCardAddress+1
  5151  0004F2  C182  F015         	movff	main@writeAddress+2,incrementAddress@sdCardAddress+2
  5152  0004F6  C183  F016         	movff	main@writeAddress+3,incrementAddress@sdCardAddress+3
  5153  0004FA  EC38  F01A         	call	_incrementAddress	;wreg free
  5154  0004FE  C013  F180         	movff	?_incrementAddress,main@writeAddress
  5155  000502  C014  F181         	movff	?_incrementAddress+1,main@writeAddress+1
  5156  000506  C015  F182         	movff	?_incrementAddress+2,main@writeAddress+2
  5157  00050A  C016  F183         	movff	?_incrementAddress+3,main@writeAddress+3
  5158  00050E                     
  5159                           ;main.c: 173:             case 'P': {
  5160  00050E  0101               	movlb	1	; () banked
  5161  000510  2BD7               	incf	main@j& (0+255),f,b
  5162  000512                     l6200:
  5163                           
  5164                           ; BSR set to: 1
  5165  000512  0E80               	movlw	128
  5166  000514  61D7               	cpfslt	main@j& (0+255),b
  5167  000516  EF8F  F002         	goto	u6361
  5168  00051A  EF91  F002         	goto	u6360
  5169  00051E                     u6361:
  5170  00051E  EF9B  F002         	goto	l6204
  5171  000522                     u6360:
  5172  000522                     
  5173                           ; BSR set to: 1
  5174  000522  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  5175  000526  0900               	iorlw	0
  5176  000528  B4D8               	btfsc	status,2,c
  5177  00052A  EF99  F002         	goto	u6371
  5178  00052E  EF9B  F002         	goto	u6370
  5179  000532                     u6371:
  5180  000532  EF03  F002         	goto	l6166
  5181  000536                     u6370:
  5182  000536                     l6204:
  5183                           
  5184                           ;main.c: 174:                 if (writeStartAddress == writeEndAddress)
  5185  000536  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  5186  00053A  0900               	iorlw	0
  5187  00053C  B4D8               	btfsc	status,2,c
  5188  00053E  EFA3  F002         	goto	u6381
  5189  000542  EFA5  F002         	goto	u6380
  5190  000546                     u6381:
  5191  000546  EFA7  F002         	goto	l6208
  5192  00054A                     u6380:
  5193  00054A                     
  5194                           ;main.c: 175:                     break;
  5195  00054A  ECFA  F01B         	call	_EUSART1_Read	;wreg free
  5196  00054E                     l6208:
  5197                           
  5198                           ;main.c: 177:                 buffer1Full = 0;
  5199  00054E  C180  F1EE         	movff	main@writeAddress,main@writeEndAddress
  5200  000552  C181  F1EF         	movff	main@writeAddress+1,main@writeEndAddress+1
  5201  000556  C182  F1F0         	movff	main@writeAddress+2,main@writeEndAddress+2
  5202  00055A  C183  F1F1         	movff	main@writeAddress+3,main@writeEndAddress+3
  5203  00055E                     
  5204                           ;main.c: 179:                 doPlayback = 1;
  5205  00055E  0E63               	movlw	low STR_35
  5206  000560  0100               	movlb	0	; () banked
  5207  000562  6FA3               	movwf	printf@fmt& (0+255),b
  5208  000564  0EFD               	movlw	high STR_35
  5209  000566  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5210  000568  0101               	movlb	1	; () banked
  5211  00056A  51EA               	movf	main@writeStartAddress& (0+255),w,b
  5212  00056C  5DEE               	subwf	main@writeEndAddress& (0+255),w,b
  5213  00056E  0100               	movlb	0	; () banked
  5214  000570  6FB7               	movwf	??_main& (0+255),b
  5215  000572  0101               	movlb	1	; () banked
  5216  000574  51EB               	movf	(main@writeStartAddress+1)& (0+255),w,b
  5217  000576  59EF               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  5218  000578  0100               	movlb	0	; () banked
  5219  00057A  6FB8               	movwf	(??_main+1)& (0+255),b
  5220  00057C  0101               	movlb	1	; () banked
  5221  00057E  51EC               	movf	(main@writeStartAddress+2)& (0+255),w,b
  5222  000580  59F0               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  5223  000582  0100               	movlb	0	; () banked
  5224  000584  6FB9               	movwf	(??_main+2)& (0+255),b
  5225  000586  0101               	movlb	1	; () banked
  5226  000588  51ED               	movf	(main@writeStartAddress+3)& (0+255),w,b
  5227  00058A  59F1               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  5228  00058C  0100               	movlb	0	; () banked
  5229  00058E  6FBA               	movwf	(??_main+3)& (0+255),b
  5230  000590  0E0A               	movlw	10
  5231  000592  EFD0  F002         	goto	u6390
  5232  000596                     u6395:
  5233  000596  90D8               	bcf	status,0,c
  5234  000598  33BA               	rrcf	(??_main+3)& (0+255),f,b
  5235  00059A  33B9               	rrcf	(??_main+2)& (0+255),f,b
  5236  00059C  33B8               	rrcf	(??_main+1)& (0+255),f,b
  5237  00059E  33B7               	rrcf	??_main& (0+255),f,b
  5238  0005A0                     u6390:
  5239  0005A0  2EE8               	decfsz	wreg,f,c
  5240  0005A2  EFCB  F002         	goto	u6395
  5241  0005A6  C0B7  F0A5         	movff	??_main,?_printf+2
  5242  0005AA  C0B8  F0A6         	movff	??_main+1,?_printf+3
  5243  0005AE  C0B9  F0A7         	movff	??_main+2,?_printf+4
  5244  0005B2  C0BA  F0A8         	movff	??_main+3,?_printf+5
  5245  0005B6  ECE6  F01B         	call	_printf	;wreg free
  5246  0005BA                     
  5247                           ;main.c: 180:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5248  0005BA  C1EA  F0AD         	movff	main@writeStartAddress,printAddress@address
  5249  0005BE  C1EB  F0AE         	movff	main@writeStartAddress+1,printAddress@address+1
  5250  0005C2  C1EC  F0AF         	movff	main@writeStartAddress+2,printAddress@address+2
  5251  0005C6  C1ED  F0B0         	movff	main@writeStartAddress+3,printAddress@address+3
  5252  0005CA  EC74  F019         	call	_printAddress	;wreg free
  5253  0005CE                     
  5254                           ;main.c: 181:                     while (buffer1Full);
  5255  0005CE  C1EE  F0AD         	movff	main@writeEndAddress,printAddress@address
  5256  0005D2  C1EF  F0AE         	movff	main@writeEndAddress+1,printAddress@address+1
  5257  0005D6  C1F0  F0AF         	movff	main@writeEndAddress+2,printAddress@address+2
  5258  0005DA  C1F1  F0B0         	movff	main@writeEndAddress+3,printAddress@address+3
  5259  0005DE  EC74  F019         	call	_printAddress	;wreg free
  5260                           
  5261                           ;main.c: 182:                     SDCARD_ReadBlock(readAddress, sdCardBuffer1);;main.c: 
      +                          183:                     buffer1Full = 1;
  5262  0005E2  EF8C  F000         	goto	l6128
  5263  0005E6                     l6216:
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;main.c: 186:                         break;
  5267  0005E6  0EA0               	movlw	160
  5268  0005E8  25C2               	addwf	_sampleRate& (0+255),w,b
  5269  0005EA  6FC2               	movwf	_sampleRate& (0+255),b
  5270  0005EC  0E00               	movlw	0
  5271  0005EE  21C3               	addwfc	(_sampleRate+1)& (0+255),w,b
  5272  0005F0  6FC3               	movwf	(_sampleRate+1)& (0+255),b
  5273                           
  5274                           ;main.c: 187:                     while (buffer2Full);
  5275  0005F2  EF8C  F000         	goto	l6128
  5276  0005F6                     l6218:
  5277                           
  5278                           ; BSR set to: 0
  5279                           ;main.c: 190:                     readAddress = incrementAddress(readAddress);
  5280  0005F6  0E41               	movlw	65
  5281  0005F8  5DC2               	subwf	_sampleRate& (0+255),w,b
  5282  0005FA  0E01               	movlw	1
  5283  0005FC  59C3               	subwfb	(_sampleRate+1)& (0+255),w,b
  5284  0005FE  A0D8               	btfss	status,0,c
  5285  000600  EF04  F003         	goto	u6401
  5286  000604  EF06  F003         	goto	u6400
  5287  000608                     u6401:
  5288  000608  EF8C  F000         	goto	l6128
  5289  00060C                     u6400:
  5290  00060C                     
  5291                           ; BSR set to: 0
  5292                           ;main.c: 191:                 }
  5293  00060C  0E60               	movlw	96
  5294  00060E  25C2               	addwf	_sampleRate& (0+255),w,b
  5295  000610  6FC2               	movwf	_sampleRate& (0+255),b
  5296  000612  0EFF               	movlw	255
  5297  000614  21C3               	addwfc	(_sampleRate+1)& (0+255),w,b
  5298  000616  6FC3               	movwf	(_sampleRate+1)& (0+255),b
  5299                           
  5300                           ;main.c: 192:                 stopPlayback = 1;
  5301  000618  EF8C  F000         	goto	l6128
  5302  00061C                     l6222:
  5303                           
  5304                           ; BSR set to: 0
  5305                           ;main.c: 198:             break;
  5306  00061C  0101               	movlb	1	; () banked
  5307  00061E  51EE               	movf	main@writeEndAddress& (0+255),w,b
  5308  000620  19EA               	xorwf	main@writeStartAddress& (0+255),w,b
  5309  000622  E10D               	bnz	u6411
  5310  000624  51EF               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5311  000626  19EB               	xorwf	(main@writeStartAddress+1)& (0+255),w,b
  5312  000628  E10A               	bnz	u6411
  5313  00062A  51F0               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5314  00062C  19EC               	xorwf	(main@writeStartAddress+2)& (0+255),w,b
  5315  00062E  E107               	bnz	u6411
  5316  000630  51F1               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5317  000632  19ED               	xorwf	(main@writeStartAddress+3)& (0+255),w,b
  5318  000634  A4D8               	btfss	status,2,c
  5319  000636  EF1F  F003         	goto	u6411
  5320  00063A  EF21  F003         	goto	u6410
  5321  00063E                     u6411:
  5322  00063E  EF23  F003         	goto	l499
  5323  000642                     u6410:
  5324  000642  EF8C  F000         	goto	l6128
  5325  000646                     l499:
  5326                           
  5327                           ; BSR set to: 1
  5328                           ;main.c: 200:             case 'W': {
  5329  000646  C1EA  F1E6         	movff	main@writeStartAddress,main@readAddress
  5330  00064A  C1EB  F1E7         	movff	main@writeStartAddress+1,main@readAddress+1
  5331  00064E  C1EC  F1E8         	movff	main@writeStartAddress+2,main@readAddress+2
  5332  000652  C1ED  F1E9         	movff	main@writeStartAddress+3,main@readAddress+3
  5333  000656                     
  5334                           ; BSR set to: 1
  5335                           ;main.c: 201:                 printf("Press any key to start recording audio and press a
      +                          ny key to stop recording.");
  5336  000656  0E00               	movlw	0
  5337  000658  0100               	movlb	0	; () banked
  5338  00065A  6FBF               	movwf	_buffer1Full& (0+255),b
  5339                           
  5340                           ;main.c: 202:                 while (!(EUSART1_is_rx_ready()));
  5341  00065C  0E00               	movlw	0
  5342  00065E  6FBE               	movwf	_buffer2Full& (0+255),b
  5343                           
  5344                           ;main.c: 203:                 EUSART1_Read();
  5345  000660  0E01               	movlw	1
  5346  000662  6FBC               	movwf	_doPlayback& (0+255),b
  5347                           
  5348                           ;main.c: 204:                 writeStartAddress = sdCardAddress;
  5349  000664  EFA1  F003         	goto	l6248
  5350  000668                     l6228:
  5351  000668  0100               	movlb	0	; () banked
  5352  00066A  51BF               	movf	_buffer1Full& (0+255),w,b
  5353  00066C  A4D8               	btfss	status,2,c
  5354  00066E  EF3B  F003         	goto	u6421
  5355  000672  EF3D  F003         	goto	u6420
  5356  000676                     u6421:
  5357  000676  EF34  F003         	goto	l6228
  5358  00067A                     u6420:
  5359  00067A                     
  5360                           ; BSR set to: 0
  5361                           ;main.c: 206:                 uint8_t failureIndex = 0;
  5362  00067A  C1E6  F014         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5363  00067E  C1E7  F015         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5364  000682  C1E8  F016         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5365  000686  C1E9  F017         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5366  00068A  0EFC               	movlw	low _sdCardBuffer1
  5367  00068C  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5368  00068E  0E05               	movlw	high _sdCardBuffer1
  5369  000690  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5370  000692  EC5B  F018         	call	_SDCARD_ReadBlock	;wreg free
  5371  000696                     
  5372                           ;main.c: 207:                 startCollect = 1;
  5373  000696  0E01               	movlw	1
  5374  000698  0100               	movlb	0	; () banked
  5375  00069A  6FBF               	movwf	_buffer1Full& (0+255),b
  5376  00069C                     
  5377                           ; BSR set to: 0
  5378                           ;main.c: 208: 
  5379  00069C  C1E6  F013         	movff	main@readAddress,incrementAddress@sdCardAddress
  5380  0006A0  C1E7  F014         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5381  0006A4  C1E8  F015         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5382  0006A8  C1E9  F016         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5383  0006AC  EC38  F01A         	call	_incrementAddress	;wreg free
  5384  0006B0  C013  F1E6         	movff	?_incrementAddress,main@readAddress
  5385  0006B4  C014  F1E7         	movff	?_incrementAddress+1,main@readAddress+1
  5386  0006B8  C015  F1E8         	movff	?_incrementAddress+2,main@readAddress+2
  5387  0006BC  C016  F1E9         	movff	?_incrementAddress+3,main@readAddress+3
  5388  0006C0                     
  5389                           ;main.c: 209:                 while (!(EUSART1_is_rx_ready())) {
  5390  0006C0  0101               	movlb	1	; () banked
  5391  0006C2  51EE               	movf	main@writeEndAddress& (0+255),w,b
  5392  0006C4  19E6               	xorwf	main@readAddress& (0+255),w,b
  5393  0006C6  E10D               	bnz	u6431
  5394  0006C8  51EF               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5395  0006CA  19E7               	xorwf	(main@readAddress+1)& (0+255),w,b
  5396  0006CC  E10A               	bnz	u6431
  5397  0006CE  51F0               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5398  0006D0  19E8               	xorwf	(main@readAddress+2)& (0+255),w,b
  5399  0006D2  E107               	bnz	u6431
  5400  0006D4  51F1               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5401  0006D6  19E9               	xorwf	(main@readAddress+3)& (0+255),w,b
  5402  0006D8  A4D8               	btfss	status,2,c
  5403  0006DA  EF71  F003         	goto	u6431
  5404  0006DE  EF73  F003         	goto	u6430
  5405  0006E2                     u6431:
  5406  0006E2  EF75  F003         	goto	l6240
  5407  0006E6                     u6430:
  5408  0006E6  EFBE  F003         	goto	l6252
  5409  0006EA                     l6240:
  5410  0006EA  0100               	movlb	0	; () banked
  5411  0006EC  51BE               	movf	_buffer2Full& (0+255),w,b
  5412  0006EE  A4D8               	btfss	status,2,c
  5413  0006F0  EF7C  F003         	goto	u6441
  5414  0006F4  EF7E  F003         	goto	u6440
  5415  0006F8                     u6441:
  5416  0006F8  EF75  F003         	goto	l6240
  5417  0006FC                     u6440:
  5418  0006FC                     
  5419                           ; BSR set to: 0
  5420                           ;main.c: 212:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5421  0006FC  C1E6  F014         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5422  000700  C1E7  F015         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5423  000704  C1E8  F016         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5424  000708  C1E9  F017         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5425  00070C  0EFC               	movlw	low _sdCardBuffer2
  5426  00070E  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5427  000710  0E03               	movlw	high _sdCardBuffer2
  5428  000712  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5429  000714  EC5B  F018         	call	_SDCARD_ReadBlock	;wreg free
  5430  000718                     
  5431                           ;main.c: 213:                             while ((status = SDCARD_PollWriteComplete()) =
      +                          = 0xFF);
  5432  000718  0E01               	movlw	1
  5433  00071A  0100               	movlb	0	; () banked
  5434  00071C  6FBE               	movwf	_buffer2Full& (0+255),b
  5435  00071E                     
  5436                           ; BSR set to: 0
  5437                           ;main.c: 214:                             if ((status & 0x1F) == 0x5)
  5438  00071E  C1E6  F013         	movff	main@readAddress,incrementAddress@sdCardAddress
  5439  000722  C1E7  F014         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5440  000726  C1E8  F015         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5441  00072A  C1E9  F016         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5442  00072E  EC38  F01A         	call	_incrementAddress	;wreg free
  5443  000732  C013  F1E6         	movff	?_incrementAddress,main@readAddress
  5444  000736  C014  F1E7         	movff	?_incrementAddress+1,main@readAddress+1
  5445  00073A  C015  F1E8         	movff	?_incrementAddress+2,main@readAddress+2
  5446  00073E  C016  F1E9         	movff	?_incrementAddress+3,main@readAddress+3
  5447  000742                     l6248:
  5448                           
  5449                           ;main.c: 204:                 writeStartAddress = sdCardAddress;
  5450  000742  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  5451  000746  0900               	iorlw	0
  5452  000748  A4D8               	btfss	status,2,c
  5453  00074A  EFA9  F003         	goto	u6451
  5454  00074E  EFAB  F003         	goto	u6450
  5455  000752                     u6451:
  5456  000752  EFBE  F003         	goto	l6252
  5457  000756                     u6450:
  5458  000756  0101               	movlb	1	; () banked
  5459  000758  51EE               	movf	main@writeEndAddress& (0+255),w,b
  5460  00075A  19E6               	xorwf	main@readAddress& (0+255),w,b
  5461  00075C  E10D               	bnz	u6461
  5462  00075E  51EF               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5463  000760  19E7               	xorwf	(main@readAddress+1)& (0+255),w,b
  5464  000762  E10A               	bnz	u6461
  5465  000764  51F0               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5466  000766  19E8               	xorwf	(main@readAddress+2)& (0+255),w,b
  5467  000768  E107               	bnz	u6461
  5468  00076A  51F1               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5469  00076C  19E9               	xorwf	(main@readAddress+3)& (0+255),w,b
  5470  00076E  A4D8               	btfss	status,2,c
  5471  000770  EFBC  F003         	goto	u6461
  5472  000774  EFBE  F003         	goto	u6460
  5473  000778                     u6461:
  5474  000778  EF34  F003         	goto	l6228
  5475  00077C                     u6460:
  5476  00077C                     l6252:
  5477                           
  5478                           ;main.c: 216:                         }
  5479  00077C  0E01               	movlw	1
  5480  00077E  6E48               	movwf	_stopPlayback^0,c
  5481  000780                     
  5482                           ;main.c: 217:                         buffer1Full = 0;
  5483  000780  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  5484  000784  0900               	iorlw	0
  5485  000786  B4D8               	btfsc	status,2,c
  5486  000788  EFC8  F003         	goto	u6471
  5487  00078C  EFCA  F003         	goto	u6470
  5488  000790                     u6471:
  5489  000790  EFCC  F003         	goto	l6258
  5490  000794                     u6470:
  5491  000794                     
  5492                           ;main.c: 218:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5493  000794  ECFA  F01B         	call	_EUSART1_Read	;wreg free
  5494  000798                     l6258:
  5495  000798  0100               	movlb	0	; () banked
  5496  00079A  51BC               	movf	_doPlayback& (0+255),w,b
  5497  00079C  A4D8               	btfss	status,2,c
  5498  00079E  EFD3  F003         	goto	u6481
  5499  0007A2  EFD5  F003         	goto	u6480
  5500  0007A6                     u6481:
  5501  0007A6  EFCC  F003         	goto	l6258
  5502  0007AA                     u6480:
  5503  0007AA  EF8C  F000         	goto	l6128
  5504  0007AE                     l6260:
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;main.c: 225:                     }
  5508  0007AE  0E65               	movlw	low STR_36
  5509  0007B0  6FA3               	movwf	printf@fmt& (0+255),b
  5510  0007B2  0EF3               	movlw	high STR_36
  5511  0007B4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  5512  0007B6  ECE6  F01B         	call	_printf	;wreg free
  5513  0007BA                     l6262:
  5514  0007BA  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  5515  0007BE  0900               	iorlw	0
  5516  0007C0  B4D8               	btfsc	status,2,c
  5517  0007C2  EFE5  F003         	goto	u6491
  5518  0007C6  EFE7  F003         	goto	u6490
  5519  0007CA                     u6491:
  5520  0007CA  EFDD  F003         	goto	l6262
  5521  0007CE                     u6490:
  5522  0007CE                     
  5523                           ;main.c: 227:                         for (uint8_t timeout = 0; timeout < 10; timeout++)
      +                           {
  5524  0007CE  ECFA  F01B         	call	_EUSART1_Read	;wreg free
  5525  0007D2                     
  5526                           ;main.c: 228:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  5527  0007D2  C1F2  F1EA         	movff	main@sdCardAddress,main@writeStartAddress
  5528  0007D6  C1F3  F1EB         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5529  0007DA  C1F4  F1EC         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5530  0007DE  C1F5  F1ED         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5531  0007E2                     
  5532                           ;main.c: 229:                             while ((status = SDCARD_PollWriteComplete()) =
      +                          = 0xFF);
  5533  0007E2  C1F2  F1F8         	movff	main@sdCardAddress,main@writeAddress_1291
  5534  0007E6  C1F3  F1F9         	movff	main@sdCardAddress+1,main@writeAddress_1291+1
  5535  0007EA  C1F4  F1FA         	movff	main@sdCardAddress+2,main@writeAddress_1291+2
  5536  0007EE  C1F5  F1FB         	movff	main@sdCardAddress+3,main@writeAddress_1291+3
  5537  0007F2                     
  5538                           ;main.c: 230:                             if ((status & 0x1F) == 0x5)
  5539  0007F2  0E00               	movlw	0
  5540  0007F4  0101               	movlb	1	; () banked
  5541  0007F6  6FF7               	movwf	main@failureIndex& (0+255),b
  5542  0007F8                     
  5543                           ; BSR set to: 1
  5544                           ;main.c: 231:                                 break;
  5545  0007F8  0E01               	movlw	1
  5546  0007FA  6E4A               	movwf	_startCollect^0,c
  5547                           
  5548                           ;main.c: 233:                         buffer2Full = 0;
  5549  0007FC  EF22  F005         	goto	l6346
  5550  000800                     l6274:
  5551                           
  5552                           ;main.c: 234:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5553  000800  0100               	movlb	0	; () banked
  5554  000802  51BF               	movf	_buffer1Full& (0+255),w,b
  5555  000804  B4D8               	btfsc	status,2,c
  5556  000806  EF07  F004         	goto	u6501
  5557  00080A  EF09  F004         	goto	u6500
  5558  00080E                     u6501:
  5559  00080E  EF91  F004         	goto	l6310
  5560  000812                     u6500:
  5561  000812                     
  5562                           ; BSR set to: 0
  5563                           ;main.c: 235:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5564  000812  0E00               	movlw	0
  5565  000814  0101               	movlb	1	; () banked
  5566  000816  6FD8               	movwf	main@timeout_1293& (0+255),b
  5567  000818                     l6278:
  5568                           
  5569                           ; BSR set to: 1
  5570  000818  0E09               	movlw	9
  5571  00081A  65D8               	cpfsgt	main@timeout_1293& (0+255),b
  5572  00081C  EF12  F004         	goto	u6511
  5573  000820  EF14  F004         	goto	u6510
  5574  000824                     u6511:
  5575  000824  EF16  F004         	goto	l6282
  5576  000828                     u6510:
  5577  000828  EF3F  F004         	goto	l6294
  5578  00082C                     l6282:
  5579                           
  5580                           ; BSR set to: 1
  5581                           ;main.c: 236:                             writeFailureStatus[failureIndex] = status;
  5582  00082C  C1F8  F014         	movff	main@writeAddress_1291,SDCARD_WriteBlock@addr
  5583  000830  C1F9  F015         	movff	main@writeAddress_1291+1,SDCARD_WriteBlock@addr+1
  5584  000834  C1FA  F016         	movff	main@writeAddress_1291+2,SDCARD_WriteBlock@addr+2
  5585  000838  C1FB  F017         	movff	main@writeAddress_1291+3,SDCARD_WriteBlock@addr+3
  5586  00083C  0EFC               	movlw	low _sdCardBuffer1
  5587  00083E  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5588  000840  0E05               	movlw	high _sdCardBuffer1
  5589  000842  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5590  000844  ECF3  F018         	call	_SDCARD_WriteBlock	;wreg free
  5591  000848                     l6284:
  5592  000848  ECF7  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5593  00084C  0101               	movlb	1	; () banked
  5594  00084E  6FF6               	movwf	main@status& (0+255),b
  5595  000850  29F6               	incf	main@status& (0+255),w,b
  5596  000852  B4D8               	btfsc	status,2,c
  5597  000854  EF2E  F004         	goto	u6521
  5598  000858  EF30  F004         	goto	u6520
  5599  00085C                     u6521:
  5600  00085C  EF24  F004         	goto	l6284
  5601  000860                     u6520:
  5602  000860                     
  5603                           ; BSR set to: 1
  5604                           ;main.c: 238:                         }
  5605  000860  51F6               	movf	main@status& (0+255),w,b
  5606  000862  0B1F               	andlw	31
  5607  000864  0A05               	xorlw	5
  5608  000866  A4D8               	btfss	status,2,c
  5609  000868  EF38  F004         	goto	u6531
  5610  00086C  EF3A  F004         	goto	u6530
  5611  000870                     u6531:
  5612  000870  EF3C  F004         	goto	l6290
  5613  000874                     u6530:
  5614  000874  EF3F  F004         	goto	l6294
  5615  000878                     l6290:
  5616                           
  5617                           ; BSR set to: 1
  5618                           ;main.c: 240:                         microSecondDelay(sampleRate >> 2);
  5619  000878  2BD8               	incf	main@timeout_1293& (0+255),f,b
  5620  00087A  EF0C  F004         	goto	l6278
  5621  00087E                     l6294:
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;main.c: 241:                     }
  5625  00087E  0E00               	movlw	0
  5626  000880  0100               	movlb	0	; () banked
  5627  000882  6FBF               	movwf	_buffer1Full& (0+255),b
  5628  000884                     
  5629                           ; BSR set to: 0
  5630                           ;main.c: 242:                 }
  5631  000884  0101               	movlb	1	; () banked
  5632  000886  51F6               	movf	main@status& (0+255),w,b
  5633  000888  0B1F               	andlw	31
  5634  00088A  0A05               	xorlw	5
  5635  00088C  B4D8               	btfsc	status,2,c
  5636  00088E  EF4B  F004         	goto	u6541
  5637  000892  EF4D  F004         	goto	u6540
  5638  000896                     u6541:
  5639  000896  EF6E  F004         	goto	l6306
  5640  00089A                     u6540:
  5641  00089A                     
  5642                           ; BSR set to: 1
  5643  00089A  0E80               	movlw	128
  5644  00089C  61F7               	cpfslt	main@failureIndex& (0+255),b
  5645  00089E  EF53  F004         	goto	u6551
  5646  0008A2  EF55  F004         	goto	u6550
  5647  0008A6                     u6551:
  5648  0008A6  EF6E  F004         	goto	l6306
  5649  0008AA                     u6550:
  5650  0008AA                     
  5651                           ; BSR set to: 1
  5652                           ;main.c: 243:                 EUSART1_Read();
  5653  0008AA  51F7               	movf	main@failureIndex& (0+255),w,b
  5654  0008AC  0D04               	mullw	4
  5655  0008AE  0EFC               	movlw	low _writeFailureTable
  5656  0008B0  24F3               	addwf	243,w,c
  5657  0008B2  6ED9               	movwf	fsr2l,c
  5658  0008B4  0E01               	movlw	high _writeFailureTable
  5659  0008B6  20F4               	addwfc	prodh,w,c
  5660  0008B8  6EDA               	movwf	fsr2h,c
  5661  0008BA  C1F8  FFDE         	movff	main@writeAddress_1291,postinc2
  5662  0008BE  C1F9  FFDE         	movff	main@writeAddress_1291+1,postinc2
  5663  0008C2  C1FA  FFDE         	movff	main@writeAddress_1291+2,postinc2
  5664  0008C6  C1FB  FFDE         	movff	main@writeAddress_1291+3,postinc2
  5665  0008CA                     
  5666                           ; BSR set to: 1
  5667                           ;main.c: 244:                 stopCollect = 1;
  5668  0008CA  0E00               	movlw	low _writeFailureStatus
  5669  0008CC  25F7               	addwf	main@failureIndex& (0+255),w,b
  5670  0008CE  6ED9               	movwf	fsr2l,c
  5671  0008D0  6ADA               	clrf	fsr2h,c
  5672  0008D2  0E01               	movlw	high _writeFailureStatus
  5673  0008D4  22DA               	addwfc	fsr2h,f,c
  5674  0008D6  C1F6  FFDF         	movff	main@status,indf2
  5675  0008DA                     
  5676                           ; BSR set to: 1
  5677                           ;main.c: 245: 
  5678  0008DA  2BF7               	incf	main@failureIndex& (0+255),f,b
  5679  0008DC                     l6306:
  5680                           
  5681                           ; BSR set to: 1
  5682                           ;main.c: 247:                     if (buffer1Full) {
  5683  0008DC  C1F8  F013         	movff	main@writeAddress_1291,incrementAddress@sdCardAddress
  5684  0008E0  C1F9  F014         	movff	main@writeAddress_1291+1,incrementAddress@sdCardAddress+1
  5685  0008E4  C1FA  F015         	movff	main@writeAddress_1291+2,incrementAddress@sdCardAddress+2
  5686  0008E8  C1FB  F016         	movff	main@writeAddress_1291+3,incrementAddress@sdCardAddress+3
  5687  0008EC  EC38  F01A         	call	_incrementAddress	;wreg free
  5688  0008F0  C013  F1F8         	movff	?_incrementAddress,main@writeAddress_1291
  5689  0008F4  C014  F1F9         	movff	?_incrementAddress+1,main@writeAddress_1291+1
  5690  0008F8  C015  F1FA         	movff	?_incrementAddress+2,main@writeAddress_1291+2
  5691  0008FC  C016  F1FB         	movff	?_incrementAddress+3,main@writeAddress_1291+3
  5692  000900                     
  5693                           ;main.c: 248:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5694  000900  C0C2  F0B7         	movff	_sampleRate,??_main
  5695  000904  C0C3  F0B8         	movff	_sampleRate+1,??_main+1
  5696  000908  0100               	movlb	0	; () banked
  5697  00090A  90D8               	bcf	status,0,c
  5698  00090C  33B8               	rrcf	(??_main+1)& (0+255),f,b
  5699  00090E  33B7               	rrcf	??_main& (0+255),f,b
  5700  000910  90D8               	bcf	status,0,c
  5701  000912  33B8               	rrcf	(??_main+1)& (0+255),f,b
  5702  000914  33B7               	rrcf	??_main& (0+255),f,b
  5703  000916  C0B7  F013         	movff	??_main,microSecondDelay@us
  5704  00091A  C0B8  F014         	movff	??_main+1,microSecondDelay@us+1
  5705  00091E  ECBB  F01A         	call	_microSecondDelay	;wreg free
  5706  000922                     l6310:
  5707                           
  5708                           ;main.c: 250:                         if ((status & 0x1F) != 0x5) {
  5709  000922  0100               	movlb	0	; () banked
  5710  000924  51BE               	movf	_buffer2Full& (0+255),w,b
  5711  000926  B4D8               	btfsc	status,2,c
  5712  000928  EF98  F004         	goto	u6561
  5713  00092C  EF9A  F004         	goto	u6560
  5714  000930                     u6561:
  5715  000930  EF22  F005         	goto	l6346
  5716  000934                     u6560:
  5717  000934                     
  5718                           ; BSR set to: 0
  5719                           ;main.c: 251:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5720  000934  0E00               	movlw	0
  5721  000936  0101               	movlb	1	; () banked
  5722  000938  6FD9               	movwf	main@timeout_1294& (0+255),b
  5723  00093A                     l6314:
  5724                           
  5725                           ; BSR set to: 1
  5726  00093A  0E09               	movlw	9
  5727  00093C  65D9               	cpfsgt	main@timeout_1294& (0+255),b
  5728  00093E  EFA3  F004         	goto	u6571
  5729  000942  EFA5  F004         	goto	u6570
  5730  000946                     u6571:
  5731  000946  EFA7  F004         	goto	l6318
  5732  00094A                     u6570:
  5733  00094A  EFD0  F004         	goto	l6330
  5734  00094E                     l6318:
  5735                           
  5736                           ; BSR set to: 1
  5737                           ;main.c: 252:                             while ((status = SDCARD_PollWriteComplete()) =
      +                          = 0xFF);
  5738  00094E  C1F8  F014         	movff	main@writeAddress_1291,SDCARD_WriteBlock@addr
  5739  000952  C1F9  F015         	movff	main@writeAddress_1291+1,SDCARD_WriteBlock@addr+1
  5740  000956  C1FA  F016         	movff	main@writeAddress_1291+2,SDCARD_WriteBlock@addr+2
  5741  00095A  C1FB  F017         	movff	main@writeAddress_1291+3,SDCARD_WriteBlock@addr+3
  5742  00095E  0EFC               	movlw	low _sdCardBuffer2
  5743  000960  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5744  000962  0E03               	movlw	high _sdCardBuffer2
  5745  000964  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5746  000966  ECF3  F018         	call	_SDCARD_WriteBlock	;wreg free
  5747  00096A                     l6320:
  5748  00096A  ECF7  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5749  00096E  0101               	movlb	1	; () banked
  5750  000970  6FF6               	movwf	main@status& (0+255),b
  5751  000972  29F6               	incf	main@status& (0+255),w,b
  5752  000974  B4D8               	btfsc	status,2,c
  5753  000976  EFBF  F004         	goto	u6581
  5754  00097A  EFC1  F004         	goto	u6580
  5755  00097E                     u6581:
  5756  00097E  EFB5  F004         	goto	l6320
  5757  000982                     u6580:
  5758  000982                     
  5759                           ; BSR set to: 1
  5760                           ;main.c: 254:                         buffer1Full = 0;
  5761  000982  51F6               	movf	main@status& (0+255),w,b
  5762  000984  0B1F               	andlw	31
  5763  000986  0A05               	xorlw	5
  5764  000988  A4D8               	btfss	status,2,c
  5765  00098A  EFC9  F004         	goto	u6591
  5766  00098E  EFCB  F004         	goto	u6590
  5767  000992                     u6591:
  5768  000992  EFCD  F004         	goto	l6326
  5769  000996                     u6590:
  5770  000996  EFD0  F004         	goto	l6330
  5771  00099A                     l6326:
  5772                           
  5773                           ; BSR set to: 1
  5774                           ;main.c: 256:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5775  00099A  2BD9               	incf	main@timeout_1294& (0+255),f,b
  5776  00099C  EF9D  F004         	goto	l6314
  5777  0009A0                     l6330:
  5778                           
  5779                           ; BSR set to: 1
  5780                           ;main.c: 257:                             writeFailureStatus[failureIndex] = status;
  5781  0009A0  0E00               	movlw	0
  5782  0009A2  0100               	movlb	0	; () banked
  5783  0009A4  6FBE               	movwf	_buffer2Full& (0+255),b
  5784  0009A6                     
  5785                           ; BSR set to: 0
  5786                           ;main.c: 258:                             failureIndex++;
  5787  0009A6  0101               	movlb	1	; () banked
  5788  0009A8  51F6               	movf	main@status& (0+255),w,b
  5789  0009AA  0B1F               	andlw	31
  5790  0009AC  0A05               	xorlw	5
  5791  0009AE  B4D8               	btfsc	status,2,c
  5792  0009B0  EFDC  F004         	goto	u6601
  5793  0009B4  EFDE  F004         	goto	u6600
  5794  0009B8                     u6601:
  5795  0009B8  EFFF  F004         	goto	l6342
  5796  0009BC                     u6600:
  5797  0009BC                     
  5798                           ; BSR set to: 1
  5799  0009BC  0E80               	movlw	128
  5800  0009BE  61F7               	cpfslt	main@failureIndex& (0+255),b
  5801  0009C0  EFE4  F004         	goto	u6611
  5802  0009C4  EFE6  F004         	goto	u6610
  5803  0009C8                     u6611:
  5804  0009C8  EFFF  F004         	goto	l6342
  5805  0009CC                     u6610:
  5806  0009CC                     
  5807                           ; BSR set to: 1
  5808                           ;main.c: 259:                         }
  5809  0009CC  51F7               	movf	main@failureIndex& (0+255),w,b
  5810  0009CE  0D04               	mullw	4
  5811  0009D0  0EFC               	movlw	low _writeFailureTable
  5812  0009D2  24F3               	addwf	243,w,c
  5813  0009D4  6ED9               	movwf	fsr2l,c
  5814  0009D6  0E01               	movlw	high _writeFailureTable
  5815  0009D8  20F4               	addwfc	prodh,w,c
  5816  0009DA  6EDA               	movwf	fsr2h,c
  5817  0009DC  C1F8  FFDE         	movff	main@writeAddress_1291,postinc2
  5818  0009E0  C1F9  FFDE         	movff	main@writeAddress_1291+1,postinc2
  5819  0009E4  C1FA  FFDE         	movff	main@writeAddress_1291+2,postinc2
  5820  0009E8  C1FB  FFDE         	movff	main@writeAddress_1291+3,postinc2
  5821  0009EC                     
  5822                           ; BSR set to: 1
  5823                           ;main.c: 260:                         writeAddress = incrementAddress(writeAddress);
  5824  0009EC  0E00               	movlw	low _writeFailureStatus
  5825  0009EE  25F7               	addwf	main@failureIndex& (0+255),w,b
  5826  0009F0  6ED9               	movwf	fsr2l,c
  5827  0009F2  6ADA               	clrf	fsr2h,c
  5828  0009F4  0E01               	movlw	high _writeFailureStatus
  5829  0009F6  22DA               	addwfc	fsr2h,f,c
  5830  0009F8  C1F6  FFDF         	movff	main@status,indf2
  5831  0009FC                     
  5832                           ; BSR set to: 1
  5833                           ;main.c: 261:                     }
  5834  0009FC  2BF7               	incf	main@failureIndex& (0+255),f,b
  5835  0009FE                     l6342:
  5836                           
  5837                           ; BSR set to: 1
  5838                           ;main.c: 263:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  5839  0009FE  C1F8  F013         	movff	main@writeAddress_1291,incrementAddress@sdCardAddress
  5840  000A02  C1F9  F014         	movff	main@writeAddress_1291+1,incrementAddress@sdCardAddress+1
  5841  000A06  C1FA  F015         	movff	main@writeAddress_1291+2,incrementAddress@sdCardAddress+2
  5842  000A0A  C1FB  F016         	movff	main@writeAddress_1291+3,incrementAddress@sdCardAddress+3
  5843  000A0E  EC38  F01A         	call	_incrementAddress	;wreg free
  5844  000A12  C013  F1F8         	movff	?_incrementAddress,main@writeAddress_1291
  5845  000A16  C014  F1F9         	movff	?_incrementAddress+1,main@writeAddress_1291+1
  5846  000A1A  C015  F1FA         	movff	?_incrementAddress+2,main@writeAddress_1291+2
  5847  000A1E  C016  F1FB         	movff	?_incrementAddress+3,main@writeAddress_1291+3
  5848  000A22                     
  5849                           ;main.c: 264:                         while ((status = SDCARD_PollWriteComplete()) == 0x
      +                          FF);
  5850  000A22  C0C2  F0B7         	movff	_sampleRate,??_main
  5851  000A26  C0C3  F0B8         	movff	_sampleRate+1,??_main+1
  5852  000A2A  0100               	movlb	0	; () banked
  5853  000A2C  90D8               	bcf	status,0,c
  5854  000A2E  33B8               	rrcf	(??_main+1)& (0+255),f,b
  5855  000A30  33B7               	rrcf	??_main& (0+255),f,b
  5856  000A32  90D8               	bcf	status,0,c
  5857  000A34  33B8               	rrcf	(??_main+1)& (0+255),f,b
  5858  000A36  33B7               	rrcf	??_main& (0+255),f,b
  5859  000A38  C0B7  F013         	movff	??_main,microSecondDelay@us
  5860  000A3C  C0B8  F014         	movff	??_main+1,microSecondDelay@us+1
  5861  000A40  ECBB  F01A         	call	_microSecondDelay	;wreg free
  5862  000A44                     l6346:
  5863                           
  5864                           ;main.c: 233:                         buffer2Full = 0;
  5865  000A44  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  5866  000A48  0900               	iorlw	0
  5867  000A4A  B4D8               	btfsc	status,2,c
  5868  000A4C  EF2A  F005         	goto	u6621
  5869  000A50  EF2C  F005         	goto	u6620
  5870  000A54                     u6621:
  5871  000A54  EF00  F004         	goto	l6274
  5872  000A58                     u6620:
  5873  000A58                     
  5874                           ;main.c: 267:                             while ((status = SDCARD_PollWriteComplete()) =
      +                          = 0xFF);
  5875  000A58  ECFA  F01B         	call	_EUSART1_Read	;wreg free
  5876  000A5C                     
  5877                           ;main.c: 268:                         }
  5878  000A5C  0E01               	movlw	1
  5879  000A5E  6E49               	movwf	_stopCollect^0,c
  5880                           
  5881                           ;main.c: 270:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5882  000A60  EF41  F006         	goto	l6404
  5883  000A64                     l6352:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;main.c: 271:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5887  000A64  51BF               	movf	_buffer1Full& (0+255),w,b
  5888  000A66  B4D8               	btfsc	status,2,c
  5889  000A68  EF38  F005         	goto	u6631
  5890  000A6C  EF3A  F005         	goto	u6630
  5891  000A70                     u6631:
  5892  000A70  EFB9  F005         	goto	l6378
  5893  000A74                     u6630:
  5894  000A74                     
  5895                           ; BSR set to: 0
  5896                           ;main.c: 272:                             writeFailureStatus[failureIndex] = status;
  5897  000A74  C1F8  F014         	movff	main@writeAddress_1291,SDCARD_WriteBlock@addr
  5898  000A78  C1F9  F015         	movff	main@writeAddress_1291+1,SDCARD_WriteBlock@addr+1
  5899  000A7C  C1FA  F016         	movff	main@writeAddress_1291+2,SDCARD_WriteBlock@addr+2
  5900  000A80  C1FB  F017         	movff	main@writeAddress_1291+3,SDCARD_WriteBlock@addr+3
  5901  000A84  0EFC               	movlw	low _sdCardBuffer1
  5902  000A86  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5903  000A88  0E05               	movlw	high _sdCardBuffer1
  5904  000A8A  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5905  000A8C  ECF3  F018         	call	_SDCARD_WriteBlock	;wreg free
  5906  000A90                     l6356:
  5907  000A90  ECF7  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5908  000A94  0101               	movlb	1	; () banked
  5909  000A96  6FF6               	movwf	main@status& (0+255),b
  5910  000A98  29F6               	incf	main@status& (0+255),w,b
  5911  000A9A  B4D8               	btfsc	status,2,c
  5912  000A9C  EF52  F005         	goto	u6641
  5913  000AA0  EF54  F005         	goto	u6640
  5914  000AA4                     u6641:
  5915  000AA4  EF48  F005         	goto	l6356
  5916  000AA8                     u6640:
  5917  000AA8                     
  5918                           ; BSR set to: 1
  5919                           ;main.c: 274:                         }
  5920  000AA8  51F6               	movf	main@status& (0+255),w,b
  5921  000AAA  0B1F               	andlw	31
  5922  000AAC  0A05               	xorlw	5
  5923  000AAE  B4D8               	btfsc	status,2,c
  5924  000AB0  EF5C  F005         	goto	u6651
  5925  000AB4  EF5E  F005         	goto	u6650
  5926  000AB8                     u6651:
  5927  000AB8  EF78  F005         	goto	l6364
  5928  000ABC                     u6650:
  5929  000ABC                     
  5930                           ; BSR set to: 1
  5931                           ;main.c: 275:                         writeAddress = incrementAddress(writeAddress);
  5932  000ABC  C1F8  F014         	movff	main@writeAddress_1291,SDCARD_WriteBlock@addr
  5933  000AC0  C1F9  F015         	movff	main@writeAddress_1291+1,SDCARD_WriteBlock@addr+1
  5934  000AC4  C1FA  F016         	movff	main@writeAddress_1291+2,SDCARD_WriteBlock@addr+2
  5935  000AC8  C1FB  F017         	movff	main@writeAddress_1291+3,SDCARD_WriteBlock@addr+3
  5936  000ACC  0EFC               	movlw	low _sdCardBuffer1
  5937  000ACE  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5938  000AD0  0E05               	movlw	high _sdCardBuffer1
  5939  000AD2  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5940  000AD4  ECF3  F018         	call	_SDCARD_WriteBlock	;wreg free
  5941  000AD8                     l6362:
  5942  000AD8  ECF7  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5943  000ADC  0101               	movlb	1	; () banked
  5944  000ADE  6FF6               	movwf	main@status& (0+255),b
  5945  000AE0  29F6               	incf	main@status& (0+255),w,b
  5946  000AE2  B4D8               	btfsc	status,2,c
  5947  000AE4  EF76  F005         	goto	u6661
  5948  000AE8  EF78  F005         	goto	u6660
  5949  000AEC                     u6661:
  5950  000AEC  EF6C  F005         	goto	l6362
  5951  000AF0                     u6660:
  5952  000AF0                     l6364:
  5953                           
  5954                           ; BSR set to: 1
  5955                           ;main.c: 278:                 writeEndAddress = writeAddress;
  5956  000AF0  0E00               	movlw	0
  5957  000AF2  0100               	movlb	0	; () banked
  5958  000AF4  6FBF               	movwf	_buffer1Full& (0+255),b
  5959  000AF6                     
  5960                           ; BSR set to: 0
  5961                           ;main.c: 279:                 printf ("\r\n");
  5962  000AF6  0101               	movlb	1	; () banked
  5963  000AF8  51F6               	movf	main@status& (0+255),w,b
  5964  000AFA  0B1F               	andlw	31
  5965  000AFC  0A05               	xorlw	5
  5966  000AFE  B4D8               	btfsc	status,2,c
  5967  000B00  EF84  F005         	goto	u6671
  5968  000B04  EF86  F005         	goto	u6670
  5969  000B08                     u6671:
  5970  000B08  EFA7  F005         	goto	l6376
  5971  000B0C                     u6670:
  5972  000B0C                     
  5973                           ; BSR set to: 1
  5974  000B0C  0E80               	movlw	128
  5975  000B0E  61F7               	cpfslt	main@failureIndex& (0+255),b
  5976  000B10  EF8C  F005         	goto	u6681
  5977  000B14  EF8E  F005         	goto	u6680
  5978  000B18                     u6681:
  5979  000B18  EFA7  F005         	goto	l6376
  5980  000B1C                     u6680:
  5981  000B1C                     
  5982                           ; BSR set to: 1
  5983                           ;main.c: 280:                 if (failureIndex > 0) {
  5984  000B1C  51F7               	movf	main@failureIndex& (0+255),w,b
  5985  000B1E  0D04               	mullw	4
  5986  000B20  0EFC               	movlw	low _writeFailureTable
  5987  000B22  24F3               	addwf	243,w,c
  5988  000B24  6ED9               	movwf	fsr2l,c
  5989  000B26  0E01               	movlw	high _writeFailureTable
  5990  000B28  20F4               	addwfc	prodh,w,c
  5991  000B2A  6EDA               	movwf	fsr2h,c
  5992  000B2C  C1F8  FFDE         	movff	main@writeAddress_1291,postinc2
  5993  000B30  C1F9  FFDE         	movff	main@writeAddress_1291+1,postinc2
  5994  000B34  C1FA  FFDE         	movff	main@writeAddress_1291+2,postinc2
  5995  000B38  C1FB  FFDE         	movff	main@writeAddress_1291+3,postinc2
  5996  000B3C                     
  5997                           ; BSR set to: 1
  5998                           ;main.c: 281:                     printf ("Listing write failures: \r\n");
  5999  000B3C  0E00               	movlw	low _writeFailureStatus
  6000  000B3E  25F7               	addwf	main@failureIndex& (0+255),w,b
  6001  000B40  6ED9               	movwf	fsr2l,c
  6002  000B42  6ADA               	clrf	fsr2h,c
  6003  000B44  0E01               	movlw	high _writeFailureStatus
  6004  000B46  22DA               	addwfc	fsr2h,f,c
  6005  000B48  C1F6  FFDF         	movff	main@status,indf2
  6006  000B4C                     
  6007                           ; BSR set to: 1
  6008                           ;main.c: 282:                     for (uint8_t i = 0; i < failureIndex; i++) {
  6009  000B4C  2BF7               	incf	main@failureIndex& (0+255),f,b
  6010  000B4E                     l6376:
  6011                           
  6012                           ; BSR set to: 1
  6013                           ;main.c: 284:                         printf("Status code: %d ---- Address: ", writeFail
      +                          ureStatus[i]);
  6014  000B4E  C1F8  F013         	movff	main@writeAddress_1291,incrementAddress@sdCardAddress
  6015  000B52  C1F9  F014         	movff	main@writeAddress_1291+1,incrementAddress@sdCardAddress+1
  6016  000B56  C1FA  F015         	movff	main@writeAddress_1291+2,incrementAddress@sdCardAddress+2
  6017  000B5A  C1FB  F016         	movff	main@writeAddress_1291+3,incrementAddress@sdCardAddress+3
  6018  000B5E  EC38  F01A         	call	_incrementAddress	;wreg free
  6019  000B62  C013  F1F8         	movff	?_incrementAddress,main@writeAddress_1291
  6020  000B66  C014  F1F9         	movff	?_incrementAddress+1,main@writeAddress_1291+1
  6021  000B6A  C015  F1FA         	movff	?_incrementAddress+2,main@writeAddress_1291+2
  6022  000B6E  C016  F1FB         	movff	?_incrementAddress+3,main@writeAddress_1291+3
  6023  000B72                     l6378:
  6024                           
  6025                           ;main.c: 286:                         printf(":");
  6026  000B72  0100               	movlb	0	; () banked
  6027  000B74  51BE               	movf	_buffer2Full& (0+255),w,b
  6028  000B76  B4D8               	btfsc	status,2,c
  6029  000B78  EFC0  F005         	goto	u6691
  6030  000B7C  EFC2  F005         	goto	u6690
  6031  000B80                     u6691:
  6032  000B80  EF41  F006         	goto	l6404
  6033  000B84                     u6690:
  6034  000B84                     
  6035                           ; BSR set to: 0
  6036                           ;main.c: 287:                         printf("%04x\r\n", addr & 0X0000FFFF);
  6037  000B84  C1F8  F014         	movff	main@writeAddress_1291,SDCARD_WriteBlock@addr
  6038  000B88  C1F9  F015         	movff	main@writeAddress_1291+1,SDCARD_WriteBlock@addr+1
  6039  000B8C  C1FA  F016         	movff	main@writeAddress_1291+2,SDCARD_WriteBlock@addr+2
  6040  000B90  C1FB  F017         	movff	main@writeAddress_1291+3,SDCARD_WriteBlock@addr+3
  6041  000B94  0EFC               	movlw	low _sdCardBuffer2
  6042  000B96  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  6043  000B98  0E03               	movlw	high _sdCardBuffer2
  6044  000B9A  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  6045  000B9C  ECF3  F018         	call	_SDCARD_WriteBlock	;wreg free
  6046  000BA0                     l6382:
  6047  000BA0  ECF7  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  6048  000BA4  0101               	movlb	1	; () banked
  6049  000BA6  6FF6               	movwf	main@status& (0+255),b
  6050  000BA8  29F6               	incf	main@status& (0+255),w,b
  6051  000BAA  B4D8               	btfsc	status,2,c
  6052  000BAC  EFDA  F005         	goto	u6701
  6053  000BB0  EFDC  F005         	goto	u6700
  6054  000BB4                     u6701:
  6055  000BB4  EFD0  F005         	goto	l6382
  6056  000BB8                     u6700:
  6057  000BB8                     
  6058                           ; BSR set to: 1
  6059                           ;main.c: 289:                 }
  6060  000BB8  51F6               	movf	main@status& (0+255),w,b
  6061  000BBA  0B1F               	andlw	31
  6062  000BBC  0A05               	xorlw	5
  6063  000BBE  B4D8               	btfsc	status,2,c
  6064  000BC0  EFE4  F005         	goto	u6711
  6065  000BC4  EFE6  F005         	goto	u6710
  6066  000BC8                     u6711:
  6067  000BC8  EF00  F006         	goto	l6390
  6068  000BCC                     u6710:
  6069  000BCC                     
  6070                           ; BSR set to: 1
  6071                           ;main.c: 290:             }
  6072  000BCC  C1F8  F014         	movff	main@writeAddress_1291,SDCARD_WriteBlock@addr
  6073  000BD0  C1F9  F015         	movff	main@writeAddress_1291+1,SDCARD_WriteBlock@addr+1
  6074  000BD4  C1FA  F016         	movff	main@writeAddress_1291+2,SDCARD_WriteBlock@addr+2
  6075  000BD8  C1FB  F017         	movff	main@writeAddress_1291+3,SDCARD_WriteBlock@addr+3
  6076  000BDC  0EFC               	movlw	low _sdCardBuffer2
  6077  000BDE  6E18               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  6078  000BE0  0E03               	movlw	high _sdCardBuffer2
  6079  000BE2  6E19               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  6080  000BE4  ECF3  F018         	call	_SDCARD_WriteBlock	;wreg free
  6081  000BE8                     l6388:
  6082  000BE8  ECF7  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  6083  000BEC  0101               	movlb	1	; () banked
  6084  000BEE  6FF6               	movwf	main@status& (0+255),b
  6085  000BF0  29F6               	incf	main@status& (0+255),w,b
  6086  000BF2  B4D8               	btfsc	status,2,c
  6087  000BF4  EFFE  F005         	goto	u6721
  6088  000BF8  EF00  F006         	goto	u6720
  6089  000BFC                     u6721:
  6090  000BFC  EFF4  F005         	goto	l6388
  6091  000C00                     u6720:
  6092  000C00                     l6390:
  6093                           
  6094                           ; BSR set to: 1
  6095                           ;main.c: 293:             case 's':
  6096  000C00  0E00               	movlw	0
  6097  000C02  0100               	movlb	0	; () banked
  6098  000C04  6FBE               	movwf	_buffer2Full& (0+255),b
  6099  000C06                     
  6100                           ; BSR set to: 0
  6101                           ;main.c: 294: 
  6102  000C06  0101               	movlb	1	; () banked
  6103  000C08  51F6               	movf	main@status& (0+255),w,b
  6104  000C0A  0B1F               	andlw	31
  6105  000C0C  0A05               	xorlw	5
  6106  000C0E  B4D8               	btfsc	status,2,c
  6107  000C10  EF0C  F006         	goto	u6731
  6108  000C14  EF0E  F006         	goto	u6730
  6109  000C18                     u6731:
  6110  000C18  EF2F  F006         	goto	l6402
  6111  000C1C                     u6730:
  6112  000C1C                     
  6113                           ; BSR set to: 1
  6114  000C1C  0E80               	movlw	128
  6115  000C1E  61F7               	cpfslt	main@failureIndex& (0+255),b
  6116  000C20  EF14  F006         	goto	u6741
  6117  000C24  EF16  F006         	goto	u6740
  6118  000C28                     u6741:
  6119  000C28  EF2F  F006         	goto	l6402
  6120  000C2C                     u6740:
  6121  000C2C                     
  6122                           ; BSR set to: 1
  6123                           ;main.c: 295:                 printf("You may terminate spooling at anytime with a key p
      +                          ress.\r\n");
  6124  000C2C  51F7               	movf	main@failureIndex& (0+255),w,b
  6125  000C2E  0D04               	mullw	4
  6126  000C30  0EFC               	movlw	low _writeFailureTable
  6127  000C32  24F3               	addwf	243,w,c
  6128  000C34  6ED9               	movwf	fsr2l,c
  6129  000C36  0E01               	movlw	high _writeFailureTable
  6130  000C38  20F4               	addwfc	prodh,w,c
  6131  000C3A  6EDA               	movwf	fsr2h,c
  6132  000C3C  C1F8  FFDE         	movff	main@writeAddress_1291,postinc2
  6133  000C40  C1F9  FFDE         	movff	main@writeAddress_1291+1,postinc2
  6134  000C44  C1FA  FFDE         	movff	main@writeAddress_1291+2,postinc2
  6135  000C48  C1FB  FFDE         	movff	main@writeAddress_1291+3,postinc2
  6136  000C4C                     
  6137                           ; BSR set to: 1
  6138                           ;main.c: 296:                 printf("To spool terminal contents into a file follow thes
      +                          e instructions:\r\n");
  6139  000C4C  0E00               	movlw	low _writeFailureStatus
  6140  000C4E  25F7               	addwf	main@failureIndex& (0+255),w,b
  6141  000C50  6ED9               	movwf	fsr2l,c
  6142  000C52  6ADA               	clrf	fsr2h,c
  6143  000C54  0E01               	movlw	high _writeFailureStatus
  6144  000C56  22DA               	addwfc	fsr2h,f,c
  6145  000C58  C1F6  FFDF         	movff	main@status,indf2
  6146  000C5C                     
  6147                           ; BSR set to: 1
  6148                           ;main.c: 297:                 printf("\r\n");
  6149  000C5C  2BF7               	incf	main@failureIndex& (0+255),f,b
  6150  000C5E                     l6402:
  6151                           
  6152                           ; BSR set to: 1
  6153                           ;main.c: 299:                 printf("Select:     Change settings...\r\n");
  6154  000C5E  C1F8  F013         	movff	main@writeAddress_1291,incrementAddress@sdCardAddress
  6155  000C62  C1F9  F014         	movff	main@writeAddress_1291+1,incrementAddress@sdCardAddress+1
  6156  000C66  C1FA  F015         	movff	main@writeAddress_1291+2,incrementAddress@sdCardAddress+2
  6157  000C6A  C1FB  F016         	movff	main@writeAddress_1291+3,incrementAddress@sdCardAddress+3
  6158  000C6E  EC38  F01A         	call	_incrementAddress	;wreg free
  6159  000C72  C013  F1F8         	movff	?_incrementAddress,main@writeAddress_1291
  6160  000C76  C014  F1F9         	movff	?_incrementAddress+1,main@writeAddress_1291+1
  6161  000C7A  C015  F1FA         	movff	?_incrementAddress+2,main@writeAddress_1291+2
  6162  000C7E  C016  F1FB         	movff	?_incrementAddress+3,main@writeAddress_1291+3
  6163  000C82                     l6404:
  6164                           
  6165                           ;main.c: 270:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  6166  000C82  0100               	movlb	0	; () banked
  6167  000C84  51BF               	movf	_buffer1Full& (0+255),w,b
  6168  000C86  A4D8               	btfss	status,2,c
  6169  000C88  EF48  F006         	goto	u6751
  6170  000C8C  EF4A  F006         	goto	u6750
  6171  000C90                     u6751:
  6172  000C90  EF32  F005         	goto	l6352
  6173  000C94                     u6750:
  6174  000C94                     
  6175                           ; BSR set to: 0
  6176  000C94  51BE               	movf	_buffer2Full& (0+255),w,b
  6177  000C96  A4D8               	btfss	status,2,c
  6178  000C98  EF50  F006         	goto	u6761
  6179  000C9C  EF52  F006         	goto	u6760
  6180  000CA0                     u6761:
  6181  000CA0  EF32  F005         	goto	l6352
  6182  000CA4                     u6760:
  6183  000CA4                     
  6184                           ; BSR set to: 0
  6185  000CA4  51BD               	movf	_collecting& (0+255),w,b
  6186  000CA6  A4D8               	btfss	status,2,c
  6187  000CA8  EF58  F006         	goto	u6771
  6188  000CAC  EF5A  F006         	goto	u6770
  6189  000CB0                     u6771:
  6190  000CB0  EF32  F005         	goto	l6352
  6191  000CB4                     u6770:
  6192  000CB4                     
  6193                           ; BSR set to: 0
  6194                           ;main.c: 302:                 printf("Log file name: Browse and provide a .csv extension
      +                           to your file name\r\n");
  6195  000CB4  C1F8  F1EE         	movff	main@writeAddress_1291,main@writeEndAddress
  6196  000CB8  C1F9  F1EF         	movff	main@writeAddress_1291+1,main@writeEndAddress+1
  6197  000CBC  C1FA  F1F0         	movff	main@writeAddress_1291+2,main@writeEndAddress+2
  6198  000CC0  C1FB  F1F1         	movff	main@writeAddress_1291+3,main@writeEndAddress+3
  6199  000CC4                     
  6200                           ; BSR set to: 0
  6201                           ;main.c: 303:                 printf("Select:     Apply\r\n");
  6202  000CC4  0E9C               	movlw	low (STR_71+12)
  6203  000CC6  6FA3               	movwf	printf@fmt& (0+255),b
  6204  000CC8  0EFF               	movlw	high (STR_71+12)
  6205  000CCA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6206  000CCC  ECE6  F01B         	call	_printf	;wreg free
  6207  000CD0                     
  6208                           ;main.c: 304:                 printf("Press any key to start\r\n");
  6209  000CD0  0101               	movlb	1	; () banked
  6210  000CD2  51F7               	movf	main@failureIndex& (0+255),w,b
  6211  000CD4  B4D8               	btfsc	status,2,c
  6212  000CD6  EF6F  F006         	goto	u6781
  6213  000CDA  EF71  F006         	goto	u6780
  6214  000CDE                     u6781:
  6215  000CDE  EF8C  F000         	goto	l6128
  6216  000CE2                     u6780:
  6217  000CE2                     
  6218                           ; BSR set to: 1
  6219                           ;main.c: 305: 
  6220  000CE2  0E0F               	movlw	low STR_38
  6221  000CE4  0100               	movlb	0	; () banked
  6222  000CE6  6FA3               	movwf	printf@fmt& (0+255),b
  6223  000CE8  0EFE               	movlw	high STR_38
  6224  000CEA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6225  000CEC  ECE6  F01B         	call	_printf	;wreg free
  6226  000CF0                     
  6227                           ;main.c: 306:                 while (!(EUSART1_is_rx_ready()));
  6228  000CF0  0E00               	movlw	0
  6229  000CF2  0101               	movlb	1	; () banked
  6230  000CF4  6FE2               	movwf	main@i_1297& (0+255),b
  6231  000CF6  EFD2  F006         	goto	l6430
  6232  000CFA                     l6418:
  6233                           
  6234                           ; BSR set to: 1
  6235                           ;main.c: 307:                 EUSART1_Read();
  6236  000CFA  51E2               	movf	main@i_1297& (0+255),w,b
  6237  000CFC  0D04               	mullw	4
  6238  000CFE  0EFC               	movlw	low _writeFailureTable
  6239  000D00  24F3               	addwf	243,w,c
  6240  000D02  6ED9               	movwf	fsr2l,c
  6241  000D04  0E01               	movlw	high _writeFailureTable
  6242  000D06  20F4               	addwfc	prodh,w,c
  6243  000D08  6EDA               	movwf	fsr2h,c
  6244  000D0A  CFDE F1D3          	movff	postinc2,main@addr
  6245  000D0E  CFDE F1D4          	movff	postinc2,main@addr+1
  6246  000D12  CFDE F1D5          	movff	postinc2,main@addr+2
  6247  000D16  CFDE F1D6          	movff	postinc2,main@addr+3
  6248  000D1A                     
  6249                           ; BSR set to: 1
  6250                           ;main.c: 308: 
  6251  000D1A  0E44               	movlw	low STR_39
  6252  000D1C  0100               	movlb	0	; () banked
  6253  000D1E  6FA3               	movwf	printf@fmt& (0+255),b
  6254  000D20  0EFD               	movlw	high STR_39
  6255  000D22  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6256  000D24  0E00               	movlw	low _writeFailureStatus
  6257  000D26  0101               	movlb	1	; () banked
  6258  000D28  25E2               	addwf	main@i_1297& (0+255),w,b
  6259  000D2A  6ED9               	movwf	fsr2l,c
  6260  000D2C  6ADA               	clrf	fsr2h,c
  6261  000D2E  0E01               	movlw	high _writeFailureStatus
  6262  000D30  22DA               	addwfc	fsr2h,f,c
  6263  000D32  50DF               	movf	indf2,w,c
  6264  000D34  0100               	movlb	0	; () banked
  6265  000D36  6FB7               	movwf	??_main& (0+255),b
  6266  000D38  51B7               	movf	??_main& (0+255),w,b
  6267  000D3A  6FA5               	movwf	(?_printf+2)& (0+255),b
  6268  000D3C  6BA6               	clrf	(?_printf+3)& (0+255),b
  6269  000D3E  ECE6  F01B         	call	_printf	;wreg free
  6270  000D42                     
  6271                           ;main.c: 309:                 uint32_t address = writeStartAddress;
  6272  000D42  0EE9               	movlw	low STR_10
  6273  000D44  0100               	movlb	0	; () banked
  6274  000D46  6FA3               	movwf	printf@fmt& (0+255),b
  6275  000D48  0EFF               	movlw	high STR_10
  6276  000D4A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6277  000D4C  C1D5  F0A5         	movff	main@addr+2,?_printf+2
  6278  000D50  C1D6  F0A6         	movff	main@addr+3,?_printf+3
  6279  000D54  6BA7               	clrf	(?_printf+4)& (0+255),b
  6280  000D56  6BA8               	clrf	(?_printf+5)& (0+255),b
  6281  000D58  ECE6  F01B         	call	_printf	;wreg free
  6282  000D5C                     
  6283                           ;main.c: 310:                 uint32_t endAddress = writeEndAddress;
  6284  000D5C  0EFC               	movlw	low STR_11
  6285  000D5E  0100               	movlb	0	; () banked
  6286  000D60  6FA3               	movwf	printf@fmt& (0+255),b
  6287  000D62  0EFF               	movlw	high STR_11
  6288  000D64  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6289  000D66  ECE6  F01B         	call	_printf	;wreg free
  6290  000D6A                     
  6291                           ;main.c: 311:                 uint32_t printedBlocks = 0;
  6292  000D6A  0EDC               	movlw	low STR_42
  6293  000D6C  0100               	movlb	0	; () banked
  6294  000D6E  6FA3               	movwf	printf@fmt& (0+255),b
  6295  000D70  0EFF               	movlw	high STR_42
  6296  000D72  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6297  000D74  0EFF               	movlw	255
  6298  000D76  0101               	movlb	1	; () banked
  6299  000D78  15D3               	andwf	main@addr& (0+255),w,b
  6300  000D7A  0100               	movlb	0	; () banked
  6301  000D7C  6FA5               	movwf	(?_printf+2)& (0+255),b
  6302  000D7E  0EFF               	movlw	255
  6303  000D80  0101               	movlb	1	; () banked
  6304  000D82  15D4               	andwf	(main@addr+1)& (0+255),w,b
  6305  000D84  0100               	movlb	0	; () banked
  6306  000D86  6FA6               	movwf	(?_printf+3)& (0+255),b
  6307  000D88  0E00               	movlw	0
  6308  000D8A  0101               	movlb	1	; () banked
  6309  000D8C  15D5               	andwf	(main@addr+2)& (0+255),w,b
  6310  000D8E  0100               	movlb	0	; () banked
  6311  000D90  6FA7               	movwf	(?_printf+4)& (0+255),b
  6312  000D92  0E00               	movlw	0
  6313  000D94  0101               	movlb	1	; () banked
  6314  000D96  15D6               	andwf	(main@addr+3)& (0+255),w,b
  6315  000D98  0100               	movlb	0	; () banked
  6316  000D9A  6FA8               	movwf	(?_printf+5)& (0+255),b
  6317  000D9C  ECE6  F01B         	call	_printf	;wreg free
  6318  000DA0                     
  6319                           ;main.c: 312: 
  6320  000DA0  0101               	movlb	1	; () banked
  6321  000DA2  2BE2               	incf	main@i_1297& (0+255),f,b
  6322  000DA4                     l6430:
  6323                           
  6324                           ; BSR set to: 1
  6325  000DA4  51F7               	movf	main@failureIndex& (0+255),w,b
  6326  000DA6  5DE2               	subwf	main@i_1297& (0+255),w,b
  6327  000DA8  A0D8               	btfss	status,0,c
  6328  000DAA  EFD9  F006         	goto	u6791
  6329  000DAE  EFDB  F006         	goto	u6790
  6330  000DB2                     u6791:
  6331  000DB2  EF7D  F006         	goto	l6418
  6332  000DB6                     u6790:
  6333  000DB6  EF8C  F000         	goto	l6128
  6334  000DBA                     l6432:
  6335                           
  6336                           ; BSR set to: 0
  6337                           ;main.c: 319:                         printf("%d\r\n", printVal);
  6338  000DBA  0EC6               	movlw	low STR_43
  6339  000DBC  6FA3               	movwf	printf@fmt& (0+255),b
  6340  000DBE  0EFA               	movlw	high STR_43
  6341  000DC0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6342  000DC2  ECE6  F01B         	call	_printf	;wreg free
  6343                           
  6344                           ;main.c: 320:                     }
  6345  000DC6  0EF8               	movlw	low STR_44
  6346  000DC8  0100               	movlb	0	; () banked
  6347  000DCA  6FA3               	movwf	printf@fmt& (0+255),b
  6348  000DCC  0EF3               	movlw	high STR_44
  6349  000DCE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6350  000DD0  ECE6  F01B         	call	_printf	;wreg free
  6351                           
  6352                           ;main.c: 321:                     printedBlocks++;
  6353  000DD4  0E9C               	movlw	low (STR_71+12)
  6354  000DD6  0100               	movlb	0	; () banked
  6355  000DD8  6FA3               	movwf	printf@fmt& (0+255),b
  6356  000DDA  0EFF               	movlw	high (STR_71+12)
  6357  000DDC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6358  000DDE  ECE6  F01B         	call	_printf	;wreg free
  6359                           
  6360                           ;main.c: 322:                 }
  6361  000DE2  0E00               	movlw	low STR_46
  6362  000DE4  0100               	movlb	0	; () banked
  6363  000DE6  6FA3               	movwf	printf@fmt& (0+255),b
  6364  000DE8  0EFB               	movlw	high STR_46
  6365  000DEA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6366  000DEC  ECE6  F01B         	call	_printf	;wreg free
  6367                           
  6368                           ;main.c: 323:                 if ((EUSART1_is_rx_ready()))
  6369  000DF0  0E03               	movlw	low STR_47
  6370  000DF2  0100               	movlb	0	; () banked
  6371  000DF4  6FA3               	movwf	printf@fmt& (0+255),b
  6372  000DF6  0EFD               	movlw	high STR_47
  6373  000DF8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6374  000DFA  ECE6  F01B         	call	_printf	;wreg free
  6375                           
  6376                           ;main.c: 324:                     EUSART1_Read();
  6377  000DFE  0EA4               	movlw	low STR_48
  6378  000E00  0100               	movlb	0	; () banked
  6379  000E02  6FA3               	movwf	printf@fmt& (0+255),b
  6380  000E04  0EFE               	movlw	high STR_48
  6381  000E06  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6382  000E08  ECE6  F01B         	call	_printf	;wreg free
  6383                           
  6384                           ;main.c: 325: 
  6385  000E0C  0EA7               	movlw	low STR_49
  6386  000E0E  0100               	movlb	0	; () banked
  6387  000E10  6FA3               	movwf	printf@fmt& (0+255),b
  6388  000E12  0EFB               	movlw	high STR_49
  6389  000E14  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6390  000E16  ECE6  F01B         	call	_printf	;wreg free
  6391                           
  6392                           ;main.c: 326:                 printf("Spooled %u out of the ", printedBlocks);
  6393  000E1A  0EB1               	movlw	low STR_50
  6394  000E1C  0100               	movlb	0	; () banked
  6395  000E1E  6FA3               	movwf	printf@fmt& (0+255),b
  6396  000E20  0EF3               	movlw	high STR_50
  6397  000E22  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6398  000E24  ECE6  F01B         	call	_printf	;wreg free
  6399                           
  6400                           ;main.c: 327:                 printf("%u blocks.\r\n", (writeEndAddress - writeStartAddr
      +                          ess) >> 9);
  6401  000E28  0E36               	movlw	low STR_51
  6402  000E2A  0100               	movlb	0	; () banked
  6403  000E2C  6FA3               	movwf	printf@fmt& (0+255),b
  6404  000E2E  0EFF               	movlw	high STR_51
  6405  000E30  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6406  000E32  ECE6  F01B         	call	_printf	;wreg free
  6407                           
  6408                           ;main.c: 328:                 printf("To close the file follow these instructions: \r\n"
      +                          );
  6409  000E36  0E44               	movlw	low STR_52
  6410  000E38  0100               	movlb	0	; () banked
  6411  000E3A  6FA3               	movwf	printf@fmt& (0+255),b
  6412  000E3C  0EFE               	movlw	high STR_52
  6413  000E3E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6414  000E40  ECE6  F01B         	call	_printf	;wreg free
  6415  000E44                     l6434:
  6416  000E44  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  6417  000E48  0900               	iorlw	0
  6418  000E4A  B4D8               	btfsc	status,2,c
  6419  000E4C  EF2A  F007         	goto	u6801
  6420  000E50  EF2C  F007         	goto	u6800
  6421  000E54                     u6801:
  6422  000E54  EF22  F007         	goto	l6434
  6423  000E58                     u6800:
  6424  000E58                     
  6425                           ;main.c: 331:                 printf("Select:     Logging\r\n");
  6426  000E58  ECFA  F01B         	call	_EUSART1_Read	;wreg free
  6427  000E5C                     
  6428                           ;main.c: 333:                 printf("Select:     Apply \r\n");
  6429  000E5C  C1EA  F1DA         	movff	main@writeStartAddress,main@address
  6430  000E60  C1EB  F1DB         	movff	main@writeStartAddress+1,main@address+1
  6431  000E64  C1EC  F1DC         	movff	main@writeStartAddress+2,main@address+2
  6432  000E68  C1ED  F1DD         	movff	main@writeStartAddress+3,main@address+3
  6433  000E6C                     
  6434                           ;main.c: 334: 
  6435  000E6C  C1EE  F1C8         	movff	main@writeEndAddress,main@endAddress
  6436  000E70  C1EF  F1C9         	movff	main@writeEndAddress+1,main@endAddress+1
  6437  000E74  C1F0  F1CA         	movff	main@writeEndAddress+2,main@endAddress+2
  6438  000E78  C1F1  F1CB         	movff	main@writeEndAddress+3,main@endAddress+3
  6439  000E7C                     
  6440                           ;main.c: 335:                 break;
  6441  000E7C  0E00               	movlw	0
  6442  000E7E  0101               	movlb	1	; () banked
  6443  000E80  6FCE               	movwf	main@printedBlocks& (0+255),b
  6444  000E82  0E00               	movlw	0
  6445  000E84  6FCF               	movwf	(main@printedBlocks+1)& (0+255),b
  6446  000E86  0E00               	movlw	0
  6447  000E88  6FD0               	movwf	(main@printedBlocks+2)& (0+255),b
  6448  000E8A  0E00               	movlw	0
  6449  000E8C  6FD1               	movwf	(main@printedBlocks+3)& (0+255),b
  6450                           
  6451                           ;main.c: 337: 
  6452  000E8E  EF9D  F007         	goto	l6464
  6453  000E92                     l6444:
  6454                           
  6455                           ; BSR set to: 1
  6456                           ;main.c: 338: 
  6457  000E92  C1DA  F014         	movff	main@address,SDCARD_ReadBlock@addr
  6458  000E96  C1DB  F015         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  6459  000E9A  C1DC  F016         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  6460  000E9E  C1DD  F017         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  6461  000EA2  0EFC               	movlw	low _sdCardBuffer
  6462  000EA4  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6463  000EA6  0E07               	movlw	high _sdCardBuffer
  6464  000EA8  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6465  000EAA  EC5B  F018         	call	_SDCARD_ReadBlock	;wreg free
  6466  000EAE                     
  6467                           ;main.c: 339: 
  6468  000EAE  C1DA  F013         	movff	main@address,incrementAddress@sdCardAddress
  6469  000EB2  C1DB  F014         	movff	main@address+1,incrementAddress@sdCardAddress+1
  6470  000EB6  C1DC  F015         	movff	main@address+2,incrementAddress@sdCardAddress+2
  6471  000EBA  C1DD  F016         	movff	main@address+3,incrementAddress@sdCardAddress+3
  6472  000EBE  EC38  F01A         	call	_incrementAddress	;wreg free
  6473  000EC2  C013  F1DA         	movff	?_incrementAddress,main@address
  6474  000EC6  C014  F1DB         	movff	?_incrementAddress+1,main@address+1
  6475  000ECA  C015  F1DC         	movff	?_incrementAddress+2,main@address+2
  6476  000ECE  C016  F1DD         	movff	?_incrementAddress+3,main@address+3
  6477  000ED2                     
  6478                           ;main.c: 341: 
  6479  000ED2  0E00               	movlw	0
  6480  000ED4  0101               	movlb	1	; () banked
  6481  000ED6  6FE1               	movwf	(main@i_1316+1)& (0+255),b
  6482  000ED8  0E00               	movlw	0
  6483  000EDA  6FE0               	movwf	main@i_1316& (0+255),b
  6484  000EDC                     l6450:
  6485                           
  6486                           ; BSR set to: 1
  6487  000EDC  0E02               	movlw	2
  6488  000EDE  19E1               	xorwf	(main@i_1316+1)& (0+255),w,b
  6489  000EE0  11E0               	iorwf	main@i_1316& (0+255),w,b
  6490  000EE2  A4D8               	btfss	status,2,c
  6491  000EE4  EF76  F007         	goto	u6811
  6492  000EE8  EF78  F007         	goto	u6810
  6493  000EEC                     u6811:
  6494  000EEC  EF7A  F007         	goto	l6454
  6495  000EF0                     u6810:
  6496  000EF0  EF97  F007         	goto	l6462
  6497  000EF4                     l6454:
  6498                           
  6499                           ; BSR set to: 1
  6500                           ;main.c: 342:             case 'i':
  6501  000EF4  0EFC               	movlw	low _sdCardBuffer
  6502  000EF6  25E0               	addwf	main@i_1316& (0+255),w,b
  6503  000EF8  6ED9               	movwf	fsr2l,c
  6504  000EFA  0E07               	movlw	high _sdCardBuffer
  6505  000EFC  21E1               	addwfc	(main@i_1316+1)& (0+255),w,b
  6506  000EFE  6EDA               	movwf	fsr2h,c
  6507  000F00  50DF               	movf	indf2,w,c
  6508  000F02  0100               	movlb	0	; () banked
  6509  000F04  6FB7               	movwf	??_main& (0+255),b
  6510  000F06  51B7               	movf	??_main& (0+255),w,b
  6511  000F08  0101               	movlb	1	; () banked
  6512  000F0A  6FCC               	movwf	main@printVal& (0+255),b
  6513  000F0C  6BCD               	clrf	(main@printVal+1)& (0+255),b
  6514  000F0E                     
  6515                           ; BSR set to: 1
  6516                           ;main.c: 343:                 SPI2_Close();
  6517  000F0E  0E7C               	movlw	low (STR_35+25)
  6518  000F10  0100               	movlb	0	; () banked
  6519  000F12  6FA3               	movwf	printf@fmt& (0+255),b
  6520  000F14  0EFD               	movlw	high (STR_35+25)
  6521  000F16  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6522  000F18  C1CC  F0A5         	movff	main@printVal,?_printf+2
  6523  000F1C  C1CD  F0A6         	movff	main@printVal+1,?_printf+3
  6524  000F20  ECE6  F01B         	call	_printf	;wreg free
  6525  000F24                     
  6526                           ;main.c: 344:                 SPI2_Open(SPI2_DEFAULT);
  6527  000F24  0101               	movlb	1	; () banked
  6528  000F26  4BE0               	infsnz	main@i_1316& (0+255),f,b
  6529  000F28  2BE1               	incf	(main@i_1316+1)& (0+255),f,b
  6530  000F2A  EF6E  F007         	goto	l6450
  6531  000F2E                     l6462:
  6532                           
  6533                           ; BSR set to: 1
  6534                           ;main.c: 345:                 SDCARD_Initialize(1);
  6535  000F2E  0E01               	movlw	1
  6536  000F30  27CE               	addwf	main@printedBlocks& (0+255),f,b
  6537  000F32  0E00               	movlw	0
  6538  000F34  23CF               	addwfc	(main@printedBlocks+1)& (0+255),f,b
  6539  000F36  23D0               	addwfc	(main@printedBlocks+2)& (0+255),f,b
  6540  000F38  23D1               	addwfc	(main@printedBlocks+3)& (0+255),f,b
  6541  000F3A                     l6464:
  6542                           
  6543                           ; BSR set to: 1
  6544                           ;main.c: 337: 
  6545  000F3A  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  6546  000F3E  0900               	iorlw	0
  6547  000F40  A4D8               	btfss	status,2,c
  6548  000F42  EFA5  F007         	goto	u6821
  6549  000F46  EFA7  F007         	goto	u6820
  6550  000F4A                     u6821:
  6551  000F4A  EFBA  F007         	goto	l6468
  6552  000F4E                     u6820:
  6553  000F4E  0101               	movlb	1	; () banked
  6554  000F50  51C8               	movf	main@endAddress& (0+255),w,b
  6555  000F52  19DA               	xorwf	main@address& (0+255),w,b
  6556  000F54  E10D               	bnz	u6831
  6557  000F56  51C9               	movf	(main@endAddress+1)& (0+255),w,b
  6558  000F58  19DB               	xorwf	(main@address+1)& (0+255),w,b
  6559  000F5A  E10A               	bnz	u6831
  6560  000F5C  51CA               	movf	(main@endAddress+2)& (0+255),w,b
  6561  000F5E  19DC               	xorwf	(main@address+2)& (0+255),w,b
  6562  000F60  E107               	bnz	u6831
  6563  000F62  51CB               	movf	(main@endAddress+3)& (0+255),w,b
  6564  000F64  19DD               	xorwf	(main@address+3)& (0+255),w,b
  6565  000F66  A4D8               	btfss	status,2,c
  6566  000F68  EFB8  F007         	goto	u6831
  6567  000F6C  EFBA  F007         	goto	u6830
  6568  000F70                     u6831:
  6569  000F70  EF49  F007         	goto	l6444
  6570  000F74                     u6830:
  6571  000F74                     l6468:
  6572                           
  6573                           ;main.c: 347: 
  6574  000F74  EC84  F01C         	call	_EUSART1_is_rx_ready	;wreg free
  6575  000F78  0900               	iorlw	0
  6576  000F7A  B4D8               	btfsc	status,2,c
  6577  000F7C  EFC2  F007         	goto	u6841
  6578  000F80  EFC4  F007         	goto	u6840
  6579  000F84                     u6841:
  6580  000F84  EFC6  F007         	goto	l6472
  6581  000F88                     u6840:
  6582  000F88                     
  6583                           ;main.c: 348: 
  6584  000F88  ECFA  F01B         	call	_EUSART1_Read	;wreg free
  6585  000F8C                     l6472:
  6586                           
  6587                           ;main.c: 350: 
  6588  000F8C  0E8D               	movlw	low STR_54
  6589  000F8E  0100               	movlb	0	; () banked
  6590  000F90  6FA3               	movwf	printf@fmt& (0+255),b
  6591  000F92  0EFE               	movlw	high STR_54
  6592  000F94  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6593  000F96  C1CE  F0A5         	movff	main@printedBlocks,?_printf+2
  6594  000F9A  C1CF  F0A6         	movff	main@printedBlocks+1,?_printf+3
  6595  000F9E  C1D0  F0A7         	movff	main@printedBlocks+2,?_printf+4
  6596  000FA2  C1D1  F0A8         	movff	main@printedBlocks+3,?_printf+5
  6597  000FA6  ECE6  F01B         	call	_printf	;wreg free
  6598  000FAA                     
  6599                           ;main.c: 351:             case 'A':
  6600  000FAA  0EAE               	movlw	low STR_55
  6601  000FAC  0100               	movlb	0	; () banked
  6602  000FAE  6FA3               	movwf	printf@fmt& (0+255),b
  6603  000FB0  0EFF               	movlw	high STR_55
  6604  000FB2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6605  000FB4  0101               	movlb	1	; () banked
  6606  000FB6  51EA               	movf	main@writeStartAddress& (0+255),w,b
  6607  000FB8  5DEE               	subwf	main@writeEndAddress& (0+255),w,b
  6608  000FBA  0100               	movlb	0	; () banked
  6609  000FBC  6FB7               	movwf	??_main& (0+255),b
  6610  000FBE  0101               	movlb	1	; () banked
  6611  000FC0  51EB               	movf	(main@writeStartAddress+1)& (0+255),w,b
  6612  000FC2  59EF               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  6613  000FC4  0100               	movlb	0	; () banked
  6614  000FC6  6FB8               	movwf	(??_main+1)& (0+255),b
  6615  000FC8  0101               	movlb	1	; () banked
  6616  000FCA  51EC               	movf	(main@writeStartAddress+2)& (0+255),w,b
  6617  000FCC  59F0               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  6618  000FCE  0100               	movlb	0	; () banked
  6619  000FD0  6FB9               	movwf	(??_main+2)& (0+255),b
  6620  000FD2  0101               	movlb	1	; () banked
  6621  000FD4  51ED               	movf	(main@writeStartAddress+3)& (0+255),w,b
  6622  000FD6  59F1               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  6623  000FD8  0100               	movlb	0	; () banked
  6624  000FDA  6FBA               	movwf	(??_main+3)& (0+255),b
  6625  000FDC  0E0A               	movlw	10
  6626  000FDE  EFF6  F007         	goto	u6850
  6627  000FE2                     u6855:
  6628  000FE2  90D8               	bcf	status,0,c
  6629  000FE4  33BA               	rrcf	(??_main+3)& (0+255),f,b
  6630  000FE6  33B9               	rrcf	(??_main+2)& (0+255),f,b
  6631  000FE8  33B8               	rrcf	(??_main+1)& (0+255),f,b
  6632  000FEA  33B7               	rrcf	??_main& (0+255),f,b
  6633  000FEC                     u6850:
  6634  000FEC  2EE8               	decfsz	wreg,f,c
  6635  000FEE  EFF1  F007         	goto	u6855
  6636  000FF2  C0B7  F0A5         	movff	??_main,?_printf+2
  6637  000FF6  C0B8  F0A6         	movff	??_main+1,?_printf+3
  6638  000FFA  C0B9  F0A7         	movff	??_main+2,?_printf+4
  6639  000FFE  C0BA  F0A8         	movff	??_main+3,?_printf+5
  6640  001002  ECE6  F01B         	call	_printf	;wreg free
  6641  001006                     
  6642                           ;main.c: 352:             case 'a':
  6643  001006  0E0A               	movlw	low STR_56
  6644  001008  0100               	movlb	0	; () banked
  6645  00100A  6FA3               	movwf	printf@fmt& (0+255),b
  6646  00100C  0EFC               	movlw	high STR_56
  6647  00100E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6648  001010  ECE6  F01B         	call	_printf	;wreg free
  6649  001014                     
  6650                           ;main.c: 353:                 if (cmd == 'a') {
  6651  001014  0E00               	movlw	low STR_46
  6652  001016  0100               	movlb	0	; () banked
  6653  001018  6FA3               	movwf	printf@fmt& (0+255),b
  6654  00101A  0EFB               	movlw	high STR_46
  6655  00101C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6656  00101E  ECE6  F01B         	call	_printf	;wreg free
  6657  001022                     
  6658                           ;main.c: 354:                     sdCardAddress -= 512;
  6659  001022  0E03               	movlw	low STR_47
  6660  001024  0100               	movlb	0	; () banked
  6661  001026  6FA3               	movwf	printf@fmt& (0+255),b
  6662  001028  0EFD               	movlw	high STR_47
  6663  00102A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6664  00102C  ECE6  F01B         	call	_printf	;wreg free
  6665  001030                     
  6666                           ;main.c: 355:                     if (sdCardAddress >= 0x04000000) {
  6667  001030  0EA4               	movlw	low STR_48
  6668  001032  0100               	movlb	0	; () banked
  6669  001034  6FA3               	movwf	printf@fmt& (0+255),b
  6670  001036  0EFE               	movlw	high STR_48
  6671  001038  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6672  00103A  ECE6  F01B         	call	_printf	;wreg free
  6673  00103E                     
  6674                           ;main.c: 356:                         printf("Underflowed to high address\r\n");
  6675  00103E  0EB9               	movlw	low STR_60
  6676  001040  0100               	movlb	0	; () banked
  6677  001042  6FA3               	movwf	printf@fmt& (0+255),b
  6678  001044  0EFC               	movlw	high STR_60
  6679  001046  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6680  001048  ECE6  F01B         	call	_printf	;wreg free
  6681  00104C                     
  6682                           ;main.c: 357:                         sdCardAddress = 0x04000000 - 512;
  6683  00104C  0EBA               	movlw	low STR_61
  6684  00104E  0100               	movlb	0	; () banked
  6685  001050  6FA3               	movwf	printf@fmt& (0+255),b
  6686  001052  0EFE               	movlw	high STR_61
  6687  001054  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6688  001056  ECE6  F01B         	call	_printf	;wreg free
  6689                           
  6690                           ;main.c: 359:                         printf("Decreased address\r\n");
  6691  00105A  EF8C  F000         	goto	l6128
  6692  00105E                     l6488:
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;main.c: 367:                         printf("Increased address\r\n");
  6696  00105E  ECC6  F01C         	call	_SPI2_Close	;wreg free
  6697  001062                     
  6698                           ;main.c: 368:                     }
  6699  001062  0E00               	movlw	0
  6700  001064  EC05  F018         	call	_SPI2_Open
  6701  001068                     
  6702                           ;main.c: 369:                 }
  6703  001068  0E01               	movlw	1
  6704  00106A  ECEC  F014         	call	_SDCARD_Initialize
  6705                           
  6706                           ;main.c: 370: 
  6707  00106E  EF8C  F000         	goto	l6128
  6708  001072                     l6494:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;main.c: 377:                 break;
  6712  001072  0E61               	movlw	97
  6713  001074  0101               	movlb	1	; () banked
  6714  001076  19E3               	xorwf	main@cmd& (0+255),w,b
  6715  001078  A4D8               	btfss	status,2,c
  6716  00107A  EF41  F008         	goto	u6861
  6717  00107E  EF43  F008         	goto	u6860
  6718  001082                     u6861:
  6719  001082  EF6F  F008         	goto	l6504
  6720  001086                     u6860:
  6721  001086                     
  6722                           ; BSR set to: 1
  6723                           ;main.c: 378: 
  6724  001086  0E00               	movlw	0
  6725  001088  5FF2               	subwf	main@sdCardAddress& (0+255),f,b
  6726  00108A  0E02               	movlw	2
  6727  00108C  5BF3               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  6728  00108E  0E00               	movlw	0
  6729  001090  5BF4               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  6730  001092  0E00               	movlw	0
  6731  001094  5BF5               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  6732                           
  6733                           ;main.c: 379: 
  6734  001096  0E04               	movlw	4
  6735  001098  5DF5               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6736  00109A  A0D8               	btfss	status,0,c
  6737  00109C  EF52  F008         	goto	u6871
  6738  0010A0  EF54  F008         	goto	u6870
  6739  0010A4                     u6871:
  6740  0010A4  EF66  F008         	goto	l6502
  6741  0010A8                     u6870:
  6742  0010A8                     
  6743                           ; BSR set to: 1
  6744                           ;main.c: 380: 
  6745  0010A8  0E81               	movlw	low STR_62
  6746  0010AA  0100               	movlb	0	; () banked
  6747  0010AC  6FA3               	movwf	printf@fmt& (0+255),b
  6748  0010AE  0EFD               	movlw	high STR_62
  6749  0010B0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6750  0010B2  ECE6  F01B         	call	_printf	;wreg free
  6751  0010B6                     
  6752                           ;main.c: 381: 
  6753  0010B6  0E00               	movlw	0
  6754  0010B8  0101               	movlb	1	; () banked
  6755  0010BA  6FF2               	movwf	main@sdCardAddress& (0+255),b
  6756  0010BC  0EFE               	movlw	254
  6757  0010BE  6FF3               	movwf	(main@sdCardAddress+1)& (0+255),b
  6758  0010C0  0EFF               	movlw	255
  6759  0010C2  6FF4               	movwf	(main@sdCardAddress+2)& (0+255),b
  6760  0010C4  0E03               	movlw	3
  6761  0010C6  6FF5               	movwf	(main@sdCardAddress+3)& (0+255),b
  6762                           
  6763                           ;main.c: 382:             case 'r':
  6764  0010C8  EF99  F008         	goto	l582
  6765  0010CC                     l6502:
  6766                           
  6767                           ; BSR set to: 1
  6768                           ;main.c: 383:                 SDCARD_ReadBlock(sdCardAddress, sdCardBuffer);
  6769  0010CC  0E0E               	movlw	low STR_63
  6770  0010CE  0100               	movlb	0	; () banked
  6771  0010D0  6FA3               	movwf	printf@fmt& (0+255),b
  6772  0010D2  0EFF               	movlw	high STR_63
  6773  0010D4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6774  0010D6  ECE6  F01B         	call	_printf	;wreg free
  6775  0010DA  EF99  F008         	goto	l582
  6776  0010DE                     l6504:
  6777                           
  6778                           ; BSR set to: 1
  6779                           ;main.c: 386:                 hexDumpBuffer(sdCardBuffer);
  6780  0010DE  0E00               	movlw	0
  6781  0010E0  27F2               	addwf	main@sdCardAddress& (0+255),f,b
  6782  0010E2  0E02               	movlw	2
  6783  0010E4  23F3               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  6784  0010E6  0E00               	movlw	0
  6785  0010E8  23F4               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  6786  0010EA  0E00               	movlw	0
  6787  0010EC  23F5               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  6788                           
  6789                           ;main.c: 387:                 break;
  6790  0010EE  0E04               	movlw	4
  6791  0010F0  5DF5               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6792  0010F2  A0D8               	btfss	status,0,c
  6793  0010F4  EF7E  F008         	goto	u6881
  6794  0010F8  EF80  F008         	goto	u6880
  6795  0010FC                     u6881:
  6796  0010FC  EF92  F008         	goto	l6510
  6797  001100                     u6880:
  6798  001100                     
  6799                           ; BSR set to: 1
  6800                           ;main.c: 388: 
  6801  001100  0ED8               	movlw	low STR_64
  6802  001102  0100               	movlb	0	; () banked
  6803  001104  6FA3               	movwf	printf@fmt& (0+255),b
  6804  001106  0EFD               	movlw	high STR_64
  6805  001108  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6806  00110A  ECE6  F01B         	call	_printf	;wreg free
  6807  00110E                     
  6808                           ;main.c: 389: 
  6809  00110E  0E00               	movlw	0
  6810  001110  0101               	movlb	1	; () banked
  6811  001112  6FF2               	movwf	main@sdCardAddress& (0+255),b
  6812  001114  0E00               	movlw	0
  6813  001116  6FF3               	movwf	(main@sdCardAddress+1)& (0+255),b
  6814  001118  0E00               	movlw	0
  6815  00111A  6FF4               	movwf	(main@sdCardAddress+2)& (0+255),b
  6816  00111C  0E00               	movlw	0
  6817  00111E  6FF5               	movwf	(main@sdCardAddress+3)& (0+255),b
  6818                           
  6819                           ;main.c: 390: 
  6820  001120  EF99  F008         	goto	l582
  6821  001124                     l6510:
  6822                           
  6823                           ; BSR set to: 1
  6824                           ;main.c: 391: 
  6825  001124  0E22               	movlw	low STR_65
  6826  001126  0100               	movlb	0	; () banked
  6827  001128  6FA3               	movwf	printf@fmt& (0+255),b
  6828  00112A  0EFF               	movlw	high STR_65
  6829  00112C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6830  00112E  ECE6  F01B         	call	_printf	;wreg free
  6831  001132                     l582:
  6832                           
  6833                           ;main.c: 396:     }
  6834  001132  0E4A               	movlw	low STR_66
  6835  001134  0100               	movlb	0	; () banked
  6836  001136  6FA3               	movwf	printf@fmt& (0+255),b
  6837  001138  0EFF               	movlw	high STR_66
  6838  00113A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6839  00113C  ECE6  F01B         	call	_printf	;wreg free
  6840                           
  6841                           ;main.c: 397: }
  6842  001140  0EE9               	movlw	low STR_10
  6843  001142  0100               	movlb	0	; () banked
  6844  001144  6FA3               	movwf	printf@fmt& (0+255),b
  6845  001146  0EFF               	movlw	high STR_10
  6846  001148  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6847  00114A  C1F4  F0A5         	movff	main@sdCardAddress+2,?_printf+2
  6848  00114E  C1F5  F0A6         	movff	main@sdCardAddress+3,?_printf+3
  6849  001152  6BA7               	clrf	(?_printf+4)& (0+255),b
  6850  001154  6BA8               	clrf	(?_printf+5)& (0+255),b
  6851  001156  ECE6  F01B         	call	_printf	;wreg free
  6852                           
  6853                           ;main.c: 398: 
  6854  00115A  0EFC               	movlw	low STR_11
  6855  00115C  0100               	movlb	0	; () banked
  6856  00115E  6FA3               	movwf	printf@fmt& (0+255),b
  6857  001160  0EFF               	movlw	high STR_11
  6858  001162  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6859  001164  ECE6  F01B         	call	_printf	;wreg free
  6860                           
  6861                           ;main.c: 399: uint32_t incrementAddress(uint32_t sdCardAddress)
  6862  001168  0EE9               	movlw	low STR_10
  6863  00116A  0100               	movlb	0	; () banked
  6864  00116C  6FA3               	movwf	printf@fmt& (0+255),b
  6865  00116E  0EFF               	movlw	high STR_10
  6866  001170  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6867  001172  0EFF               	movlw	255
  6868  001174  0101               	movlb	1	; () banked
  6869  001176  15F2               	andwf	main@sdCardAddress& (0+255),w,b
  6870  001178  0100               	movlb	0	; () banked
  6871  00117A  6FA5               	movwf	(?_printf+2)& (0+255),b
  6872  00117C  0EFF               	movlw	255
  6873  00117E  0101               	movlb	1	; () banked
  6874  001180  15F3               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  6875  001182  0100               	movlb	0	; () banked
  6876  001184  6FA6               	movwf	(?_printf+3)& (0+255),b
  6877  001186  0E00               	movlw	0
  6878  001188  0101               	movlb	1	; () banked
  6879  00118A  15F4               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  6880  00118C  0100               	movlb	0	; () banked
  6881  00118E  6FA7               	movwf	(?_printf+4)& (0+255),b
  6882  001190  0E00               	movlw	0
  6883  001192  0101               	movlb	1	; () banked
  6884  001194  15F5               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  6885  001196  0100               	movlb	0	; () banked
  6886  001198  6FA8               	movwf	(?_printf+5)& (0+255),b
  6887  00119A  ECE6  F01B         	call	_printf	;wreg free
  6888                           
  6889                           ;main.c: 400: {
  6890  00119E  0E9C               	movlw	low (STR_71+12)
  6891  0011A0  0100               	movlb	0	; () banked
  6892  0011A2  6FA3               	movwf	printf@fmt& (0+255),b
  6893  0011A4  0EFF               	movlw	high (STR_71+12)
  6894  0011A6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6895  0011A8  ECE6  F01B         	call	_printf	;wreg free
  6896                           
  6897                           ;main.c: 401:     sdCardAddress += 512;
  6898  0011AC  EF8C  F000         	goto	l6128
  6899  0011B0                     l6512:
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;main.c: 407: uint32_t decrementAddress(uint32_t sdCardAddress) {
  6903  0011B0  C1F2  F014         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  6904  0011B4  C1F3  F015         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  6905  0011B8  C1F4  F016         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  6906  0011BC  C1F5  F017         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  6907  0011C0  0EFC               	movlw	low _sdCardBuffer
  6908  0011C2  6E18               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6909  0011C4  0E07               	movlw	high _sdCardBuffer
  6910  0011C6  6E19               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6911  0011C8  EC5B  F018         	call	_SDCARD_ReadBlock	;wreg free
  6912  0011CC                     
  6913                           ;main.c: 408:     sdCardAddress -= 512;
  6914  0011CC  0E90               	movlw	low STR_71
  6915  0011CE  0100               	movlb	0	; () banked
  6916  0011D0  6FA3               	movwf	printf@fmt& (0+255),b
  6917  0011D2  0EFF               	movlw	high STR_71
  6918  0011D4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6919  0011D6  ECE6  F01B         	call	_printf	;wreg free
  6920  0011DA                     
  6921                           ;main.c: 409:     if (sdCardAddress >= 0x04000000)
  6922  0011DA  C1F2  F0AD         	movff	main@sdCardAddress,printAddress@address
  6923  0011DE  C1F3  F0AE         	movff	main@sdCardAddress+1,printAddress@address+1
  6924  0011E2  C1F4  F0AF         	movff	main@sdCardAddress+2,printAddress@address+2
  6925  0011E6  C1F5  F0B0         	movff	main@sdCardAddress+3,printAddress@address+3
  6926  0011EA  EC74  F019         	call	_printAddress	;wreg free
  6927  0011EE                     
  6928                           ;main.c: 410:         sdCardAddress = 0x04000000 - 512;
  6929  0011EE  0EFC               	movlw	low _sdCardBuffer
  6930  0011F0  0100               	movlb	0	; () banked
  6931  0011F2  6FAD               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  6932  0011F4  0E07               	movlw	high _sdCardBuffer
  6933  0011F6  6FAE               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  6934  0011F8  EC65  F012         	call	_hexDumpBuffer	;wreg free
  6935                           
  6936                           ;main.c: 411:     return sdCardAddress;
  6937  0011FC  EF8C  F000         	goto	l6128
  6938  001200                     l6520:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;main.c: 417:     printf("%04x", address >> 16);
  6942  001200  0E5D               	movlw	low STR_72
  6943  001202  6FA3               	movwf	printf@fmt& (0+255),b
  6944  001204  0EFF               	movlw	high STR_72
  6945  001206  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  6946  001208  C1E3  F0A5         	movff	main@cmd,?_printf+2
  6947  00120C  6BA6               	clrf	(?_printf+3)& (0+255),b
  6948  00120E  ECE6  F01B         	call	_printf	;wreg free
  6949                           
  6950                           ;main.c: 418:     printf(":");
  6951  001212  EF8C  F000         	goto	l6128
  6952  001216                     l6524:
  6953  001216  0101               	movlb	1	; () banked
  6954  001218  51E3               	movf	main@cmd& (0+255),w,b
  6955  00121A  0100               	movlb	0	; () banked
  6956  00121C  6FB7               	movwf	??_main& (0+255),b
  6957  00121E  6BB8               	clrf	(??_main+1)& (0+255),b
  6958                           
  6959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6960                           ; Switch size 1, requested type "simple"
  6961                           ; Number of cases is 1, Range of values is 0 to 0
  6962                           ; switch strategies available:
  6963                           ; Name         Instructions Cycles
  6964                           ; simple_byte            4     3 (average)
  6965                           ;	Chosen strategy is simple_byte
  6966  001220  51B8               	movf	(??_main+1)& (0+255),w,b
  6967  001222  0A00               	xorlw	0	; case 0
  6968  001224  B4D8               	btfsc	status,2,c
  6969  001226  EF17  F009         	goto	l6652
  6970  00122A  EF00  F009         	goto	l6520
  6971  00122E                     l6652:
  6972                           
  6973                           ; BSR set to: 0
  6974                           ; Switch size 1, requested type "simple"
  6975                           ; Number of cases is 14, Range of values is 43 to 122
  6976                           ; switch strategies available:
  6977                           ; Name         Instructions Cycles
  6978                           ; simple_byte           43    22 (average)
  6979                           ;	Chosen strategy is simple_byte
  6980  00122E  51B7               	movf	??_main& (0+255),w,b
  6981  001230  0A2B               	xorlw	43	; case 43
  6982  001232  B4D8               	btfsc	status,2,c
  6983  001234  EFF3  F002         	goto	l6216
  6984  001238  0A06               	xorlw	6	; case 45
  6985  00123A  B4D8               	btfsc	status,2,c
  6986  00123C  EFFB  F002         	goto	l6218
  6987  001240  0A1C               	xorlw	28	; case 49
  6988  001242  B4D8               	btfsc	status,2,c
  6989  001244  EFF6  F001         	goto	l474
  6990  001248  0A0E               	xorlw	14	; case 63
  6991  00124A  B4D8               	btfsc	status,2,c
  6992  00124C  EFAD  F000         	goto	l6136
  6993  001250  0A7E               	xorlw	126	; case 65
  6994  001252  B4D8               	btfsc	status,2,c
  6995  001254  EF39  F008         	goto	l6494
  6996  001258  0A11               	xorlw	17	; case 80
  6997  00125A  B4D8               	btfsc	status,2,c
  6998  00125C  EF0E  F003         	goto	l6222
  6999  001260  0A07               	xorlw	7	; case 87
  7000  001262  B4D8               	btfsc	status,2,c
  7001  001264  EFD7  F003         	goto	l6260
  7002  001268  0A0D               	xorlw	13	; case 90
  7003  00126A  B4D8               	btfsc	status,2,c
  7004  00126C  EFB7  F001         	goto	l6140
  7005  001270  0A3B               	xorlw	59	; case 97
  7006  001272  B4D8               	btfsc	status,2,c
  7007  001274  EF39  F008         	goto	l6494
  7008  001278  0A08               	xorlw	8	; case 105
  7009  00127A  B4D8               	btfsc	status,2,c
  7010  00127C  EF2F  F008         	goto	l6488
  7011  001280  0A06               	xorlw	6	; case 111
  7012  001282  B4D8               	btfsc	status,2,c
  7013  001284  EFAF  F001         	goto	l6138
  7014  001288  0A1D               	xorlw	29	; case 114
  7015  00128A  B4D8               	btfsc	status,2,c
  7016  00128C  EFD8  F008         	goto	l6512
  7017  001290  0A01               	xorlw	1	; case 115
  7018  001292  B4D8               	btfsc	status,2,c
  7019  001294  EFDD  F006         	goto	l6432
  7020  001298  0A09               	xorlw	9	; case 122
  7021  00129A  B4D8               	btfsc	status,2,c
  7022  00129C  EFD8  F001         	goto	l6152
  7023  0012A0  EF00  F009         	goto	l6520
  7024  0012A4  EF27  F000         	goto	start
  7025  0012A8                     __end_of_main:
  7026                           	callstack 0
  7027                           
  7028 ;; *************** function _printAscii *****************
  7029 ;; Defined at:
  7030 ;;		line 569 in file "main.c"
  7031 ;; Parameters:    Size  Location     Type
  7032 ;;		None
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;		None
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  1    wreg      void 
  7037 ;; Registers used:
  7038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;Total ram usage:        0 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:   13
  7051 ;; This function calls:
  7052 ;;		_printf
  7053 ;; This function is called by:
  7054 ;;		_main
  7055 ;; This function uses a non-reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text1
  7059  0022DE                     __ptext1:
  7060                           	callstack 0
  7061  0022DE                     _printAscii:
  7062                           	callstack 17
  7063  0022DE                     
  7064                           ;main.c: 570:     printf("...........................................................\r\
      +                          n");
  7065  0022DE  0E3C               	movlw	low STR_78
  7066  0022E0  0100               	movlb	0	; () banked
  7067  0022E2  6FA3               	movwf	printf@fmt& (0+255),b
  7068  0022E4  0EF4               	movlw	high STR_78
  7069  0022E6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7070  0022E8  ECE6  F01B         	call	_printf	;wreg free
  7071                           
  7072                           ;main.c: 571:     printf(".....................?????????????????.....................\r\
      +                          n");
  7073  0022EC  0E7A               	movlw	low STR_79
  7074  0022EE  0100               	movlb	0	; () banked
  7075  0022F0  6FA3               	movwf	printf@fmt& (0+255),b
  7076  0022F2  0EF4               	movlw	high STR_79
  7077  0022F4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7078  0022F6  ECE6  F01B         	call	_printf	;wreg free
  7079                           
  7080                           ;main.c: 572:     printf(".................?????????????????????????.................\r\
      +                          n");
  7081  0022FA  0EB8               	movlw	low STR_80
  7082  0022FC  0100               	movlb	0	; () banked
  7083  0022FE  6FA3               	movwf	printf@fmt& (0+255),b
  7084  002300  0EF4               	movlw	high STR_80
  7085  002302  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7086  002304  ECE6  F01B         	call	_printf	;wreg free
  7087                           
  7088                           ;main.c: 573:     printf("..............???????????????????????????????..............\r\
      +                          n");
  7089  002308  0EF6               	movlw	low STR_81
  7090  00230A  0100               	movlb	0	; () banked
  7091  00230C  6FA3               	movwf	printf@fmt& (0+255),b
  7092  00230E  0EF4               	movlw	high STR_81
  7093  002310  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7094  002312  ECE6  F01B         	call	_printf	;wreg free
  7095                           
  7096                           ;main.c: 574:     printf("............???????????????????????????????????............\r\
      +                          n");
  7097  002316  0E34               	movlw	low STR_82
  7098  002318  0100               	movlb	0	; () banked
  7099  00231A  6FA3               	movwf	printf@fmt& (0+255),b
  7100  00231C  0EF5               	movlw	high STR_82
  7101  00231E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7102  002320  ECE6  F01B         	call	_printf	;wreg free
  7103                           
  7104                           ;main.c: 575:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  7105  002324  0E72               	movlw	low STR_83
  7106  002326  0100               	movlb	0	; () banked
  7107  002328  6FA3               	movwf	printf@fmt& (0+255),b
  7108  00232A  0EF5               	movlw	high STR_83
  7109  00232C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7110  00232E  ECE6  F01B         	call	_printf	;wreg free
  7111                           
  7112                           ;main.c: 576:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  7113  002332  0EB0               	movlw	low STR_84
  7114  002334  0100               	movlb	0	; () banked
  7115  002336  6FA3               	movwf	printf@fmt& (0+255),b
  7116  002338  0EF5               	movlw	high STR_84
  7117  00233A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7118  00233C  ECE6  F01B         	call	_printf	;wreg free
  7119                           
  7120                           ;main.c: 577:     printf(".......?????????????????????????????????????????????.......\r\
      +                          n");
  7121  002340  0E2C               	movlw	low STR_85
  7122  002342  0100               	movlb	0	; () banked
  7123  002344  6FA3               	movwf	printf@fmt& (0+255),b
  7124  002346  0EF6               	movlw	high STR_85
  7125  002348  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7126  00234A  ECE6  F01B         	call	_printf	;wreg free
  7127                           
  7128                           ;main.c: 578:     printf("......???????????????????????????????????????????????......\r\
      +                          n");
  7129  00234E  0EA8               	movlw	low STR_86
  7130  002350  0100               	movlb	0	; () banked
  7131  002352  6FA3               	movwf	printf@fmt& (0+255),b
  7132  002354  0EF6               	movlw	high STR_86
  7133  002356  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7134  002358  ECE6  F01B         	call	_printf	;wreg free
  7135                           
  7136                           ;main.c: 579:     printf(".....?????????????????????????????????????????????????.....\r\
      +                          n");
  7137  00235C  0E24               	movlw	low STR_87
  7138  00235E  0100               	movlb	0	; () banked
  7139  002360  6FA3               	movwf	printf@fmt& (0+255),b
  7140  002362  0EF7               	movlw	high STR_87
  7141  002364  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7142  002366  ECE6  F01B         	call	_printf	;wreg free
  7143                           
  7144                           ;main.c: 580:     printf("....????:::::::::::?????????????????????:::::::::::????....\r\
      +                          n");
  7145  00236A  0E62               	movlw	low STR_88
  7146  00236C  0100               	movlb	0	; () banked
  7147  00236E  6FA3               	movwf	printf@fmt& (0+255),b
  7148  002370  0EF7               	movlw	high STR_88
  7149  002372  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7150  002374  ECE6  F01B         	call	_printf	;wreg free
  7151                           
  7152                           ;main.c: 581:     printf("...??::::::::::::::::::::?????????::::::::::::::::::::??...\r\
      +                          n");
  7153  002378  0EDE               	movlw	low STR_89
  7154  00237A  0100               	movlb	0	; () banked
  7155  00237C  6FA3               	movwf	printf@fmt& (0+255),b
  7156  00237E  0EF7               	movlw	high STR_89
  7157  002380  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7158  002382  ECE6  F01B         	call	_printf	;wreg free
  7159                           
  7160                           ;main.c: 582:     printf("..???:::::::::::::::::::::::::::::::::::::::::::::::::???..\r\
      +                          n");
  7161  002386  0E98               	movlw	low STR_90
  7162  002388  0100               	movlb	0	; () banked
  7163  00238A  6FA3               	movwf	printf@fmt& (0+255),b
  7164  00238C  0EF8               	movlw	high STR_90
  7165  00238E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7166  002390  ECE6  F01B         	call	_printf	;wreg free
  7167                           
  7168                           ;main.c: 583:     printf("..????::::::::::::::::::::::???::::::::::::::::::::::????..\r\
      +                          n");
  7169  002394  0ED6               	movlw	low STR_91
  7170  002396  0100               	movlb	0	; () banked
  7171  002398  6FA3               	movwf	printf@fmt& (0+255),b
  7172  00239A  0EF8               	movlw	high STR_91
  7173  00239C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7174  00239E  ECE6  F01B         	call	_printf	;wreg free
  7175                           
  7176                           ;main.c: 584:     printf(".??????::::::::::::::::::::?????:::::::::::::::::::::?????.\r\
      +                          n");
  7177  0023A2  0E90               	movlw	low STR_92
  7178  0023A4  0100               	movlb	0	; () banked
  7179  0023A6  6FA3               	movwf	printf@fmt& (0+255),b
  7180  0023A8  0EF9               	movlw	high STR_92
  7181  0023AA  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7182  0023AC  ECE6  F01B         	call	_printf	;wreg free
  7183                           
  7184                           ;main.c: 585:     printf(".???????::::::::::::::::::???????:::::::::::::::::::??????.\r\
      +                          n");
  7185  0023B0  0ECE               	movlw	low STR_93
  7186  0023B2  0100               	movlb	0	; () banked
  7187  0023B4  6FA3               	movwf	printf@fmt& (0+255),b
  7188  0023B6  0EF9               	movlw	high STR_93
  7189  0023B8  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7190  0023BA  ECE6  F01B         	call	_printf	;wreg free
  7191                           
  7192                           ;main.c: 586:     printf(".???????:::::::::::::::::?????????::::::::::::::::::??????.\r\
      +                          n");
  7193  0023BE  0E0C               	movlw	low STR_94
  7194  0023C0  0100               	movlb	0	; () banked
  7195  0023C2  6FA3               	movwf	printf@fmt& (0+255),b
  7196  0023C4  0EFA               	movlw	high STR_94
  7197  0023C6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7198  0023C8  ECE6  F01B         	call	_printf	;wreg free
  7199                           
  7200                           ;main.c: 587:     printf(".????????:::::::::::::::???????????:::::::::::::::????????.\r\
      +                          n");
  7201  0023CC  0E4A               	movlw	low STR_95
  7202  0023CE  0100               	movlb	0	; () banked
  7203  0023D0  6FA3               	movwf	printf@fmt& (0+255),b
  7204  0023D2  0EFA               	movlw	high STR_95
  7205  0023D4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7206  0023D6  ECE6  F01B         	call	_printf	;wreg free
  7207                           
  7208                           ;main.c: 588:     printf(".??????????::::::::::?????????????????::::::::::??????????.\r\
      +                          n");
  7209  0023DA  0E88               	movlw	low STR_96
  7210  0023DC  0100               	movlb	0	; () banked
  7211  0023DE  6FA3               	movwf	printf@fmt& (0+255),b
  7212  0023E0  0EFA               	movlw	high STR_96
  7213  0023E2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7214  0023E4  ECE6  F01B         	call	_printf	;wreg free
  7215                           
  7216                           ;main.c: 589:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7217  0023E8  0E52               	movlw	low STR_97
  7218  0023EA  0100               	movlb	0	; () banked
  7219  0023EC  6FA3               	movwf	printf@fmt& (0+255),b
  7220  0023EE  0EF9               	movlw	high STR_97
  7221  0023F0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7222  0023F2  ECE6  F01B         	call	_printf	;wreg free
  7223                           
  7224                           ;main.c: 590:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7225  0023F6  0E52               	movlw	low STR_97
  7226  0023F8  0100               	movlb	0	; () banked
  7227  0023FA  6FA3               	movwf	printf@fmt& (0+255),b
  7228  0023FC  0EF9               	movlw	high STR_97
  7229  0023FE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7230  002400  ECE6  F01B         	call	_printf	;wreg free
  7231                           
  7232                           ;main.c: 591:     printf("...??????????????????????????????????????????????????????..\r\
      +                          n");
  7233  002404  0E14               	movlw	low STR_99
  7234  002406  0100               	movlb	0	; () banked
  7235  002408  6FA3               	movwf	printf@fmt& (0+255),b
  7236  00240A  0EF9               	movlw	high STR_99
  7237  00240C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7238  00240E  ECE6  F01B         	call	_printf	;wreg free
  7239                           
  7240                           ;main.c: 592:     printf("...?????????????:::?????????????????????:::?????????????...\r\
      +                          n");
  7241  002412  0E1C               	movlw	low STR_100
  7242  002414  0100               	movlb	0	; () banked
  7243  002416  6FA3               	movwf	printf@fmt& (0+255),b
  7244  002418  0EF8               	movlw	high STR_100
  7245  00241A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7246  00241C  ECE6  F01B         	call	_printf	;wreg free
  7247                           
  7248                           ;main.c: 593:     printf("....?????????????:::???????????????????:::??????????????...\r\
      +                          n");
  7249  002420  0E5A               	movlw	low STR_101
  7250  002422  0100               	movlb	0	; () banked
  7251  002424  6FA3               	movwf	printf@fmt& (0+255),b
  7252  002426  0EF8               	movlw	high STR_101
  7253  002428  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7254  00242A  ECE6  F01B         	call	_printf	;wreg free
  7255                           
  7256                           ;main.c: 594:     printf("....??????????????:::?????????????????:::??????????????....\r\
      +                          n");
  7257  00242E  0EA0               	movlw	low STR_102
  7258  002430  0100               	movlb	0	; () banked
  7259  002432  6FA3               	movwf	printf@fmt& (0+255),b
  7260  002434  0EF7               	movlw	high STR_102
  7261  002436  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7262  002438  ECE6  F01B         	call	_printf	;wreg free
  7263                           
  7264                           ;main.c: 595:     printf(".....??????????????::::?????????????::::??????????????.....\r\
      +                          n");
  7265  00243C  0EE6               	movlw	low STR_103
  7266  00243E  0100               	movlb	0	; () banked
  7267  002440  6FA3               	movwf	printf@fmt& (0+255),b
  7268  002442  0EF6               	movlw	high STR_103
  7269  002444  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7270  002446  ECE6  F01B         	call	_printf	;wreg free
  7271                           
  7272                           ;main.c: 596:     printf("......???????????????:::::???????:::::???????????????......\r\
      +                          n");
  7273  00244A  0E6A               	movlw	low STR_104
  7274  00244C  0100               	movlb	0	; () banked
  7275  00244E  6FA3               	movwf	printf@fmt& (0+255),b
  7276  002450  0EF6               	movlw	high STR_104
  7277  002452  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7278  002454  ECE6  F01B         	call	_printf	;wreg free
  7279                           
  7280                           ;main.c: 597:     printf(".......?????????????????:::::::::::?????????????????.......\r\
      +                          n");
  7281  002458  0EEE               	movlw	low STR_105
  7282  00245A  0100               	movlb	0	; () banked
  7283  00245C  6FA3               	movwf	printf@fmt& (0+255),b
  7284  00245E  0EF5               	movlw	high STR_105
  7285  002460  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7286  002462  ECE6  F01B         	call	_printf	;wreg free
  7287                           
  7288                           ;main.c: 598:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  7289  002466  0EB0               	movlw	low STR_84
  7290  002468  0100               	movlb	0	; () banked
  7291  00246A  6FA3               	movwf	printf@fmt& (0+255),b
  7292  00246C  0EF5               	movlw	high STR_84
  7293  00246E  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7294  002470  ECE6  F01B         	call	_printf	;wreg free
  7295                           
  7296                           ;main.c: 599:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  7297  002474  0E72               	movlw	low STR_83
  7298  002476  0100               	movlb	0	; () banked
  7299  002478  6FA3               	movwf	printf@fmt& (0+255),b
  7300  00247A  0EF5               	movlw	high STR_83
  7301  00247C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7302  00247E  ECE6  F01B         	call	_printf	;wreg free
  7303                           
  7304                           ;main.c: 600:     printf("............???????????????????????????????????............\r\
      +                          n");
  7305  002482  0E34               	movlw	low STR_82
  7306  002484  0100               	movlb	0	; () banked
  7307  002486  6FA3               	movwf	printf@fmt& (0+255),b
  7308  002488  0EF5               	movlw	high STR_82
  7309  00248A  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7310  00248C  ECE6  F01B         	call	_printf	;wreg free
  7311                           
  7312                           ;main.c: 601:     printf("..............???????????????????????????????..............\r\
      +                          n");
  7313  002490  0EF6               	movlw	low STR_81
  7314  002492  0100               	movlb	0	; () banked
  7315  002494  6FA3               	movwf	printf@fmt& (0+255),b
  7316  002496  0EF4               	movlw	high STR_81
  7317  002498  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7318  00249A  ECE6  F01B         	call	_printf	;wreg free
  7319                           
  7320                           ;main.c: 602:     printf(".................?????????????????????????.................\r\
      +                          n");
  7321  00249E  0EB8               	movlw	low STR_80
  7322  0024A0  0100               	movlb	0	; () banked
  7323  0024A2  6FA3               	movwf	printf@fmt& (0+255),b
  7324  0024A4  0EF4               	movlw	high STR_80
  7325  0024A6  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7326  0024A8  ECE6  F01B         	call	_printf	;wreg free
  7327                           
  7328                           ;main.c: 603:     printf(".....................?????????????????.....................\r\
      +                          n");
  7329  0024AC  0E7A               	movlw	low STR_79
  7330  0024AE  0100               	movlb	0	; () banked
  7331  0024B0  6FA3               	movwf	printf@fmt& (0+255),b
  7332  0024B2  0EF4               	movlw	high STR_79
  7333  0024B4  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7334  0024B6  ECE6  F01B         	call	_printf	;wreg free
  7335                           
  7336                           ;main.c: 604:     printf("...........................................................\r\
      +                          n");
  7337  0024BA  0E3C               	movlw	low STR_78
  7338  0024BC  0100               	movlb	0	; () banked
  7339  0024BE  6FA3               	movwf	printf@fmt& (0+255),b
  7340  0024C0  0EF4               	movlw	high STR_78
  7341  0024C2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7342  0024C4  ECE6  F01B         	call	_printf	;wreg free
  7343  0024C8  0012               	return		;funcret
  7344  0024CA                     __end_of_printAscii:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function _printAddress *****************
  7348 ;; Defined at:
  7349 ;;		line 438 in file "main.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  address         4   77[BANK0 ] unsigned long 
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  1    wreg      void 
  7356 ;; Registers used:
  7357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;Total ram usage:        4 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:   13
  7370 ;; This function calls:
  7371 ;;		_printf
  7372 ;; This function is called by:
  7373 ;;		_main
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text2
  7378  0032E8                     __ptext2:
  7379                           	callstack 0
  7380  0032E8                     _printAddress:
  7381                           	callstack 17
  7382  0032E8  0E6E               	movlw	low STR_73
  7383  0032EA  0100               	movlb	0	; () banked
  7384  0032EC  6FA3               	movwf	printf@fmt& (0+255),b
  7385  0032EE  0EFF               	movlw	high STR_73
  7386  0032F0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7387  0032F2  ECE6  F01B         	call	_printf	;wreg free
  7388  0032F6  0EE9               	movlw	low STR_10
  7389  0032F8  0100               	movlb	0	; () banked
  7390  0032FA  6FA3               	movwf	printf@fmt& (0+255),b
  7391  0032FC  0EFF               	movlw	high STR_10
  7392  0032FE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7393  003300  C0AF  F0A5         	movff	printAddress@address+2,?_printf+2
  7394  003304  C0B0  F0A6         	movff	printAddress@address+3,?_printf+3
  7395  003308  6BA7               	clrf	(?_printf+4)& (0+255),b
  7396  00330A  6BA8               	clrf	(?_printf+5)& (0+255),b
  7397  00330C  ECE6  F01B         	call	_printf	;wreg free
  7398  003310  0EFC               	movlw	low STR_11
  7399  003312  0100               	movlb	0	; () banked
  7400  003314  6FA3               	movwf	printf@fmt& (0+255),b
  7401  003316  0EFF               	movlw	high STR_11
  7402  003318  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7403  00331A  ECE6  F01B         	call	_printf	;wreg free
  7404  00331E  0EE9               	movlw	low STR_10
  7405  003320  0100               	movlb	0	; () banked
  7406  003322  6FA3               	movwf	printf@fmt& (0+255),b
  7407  003324  0EFF               	movlw	high STR_10
  7408  003326  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7409  003328  0EFF               	movlw	255
  7410  00332A  15AD               	andwf	printAddress@address& (0+255),w,b
  7411  00332C  6FA5               	movwf	(?_printf+2)& (0+255),b
  7412  00332E  0EFF               	movlw	255
  7413  003330  15AE               	andwf	(printAddress@address+1)& (0+255),w,b
  7414  003332  6FA6               	movwf	(?_printf+3)& (0+255),b
  7415  003334  0E00               	movlw	0
  7416  003336  15AF               	andwf	(printAddress@address+2)& (0+255),w,b
  7417  003338  6FA7               	movwf	(?_printf+4)& (0+255),b
  7418  00333A  0E00               	movlw	0
  7419  00333C  15B0               	andwf	(printAddress@address+3)& (0+255),w,b
  7420  00333E  6FA8               	movwf	(?_printf+5)& (0+255),b
  7421  003340  ECE6  F01B         	call	_printf	;wreg free
  7422  003344  0E9C               	movlw	low (STR_71+12)
  7423  003346  0100               	movlb	0	; () banked
  7424  003348  6FA3               	movwf	printf@fmt& (0+255),b
  7425  00334A  0EFF               	movlw	high (STR_71+12)
  7426  00334C  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7427  00334E  ECE6  F01B         	call	_printf	;wreg free
  7428  003352  0012               	return		;funcret
  7429  003354                     __end_of_printAddress:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _microSecondDelay *****************
  7433 ;; Defined at:
  7434 ;;		line 447 in file "main.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  us              2   18[COMRAM] unsigned short 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  i               2   20[COMRAM] unsigned short 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;Total ram usage:        4 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    4
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		_main
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text3
  7463  003576                     __ptext3:
  7464                           	callstack 0
  7465  003576                     _microSecondDelay:
  7466                           	callstack 26
  7467  003576  0E00               	movlw	0
  7468  003578  6E16               	movwf	(microSecondDelay@i+1)^0,c
  7469  00357A  0E00               	movlw	0
  7470  00357C  6E15               	movwf	microSecondDelay@i^0,c
  7471  00357E  EFCD  F01A         	goto	l5896
  7472  003582                     l603:
  7473  003582  F000               	nop		;# 
  7474  003584  F000               	nop		;# 
  7475  003586  F000               	nop		;# 
  7476  003588  F000               	nop		;# 
  7477  00358A  F000               	nop		;# 
  7478  00358C  F000               	nop		;# 
  7479  00358E  F000               	nop		;# 
  7480  003590  F000               	nop		;# 
  7481  003592  F000               	nop		;# 
  7482  003594  F000               	nop		;# 
  7483  003596  4A15               	infsnz	microSecondDelay@i^0,f,c
  7484  003598  2A16               	incf	(microSecondDelay@i+1)^0,f,c
  7485  00359A                     l5896:
  7486  00359A  5013               	movf	microSecondDelay@us^0,w,c
  7487  00359C  5C15               	subwf	microSecondDelay@i^0,w,c
  7488  00359E  5014               	movf	(microSecondDelay@us+1)^0,w,c
  7489  0035A0  5816               	subwfb	(microSecondDelay@i+1)^0,w,c
  7490  0035A2  A0D8               	btfss	status,0,c
  7491  0035A4  EFD6  F01A         	goto	u6021
  7492  0035A8  EFD8  F01A         	goto	u6020
  7493  0035AC                     u6021:
  7494  0035AC  EFC1  F01A         	goto	l603
  7495  0035B0                     u6020:
  7496  0035B0  0012               	return		;funcret
  7497  0035B2                     __end_of_microSecondDelay:
  7498                           	callstack 0
  7499                           
  7500 ;; *************** function _incrementAddress *****************
  7501 ;; Defined at:
  7502 ;;		line 423 in file "main.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  sdCardAddres    4   18[COMRAM] unsigned long 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  4   18[COMRAM] unsigned long 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7519 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7520 ;;Total ram usage:        4 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; Hardware stack levels required when called:    4
  7523 ;; This function calls:
  7524 ;;		Nothing
  7525 ;; This function is called by:
  7526 ;;		_main
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text4
  7531  003470                     __ptext4:
  7532                           	callstack 0
  7533  003470                     _incrementAddress:
  7534                           	callstack 26
  7535  003470                     
  7536                           ;main.c: 423: void microSecondDelay(uint16_t us) {;main.c: 424:     for (uint16_t i = 0;
      +                           i < us; i++) {;main.c: 425:         __asm("NOP");
  7537  003470  0E00               	movlw	0
  7538  003472  2613               	addwf	incrementAddress@sdCardAddress^0,f,c
  7539  003474  0E02               	movlw	2
  7540  003476  2214               	addwfc	(incrementAddress@sdCardAddress+1)^0,f,c
  7541  003478  0E00               	movlw	0
  7542  00347A  2215               	addwfc	(incrementAddress@sdCardAddress+2)^0,f,c
  7543  00347C  0E00               	movlw	0
  7544  00347E  2216               	addwfc	(incrementAddress@sdCardAddress+3)^0,f,c
  7545                           
  7546                           ;main.c: 426:         __asm("NOP");
  7547  003480  0E04               	movlw	4
  7548  003482  5C16               	subwf	(incrementAddress@sdCardAddress+3)^0,w,c
  7549  003484  A0D8               	btfss	status,0,c
  7550  003486  EF47  F01A         	goto	u6031
  7551  00348A  EF49  F01A         	goto	u6030
  7552  00348E                     u6031:
  7553  00348E  EF51  F01A         	goto	l5902
  7554  003492                     u6030:
  7555  003492                     
  7556                           ;main.c: 427:         __asm("NOP");
  7557  003492  0E00               	movlw	0
  7558  003494  6E13               	movwf	incrementAddress@sdCardAddress^0,c
  7559  003496  0E00               	movlw	0
  7560  003498  6E14               	movwf	(incrementAddress@sdCardAddress+1)^0,c
  7561  00349A  0E00               	movlw	0
  7562  00349C  6E15               	movwf	(incrementAddress@sdCardAddress+2)^0,c
  7563  00349E  0E00               	movlw	0
  7564  0034A0  6E16               	movwf	(incrementAddress@sdCardAddress+3)^0,c
  7565  0034A2                     l5902:
  7566                           
  7567                           ;main.c: 428:         __asm("NOP");
  7568  0034A2  C013  F013         	movff	incrementAddress@sdCardAddress,?_incrementAddress
  7569  0034A6  C014  F014         	movff	incrementAddress@sdCardAddress+1,?_incrementAddress+1
  7570  0034AA  C015  F015         	movff	incrementAddress@sdCardAddress+2,?_incrementAddress+2
  7571  0034AE  C016  F016         	movff	incrementAddress@sdCardAddress+3,?_incrementAddress+3
  7572  0034B2  0012               	return		;funcret
  7573  0034B4                     __end_of_incrementAddress:
  7574                           	callstack 0
  7575                           
  7576 ;; *************** function _hexDumpBuffer *****************
  7577 ;; Defined at:
  7578 ;;		line 177 in file "sdCard.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  sdCardBuffer    2   77[BANK0 ] PTR unsigned char 
  7581 ;;		 -> sdCardBuffer(512), 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  j               2   81[BANK0 ] int 
  7584 ;;  j               2   83[BANK0 ] int 
  7585 ;;  i               2   85[BANK0 ] unsigned short 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7596 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7597 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7598 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;Total ram usage:       10 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:   13
  7602 ;; This function calls:
  7603 ;;		_printf
  7604 ;; This function is called by:
  7605 ;;		_main
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text5
  7610  0024CA                     __ptext5:
  7611                           	callstack 0
  7612  0024CA                     _hexDumpBuffer:
  7613                           	callstack 17
  7614  0024CA                     
  7615                           ;sdCard.c: 179:         if (i != 0 && i % 16 == 0) {;sdCard.c: 181:             for (int
      +                           j = i - 16; j < i; j++) {
  7616  0024CA  0EEE               	movlw	low STR_116
  7617  0024CC  0100               	movlb	0	; () banked
  7618  0024CE  6FA3               	movwf	printf@fmt& (0+255),b
  7619  0024D0  0EFF               	movlw	high STR_116
  7620  0024D2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7621  0024D4  ECE6  F01B         	call	_printf	;wreg free
  7622  0024D8                     
  7623                           ;sdCard.c: 183:                     printf(".");
  7624  0024D8  0E00               	movlw	0
  7625  0024DA  0100               	movlb	0	; () banked
  7626  0024DC  6FB6               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  7627  0024DE  0E00               	movlw	0
  7628  0024E0  6FB5               	movwf	hexDumpBuffer@i& (0+255),b
  7629  0024E2                     l6030:
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;sdCard.c: 184:                 } else {
  7633  0024E2  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  7634  0024E4  11B6               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7635  0024E6  B4D8               	btfsc	status,2,c
  7636  0024E8  EF78  F012         	goto	u6131
  7637  0024EC  EF7A  F012         	goto	u6130
  7638  0024F0                     u6131:
  7639  0024F0  EF8F  F012         	goto	l6036
  7640  0024F4                     u6130:
  7641  0024F4                     
  7642                           ; BSR set to: 0
  7643  0024F4  0E07               	movlw	7
  7644  0024F6  15B5               	andwf	hexDumpBuffer@i& (0+255),w,b
  7645  0024F8  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  7646  0024FA  0E00               	movlw	0
  7647  0024FC  15B6               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7648  0024FE  6FB0               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7649  002500  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  7650  002502  11B0               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7651  002504  A4D8               	btfss	status,2,c
  7652  002506  EF87  F012         	goto	u6141
  7653  00250A  EF89  F012         	goto	u6140
  7654  00250E                     u6141:
  7655  00250E  EF8F  F012         	goto	l6036
  7656  002512                     u6140:
  7657  002512                     
  7658                           ; BSR set to: 0
  7659  002512  0E7D               	movlw	low (STR_73+15)
  7660  002514  6FA3               	movwf	printf@fmt& (0+255),b
  7661  002516  0EFF               	movlw	high (STR_73+15)
  7662  002518  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7663  00251A  ECE6  F01B         	call	_printf	;wreg free
  7664  00251E                     l6036:
  7665                           
  7666                           ;sdCard.c: 185:                     printf("%c", sdCardBuffer[j]);
  7667  00251E  0100               	movlb	0	; () banked
  7668  002520  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  7669  002522  11B6               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7670  002524  B4D8               	btfsc	status,2,c
  7671  002526  EF97  F012         	goto	u6151
  7672  00252A  EF99  F012         	goto	u6150
  7673  00252E                     u6151:
  7674  00252E  EFF2  F012         	goto	l723
  7675  002532                     u6150:
  7676  002532                     
  7677                           ; BSR set to: 0
  7678  002532  0E0F               	movlw	15
  7679  002534  15B5               	andwf	hexDumpBuffer@i& (0+255),w,b
  7680  002536  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  7681  002538  0E00               	movlw	0
  7682  00253A  15B6               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7683  00253C  6FB0               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7684  00253E  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  7685  002540  11B0               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7686  002542  A4D8               	btfss	status,2,c
  7687  002544  EFA6  F012         	goto	u6161
  7688  002548  EFA8  F012         	goto	u6160
  7689  00254C                     u6161:
  7690  00254C  EFF2  F012         	goto	l723
  7691  002550                     u6160:
  7692  002550                     
  7693                           ; BSR set to: 0
  7694                           ;sdCard.c: 186:                 }
  7695  002550  0E7C               	movlw	low (STR_73+14)
  7696  002552  6FA3               	movwf	printf@fmt& (0+255),b
  7697  002554  0EFF               	movlw	high (STR_73+14)
  7698  002556  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7699  002558  ECE6  F01B         	call	_printf	;wreg free
  7700  00255C                     
  7701                           ;sdCard.c: 187:             }
  7702  00255C  0EF0               	movlw	240
  7703  00255E  0100               	movlb	0	; () banked
  7704  002560  25B5               	addwf	hexDumpBuffer@i& (0+255),w,b
  7705  002562  6FB1               	movwf	hexDumpBuffer@j& (0+255),b
  7706  002564  0EFF               	movlw	255
  7707  002566  21B6               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7708  002568  6FB2               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  7709  00256A  EFE1  F012         	goto	l6052
  7710  00256E                     l6044:
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;sdCard.c: 188:             printf("\r\n");
  7714  00256E  51B1               	movf	hexDumpBuffer@j& (0+255),w,b
  7715  002570  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7716  002572  6ED9               	movwf	fsr2l,c
  7717  002574  51B2               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7718  002576  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7719  002578  6EDA               	movwf	fsr2h,c
  7720  00257A  0E20               	movlw	32
  7721  00257C  60DF               	cpfslt	indf2,c
  7722  00257E  EFC3  F012         	goto	u6171
  7723  002582  EFC5  F012         	goto	u6170
  7724  002586                     u6171:
  7725  002586  EFCD  F012         	goto	l6048
  7726  00258A                     u6170:
  7727  00258A                     
  7728                           ; BSR set to: 0
  7729                           ;sdCard.c: 189:         }
  7730  00258A  0EAF               	movlw	low (STR_36+74)
  7731  00258C  6FA3               	movwf	printf@fmt& (0+255),b
  7732  00258E  0EF3               	movlw	high (STR_36+74)
  7733  002590  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7734  002592  ECE6  F01B         	call	_printf	;wreg free
  7735                           
  7736                           ;sdCard.c: 190: 
  7737  002596  EFDE  F012         	goto	l6050
  7738  00259A                     l6048:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;sdCard.c: 191:         printf("%02x ", sdCardBuffer[i]);
  7742  00259A  0EF6               	movlw	low STR_120
  7743  00259C  6FA3               	movwf	printf@fmt& (0+255),b
  7744  00259E  0EFF               	movlw	high STR_120
  7745  0025A0  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7746  0025A2  51B1               	movf	hexDumpBuffer@j& (0+255),w,b
  7747  0025A4  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7748  0025A6  6ED9               	movwf	fsr2l,c
  7749  0025A8  51B2               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7750  0025AA  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7751  0025AC  6EDA               	movwf	fsr2h,c
  7752  0025AE  50DF               	movf	indf2,w,c
  7753  0025B0  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  7754  0025B2  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  7755  0025B4  6FA5               	movwf	(?_printf+2)& (0+255),b
  7756  0025B6  6BA6               	clrf	(?_printf+3)& (0+255),b
  7757  0025B8  ECE6  F01B         	call	_printf	;wreg free
  7758  0025BC                     l6050:
  7759                           
  7760                           ;sdCard.c: 193: 
  7761  0025BC  0100               	movlb	0	; () banked
  7762  0025BE  4BB1               	infsnz	hexDumpBuffer@j& (0+255),f,b
  7763  0025C0  2BB2               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  7764  0025C2                     l6052:
  7765                           
  7766                           ; BSR set to: 0
  7767  0025C2  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  7768  0025C4  5DB1               	subwf	hexDumpBuffer@j& (0+255),w,b
  7769  0025C6  51B6               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7770  0025C8  59B2               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  7771  0025CA  A0D8               	btfss	status,0,c
  7772  0025CC  EFEA  F012         	goto	u6181
  7773  0025D0  EFEC  F012         	goto	u6180
  7774  0025D4                     u6181:
  7775  0025D4  EFB7  F012         	goto	l6044
  7776  0025D8                     u6180:
  7777  0025D8                     
  7778                           ; BSR set to: 0
  7779                           ;sdCard.c: 194:     printf("   ");
  7780  0025D8  0E9C               	movlw	low (STR_71+12)
  7781  0025DA  6FA3               	movwf	printf@fmt& (0+255),b
  7782  0025DC  0EFF               	movlw	high (STR_71+12)
  7783  0025DE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7784  0025E0  ECE6  F01B         	call	_printf	;wreg free
  7785  0025E4                     l723:
  7786                           
  7787                           ;sdCard.c: 197:             printf(".");
  7788  0025E4  0EE3               	movlw	low STR_122
  7789  0025E6  0100               	movlb	0	; () banked
  7790  0025E8  6FA3               	movwf	printf@fmt& (0+255),b
  7791  0025EA  0EFF               	movlw	high STR_122
  7792  0025EC  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7793  0025EE  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  7794  0025F0  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7795  0025F2  6ED9               	movwf	fsr2l,c
  7796  0025F4  51B6               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7797  0025F6  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7798  0025F8  6EDA               	movwf	fsr2h,c
  7799  0025FA  50DF               	movf	indf2,w,c
  7800  0025FC  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  7801  0025FE  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  7802  002600  6FA5               	movwf	(?_printf+2)& (0+255),b
  7803  002602  6BA6               	clrf	(?_printf+3)& (0+255),b
  7804  002604  ECE6  F01B         	call	_printf	;wreg free
  7805  002608                     
  7806                           ;sdCard.c: 198:         } else {
  7807  002608  0100               	movlb	0	; () banked
  7808  00260A  4BB5               	infsnz	hexDumpBuffer@i& (0+255),f,b
  7809  00260C  2BB6               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  7810  00260E                     
  7811                           ; BSR set to: 0
  7812  00260E  0E02               	movlw	2
  7813  002610  5DB6               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7814  002612  A0D8               	btfss	status,0,c
  7815  002614  EF0E  F013         	goto	u6191
  7816  002618  EF10  F013         	goto	u6190
  7817  00261C                     u6191:
  7818  00261C  EF71  F012         	goto	l6030
  7819  002620                     u6190:
  7820  002620                     
  7821                           ; BSR set to: 0
  7822                           ;sdCard.c: 200:         }
  7823  002620  0E7B               	movlw	low (STR_73+13)
  7824  002622  6FA3               	movwf	printf@fmt& (0+255),b
  7825  002624  0EFF               	movlw	high (STR_73+13)
  7826  002626  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7827  002628  ECE6  F01B         	call	_printf	;wreg free
  7828  00262C                     
  7829                           ;sdCard.c: 201:     }
  7830  00262C  0EF0               	movlw	240
  7831  00262E  0100               	movlb	0	; () banked
  7832  002630  25B5               	addwf	hexDumpBuffer@i& (0+255),w,b
  7833  002632  6FB3               	movwf	hexDumpBuffer@j_1451& (0+255),b
  7834  002634  0EFF               	movlw	255
  7835  002636  21B6               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7836  002638  6FB4               	movwf	(hexDumpBuffer@j_1451+1)& (0+255),b
  7837  00263A  EF49  F013         	goto	l6072
  7838  00263E                     l6064:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;sdCard.c: 202:     printf("\r\n");
  7842  00263E  51B3               	movf	hexDumpBuffer@j_1451& (0+255),w,b
  7843  002640  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7844  002642  6ED9               	movwf	fsr2l,c
  7845  002644  51B4               	movf	(hexDumpBuffer@j_1451+1)& (0+255),w,b
  7846  002646  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7847  002648  6EDA               	movwf	fsr2h,c
  7848  00264A  0E20               	movlw	32
  7849  00264C  60DF               	cpfslt	indf2,c
  7850  00264E  EF2B  F013         	goto	u6201
  7851  002652  EF2D  F013         	goto	u6200
  7852  002656                     u6201:
  7853  002656  EF35  F013         	goto	l6068
  7854  00265A                     u6200:
  7855  00265A                     
  7856                           ; BSR set to: 0
  7857                           ;sdCard.c: 203: }
  7858  00265A  0EAF               	movlw	low (STR_36+74)
  7859  00265C  6FA3               	movwf	printf@fmt& (0+255),b
  7860  00265E  0EF3               	movlw	high (STR_36+74)
  7861  002660  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7862  002662  ECE6  F01B         	call	_printf	;wreg free
  7863  002666  EF46  F013         	goto	l6070
  7864  00266A                     l6068:
  7865                           
  7866                           ; BSR set to: 0
  7867  00266A  0EF6               	movlw	low STR_120
  7868  00266C  6FA3               	movwf	printf@fmt& (0+255),b
  7869  00266E  0EFF               	movlw	high STR_120
  7870  002670  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7871  002672  51B3               	movf	hexDumpBuffer@j_1451& (0+255),w,b
  7872  002674  25AD               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7873  002676  6ED9               	movwf	fsr2l,c
  7874  002678  51B4               	movf	(hexDumpBuffer@j_1451+1)& (0+255),w,b
  7875  00267A  21AE               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7876  00267C  6EDA               	movwf	fsr2h,c
  7877  00267E  50DF               	movf	indf2,w,c
  7878  002680  6FAF               	movwf	??_hexDumpBuffer& (0+255),b
  7879  002682  51AF               	movf	??_hexDumpBuffer& (0+255),w,b
  7880  002684  6FA5               	movwf	(?_printf+2)& (0+255),b
  7881  002686  6BA6               	clrf	(?_printf+3)& (0+255),b
  7882  002688  ECE6  F01B         	call	_printf	;wreg free
  7883  00268C                     l6070:
  7884  00268C  0100               	movlb	0	; () banked
  7885  00268E  4BB3               	infsnz	hexDumpBuffer@j_1451& (0+255),f,b
  7886  002690  2BB4               	incf	(hexDumpBuffer@j_1451+1)& (0+255),f,b
  7887  002692                     l6072:
  7888                           
  7889                           ; BSR set to: 0
  7890  002692  51B5               	movf	hexDumpBuffer@i& (0+255),w,b
  7891  002694  5DB3               	subwf	hexDumpBuffer@j_1451& (0+255),w,b
  7892  002696  51B6               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7893  002698  59B4               	subwfb	(hexDumpBuffer@j_1451+1)& (0+255),w,b
  7894  00269A  A0D8               	btfss	status,0,c
  7895  00269C  EF52  F013         	goto	u6211
  7896  0026A0  EF54  F013         	goto	u6210
  7897  0026A4                     u6211:
  7898  0026A4  EF1F  F013         	goto	l6064
  7899  0026A8                     u6210:
  7900  0026A8                     
  7901                           ; BSR set to: 0
  7902  0026A8  0E9C               	movlw	low (STR_71+12)
  7903  0026AA  6FA3               	movwf	printf@fmt& (0+255),b
  7904  0026AC  0EFF               	movlw	high (STR_71+12)
  7905  0026AE  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  7906  0026B0  ECE6  F01B         	call	_printf	;wreg free
  7907  0026B4  0012               	return		;funcret
  7908  0026B6                     __end_of_hexDumpBuffer:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _TMR0_WriteTimer *****************
  7912 ;; Defined at:
  7913 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  timerVal        2   18[COMRAM] unsigned short 
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;Total ram usage:        2 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    4
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text6
  7942  00393E                     __ptext6:
  7943                           	callstack 0
  7944  00393E                     _TMR0_WriteTimer:
  7945                           	callstack 26
  7946  00393E                     
  7947                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  7948  00393E  5014               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  7949  003940  6ED7               	movwf	215,c	;volatile
  7950  003942                     
  7951                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  7952  003942  C013  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  7953  003946  0012               	return		;funcret
  7954  003948                     __end_of_TMR0_WriteTimer:
  7955                           	callstack 0
  7956                           
  7957 ;; *************** function _SYSTEM_Initialize *****************
  7958 ;; Defined at:
  7959 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;		None
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;		None
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0, cstack
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;Total ram usage:        0 bytes
  7978 ;; Hardware stack levels used:    1
  7979 ;; Hardware stack levels required when called:    6
  7980 ;; This function calls:
  7981 ;;		_ADC_Initialize
  7982 ;;		_EPWM1_Initialize
  7983 ;;		_EUSART1_Initialize
  7984 ;;		_INTERRUPT_Initialize
  7985 ;;		_OSCILLATOR_Initialize
  7986 ;;		_PIN_MANAGER_Initialize
  7987 ;;		_SPI2_Initialize
  7988 ;;		_TMR0_Initialize
  7989 ;;		_TMR2_Initialize
  7990 ;; This function is called by:
  7991 ;;		_main
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           
  7995                           	psect	text7
  7996  00381C                     __ptext7:
  7997                           	callstack 0
  7998  00381C                     _SYSTEM_Initialize:
  7999                           	callstack 24
  8000  00381C                     
  8001                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  8002  00381C  ECC4  F01C         	call	_INTERRUPT_Initialize	;wreg free
  8003  003820                     
  8004                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  8005  003820  EC8E  F01C         	call	_SPI2_Initialize	;wreg free
  8006  003824                     
  8007                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  8008  003824  ECD0  F01B         	call	_PIN_MANAGER_Initialize	;wreg free
  8009  003828                     
  8010                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  8011  003828  EC53  F01C         	call	_OSCILLATOR_Initialize	;wreg free
  8012  00382C                     
  8013                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  8014  00382C  EC6E  F01C         	call	_ADC_Initialize	;wreg free
  8015  003830                     
  8016                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  8017  003830  EC34  F01C         	call	_EPWM1_Initialize	;wreg free
  8018  003834                     
  8019                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  8020  003834  EC97  F01C         	call	_TMR2_Initialize	;wreg free
  8021  003838                     
  8022                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  8023  003838  EC67  F01B         	call	_TMR0_Initialize	;wreg free
  8024  00383C                     
  8025                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  8026  00383C  EC9C  F01A         	call	_EUSART1_Initialize	;wreg free
  8027  003840  0012               	return		;funcret
  8028  003842                     __end_of_SYSTEM_Initialize:
  8029                           	callstack 0
  8030                           
  8031 ;; *************** function _TMR2_Initialize *****************
  8032 ;; Defined at:
  8033 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;		None
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;		None
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8051 ;;Total ram usage:        0 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    4
  8054 ;; This function calls:
  8055 ;;		Nothing
  8056 ;; This function is called by:
  8057 ;;		_SYSTEM_Initialize
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text8
  8062  00392E                     __ptext8:
  8063                           	callstack 0
  8064  00392E                     _TMR2_Initialize:
  8065                           	callstack 25
  8066  00392E                     
  8067                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  8068  00392E  0E3F               	movlw	63
  8069  003930  6EBB               	movwf	187,c	;volatile
  8070                           
  8071                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8072  003932  0E00               	movlw	0
  8073  003934  6EBC               	movwf	188,c	;volatile
  8074  003936                     
  8075                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8076  003936  929E               	bcf	158,1,c	;volatile
  8077                           
  8078                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x05;
  8079  003938  0E05               	movlw	5
  8080  00393A  6EBA               	movwf	186,c	;volatile
  8081  00393C  0012               	return		;funcret
  8082  00393E                     __end_of_TMR2_Initialize:
  8083                           	callstack 0
  8084                           
  8085 ;; *************** function _TMR0_Initialize *****************
  8086 ;; Defined at:
  8087 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;		None
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;		None
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  1    wreg      void 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0, cstack
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;Total ram usage:        2 bytes
  8106 ;; Hardware stack levels used:    1
  8107 ;; Hardware stack levels required when called:    5
  8108 ;; This function calls:
  8109 ;;		_TMR0_SetInterruptHandler
  8110 ;; This function is called by:
  8111 ;;		_SYSTEM_Initialize
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text9
  8116  0036CE                     __ptext9:
  8117                           	callstack 0
  8118  0036CE                     _TMR0_Initialize:
  8119                           	callstack 24
  8120  0036CE                     
  8121                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  8122  0036CE  9CD5               	bcf	213,6,c	;volatile
  8123  0036D0                     
  8124                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  8125  0036D0  0E00               	movlw	0
  8126  0036D2  6ED7               	movwf	215,c	;volatile
  8127                           
  8128                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  8129  0036D4  0E00               	movlw	0
  8130  0036D6  6ED6               	movwf	214,c	;volatile
  8131  0036D8                     
  8132                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  8133  0036D8  50D6               	movf	214,w,c	;volatile
  8134  0036DA  CFD7 F015          	movff	4055,??_TMR0_Initialize	;volatile
  8135  0036DE  6A16               	clrf	(??_TMR0_Initialize+1)^0,c
  8136  0036E0  C015  F016         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  8137  0036E4  6A15               	clrf	??_TMR0_Initialize^0,c
  8138  0036E6  1015               	iorwf	??_TMR0_Initialize^0,w,c
  8139  0036E8  6E43               	movwf	_timer0ReloadVal^0,c	;volatile
  8140  0036EA  5016               	movf	(??_TMR0_Initialize+1)^0,w,c
  8141  0036EC  6E44               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  8142  0036EE                     
  8143                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  8144  0036EE  94F2               	bcf	242,2,c	;volatile
  8145  0036F0                     
  8146                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  8147  0036F0  8AF2               	bsf	242,5,c	;volatile
  8148  0036F2                     
  8149                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8150  0036F2  0E90               	movlw	low _TMR0_DefaultInterruptHandler
  8151  0036F4  6E13               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  8152  0036F6  0E39               	movlw	high _TMR0_DefaultInterruptHandler
  8153  0036F8  6E14               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  8154  0036FA  ECA4  F01C         	call	_TMR0_SetInterruptHandler	;wreg free
  8155  0036FE                     
  8156                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  8157  0036FE  0E9F               	movlw	159
  8158  003700  6ED5               	movwf	213,c	;volatile
  8159  003702  0012               	return		;funcret
  8160  003704                     __end_of_TMR0_Initialize:
  8161                           	callstack 0
  8162                           
  8163 ;; *************** function _TMR0_SetInterruptHandler *****************
  8164 ;; Defined at:
  8165 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;  InterruptHan    2   18[COMRAM] PTR FTN()void 
  8168 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      void 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;Total ram usage:        2 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:    4
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_TMR0_Initialize
  8191 ;;		_main
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           	psect	text10
  8196  003948                     __ptext10:
  8197                           	callstack 0
  8198  003948                     _TMR0_SetInterruptHandler:
  8199                           	callstack 26
  8200  003948                     
  8201                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  8202  003948  C013  F045         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8203  00394C  C014  F046         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8204  003950  0012               	return		;funcret
  8205  003952                     __end_of_TMR0_SetInterruptHandler:
  8206                           	callstack 0
  8207                           
  8208 ;; *************** function _SPI2_Initialize *****************
  8209 ;; Defined at:
  8210 ;;		line 62 in file "mcc_generated_files/spi2.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;		None
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;		None
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      void 
  8217 ;; Registers used:
  8218 ;;		wreg, status,2
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;Total ram usage:        0 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    4
  8231 ;; This function calls:
  8232 ;;		Nothing
  8233 ;; This function is called by:
  8234 ;;		_SYSTEM_Initialize
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text11
  8239  00391C                     __ptext11:
  8240                           	callstack 0
  8241  00391C                     _SPI2_Initialize:
  8242                           	callstack 25
  8243  00391C                     
  8244                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  8245  00391C  0E40               	movlw	64
  8246  00391E  6E6D               	movwf	109,c	;volatile
  8247                           
  8248                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  8249  003920  0E01               	movlw	1
  8250  003922  6E6C               	movwf	108,c	;volatile
  8251                           
  8252                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  8253  003924  0E01               	movlw	1
  8254  003926  6E6E               	movwf	110,c	;volatile
  8255  003928                     
  8256                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  8257  003928  9293               	bcf	147,1,c	;volatile
  8258  00392A                     
  8259                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  8260  00392A  9A6C               	bcf	108,5,c	;volatile
  8261  00392C  0012               	return		;funcret
  8262  00392E                     __end_of_SPI2_Initialize:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _PIN_MANAGER_Initialize *****************
  8266 ;; Defined at:
  8267 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;		None
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  1    wreg      void 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:    4
  8288 ;; This function calls:
  8289 ;;		Nothing
  8290 ;; This function is called by:
  8291 ;;		_SYSTEM_Initialize
  8292 ;; This function uses a non-reentrant model
  8293 ;;
  8294                           
  8295                           	psect	text12
  8296  0037A0                     __ptext12:
  8297                           	callstack 0
  8298  0037A0                     _PIN_MANAGER_Initialize:
  8299                           	callstack 25
  8300  0037A0                     
  8301                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8302  0037A0  0E00               	movlw	0
  8303  0037A2  6E89               	movwf	137,c	;volatile
  8304                           
  8305                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8306  0037A4  0E00               	movlw	0
  8307  0037A6  6E8A               	movwf	138,c	;volatile
  8308                           
  8309                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8310  0037A8  0E00               	movlw	0
  8311  0037AA  6E8B               	movwf	139,c	;volatile
  8312  0037AC                     
  8313                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  8314  0037AC  6892               	setf	146,c	;volatile
  8315                           
  8316                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  8317  0037AE  0EE5               	movlw	229
  8318  0037B0  6E93               	movwf	147,c	;volatile
  8319                           
  8320                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  8321  0037B2  0EBB               	movlw	187
  8322  0037B4  6E94               	movwf	148,c	;volatile
  8323                           
  8324                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  8325  0037B6  0E3C               	movlw	60
  8326  0037B8  010F               	movlb	15	; () banked
  8327  0037BA  6F3A               	movwf	58,b	;volatile
  8328                           
  8329                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  8330  0037BC  0E31               	movlw	49
  8331  0037BE  6F39               	movwf	57,b	;volatile
  8332                           
  8333                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  8334  0037C0  0E2F               	movlw	47
  8335  0037C2  6F38               	movwf	56,b	;volatile
  8336                           
  8337                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8338  0037C4  0E00               	movlw	0
  8339  0037C6  6E61               	movwf	97,c	;volatile
  8340  0037C8                     
  8341                           ; BSR set to: 15
  8342                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8343  0037C8  8EF1               	bsf	241,7,c	;volatile
  8344  0037CA                     
  8345                           ; BSR set to: 15
  8346  0037CA  0012               	return		;funcret
  8347  0037CC                     __end_of_PIN_MANAGER_Initialize:
  8348                           	callstack 0
  8349                           
  8350 ;; *************** function _OSCILLATOR_Initialize *****************
  8351 ;; Defined at:
  8352 ;;		line 64 in file "mcc_generated_files/mcc.c"
  8353 ;; Parameters:    Size  Location     Type
  8354 ;;		None
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;		None
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      void 
  8359 ;; Registers used:
  8360 ;;		wreg, status,2
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;Total ram usage:        0 bytes
  8371 ;; Hardware stack levels used:    1
  8372 ;; Hardware stack levels required when called:    4
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_SYSTEM_Initialize
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text13
  8381  0038A6                     __ptext13:
  8382                           	callstack 0
  8383  0038A6                     _OSCILLATOR_Initialize:
  8384                           	callstack 25
  8385  0038A6                     
  8386                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  8387  0038A6  0E70               	movlw	112
  8388  0038A8  6ED3               	movwf	211,c	;volatile
  8389                           
  8390                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  8391  0038AA  0E04               	movlw	4
  8392  0038AC  6ED2               	movwf	210,c	;volatile
  8393                           
  8394                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  8395  0038AE  0E40               	movlw	64
  8396  0038B0  6E9B               	movwf	155,c	;volatile
  8397  0038B2                     l254:
  8398                           
  8399                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  8400  0038B2  AED2               	btfss	4050,7,c	;volatile
  8401  0038B4  EF5E  F01C         	goto	u5931
  8402  0038B8  EF60  F01C         	goto	u5930
  8403  0038BC                     u5931:
  8404  0038BC  EF59  F01C         	goto	l254
  8405  0038C0                     u5930:
  8406  0038C0  0012               	return		;funcret
  8407  0038C2                     __end_of_OSCILLATOR_Initialize:
  8408                           	callstack 0
  8409                           
  8410 ;; *************** function _INTERRUPT_Initialize *****************
  8411 ;; Defined at:
  8412 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;		None
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		None
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;Total ram usage:        0 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    4
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		_SYSTEM_Initialize
  8437 ;; This function uses a non-reentrant model
  8438 ;;
  8439                           
  8440                           	psect	text14
  8441  003988                     __ptext14:
  8442                           	callstack 0
  8443  003988                     _INTERRUPT_Initialize:
  8444                           	callstack 25
  8445  003988                     
  8446                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8447  003988  9ED0               	bcf	208,7,c	;volatile
  8448  00398A  0012               	return		;funcret
  8449  00398C                     __end_of_INTERRUPT_Initialize:
  8450                           	callstack 0
  8451                           
  8452 ;; *************** function _EUSART1_Initialize *****************
  8453 ;; Defined at:
  8454 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;                  1    wreg      void 
  8461 ;; Registers used:
  8462 ;;		wreg, status,2, status,0, cstack
  8463 ;; Tracked objects:
  8464 ;;		On entry : 0/0
  8465 ;;		On exit  : 0/0
  8466 ;;		Unchanged: 0/0
  8467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;Total ram usage:        0 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; Hardware stack levels required when called:    5
  8475 ;; This function calls:
  8476 ;;		_EUSART1_SetErrorHandler
  8477 ;;		_EUSART1_SetFramingErrorHandler
  8478 ;;		_EUSART1_SetOverrunErrorHandler
  8479 ;; This function is called by:
  8480 ;;		_SYSTEM_Initialize
  8481 ;; This function uses a non-reentrant model
  8482 ;;
  8483                           
  8484                           	psect	text15
  8485  003538                     __ptext15:
  8486                           	callstack 0
  8487  003538                     _EUSART1_Initialize:
  8488                           	callstack 24
  8489  003538                     
  8490                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8491  003538  0E08               	movlw	8
  8492  00353A  6EB8               	movwf	184,c	;volatile
  8493                           
  8494                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8495  00353C  0E90               	movlw	144
  8496  00353E  6EAB               	movwf	171,c	;volatile
  8497                           
  8498                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8499  003540  0E24               	movlw	36
  8500  003542  6EAC               	movwf	172,c	;volatile
  8501                           
  8502                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  8503  003544  0E82               	movlw	130
  8504  003546  6EAF               	movwf	175,c	;volatile
  8505                           
  8506                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  8507  003548  0E06               	movlw	6
  8508  00354A  6EB0               	movwf	176,c	;volatile
  8509  00354C                     
  8510                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8511  00354C  0E00               	movlw	0
  8512  00354E  6E13               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8513  003550  0E00               	movlw	0
  8514  003552  6E14               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8515  003554  ECAE  F01C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8516  003558                     
  8517                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8518  003558  0E00               	movlw	0
  8519  00355A  6E13               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8520  00355C  0E00               	movlw	0
  8521  00355E  6E14               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8522  003560  ECA9  F01C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8523  003564                     
  8524                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8525  003564  0E00               	movlw	0
  8526  003566  6E13               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8527  003568  0E00               	movlw	0
  8528  00356A  6E14               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8529  00356C  ECB3  F01C         	call	_EUSART1_SetErrorHandler	;wreg free
  8530  003570                     
  8531                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8532  003570  0E00               	movlw	0
  8533  003572  6E4B               	movwf	_eusart1RxLastError^0,c	;volatile
  8534  003574  0012               	return		;funcret
  8535  003576                     __end_of_EUSART1_Initialize:
  8536                           	callstack 0
  8537                           
  8538 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8539 ;; Defined at:
  8540 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  8541 ;; Parameters:    Size  Location     Type
  8542 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  8543 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8544 ;; Auto vars:     Size  Location     Type
  8545 ;;		None
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  1    wreg      void 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;Total ram usage:        2 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; Hardware stack levels required when called:    4
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_EUSART1_Initialize
  8566 ;; This function uses a non-reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text16
  8570  003952                     __ptext16:
  8571                           	callstack 0
  8572  003952                     _EUSART1_SetOverrunErrorHandler:
  8573                           	callstack 24
  8574  003952                     
  8575                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8576  003952  C013  F18A         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8577  003956  C014  F18B         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8578  00395A  0012               	return		;funcret
  8579  00395C                     __end_of_EUSART1_SetOverrunErrorHandler:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8583 ;; Defined at:
  8584 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  8587 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, status,2, status,0
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8602 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;Total ram usage:        2 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    4
  8606 ;; This function calls:
  8607 ;;		Nothing
  8608 ;; This function is called by:
  8609 ;;		_EUSART1_Initialize
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text17
  8614  00395C                     __ptext17:
  8615                           	callstack 0
  8616  00395C                     _EUSART1_SetFramingErrorHandler:
  8617                           	callstack 24
  8618  00395C                     
  8619                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8620  00395C  C013  F18C         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8621  003960  C014  F18D         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8622  003964  0012               	return		;funcret
  8623  003966                     __end_of_EUSART1_SetFramingErrorHandler:
  8624                           	callstack 0
  8625                           
  8626 ;; *************** function _EUSART1_SetErrorHandler *****************
  8627 ;; Defined at:
  8628 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  interruptHan    2   18[COMRAM] PTR FTN()void 
  8631 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, status,2, status,0
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;Total ram usage:        2 bytes
  8648 ;; Hardware stack levels used:    1
  8649 ;; Hardware stack levels required when called:    4
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_EUSART1_Initialize
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text18
  8658  003966                     __ptext18:
  8659                           	callstack 0
  8660  003966                     _EUSART1_SetErrorHandler:
  8661                           	callstack 24
  8662  003966                     
  8663                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8664  003966  C013  F188         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8665  00396A  C014  F189         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8666  00396E  0012               	return		;funcret
  8667  003970                     __end_of_EUSART1_SetErrorHandler:
  8668                           	callstack 0
  8669                           
  8670 ;; *************** function _EPWM1_Initialize *****************
  8671 ;; Defined at:
  8672 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8673 ;; Parameters:    Size  Location     Type
  8674 ;;		None
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;		None
  8677 ;; Return value:  Size  Location     Type
  8678 ;;                  1    wreg      void 
  8679 ;; Registers used:
  8680 ;;		wreg, status,2
  8681 ;; Tracked objects:
  8682 ;;		On entry : 0/0
  8683 ;;		On exit  : 0/0
  8684 ;;		Unchanged: 0/0
  8685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8690 ;;Total ram usage:        0 bytes
  8691 ;; Hardware stack levels used:    1
  8692 ;; Hardware stack levels required when called:    4
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_SYSTEM_Initialize
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text19
  8701  003868                     __ptext19:
  8702                           	callstack 0
  8703  003868                     _EPWM1_Initialize:
  8704                           	callstack 25
  8705  003868                     
  8706                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  8707  003868  0E3C               	movlw	60
  8708  00386A  6EBD               	movwf	189,c	;volatile
  8709                           
  8710                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8711  00386C  0E00               	movlw	0
  8712  00386E  6EB6               	movwf	182,c	;volatile
  8713                           
  8714                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  8715  003870  0E80               	movlw	128
  8716  003872  6EB7               	movwf	183,c	;volatile
  8717                           
  8718                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  8719  003874  0E01               	movlw	1
  8720  003876  6EB9               	movwf	185,c	;volatile
  8721                           
  8722                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8723  003878  0E00               	movlw	0
  8724  00387A  6EBF               	movwf	191,c	;volatile
  8725                           
  8726                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  8727  00387C  0E1F               	movlw	31
  8728  00387E  6EBE               	movwf	190,c	;volatile
  8729                           
  8730                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  8731  003880  0EFC               	movlw	-4
  8732  003882  010F               	movlb	15	; () banked
  8733  003884  1749               	andwf	73,f,b	;volatile
  8734  003886                     
  8735                           ; BSR set to: 15
  8736  003886  0012               	return		;funcret
  8737  003888                     __end_of_EPWM1_Initialize:
  8738                           	callstack 0
  8739                           
  8740 ;; *************** function _ADC_Initialize *****************
  8741 ;; Defined at:
  8742 ;;		line 62 in file "mcc_generated_files/adc.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8760 ;;Total ram usage:        0 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    4
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_SYSTEM_Initialize
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text20
  8771  0038DC                     __ptext20:
  8772                           	callstack 0
  8773  0038DC                     _ADC_Initialize:
  8774                           	callstack 25
  8775  0038DC                     
  8776                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  8777  0038DC  0E00               	movlw	0
  8778  0038DE  6EC1               	movwf	193,c	;volatile
  8779                           
  8780                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  8781  0038E0  0E26               	movlw	38
  8782  0038E2  6EC0               	movwf	192,c	;volatile
  8783                           
  8784                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  8785  0038E4  0E00               	movlw	0
  8786  0038E6  6EC3               	movwf	195,c	;volatile
  8787                           
  8788                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  8789  0038E8  0E00               	movlw	0
  8790  0038EA  6EC4               	movwf	196,c	;volatile
  8791                           
  8792                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  8793  0038EC  0E11               	movlw	17
  8794  0038EE  6EC2               	movwf	194,c	;volatile
  8795  0038F0  0012               	return		;funcret
  8796  0038F2                     __end_of_ADC_Initialize:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _SPI2_Open *****************
  8800 ;; Defined at:
  8801 ;;		line 72 in file "mcc_generated_files/spi2.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  spi2UniqueCo    1    wreg     enum E355
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  spi2UniqueCo    1   19[COMRAM] enum E355
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      _Bool 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;Total ram usage:        2 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:    4
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		_main
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text21
  8830  00300A                     __ptext21:
  8831                           	callstack 0
  8832  00300A                     _SPI2_Open:
  8833                           	callstack 26
  8834                           
  8835                           ;incstack = 0
  8836                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  8837  00300A  6E14               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  8838  00300C                     
  8839                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  8840  00300C  BA6C               	btfsc	108,5,c	;volatile
  8841  00300E  EF0B  F018         	goto	u5981
  8842  003012  EF0D  F018         	goto	u5980
  8843  003016                     u5981:
  8844  003016  EF5A  F018         	goto	l282
  8845  00301A                     u5980:
  8846  00301A                     
  8847                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  8848  00301A  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8849  00301C  0D04               	mullw	4
  8850  00301E  0E01               	movlw	1
  8851  003020  26F3               	addwf	243,f,c
  8852  003022  0E00               	movlw	0
  8853  003024  22F4               	addwfc	244,f,c
  8854  003026  0E61               	movlw	low _spi2_configuration
  8855  003028  24F3               	addwf	243,w,c
  8856  00302A  6EF6               	movwf	tblptrl,c
  8857  00302C  0EF3               	movlw	high _spi2_configuration
  8858  00302E  20F4               	addwfc	244,w,c
  8859  003030  6EF7               	movwf	tblptrh,c
  8860  003032                     	if	1	;There are 3 active tblptr bytes
  8861  003032  6AF8               	clrf	tblptru,c
  8862  003034  0E00               	movlw	low (__mediumconst shr (0+16))
  8863  003036  22F8               	addwfc	tblptru,f,c
  8864  003038                     	endif
  8865  003038  0008               	tblrd		*
  8866  00303A  CFF5 FF6D          	movff	tablat,3949	;volatile
  8867                           
  8868                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  8869  00303E  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8870  003040  0D04               	mullw	4
  8871  003042  0E61               	movlw	low _spi2_configuration
  8872  003044  24F3               	addwf	243,w,c
  8873  003046  6EF6               	movwf	tblptrl,c
  8874  003048  0EF3               	movlw	high _spi2_configuration
  8875  00304A  20F4               	addwfc	244,w,c
  8876  00304C  6EF7               	movwf	tblptrh,c
  8877  00304E                     	if	1	;There are 3 active tblptr bytes
  8878  00304E  6AF8               	clrf	tblptru,c
  8879  003050  0E00               	movlw	low (__mediumconst shr (0+16))
  8880  003052  22F8               	addwfc	tblptru,f,c
  8881  003054                     	endif
  8882  003054  0008               	tblrd		*
  8883  003056  CFF5 FF6C          	movff	tablat,3948	;volatile
  8884  00305A                     
  8885                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  8886  00305A  0E00               	movlw	0
  8887  00305C  6E6B               	movwf	107,c	;volatile
  8888  00305E                     
  8889                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  8890  00305E  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8891  003060  0D04               	mullw	4
  8892  003062  0E02               	movlw	2
  8893  003064  26F3               	addwf	243,f,c
  8894  003066  0E00               	movlw	0
  8895  003068  22F4               	addwfc	244,f,c
  8896  00306A  0E61               	movlw	low _spi2_configuration
  8897  00306C  24F3               	addwf	243,w,c
  8898  00306E  6EF6               	movwf	tblptrl,c
  8899  003070  0EF3               	movlw	high _spi2_configuration
  8900  003072  20F4               	addwfc	244,w,c
  8901  003074  6EF7               	movwf	tblptrh,c
  8902  003076                     	if	1	;There are 3 active tblptr bytes
  8903  003076  6AF8               	clrf	tblptru,c
  8904  003078  0E00               	movlw	low (__mediumconst shr (0+16))
  8905  00307A  22F8               	addwfc	tblptru,f,c
  8906  00307C                     	endif
  8907  00307C  0008               	tblrd		*
  8908  00307E  CFF5 FF6E          	movff	tablat,3950	;volatile
  8909  003082                     
  8910                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  8911  003082  5014               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8912  003084  0D04               	mullw	4
  8913  003086  0E03               	movlw	3
  8914  003088  26F3               	addwf	243,f,c
  8915  00308A  0E00               	movlw	0
  8916  00308C  22F4               	addwfc	244,f,c
  8917  00308E  0E61               	movlw	low _spi2_configuration
  8918  003090  24F3               	addwf	243,w,c
  8919  003092  6EF6               	movwf	tblptrl,c
  8920  003094  0EF3               	movlw	high _spi2_configuration
  8921  003096  20F4               	addwfc	244,w,c
  8922  003098  6EF7               	movwf	tblptrh,c
  8923  00309A                     	if	1	;There are 3 active tblptr bytes
  8924  00309A  6AF8               	clrf	tblptru,c
  8925  00309C  0E00               	movlw	low (__mediumconst shr (0+16))
  8926  00309E  22F8               	addwfc	tblptru,f,c
  8927  0030A0                     	endif
  8928  0030A0  0008               	tblrd		*
  8929  0030A2  CFF5 F013          	movff	tablat,??_SPI2_Open
  8930  0030A6  4613               	rlncf	??_SPI2_Open^0,f,c
  8931  0030A8  5093               	movf	147,w,c	;volatile
  8932  0030AA  1813               	xorwf	??_SPI2_Open^0,w,c
  8933  0030AC  0BFD               	andlw	-3
  8934  0030AE  1813               	xorwf	??_SPI2_Open^0,w,c
  8935  0030B0  6E93               	movwf	147,c	;volatile
  8936  0030B2                     
  8937                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  8938  0030B2  8A6C               	bsf	108,5,c	;volatile
  8939  0030B4                     l282:
  8940  0030B4  0012               	return		;funcret
  8941  0030B6                     __end_of_SPI2_Open:
  8942                           	callstack 0
  8943                           
  8944 ;; *************** function _SPI2_Close *****************
  8945 ;; Defined at:
  8946 ;;		line 87 in file "mcc_generated_files/spi2.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;		None
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;		None
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  1    wreg      void 
  8953 ;; Registers used:
  8954 ;;		None
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;Total ram usage:        0 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; Hardware stack levels required when called:    4
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_main
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text22
  8975  00398C                     __ptext22:
  8976                           	callstack 0
  8977  00398C                     _SPI2_Close:
  8978                           	callstack 26
  8979  00398C                     
  8980                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  8981  00398C  9A6C               	bcf	108,5,c	;volatile
  8982  00398E  0012               	return		;funcret
  8983  003990                     __end_of_SPI2_Close:
  8984                           	callstack 0
  8985                           
  8986 ;; *************** function _SDCARD_WriteBlock *****************
  8987 ;; Defined at:
  8988 ;;		line 48 in file "sdCard.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;  addr            4   19[COMRAM] unsigned long 
  8991 ;;  sdCardBuffer    2   23[COMRAM] PTR unsigned char 
  8992 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;  i               2   25[COMRAM] unsigned short 
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      void 
  8997 ;; Registers used:
  8998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9004 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9007 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9008 ;;Total ram usage:        8 bytes
  9009 ;; Hardware stack levels used:    1
  9010 ;; Hardware stack levels required when called:    5
  9011 ;; This function calls:
  9012 ;;		_SPI2_ExchangeByte
  9013 ;; This function is called by:
  9014 ;;		_main
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018                           	psect	text23
  9019  0031E6                     __ptext23:
  9020                           	callstack 0
  9021  0031E6                     _SDCARD_WriteBlock:
  9022                           	callstack 25
  9023  0031E6  988A               	bcf	138,4,c	;volatile
  9024  0031E8                     
  9025                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  9026  0031E8  0EFF               	movlw	255
  9027  0031EA  EC61  F01C         	call	_SPI2_ExchangeByte
  9028  0031EE                     
  9029                           ;sdCard.c: 55: 
  9030  0031EE  0E58               	movlw	88
  9031  0031F0  EC61  F01C         	call	_SPI2_ExchangeByte
  9032  0031F4                     
  9033                           ;sdCard.c: 56: 
  9034  0031F4  5017               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  9035  0031F6  EC61  F01C         	call	_SPI2_ExchangeByte
  9036  0031FA                     
  9037                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9038  0031FA  5016               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  9039  0031FC  EC61  F01C         	call	_SPI2_ExchangeByte
  9040  003200                     
  9041                           ;sdCard.c: 58: 
  9042  003200  5015               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  9043  003202  EC61  F01C         	call	_SPI2_ExchangeByte
  9044  003206                     
  9045                           ;sdCard.c: 59: 
  9046  003206  5014               	movf	SDCARD_WriteBlock@addr^0,w,c
  9047  003208  EC61  F01C         	call	_SPI2_ExchangeByte
  9048  00320C                     
  9049                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  9050  00320C  0EFF               	movlw	255
  9051  00320E  EC61  F01C         	call	_SPI2_ExchangeByte
  9052  003212                     l5858:
  9053  003212  0EFF               	movlw	255
  9054  003214  EC61  F01C         	call	_SPI2_ExchangeByte
  9055  003218  0AFF               	xorlw	255
  9056  00321A  B4D8               	btfsc	status,2,c
  9057  00321C  EF12  F019         	goto	u5991
  9058  003220  EF14  F019         	goto	u5990
  9059  003224                     u5991:
  9060  003224  EF09  F019         	goto	l5858
  9061  003228                     u5990:
  9062  003228                     
  9063                           ;sdCard.c: 66: 
  9064  003228  0EFF               	movlw	255
  9065  00322A  EC61  F01C         	call	_SPI2_ExchangeByte
  9066                           
  9067                           ;sdCard.c: 67: 
  9068  00322E  0EFF               	movlw	255
  9069  003230  EC61  F01C         	call	_SPI2_ExchangeByte
  9070                           
  9071                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  9072  003234  0EFF               	movlw	255
  9073  003236  EC61  F01C         	call	_SPI2_ExchangeByte
  9074                           
  9075                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  9076  00323A  0EFE               	movlw	254
  9077  00323C  EC61  F01C         	call	_SPI2_ExchangeByte
  9078  003240                     
  9079                           ;sdCard.c: 74: 
  9080  003240  0E00               	movlw	0
  9081  003242  6E1B               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  9082  003244  0E00               	movlw	0
  9083  003246  6E1A               	movwf	SDCARD_WriteBlock@i^0,c
  9084  003248                     l5868:
  9085                           
  9086                           ;sdCard.c: 75: 
  9087  003248  501A               	movf	SDCARD_WriteBlock@i^0,w,c
  9088  00324A  2418               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  9089  00324C  6ED9               	movwf	fsr2l,c
  9090  00324E  501B               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  9091  003250  2019               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  9092  003252  6EDA               	movwf	fsr2h,c
  9093  003254  50DF               	movf	indf2,w,c
  9094  003256  EC61  F01C         	call	_SPI2_ExchangeByte
  9095  00325A  4A1A               	infsnz	SDCARD_WriteBlock@i^0,f,c
  9096  00325C  2A1B               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  9097  00325E  0E02               	movlw	2
  9098  003260  5C1B               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  9099  003262  A0D8               	btfss	status,0,c
  9100  003264  EF36  F019         	goto	u6001
  9101  003268  EF38  F019         	goto	u6000
  9102  00326C                     u6001:
  9103  00326C  EF24  F019         	goto	l5868
  9104  003270                     u6000:
  9105  003270  888A               	bsf	138,4,c	;volatile
  9106  003272  0012               	return		;funcret
  9107  003274                     __end_of_SDCARD_WriteBlock:
  9108                           	callstack 0
  9109                           
  9110 ;; *************** function _SDCARD_ReadBlock *****************
  9111 ;; Defined at:
  9112 ;;		line 13 in file "sdCard.c"
  9113 ;; Parameters:    Size  Location     Type
  9114 ;;  addr            4   19[COMRAM] unsigned long 
  9115 ;;  sdCardBuffer    2   23[COMRAM] PTR unsigned char 
  9116 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  i               2   25[COMRAM] unsigned short 
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  1    wreg      void 
  9121 ;; Registers used:
  9122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9128 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9131 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9132 ;;Total ram usage:        8 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; Hardware stack levels required when called:    5
  9135 ;; This function calls:
  9136 ;;		_SPI2_ExchangeByte
  9137 ;; This function is called by:
  9138 ;;		_main
  9139 ;; This function uses a non-reentrant model
  9140 ;;
  9141                           
  9142                           	psect	text24
  9143  0030B6                     __ptext24:
  9144                           	callstack 0
  9145  0030B6                     _SDCARD_ReadBlock:
  9146                           	callstack 25
  9147  0030B6  988A               	bcf	138,4,c	;volatile
  9148  0030B8                     
  9149                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  9150  0030B8  0EFF               	movlw	255
  9151  0030BA  EC61  F01C         	call	_SPI2_ExchangeByte
  9152  0030BE                     
  9153                           ;sdCard.c: 19: 
  9154  0030BE  0E51               	movlw	81
  9155  0030C0  EC61  F01C         	call	_SPI2_ExchangeByte
  9156  0030C4                     
  9157                           ;sdCard.c: 20: 
  9158  0030C4  5017               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  9159  0030C6  EC61  F01C         	call	_SPI2_ExchangeByte
  9160  0030CA                     
  9161                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9162  0030CA  5016               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  9163  0030CC  EC61  F01C         	call	_SPI2_ExchangeByte
  9164  0030D0                     
  9165                           ;sdCard.c: 22: 
  9166  0030D0  5015               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  9167  0030D2  EC61  F01C         	call	_SPI2_ExchangeByte
  9168  0030D6                     
  9169                           ;sdCard.c: 23: 
  9170  0030D6  5014               	movf	SDCARD_ReadBlock@addr^0,w,c
  9171  0030D8  EC61  F01C         	call	_SPI2_ExchangeByte
  9172  0030DC                     
  9173                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9174  0030DC  0EFF               	movlw	255
  9175  0030DE  EC61  F01C         	call	_SPI2_ExchangeByte
  9176  0030E2                     l5926:
  9177  0030E2  0EFF               	movlw	255
  9178  0030E4  EC61  F01C         	call	_SPI2_ExchangeByte
  9179  0030E8  0AFF               	xorlw	255
  9180  0030EA  B4D8               	btfsc	status,2,c
  9181  0030EC  EF7A  F018         	goto	u6041
  9182  0030F0  EF7C  F018         	goto	u6040
  9183  0030F4                     u6041:
  9184  0030F4  EF71  F018         	goto	l5926
  9185  0030F8                     u6040:
  9186  0030F8                     l5928:
  9187  0030F8  0EFF               	movlw	255
  9188  0030FA  EC61  F01C         	call	_SPI2_ExchangeByte
  9189  0030FE  0AFF               	xorlw	255
  9190  003100  B4D8               	btfsc	status,2,c
  9191  003102  EF85  F018         	goto	u6051
  9192  003106  EF87  F018         	goto	u6050
  9193  00310A                     u6051:
  9194  00310A  EF7C  F018         	goto	l5928
  9195  00310E                     u6050:
  9196  00310E                     
  9197                           ;sdCard.c: 33: 
  9198  00310E  0E00               	movlw	0
  9199  003110  6E1B               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  9200  003112  0E00               	movlw	0
  9201  003114  6E1A               	movwf	SDCARD_ReadBlock@i^0,c
  9202  003116                     l5936:
  9203                           
  9204                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  9205  003116  501A               	movf	SDCARD_ReadBlock@i^0,w,c
  9206  003118  2418               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  9207  00311A  6ED9               	movwf	fsr2l,c
  9208  00311C  501B               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  9209  00311E  2019               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  9210  003120  6EDA               	movwf	fsr2h,c
  9211  003122  0EFF               	movlw	255
  9212  003124  EC61  F01C         	call	_SPI2_ExchangeByte
  9213  003128  6EDF               	movwf	indf2,c
  9214  00312A  4A1A               	infsnz	SDCARD_ReadBlock@i^0,f,c
  9215  00312C  2A1B               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  9216  00312E  0E02               	movlw	2
  9217  003130  5C1B               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  9218  003132  A0D8               	btfss	status,0,c
  9219  003134  EF9E  F018         	goto	u6061
  9220  003138  EFA0  F018         	goto	u6060
  9221  00313C                     u6061:
  9222  00313C  EF8B  F018         	goto	l5936
  9223  003140                     u6060:
  9224  003140                     
  9225                           ;sdCard.c: 37: 
  9226  003140  0EFF               	movlw	255
  9227  003142  EC61  F01C         	call	_SPI2_ExchangeByte
  9228                           
  9229                           ;sdCard.c: 38: 
  9230  003146  0EFF               	movlw	255
  9231  003148  EC61  F01C         	call	_SPI2_ExchangeByte
  9232  00314C  888A               	bsf	138,4,c	;volatile
  9233  00314E  0012               	return		;funcret
  9234  003150                     __end_of_SDCARD_ReadBlock:
  9235                           	callstack 0
  9236                           
  9237 ;; *************** function _SDCARD_PollWriteComplete *****************
  9238 ;; Defined at:
  9239 ;;		line 86 in file "sdCard.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;		None
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  status          1   19[COMRAM] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      unsigned char 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;Total ram usage:        1 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    5
  9260 ;; This function calls:
  9261 ;;		_SPI2_ExchangeByte
  9262 ;; This function is called by:
  9263 ;;		_main
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text25
  9268  0035EE                     __ptext25:
  9269                           	callstack 0
  9270  0035EE                     _SDCARD_PollWriteComplete:
  9271                           	callstack 25
  9272  0035EE  988A               	bcf	138,4,c	;volatile
  9273  0035F0                     
  9274                           ;sdCard.c: 91: 
  9275  0035F0  0E0D               	movlw	13
  9276  0035F2  EC61  F01C         	call	_SPI2_ExchangeByte
  9277  0035F6  6E14               	movwf	SDCARD_PollWriteComplete@status^0,c
  9278  0035F8  888A               	bsf	138,4,c	;volatile
  9279  0035FA                     
  9280                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  9281  0035FA  2814               	incf	SDCARD_PollWriteComplete@status^0,w,c
  9282  0035FC  A4D8               	btfss	status,2,c
  9283  0035FE  EF03  F01B         	goto	u6011
  9284  003602  EF05  F01B         	goto	u6010
  9285  003606                     u6011:
  9286  003606  EF08  F01B         	goto	l5886
  9287  00360A                     u6010:
  9288  00360A                     
  9289                           ;sdCard.c: 95:         return (status);
  9290  00360A  0EFF               	movlw	255
  9291  00360C  EF12  F01B         	goto	l692
  9292  003610                     l5886:
  9293                           
  9294                           ;sdCard.c: 98: }
  9295  003610  0EFF               	movlw	255
  9296  003612  EC61  F01C         	call	_SPI2_ExchangeByte
  9297                           
  9298                           ;sdCard.c: 99: 
  9299  003616  0EFF               	movlw	255
  9300  003618  EC61  F01C         	call	_SPI2_ExchangeByte
  9301                           
  9302                           ;sdCard.c: 100: 
  9303  00361C  0EFF               	movlw	255
  9304  00361E  EC61  F01C         	call	_SPI2_ExchangeByte
  9305  003622                     
  9306                           ;sdCard.c: 101: 
  9307  003622  5014               	movf	SDCARD_PollWriteComplete@status^0,w,c
  9308  003624                     l692:
  9309  003624  0012               	return		;funcret
  9310  003626                     __end_of_SDCARD_PollWriteComplete:
  9311                           	callstack 0
  9312                           
  9313 ;; *************** function _SDCARD_Initialize *****************
  9314 ;; Defined at:
  9315 ;;		line 111 in file "sdCard.c"
  9316 ;; Parameters:    Size  Location     Type
  9317 ;;  verbose         1    wreg     unsigned char 
  9318 ;; Auto vars:     Size  Location     Type
  9319 ;;  verbose         1   79[BANK0 ] unsigned char 
  9320 ;;  i               2   77[BANK0 ] int 
  9321 ;;  response        1   80[BANK0 ] unsigned char 
  9322 ;; Return value:  Size  Location     Type
  9323 ;;                  1    wreg      void 
  9324 ;; Registers used:
  9325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9326 ;; Tracked objects:
  9327 ;;		On entry : 0/0
  9328 ;;		On exit  : 0/0
  9329 ;;		Unchanged: 0/0
  9330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9332 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;Total ram usage:        4 bytes
  9336 ;; Hardware stack levels used:    1
  9337 ;; Hardware stack levels required when called:   13
  9338 ;; This function calls:
  9339 ;;		_SPI2_ExchangeByte
  9340 ;;		_printf
  9341 ;; This function is called by:
  9342 ;;		_main
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text26
  9347  0029D8                     __ptext26:
  9348                           	callstack 0
  9349  0029D8                     _SDCARD_Initialize:
  9350                           	callstack 17
  9351                           
  9352                           ;incstack = 0
  9353                           ;SDCARD_Initialize@verbose stored from wreg
  9354  0029D8  0100               	movlb	0	; () banked
  9355  0029DA  6FAF               	movwf	SDCARD_Initialize@verbose& (0+255),b
  9356  0029DC                     
  9357                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  9358  0029DC  0E00               	movlw	0
  9359  0029DE  0100               	movlb	0	; () banked
  9360  0029E0  6FAE               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  9361  0029E2  0E00               	movlw	0
  9362  0029E4  6FAD               	movwf	SDCARD_Initialize@i& (0+255),b
  9363  0029E6                     l5952:
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  9367  0029E6  0EFF               	movlw	255
  9368  0029E8  EC61  F01C         	call	_SPI2_ExchangeByte
  9369  0029EC                     
  9370                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  9371  0029EC  0100               	movlb	0	; () banked
  9372  0029EE  4BAD               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  9373  0029F0  2BAE               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  9374  0029F2                     
  9375                           ; BSR set to: 0
  9376  0029F2  BFAE               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  9377  0029F4  EF05  F015         	goto	u6071
  9378  0029F8  51AE               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  9379  0029FA  E109               	bnz	u6070
  9380  0029FC  0E0A               	movlw	10
  9381  0029FE  5DAD               	subwf	SDCARD_Initialize@i& (0+255),w,b
  9382  002A00  A0D8               	btfss	status,0,c
  9383  002A02  EF05  F015         	goto	u6071
  9384  002A06  EF07  F015         	goto	u6070
  9385  002A0A                     u6071:
  9386  002A0A  EFF3  F014         	goto	l5952
  9387  002A0E                     u6070:
  9388  002A0E                     
  9389                           ; BSR set to: 0
  9390  002A0E  988A               	bcf	138,4,c	;volatile
  9391  002A10                     
  9392                           ; BSR set to: 0
  9393                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  9394  002A10  0EFF               	movlw	255
  9395  002A12  EC61  F01C         	call	_SPI2_ExchangeByte
  9396                           
  9397                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  9398  002A16  0E40               	movlw	64
  9399  002A18  EC61  F01C         	call	_SPI2_ExchangeByte
  9400                           
  9401                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  9402  002A1C  0E00               	movlw	0
  9403  002A1E  EC61  F01C         	call	_SPI2_ExchangeByte
  9404                           
  9405                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  9406  002A22  0E00               	movlw	0
  9407  002A24  EC61  F01C         	call	_SPI2_ExchangeByte
  9408                           
  9409                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  9410  002A28  0E00               	movlw	0
  9411  002A2A  EC61  F01C         	call	_SPI2_ExchangeByte
  9412                           
  9413                           ;sdCard.c: 130: 
  9414  002A2E  0E00               	movlw	0
  9415  002A30  EC61  F01C         	call	_SPI2_ExchangeByte
  9416                           
  9417                           ;sdCard.c: 131: 
  9418  002A34  0E95               	movlw	149
  9419  002A36  EC61  F01C         	call	_SPI2_ExchangeByte
  9420                           
  9421                           ;sdCard.c: 132: 
  9422  002A3A  0EFF               	movlw	255
  9423  002A3C  EC61  F01C         	call	_SPI2_ExchangeByte
  9424                           
  9425                           ;sdCard.c: 133:     do {
  9426  002A40  0EFF               	movlw	255
  9427  002A42  EC61  F01C         	call	_SPI2_ExchangeByte
  9428  002A46  0100               	movlb	0	; () banked
  9429  002A48  6FB0               	movwf	SDCARD_Initialize@response& (0+255),b
  9430  002A4A                     
  9431                           ; BSR set to: 0
  9432  002A4A  888A               	bsf	138,4,c	;volatile
  9433  002A4C                     
  9434                           ; BSR set to: 0
  9435                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  9436  002A4C  05AF               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9437  002A4E  A4D8               	btfss	status,2,c
  9438  002A50  EF2C  F015         	goto	u6081
  9439  002A54  EF2E  F015         	goto	u6080
  9440  002A58                     u6081:
  9441  002A58  EF37  F015         	goto	l5966
  9442  002A5C                     u6080:
  9443  002A5C                     
  9444                           ; BSR set to: 0
  9445  002A5C  0EF4               	movlw	low STR_113
  9446  002A5E  6FA3               	movwf	printf@fmt& (0+255),b
  9447  002A60  0EFD               	movlw	high STR_113
  9448  002A62  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  9449  002A64  C0B0  F0A5         	movff	SDCARD_Initialize@response,?_printf+2
  9450  002A68  6BA6               	clrf	(?_printf+3)& (0+255),b
  9451  002A6A  ECE6  F01B         	call	_printf	;wreg free
  9452  002A6E                     l5966:
  9453  002A6E  988A               	bcf	138,4,c	;volatile
  9454  002A70                     
  9455                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  9456  002A70  0EFF               	movlw	255
  9457  002A72  EC61  F01C         	call	_SPI2_ExchangeByte
  9458  002A76                     
  9459                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  9460  002A76  0E41               	movlw	65
  9461  002A78  EC61  F01C         	call	_SPI2_ExchangeByte
  9462  002A7C                     
  9463                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  9464  002A7C  0E00               	movlw	0
  9465  002A7E  EC61  F01C         	call	_SPI2_ExchangeByte
  9466  002A82                     
  9467                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  9468  002A82  0E00               	movlw	0
  9469  002A84  EC61  F01C         	call	_SPI2_ExchangeByte
  9470  002A88                     
  9471                           ;sdCard.c: 145:     } while (response != 0);
  9472  002A88  0E00               	movlw	0
  9473  002A8A  EC61  F01C         	call	_SPI2_ExchangeByte
  9474  002A8E                     
  9475                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  9476  002A8E  0E00               	movlw	0
  9477  002A90  EC61  F01C         	call	_SPI2_ExchangeByte
  9478  002A94                     
  9479                           ;sdCard.c: 147: 
  9480  002A94  0EFF               	movlw	255
  9481  002A96  EC61  F01C         	call	_SPI2_ExchangeByte
  9482  002A9A                     
  9483                           ;sdCard.c: 148: 
  9484  002A9A  0EFF               	movlw	255
  9485  002A9C  EC61  F01C         	call	_SPI2_ExchangeByte
  9486  002AA0                     
  9487                           ;sdCard.c: 149: 
  9488  002AA0  0EFF               	movlw	255
  9489  002AA2  EC61  F01C         	call	_SPI2_ExchangeByte
  9490  002AA6  0100               	movlb	0	; () banked
  9491  002AA8  6FB0               	movwf	SDCARD_Initialize@response& (0+255),b
  9492  002AAA                     
  9493                           ; BSR set to: 0
  9494  002AAA  888A               	bsf	138,4,c	;volatile
  9495  002AAC                     
  9496                           ; BSR set to: 0
  9497                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  9498  002AAC  51B0               	movf	SDCARD_Initialize@response& (0+255),w,b
  9499  002AAE  A4D8               	btfss	status,2,c
  9500  002AB0  EF5C  F015         	goto	u6091
  9501  002AB4  EF5E  F015         	goto	u6090
  9502  002AB8                     u6091:
  9503  002AB8  EF37  F015         	goto	l5966
  9504  002ABC                     u6090:
  9505  002ABC                     
  9506                           ; BSR set to: 0
  9507                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  9508  002ABC  05AF               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9509  002ABE  A4D8               	btfss	status,2,c
  9510  002AC0  EF64  F015         	goto	u6101
  9511  002AC4  EF66  F015         	goto	u6100
  9512  002AC8                     u6101:
  9513  002AC8  EF6F  F015         	goto	l5994
  9514  002ACC                     u6100:
  9515  002ACC                     
  9516                           ; BSR set to: 0
  9517  002ACC  0E2A               	movlw	low STR_114
  9518  002ACE  6FA3               	movwf	printf@fmt& (0+255),b
  9519  002AD0  0EFE               	movlw	high STR_114
  9520  002AD2  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  9521  002AD4  C0B0  F0A5         	movff	SDCARD_Initialize@response,?_printf+2
  9522  002AD8  6BA6               	clrf	(?_printf+3)& (0+255),b
  9523  002ADA  ECE6  F01B         	call	_printf	;wreg free
  9524  002ADE                     l5994:
  9525  002ADE  988A               	bcf	138,4,c	;volatile
  9526  002AE0                     
  9527                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  9528  002AE0  0EFF               	movlw	255
  9529  002AE2  EC61  F01C         	call	_SPI2_ExchangeByte
  9530  002AE6                     
  9531                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  9532  002AE6  0E50               	movlw	80
  9533  002AE8  EC61  F01C         	call	_SPI2_ExchangeByte
  9534  002AEC                     
  9535                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  9536  002AEC  0E00               	movlw	0
  9537  002AEE  EC61  F01C         	call	_SPI2_ExchangeByte
  9538  002AF2                     
  9539                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  9540  002AF2  0E00               	movlw	0
  9541  002AF4  EC61  F01C         	call	_SPI2_ExchangeByte
  9542  002AF8                     
  9543                           ;sdCard.c: 162:     } while (response == 0xFF);
  9544  002AF8  0E02               	movlw	2
  9545  002AFA  EC61  F01C         	call	_SPI2_ExchangeByte
  9546  002AFE                     
  9547                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  9548  002AFE  0E00               	movlw	0
  9549  002B00  EC61  F01C         	call	_SPI2_ExchangeByte
  9550  002B04                     
  9551                           ;sdCard.c: 164: 
  9552  002B04  0EFF               	movlw	255
  9553  002B06  EC61  F01C         	call	_SPI2_ExchangeByte
  9554  002B0A                     
  9555                           ;sdCard.c: 165: }
  9556  002B0A  0EFF               	movlw	255
  9557  002B0C  EC61  F01C         	call	_SPI2_ExchangeByte
  9558  002B10                     
  9559                           ;sdCard.c: 166: 
  9560  002B10  0EFF               	movlw	255
  9561  002B12  EC61  F01C         	call	_SPI2_ExchangeByte
  9562  002B16  0100               	movlb	0	; () banked
  9563  002B18  6FB0               	movwf	SDCARD_Initialize@response& (0+255),b
  9564  002B1A                     
  9565                           ; BSR set to: 0
  9566  002B1A  888A               	bsf	138,4,c	;volatile
  9567  002B1C                     
  9568                           ; BSR set to: 0
  9569                           ;sdCard.c: 168: 
  9570  002B1C  29B0               	incf	SDCARD_Initialize@response& (0+255),w,b
  9571  002B1E  B4D8               	btfsc	status,2,c
  9572  002B20  EF94  F015         	goto	u6111
  9573  002B24  EF96  F015         	goto	u6110
  9574  002B28                     u6111:
  9575  002B28  EF6F  F015         	goto	l5994
  9576  002B2C                     u6110:
  9577  002B2C                     
  9578                           ; BSR set to: 0
  9579                           ;sdCard.c: 169: 
  9580  002B2C  05AF               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9581  002B2E  A4D8               	btfss	status,2,c
  9582  002B30  EF9C  F015         	goto	u6121
  9583  002B34  EF9E  F015         	goto	u6120
  9584  002B38                     u6121:
  9585  002B38  EFA7  F015         	goto	l717
  9586  002B3C                     u6120:
  9587  002B3C                     
  9588                           ; BSR set to: 0
  9589  002B3C  0EBC               	movlw	low STR_115
  9590  002B3E  6FA3               	movwf	printf@fmt& (0+255),b
  9591  002B40  0EFD               	movlw	high STR_115
  9592  002B42  6FA4               	movwf	(printf@fmt+1)& (0+255),b
  9593  002B44  C0B0  F0A5         	movff	SDCARD_Initialize@response,?_printf+2
  9594  002B48  6BA6               	clrf	(?_printf+3)& (0+255),b
  9595  002B4A  ECE6  F01B         	call	_printf	;wreg free
  9596  002B4E                     l717:
  9597  002B4E  0012               	return		;funcret
  9598  002B50                     __end_of_SDCARD_Initialize:
  9599                           	callstack 0
  9600                           
  9601 ;; *************** function _printf *****************
  9602 ;; Defined at:
  9603 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  9606 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9607 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9608 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9609 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9610 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9611 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9612 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9613 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9614 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9615 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9616 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9617 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9618 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9619 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9620 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9621 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9622 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9623 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(13), 
  9624 ;;		 -> STR_54(23), STR_53(5), STR_52(25), STR_51(20), 
  9625 ;;		 -> STR_50(71), STR_49(50), STR_48(22), STR_47(33), 
  9626 ;;		 -> STR_46(58), STR_45(3), STR_44(68), STR_43(58), 
  9627 ;;		 -> STR_42(7), STR_41(2), STR_40(5), STR_39(31), 
  9628 ;;		 -> STR_38(27), STR_37(3), STR_36(76), STR_35(30), 
  9629 ;;		 -> STR_34(4), STR_33(2), STR_32(2), STR_31(8), 
  9630 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9631 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9632 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9633 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9634 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9635 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9636 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9637 ;;		 -> STR_2(21), STR_1(9), 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  ap              2   75[BANK0 ] PTR void [1]
  9640 ;;		 -> ?_printf(2), 
  9641 ;;  ret             2    0        int 
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  2   67[BANK0 ] int 
  9644 ;; Registers used:
  9645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/0
  9648 ;;		On exit  : 0/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9651 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9652 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9654 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9655 ;;Total ram usage:       10 bytes
  9656 ;; Hardware stack levels used:    1
  9657 ;; Hardware stack levels required when called:   12
  9658 ;; This function calls:
  9659 ;;		_vfprintf
  9660 ;; This function is called by:
  9661 ;;		_main
  9662 ;;		_printAddress
  9663 ;;		_printAscii
  9664 ;;		_SDCARD_Initialize
  9665 ;;		_hexDumpBuffer
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           	psect	text27
  9670  0037CC                     __ptext27:
  9671                           	callstack 0
  9672  0037CC                     _printf:
  9673                           	callstack 18
  9674  0037CC  0EA5               	movlw	low (?_printf+2)
  9675  0037CE  0100               	movlb	0	; () banked
  9676  0037D0  6FAB               	movwf	printf@ap& (0+255),b
  9677  0037D2  0E00               	movlw	high (?_printf+2)
  9678  0037D4  6FAC               	movwf	(printf@ap+1)& (0+255),b
  9679  0037D6                     
  9680                           ; BSR set to: 0
  9681  0037D6  0E00               	movlw	0
  9682  0037D8  6F9B               	movwf	vfprintf@fp& (0+255),b
  9683  0037DA  0E00               	movlw	0
  9684  0037DC  6F9C               	movwf	(vfprintf@fp+1)& (0+255),b
  9685  0037DE  C0A3  F09D         	movff	printf@fmt,vfprintf@fmt
  9686  0037E2  C0A4  F09E         	movff	printf@fmt+1,vfprintf@fmt+1
  9687  0037E6  0EAB               	movlw	low printf@ap
  9688  0037E8  6F9F               	movwf	vfprintf@ap& (0+255),b
  9689  0037EA  0E00               	movlw	high printf@ap
  9690  0037EC  6FA0               	movwf	(vfprintf@ap+1)& (0+255),b
  9691  0037EE  ECAA  F019         	call	_vfprintf	;wreg free
  9692  0037F2  0012               	return		;funcret
  9693  0037F4                     __end_of_printf:
  9694                           	callstack 0
  9695                           
  9696 ;; *************** function _vfprintf *****************
  9697 ;; Defined at:
  9698 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9699 ;; Parameters:    Size  Location     Type
  9700 ;;  fp              2   59[BANK0 ] PTR struct _IO_FILE
  9701 ;;		 -> NULL(0), 
  9702 ;;  fmt             2   61[BANK0 ] PTR const unsigned char 
  9703 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9704 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9705 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9706 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9707 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9708 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9709 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9710 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9711 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9712 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9713 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9714 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9715 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9716 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9717 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9718 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9719 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9720 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(13), 
  9721 ;;		 -> STR_54(23), STR_53(5), STR_52(25), STR_51(20), 
  9722 ;;		 -> STR_50(71), STR_49(50), STR_48(22), STR_47(33), 
  9723 ;;		 -> STR_46(58), STR_45(3), STR_44(68), STR_43(58), 
  9724 ;;		 -> STR_42(7), STR_41(2), STR_40(5), STR_39(31), 
  9725 ;;		 -> STR_38(27), STR_37(3), STR_36(76), STR_35(30), 
  9726 ;;		 -> STR_34(4), STR_33(2), STR_32(2), STR_31(8), 
  9727 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9728 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9729 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9730 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9731 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9732 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9733 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9734 ;;		 -> STR_2(21), STR_1(9), 
  9735 ;;  ap              2   63[BANK0 ] PTR PTR void 
  9736 ;;		 -> printf@ap(2), 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  9739 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9740 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9741 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9742 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9743 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9744 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9745 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9746 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9747 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9748 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9749 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9750 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9751 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9752 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9753 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9754 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9755 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9756 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(13), 
  9757 ;;		 -> STR_54(23), STR_53(5), STR_52(25), STR_51(20), 
  9758 ;;		 -> STR_50(71), STR_49(50), STR_48(22), STR_47(33), 
  9759 ;;		 -> STR_46(58), STR_45(3), STR_44(68), STR_43(58), 
  9760 ;;		 -> STR_42(7), STR_41(2), STR_40(5), STR_39(31), 
  9761 ;;		 -> STR_38(27), STR_37(3), STR_36(76), STR_35(30), 
  9762 ;;		 -> STR_34(4), STR_33(2), STR_32(2), STR_31(8), 
  9763 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9764 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9765 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9766 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9767 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9768 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9769 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9770 ;;		 -> STR_2(21), STR_1(9), 
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  2   59[BANK0 ] int 
  9773 ;; Registers used:
  9774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9781 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9783 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9784 ;;Total ram usage:        8 bytes
  9785 ;; Hardware stack levels used:    1
  9786 ;; Hardware stack levels required when called:   11
  9787 ;; This function calls:
  9788 ;;		_vfpfcnvrt
  9789 ;; This function is called by:
  9790 ;;		_printf
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793                           
  9794                           	psect	text28
  9795  003354                     __ptext28:
  9796                           	callstack 0
  9797  003354                     _vfprintf:
  9798                           	callstack 18
  9799  003354                     
  9800                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  9801  003354  C09D  F0A1         	movff	vfprintf@fmt,vfprintf@cfmt
  9802  003358  C09E  F0A2         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9803  00335C                     
  9804                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  9805  00335C  0E00               	movlw	0
  9806  00335E  0101               	movlb	1	; () banked
  9807  003360  6F85               	movwf	(_nout+1)& (0+255),b
  9808  003362  0E00               	movlw	0
  9809  003364  6F84               	movwf	_nout& (0+255),b
  9810                           
  9811                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9812  003366  EFCC  F019         	goto	l5726
  9813  00336A                     l5724:
  9814                           
  9815                           ; BSR set to: 1
  9816                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9817  00336A  C09B  F07C         	movff	vfprintf@fp,vfpfcnvrt@fp
  9818  00336E  C09C  F07D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9819  003372  0EA1               	movlw	low vfprintf@cfmt
  9820  003374  0100               	movlb	0	; () banked
  9821  003376  6F7E               	movwf	vfpfcnvrt@fmt& (0+255),b
  9822  003378  0E00               	movlw	high vfprintf@cfmt
  9823  00337A  6F7F               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9824  00337C  C09F  F080         	movff	vfprintf@ap,vfpfcnvrt@ap
  9825  003380  C0A0  F081         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9826  003384  EC54  F009         	call	_vfpfcnvrt	;wreg free
  9827  003388  0100               	movlb	0	; () banked
  9828  00338A  517C               	movf	?_vfpfcnvrt& (0+255),w,b
  9829  00338C  0101               	movlb	1	; () banked
  9830  00338E  2784               	addwf	_nout& (0+255),f,b
  9831  003390  0100               	movlb	0	; () banked
  9832  003392  517D               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9833  003394  0101               	movlb	1	; () banked
  9834  003396  2385               	addwfc	(_nout+1)& (0+255),f,b
  9835  003398                     l5726:
  9836                           
  9837                           ; BSR set to: 1
  9838                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9839  003398  C0A1  FFF6         	movff	vfprintf@cfmt,tblptrl
  9840  00339C  C0A2  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9841  0033A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9842  0033A0  6AF8               	clrf	tblptru,c
  9843  0033A2                     	endif
  9844  0033A2                     	if	0	;tblptru may be non-zero
  9845  0033A2                     	endif
  9846  0033A2  0008               	tblrd		*
  9847  0033A4  50F5               	movf	tablat,w,c
  9848  0033A6  0900               	iorlw	0
  9849  0033A8  A4D8               	btfss	status,2,c
  9850  0033AA  EFD9  F019         	goto	u5921
  9851  0033AE  EFDB  F019         	goto	u5920
  9852  0033B2                     u5921:
  9853  0033B2  EFB5  F019         	goto	l5724
  9854  0033B6                     u5920:
  9855  0033B6                     
  9856                           ; BSR set to: 1
  9857                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  9858  0033B6  C184  F09B         	movff	_nout,?_vfprintf
  9859  0033BA  C185  F09C         	movff	_nout+1,?_vfprintf+1
  9860  0033BE                     
  9861                           ; BSR set to: 1
  9862  0033BE  0012               	return		;funcret
  9863  0033C0                     __end_of_vfprintf:
  9864                           	callstack 0
  9865                           
  9866 ;; *************** function _vfpfcnvrt *****************
  9867 ;; Defined at:
  9868 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  fp              2   28[BANK0 ] PTR struct _IO_FILE
  9871 ;;		 -> NULL(0), 
  9872 ;;  fmt             2   30[BANK0 ] PTR PTR unsigned char 
  9873 ;;		 -> vfprintf@cfmt(2), 
  9874 ;;  ap              2   32[BANK0 ] PTR PTR void 
  9875 ;;		 -> printf@ap(2), 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  llu             8   50[BANK0 ] unsigned long long 
  9878 ;;  ll              8   38[BANK0 ] long long 
  9879 ;;  f               4    0        long long 
  9880 ;;  vp              3    0        PTR void 
  9881 ;;  ct              3    0        unsigned char [3]
  9882 ;;  cp              3    0        PTR unsigned char 
  9883 ;;  done            2   46[BANK0 ] int 
  9884 ;;  i               2    0        int 
  9885 ;;  c               1   58[BANK0 ] unsigned char 
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  2   28[BANK0 ] int 
  9888 ;; Registers used:
  9889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9895 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9896 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9898 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9899 ;;Total ram usage:       31 bytes
  9900 ;; Hardware stack levels used:    1
  9901 ;; Hardware stack levels required when called:   10
  9902 ;; This function calls:
  9903 ;;		_atoi
  9904 ;;		_ctoa
  9905 ;;		_dtoa
  9906 ;;		_fputc
  9907 ;;		_isdigit
  9908 ;;		_utoa
  9909 ;;		_xtoa
  9910 ;; This function is called by:
  9911 ;;		_vfprintf
  9912 ;; This function uses a non-reentrant model
  9913 ;;
  9914                           
  9915                           	psect	text29
  9916  0012A8                     __ptext29:
  9917                           	callstack 0
  9918  0012A8                     _vfpfcnvrt:
  9919                           	callstack 18
  9920  0012A8                     
  9921                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  9922  0012A8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9923  0012AC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9924  0012B0  CFDE FFF6          	movff	postinc2,tblptrl
  9925  0012B4  CFDD FFF7          	movff	postdec2,tblptrh
  9926  0012B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9927  0012B8  6AF8               	clrf	tblptru,c
  9928  0012BA                     	endif
  9929  0012BA                     	if	0	;tblptru may be non-zero
  9930  0012BA                     	endif
  9931  0012BA  0008               	tblrd		*
  9932  0012BC  50F5               	movf	tablat,w,c
  9933  0012BE  0A25               	xorlw	37
  9934  0012C0  A4D8               	btfss	status,2,c
  9935  0012C2  EF65  F009         	goto	u5771
  9936  0012C6  EF67  F009         	goto	u5770
  9937  0012CA                     u5771:
  9938  0012CA  EFF9  F00B         	goto	l5696
  9939  0012CE                     u5770:
  9940  0012CE                     
  9941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  9942  0012CE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9943  0012D2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9944  0012D6  2ADE               	incf	postinc2,f,c
  9945  0012D8  0E00               	movlw	0
  9946  0012DA  22DD               	addwfc	postdec2,f,c
  9947  0012DC                     
  9948                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  9949  0012DC  0E00               	movlw	0
  9950  0012DE  6E3C               	movwf	(_width+1)^0,c
  9951  0012E0  0E00               	movlw	0
  9952  0012E2  6E3B               	movwf	_width^0,c
  9953  0012E4  C03B  F03F         	movff	_width,_flags
  9954  0012E8  C03C  F040         	movff	_width+1,_flags+1
  9955  0012EC                     
  9956                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  9957  0012EC  683D               	setf	_prec^0,c
  9958  0012EE  683E               	setf	(_prec+1)^0,c
  9959  0012F0                     
  9960                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  9961  0012F0  0E00               	movlw	0
  9962  0012F2  0100               	movlb	0	; () banked
  9963  0012F4  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9964  0012F6  0E00               	movlw	0
  9965  0012F8  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
  9966                           
  9967                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  9968  0012FA  EFC6  F009         	goto	l5618
  9969  0012FE                     l5592:
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  9973  0012FE  803F               	bsf	_flags^0,0,c
  9974  001300                     l5594:
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  9978  001300  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9979  001304  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9980  001308  2ADE               	incf	postinc2,f,c
  9981  00130A  0E00               	movlw	0
  9982  00130C  22DD               	addwfc	postdec2,f,c
  9983                           
  9984                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  9985  00130E  EFC6  F009         	goto	l5618
  9986  001312                     l5596:
  9987                           
  9988                           ; BSR set to: 0
  9989                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  9990  001312  823F               	bsf	_flags^0,1,c
  9991  001314  EF80  F009         	goto	l5594
  9992  001318                     l5600:
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  9996  001318  843F               	bsf	_flags^0,2,c
  9997  00131A  EF80  F009         	goto	l5594
  9998  00131E                     l5604:
  9999                           
 10000                           ; BSR set to: 0
 10001                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
 10002  00131E  863F               	bsf	_flags^0,3,c
 10003  001320  EF80  F009         	goto	l5594
 10004  001324                     l5608:
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
 10008  001324  883F               	bsf	_flags^0,4,c
 10009  001326  EF80  F009         	goto	l5594
 10010  00132A                     l5612:
 10011                           
 10012                           ; BSR set to: 0
 10013                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
 10014  00132A  0E00               	movlw	0
 10015  00132C  6F8F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
 10016  00132E  0E01               	movlw	1
 10017  001330  6F8E               	movwf	vfpfcnvrt@done& (0+255),b
 10018                           
 10019                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
 10020  001332  EFC6  F009         	goto	l5618
 10021  001336                     l5616:
 10022                           
 10023                           ; BSR set to: 0
 10024  001336  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10025  00133A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10026  00133E  CFDE FFF6          	movff	postinc2,tblptrl
 10027  001342  CFDD FFF7          	movff	postdec2,tblptrh
 10028  001346                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10029  001346  6AF8               	clrf	tblptru,c
 10030  001348                     	endif
 10031  001348                     	if	0	;tblptru may be non-zero
 10032  001348                     	endif
 10033  001348  0008               	tblrd		*
 10034  00134A  50F5               	movf	tablat,w,c
 10035  00134C  6F82               	movwf	??_vfpfcnvrt& (0+255),b
 10036  00134E  6B83               	clrf	(??_vfpfcnvrt+1)& (0+255),b
 10037                           
 10038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10039                           ; Switch size 1, requested type "simple"
 10040                           ; Number of cases is 1, Range of values is 0 to 0
 10041                           ; switch strategies available:
 10042                           ; Name         Instructions Cycles
 10043                           ; simple_byte            4     3 (average)
 10044                           ;	Chosen strategy is simple_byte
 10045  001350  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10046  001352  0A00               	xorlw	0	; case 0
 10047  001354  B4D8               	btfsc	status,2,c
 10048  001356  EFAF  F009         	goto	l6654
 10049  00135A  EF95  F009         	goto	l5612
 10050  00135E                     l6654:
 10051                           
 10052                           ; BSR set to: 0
 10053                           ; Switch size 1, requested type "simple"
 10054                           ; Number of cases is 5, Range of values is 32 to 48
 10055                           ; switch strategies available:
 10056                           ; Name         Instructions Cycles
 10057                           ; simple_byte           16     9 (average)
 10058                           ;	Chosen strategy is simple_byte
 10059  00135E  5182               	movf	??_vfpfcnvrt& (0+255),w,b
 10060  001360  0A20               	xorlw	32	; case 32
 10061  001362  B4D8               	btfsc	status,2,c
 10062  001364  EF8F  F009         	goto	l5604
 10063  001368  0A03               	xorlw	3	; case 35
 10064  00136A  B4D8               	btfsc	status,2,c
 10065  00136C  EF92  F009         	goto	l5608
 10066  001370  0A08               	xorlw	8	; case 43
 10067  001372  B4D8               	btfsc	status,2,c
 10068  001374  EF8C  F009         	goto	l5600
 10069  001378  0A06               	xorlw	6	; case 45
 10070  00137A  B4D8               	btfsc	status,2,c
 10071  00137C  EF7F  F009         	goto	l5592
 10072  001380  0A1D               	xorlw	29	; case 48
 10073  001382  B4D8               	btfsc	status,2,c
 10074  001384  EF89  F009         	goto	l5596
 10075  001388  EF95  F009         	goto	l5612
 10076  00138C                     l5618:
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 10080  00138C  518E               	movf	vfpfcnvrt@done& (0+255),w,b
 10081  00138E  118F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10082  001390  B4D8               	btfsc	status,2,c
 10083  001392  EFCD  F009         	goto	u5781
 10084  001396  EFCF  F009         	goto	u5780
 10085  00139A                     u5781:
 10086  00139A  EF9B  F009         	goto	l5616
 10087  00139E                     u5780:
 10088  00139E                     
 10089                           ; BSR set to: 0
 10090                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
 10091  00139E  A03F               	btfss	_flags^0,0,c
 10092  0013A0  EFD4  F009         	goto	u5791
 10093  0013A4  EFD6  F009         	goto	u5790
 10094  0013A8                     u5791:
 10095  0013A8  EFD7  F009         	goto	l5622
 10096  0013AC                     u5790:
 10097  0013AC                     
 10098                           ; BSR set to: 0
 10099                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
 10100  0013AC  923F               	bcf	_flags^0,1,c
 10101  0013AE                     l5622:
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 10105  0013AE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10106  0013B2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10107  0013B6  CFDE FFF6          	movff	postinc2,tblptrl
 10108  0013BA  CFDD FFF7          	movff	postdec2,tblptrh
 10109  0013BE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10110  0013BE  6AF8               	clrf	tblptru,c
 10111  0013C0                     	endif
 10112  0013C0                     	if	0	;tblptru may be non-zero
 10113  0013C0                     	endif
 10114  0013C0  0008               	tblrd		*
 10115  0013C2  50F5               	movf	tablat,w,c
 10116  0013C4  0A2A               	xorlw	42
 10117  0013C6  A4D8               	btfss	status,2,c
 10118  0013C8  EFE8  F009         	goto	u5801
 10119  0013CC  EFEA  F009         	goto	u5800
 10120  0013D0                     u5801:
 10121  0013D0  EF13  F00A         	goto	l5630
 10122  0013D4                     u5800:
 10123  0013D4                     
 10124                           ; BSR set to: 0
 10125                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 10126  0013D4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10127  0013D8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10128  0013DC  2ADE               	incf	postinc2,f,c
 10129  0013DE  0E00               	movlw	0
 10130  0013E0  22DD               	addwfc	postdec2,f,c
 10131                           
 10132                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10133  0013E2  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10134  0013E6  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10135  0013EA  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10136  0013EE  0E02               	movlw	2
 10137  0013F0  26DE               	addwf	postinc2,f,c
 10138  0013F2  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10139  0013F6  0E00               	movlw	0
 10140  0013F8  22DD               	addwfc	postdec2,f,c
 10141  0013FA  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10142  0013FE  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10143  001402  CFDE F03B          	movff	postinc2,_width
 10144  001406  CFDD F03C          	movff	postdec2,_width+1
 10145  00140A                     
 10146                           ; BSR set to: 0
 10147                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 10148  00140A  BE3C               	btfsc	(_width+1)^0,7,c
 10149  00140C  EF0C  F00A         	goto	u5810
 10150  001410  EF0A  F00A         	goto	u5811
 10151  001414                     u5811:
 10152  001414  EF58  F00A         	goto	l5640
 10153  001418                     u5810:
 10154  001418                     
 10155                           ; BSR set to: 0
 10156                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 10157  001418  803F               	bsf	_flags^0,0,c
 10158                           
 10159                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 10160  00141A  6C3B               	negf	_width^0,c
 10161  00141C  1E3C               	comf	(_width+1)^0,f,c
 10162  00141E  B0D8               	btfsc	status,0,c
 10163  001420  2A3C               	incf	(_width+1)^0,f,c
 10164  001422  EF58  F00A         	goto	l5640
 10165  001426                     l5630:
 10166                           
 10167                           ; BSR set to: 0
 10168                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 10169  001426  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10170  00142A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10171  00142E  CFDE F01A          	movff	postinc2,atoi@s
 10172  001432  CFDD F01B          	movff	postdec2,atoi@s+1
 10173  001436  EC5B  F013         	call	_atoi	;wreg free
 10174  00143A  C01A  F03B         	movff	?_atoi,_width
 10175  00143E  C01B  F03C         	movff	?_atoi+1,_width+1
 10176                           
 10177                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10178  001442  EF2A  F00A         	goto	l5634
 10179  001446                     l5632:
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 10183  001446  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10184  00144A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10185  00144E  2ADE               	incf	postinc2,f,c
 10186  001450  0E00               	movlw	0
 10187  001452  22DD               	addwfc	postdec2,f,c
 10188  001454                     l5634:
 10189  001454  0ED0               	movlw	208
 10190  001456  0100               	movlb	0	; () banked
 10191  001458  6F82               	movwf	??_vfpfcnvrt& (0+255),b
 10192  00145A  0EFF               	movlw	255
 10193  00145C  6F83               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10194  00145E  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10195  001462  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10196  001466  CFDE FFF6          	movff	postinc2,tblptrl
 10197  00146A  CFDD FFF7          	movff	postdec2,tblptrh
 10198  00146E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10199  00146E  6AF8               	clrf	tblptru,c
 10200  001470                     	endif
 10201  001470                     	if	0	;tblptru may be non-zero
 10202  001470                     	endif
 10203  001470  0008               	tblrd		*
 10204  001472  50F5               	movf	tablat,w,c
 10205  001474  6F84               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10206  001476  6B85               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10207  001478  5182               	movf	??_vfpfcnvrt& (0+255),w,b
 10208  00147A  2784               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10209  00147C  5183               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10210  00147E  2385               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10211  001480  5185               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10212  001482  E10A               	bnz	u5820
 10213  001484  0E0A               	movlw	10
 10214  001486  5D84               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10215  001488  A0D8               	btfss	status,0,c
 10216  00148A  EF49  F00A         	goto	u5821
 10217  00148E  EF4C  F00A         	goto	u5820
 10218  001492                     u5821:
 10219  001492  0E01               	movlw	1
 10220  001494  EF4D  F00A         	goto	u5830
 10221  001498                     u5820:
 10222  001498  0E00               	movlw	0
 10223  00149A                     u5830:
 10224  00149A  6F90               	movwf	_vfpfcnvrt$2023& (0+255),b
 10225  00149C  6B91               	clrf	(_vfpfcnvrt$2023+1)& (0+255),b
 10226  00149E                     
 10227                           ; BSR set to: 0
 10228  00149E  5190               	movf	_vfpfcnvrt$2023& (0+255),w,b
 10229  0014A0  1191               	iorwf	(_vfpfcnvrt$2023+1)& (0+255),w,b
 10230  0014A2  A4D8               	btfss	status,2,c
 10231  0014A4  EF56  F00A         	goto	u5841
 10232  0014A8  EF58  F00A         	goto	u5840
 10233  0014AC                     u5841:
 10234  0014AC  EF23  F00A         	goto	l5632
 10235  0014B0                     u5840:
 10236  0014B0                     l5640:
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
 10240  0014B0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10241  0014B4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10242  0014B8  CFDE FFF6          	movff	postinc2,tblptrl
 10243  0014BC  CFDD FFF7          	movff	postdec2,tblptrh
 10244  0014C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10245  0014C0  6AF8               	clrf	tblptru,c
 10246  0014C2                     	endif
 10247  0014C2                     	if	0	;tblptru may be non-zero
 10248  0014C2                     	endif
 10249  0014C2  0008               	tblrd		*
 10250  0014C4  50F5               	movf	tablat,w,c
 10251  0014C6  0A63               	xorlw	99
 10252  0014C8  A4D8               	btfss	status,2,c
 10253  0014CA  EF69  F00A         	goto	u5851
 10254  0014CE  EF6B  F00A         	goto	u5850
 10255  0014D2                     u5851:
 10256  0014D2  EF92  F00A         	goto	l5648
 10257  0014D6                     u5850:
 10258  0014D6                     
 10259                           ; BSR set to: 0
 10260                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
 10261  0014D6  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10262  0014DA  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10263  0014DE  2ADE               	incf	postinc2,f,c
 10264  0014E0  0E00               	movlw	0
 10265  0014E2  22DD               	addwfc	postdec2,f,c
 10266                           
 10267                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10268  0014E4  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10269  0014E8  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10270  0014EC  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10271  0014F0  0E02               	movlw	2
 10272  0014F2  26DE               	addwf	postinc2,f,c
 10273  0014F4  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10274  0014F8  0E00               	movlw	0
 10275  0014FA  22DD               	addwfc	postdec2,f,c
 10276  0014FC  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10277  001500  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10278  001504  50DF               	movf	indf2,w,c
 10279  001506  6F9A               	movwf	vfpfcnvrt@c& (0+255),b
 10280  001508                     
 10281                           ; BSR set to: 0
 10282                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
 10283  001508  C07C  F01E         	movff	vfpfcnvrt@fp,ctoa@fp
 10284  00150C  C07D  F01F         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10285  001510  C09A  F020         	movff	vfpfcnvrt@c,ctoa@c
 10286  001514  ECD2  F016         	call	_ctoa	;wreg free
 10287  001518  C01E  F07C         	movff	?_ctoa,?_vfpfcnvrt
 10288  00151C  C01F  F07D         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10289  001520  EF15  F00C         	goto	l1571
 10290  001524                     l5648:
 10291                           
 10292                           ; BSR set to: 0
 10293                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10294  001524  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10295  001528  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10296  00152C  CFDE FFF6          	movff	postinc2,tblptrl
 10297  001530  CFDD FFF7          	movff	postdec2,tblptrh
 10298  001534                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10299  001534  6AF8               	clrf	tblptru,c
 10300  001536                     	endif
 10301  001536                     	if	0	;tblptru may be non-zero
 10302  001536                     	endif
 10303  001536  0008               	tblrd		*
 10304  001538  50F5               	movf	tablat,w,c
 10305  00153A  0A64               	xorlw	100
 10306  00153C  B4D8               	btfsc	status,2,c
 10307  00153E  EFA3  F00A         	goto	u5861
 10308  001542  EFA5  F00A         	goto	u5860
 10309  001546                     u5861:
 10310  001546  EFB8  F00A         	goto	l5652
 10311  00154A                     u5860:
 10312  00154A                     
 10313                           ; BSR set to: 0
 10314  00154A  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10315  00154E  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10316  001552  CFDE FFF6          	movff	postinc2,tblptrl
 10317  001556  CFDD FFF7          	movff	postdec2,tblptrh
 10318  00155A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10319  00155A  6AF8               	clrf	tblptru,c
 10320  00155C                     	endif
 10321  00155C                     	if	0	;tblptru may be non-zero
 10322  00155C                     	endif
 10323  00155C  0008               	tblrd		*
 10324  00155E  50F5               	movf	tablat,w,c
 10325  001560  0A69               	xorlw	105
 10326  001562  A4D8               	btfss	status,2,c
 10327  001564  EFB6  F00A         	goto	u5871
 10328  001568  EFB8  F00A         	goto	u5870
 10329  00156C                     u5871:
 10330  00156C  EFF8  F00A         	goto	l5658
 10331  001570                     u5870:
 10332  001570                     l5652:
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 10336  001570  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10337  001574  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10338  001578  2ADE               	incf	postinc2,f,c
 10339  00157A  0E00               	movlw	0
 10340  00157C  22DD               	addwfc	postdec2,f,c
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10343  00157E  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10344  001582  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10345  001586  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10346  00158A  0E02               	movlw	2
 10347  00158C  26DE               	addwf	postinc2,f,c
 10348  00158E  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10349  001592  0E00               	movlw	0
 10350  001594  22DD               	addwfc	postdec2,f,c
 10351  001596  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10352  00159A  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10353  00159E  CFDE F086          	movff	postinc2,vfpfcnvrt@ll
 10354  0015A2  CFDD F087          	movff	postdec2,vfpfcnvrt@ll+1
 10355  0015A6  0E00               	movlw	0
 10356  0015A8  BF87               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10357  0015AA  0EFF               	movlw	-1
 10358  0015AC  6F88               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10359  0015AE  6F89               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10360  0015B0  6F8A               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10361  0015B2  6F8B               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10362  0015B4  6F8C               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10363  0015B6  6F8D               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10364  0015B8                     
 10365                           ; BSR set to: 0
 10366                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 10367  0015B8  C07C  F030         	movff	vfpfcnvrt@fp,dtoa@fp
 10368  0015BC  C07D  F031         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10369  0015C0  C086  F032         	movff	vfpfcnvrt@ll,dtoa@d
 10370  0015C4  C087  F033         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10371  0015C8  C088  F034         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10372  0015CC  C089  F035         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10373  0015D0  C08A  F036         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10374  0015D4  C08B  F037         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10375  0015D8  C08C  F038         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10376  0015DC  C08D  F039         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10377  0015E0  EC8A  F00D         	call	_dtoa	;wreg free
 10378  0015E4  C030  F07C         	movff	?_dtoa,?_vfpfcnvrt
 10379  0015E8  C031  F07D         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10380  0015EC  EF15  F00C         	goto	l1571
 10381  0015F0                     l5658:
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 10385  0015F0  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10386  0015F4  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10387  0015F8  CFDE FFF6          	movff	postinc2,tblptrl
 10388  0015FC  CFDD FFF7          	movff	postdec2,tblptrh
 10389  001600                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10390  001600  6AF8               	clrf	tblptru,c
 10391  001602                     	endif
 10392  001602                     	if	0	;tblptru may be non-zero
 10393  001602                     	endif
 10394  001602  0008               	tblrd		*
 10395  001604  50F5               	movf	tablat,w,c
 10396  001606  0A75               	xorlw	117
 10397  001608  A4D8               	btfss	status,2,c
 10398  00160A  EF09  F00B         	goto	u5881
 10399  00160E  EF0B  F00B         	goto	u5880
 10400  001612                     u5881:
 10401  001612  EF4C  F00B         	goto	l5666
 10402  001616                     u5880:
 10403  001616                     
 10404                           ; BSR set to: 0
 10405                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 10406  001616  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10407  00161A  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10408  00161E  2ADE               	incf	postinc2,f,c
 10409  001620  0E00               	movlw	0
 10410  001622  22DD               	addwfc	postdec2,f,c
 10411                           
 10412                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10413  001624  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10414  001628  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10415  00162C  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10416  001630  0E02               	movlw	2
 10417  001632  26DE               	addwf	postinc2,f,c
 10418  001634  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10419  001638  0E00               	movlw	0
 10420  00163A  22DD               	addwfc	postdec2,f,c
 10421  00163C  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10422  001640  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10423  001644  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 10424  001648  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 10425  00164C  C084  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10426  001650  C085  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10427  001654  6B94               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10428  001656  6B95               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10429  001658  6B96               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10430  00165A  6B97               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10431  00165C  6B98               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10432  00165E  6B99               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10433  001660                     
 10434                           ; BSR set to: 0
 10435                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 10436  001660  C07C  F030         	movff	vfpfcnvrt@fp,utoa@fp
 10437  001664  C07D  F031         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10438  001668  C092  F032         	movff	vfpfcnvrt@llu,utoa@d
 10439  00166C  C093  F033         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10440  001670  C094  F034         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10441  001674  C095  F035         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10442  001678  C096  F036         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10443  00167C  C097  F037         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10444  001680  C098  F038         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10445  001684  C099  F039         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10446  001688  EC6B  F010         	call	_utoa	;wreg free
 10447  00168C  C030  F07C         	movff	?_utoa,?_vfpfcnvrt
 10448  001690  C031  F07D         	movff	?_utoa+1,?_vfpfcnvrt+1
 10449  001694  EF15  F00C         	goto	l1571
 10450  001698                     l5666:
 10451                           
 10452                           ; BSR set to: 0
 10453                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10454  001698  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10455  00169C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10456  0016A0  CFDE FFF6          	movff	postinc2,tblptrl
 10457  0016A4  CFDD FFF7          	movff	postdec2,tblptrh
 10458  0016A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10459  0016A8  6AF8               	clrf	tblptru,c
 10460  0016AA                     	endif
 10461  0016AA                     	if	0	;tblptru may be non-zero
 10462  0016AA                     	endif
 10463  0016AA  0008               	tblrd		*
 10464  0016AC  50F5               	movf	tablat,w,c
 10465  0016AE  0A78               	xorlw	120
 10466  0016B0  B4D8               	btfsc	status,2,c
 10467  0016B2  EF5D  F00B         	goto	u5891
 10468  0016B6  EF5F  F00B         	goto	u5890
 10469  0016BA                     u5891:
 10470  0016BA  EF72  F00B         	goto	l5670
 10471  0016BE                     u5890:
 10472  0016BE                     
 10473                           ; BSR set to: 0
 10474  0016BE  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10475  0016C2  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10476  0016C6  CFDE FFF6          	movff	postinc2,tblptrl
 10477  0016CA  CFDD FFF7          	movff	postdec2,tblptrh
 10478  0016CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10479  0016CE  6AF8               	clrf	tblptru,c
 10480  0016D0                     	endif
 10481  0016D0                     	if	0	;tblptru may be non-zero
 10482  0016D0                     	endif
 10483  0016D0  0008               	tblrd		*
 10484  0016D2  50F5               	movf	tablat,w,c
 10485  0016D4  0A58               	xorlw	88
 10486  0016D6  A4D8               	btfss	status,2,c
 10487  0016D8  EF70  F00B         	goto	u5901
 10488  0016DC  EF72  F00B         	goto	u5900
 10489  0016E0                     u5901:
 10490  0016E0  EFC1  F00B         	goto	l5680
 10491  0016E4                     u5900:
 10492  0016E4                     l5670:
 10493                           
 10494                           ; BSR set to: 0
 10495                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
 10496  0016E4  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10497  0016E8  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10498  0016EC  CFDE FFF6          	movff	postinc2,tblptrl
 10499  0016F0  CFDD FFF7          	movff	postdec2,tblptrh
 10500  0016F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10501  0016F4  6AF8               	clrf	tblptru,c
 10502  0016F6                     	endif
 10503  0016F6                     	if	0	;tblptru may be non-zero
 10504  0016F6                     	endif
 10505  0016F6  0008               	tblrd		*
 10506  0016F8  CFF5 F09A          	movff	tablat,vfpfcnvrt@c
 10507  0016FC                     
 10508                           ; BSR set to: 0
 10509                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
 10510  0016FC  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10511  001700  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10512  001704  2ADE               	incf	postinc2,f,c
 10513  001706  0E00               	movlw	0
 10514  001708  22DD               	addwfc	postdec2,f,c
 10515  00170A                     
 10516                           ; BSR set to: 0
 10517                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10518  00170A  C080  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10519  00170E  C081  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10520  001712  CFDF F082          	movff	indf2,??_vfpfcnvrt
 10521  001716  0E02               	movlw	2
 10522  001718  26DE               	addwf	postinc2,f,c
 10523  00171A  CFDF F083          	movff	indf2,??_vfpfcnvrt+1
 10524  00171E  0E00               	movlw	0
 10525  001720  22DD               	addwfc	postdec2,f,c
 10526  001722  C082  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10527  001726  C083  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10528  00172A  CFDE F084          	movff	postinc2,??_vfpfcnvrt+2
 10529  00172E  CFDD F085          	movff	postdec2,??_vfpfcnvrt+3
 10530  001732  C084  F092         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10531  001736  C085  F093         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10532  00173A  6B94               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10533  00173C  6B95               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10534  00173E  6B96               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10535  001740  6B97               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10536  001742  6B98               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10537  001744  6B99               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10538  001746                     
 10539                           ; BSR set to: 0
 10540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
 10541  001746  C07C  F030         	movff	vfpfcnvrt@fp,xtoa@fp
 10542  00174A  C07D  F031         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10543  00174E  C092  F032         	movff	vfpfcnvrt@llu,xtoa@d
 10544  001752  C093  F033         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10545  001756  C094  F034         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10546  00175A  C095  F035         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10547  00175E  C096  F036         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10548  001762  C097  F037         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10549  001766  C098  F038         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10550  00176A  C099  F039         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10551  00176E  C09A  F03A         	movff	vfpfcnvrt@c,xtoa@x
 10552  001772  ECFC  F00E         	call	_xtoa	;wreg free
 10553  001776  C030  F07C         	movff	?_xtoa,?_vfpfcnvrt
 10554  00177A  C031  F07D         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10555  00177E  EF15  F00C         	goto	l1571
 10556  001782                     l5680:
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 10560  001782  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10561  001786  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10562  00178A  CFDE FFF6          	movff	postinc2,tblptrl
 10563  00178E  CFDD FFF7          	movff	postdec2,tblptrh
 10564  001792                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10565  001792  6AF8               	clrf	tblptru,c
 10566  001794                     	endif
 10567  001794                     	if	0	;tblptru may be non-zero
 10568  001794                     	endif
 10569  001794  0008               	tblrd		*
 10570  001796  50F5               	movf	tablat,w,c
 10571  001798  0A25               	xorlw	37
 10572  00179A  A4D8               	btfss	status,2,c
 10573  00179C  EFD2  F00B         	goto	u5911
 10574  0017A0  EFD4  F00B         	goto	u5910
 10575  0017A4                     u5911:
 10576  0017A4  EFEC  F00B         	goto	l5690
 10577  0017A8                     u5910:
 10578  0017A8                     
 10579                           ; BSR set to: 0
 10580                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 10581  0017A8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10582  0017AC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10583  0017B0  2ADE               	incf	postinc2,f,c
 10584  0017B2  0E00               	movlw	0
 10585  0017B4  22DD               	addwfc	postdec2,f,c
 10586  0017B6                     
 10587                           ; BSR set to: 0
 10588                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 10589  0017B6  0E00               	movlw	0
 10590  0017B8  6E16               	movwf	(fputc@c+1)^0,c
 10591  0017BA  0E25               	movlw	37
 10592  0017BC  6E15               	movwf	fputc@c^0,c
 10593  0017BE  C07C  F017         	movff	vfpfcnvrt@fp,fputc@fp
 10594  0017C2  C07D  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10595  0017C6  ECA8  F018         	call	_fputc	;wreg free
 10596  0017CA                     l5686:
 10597                           
 10598                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 10599  0017CA  0E00               	movlw	0
 10600  0017CC  0100               	movlb	0	; () banked
 10601  0017CE  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10602  0017D0  0E01               	movlw	1
 10603  0017D2  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
 10604  0017D4  EF15  F00C         	goto	l1571
 10605  0017D8                     l5690:
 10606                           
 10607                           ; BSR set to: 0
 10608                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 10609  0017D8  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10610  0017DC  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10611  0017E0  2ADE               	incf	postinc2,f,c
 10612  0017E2  0E00               	movlw	0
 10613  0017E4  22DD               	addwfc	postdec2,f,c
 10614  0017E6                     
 10615                           ; BSR set to: 0
 10616                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 10617  0017E6  0E00               	movlw	0
 10618  0017E8  6F7D               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10619  0017EA  0E00               	movlw	0
 10620  0017EC  6F7C               	movwf	?_vfpfcnvrt& (0+255),b
 10621  0017EE  EF15  F00C         	goto	l1571
 10622  0017F2                     l5696:
 10623                           
 10624                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 10625  0017F2  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10626  0017F6  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10627  0017FA  CFDE FFF6          	movff	postinc2,tblptrl
 10628  0017FE  CFDD FFF7          	movff	postdec2,tblptrh
 10629  001802                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10630  001802  6AF8               	clrf	tblptru,c
 10631  001804                     	endif
 10632  001804                     	if	0	;tblptru may be non-zero
 10633  001804                     	endif
 10634  001804  0008               	tblrd		*
 10635  001806  50F5               	movf	tablat,w,c
 10636  001808  6E15               	movwf	fputc@c^0,c
 10637  00180A  6A16               	clrf	(fputc@c+1)^0,c
 10638  00180C  C07C  F017         	movff	vfpfcnvrt@fp,fputc@fp
 10639  001810  C07D  F018         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10640  001814  ECA8  F018         	call	_fputc	;wreg free
 10641  001818                     
 10642                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 10643  001818  C07E  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10644  00181C  C07F  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10645  001820  2ADE               	incf	postinc2,f,c
 10646  001822  0E00               	movlw	0
 10647  001824  22DD               	addwfc	postdec2,f,c
 10648  001826  EFE5  F00B         	goto	l5686
 10649  00182A                     l1571:
 10650  00182A  0012               	return		;funcret
 10651  00182C                     __end_of_vfpfcnvrt:
 10652                           	callstack 0
 10653                           
 10654 ;; *************** function _xtoa *****************
 10655 ;; Defined at:
 10656 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 10657 ;; Parameters:    Size  Location     Type
 10658 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 10659 ;;		 -> NULL(0), 
 10660 ;;  d               8   49[COMRAM] unsigned long long 
 10661 ;;  x               1   57[COMRAM] unsigned char 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  n               8   16[BANK0 ] unsigned long long 
 10664 ;;  c               2   26[BANK0 ] int 
 10665 ;;  i               2   24[BANK0 ] int 
 10666 ;;  w               2   14[BANK0 ] int 
 10667 ;;  p               2   12[BANK0 ] int 
 10668 ;; Return value:  Size  Location     Type
 10669 ;;                  2   47[COMRAM] int 
 10670 ;; Registers used:
 10671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10672 ;; Tracked objects:
 10673 ;;		On entry : 0/0
 10674 ;;		On exit  : 0/0
 10675 ;;		Unchanged: 0/0
 10676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10677 ;;      Params:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10678 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10679 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10680 ;;      Totals:        11      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10681 ;;Total ram usage:       39 bytes
 10682 ;; Hardware stack levels used:    1
 10683 ;; Hardware stack levels required when called:    9
 10684 ;; This function calls:
 10685 ;;		_isalpha
 10686 ;;		_isupper
 10687 ;;		_pad
 10688 ;;		_toupper
 10689 ;; This function is called by:
 10690 ;;		_vfpfcnvrt
 10691 ;; This function uses a non-reentrant model
 10692 ;;
 10693                           
 10694                           	psect	text30
 10695  001DF8                     __ptext30:
 10696                           	callstack 0
 10697  001DF8                     _xtoa:
 10698                           	callstack 18
 10699  001DF8                     
 10700                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
 10701  001DF8  BE3E               	btfsc	(_prec+1)^0,7,c
 10702  001DFA  EF01  F00F         	goto	u5531
 10703  001DFE  EF03  F00F         	goto	u5530
 10704  001E02                     u5531:
 10705  001E02  EF04  F00F         	goto	l5478
 10706  001E06                     u5530:
 10707  001E06                     
 10708                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
 10709  001E06  923F               	bcf	_flags^0,1,c
 10710  001E08                     l5478:
 10711                           
 10712                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
 10713  001E08  BE3E               	btfsc	(_prec+1)^0,7,c
 10714  001E0A  EF11  F00F         	goto	u5540
 10715  001E0E  503E               	movf	(_prec+1)^0,w,c
 10716  001E10  E106               	bnz	u5541
 10717  001E12  043D               	decf	_prec^0,w,c
 10718  001E14  B0D8               	btfsc	status,0,c
 10719  001E16  EF0F  F00F         	goto	u5541
 10720  001E1A  EF11  F00F         	goto	u5540
 10721  001E1E                     u5541:
 10722  001E1E  EF18  F00F         	goto	l1519
 10723  001E22                     u5540:
 10724  001E22  0E00               	movlw	0
 10725  001E24  0100               	movlb	0	; () banked
 10726  001E26  6F6D               	movwf	(xtoa@p+1)& (0+255),b
 10727  001E28  0E01               	movlw	1
 10728  001E2A  6F6C               	movwf	xtoa@p& (0+255),b
 10729  001E2C  EF1C  F00F         	goto	l1521
 10730  001E30                     l1519:
 10731  001E30  C03D  F06C         	movff	_prec,xtoa@p
 10732  001E34  C03E  F06D         	movff	_prec+1,xtoa@p+1
 10733  001E38                     l1521:
 10734                           
 10735                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
 10736  001E38  C03B  F06E         	movff	_width,xtoa@w
 10737  001E3C  C03C  F06F         	movff	_width+1,xtoa@w+1
 10738                           
 10739                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 10740  001E40  A83F               	btfss	_flags^0,4,c
 10741  001E42  EF25  F00F         	goto	u5551
 10742  001E46  EF27  F00F         	goto	u5550
 10743  001E4A                     u5551:
 10744  001E4A  EF2C  F00F         	goto	l5484
 10745  001E4E                     u5550:
 10746  001E4E                     
 10747                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
 10748  001E4E  0100               	movlb	0	; () banked
 10749  001E50  0EFE               	movlw	254
 10750  001E52  276E               	addwf	xtoa@w& (0+255),f,b
 10751  001E54  0EFF               	movlw	255
 10752  001E56  236F               	addwfc	(xtoa@w+1)& (0+255),f,b
 10753  001E58                     l5484:
 10754                           
 10755                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
 10756  001E58  C032  F070         	movff	xtoa@d,xtoa@n
 10757  001E5C  C033  F071         	movff	xtoa@d+1,xtoa@n+1
 10758  001E60  C034  F072         	movff	xtoa@d+2,xtoa@n+2
 10759  001E64  C035  F073         	movff	xtoa@d+3,xtoa@n+3
 10760  001E68  C036  F074         	movff	xtoa@d+4,xtoa@n+4
 10761  001E6C  C037  F075         	movff	xtoa@d+5,xtoa@n+5
 10762  001E70  C038  F076         	movff	xtoa@d+6,xtoa@n+6
 10763  001E74  C039  F077         	movff	xtoa@d+7,xtoa@n+7
 10764  001E78                     
 10765                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
 10766  001E78  0E00               	movlw	0
 10767  001E7A  0100               	movlb	0	; () banked
 10768  001E7C  6F79               	movwf	(xtoa@i+1)& (0+255),b
 10769  001E7E  0E1F               	movlw	31
 10770  001E80  6F78               	movwf	xtoa@i& (0+255),b
 10771  001E82                     
 10772                           ; BSR set to: 0
 10773                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
 10774  001E82  0E00               	movlw	0
 10775  001E84  0101               	movlb	1	; () banked
 10776  001E86  6FAD               	movwf	(_dbuf+31)& (0+255),b
 10777                           
 10778                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10779  001E88  EFFA  F00F         	goto	l5520
 10780  001E8C                     l5490:
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
 10784  001E8C  0778               	decf	xtoa@i& (0+255),f,b
 10785  001E8E  A0D8               	btfss	status,0,c
 10786  001E90  0779               	decf	(xtoa@i+1)& (0+255),f,b
 10787  001E92                     
 10788                           ; BSR set to: 0
 10789                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
 10790  001E92  0E0F               	movlw	15
 10791  001E94  1570               	andwf	xtoa@n& (0+255),w,b
 10792  001E96  6F7A               	movwf	xtoa@c& (0+255),b
 10793  001E98  6B7B               	clrf	(xtoa@c+1)& (0+255),b
 10794  001E9A                     
 10795                           ; BSR set to: 0
 10796                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 10797  001E9A  BF7B               	btfsc	(xtoa@c+1)& (0+255),7,b
 10798  001E9C  EF59  F00F         	goto	u5561
 10799  001EA0  517B               	movf	(xtoa@c+1)& (0+255),w,b
 10800  001EA2  E109               	bnz	u5560
 10801  001EA4  0E0A               	movlw	10
 10802  001EA6  5D7A               	subwf	xtoa@c& (0+255),w,b
 10803  001EA8  A0D8               	btfss	status,0,c
 10804  001EAA  EF59  F00F         	goto	u5561
 10805  001EAE  EF5B  F00F         	goto	u5560
 10806  001EB2                     u5561:
 10807  001EB2  EF63  F00F         	goto	l5498
 10808  001EB6                     u5560:
 10809  001EB6                     
 10810                           ; BSR set to: 0
 10811  001EB6  0E57               	movlw	87
 10812  001EB8  257A               	addwf	xtoa@c& (0+255),w,b
 10813  001EBA  6F7A               	movwf	xtoa@c& (0+255),b
 10814  001EBC  0E00               	movlw	0
 10815  001EBE  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
 10816  001EC0  6F7B               	movwf	(xtoa@c+1)& (0+255),b
 10817  001EC2  EF69  F00F         	goto	l1528
 10818  001EC6                     l5498:
 10819                           
 10820                           ; BSR set to: 0
 10821  001EC6  0E30               	movlw	48
 10822  001EC8  257A               	addwf	xtoa@c& (0+255),w,b
 10823  001ECA  6F7A               	movwf	xtoa@c& (0+255),b
 10824  001ECC  0E00               	movlw	0
 10825  001ECE  217B               	addwfc	(xtoa@c+1)& (0+255),w,b
 10826  001ED0  6F7B               	movwf	(xtoa@c+1)& (0+255),b
 10827  001ED2                     l1528:
 10828                           
 10829                           ; BSR set to: 0
 10830  001ED2  0EBF               	movlw	191
 10831  001ED4  6F60               	movwf	??_xtoa& (0+255),b
 10832  001ED6  0EFF               	movlw	255
 10833  001ED8  6F61               	movwf	(??_xtoa+1)& (0+255),b
 10834  001EDA  503A               	movf	xtoa@x^0,w,c
 10835  001EDC  6F62               	movwf	(??_xtoa+2)& (0+255),b
 10836  001EDE  6B63               	clrf	(??_xtoa+3)& (0+255),b
 10837  001EE0  5160               	movf	??_xtoa& (0+255),w,b
 10838  001EE2  2762               	addwf	(??_xtoa+2)& (0+255),f,b
 10839  001EE4  5161               	movf	(??_xtoa+1)& (0+255),w,b
 10840  001EE6  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
 10841  001EE8  5163               	movf	(??_xtoa+3)& (0+255),w,b
 10842  001EEA  E10A               	bnz	u5570
 10843  001EEC  0E1A               	movlw	26
 10844  001EEE  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
 10845  001EF0  A0D8               	btfss	status,0,c
 10846  001EF2  EF7D  F00F         	goto	u5571
 10847  001EF6  EF80  F00F         	goto	u5570
 10848  001EFA                     u5571:
 10849  001EFA  0E01               	movlw	1
 10850  001EFC  EF81  F00F         	goto	u5580
 10851  001F00                     u5570:
 10852  001F00  0E00               	movlw	0
 10853  001F02                     u5580:
 10854  001F02  6F68               	movwf	_xtoa$2008& (0+255),b
 10855  001F04  6B69               	clrf	(_xtoa$2008+1)& (0+255),b
 10856  001F06                     
 10857                           ; BSR set to: 0
 10858  001F06  5168               	movf	_xtoa$2008& (0+255),w,b
 10859  001F08  1169               	iorwf	(_xtoa$2008+1)& (0+255),w,b
 10860  001F0A  B4D8               	btfsc	status,2,c
 10861  001F0C  EF8A  F00F         	goto	u5591
 10862  001F10  EF8C  F00F         	goto	u5590
 10863  001F14                     u5591:
 10864  001F14  EFBC  F00F         	goto	l5512
 10865  001F18                     u5590:
 10866  001F18                     
 10867                           ; BSR set to: 0
 10868  001F18  0E9F               	movlw	159
 10869  001F1A  6F60               	movwf	??_xtoa& (0+255),b
 10870  001F1C  0EFF               	movlw	255
 10871  001F1E  6F61               	movwf	(??_xtoa+1)& (0+255),b
 10872  001F20  0E20               	movlw	32
 10873  001F22  117A               	iorwf	xtoa@c& (0+255),w,b
 10874  001F24  6F62               	movwf	(??_xtoa+2)& (0+255),b
 10875  001F26  0E00               	movlw	0
 10876  001F28  117B               	iorwf	(xtoa@c+1)& (0+255),w,b
 10877  001F2A  6F63               	movwf	(??_xtoa+3)& (0+255),b
 10878  001F2C  5160               	movf	??_xtoa& (0+255),w,b
 10879  001F2E  2762               	addwf	(??_xtoa+2)& (0+255),f,b
 10880  001F30  5161               	movf	(??_xtoa+1)& (0+255),w,b
 10881  001F32  2363               	addwfc	(??_xtoa+3)& (0+255),f,b
 10882  001F34  5163               	movf	(??_xtoa+3)& (0+255),w,b
 10883  001F36  E10A               	bnz	u5600
 10884  001F38  0E1A               	movlw	26
 10885  001F3A  5D62               	subwf	(??_xtoa+2)& (0+255),w,b
 10886  001F3C  A0D8               	btfss	status,0,c
 10887  001F3E  EFA3  F00F         	goto	u5601
 10888  001F42  EFA6  F00F         	goto	u5600
 10889  001F46                     u5601:
 10890  001F46  0E01               	movlw	1
 10891  001F48  EFA7  F00F         	goto	u5610
 10892  001F4C                     u5600:
 10893  001F4C  0E00               	movlw	0
 10894  001F4E                     u5610:
 10895  001F4E  6F6A               	movwf	_xtoa$2009& (0+255),b
 10896  001F50  6B6B               	clrf	(_xtoa$2009+1)& (0+255),b
 10897  001F52                     
 10898                           ; BSR set to: 0
 10899  001F52  516A               	movf	_xtoa$2009& (0+255),w,b
 10900  001F54  116B               	iorwf	(_xtoa$2009+1)& (0+255),w,b
 10901  001F56  B4D8               	btfsc	status,2,c
 10902  001F58  EFB0  F00F         	goto	u5621
 10903  001F5C  EFB2  F00F         	goto	u5620
 10904  001F60                     u5621:
 10905  001F60  EFBC  F00F         	goto	l5512
 10906  001F64                     u5620:
 10907  001F64                     
 10908                           ; BSR set to: 0
 10909                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
 10910  001F64  C07A  F019         	movff	xtoa@c,toupper@c
 10911  001F68  C07B  F01A         	movff	xtoa@c+1,toupper@c+1
 10912  001F6C  ECE0  F019         	call	_toupper	;wreg free
 10913  001F70  C019  F07A         	movff	?_toupper,xtoa@c
 10914  001F74  C01A  F07B         	movff	?_toupper+1,xtoa@c+1
 10915  001F78                     l5512:
 10916                           
 10917                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
 10918  001F78  0E8E               	movlw	low _dbuf
 10919  001F7A  0100               	movlb	0	; () banked
 10920  001F7C  2578               	addwf	xtoa@i& (0+255),w,b
 10921  001F7E  6ED9               	movwf	fsr2l,c
 10922  001F80  0E01               	movlw	high _dbuf
 10923  001F82  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 10924  001F84  6EDA               	movwf	fsr2h,c
 10925  001F86  C07A  FFDF         	movff	xtoa@c,indf2
 10926  001F8A                     
 10927                           ; BSR set to: 0
 10928                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
 10929  001F8A  076C               	decf	xtoa@p& (0+255),f,b
 10930  001F8C  A0D8               	btfss	status,0,c
 10931  001F8E  076D               	decf	(xtoa@p+1)& (0+255),f,b
 10932  001F90                     
 10933                           ; BSR set to: 0
 10934                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
 10935  001F90  076E               	decf	xtoa@w& (0+255),f,b
 10936  001F92  A0D8               	btfss	status,0,c
 10937  001F94  076F               	decf	(xtoa@w+1)& (0+255),f,b
 10938  001F96                     
 10939                           ; BSR set to: 0
 10940                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
 10941  001F96  C070  F060         	movff	xtoa@n,??_xtoa
 10942  001F9A  C071  F061         	movff	xtoa@n+1,??_xtoa+1
 10943  001F9E  C072  F062         	movff	xtoa@n+2,??_xtoa+2
 10944  001FA2  C073  F063         	movff	xtoa@n+3,??_xtoa+3
 10945  001FA6  C074  F064         	movff	xtoa@n+4,??_xtoa+4
 10946  001FAA  C075  F065         	movff	xtoa@n+5,??_xtoa+5
 10947  001FAE  C076  F066         	movff	xtoa@n+6,??_xtoa+6
 10948  001FB2  C077  F067         	movff	xtoa@n+7,??_xtoa+7
 10949  001FB6  0E05               	movlw	5
 10950  001FB8  EFE7  F00F         	goto	u5630
 10951  001FBC                     u5635:
 10952  001FBC  90D8               	bcf	status,0,c
 10953  001FBE  3367               	rrcf	(??_xtoa+7)& (0+255),f,b
 10954  001FC0  3366               	rrcf	(??_xtoa+6)& (0+255),f,b
 10955  001FC2  3365               	rrcf	(??_xtoa+5)& (0+255),f,b
 10956  001FC4  3364               	rrcf	(??_xtoa+4)& (0+255),f,b
 10957  001FC6  3363               	rrcf	(??_xtoa+3)& (0+255),f,b
 10958  001FC8  3362               	rrcf	(??_xtoa+2)& (0+255),f,b
 10959  001FCA  3361               	rrcf	(??_xtoa+1)& (0+255),f,b
 10960  001FCC  3360               	rrcf	??_xtoa& (0+255),f,b
 10961  001FCE                     u5630:
 10962  001FCE  2EE8               	decfsz	wreg,f,c
 10963  001FD0  EFDE  F00F         	goto	u5635
 10964  001FD4  C060  F070         	movff	??_xtoa,xtoa@n
 10965  001FD8  C061  F071         	movff	??_xtoa+1,xtoa@n+1
 10966  001FDC  C062  F072         	movff	??_xtoa+2,xtoa@n+2
 10967  001FE0  C063  F073         	movff	??_xtoa+3,xtoa@n+3
 10968  001FE4  C064  F074         	movff	??_xtoa+4,xtoa@n+4
 10969  001FE8  C065  F075         	movff	??_xtoa+5,xtoa@n+5
 10970  001FEC  C066  F076         	movff	??_xtoa+6,xtoa@n+6
 10971  001FF0  C067  F077         	movff	??_xtoa+7,xtoa@n+7
 10972  001FF4                     l5520:
 10973                           
 10974                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10975  001FF4  0100               	movlb	0	; () banked
 10976  001FF6  BF79               	btfsc	(xtoa@i+1)& (0+255),7,b
 10977  001FF8  EF07  F010         	goto	u5641
 10978  001FFC  5179               	movf	(xtoa@i+1)& (0+255),w,b
 10979  001FFE  E109               	bnz	u5640
 10980  002000  0E02               	movlw	2
 10981  002002  5D78               	subwf	xtoa@i& (0+255),w,b
 10982  002004  A0D8               	btfss	status,0,c
 10983  002006  EF07  F010         	goto	u5641
 10984  00200A  EF09  F010         	goto	u5640
 10985  00200E                     u5641:
 10986  00200E  EF39  F010         	goto	l1542
 10987  002012                     u5640:
 10988  002012                     
 10989                           ; BSR set to: 0
 10990  002012  5170               	movf	xtoa@n& (0+255),w,b
 10991  002014  1171               	iorwf	(xtoa@n+1)& (0+255),w,b
 10992  002016  1172               	iorwf	(xtoa@n+2)& (0+255),w,b
 10993  002018  1173               	iorwf	(xtoa@n+3)& (0+255),w,b
 10994  00201A  1174               	iorwf	(xtoa@n+4)& (0+255),w,b
 10995  00201C  1175               	iorwf	(xtoa@n+5)& (0+255),w,b
 10996  00201E  1176               	iorwf	(xtoa@n+6)& (0+255),w,b
 10997  002020  1177               	iorwf	(xtoa@n+7)& (0+255),w,b
 10998  002022  A4D8               	btfss	status,2,c
 10999  002024  EF16  F010         	goto	u5651
 11000  002028  EF18  F010         	goto	u5650
 11001  00202C                     u5651:
 11002  00202C  EF46  F00F         	goto	l5490
 11003  002030                     u5650:
 11004  002030                     
 11005                           ; BSR set to: 0
 11006  002030  BF6D               	btfsc	(xtoa@p+1)& (0+255),7,b
 11007  002032  EF25  F010         	goto	u5660
 11008  002036  516D               	movf	(xtoa@p+1)& (0+255),w,b
 11009  002038  E106               	bnz	u5661
 11010  00203A  056C               	decf	xtoa@p& (0+255),w,b
 11011  00203C  B0D8               	btfsc	status,0,c
 11012  00203E  EF23  F010         	goto	u5661
 11013  002042  EF25  F010         	goto	u5660
 11014  002046                     u5661:
 11015  002046  EF46  F00F         	goto	l5490
 11016  00204A                     u5660:
 11017  00204A                     
 11018                           ; BSR set to: 0
 11019  00204A  BF6F               	btfsc	(xtoa@w+1)& (0+255),7,b
 11020  00204C  EF30  F010         	goto	u5671
 11021  002050  516F               	movf	(xtoa@w+1)& (0+255),w,b
 11022  002052  E108               	bnz	u5670
 11023  002054  056E               	decf	xtoa@w& (0+255),w,b
 11024  002056  A0D8               	btfss	status,0,c
 11025  002058  EF30  F010         	goto	u5671
 11026  00205C  EF32  F010         	goto	u5670
 11027  002060                     u5671:
 11028  002060  EF39  F010         	goto	l1542
 11029  002064                     u5670:
 11030  002064                     
 11031                           ; BSR set to: 0
 11032  002064  B23F               	btfsc	_flags^0,1,c
 11033  002066  EF37  F010         	goto	u5681
 11034  00206A  EF39  F010         	goto	u5680
 11035  00206E                     u5681:
 11036  00206E  EF46  F00F         	goto	l5490
 11037  002072                     u5680:
 11038  002072                     l1542:
 11039                           
 11040                           ; BSR set to: 0
 11041                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
 11042  002072  A83F               	btfss	_flags^0,4,c
 11043  002074  EF3E  F010         	goto	u5691
 11044  002078  EF40  F010         	goto	u5690
 11045  00207C                     u5691:
 11046  00207C  EF56  F010         	goto	l5536
 11047  002080                     u5690:
 11048  002080                     
 11049                           ; BSR set to: 0
 11050                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
 11051  002080  0778               	decf	xtoa@i& (0+255),f,b
 11052  002082  A0D8               	btfss	status,0,c
 11053  002084  0779               	decf	(xtoa@i+1)& (0+255),f,b
 11054  002086                     
 11055                           ; BSR set to: 0
 11056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
 11057  002086  0E8E               	movlw	low _dbuf
 11058  002088  2578               	addwf	xtoa@i& (0+255),w,b
 11059  00208A  6ED9               	movwf	fsr2l,c
 11060  00208C  0E01               	movlw	high _dbuf
 11061  00208E  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 11062  002090  6EDA               	movwf	fsr2h,c
 11063  002092  C03A  FFDF         	movff	xtoa@x,indf2
 11064  002096                     
 11065                           ; BSR set to: 0
 11066                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
 11067  002096  0778               	decf	xtoa@i& (0+255),f,b
 11068  002098  A0D8               	btfss	status,0,c
 11069  00209A  0779               	decf	(xtoa@i+1)& (0+255),f,b
 11070                           
 11071                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
 11072  00209C  0E8E               	movlw	low _dbuf
 11073  00209E  2578               	addwf	xtoa@i& (0+255),w,b
 11074  0020A0  6ED9               	movwf	fsr2l,c
 11075  0020A2  0E01               	movlw	high _dbuf
 11076  0020A4  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 11077  0020A6  6EDA               	movwf	fsr2h,c
 11078  0020A8  0E30               	movlw	48
 11079  0020AA  6EDF               	movwf	indf2,c
 11080  0020AC                     l5536:
 11081                           
 11082                           ; BSR set to: 0
 11083                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
 11084  0020AC  C030  F025         	movff	xtoa@fp,pad@fp
 11085  0020B0  C031  F026         	movff	xtoa@fp+1,pad@fp+1
 11086  0020B4  0E8E               	movlw	low _dbuf
 11087  0020B6  2578               	addwf	xtoa@i& (0+255),w,b
 11088  0020B8  6E27               	movwf	pad@buf^0,c
 11089  0020BA  0E01               	movlw	high _dbuf
 11090  0020BC  2179               	addwfc	(xtoa@i+1)& (0+255),w,b
 11091  0020BE  6E28               	movwf	(pad@buf+1)^0,c
 11092  0020C0  C06E  F029         	movff	xtoa@w,pad@p
 11093  0020C4  C06F  F02A         	movff	xtoa@w+1,pad@p+1
 11094  0020C8  ECA4  F017         	call	_pad	;wreg free
 11095  0020CC  C025  F030         	movff	?_pad,?_xtoa
 11096  0020D0  C026  F031         	movff	?_pad+1,?_xtoa+1
 11097  0020D4  0012               	return		;funcret
 11098  0020D6                     __end_of_xtoa:
 11099                           	callstack 0
 11100                           
 11101 ;; *************** function _toupper *****************
 11102 ;; Defined at:
 11103 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;  c               2   24[COMRAM] int 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  2   24[COMRAM] int 
 11110 ;; Registers used:
 11111 ;;		wreg, status,2, status,0
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11121 ;;Total ram usage:        8 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    5
 11124 ;; This function calls:
 11125 ;;		_islower
 11126 ;; This function is called by:
 11127 ;;		_xtoa
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           	psect	text31
 11132  0033C0                     __ptext31:
 11133                           	callstack 0
 11134  0033C0                     _toupper:
 11135                           	callstack 21
 11136  0033C0  0E9F               	movlw	159
 11137  0033C2  6E1B               	movwf	??_toupper^0,c
 11138  0033C4  0EFF               	movlw	255
 11139  0033C6  6E1C               	movwf	(??_toupper+1)^0,c
 11140  0033C8  C019  F01D         	movff	toupper@c,??_toupper+2
 11141  0033CC  C01A  F01E         	movff	toupper@c+1,??_toupper+3
 11142  0033D0  501B               	movf	??_toupper^0,w,c
 11143  0033D2  261D               	addwf	(??_toupper+2)^0,f,c
 11144  0033D4  501C               	movf	(??_toupper+1)^0,w,c
 11145  0033D6  221E               	addwfc	(??_toupper+3)^0,f,c
 11146  0033D8  501E               	movf	(??_toupper+3)^0,w,c
 11147  0033DA  E10A               	bnz	u5190
 11148  0033DC  0E1A               	movlw	26
 11149  0033DE  5C1D               	subwf	(??_toupper+2)^0,w,c
 11150  0033E0  A0D8               	btfss	status,0,c
 11151  0033E2  EFF5  F019         	goto	u5191
 11152  0033E6  EFF8  F019         	goto	u5190
 11153  0033EA                     u5191:
 11154  0033EA  0E01               	movlw	1
 11155  0033EC  EFF9  F019         	goto	u5200
 11156  0033F0                     u5190:
 11157  0033F0  0E00               	movlw	0
 11158  0033F2                     u5200:
 11159  0033F2  6E1F               	movwf	_toupper$2122^0,c
 11160  0033F4  6A20               	clrf	(_toupper$2122+1)^0,c
 11161  0033F6  501F               	movf	_toupper$2122^0,w,c
 11162  0033F8  1020               	iorwf	(_toupper$2122+1)^0,w,c
 11163  0033FA  B4D8               	btfsc	status,2,c
 11164  0033FC  EF02  F01A         	goto	u5211
 11165  003400  EF04  F01A         	goto	u5210
 11166  003404                     u5211:
 11167  003404  EF0A  F01A         	goto	l1680
 11168  003408                     u5210:
 11169  003408  0E5F               	movlw	95
 11170  00340A  1419               	andwf	toupper@c^0,w,c
 11171  00340C  6E19               	movwf	?_toupper^0,c
 11172  00340E  6A1A               	clrf	(?_toupper+1)^0,c
 11173  003410  EF0E  F01A         	goto	l1685
 11174  003414                     l1680:
 11175  003414  C019  F019         	movff	toupper@c,?_toupper
 11176  003418  C01A  F01A         	movff	toupper@c+1,?_toupper+1
 11177  00341C                     l1685:
 11178  00341C  0012               	return		;funcret
 11179  00341E                     __end_of_toupper:
 11180                           	callstack 0
 11181                           
 11182 ;; *************** function _islower *****************
 11183 ;; Defined at:
 11184 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
 11185 ;; Parameters:    Size  Location     Type
 11186 ;;  c               2   18[COMRAM] int 
 11187 ;; Auto vars:     Size  Location     Type
 11188 ;;		None
 11189 ;; Return value:  Size  Location     Type
 11190 ;;                  2   18[COMRAM] int 
 11191 ;; Registers used:
 11192 ;;		wreg, status,2, status,0
 11193 ;; Tracked objects:
 11194 ;;		On entry : 0/0
 11195 ;;		On exit  : 0/0
 11196 ;;		Unchanged: 0/0
 11197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11200 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11201 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11202 ;;Total ram usage:        6 bytes
 11203 ;; Hardware stack levels used:    1
 11204 ;; Hardware stack levels required when called:    4
 11205 ;; This function calls:
 11206 ;;		Nothing
 11207 ;; This function is called by:
 11208 ;;		_toupper
 11209 ;; This function uses a non-reentrant model
 11210 ;;
 11211                           
 11212                           	psect	text32
 11213  003626                     __ptext32:
 11214                           	callstack 0
 11215  003626                     _islower:
 11216                           	callstack 21
 11217  003626  0E9F               	movlw	159
 11218  003628  6E15               	movwf	??_islower^0,c
 11219  00362A  0EFF               	movlw	255
 11220  00362C  6E16               	movwf	(??_islower+1)^0,c
 11221  00362E  C013  F017         	movff	islower@c,??_islower+2
 11222  003632  C014  F018         	movff	islower@c+1,??_islower+3
 11223  003636  5015               	movf	??_islower^0,w,c
 11224  003638  2617               	addwf	(??_islower+2)^0,f,c
 11225  00363A  5016               	movf	(??_islower+1)^0,w,c
 11226  00363C  2218               	addwfc	(??_islower+3)^0,f,c
 11227  00363E  5018               	movf	(??_islower+3)^0,w,c
 11228  003640  E10A               	bnz	u4880
 11229  003642  0E1A               	movlw	26
 11230  003644  5C17               	subwf	(??_islower+2)^0,w,c
 11231  003646  A0D8               	btfss	status,0,c
 11232  003648  EF28  F01B         	goto	u4881
 11233  00364C  EF2B  F01B         	goto	u4880
 11234  003650                     u4881:
 11235  003650  0E01               	movlw	1
 11236  003652  EF2C  F01B         	goto	u4890
 11237  003656                     u4880:
 11238  003656  0E00               	movlw	0
 11239  003658                     u4890:
 11240  003658  6E13               	movwf	?_islower^0,c
 11241  00365A  6A14               	clrf	(?_islower+1)^0,c
 11242  00365C  0012               	return		;funcret
 11243  00365E                     __end_of_islower:
 11244                           	callstack 0
 11245                           
 11246 ;; *************** function _isupper *****************
 11247 ;; Defined at:
 11248 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
 11249 ;; Parameters:    Size  Location     Type
 11250 ;;  c               2   18[COMRAM] int 
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;		None
 11253 ;; Return value:  Size  Location     Type
 11254 ;;                  2   18[COMRAM] int 
 11255 ;; Registers used:
 11256 ;;		wreg, status,2, status,0
 11257 ;; Tracked objects:
 11258 ;;		On entry : 0/0
 11259 ;;		On exit  : 0/0
 11260 ;;		Unchanged: 0/0
 11261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11264 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11265 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11266 ;;Total ram usage:        6 bytes
 11267 ;; Hardware stack levels used:    1
 11268 ;; Hardware stack levels required when called:    4
 11269 ;; This function calls:
 11270 ;;		Nothing
 11271 ;; This function is called by:
 11272 ;;		_xtoa
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text33
 11277  00365E                     __ptext33:
 11278                           	callstack 0
 11279  00365E                     _isupper:
 11280                           	callstack 22
 11281  00365E  0EBF               	movlw	191
 11282  003660  6E15               	movwf	??_isupper^0,c
 11283  003662  0EFF               	movlw	255
 11284  003664  6E16               	movwf	(??_isupper+1)^0,c
 11285  003666  C013  F017         	movff	isupper@c,??_isupper+2
 11286  00366A  C014  F018         	movff	isupper@c+1,??_isupper+3
 11287  00366E  5015               	movf	??_isupper^0,w,c
 11288  003670  2617               	addwf	(??_isupper+2)^0,f,c
 11289  003672  5016               	movf	(??_isupper+1)^0,w,c
 11290  003674  2218               	addwfc	(??_isupper+3)^0,f,c
 11291  003676  5018               	movf	(??_isupper+3)^0,w,c
 11292  003678  E10A               	bnz	u5150
 11293  00367A  0E1A               	movlw	26
 11294  00367C  5C17               	subwf	(??_isupper+2)^0,w,c
 11295  00367E  A0D8               	btfss	status,0,c
 11296  003680  EF44  F01B         	goto	u5151
 11297  003684  EF47  F01B         	goto	u5150
 11298  003688                     u5151:
 11299  003688  0E01               	movlw	1
 11300  00368A  EF48  F01B         	goto	u5160
 11301  00368E                     u5150:
 11302  00368E  0E00               	movlw	0
 11303  003690                     u5160:
 11304  003690  6E13               	movwf	?_isupper^0,c
 11305  003692  6A14               	clrf	(?_isupper+1)^0,c
 11306  003694  0012               	return		;funcret
 11307  003696                     __end_of_isupper:
 11308                           	callstack 0
 11309                           
 11310 ;; *************** function _isalpha *****************
 11311 ;; Defined at:
 11312 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;  c               2   18[COMRAM] int 
 11315 ;; Auto vars:     Size  Location     Type
 11316 ;;		None
 11317 ;; Return value:  Size  Location     Type
 11318 ;;                  2   18[COMRAM] int 
 11319 ;; Registers used:
 11320 ;;		wreg, status,2, status,0
 11321 ;; Tracked objects:
 11322 ;;		On entry : 0/0
 11323 ;;		On exit  : 0/0
 11324 ;;		Unchanged: 0/0
 11325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;Total ram usage:        6 bytes
 11331 ;; Hardware stack levels used:    1
 11332 ;; Hardware stack levels required when called:    4
 11333 ;; This function calls:
 11334 ;;		Nothing
 11335 ;; This function is called by:
 11336 ;;		_xtoa
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           	psect	text34
 11341  0035B2                     __ptext34:
 11342                           	callstack 0
 11343  0035B2                     _isalpha:
 11344                           	callstack 22
 11345  0035B2  0E9F               	movlw	159
 11346  0035B4  6E15               	movwf	??_isalpha^0,c
 11347  0035B6  0EFF               	movlw	255
 11348  0035B8  6E16               	movwf	(??_isalpha+1)^0,c
 11349  0035BA  0E20               	movlw	32
 11350  0035BC  1013               	iorwf	isalpha@c^0,w,c
 11351  0035BE  6E17               	movwf	(??_isalpha+2)^0,c
 11352  0035C0  0E00               	movlw	0
 11353  0035C2  1014               	iorwf	(isalpha@c+1)^0,w,c
 11354  0035C4  6E18               	movwf	(??_isalpha+3)^0,c
 11355  0035C6  5015               	movf	??_isalpha^0,w,c
 11356  0035C8  2617               	addwf	(??_isalpha+2)^0,f,c
 11357  0035CA  5016               	movf	(??_isalpha+1)^0,w,c
 11358  0035CC  2218               	addwfc	(??_isalpha+3)^0,f,c
 11359  0035CE  5018               	movf	(??_isalpha+3)^0,w,c
 11360  0035D0  E10A               	bnz	u5170
 11361  0035D2  0E1A               	movlw	26
 11362  0035D4  5C17               	subwf	(??_isalpha+2)^0,w,c
 11363  0035D6  A0D8               	btfss	status,0,c
 11364  0035D8  EFF0  F01A         	goto	u5171
 11365  0035DC  EFF3  F01A         	goto	u5170
 11366  0035E0                     u5171:
 11367  0035E0  0E01               	movlw	1
 11368  0035E2  EFF4  F01A         	goto	u5180
 11369  0035E6                     u5170:
 11370  0035E6  0E00               	movlw	0
 11371  0035E8                     u5180:
 11372  0035E8  6E13               	movwf	?_isalpha^0,c
 11373  0035EA  6A14               	clrf	(?_isalpha+1)^0,c
 11374  0035EC  0012               	return		;funcret
 11375  0035EE                     __end_of_isalpha:
 11376                           	callstack 0
 11377                           
 11378 ;; *************** function _utoa *****************
 11379 ;; Defined at:
 11380 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 11383 ;;		 -> NULL(0), 
 11384 ;;  d               8   49[COMRAM] unsigned long long 
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;  n               8   12[BANK0 ] unsigned long long 
 11387 ;;  i               2   20[BANK0 ] int 
 11388 ;;  w               2   10[BANK0 ] int 
 11389 ;;  p               2    8[BANK0 ] int 
 11390 ;; Return value:  Size  Location     Type
 11391 ;;                  2   47[COMRAM] int 
 11392 ;; Registers used:
 11393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11394 ;; Tracked objects:
 11395 ;;		On entry : 0/0
 11396 ;;		On exit  : 0/0
 11397 ;;		Unchanged: 0/0
 11398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11399 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11400 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11401 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11402 ;;      Totals:        10      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11403 ;;Total ram usage:       32 bytes
 11404 ;; Hardware stack levels used:    1
 11405 ;; Hardware stack levels required when called:    9
 11406 ;; This function calls:
 11407 ;;		___lodiv
 11408 ;;		___lomod
 11409 ;;		_pad
 11410 ;; This function is called by:
 11411 ;;		_vfpfcnvrt
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text35
 11416  0020D6                     __ptext35:
 11417                           	callstack 0
 11418  0020D6                     _utoa:
 11419                           	callstack 18
 11420  0020D6                     
 11421                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 11422  0020D6  BE3E               	btfsc	(_prec+1)^0,7,c
 11423  0020D8  EF70  F010         	goto	u5461
 11424  0020DC  EF72  F010         	goto	u5460
 11425  0020E0                     u5461:
 11426  0020E0  EF73  F010         	goto	l5442
 11427  0020E4                     u5460:
 11428  0020E4                     
 11429                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 11430  0020E4  923F               	bcf	_flags^0,1,c
 11431  0020E6                     l5442:
 11432                           
 11433                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 11434  0020E6  BE3E               	btfsc	(_prec+1)^0,7,c
 11435  0020E8  EF80  F010         	goto	u5470
 11436  0020EC  503E               	movf	(_prec+1)^0,w,c
 11437  0020EE  E106               	bnz	u5471
 11438  0020F0  043D               	decf	_prec^0,w,c
 11439  0020F2  B0D8               	btfsc	status,0,c
 11440  0020F4  EF7E  F010         	goto	u5471
 11441  0020F8  EF80  F010         	goto	u5470
 11442  0020FC                     u5471:
 11443  0020FC  EF87  F010         	goto	l1504
 11444  002100                     u5470:
 11445  002100  0E00               	movlw	0
 11446  002102  0100               	movlb	0	; () banked
 11447  002104  6F69               	movwf	(utoa@p+1)& (0+255),b
 11448  002106  0E01               	movlw	1
 11449  002108  6F68               	movwf	utoa@p& (0+255),b
 11450  00210A  EF8B  F010         	goto	l1506
 11451  00210E                     l1504:
 11452  00210E  C03D  F068         	movff	_prec,utoa@p
 11453  002112  C03E  F069         	movff	_prec+1,utoa@p+1
 11454  002116                     l1506:
 11455                           
 11456                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 11457  002116  C03B  F06A         	movff	_width,utoa@w
 11458  00211A  C03C  F06B         	movff	_width+1,utoa@w+1
 11459                           
 11460                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 628:     n = d;
 11461  00211E  C032  F06C         	movff	utoa@d,utoa@n
 11462  002122  C033  F06D         	movff	utoa@d+1,utoa@n+1
 11463  002126  C034  F06E         	movff	utoa@d+2,utoa@n+2
 11464  00212A  C035  F06F         	movff	utoa@d+3,utoa@n+3
 11465  00212E  C036  F070         	movff	utoa@d+4,utoa@n+4
 11466  002132  C037  F071         	movff	utoa@d+5,utoa@n+5
 11467  002136  C038  F072         	movff	utoa@d+6,utoa@n+6
 11468  00213A  C039  F073         	movff	utoa@d+7,utoa@n+7
 11469  00213E                     
 11470                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 11471  00213E  0E00               	movlw	0
 11472  002140  0100               	movlb	0	; () banked
 11473  002142  6F75               	movwf	(utoa@i+1)& (0+255),b
 11474  002144  0E1F               	movlw	31
 11475  002146  6F74               	movwf	utoa@i& (0+255),b
 11476  002148                     
 11477                           ; BSR set to: 0
 11478                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 11479  002148  0E00               	movlw	0
 11480  00214A  0101               	movlb	1	; () banked
 11481  00214C  6FAD               	movwf	(_dbuf+31)& (0+255),b
 11482                           
 11483                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11484  00214E  EF20  F011         	goto	l5460
 11485  002152                     l5450:
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 632:         --i;
 11489  002152  0774               	decf	utoa@i& (0+255),f,b
 11490  002154  A0D8               	btfss	status,0,c
 11491  002156  0775               	decf	(utoa@i+1)& (0+255),f,b
 11492  002158                     
 11493                           ; BSR set to: 0
 11494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 11495  002158  0E8E               	movlw	low _dbuf
 11496  00215A  2574               	addwf	utoa@i& (0+255),w,b
 11497  00215C  6ED9               	movwf	fsr2l,c
 11498  00215E  0E01               	movlw	high _dbuf
 11499  002160  2175               	addwfc	(utoa@i+1)& (0+255),w,b
 11500  002162  6EDA               	movwf	fsr2h,c
 11501  002164  C06C  F013         	movff	utoa@n,___lomod@dividend
 11502  002168  C06D  F014         	movff	utoa@n+1,___lomod@dividend+1
 11503  00216C  C06E  F015         	movff	utoa@n+2,___lomod@dividend+2
 11504  002170  C06F  F016         	movff	utoa@n+3,___lomod@dividend+3
 11505  002174  C070  F017         	movff	utoa@n+4,___lomod@dividend+4
 11506  002178  C071  F018         	movff	utoa@n+5,___lomod@dividend+5
 11507  00217C  C072  F019         	movff	utoa@n+6,___lomod@dividend+6
 11508  002180  C073  F01A         	movff	utoa@n+7,___lomod@dividend+7
 11509  002184  0E0A               	movlw	10
 11510  002186  6E1B               	movwf	___lomod@divisor^0,c
 11511  002188  0E00               	movlw	0
 11512  00218A  6E1C               	movwf	(___lomod@divisor+1)^0,c
 11513  00218C  0E00               	movlw	0
 11514  00218E  6E1D               	movwf	(___lomod@divisor+2)^0,c
 11515  002190  0E00               	movlw	0
 11516  002192  6E1E               	movwf	(___lomod@divisor+3)^0,c
 11517  002194  0E00               	movlw	0
 11518  002196  6E1F               	movwf	(___lomod@divisor+4)^0,c
 11519  002198  0E00               	movlw	0
 11520  00219A  6E20               	movwf	(___lomod@divisor+5)^0,c
 11521  00219C  0E00               	movlw	0
 11522  00219E  6E21               	movwf	(___lomod@divisor+6)^0,c
 11523  0021A0  0E00               	movlw	0
 11524  0021A2  6E22               	movwf	(___lomod@divisor+7)^0,c
 11525  0021A4  EC3C  F017         	call	___lomod	;wreg free
 11526  0021A8  C013  F060         	movff	?___lomod,??_utoa
 11527  0021AC  C014  F061         	movff	?___lomod+1,??_utoa+1
 11528  0021B0  C015  F062         	movff	?___lomod+2,??_utoa+2
 11529  0021B4  C016  F063         	movff	?___lomod+3,??_utoa+3
 11530  0021B8  C017  F064         	movff	?___lomod+4,??_utoa+4
 11531  0021BC  C018  F065         	movff	?___lomod+5,??_utoa+5
 11532  0021C0  C019  F066         	movff	?___lomod+6,??_utoa+6
 11533  0021C4  C01A  F067         	movff	?___lomod+7,??_utoa+7
 11534  0021C8  0100               	movlb	0	; () banked
 11535  0021CA  5160               	movf	??_utoa& (0+255),w,b
 11536  0021CC  0F30               	addlw	48
 11537  0021CE  6EDF               	movwf	indf2,c
 11538  0021D0                     
 11539                           ; BSR set to: 0
 11540                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 634:         --p;
 11541  0021D0  0768               	decf	utoa@p& (0+255),f,b
 11542  0021D2  A0D8               	btfss	status,0,c
 11543  0021D4  0769               	decf	(utoa@p+1)& (0+255),f,b
 11544  0021D6                     
 11545                           ; BSR set to: 0
 11546                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 635:         --w;
 11547  0021D6  076A               	decf	utoa@w& (0+255),f,b
 11548  0021D8  A0D8               	btfss	status,0,c
 11549  0021DA  076B               	decf	(utoa@w+1)& (0+255),f,b
 11550  0021DC                     
 11551                           ; BSR set to: 0
 11552                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 11553  0021DC  C06C  F013         	movff	utoa@n,___lodiv@dividend
 11554  0021E0  C06D  F014         	movff	utoa@n+1,___lodiv@dividend+1
 11555  0021E4  C06E  F015         	movff	utoa@n+2,___lodiv@dividend+2
 11556  0021E8  C06F  F016         	movff	utoa@n+3,___lodiv@dividend+3
 11557  0021EC  C070  F017         	movff	utoa@n+4,___lodiv@dividend+4
 11558  0021F0  C071  F018         	movff	utoa@n+5,___lodiv@dividend+5
 11559  0021F4  C072  F019         	movff	utoa@n+6,___lodiv@dividend+6
 11560  0021F8  C073  F01A         	movff	utoa@n+7,___lodiv@dividend+7
 11561  0021FC  0E0A               	movlw	10
 11562  0021FE  6E1B               	movwf	___lodiv@divisor^0,c
 11563  002200  0E00               	movlw	0
 11564  002202  6E1C               	movwf	(___lodiv@divisor+1)^0,c
 11565  002204  0E00               	movlw	0
 11566  002206  6E1D               	movwf	(___lodiv@divisor+2)^0,c
 11567  002208  0E00               	movlw	0
 11568  00220A  6E1E               	movwf	(___lodiv@divisor+3)^0,c
 11569  00220C  0E00               	movlw	0
 11570  00220E  6E1F               	movwf	(___lodiv@divisor+4)^0,c
 11571  002210  0E00               	movlw	0
 11572  002212  6E20               	movwf	(___lodiv@divisor+5)^0,c
 11573  002214  0E00               	movlw	0
 11574  002216  6E21               	movwf	(___lodiv@divisor+6)^0,c
 11575  002218  0E00               	movlw	0
 11576  00221A  6E22               	movwf	(___lodiv@divisor+7)^0,c
 11577  00221C  EC5A  F016         	call	___lodiv	;wreg free
 11578  002220  C013  F06C         	movff	?___lodiv,utoa@n
 11579  002224  C014  F06D         	movff	?___lodiv+1,utoa@n+1
 11580  002228  C015  F06E         	movff	?___lodiv+2,utoa@n+2
 11581  00222C  C016  F06F         	movff	?___lodiv+3,utoa@n+3
 11582  002230  C017  F070         	movff	?___lodiv+4,utoa@n+4
 11583  002234  C018  F071         	movff	?___lodiv+5,utoa@n+5
 11584  002238  C019  F072         	movff	?___lodiv+6,utoa@n+6
 11585  00223C  C01A  F073         	movff	?___lodiv+7,utoa@n+7
 11586  002240                     l5460:
 11587                           
 11588                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11589  002240  0100               	movlb	0	; () banked
 11590  002242  5174               	movf	utoa@i& (0+255),w,b
 11591  002244  1175               	iorwf	(utoa@i+1)& (0+255),w,b
 11592  002246  B4D8               	btfsc	status,2,c
 11593  002248  EF28  F011         	goto	u5481
 11594  00224C  EF2A  F011         	goto	u5480
 11595  002250                     u5481:
 11596  002250  EF5A  F011         	goto	l5470
 11597  002254                     u5480:
 11598  002254                     
 11599                           ; BSR set to: 0
 11600  002254  516C               	movf	utoa@n& (0+255),w,b
 11601  002256  116D               	iorwf	(utoa@n+1)& (0+255),w,b
 11602  002258  116E               	iorwf	(utoa@n+2)& (0+255),w,b
 11603  00225A  116F               	iorwf	(utoa@n+3)& (0+255),w,b
 11604  00225C  1170               	iorwf	(utoa@n+4)& (0+255),w,b
 11605  00225E  1171               	iorwf	(utoa@n+5)& (0+255),w,b
 11606  002260  1172               	iorwf	(utoa@n+6)& (0+255),w,b
 11607  002262  1173               	iorwf	(utoa@n+7)& (0+255),w,b
 11608  002264  A4D8               	btfss	status,2,c
 11609  002266  EF37  F011         	goto	u5491
 11610  00226A  EF39  F011         	goto	u5490
 11611  00226E                     u5491:
 11612  00226E  EFA9  F010         	goto	l5450
 11613  002272                     u5490:
 11614  002272                     
 11615                           ; BSR set to: 0
 11616  002272  BF69               	btfsc	(utoa@p+1)& (0+255),7,b
 11617  002274  EF46  F011         	goto	u5500
 11618  002278  5169               	movf	(utoa@p+1)& (0+255),w,b
 11619  00227A  E106               	bnz	u5501
 11620  00227C  0568               	decf	utoa@p& (0+255),w,b
 11621  00227E  B0D8               	btfsc	status,0,c
 11622  002280  EF44  F011         	goto	u5501
 11623  002284  EF46  F011         	goto	u5500
 11624  002288                     u5501:
 11625  002288  EFA9  F010         	goto	l5450
 11626  00228C                     u5500:
 11627  00228C                     
 11628                           ; BSR set to: 0
 11629  00228C  BF6B               	btfsc	(utoa@w+1)& (0+255),7,b
 11630  00228E  EF51  F011         	goto	u5511
 11631  002292  516B               	movf	(utoa@w+1)& (0+255),w,b
 11632  002294  E108               	bnz	u5510
 11633  002296  056A               	decf	utoa@w& (0+255),w,b
 11634  002298  A0D8               	btfss	status,0,c
 11635  00229A  EF51  F011         	goto	u5511
 11636  00229E  EF53  F011         	goto	u5510
 11637  0022A2                     u5511:
 11638  0022A2  EF5A  F011         	goto	l5470
 11639  0022A6                     u5510:
 11640  0022A6                     
 11641                           ; BSR set to: 0
 11642  0022A6  B23F               	btfsc	_flags^0,1,c
 11643  0022A8  EF58  F011         	goto	u5521
 11644  0022AC  EF5A  F011         	goto	u5520
 11645  0022B0                     u5521:
 11646  0022B0  EFA9  F010         	goto	l5450
 11647  0022B4                     u5520:
 11648  0022B4                     l5470:
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 11652  0022B4  C030  F025         	movff	utoa@fp,pad@fp
 11653  0022B8  C031  F026         	movff	utoa@fp+1,pad@fp+1
 11654  0022BC  0E8E               	movlw	low _dbuf
 11655  0022BE  2574               	addwf	utoa@i& (0+255),w,b
 11656  0022C0  6E27               	movwf	pad@buf^0,c
 11657  0022C2  0E01               	movlw	high _dbuf
 11658  0022C4  2175               	addwfc	(utoa@i+1)& (0+255),w,b
 11659  0022C6  6E28               	movwf	(pad@buf+1)^0,c
 11660  0022C8  C06A  F029         	movff	utoa@w,pad@p
 11661  0022CC  C06B  F02A         	movff	utoa@w+1,pad@p+1
 11662  0022D0  ECA4  F017         	call	_pad	;wreg free
 11663  0022D4  C025  F030         	movff	?_pad,?_utoa
 11664  0022D8  C026  F031         	movff	?_pad+1,?_utoa+1
 11665  0022DC  0012               	return		;funcret
 11666  0022DE                     __end_of_utoa:
 11667                           	callstack 0
 11668                           
 11669 ;; *************** function ___lomod *****************
 11670 ;; Defined at:
 11671 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lomod.c"
 11672 ;; Parameters:    Size  Location     Type
 11673 ;;  dividend        8   18[COMRAM] unsigned long long 
 11674 ;;  divisor         8   26[COMRAM] unsigned long long 
 11675 ;; Auto vars:     Size  Location     Type
 11676 ;;  counter         1   34[COMRAM] unsigned char 
 11677 ;; Return value:  Size  Location     Type
 11678 ;;                  8   18[COMRAM] unsigned long long 
 11679 ;; Registers used:
 11680 ;;		wreg, status,2, status,0
 11681 ;; Tracked objects:
 11682 ;;		On entry : 0/0
 11683 ;;		On exit  : 0/0
 11684 ;;		Unchanged: 0/0
 11685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11686 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11689 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11690 ;;Total ram usage:       17 bytes
 11691 ;; Hardware stack levels used:    1
 11692 ;; Hardware stack levels required when called:    4
 11693 ;; This function calls:
 11694 ;;		Nothing
 11695 ;; This function is called by:
 11696 ;;		_utoa
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text36
 11701  002E78                     __ptext36:
 11702                           	callstack 0
 11703  002E78                     ___lomod:
 11704                           	callstack 22
 11705  002E78  501B               	movf	___lomod@divisor^0,w,c
 11706  002E7A  101C               	iorwf	(___lomod@divisor+1)^0,w,c
 11707  002E7C  101D               	iorwf	(___lomod@divisor+2)^0,w,c
 11708  002E7E  101E               	iorwf	(___lomod@divisor+3)^0,w,c
 11709  002E80  101F               	iorwf	(___lomod@divisor+4)^0,w,c
 11710  002E82  1020               	iorwf	(___lomod@divisor+5)^0,w,c
 11711  002E84  1021               	iorwf	(___lomod@divisor+6)^0,w,c
 11712  002E86  1022               	iorwf	(___lomod@divisor+7)^0,w,c
 11713  002E88  B4D8               	btfsc	status,2,c
 11714  002E8A  EF49  F017         	goto	u5071
 11715  002E8E  EF4B  F017         	goto	u5070
 11716  002E92                     u5071:
 11717  002E92  EF93  F017         	goto	l1185
 11718  002E96                     u5070:
 11719  002E96  0E01               	movlw	1
 11720  002E98  6E23               	movwf	___lomod@counter^0,c
 11721  002E9A  EF59  F017         	goto	l5278
 11722  002E9E                     l5276:
 11723  002E9E  90D8               	bcf	status,0,c
 11724  002EA0  361B               	rlcf	___lomod@divisor^0,f,c
 11725  002EA2  361C               	rlcf	(___lomod@divisor+1)^0,f,c
 11726  002EA4  361D               	rlcf	(___lomod@divisor+2)^0,f,c
 11727  002EA6  361E               	rlcf	(___lomod@divisor+3)^0,f,c
 11728  002EA8  361F               	rlcf	(___lomod@divisor+4)^0,f,c
 11729  002EAA  3620               	rlcf	(___lomod@divisor+5)^0,f,c
 11730  002EAC  3621               	rlcf	(___lomod@divisor+6)^0,f,c
 11731  002EAE  3622               	rlcf	(___lomod@divisor+7)^0,f,c
 11732  002EB0  2A23               	incf	___lomod@counter^0,f,c
 11733  002EB2                     l5278:
 11734  002EB2  AE22               	btfss	(___lomod@divisor+7)^0,7,c
 11735  002EB4  EF5E  F017         	goto	u5081
 11736  002EB8  EF60  F017         	goto	u5080
 11737  002EBC                     u5081:
 11738  002EBC  EF4F  F017         	goto	l5276
 11739  002EC0                     u5080:
 11740  002EC0                     l5280:
 11741  002EC0  501B               	movf	___lomod@divisor^0,w,c
 11742  002EC2  5C13               	subwf	___lomod@dividend^0,w,c
 11743  002EC4  501C               	movf	(___lomod@divisor+1)^0,w,c
 11744  002EC6  5814               	subwfb	(___lomod@dividend+1)^0,w,c
 11745  002EC8  501D               	movf	(___lomod@divisor+2)^0,w,c
 11746  002ECA  5815               	subwfb	(___lomod@dividend+2)^0,w,c
 11747  002ECC  501E               	movf	(___lomod@divisor+3)^0,w,c
 11748  002ECE  5816               	subwfb	(___lomod@dividend+3)^0,w,c
 11749  002ED0  501F               	movf	(___lomod@divisor+4)^0,w,c
 11750  002ED2  5817               	subwfb	(___lomod@dividend+4)^0,w,c
 11751  002ED4  5020               	movf	(___lomod@divisor+5)^0,w,c
 11752  002ED6  5818               	subwfb	(___lomod@dividend+5)^0,w,c
 11753  002ED8  5021               	movf	(___lomod@divisor+6)^0,w,c
 11754  002EDA  5819               	subwfb	(___lomod@dividend+6)^0,w,c
 11755  002EDC  5022               	movf	(___lomod@divisor+7)^0,w,c
 11756  002EDE  581A               	subwfb	(___lomod@dividend+7)^0,w,c
 11757  002EE0  A0D8               	btfss	status,0,c
 11758  002EE2  EF75  F017         	goto	u5091
 11759  002EE6  EF77  F017         	goto	u5090
 11760  002EEA                     u5091:
 11761  002EEA  EF87  F017         	goto	l5284
 11762  002EEE                     u5090:
 11763  002EEE  501B               	movf	___lomod@divisor^0,w,c
 11764  002EF0  5E13               	subwf	___lomod@dividend^0,f,c
 11765  002EF2  501C               	movf	(___lomod@divisor+1)^0,w,c
 11766  002EF4  5A14               	subwfb	(___lomod@dividend+1)^0,f,c
 11767  002EF6  501D               	movf	(___lomod@divisor+2)^0,w,c
 11768  002EF8  5A15               	subwfb	(___lomod@dividend+2)^0,f,c
 11769  002EFA  501E               	movf	(___lomod@divisor+3)^0,w,c
 11770  002EFC  5A16               	subwfb	(___lomod@dividend+3)^0,f,c
 11771  002EFE  501F               	movf	(___lomod@divisor+4)^0,w,c
 11772  002F00  5A17               	subwfb	(___lomod@dividend+4)^0,f,c
 11773  002F02  5020               	movf	(___lomod@divisor+5)^0,w,c
 11774  002F04  5A18               	subwfb	(___lomod@dividend+5)^0,f,c
 11775  002F06  5021               	movf	(___lomod@divisor+6)^0,w,c
 11776  002F08  5A19               	subwfb	(___lomod@dividend+6)^0,f,c
 11777  002F0A  5022               	movf	(___lomod@divisor+7)^0,w,c
 11778  002F0C  5A1A               	subwfb	(___lomod@dividend+7)^0,f,c
 11779  002F0E                     l5284:
 11780  002F0E  90D8               	bcf	status,0,c
 11781  002F10  3222               	rrcf	(___lomod@divisor+7)^0,f,c
 11782  002F12  3221               	rrcf	(___lomod@divisor+6)^0,f,c
 11783  002F14  3220               	rrcf	(___lomod@divisor+5)^0,f,c
 11784  002F16  321F               	rrcf	(___lomod@divisor+4)^0,f,c
 11785  002F18  321E               	rrcf	(___lomod@divisor+3)^0,f,c
 11786  002F1A  321D               	rrcf	(___lomod@divisor+2)^0,f,c
 11787  002F1C  321C               	rrcf	(___lomod@divisor+1)^0,f,c
 11788  002F1E  321B               	rrcf	___lomod@divisor^0,f,c
 11789  002F20  2E23               	decfsz	___lomod@counter^0,f,c
 11790  002F22  EF60  F017         	goto	l5280
 11791  002F26                     l1185:
 11792  002F26  C013  F013         	movff	___lomod@dividend,?___lomod
 11793  002F2A  C014  F014         	movff	___lomod@dividend+1,?___lomod+1
 11794  002F2E  C015  F015         	movff	___lomod@dividend+2,?___lomod+2
 11795  002F32  C016  F016         	movff	___lomod@dividend+3,?___lomod+3
 11796  002F36  C017  F017         	movff	___lomod@dividend+4,?___lomod+4
 11797  002F3A  C018  F018         	movff	___lomod@dividend+5,?___lomod+5
 11798  002F3E  C019  F019         	movff	___lomod@dividend+6,?___lomod+6
 11799  002F42  C01A  F01A         	movff	___lomod@dividend+7,?___lomod+7
 11800  002F46  0012               	return		;funcret
 11801  002F48                     __end_of___lomod:
 11802                           	callstack 0
 11803                           
 11804 ;; *************** function ___lodiv *****************
 11805 ;; Defined at:
 11806 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lodiv.c"
 11807 ;; Parameters:    Size  Location     Type
 11808 ;;  dividend        8   18[COMRAM] unsigned long long 
 11809 ;;  divisor         8   26[COMRAM] unsigned long long 
 11810 ;; Auto vars:     Size  Location     Type
 11811 ;;  quotient        8   34[COMRAM] unsigned long long 
 11812 ;;  counter         1   42[COMRAM] unsigned char 
 11813 ;; Return value:  Size  Location     Type
 11814 ;;                  8   18[COMRAM] unsigned long long 
 11815 ;; Registers used:
 11816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11817 ;; Tracked objects:
 11818 ;;		On entry : 0/0
 11819 ;;		On exit  : 0/0
 11820 ;;		Unchanged: 0/0
 11821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11822 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11823 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11825 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;Total ram usage:       25 bytes
 11827 ;; Hardware stack levels used:    1
 11828 ;; Hardware stack levels required when called:    4
 11829 ;; This function calls:
 11830 ;;		Nothing
 11831 ;; This function is called by:
 11832 ;;		_utoa
 11833 ;; This function uses a non-reentrant model
 11834 ;;
 11835                           
 11836                           	psect	text37
 11837  002CB4                     __ptext37:
 11838                           	callstack 0
 11839  002CB4                     ___lodiv:
 11840                           	callstack 22
 11841  002CB4  EE20  F023         	lfsr	2,___lodiv@quotient
 11842  002CB8  0E07               	movlw	7
 11843  002CBA                     u5031:
 11844  002CBA  6ADE               	clrf	postinc2,c
 11845  002CBC  06E8               	decf	wreg,f,c
 11846  002CBE  E2FD               	bc	u5031
 11847  002CC0  501B               	movf	___lodiv@divisor^0,w,c
 11848  002CC2  101C               	iorwf	(___lodiv@divisor+1)^0,w,c
 11849  002CC4  101D               	iorwf	(___lodiv@divisor+2)^0,w,c
 11850  002CC6  101E               	iorwf	(___lodiv@divisor+3)^0,w,c
 11851  002CC8  101F               	iorwf	(___lodiv@divisor+4)^0,w,c
 11852  002CCA  1020               	iorwf	(___lodiv@divisor+5)^0,w,c
 11853  002CCC  1021               	iorwf	(___lodiv@divisor+6)^0,w,c
 11854  002CCE  1022               	iorwf	(___lodiv@divisor+7)^0,w,c
 11855  002CD0  B4D8               	btfsc	status,2,c
 11856  002CD2  EF6D  F016         	goto	u5041
 11857  002CD6  EF6F  F016         	goto	u5040
 11858  002CDA                     u5041:
 11859  002CDA  EFC1  F016         	goto	l1175
 11860  002CDE                     u5040:
 11861  002CDE  0E01               	movlw	1
 11862  002CE0  6E2B               	movwf	___lodiv@counter^0,c
 11863  002CE2  EF7D  F016         	goto	l5258
 11864  002CE6                     l5256:
 11865  002CE6  90D8               	bcf	status,0,c
 11866  002CE8  361B               	rlcf	___lodiv@divisor^0,f,c
 11867  002CEA  361C               	rlcf	(___lodiv@divisor+1)^0,f,c
 11868  002CEC  361D               	rlcf	(___lodiv@divisor+2)^0,f,c
 11869  002CEE  361E               	rlcf	(___lodiv@divisor+3)^0,f,c
 11870  002CF0  361F               	rlcf	(___lodiv@divisor+4)^0,f,c
 11871  002CF2  3620               	rlcf	(___lodiv@divisor+5)^0,f,c
 11872  002CF4  3621               	rlcf	(___lodiv@divisor+6)^0,f,c
 11873  002CF6  3622               	rlcf	(___lodiv@divisor+7)^0,f,c
 11874  002CF8  2A2B               	incf	___lodiv@counter^0,f,c
 11875  002CFA                     l5258:
 11876  002CFA  AE22               	btfss	(___lodiv@divisor+7)^0,7,c
 11877  002CFC  EF82  F016         	goto	u5051
 11878  002D00  EF84  F016         	goto	u5050
 11879  002D04                     u5051:
 11880  002D04  EF73  F016         	goto	l5256
 11881  002D08                     u5050:
 11882  002D08                     l5260:
 11883  002D08  90D8               	bcf	status,0,c
 11884  002D0A  3623               	rlcf	___lodiv@quotient^0,f,c
 11885  002D0C  3624               	rlcf	(___lodiv@quotient+1)^0,f,c
 11886  002D0E  3625               	rlcf	(___lodiv@quotient+2)^0,f,c
 11887  002D10  3626               	rlcf	(___lodiv@quotient+3)^0,f,c
 11888  002D12  3627               	rlcf	(___lodiv@quotient+4)^0,f,c
 11889  002D14  3628               	rlcf	(___lodiv@quotient+5)^0,f,c
 11890  002D16  3629               	rlcf	(___lodiv@quotient+6)^0,f,c
 11891  002D18  362A               	rlcf	(___lodiv@quotient+7)^0,f,c
 11892  002D1A  501B               	movf	___lodiv@divisor^0,w,c
 11893  002D1C  5C13               	subwf	___lodiv@dividend^0,w,c
 11894  002D1E  501C               	movf	(___lodiv@divisor+1)^0,w,c
 11895  002D20  5814               	subwfb	(___lodiv@dividend+1)^0,w,c
 11896  002D22  501D               	movf	(___lodiv@divisor+2)^0,w,c
 11897  002D24  5815               	subwfb	(___lodiv@dividend+2)^0,w,c
 11898  002D26  501E               	movf	(___lodiv@divisor+3)^0,w,c
 11899  002D28  5816               	subwfb	(___lodiv@dividend+3)^0,w,c
 11900  002D2A  501F               	movf	(___lodiv@divisor+4)^0,w,c
 11901  002D2C  5817               	subwfb	(___lodiv@dividend+4)^0,w,c
 11902  002D2E  5020               	movf	(___lodiv@divisor+5)^0,w,c
 11903  002D30  5818               	subwfb	(___lodiv@dividend+5)^0,w,c
 11904  002D32  5021               	movf	(___lodiv@divisor+6)^0,w,c
 11905  002D34  5819               	subwfb	(___lodiv@dividend+6)^0,w,c
 11906  002D36  5022               	movf	(___lodiv@divisor+7)^0,w,c
 11907  002D38  581A               	subwfb	(___lodiv@dividend+7)^0,w,c
 11908  002D3A  A0D8               	btfss	status,0,c
 11909  002D3C  EFA2  F016         	goto	u5061
 11910  002D40  EFA4  F016         	goto	u5060
 11911  002D44                     u5061:
 11912  002D44  EFB5  F016         	goto	l5268
 11913  002D48                     u5060:
 11914  002D48  501B               	movf	___lodiv@divisor^0,w,c
 11915  002D4A  5E13               	subwf	___lodiv@dividend^0,f,c
 11916  002D4C  501C               	movf	(___lodiv@divisor+1)^0,w,c
 11917  002D4E  5A14               	subwfb	(___lodiv@dividend+1)^0,f,c
 11918  002D50  501D               	movf	(___lodiv@divisor+2)^0,w,c
 11919  002D52  5A15               	subwfb	(___lodiv@dividend+2)^0,f,c
 11920  002D54  501E               	movf	(___lodiv@divisor+3)^0,w,c
 11921  002D56  5A16               	subwfb	(___lodiv@dividend+3)^0,f,c
 11922  002D58  501F               	movf	(___lodiv@divisor+4)^0,w,c
 11923  002D5A  5A17               	subwfb	(___lodiv@dividend+4)^0,f,c
 11924  002D5C  5020               	movf	(___lodiv@divisor+5)^0,w,c
 11925  002D5E  5A18               	subwfb	(___lodiv@dividend+5)^0,f,c
 11926  002D60  5021               	movf	(___lodiv@divisor+6)^0,w,c
 11927  002D62  5A19               	subwfb	(___lodiv@dividend+6)^0,f,c
 11928  002D64  5022               	movf	(___lodiv@divisor+7)^0,w,c
 11929  002D66  5A1A               	subwfb	(___lodiv@dividend+7)^0,f,c
 11930  002D68  8023               	bsf	___lodiv@quotient^0,0,c
 11931  002D6A                     l5268:
 11932  002D6A  90D8               	bcf	status,0,c
 11933  002D6C  3222               	rrcf	(___lodiv@divisor+7)^0,f,c
 11934  002D6E  3221               	rrcf	(___lodiv@divisor+6)^0,f,c
 11935  002D70  3220               	rrcf	(___lodiv@divisor+5)^0,f,c
 11936  002D72  321F               	rrcf	(___lodiv@divisor+4)^0,f,c
 11937  002D74  321E               	rrcf	(___lodiv@divisor+3)^0,f,c
 11938  002D76  321D               	rrcf	(___lodiv@divisor+2)^0,f,c
 11939  002D78  321C               	rrcf	(___lodiv@divisor+1)^0,f,c
 11940  002D7A  321B               	rrcf	___lodiv@divisor^0,f,c
 11941  002D7C  2E2B               	decfsz	___lodiv@counter^0,f,c
 11942  002D7E  EF84  F016         	goto	l5260
 11943  002D82                     l1175:
 11944  002D82  C023  F013         	movff	___lodiv@quotient,?___lodiv
 11945  002D86  C024  F014         	movff	___lodiv@quotient+1,?___lodiv+1
 11946  002D8A  C025  F015         	movff	___lodiv@quotient+2,?___lodiv+2
 11947  002D8E  C026  F016         	movff	___lodiv@quotient+3,?___lodiv+3
 11948  002D92  C027  F017         	movff	___lodiv@quotient+4,?___lodiv+4
 11949  002D96  C028  F018         	movff	___lodiv@quotient+5,?___lodiv+5
 11950  002D9A  C029  F019         	movff	___lodiv@quotient+6,?___lodiv+6
 11951  002D9E  C02A  F01A         	movff	___lodiv@quotient+7,?___lodiv+7
 11952  002DA2  0012               	return		;funcret
 11953  002DA4                     __end_of___lodiv:
 11954                           	callstack 0
 11955                           
 11956 ;; *************** function _dtoa *****************
 11957 ;; Defined at:
 11958 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
 11961 ;;		 -> NULL(0), 
 11962 ;;  d               8   49[COMRAM] long long 
 11963 ;; Auto vars:     Size  Location     Type
 11964 ;;  n               8   16[BANK0 ] long long 
 11965 ;;  i               2   24[BANK0 ] int 
 11966 ;;  s               2   14[BANK0 ] int 
 11967 ;;  w               2   12[BANK0 ] int 
 11968 ;;  p               2   10[BANK0 ] int 
 11969 ;; Return value:  Size  Location     Type
 11970 ;;                  2   47[COMRAM] int 
 11971 ;; Registers used:
 11972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11973 ;; Tracked objects:
 11974 ;;		On entry : 0/0
 11975 ;;		On exit  : 0/0
 11976 ;;		Unchanged: 0/0
 11977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11978 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11979 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11980 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11981 ;;      Totals:        10      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11982 ;;Total ram usage:       36 bytes
 11983 ;; Hardware stack levels used:    1
 11984 ;; Hardware stack levels required when called:    9
 11985 ;; This function calls:
 11986 ;;		___aodiv
 11987 ;;		___aomod
 11988 ;;		_abs
 11989 ;;		_pad
 11990 ;; This function is called by:
 11991 ;;		_vfpfcnvrt
 11992 ;; This function uses a non-reentrant model
 11993 ;;
 11994                           
 11995                           	psect	text38
 11996  001B14                     __ptext38:
 11997                           	callstack 0
 11998  001B14                     _dtoa:
 11999                           	callstack 18
 12000  001B14                     
 12001                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12002  001B14  C032  F070         	movff	dtoa@d,dtoa@n
 12003  001B18  C033  F071         	movff	dtoa@d+1,dtoa@n+1
 12004  001B1C  C034  F072         	movff	dtoa@d+2,dtoa@n+2
 12005  001B20  C035  F073         	movff	dtoa@d+3,dtoa@n+3
 12006  001B24  C036  F074         	movff	dtoa@d+4,dtoa@n+4
 12007  001B28  C037  F075         	movff	dtoa@d+5,dtoa@n+5
 12008  001B2C  C038  F076         	movff	dtoa@d+6,dtoa@n+6
 12009  001B30  C039  F077         	movff	dtoa@d+7,dtoa@n+7
 12010  001B34                     
 12011                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12012  001B34  0100               	movlb	0	; () banked
 12013  001B36  BF77               	btfsc	(dtoa@n+7)& (0+255),7,b
 12014  001B38  EFA0  F00D         	goto	u5311
 12015  001B3C  EFA3  F00D         	goto	u5310
 12016  001B40                     u5311:
 12017  001B40  0E01               	movlw	1
 12018  001B42  EFA4  F00D         	goto	u5320
 12019  001B46                     u5310:
 12020  001B46  0E00               	movlw	0
 12021  001B48                     u5320:
 12022  001B48  6F6E               	movwf	dtoa@s& (0+255),b
 12023  001B4A  6B6F               	clrf	(dtoa@s+1)& (0+255),b
 12024                           
 12025                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12026  001B4C  516E               	movf	dtoa@s& (0+255),w,b
 12027  001B4E  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 12028  001B50  B4D8               	btfsc	status,2,c
 12029  001B52  EFAD  F00D         	goto	u5331
 12030  001B56  EFAF  F00D         	goto	u5330
 12031  001B5A                     u5331:
 12032  001B5A  EFBF  F00D         	goto	l5382
 12033  001B5E                     u5330:
 12034  001B5E                     
 12035                           ; BSR set to: 0
 12036                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12037  001B5E  1F77               	comf	(dtoa@n+7)& (0+255),f,b
 12038  001B60  1F76               	comf	(dtoa@n+6)& (0+255),f,b
 12039  001B62  1F75               	comf	(dtoa@n+5)& (0+255),f,b
 12040  001B64  1F74               	comf	(dtoa@n+4)& (0+255),f,b
 12041  001B66  1F73               	comf	(dtoa@n+3)& (0+255),f,b
 12042  001B68  1F72               	comf	(dtoa@n+2)& (0+255),f,b
 12043  001B6A  1F71               	comf	(dtoa@n+1)& (0+255),f,b
 12044  001B6C  6D70               	negf	dtoa@n& (0+255),b
 12045  001B6E  0E00               	movlw	0
 12046  001B70  2371               	addwfc	(dtoa@n+1)& (0+255),f,b
 12047  001B72  2372               	addwfc	(dtoa@n+2)& (0+255),f,b
 12048  001B74  2373               	addwfc	(dtoa@n+3)& (0+255),f,b
 12049  001B76  2374               	addwfc	(dtoa@n+4)& (0+255),f,b
 12050  001B78  2375               	addwfc	(dtoa@n+5)& (0+255),f,b
 12051  001B7A  2376               	addwfc	(dtoa@n+6)& (0+255),f,b
 12052  001B7C  2377               	addwfc	(dtoa@n+7)& (0+255),f,b
 12053  001B7E                     l5382:
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12057  001B7E  BE3E               	btfsc	(_prec+1)^0,7,c
 12058  001B80  EFC4  F00D         	goto	u5341
 12059  001B84  EFC6  F00D         	goto	u5340
 12060  001B88                     u5341:
 12061  001B88  EFC7  F00D         	goto	l5386
 12062  001B8C                     u5340:
 12063  001B8C                     
 12064                           ; BSR set to: 0
 12065                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12066  001B8C  923F               	bcf	_flags^0,1,c
 12067  001B8E                     l5386:
 12068                           
 12069                           ; BSR set to: 0
 12070                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12071  001B8E  BE3E               	btfsc	(_prec+1)^0,7,c
 12072  001B90  EFD4  F00D         	goto	u5350
 12073  001B94  503E               	movf	(_prec+1)^0,w,c
 12074  001B96  E106               	bnz	u5351
 12075  001B98  043D               	decf	_prec^0,w,c
 12076  001B9A  B0D8               	btfsc	status,0,c
 12077  001B9C  EFD2  F00D         	goto	u5351
 12078  001BA0  EFD4  F00D         	goto	u5350
 12079  001BA4                     u5351:
 12080  001BA4  EFDA  F00D         	goto	l1479
 12081  001BA8                     u5350:
 12082  001BA8                     
 12083                           ; BSR set to: 0
 12084  001BA8  0E00               	movlw	0
 12085  001BAA  6F6B               	movwf	(dtoa@p+1)& (0+255),b
 12086  001BAC  0E01               	movlw	1
 12087  001BAE  6F6A               	movwf	dtoa@p& (0+255),b
 12088  001BB0  EFDE  F00D         	goto	l1481
 12089  001BB4                     l1479:
 12090                           
 12091                           ; BSR set to: 0
 12092  001BB4  C03D  F06A         	movff	_prec,dtoa@p
 12093  001BB8  C03E  F06B         	movff	_prec+1,dtoa@p+1
 12094  001BBC                     l1481:
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12098  001BBC  C03B  F06C         	movff	_width,dtoa@w
 12099  001BC0  C03C  F06D         	movff	_width+1,dtoa@w+1
 12100  001BC4                     
 12101                           ; BSR set to: 0
 12102                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12103  001BC4  516E               	movf	dtoa@s& (0+255),w,b
 12104  001BC6  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 12105  001BC8  A4D8               	btfss	status,2,c
 12106  001BCA  EFE9  F00D         	goto	u5361
 12107  001BCE  EFEB  F00D         	goto	u5360
 12108  001BD2                     u5361:
 12109  001BD2  EFF2  F00D         	goto	l5394
 12110  001BD6                     u5360:
 12111  001BD6                     
 12112                           ; BSR set to: 0
 12113  001BD6  A43F               	btfss	_flags^0,2,c
 12114  001BD8  EFF0  F00D         	goto	u5371
 12115  001BDC  EFF2  F00D         	goto	u5370
 12116  001BE0                     u5371:
 12117  001BE0  EFF5  F00D         	goto	l5396
 12118  001BE4                     u5370:
 12119  001BE4                     l5394:
 12120                           
 12121                           ; BSR set to: 0
 12122                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
 12123  001BE4  076C               	decf	dtoa@w& (0+255),f,b
 12124  001BE6  A0D8               	btfss	status,0,c
 12125  001BE8  076D               	decf	(dtoa@w+1)& (0+255),f,b
 12126  001BEA                     l5396:
 12127                           
 12128                           ; BSR set to: 0
 12129                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12130  001BEA  0E00               	movlw	0
 12131  001BEC  6F79               	movwf	(dtoa@i+1)& (0+255),b
 12132  001BEE  0E1F               	movlw	31
 12133  001BF0  6F78               	movwf	dtoa@i& (0+255),b
 12134  001BF2                     
 12135                           ; BSR set to: 0
 12136                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12137  001BF2  0E00               	movlw	0
 12138  001BF4  0101               	movlb	1	; () banked
 12139  001BF6  6FAD               	movwf	(_dbuf+31)& (0+255),b
 12140                           
 12141                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12142  001BF8  EF7B  F00E         	goto	l5410
 12143  001BFC                     l5400:
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
 12147  001BFC  0778               	decf	dtoa@i& (0+255),f,b
 12148  001BFE  A0D8               	btfss	status,0,c
 12149  001C00  0779               	decf	(dtoa@i+1)& (0+255),f,b
 12150  001C02                     
 12151                           ; BSR set to: 0
 12152                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12153  001C02  0E8E               	movlw	low _dbuf
 12154  001C04  2578               	addwf	dtoa@i& (0+255),w,b
 12155  001C06  6ED9               	movwf	fsr2l,c
 12156  001C08  0E01               	movlw	high _dbuf
 12157  001C0A  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 12158  001C0C  6EDA               	movwf	fsr2h,c
 12159  001C0E  C070  F013         	movff	dtoa@n,___aomod@dividend
 12160  001C12  C071  F014         	movff	dtoa@n+1,___aomod@dividend+1
 12161  001C16  C072  F015         	movff	dtoa@n+2,___aomod@dividend+2
 12162  001C1A  C073  F016         	movff	dtoa@n+3,___aomod@dividend+3
 12163  001C1E  C074  F017         	movff	dtoa@n+4,___aomod@dividend+4
 12164  001C22  C075  F018         	movff	dtoa@n+5,___aomod@dividend+5
 12165  001C26  C076  F019         	movff	dtoa@n+6,___aomod@dividend+6
 12166  001C2A  C077  F01A         	movff	dtoa@n+7,___aomod@dividend+7
 12167  001C2E  0E0A               	movlw	10
 12168  001C30  6E1B               	movwf	___aomod@divisor^0,c
 12169  001C32  0E00               	movlw	0
 12170  001C34  6E1C               	movwf	(___aomod@divisor+1)^0,c
 12171  001C36  0E00               	movlw	0
 12172  001C38  6E1D               	movwf	(___aomod@divisor+2)^0,c
 12173  001C3A  0E00               	movlw	0
 12174  001C3C  6E1E               	movwf	(___aomod@divisor+3)^0,c
 12175  001C3E  0E00               	movlw	0
 12176  001C40  6E1F               	movwf	(___aomod@divisor+4)^0,c
 12177  001C42  0E00               	movlw	0
 12178  001C44  6E20               	movwf	(___aomod@divisor+5)^0,c
 12179  001C46  0E00               	movlw	0
 12180  001C48  6E21               	movwf	(___aomod@divisor+6)^0,c
 12181  001C4A  0E00               	movlw	0
 12182  001C4C  6E22               	movwf	(___aomod@divisor+7)^0,c
 12183  001C4E  ECA8  F015         	call	___aomod	;wreg free
 12184  001C52  C013  F060         	movff	?___aomod,??_dtoa
 12185  001C56  C014  F061         	movff	?___aomod+1,??_dtoa+1
 12186  001C5A  C015  F062         	movff	?___aomod+2,??_dtoa+2
 12187  001C5E  C016  F063         	movff	?___aomod+3,??_dtoa+3
 12188  001C62  C017  F064         	movff	?___aomod+4,??_dtoa+4
 12189  001C66  C018  F065         	movff	?___aomod+5,??_dtoa+5
 12190  001C6A  C019  F066         	movff	?___aomod+6,??_dtoa+6
 12191  001C6E  C01A  F067         	movff	?___aomod+7,??_dtoa+7
 12192  001C72  C060  F025         	movff	??_dtoa,abs@a
 12193  001C76  C062  F026         	movff	??_dtoa+2,abs@a+1
 12194  001C7A  EC7C  F01A         	call	_abs	;wreg free
 12195  001C7E  5025               	movf	?_abs^0,w,c
 12196  001C80  0F30               	addlw	48
 12197  001C82  6EDF               	movwf	indf2,c
 12198  001C84                     
 12199                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
 12200  001C84  0100               	movlb	0	; () banked
 12201  001C86  076A               	decf	dtoa@p& (0+255),f,b
 12202  001C88  A0D8               	btfss	status,0,c
 12203  001C8A  076B               	decf	(dtoa@p+1)& (0+255),f,b
 12204  001C8C                     
 12205                           ; BSR set to: 0
 12206                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
 12207  001C8C  076C               	decf	dtoa@w& (0+255),f,b
 12208  001C8E  A0D8               	btfss	status,0,c
 12209  001C90  076D               	decf	(dtoa@w+1)& (0+255),f,b
 12210  001C92                     
 12211                           ; BSR set to: 0
 12212                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12213  001C92  C070  F013         	movff	dtoa@n,___aodiv@dividend
 12214  001C96  C071  F014         	movff	dtoa@n+1,___aodiv@dividend+1
 12215  001C9A  C072  F015         	movff	dtoa@n+2,___aodiv@dividend+2
 12216  001C9E  C073  F016         	movff	dtoa@n+3,___aodiv@dividend+3
 12217  001CA2  C074  F017         	movff	dtoa@n+4,___aodiv@dividend+4
 12218  001CA6  C075  F018         	movff	dtoa@n+5,___aodiv@dividend+5
 12219  001CAA  C076  F019         	movff	dtoa@n+6,___aodiv@dividend+6
 12220  001CAE  C077  F01A         	movff	dtoa@n+7,___aodiv@dividend+7
 12221  001CB2  0E0A               	movlw	10
 12222  001CB4  6E1B               	movwf	___aodiv@divisor^0,c
 12223  001CB6  0E00               	movlw	0
 12224  001CB8  6E1C               	movwf	(___aodiv@divisor+1)^0,c
 12225  001CBA  0E00               	movlw	0
 12226  001CBC  6E1D               	movwf	(___aodiv@divisor+2)^0,c
 12227  001CBE  0E00               	movlw	0
 12228  001CC0  6E1E               	movwf	(___aodiv@divisor+3)^0,c
 12229  001CC2  0E00               	movlw	0
 12230  001CC4  6E1F               	movwf	(___aodiv@divisor+4)^0,c
 12231  001CC6  0E00               	movlw	0
 12232  001CC8  6E20               	movwf	(___aodiv@divisor+5)^0,c
 12233  001CCA  0E00               	movlw	0
 12234  001CCC  6E21               	movwf	(___aodiv@divisor+6)^0,c
 12235  001CCE  0E00               	movlw	0
 12236  001CD0  6E22               	movwf	(___aodiv@divisor+7)^0,c
 12237  001CD2  EC28  F014         	call	___aodiv	;wreg free
 12238  001CD6  C013  F070         	movff	?___aodiv,dtoa@n
 12239  001CDA  C014  F071         	movff	?___aodiv+1,dtoa@n+1
 12240  001CDE  C015  F072         	movff	?___aodiv+2,dtoa@n+2
 12241  001CE2  C016  F073         	movff	?___aodiv+3,dtoa@n+3
 12242  001CE6  C017  F074         	movff	?___aodiv+4,dtoa@n+4
 12243  001CEA  C018  F075         	movff	?___aodiv+5,dtoa@n+5
 12244  001CEE  C019  F076         	movff	?___aodiv+6,dtoa@n+6
 12245  001CF2  C01A  F077         	movff	?___aodiv+7,dtoa@n+7
 12246  001CF6                     l5410:
 12247                           
 12248                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12249  001CF6  0100               	movlb	0	; () banked
 12250  001CF8  BF79               	btfsc	(dtoa@i+1)& (0+255),7,b
 12251  001CFA  EF87  F00E         	goto	u5381
 12252  001CFE  5179               	movf	(dtoa@i+1)& (0+255),w,b
 12253  001D00  E108               	bnz	u5380
 12254  001D02  0578               	decf	dtoa@i& (0+255),w,b
 12255  001D04  A0D8               	btfss	status,0,c
 12256  001D06  EF87  F00E         	goto	u5381
 12257  001D0A  EF89  F00E         	goto	u5380
 12258  001D0E                     u5381:
 12259  001D0E  EFB9  F00E         	goto	l5420
 12260  001D12                     u5380:
 12261  001D12                     
 12262                           ; BSR set to: 0
 12263  001D12  5170               	movf	dtoa@n& (0+255),w,b
 12264  001D14  1171               	iorwf	(dtoa@n+1)& (0+255),w,b
 12265  001D16  1172               	iorwf	(dtoa@n+2)& (0+255),w,b
 12266  001D18  1173               	iorwf	(dtoa@n+3)& (0+255),w,b
 12267  001D1A  1174               	iorwf	(dtoa@n+4)& (0+255),w,b
 12268  001D1C  1175               	iorwf	(dtoa@n+5)& (0+255),w,b
 12269  001D1E  1176               	iorwf	(dtoa@n+6)& (0+255),w,b
 12270  001D20  1177               	iorwf	(dtoa@n+7)& (0+255),w,b
 12271  001D22  A4D8               	btfss	status,2,c
 12272  001D24  EF96  F00E         	goto	u5391
 12273  001D28  EF98  F00E         	goto	u5390
 12274  001D2C                     u5391:
 12275  001D2C  EFFE  F00D         	goto	l5400
 12276  001D30                     u5390:
 12277  001D30                     
 12278                           ; BSR set to: 0
 12279  001D30  BF6B               	btfsc	(dtoa@p+1)& (0+255),7,b
 12280  001D32  EFA5  F00E         	goto	u5400
 12281  001D36  516B               	movf	(dtoa@p+1)& (0+255),w,b
 12282  001D38  E106               	bnz	u5401
 12283  001D3A  056A               	decf	dtoa@p& (0+255),w,b
 12284  001D3C  B0D8               	btfsc	status,0,c
 12285  001D3E  EFA3  F00E         	goto	u5401
 12286  001D42  EFA5  F00E         	goto	u5400
 12287  001D46                     u5401:
 12288  001D46  EFFE  F00D         	goto	l5400
 12289  001D4A                     u5400:
 12290  001D4A                     
 12291                           ; BSR set to: 0
 12292  001D4A  BF6D               	btfsc	(dtoa@w+1)& (0+255),7,b
 12293  001D4C  EFB0  F00E         	goto	u5411
 12294  001D50  516D               	movf	(dtoa@w+1)& (0+255),w,b
 12295  001D52  E108               	bnz	u5410
 12296  001D54  056C               	decf	dtoa@w& (0+255),w,b
 12297  001D56  A0D8               	btfss	status,0,c
 12298  001D58  EFB0  F00E         	goto	u5411
 12299  001D5C  EFB2  F00E         	goto	u5410
 12300  001D60                     u5411:
 12301  001D60  EFB9  F00E         	goto	l5420
 12302  001D64                     u5410:
 12303  001D64                     
 12304                           ; BSR set to: 0
 12305  001D64  B23F               	btfsc	_flags^0,1,c
 12306  001D66  EFB7  F00E         	goto	u5421
 12307  001D6A  EFB9  F00E         	goto	u5420
 12308  001D6E                     u5421:
 12309  001D6E  EFFE  F00D         	goto	l5400
 12310  001D72                     u5420:
 12311  001D72                     l5420:
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12315  001D72  516E               	movf	dtoa@s& (0+255),w,b
 12316  001D74  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 12317  001D76  A4D8               	btfss	status,2,c
 12318  001D78  EFC0  F00E         	goto	u5431
 12319  001D7C  EFC2  F00E         	goto	u5430
 12320  001D80                     u5431:
 12321  001D80  EFC9  F00E         	goto	l5424
 12322  001D84                     u5430:
 12323  001D84                     
 12324                           ; BSR set to: 0
 12325  001D84  A43F               	btfss	_flags^0,2,c
 12326  001D86  EFC7  F00E         	goto	u5441
 12327  001D8A  EFC9  F00E         	goto	u5440
 12328  001D8E                     u5441:
 12329  001D8E  EFE7  F00E         	goto	l5434
 12330  001D92                     u5440:
 12331  001D92                     l5424:
 12332                           
 12333                           ; BSR set to: 0
 12334                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
 12335  001D92  0778               	decf	dtoa@i& (0+255),f,b
 12336  001D94  A0D8               	btfss	status,0,c
 12337  001D96  0779               	decf	(dtoa@i+1)& (0+255),f,b
 12338  001D98                     
 12339                           ; BSR set to: 0
 12340                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12341  001D98  516E               	movf	dtoa@s& (0+255),w,b
 12342  001D9A  116F               	iorwf	(dtoa@s+1)& (0+255),w,b
 12343  001D9C  A4D8               	btfss	status,2,c
 12344  001D9E  EFD3  F00E         	goto	u5451
 12345  001DA2  EFD5  F00E         	goto	u5450
 12346  001DA6                     u5451:
 12347  001DA6  EFDB  F00E         	goto	l5430
 12348  001DAA                     u5450:
 12349  001DAA                     
 12350                           ; BSR set to: 0
 12351  001DAA  0E00               	movlw	0
 12352  001DAC  6F69               	movwf	(_dtoa$1990+1)& (0+255),b
 12353  001DAE  0E2B               	movlw	43
 12354  001DB0  6F68               	movwf	_dtoa$1990& (0+255),b
 12355  001DB2  EFDF  F00E         	goto	l5432
 12356  001DB6                     l5430:
 12357                           
 12358                           ; BSR set to: 0
 12359  001DB6  0E00               	movlw	0
 12360  001DB8  6F69               	movwf	(_dtoa$1990+1)& (0+255),b
 12361  001DBA  0E2D               	movlw	45
 12362  001DBC  6F68               	movwf	_dtoa$1990& (0+255),b
 12363  001DBE                     l5432:
 12364                           
 12365                           ; BSR set to: 0
 12366  001DBE  0E8E               	movlw	low _dbuf
 12367  001DC0  2578               	addwf	dtoa@i& (0+255),w,b
 12368  001DC2  6ED9               	movwf	fsr2l,c
 12369  001DC4  0E01               	movlw	high _dbuf
 12370  001DC6  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 12371  001DC8  6EDA               	movwf	fsr2h,c
 12372  001DCA  C068  FFDF         	movff	_dtoa$1990,indf2
 12373  001DCE                     l5434:
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12377  001DCE  C030  F025         	movff	dtoa@fp,pad@fp
 12378  001DD2  C031  F026         	movff	dtoa@fp+1,pad@fp+1
 12379  001DD6  0E8E               	movlw	low _dbuf
 12380  001DD8  2578               	addwf	dtoa@i& (0+255),w,b
 12381  001DDA  6E27               	movwf	pad@buf^0,c
 12382  001DDC  0E01               	movlw	high _dbuf
 12383  001DDE  2179               	addwfc	(dtoa@i+1)& (0+255),w,b
 12384  001DE0  6E28               	movwf	(pad@buf+1)^0,c
 12385  001DE2  C06C  F029         	movff	dtoa@w,pad@p
 12386  001DE6  C06D  F02A         	movff	dtoa@w+1,pad@p+1
 12387  001DEA  ECA4  F017         	call	_pad	;wreg free
 12388  001DEE  C025  F030         	movff	?_pad,?_dtoa
 12389  001DF2  C026  F031         	movff	?_pad+1,?_dtoa+1
 12390  001DF6  0012               	return		;funcret
 12391  001DF8                     __end_of_dtoa:
 12392                           	callstack 0
 12393                           
 12394 ;; *************** function _pad *****************
 12395 ;; Defined at:
 12396 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
 12399 ;;		 -> NULL(0), 
 12400 ;;  buf             2   38[COMRAM] PTR unsigned char 
 12401 ;;		 -> dbuf(32), 
 12402 ;;  p               2   40[COMRAM] int 
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;  w               2   45[COMRAM] int 
 12405 ;;  i               2   43[COMRAM] int 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  2   36[COMRAM] int 
 12408 ;; Registers used:
 12409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/0
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12415 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12416 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12418 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12419 ;;Total ram usage:       11 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    8
 12422 ;; This function calls:
 12423 ;;		_fputc
 12424 ;;		_fputs
 12425 ;;		_strlen
 12426 ;; This function is called by:
 12427 ;;		_dtoa
 12428 ;;		_utoa
 12429 ;;		_xtoa
 12430 ;; This function uses a non-reentrant model
 12431 ;;
 12432                           
 12433                           	psect	text39
 12434  002F48                     __ptext39:
 12435                           	callstack 0
 12436  002F48                     _pad:
 12437                           	callstack 18
 12438  002F48                     
 12439                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12440  002F48  A03F               	btfss	_flags^0,0,c
 12441  002F4A  EFA9  F017         	goto	u5101
 12442  002F4E  EFAB  F017         	goto	u5100
 12443  002F52                     u5101:
 12444  002F52  EFB5  F017         	goto	l5292
 12445  002F56                     u5100:
 12446  002F56                     
 12447                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12448  002F56  C027  F01E         	movff	pad@buf,fputs@s
 12449  002F5A  C028  F01F         	movff	pad@buf+1,fputs@s+1
 12450  002F5E  C025  F020         	movff	pad@fp,fputs@fp
 12451  002F62  C026  F021         	movff	pad@fp+1,fputs@fp+1
 12452  002F66  EC5A  F01A         	call	_fputs	;wreg free
 12453  002F6A                     l5292:
 12454                           
 12455                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12456  002F6A  BE2A               	btfsc	(pad@p+1)^0,7,c
 12457  002F6C  EFBA  F017         	goto	u5111
 12458  002F70  EFBC  F017         	goto	u5110
 12459  002F74                     u5111:
 12460  002F74  EFC2  F017         	goto	l5296
 12461  002F78                     u5110:
 12462  002F78  C029  F02E         	movff	pad@p,pad@w
 12463  002F7C  C02A  F02F         	movff	pad@p+1,pad@w+1
 12464  002F80  EFC6  F017         	goto	l1452
 12465  002F84                     l5296:
 12466  002F84  0E00               	movlw	0
 12467  002F86  6E2F               	movwf	(pad@w+1)^0,c
 12468  002F88  0E00               	movlw	0
 12469  002F8A  6E2E               	movwf	pad@w^0,c
 12470  002F8C                     l1452:
 12471                           
 12472                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12473  002F8C  0E00               	movlw	0
 12474  002F8E  6E2D               	movwf	(pad@i+1)^0,c
 12475  002F90  0E00               	movlw	0
 12476  002F92  6E2C               	movwf	pad@i^0,c
 12477                           
 12478                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12479  002F94  EFD8  F017         	goto	l5302
 12480  002F98                     l5298:
 12481                           
 12482                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12483  002F98  0E00               	movlw	0
 12484  002F9A  6E16               	movwf	(fputc@c+1)^0,c
 12485  002F9C  0E20               	movlw	32
 12486  002F9E  6E15               	movwf	fputc@c^0,c
 12487  002FA0  C025  F017         	movff	pad@fp,fputc@fp
 12488  002FA4  C026  F018         	movff	pad@fp+1,fputc@fp+1
 12489  002FA8  ECA8  F018         	call	_fputc	;wreg free
 12490  002FAC                     
 12491                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12492  002FAC  4A2C               	infsnz	pad@i^0,f,c
 12493  002FAE  2A2D               	incf	(pad@i+1)^0,f,c
 12494  002FB0                     l5302:
 12495                           
 12496                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12497  002FB0  502E               	movf	pad@w^0,w,c
 12498  002FB2  5C2C               	subwf	pad@i^0,w,c
 12499  002FB4  502D               	movf	(pad@i+1)^0,w,c
 12500  002FB6  0A80               	xorlw	128
 12501  002FB8  6E2B               	movwf	??_pad^0,c
 12502  002FBA  502F               	movf	(pad@w+1)^0,w,c
 12503  002FBC  0A80               	xorlw	128
 12504  002FBE  582B               	subwfb	??_pad^0,w,c
 12505  002FC0  A0D8               	btfss	status,0,c
 12506  002FC2  EFE5  F017         	goto	u5121
 12507  002FC6  EFE7  F017         	goto	u5120
 12508  002FCA                     u5121:
 12509  002FCA  EFCC  F017         	goto	l5298
 12510  002FCE                     u5120:
 12511  002FCE                     
 12512                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12513  002FCE  B03F               	btfsc	_flags^0,0,c
 12514  002FD0  EFEC  F017         	goto	u5131
 12515  002FD4  EFEE  F017         	goto	u5130
 12516  002FD8                     u5131:
 12517  002FD8  EFF8  F017         	goto	l5306
 12518  002FDC                     u5130:
 12519  002FDC                     
 12520                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12521  002FDC  C027  F01E         	movff	pad@buf,fputs@s
 12522  002FE0  C028  F01F         	movff	pad@buf+1,fputs@s+1
 12523  002FE4  C025  F020         	movff	pad@fp,fputs@fp
 12524  002FE8  C026  F021         	movff	pad@fp+1,fputs@fp+1
 12525  002FEC  EC5A  F01A         	call	_fputs	;wreg free
 12526  002FF0                     l5306:
 12527                           
 12528                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12529  002FF0  C027  F013         	movff	pad@buf,strlen@s
 12530  002FF4  C028  F014         	movff	pad@buf+1,strlen@s+1
 12531  002FF8  EC82  F01B         	call	_strlen	;wreg free
 12532  002FFC  502E               	movf	pad@w^0,w,c
 12533  002FFE  2413               	addwf	?_strlen^0,w,c
 12534  003000  6E25               	movwf	?_pad^0,c
 12535  003002  502F               	movf	(pad@w+1)^0,w,c
 12536  003004  2014               	addwfc	(?_strlen+1)^0,w,c
 12537  003006  6E26               	movwf	(?_pad+1)^0,c
 12538  003008  0012               	return		;funcret
 12539  00300A                     __end_of_pad:
 12540                           	callstack 0
 12541                           
 12542 ;; *************** function _strlen *****************
 12543 ;; Defined at:
 12544 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
 12545 ;; Parameters:    Size  Location     Type
 12546 ;;  s               2   18[COMRAM] PTR const unsigned char 
 12547 ;;		 -> dbuf(32), 
 12548 ;; Auto vars:     Size  Location     Type
 12549 ;;  a               2   20[COMRAM] PTR const unsigned char 
 12550 ;;		 -> dbuf(32), 
 12551 ;; Return value:  Size  Location     Type
 12552 ;;                  2   18[COMRAM] unsigned int 
 12553 ;; Registers used:
 12554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12555 ;; Tracked objects:
 12556 ;;		On entry : 0/0
 12557 ;;		On exit  : 0/0
 12558 ;;		Unchanged: 0/0
 12559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12560 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12563 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;Total ram usage:        4 bytes
 12565 ;; Hardware stack levels used:    1
 12566 ;; Hardware stack levels required when called:    4
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		_pad
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           	psect	text40
 12575  003704                     __ptext40:
 12576                           	callstack 0
 12577  003704                     _strlen:
 12578                           	callstack 21
 12579  003704  C013  F015         	movff	strlen@s,strlen@a
 12580  003708  C014  F016         	movff	strlen@s+1,strlen@a+1
 12581  00370C  EF8A  F01B         	goto	l5154
 12582  003710                     l5152:
 12583  003710  4A13               	infsnz	strlen@s^0,f,c
 12584  003712  2A14               	incf	(strlen@s+1)^0,f,c
 12585  003714                     l5154:
 12586  003714  C013  FFD9         	movff	strlen@s,fsr2l
 12587  003718  C014  FFDA         	movff	strlen@s+1,fsr2h
 12588  00371C  50DF               	movf	indf2,w,c
 12589  00371E  A4D8               	btfss	status,2,c
 12590  003720  EF94  F01B         	goto	u4871
 12591  003724  EF96  F01B         	goto	u4870
 12592  003728                     u4871:
 12593  003728  EF88  F01B         	goto	l5152
 12594  00372C                     u4870:
 12595  00372C  5015               	movf	strlen@a^0,w,c
 12596  00372E  5C13               	subwf	strlen@s^0,w,c
 12597  003730  6E13               	movwf	?_strlen^0,c
 12598  003732  5016               	movf	(strlen@a+1)^0,w,c
 12599  003734  5814               	subwfb	(strlen@s+1)^0,w,c
 12600  003736  6E14               	movwf	(?_strlen+1)^0,c
 12601  003738  0012               	return		;funcret
 12602  00373A                     __end_of_strlen:
 12603                           	callstack 0
 12604                           
 12605 ;; *************** function _fputs *****************
 12606 ;; Defined at:
 12607 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  s               2   29[COMRAM] PTR const unsigned char 
 12610 ;;		 -> dbuf(32), 
 12611 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
 12612 ;;		 -> NULL(0), 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;  i               2   34[COMRAM] int 
 12615 ;;  c               1   33[COMRAM] unsigned char 
 12616 ;; Return value:  Size  Location     Type
 12617 ;;                  2   29[COMRAM] int 
 12618 ;; Registers used:
 12619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12620 ;; Tracked objects:
 12621 ;;		On entry : 0/0
 12622 ;;		On exit  : 0/0
 12623 ;;		Unchanged: 0/0
 12624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12629 ;;Total ram usage:        7 bytes
 12630 ;; Hardware stack levels used:    1
 12631 ;; Hardware stack levels required when called:    7
 12632 ;; This function calls:
 12633 ;;		_fputc
 12634 ;; This function is called by:
 12635 ;;		_pad
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text41
 12640  0034B4                     __ptext41:
 12641                           	callstack 0
 12642  0034B4                     _fputs:
 12643                           	callstack 18
 12644  0034B4  0E00               	movlw	0
 12645  0034B6  6E24               	movwf	(fputs@i+1)^0,c
 12646  0034B8  0E00               	movlw	0
 12647  0034BA  6E23               	movwf	fputs@i^0,c
 12648  0034BC  EF6B  F01A         	goto	l5148
 12649  0034C0                     l5144:
 12650  0034C0  C022  F015         	movff	fputs@c,fputc@c
 12651  0034C4  6A16               	clrf	(fputc@c+1)^0,c
 12652  0034C6  C020  F017         	movff	fputs@fp,fputc@fp
 12653  0034CA  C021  F018         	movff	fputs@fp+1,fputc@fp+1
 12654  0034CE  ECA8  F018         	call	_fputc	;wreg free
 12655  0034D2  4A23               	infsnz	fputs@i^0,f,c
 12656  0034D4  2A24               	incf	(fputs@i+1)^0,f,c
 12657  0034D6                     l5148:
 12658  0034D6  5023               	movf	fputs@i^0,w,c
 12659  0034D8  241E               	addwf	fputs@s^0,w,c
 12660  0034DA  6ED9               	movwf	fsr2l,c
 12661  0034DC  5024               	movf	(fputs@i+1)^0,w,c
 12662  0034DE  201F               	addwfc	(fputs@s+1)^0,w,c
 12663  0034E0  6EDA               	movwf	fsr2h,c
 12664  0034E2  50DF               	movf	indf2,w,c
 12665  0034E4  6E22               	movwf	fputs@c^0,c
 12666  0034E6  5022               	movf	fputs@c^0,w,c
 12667  0034E8  A4D8               	btfss	status,2,c
 12668  0034EA  EF79  F01A         	goto	u4861
 12669  0034EE  EF7B  F01A         	goto	u4860
 12670  0034F2                     u4861:
 12671  0034F2  EF60  F01A         	goto	l5144
 12672  0034F6                     u4860:
 12673  0034F6  0012               	return		;funcret
 12674  0034F8                     __end_of_fputs:
 12675                           	callstack 0
 12676                           
 12677 ;; *************** function _abs *****************
 12678 ;; Defined at:
 12679 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
 12680 ;; Parameters:    Size  Location     Type
 12681 ;;  a               2   36[COMRAM] int 
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;		None
 12684 ;; Return value:  Size  Location     Type
 12685 ;;                  2   36[COMRAM] int 
 12686 ;; Registers used:
 12687 ;;		wreg, status,2, status,0
 12688 ;; Tracked objects:
 12689 ;;		On entry : 0/0
 12690 ;;		On exit  : 0/0
 12691 ;;		Unchanged: 0/0
 12692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12696 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12697 ;;Total ram usage:        4 bytes
 12698 ;; Hardware stack levels used:    1
 12699 ;; Hardware stack levels required when called:    4
 12700 ;; This function calls:
 12701 ;;		Nothing
 12702 ;; This function is called by:
 12703 ;;		_dtoa
 12704 ;; This function uses a non-reentrant model
 12705 ;;
 12706                           
 12707                           	psect	text42
 12708  0034F8                     __ptext42:
 12709                           	callstack 0
 12710  0034F8                     _abs:
 12711                           	callstack 22
 12712  0034F8  BE26               	btfsc	(abs@a+1)^0,7,c
 12713  0034FA  EF89  F01A         	goto	u5140
 12714  0034FE  5026               	movf	(abs@a+1)^0,w,c
 12715  003500  E106               	bnz	u5141
 12716  003502  0425               	decf	abs@a^0,w,c
 12717  003504  B0D8               	btfsc	status,0,c
 12718  003506  EF87  F01A         	goto	u5141
 12719  00350A  EF89  F01A         	goto	u5140
 12720  00350E                     u5141:
 12721  00350E  EF97  F01A         	goto	l1589
 12722  003512                     u5140:
 12723  003512  C025  F027         	movff	abs@a,??_abs
 12724  003516  C026  F028         	movff	abs@a+1,??_abs+1
 12725  00351A  1E27               	comf	??_abs^0,f,c
 12726  00351C  1E28               	comf	(??_abs+1)^0,f,c
 12727  00351E  4A27               	infsnz	??_abs^0,f,c
 12728  003520  2A28               	incf	(??_abs+1)^0,f,c
 12729  003522  C027  F025         	movff	??_abs,?_abs
 12730  003526  C028  F026         	movff	??_abs+1,?_abs+1
 12731  00352A  EF9B  F01A         	goto	l1592
 12732  00352E                     l1589:
 12733  00352E  C025  F025         	movff	abs@a,?_abs
 12734  003532  C026  F026         	movff	abs@a+1,?_abs+1
 12735  003536                     l1592:
 12736  003536  0012               	return		;funcret
 12737  003538                     __end_of_abs:
 12738                           	callstack 0
 12739                           
 12740 ;; *************** function ___aomod *****************
 12741 ;; Defined at:
 12742 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
 12743 ;; Parameters:    Size  Location     Type
 12744 ;;  dividend        8   18[COMRAM] long long 
 12745 ;;  divisor         8   26[COMRAM] long long 
 12746 ;; Auto vars:     Size  Location     Type
 12747 ;;  sign            1   35[COMRAM] unsigned char 
 12748 ;;  counter         1   34[COMRAM] unsigned char 
 12749 ;; Return value:  Size  Location     Type
 12750 ;;                  8   18[COMRAM] long long 
 12751 ;; Registers used:
 12752 ;;		wreg, status,2, status,0
 12753 ;; Tracked objects:
 12754 ;;		On entry : 0/0
 12755 ;;		On exit  : 0/0
 12756 ;;		Unchanged: 0/0
 12757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12758 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12759 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12761 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12762 ;;Total ram usage:       18 bytes
 12763 ;; Hardware stack levels used:    1
 12764 ;; Hardware stack levels required when called:    4
 12765 ;; This function calls:
 12766 ;;		Nothing
 12767 ;; This function is called by:
 12768 ;;		_dtoa
 12769 ;; This function uses a non-reentrant model
 12770 ;;
 12771                           
 12772                           	psect	text43
 12773  002B50                     __ptext43:
 12774                           	callstack 0
 12775  002B50                     ___aomod:
 12776                           	callstack 22
 12777  002B50  0E00               	movlw	0
 12778  002B52  6E24               	movwf	___aomod@sign^0,c
 12779  002B54  BE1A               	btfsc	(___aomod@dividend+7)^0,7,c
 12780  002B56  EFB1  F015         	goto	u4970
 12781  002B5A  EFAF  F015         	goto	u4971
 12782  002B5E                     u4971:
 12783  002B5E  EFC3  F015         	goto	l5222
 12784  002B62                     u4970:
 12785  002B62  1E1A               	comf	(___aomod@dividend+7)^0,f,c
 12786  002B64  1E19               	comf	(___aomod@dividend+6)^0,f,c
 12787  002B66  1E18               	comf	(___aomod@dividend+5)^0,f,c
 12788  002B68  1E17               	comf	(___aomod@dividend+4)^0,f,c
 12789  002B6A  1E16               	comf	(___aomod@dividend+3)^0,f,c
 12790  002B6C  1E15               	comf	(___aomod@dividend+2)^0,f,c
 12791  002B6E  1E14               	comf	(___aomod@dividend+1)^0,f,c
 12792  002B70  6C13               	negf	___aomod@dividend^0,c
 12793  002B72  0E00               	movlw	0
 12794  002B74  2214               	addwfc	(___aomod@dividend+1)^0,f,c
 12795  002B76  2215               	addwfc	(___aomod@dividend+2)^0,f,c
 12796  002B78  2216               	addwfc	(___aomod@dividend+3)^0,f,c
 12797  002B7A  2217               	addwfc	(___aomod@dividend+4)^0,f,c
 12798  002B7C  2218               	addwfc	(___aomod@dividend+5)^0,f,c
 12799  002B7E  2219               	addwfc	(___aomod@dividend+6)^0,f,c
 12800  002B80  221A               	addwfc	(___aomod@dividend+7)^0,f,c
 12801  002B82  0E01               	movlw	1
 12802  002B84  6E24               	movwf	___aomod@sign^0,c
 12803  002B86                     l5222:
 12804  002B86  BE22               	btfsc	(___aomod@divisor+7)^0,7,c
 12805  002B88  EFCA  F015         	goto	u4980
 12806  002B8C  EFC8  F015         	goto	u4981
 12807  002B90                     u4981:
 12808  002B90  EFDA  F015         	goto	l5226
 12809  002B94                     u4980:
 12810  002B94  1E22               	comf	(___aomod@divisor+7)^0,f,c
 12811  002B96  1E21               	comf	(___aomod@divisor+6)^0,f,c
 12812  002B98  1E20               	comf	(___aomod@divisor+5)^0,f,c
 12813  002B9A  1E1F               	comf	(___aomod@divisor+4)^0,f,c
 12814  002B9C  1E1E               	comf	(___aomod@divisor+3)^0,f,c
 12815  002B9E  1E1D               	comf	(___aomod@divisor+2)^0,f,c
 12816  002BA0  1E1C               	comf	(___aomod@divisor+1)^0,f,c
 12817  002BA2  6C1B               	negf	___aomod@divisor^0,c
 12818  002BA4  0E00               	movlw	0
 12819  002BA6  221C               	addwfc	(___aomod@divisor+1)^0,f,c
 12820  002BA8  221D               	addwfc	(___aomod@divisor+2)^0,f,c
 12821  002BAA  221E               	addwfc	(___aomod@divisor+3)^0,f,c
 12822  002BAC  221F               	addwfc	(___aomod@divisor+4)^0,f,c
 12823  002BAE  2220               	addwfc	(___aomod@divisor+5)^0,f,c
 12824  002BB0  2221               	addwfc	(___aomod@divisor+6)^0,f,c
 12825  002BB2  2222               	addwfc	(___aomod@divisor+7)^0,f,c
 12826  002BB4                     l5226:
 12827  002BB4  501B               	movf	___aomod@divisor^0,w,c
 12828  002BB6  101C               	iorwf	(___aomod@divisor+1)^0,w,c
 12829  002BB8  101D               	iorwf	(___aomod@divisor+2)^0,w,c
 12830  002BBA  101E               	iorwf	(___aomod@divisor+3)^0,w,c
 12831  002BBC  101F               	iorwf	(___aomod@divisor+4)^0,w,c
 12832  002BBE  1020               	iorwf	(___aomod@divisor+5)^0,w,c
 12833  002BC0  1021               	iorwf	(___aomod@divisor+6)^0,w,c
 12834  002BC2  1022               	iorwf	(___aomod@divisor+7)^0,w,c
 12835  002BC4  B4D8               	btfsc	status,2,c
 12836  002BC6  EFE7  F015         	goto	u4991
 12837  002BCA  EFE9  F015         	goto	u4990
 12838  002BCE                     u4991:
 12839  002BCE  EF31  F016         	goto	l5242
 12840  002BD2                     u4990:
 12841  002BD2  0E01               	movlw	1
 12842  002BD4  6E23               	movwf	___aomod@counter^0,c
 12843  002BD6  EFF7  F015         	goto	l5232
 12844  002BDA                     l5230:
 12845  002BDA  90D8               	bcf	status,0,c
 12846  002BDC  361B               	rlcf	___aomod@divisor^0,f,c
 12847  002BDE  361C               	rlcf	(___aomod@divisor+1)^0,f,c
 12848  002BE0  361D               	rlcf	(___aomod@divisor+2)^0,f,c
 12849  002BE2  361E               	rlcf	(___aomod@divisor+3)^0,f,c
 12850  002BE4  361F               	rlcf	(___aomod@divisor+4)^0,f,c
 12851  002BE6  3620               	rlcf	(___aomod@divisor+5)^0,f,c
 12852  002BE8  3621               	rlcf	(___aomod@divisor+6)^0,f,c
 12853  002BEA  3622               	rlcf	(___aomod@divisor+7)^0,f,c
 12854  002BEC  2A23               	incf	___aomod@counter^0,f,c
 12855  002BEE                     l5232:
 12856  002BEE  AE22               	btfss	(___aomod@divisor+7)^0,7,c
 12857  002BF0  EFFC  F015         	goto	u5001
 12858  002BF4  EFFE  F015         	goto	u5000
 12859  002BF8                     u5001:
 12860  002BF8  EFED  F015         	goto	l5230
 12861  002BFC                     u5000:
 12862  002BFC                     l5234:
 12863  002BFC  501B               	movf	___aomod@divisor^0,w,c
 12864  002BFE  5C13               	subwf	___aomod@dividend^0,w,c
 12865  002C00  501C               	movf	(___aomod@divisor+1)^0,w,c
 12866  002C02  5814               	subwfb	(___aomod@dividend+1)^0,w,c
 12867  002C04  501D               	movf	(___aomod@divisor+2)^0,w,c
 12868  002C06  5815               	subwfb	(___aomod@dividend+2)^0,w,c
 12869  002C08  501E               	movf	(___aomod@divisor+3)^0,w,c
 12870  002C0A  5816               	subwfb	(___aomod@dividend+3)^0,w,c
 12871  002C0C  501F               	movf	(___aomod@divisor+4)^0,w,c
 12872  002C0E  5817               	subwfb	(___aomod@dividend+4)^0,w,c
 12873  002C10  5020               	movf	(___aomod@divisor+5)^0,w,c
 12874  002C12  5818               	subwfb	(___aomod@dividend+5)^0,w,c
 12875  002C14  5021               	movf	(___aomod@divisor+6)^0,w,c
 12876  002C16  5819               	subwfb	(___aomod@dividend+6)^0,w,c
 12877  002C18  5022               	movf	(___aomod@divisor+7)^0,w,c
 12878  002C1A  581A               	subwfb	(___aomod@dividend+7)^0,w,c
 12879  002C1C  A0D8               	btfss	status,0,c
 12880  002C1E  EF13  F016         	goto	u5011
 12881  002C22  EF15  F016         	goto	u5010
 12882  002C26                     u5011:
 12883  002C26  EF25  F016         	goto	l5238
 12884  002C2A                     u5010:
 12885  002C2A  501B               	movf	___aomod@divisor^0,w,c
 12886  002C2C  5E13               	subwf	___aomod@dividend^0,f,c
 12887  002C2E  501C               	movf	(___aomod@divisor+1)^0,w,c
 12888  002C30  5A14               	subwfb	(___aomod@dividend+1)^0,f,c
 12889  002C32  501D               	movf	(___aomod@divisor+2)^0,w,c
 12890  002C34  5A15               	subwfb	(___aomod@dividend+2)^0,f,c
 12891  002C36  501E               	movf	(___aomod@divisor+3)^0,w,c
 12892  002C38  5A16               	subwfb	(___aomod@dividend+3)^0,f,c
 12893  002C3A  501F               	movf	(___aomod@divisor+4)^0,w,c
 12894  002C3C  5A17               	subwfb	(___aomod@dividend+4)^0,f,c
 12895  002C3E  5020               	movf	(___aomod@divisor+5)^0,w,c
 12896  002C40  5A18               	subwfb	(___aomod@dividend+5)^0,f,c
 12897  002C42  5021               	movf	(___aomod@divisor+6)^0,w,c
 12898  002C44  5A19               	subwfb	(___aomod@dividend+6)^0,f,c
 12899  002C46  5022               	movf	(___aomod@divisor+7)^0,w,c
 12900  002C48  5A1A               	subwfb	(___aomod@dividend+7)^0,f,c
 12901  002C4A                     l5238:
 12902  002C4A  90D8               	bcf	status,0,c
 12903  002C4C  3222               	rrcf	(___aomod@divisor+7)^0,f,c
 12904  002C4E  3221               	rrcf	(___aomod@divisor+6)^0,f,c
 12905  002C50  3220               	rrcf	(___aomod@divisor+5)^0,f,c
 12906  002C52  321F               	rrcf	(___aomod@divisor+4)^0,f,c
 12907  002C54  321E               	rrcf	(___aomod@divisor+3)^0,f,c
 12908  002C56  321D               	rrcf	(___aomod@divisor+2)^0,f,c
 12909  002C58  321C               	rrcf	(___aomod@divisor+1)^0,f,c
 12910  002C5A  321B               	rrcf	___aomod@divisor^0,f,c
 12911  002C5C  2E23               	decfsz	___aomod@counter^0,f,c
 12912  002C5E  EFFE  F015         	goto	l5234
 12913  002C62                     l5242:
 12914  002C62  5024               	movf	___aomod@sign^0,w,c
 12915  002C64  B4D8               	btfsc	status,2,c
 12916  002C66  EF37  F016         	goto	u5021
 12917  002C6A  EF39  F016         	goto	u5020
 12918  002C6E                     u5021:
 12919  002C6E  EF49  F016         	goto	l5246
 12920  002C72                     u5020:
 12921  002C72  1E1A               	comf	(___aomod@dividend+7)^0,f,c
 12922  002C74  1E19               	comf	(___aomod@dividend+6)^0,f,c
 12923  002C76  1E18               	comf	(___aomod@dividend+5)^0,f,c
 12924  002C78  1E17               	comf	(___aomod@dividend+4)^0,f,c
 12925  002C7A  1E16               	comf	(___aomod@dividend+3)^0,f,c
 12926  002C7C  1E15               	comf	(___aomod@dividend+2)^0,f,c
 12927  002C7E  1E14               	comf	(___aomod@dividend+1)^0,f,c
 12928  002C80  6C13               	negf	___aomod@dividend^0,c
 12929  002C82  0E00               	movlw	0
 12930  002C84  2214               	addwfc	(___aomod@dividend+1)^0,f,c
 12931  002C86  2215               	addwfc	(___aomod@dividend+2)^0,f,c
 12932  002C88  2216               	addwfc	(___aomod@dividend+3)^0,f,c
 12933  002C8A  2217               	addwfc	(___aomod@dividend+4)^0,f,c
 12934  002C8C  2218               	addwfc	(___aomod@dividend+5)^0,f,c
 12935  002C8E  2219               	addwfc	(___aomod@dividend+6)^0,f,c
 12936  002C90  221A               	addwfc	(___aomod@dividend+7)^0,f,c
 12937  002C92                     l5246:
 12938  002C92  C013  F013         	movff	___aomod@dividend,?___aomod
 12939  002C96  C014  F014         	movff	___aomod@dividend+1,?___aomod+1
 12940  002C9A  C015  F015         	movff	___aomod@dividend+2,?___aomod+2
 12941  002C9E  C016  F016         	movff	___aomod@dividend+3,?___aomod+3
 12942  002CA2  C017  F017         	movff	___aomod@dividend+4,?___aomod+4
 12943  002CA6  C018  F018         	movff	___aomod@dividend+5,?___aomod+5
 12944  002CAA  C019  F019         	movff	___aomod@dividend+6,?___aomod+6
 12945  002CAE  C01A  F01A         	movff	___aomod@dividend+7,?___aomod+7
 12946  002CB2  0012               	return		;funcret
 12947  002CB4                     __end_of___aomod:
 12948                           	callstack 0
 12949                           
 12950 ;; *************** function ___aodiv *****************
 12951 ;; Defined at:
 12952 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
 12953 ;; Parameters:    Size  Location     Type
 12954 ;;  dividend        8   18[COMRAM] long long 
 12955 ;;  divisor         8   26[COMRAM] long long 
 12956 ;; Auto vars:     Size  Location     Type
 12957 ;;  quotient        8   36[COMRAM] long long 
 12958 ;;  sign            1   35[COMRAM] unsigned char 
 12959 ;;  counter         1   34[COMRAM] unsigned char 
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  8   18[COMRAM] long long 
 12962 ;; Registers used:
 12963 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12969 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12970 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12972 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;Total ram usage:       26 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; Hardware stack levels required when called:    4
 12976 ;; This function calls:
 12977 ;;		Nothing
 12978 ;; This function is called by:
 12979 ;;		_dtoa
 12980 ;; This function uses a non-reentrant model
 12981 ;;
 12982                           
 12983                           	psect	text44
 12984  002850                     __ptext44:
 12985                           	callstack 0
 12986  002850                     ___aodiv:
 12987                           	callstack 22
 12988  002850  0E00               	movlw	0
 12989  002852  6E24               	movwf	___aodiv@sign^0,c
 12990  002854  BE22               	btfsc	(___aodiv@divisor+7)^0,7,c
 12991  002856  EF31  F014         	goto	u4900
 12992  00285A  EF2F  F014         	goto	u4901
 12993  00285E                     u4901:
 12994  00285E  EF43  F014         	goto	l5178
 12995  002862                     u4900:
 12996  002862  1E22               	comf	(___aodiv@divisor+7)^0,f,c
 12997  002864  1E21               	comf	(___aodiv@divisor+6)^0,f,c
 12998  002866  1E20               	comf	(___aodiv@divisor+5)^0,f,c
 12999  002868  1E1F               	comf	(___aodiv@divisor+4)^0,f,c
 13000  00286A  1E1E               	comf	(___aodiv@divisor+3)^0,f,c
 13001  00286C  1E1D               	comf	(___aodiv@divisor+2)^0,f,c
 13002  00286E  1E1C               	comf	(___aodiv@divisor+1)^0,f,c
 13003  002870  6C1B               	negf	___aodiv@divisor^0,c
 13004  002872  0E00               	movlw	0
 13005  002874  221C               	addwfc	(___aodiv@divisor+1)^0,f,c
 13006  002876  221D               	addwfc	(___aodiv@divisor+2)^0,f,c
 13007  002878  221E               	addwfc	(___aodiv@divisor+3)^0,f,c
 13008  00287A  221F               	addwfc	(___aodiv@divisor+4)^0,f,c
 13009  00287C  2220               	addwfc	(___aodiv@divisor+5)^0,f,c
 13010  00287E  2221               	addwfc	(___aodiv@divisor+6)^0,f,c
 13011  002880  2222               	addwfc	(___aodiv@divisor+7)^0,f,c
 13012  002882  0E01               	movlw	1
 13013  002884  6E24               	movwf	___aodiv@sign^0,c
 13014  002886                     l5178:
 13015  002886  BE1A               	btfsc	(___aodiv@dividend+7)^0,7,c
 13016  002888  EF4A  F014         	goto	u4910
 13017  00288C  EF48  F014         	goto	u4911
 13018  002890                     u4911:
 13019  002890  EF5C  F014         	goto	l5184
 13020  002894                     u4910:
 13021  002894  1E1A               	comf	(___aodiv@dividend+7)^0,f,c
 13022  002896  1E19               	comf	(___aodiv@dividend+6)^0,f,c
 13023  002898  1E18               	comf	(___aodiv@dividend+5)^0,f,c
 13024  00289A  1E17               	comf	(___aodiv@dividend+4)^0,f,c
 13025  00289C  1E16               	comf	(___aodiv@dividend+3)^0,f,c
 13026  00289E  1E15               	comf	(___aodiv@dividend+2)^0,f,c
 13027  0028A0  1E14               	comf	(___aodiv@dividend+1)^0,f,c
 13028  0028A2  6C13               	negf	___aodiv@dividend^0,c
 13029  0028A4  0E00               	movlw	0
 13030  0028A6  2214               	addwfc	(___aodiv@dividend+1)^0,f,c
 13031  0028A8  2215               	addwfc	(___aodiv@dividend+2)^0,f,c
 13032  0028AA  2216               	addwfc	(___aodiv@dividend+3)^0,f,c
 13033  0028AC  2217               	addwfc	(___aodiv@dividend+4)^0,f,c
 13034  0028AE  2218               	addwfc	(___aodiv@dividend+5)^0,f,c
 13035  0028B0  2219               	addwfc	(___aodiv@dividend+6)^0,f,c
 13036  0028B2  221A               	addwfc	(___aodiv@dividend+7)^0,f,c
 13037  0028B4  0E01               	movlw	1
 13038  0028B6  1A24               	xorwf	___aodiv@sign^0,f,c
 13039  0028B8                     l5184:
 13040  0028B8  EE20  F025         	lfsr	2,___aodiv@quotient
 13041  0028BC  0E07               	movlw	7
 13042  0028BE                     u4921:
 13043  0028BE  6ADE               	clrf	postinc2,c
 13044  0028C0  06E8               	decf	wreg,f,c
 13045  0028C2  E2FD               	bc	u4921
 13046  0028C4  501B               	movf	___aodiv@divisor^0,w,c
 13047  0028C6  101C               	iorwf	(___aodiv@divisor+1)^0,w,c
 13048  0028C8  101D               	iorwf	(___aodiv@divisor+2)^0,w,c
 13049  0028CA  101E               	iorwf	(___aodiv@divisor+3)^0,w,c
 13050  0028CC  101F               	iorwf	(___aodiv@divisor+4)^0,w,c
 13051  0028CE  1020               	iorwf	(___aodiv@divisor+5)^0,w,c
 13052  0028D0  1021               	iorwf	(___aodiv@divisor+6)^0,w,c
 13053  0028D2  1022               	iorwf	(___aodiv@divisor+7)^0,w,c
 13054  0028D4  B4D8               	btfsc	status,2,c
 13055  0028D6  EF6F  F014         	goto	u4931
 13056  0028DA  EF71  F014         	goto	u4930
 13057  0028DE                     u4931:
 13058  0028DE  EFC3  F014         	goto	l5206
 13059  0028E2                     u4930:
 13060  0028E2  0E01               	movlw	1
 13061  0028E4  6E23               	movwf	___aodiv@counter^0,c
 13062  0028E6  EF7F  F014         	goto	l5192
 13063  0028EA                     l5190:
 13064  0028EA  90D8               	bcf	status,0,c
 13065  0028EC  361B               	rlcf	___aodiv@divisor^0,f,c
 13066  0028EE  361C               	rlcf	(___aodiv@divisor+1)^0,f,c
 13067  0028F0  361D               	rlcf	(___aodiv@divisor+2)^0,f,c
 13068  0028F2  361E               	rlcf	(___aodiv@divisor+3)^0,f,c
 13069  0028F4  361F               	rlcf	(___aodiv@divisor+4)^0,f,c
 13070  0028F6  3620               	rlcf	(___aodiv@divisor+5)^0,f,c
 13071  0028F8  3621               	rlcf	(___aodiv@divisor+6)^0,f,c
 13072  0028FA  3622               	rlcf	(___aodiv@divisor+7)^0,f,c
 13073  0028FC  2A23               	incf	___aodiv@counter^0,f,c
 13074  0028FE                     l5192:
 13075  0028FE  AE22               	btfss	(___aodiv@divisor+7)^0,7,c
 13076  002900  EF84  F014         	goto	u4941
 13077  002904  EF86  F014         	goto	u4940
 13078  002908                     u4941:
 13079  002908  EF75  F014         	goto	l5190
 13080  00290C                     u4940:
 13081  00290C                     l5194:
 13082  00290C  90D8               	bcf	status,0,c
 13083  00290E  3625               	rlcf	___aodiv@quotient^0,f,c
 13084  002910  3626               	rlcf	(___aodiv@quotient+1)^0,f,c
 13085  002912  3627               	rlcf	(___aodiv@quotient+2)^0,f,c
 13086  002914  3628               	rlcf	(___aodiv@quotient+3)^0,f,c
 13087  002916  3629               	rlcf	(___aodiv@quotient+4)^0,f,c
 13088  002918  362A               	rlcf	(___aodiv@quotient+5)^0,f,c
 13089  00291A  362B               	rlcf	(___aodiv@quotient+6)^0,f,c
 13090  00291C  362C               	rlcf	(___aodiv@quotient+7)^0,f,c
 13091  00291E  501B               	movf	___aodiv@divisor^0,w,c
 13092  002920  5C13               	subwf	___aodiv@dividend^0,w,c
 13093  002922  501C               	movf	(___aodiv@divisor+1)^0,w,c
 13094  002924  5814               	subwfb	(___aodiv@dividend+1)^0,w,c
 13095  002926  501D               	movf	(___aodiv@divisor+2)^0,w,c
 13096  002928  5815               	subwfb	(___aodiv@dividend+2)^0,w,c
 13097  00292A  501E               	movf	(___aodiv@divisor+3)^0,w,c
 13098  00292C  5816               	subwfb	(___aodiv@dividend+3)^0,w,c
 13099  00292E  501F               	movf	(___aodiv@divisor+4)^0,w,c
 13100  002930  5817               	subwfb	(___aodiv@dividend+4)^0,w,c
 13101  002932  5020               	movf	(___aodiv@divisor+5)^0,w,c
 13102  002934  5818               	subwfb	(___aodiv@dividend+5)^0,w,c
 13103  002936  5021               	movf	(___aodiv@divisor+6)^0,w,c
 13104  002938  5819               	subwfb	(___aodiv@dividend+6)^0,w,c
 13105  00293A  5022               	movf	(___aodiv@divisor+7)^0,w,c
 13106  00293C  581A               	subwfb	(___aodiv@dividend+7)^0,w,c
 13107  00293E  A0D8               	btfss	status,0,c
 13108  002940  EFA4  F014         	goto	u4951
 13109  002944  EFA6  F014         	goto	u4950
 13110  002948                     u4951:
 13111  002948  EFB7  F014         	goto	l5202
 13112  00294C                     u4950:
 13113  00294C  501B               	movf	___aodiv@divisor^0,w,c
 13114  00294E  5E13               	subwf	___aodiv@dividend^0,f,c
 13115  002950  501C               	movf	(___aodiv@divisor+1)^0,w,c
 13116  002952  5A14               	subwfb	(___aodiv@dividend+1)^0,f,c
 13117  002954  501D               	movf	(___aodiv@divisor+2)^0,w,c
 13118  002956  5A15               	subwfb	(___aodiv@dividend+2)^0,f,c
 13119  002958  501E               	movf	(___aodiv@divisor+3)^0,w,c
 13120  00295A  5A16               	subwfb	(___aodiv@dividend+3)^0,f,c
 13121  00295C  501F               	movf	(___aodiv@divisor+4)^0,w,c
 13122  00295E  5A17               	subwfb	(___aodiv@dividend+4)^0,f,c
 13123  002960  5020               	movf	(___aodiv@divisor+5)^0,w,c
 13124  002962  5A18               	subwfb	(___aodiv@dividend+5)^0,f,c
 13125  002964  5021               	movf	(___aodiv@divisor+6)^0,w,c
 13126  002966  5A19               	subwfb	(___aodiv@dividend+6)^0,f,c
 13127  002968  5022               	movf	(___aodiv@divisor+7)^0,w,c
 13128  00296A  5A1A               	subwfb	(___aodiv@dividend+7)^0,f,c
 13129  00296C  8025               	bsf	___aodiv@quotient^0,0,c
 13130  00296E                     l5202:
 13131  00296E  90D8               	bcf	status,0,c
 13132  002970  3222               	rrcf	(___aodiv@divisor+7)^0,f,c
 13133  002972  3221               	rrcf	(___aodiv@divisor+6)^0,f,c
 13134  002974  3220               	rrcf	(___aodiv@divisor+5)^0,f,c
 13135  002976  321F               	rrcf	(___aodiv@divisor+4)^0,f,c
 13136  002978  321E               	rrcf	(___aodiv@divisor+3)^0,f,c
 13137  00297A  321D               	rrcf	(___aodiv@divisor+2)^0,f,c
 13138  00297C  321C               	rrcf	(___aodiv@divisor+1)^0,f,c
 13139  00297E  321B               	rrcf	___aodiv@divisor^0,f,c
 13140  002980  2E23               	decfsz	___aodiv@counter^0,f,c
 13141  002982  EF86  F014         	goto	l5194
 13142  002986                     l5206:
 13143  002986  5024               	movf	___aodiv@sign^0,w,c
 13144  002988  B4D8               	btfsc	status,2,c
 13145  00298A  EFC9  F014         	goto	u4961
 13146  00298E  EFCB  F014         	goto	u4960
 13147  002992                     u4961:
 13148  002992  EFDB  F014         	goto	l5210
 13149  002996                     u4960:
 13150  002996  1E2C               	comf	(___aodiv@quotient+7)^0,f,c
 13151  002998  1E2B               	comf	(___aodiv@quotient+6)^0,f,c
 13152  00299A  1E2A               	comf	(___aodiv@quotient+5)^0,f,c
 13153  00299C  1E29               	comf	(___aodiv@quotient+4)^0,f,c
 13154  00299E  1E28               	comf	(___aodiv@quotient+3)^0,f,c
 13155  0029A0  1E27               	comf	(___aodiv@quotient+2)^0,f,c
 13156  0029A2  1E26               	comf	(___aodiv@quotient+1)^0,f,c
 13157  0029A4  6C25               	negf	___aodiv@quotient^0,c
 13158  0029A6  0E00               	movlw	0
 13159  0029A8  2226               	addwfc	(___aodiv@quotient+1)^0,f,c
 13160  0029AA  2227               	addwfc	(___aodiv@quotient+2)^0,f,c
 13161  0029AC  2228               	addwfc	(___aodiv@quotient+3)^0,f,c
 13162  0029AE  2229               	addwfc	(___aodiv@quotient+4)^0,f,c
 13163  0029B0  222A               	addwfc	(___aodiv@quotient+5)^0,f,c
 13164  0029B2  222B               	addwfc	(___aodiv@quotient+6)^0,f,c
 13165  0029B4  222C               	addwfc	(___aodiv@quotient+7)^0,f,c
 13166  0029B6                     l5210:
 13167  0029B6  C025  F013         	movff	___aodiv@quotient,?___aodiv
 13168  0029BA  C026  F014         	movff	___aodiv@quotient+1,?___aodiv+1
 13169  0029BE  C027  F015         	movff	___aodiv@quotient+2,?___aodiv+2
 13170  0029C2  C028  F016         	movff	___aodiv@quotient+3,?___aodiv+3
 13171  0029C6  C029  F017         	movff	___aodiv@quotient+4,?___aodiv+4
 13172  0029CA  C02A  F018         	movff	___aodiv@quotient+5,?___aodiv+5
 13173  0029CE  C02B  F019         	movff	___aodiv@quotient+6,?___aodiv+6
 13174  0029D2  C02C  F01A         	movff	___aodiv@quotient+7,?___aodiv+7
 13175  0029D6  0012               	return		;funcret
 13176  0029D8                     __end_of___aodiv:
 13177                           	callstack 0
 13178                           
 13179 ;; *************** function _ctoa *****************
 13180 ;; Defined at:
 13181 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 13182 ;; Parameters:    Size  Location     Type
 13183 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
 13184 ;;		 -> NULL(0), 
 13185 ;;  c               1   31[COMRAM] unsigned char 
 13186 ;; Auto vars:     Size  Location     Type
 13187 ;;  w               2   35[COMRAM] int 
 13188 ;;  l               2   33[COMRAM] int 
 13189 ;; Return value:  Size  Location     Type
 13190 ;;                  2   29[COMRAM] int 
 13191 ;; Registers used:
 13192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13193 ;; Tracked objects:
 13194 ;;		On entry : 0/0
 13195 ;;		On exit  : 0/0
 13196 ;;		Unchanged: 0/0
 13197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13199 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13202 ;;Total ram usage:        8 bytes
 13203 ;; Hardware stack levels used:    1
 13204 ;; Hardware stack levels required when called:    7
 13205 ;; This function calls:
 13206 ;;		_fputc
 13207 ;; This function is called by:
 13208 ;;		_vfpfcnvrt
 13209 ;; This function uses a non-reentrant model
 13210 ;;
 13211                           
 13212                           	psect	text45
 13213  002DA4                     __ptext45:
 13214                           	callstack 0
 13215  002DA4                     _ctoa:
 13216                           	callstack 20
 13217  002DA4                     
 13218                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 13219  002DA4  503B               	movf	_width^0,w,c
 13220  002DA6  103C               	iorwf	(_width+1)^0,w,c
 13221  002DA8  A4D8               	btfss	status,2,c
 13222  002DAA  EFD9  F016         	goto	u5261
 13223  002DAE  EFDB  F016         	goto	u5260
 13224  002DB2                     u5261:
 13225  002DB2  EFE1  F016         	goto	l5352
 13226  002DB6                     u5260:
 13227  002DB6  C03B  F024         	movff	_width,ctoa@w
 13228  002DBA  C03C  F025         	movff	_width+1,ctoa@w+1
 13229  002DBE  EFE7  F016         	goto	l5354
 13230  002DC2                     l5352:
 13231  002DC2  0EFF               	movlw	255
 13232  002DC4  243B               	addwf	_width^0,w,c
 13233  002DC6  6E24               	movwf	ctoa@w^0,c
 13234  002DC8  0EFF               	movlw	255
 13235  002DCA  203C               	addwfc	(_width+1)^0,w,c
 13236  002DCC  6E25               	movwf	(ctoa@w+1)^0,c
 13237  002DCE                     l5354:
 13238                           
 13239                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 13240  002DCE  A03F               	btfss	_flags^0,0,c
 13241  002DD0  EFEC  F016         	goto	u5271
 13242  002DD4  EFEE  F016         	goto	u5270
 13243  002DD8                     u5271:
 13244  002DD8  EFF7  F016         	goto	l5358
 13245  002DDC                     u5270:
 13246  002DDC                     
 13247                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 13248  002DDC  C020  F015         	movff	ctoa@c,fputc@c
 13249  002DE0  6A16               	clrf	(fputc@c+1)^0,c
 13250  002DE2  C01E  F017         	movff	ctoa@fp,fputc@fp
 13251  002DE6  C01F  F018         	movff	ctoa@fp+1,fputc@fp+1
 13252  002DEA  ECA8  F018         	call	_fputc	;wreg free
 13253  002DEE                     l5358:
 13254                           
 13255                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 13256  002DEE  BE25               	btfsc	(ctoa@w+1)^0,7,c
 13257  002DF0  EFFC  F016         	goto	u5281
 13258  002DF4  EFFE  F016         	goto	u5280
 13259  002DF8                     u5281:
 13260  002DF8  EF00  F017         	goto	l5362
 13261  002DFC                     u5280:
 13262  002DFC  EF04  F017         	goto	l1468
 13263  002E00                     l5362:
 13264  002E00  0E00               	movlw	0
 13265  002E02  6E25               	movwf	(ctoa@w+1)^0,c
 13266  002E04  0E00               	movlw	0
 13267  002E06  6E24               	movwf	ctoa@w^0,c
 13268  002E08                     l1468:
 13269                           
 13270                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 13271  002E08  0E00               	movlw	0
 13272  002E0A  6E23               	movwf	(ctoa@l+1)^0,c
 13273  002E0C  0E00               	movlw	0
 13274  002E0E  6E22               	movwf	ctoa@l^0,c
 13275                           
 13276                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13277  002E10  EF16  F017         	goto	l5368
 13278  002E14                     l5364:
 13279                           
 13280                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 13281  002E14  0E00               	movlw	0
 13282  002E16  6E16               	movwf	(fputc@c+1)^0,c
 13283  002E18  0E20               	movlw	32
 13284  002E1A  6E15               	movwf	fputc@c^0,c
 13285  002E1C  C01E  F017         	movff	ctoa@fp,fputc@fp
 13286  002E20  C01F  F018         	movff	ctoa@fp+1,fputc@fp+1
 13287  002E24  ECA8  F018         	call	_fputc	;wreg free
 13288  002E28                     
 13289                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
 13290  002E28  4A22               	infsnz	ctoa@l^0,f,c
 13291  002E2A  2A23               	incf	(ctoa@l+1)^0,f,c
 13292  002E2C                     l5368:
 13293                           
 13294                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13295  002E2C  5024               	movf	ctoa@w^0,w,c
 13296  002E2E  5C22               	subwf	ctoa@l^0,w,c
 13297  002E30  5023               	movf	(ctoa@l+1)^0,w,c
 13298  002E32  0A80               	xorlw	128
 13299  002E34  6E21               	movwf	??_ctoa^0,c
 13300  002E36  5025               	movf	(ctoa@w+1)^0,w,c
 13301  002E38  0A80               	xorlw	128
 13302  002E3A  5821               	subwfb	??_ctoa^0,w,c
 13303  002E3C  A0D8               	btfss	status,0,c
 13304  002E3E  EF23  F017         	goto	u5291
 13305  002E42  EF25  F017         	goto	u5290
 13306  002E46                     u5291:
 13307  002E46  EF0A  F017         	goto	l5364
 13308  002E4A                     u5290:
 13309  002E4A                     
 13310                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 13311  002E4A  B03F               	btfsc	_flags^0,0,c
 13312  002E4C  EF2A  F017         	goto	u5301
 13313  002E50  EF2C  F017         	goto	u5300
 13314  002E54                     u5301:
 13315  002E54  EF35  F017         	goto	l5372
 13316  002E58                     u5300:
 13317  002E58                     
 13318                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 13319  002E58  C020  F015         	movff	ctoa@c,fputc@c
 13320  002E5C  6A16               	clrf	(fputc@c+1)^0,c
 13321  002E5E  C01E  F017         	movff	ctoa@fp,fputc@fp
 13322  002E62  C01F  F018         	movff	ctoa@fp+1,fputc@fp+1
 13323  002E66  ECA8  F018         	call	_fputc	;wreg free
 13324  002E6A                     l5372:
 13325                           
 13326                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 13327  002E6A  0E01               	movlw	1
 13328  002E6C  2422               	addwf	ctoa@l^0,w,c
 13329  002E6E  6E1E               	movwf	?_ctoa^0,c
 13330  002E70  0E00               	movlw	0
 13331  002E72  2023               	addwfc	(ctoa@l+1)^0,w,c
 13332  002E74  6E1F               	movwf	(?_ctoa+1)^0,c
 13333  002E76  0012               	return		;funcret
 13334  002E78                     __end_of_ctoa:
 13335                           	callstack 0
 13336                           
 13337 ;; *************** function _fputc *****************
 13338 ;; Defined at:
 13339 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;  c               2   20[COMRAM] int 
 13342 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
 13343 ;;		 -> NULL(0), 
 13344 ;; Auto vars:     Size  Location     Type
 13345 ;;		None
 13346 ;; Return value:  Size  Location     Type
 13347 ;;                  2   20[COMRAM] int 
 13348 ;; Registers used:
 13349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13350 ;; Tracked objects:
 13351 ;;		On entry : 0/0
 13352 ;;		On exit  : 0/0
 13353 ;;		Unchanged: 0/0
 13354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13357 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13358 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13359 ;;Total ram usage:        9 bytes
 13360 ;; Hardware stack levels used:    1
 13361 ;; Hardware stack levels required when called:    6
 13362 ;; This function calls:
 13363 ;;		_putch
 13364 ;; This function is called by:
 13365 ;;		_pad
 13366 ;;		_ctoa
 13367 ;;		_vfpfcnvrt
 13368 ;;		_fputs
 13369 ;; This function uses a non-reentrant model
 13370 ;;
 13371                           
 13372                           	psect	text46
 13373  003150                     __ptext46:
 13374                           	callstack 0
 13375  003150                     _fputc:
 13376                           	callstack 18
 13377  003150  5017               	movf	fputc@fp^0,w,c
 13378  003152  1018               	iorwf	(fputc@fp+1)^0,w,c
 13379  003154  B4D8               	btfsc	status,2,c
 13380  003156  EFAF  F018         	goto	u4821
 13381  00315A  EFB1  F018         	goto	u4820
 13382  00315E                     u4821:
 13383  00315E  EFBA  F018         	goto	l5132
 13384  003162                     u4820:
 13385  003162  5017               	movf	fputc@fp^0,w,c
 13386  003164  1018               	iorwf	(fputc@fp+1)^0,w,c
 13387  003166  A4D8               	btfss	status,2,c
 13388  003168  EFB8  F018         	goto	u4831
 13389  00316C  EFBA  F018         	goto	u4830
 13390  003170                     u4831:
 13391  003170  EFBF  F018         	goto	l5134
 13392  003174                     u4830:
 13393  003174                     l5132:
 13394  003174  5015               	movf	fputc@c^0,w,c
 13395  003176  ECB8  F01C         	call	_putch
 13396  00317A  EFF2  F018         	goto	l1661
 13397  00317E                     l5134:
 13398  00317E  EE20 F004          	lfsr	2,4
 13399  003182  5017               	movf	fputc@fp^0,w,c
 13400  003184  26D9               	addwf	fsr2l,f,c
 13401  003186  5018               	movf	(fputc@fp+1)^0,w,c
 13402  003188  22DA               	addwfc	fsr2h,f,c
 13403  00318A  50DE               	movf	postinc2,w,c
 13404  00318C  10DE               	iorwf	postinc2,w,c
 13405  00318E  B4D8               	btfsc	status,2,c
 13406  003190  EFCC  F018         	goto	u4841
 13407  003194  EFCE  F018         	goto	u4840
 13408  003198                     u4841:
 13409  003198  EFE9  F018         	goto	l5138
 13410  00319C                     u4840:
 13411  00319C  EE20 F004          	lfsr	2,4
 13412  0031A0  5017               	movf	fputc@fp^0,w,c
 13413  0031A2  26D9               	addwf	fsr2l,f,c
 13414  0031A4  5018               	movf	(fputc@fp+1)^0,w,c
 13415  0031A6  22DA               	addwfc	fsr2h,f,c
 13416  0031A8  EE10 F002          	lfsr	1,2
 13417  0031AC  5017               	movf	fputc@fp^0,w,c
 13418  0031AE  26E1               	addwf	fsr1l,f,c
 13419  0031B0  5018               	movf	(fputc@fp+1)^0,w,c
 13420  0031B2  22E2               	addwfc	fsr1h,f,c
 13421  0031B4  50DE               	movf	postinc2,w,c
 13422  0031B6  5CE6               	subwf	postinc1,w,c
 13423  0031B8  50E6               	movf	postinc1,w,c
 13424  0031BA  0A80               	xorlw	128
 13425  0031BC  6E1D               	movwf	(??_fputc+4)^0,c
 13426  0031BE  50DE               	movf	postinc2,w,c
 13427  0031C0  0A80               	xorlw	128
 13428  0031C2  581D               	subwfb	(??_fputc+4)^0,w,c
 13429  0031C4  B0D8               	btfsc	status,0,c
 13430  0031C6  EFE7  F018         	goto	u4851
 13431  0031CA  EFE9  F018         	goto	u4850
 13432  0031CE                     u4851:
 13433  0031CE  EFF2  F018         	goto	l1661
 13434  0031D2                     u4850:
 13435  0031D2                     l5138:
 13436  0031D2  EE20 F002          	lfsr	2,2
 13437  0031D6  5017               	movf	fputc@fp^0,w,c
 13438  0031D8  26D9               	addwf	fsr2l,f,c
 13439  0031DA  5018               	movf	(fputc@fp+1)^0,w,c
 13440  0031DC  22DA               	addwfc	fsr2h,f,c
 13441  0031DE  2ADE               	incf	postinc2,f,c
 13442  0031E0  0E00               	movlw	0
 13443  0031E2  22DD               	addwfc	postdec2,f,c
 13444  0031E4                     l1661:
 13445  0031E4  0012               	return		;funcret
 13446  0031E6                     __end_of_fputc:
 13447                           	callstack 0
 13448                           
 13449 ;; *************** function _putch *****************
 13450 ;; Defined at:
 13451 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  txData          1    wreg     unsigned char 
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;  txData          1   19[COMRAM] unsigned char 
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1    wreg      void 
 13458 ;; Registers used:
 13459 ;;		wreg, status,2, cstack
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13468 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;Total ram usage:        1 bytes
 13470 ;; Hardware stack levels used:    1
 13471 ;; Hardware stack levels required when called:    5
 13472 ;; This function calls:
 13473 ;;		_EUSART1_Write
 13474 ;; This function is called by:
 13475 ;;		_fputc
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text47
 13480  003970                     __ptext47:
 13481                           	callstack 0
 13482  003970                     _putch:
 13483                           	callstack 18
 13484                           
 13485                           ;incstack = 0
 13486                           ;putch@txData stored from wreg
 13487  003970  6E14               	movwf	putch@txData^0,c
 13488  003972                     
 13489                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 13490  003972  5014               	movf	putch@txData^0,w,c
 13491  003974  EC79  F01C         	call	_EUSART1_Write
 13492  003978  0012               	return		;funcret
 13493  00397A                     __end_of_putch:
 13494                           	callstack 0
 13495                           
 13496 ;; *************** function _EUSART1_Write *****************
 13497 ;; Defined at:
 13498 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;  txData          1    wreg     unsigned char 
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;  txData          1   18[COMRAM] unsigned char 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  1    wreg      void 
 13505 ;; Registers used:
 13506 ;;		wreg
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13516 ;;Total ram usage:        1 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    4
 13519 ;; This function calls:
 13520 ;;		Nothing
 13521 ;; This function is called by:
 13522 ;;		_putch
 13523 ;; This function uses a non-reentrant model
 13524 ;;
 13525                           
 13526                           	psect	text48
 13527  0038F2                     __ptext48:
 13528                           	callstack 0
 13529  0038F2                     _EUSART1_Write:
 13530                           	callstack 18
 13531                           
 13532                           ;incstack = 0
 13533                           ;EUSART1_Write@txData stored from wreg
 13534  0038F2  6E13               	movwf	EUSART1_Write@txData^0,c
 13535  0038F4                     l87:
 13536                           
 13537                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 13538  0038F4  A89E               	btfss	158,4,c	;volatile
 13539  0038F6  EF7F  F01C         	goto	u4811
 13540  0038FA  EF81  F01C         	goto	u4810
 13541  0038FE                     u4811:
 13542  0038FE  EF7A  F01C         	goto	l87
 13543  003902                     u4810:
 13544  003902                     
 13545                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 13546  003902  C013  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 13547  003906  0012               	return		;funcret
 13548  003908                     __end_of_EUSART1_Write:
 13549                           	callstack 0
 13550                           
 13551 ;; *************** function _atoi *****************
 13552 ;; Defined at:
 13553 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  s               2   25[COMRAM] PTR const unsigned char 
 13556 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
 13557 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
 13558 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
 13559 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
 13560 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
 13561 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
 13562 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
 13563 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
 13564 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
 13565 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
 13566 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
 13567 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
 13568 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
 13569 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
 13570 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
 13571 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
 13572 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
 13573 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(13), 
 13574 ;;		 -> STR_54(23), STR_53(5), STR_52(25), STR_51(20), 
 13575 ;;		 -> STR_50(71), STR_49(50), STR_48(22), STR_47(33), 
 13576 ;;		 -> STR_46(58), STR_45(3), STR_44(68), STR_43(58), 
 13577 ;;		 -> STR_42(7), STR_41(2), STR_40(5), STR_39(31), 
 13578 ;;		 -> STR_38(27), STR_37(3), STR_36(76), STR_35(30), 
 13579 ;;		 -> STR_34(4), STR_33(2), STR_32(2), STR_31(8), 
 13580 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
 13581 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
 13582 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
 13583 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
 13584 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
 13585 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
 13586 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
 13587 ;;		 -> STR_2(21), STR_1(9), 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;  n               2   38[COMRAM] int 
 13590 ;;  neg             2   31[COMRAM] int 
 13591 ;; Return value:  Size  Location     Type
 13592 ;;                  2   25[COMRAM] int 
 13593 ;; Registers used:
 13594 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13601 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13604 ;;Total ram usage:       15 bytes
 13605 ;; Hardware stack levels used:    1
 13606 ;; Hardware stack levels required when called:    5
 13607 ;; This function calls:
 13608 ;;		___wmul
 13609 ;;		_isdigit
 13610 ;;		_isspace
 13611 ;; This function is called by:
 13612 ;;		_vfpfcnvrt
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           	psect	text49
 13617  0026B6                     __ptext49:
 13618                           	callstack 0
 13619  0026B6                     _atoi:
 13620                           	callstack 22
 13621  0026B6  0E00               	movlw	0
 13622  0026B8  6E28               	movwf	(atoi@n+1)^0,c
 13623  0026BA  0E00               	movlw	0
 13624  0026BC  6E27               	movwf	atoi@n^0,c
 13625  0026BE  0E00               	movlw	0
 13626  0026C0  6E21               	movwf	(atoi@neg+1)^0,c
 13627  0026C2  0E00               	movlw	0
 13628  0026C4  6E20               	movwf	atoi@neg^0,c
 13629  0026C6  EF67  F013         	goto	l5544
 13630  0026CA                     l5542:
 13631  0026CA  4A1A               	infsnz	atoi@s^0,f,c
 13632  0026CC  2A1B               	incf	(atoi@s+1)^0,f,c
 13633  0026CE                     l5544:
 13634  0026CE  0E01               	movlw	1
 13635  0026D0  6E26               	movwf	_atoi$2047^0,c
 13636  0026D2  C01A  FFF6         	movff	atoi@s,tblptrl
 13637  0026D6  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13638  0026DA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13639  0026DA  6AF8               	clrf	tblptru,c
 13640  0026DC                     	endif
 13641  0026DC                     	if	0	;tblptru may be non-zero
 13642  0026DC                     	endif
 13643  0026DC  0008               	tblrd		*
 13644  0026DE  50F5               	movf	tablat,w,c
 13645  0026E0  0A20               	xorlw	32
 13646  0026E2  B4D8               	btfsc	status,2,c
 13647  0026E4  EF76  F013         	goto	u5701
 13648  0026E8  EF78  F013         	goto	u5700
 13649  0026EC                     u5701:
 13650  0026EC  EF96  F013         	goto	l5552
 13651  0026F0                     u5700:
 13652  0026F0  0EF7               	movlw	247
 13653  0026F2  6E1C               	movwf	??_atoi^0,c
 13654  0026F4  0EFF               	movlw	255
 13655  0026F6  6E1D               	movwf	(??_atoi+1)^0,c
 13656  0026F8  C01A  FFF6         	movff	atoi@s,tblptrl
 13657  0026FC  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13658  002700                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13659  002700  6AF8               	clrf	tblptru,c
 13660  002702                     	endif
 13661  002702                     	if	0	;tblptru may be non-zero
 13662  002702                     	endif
 13663  002702  0008               	tblrd		*
 13664  002704  50F5               	movf	tablat,w,c
 13665  002706  6E1E               	movwf	(??_atoi+2)^0,c
 13666  002708  6A1F               	clrf	(??_atoi+3)^0,c
 13667  00270A  501C               	movf	??_atoi^0,w,c
 13668  00270C  261E               	addwf	(??_atoi+2)^0,f,c
 13669  00270E  501D               	movf	(??_atoi+1)^0,w,c
 13670  002710  221F               	addwfc	(??_atoi+3)^0,f,c
 13671  002712  501F               	movf	(??_atoi+3)^0,w,c
 13672  002714  E109               	bnz	u5710
 13673  002716  0E05               	movlw	5
 13674  002718  5C1E               	subwf	(??_atoi+2)^0,w,c
 13675  00271A  A0D8               	btfss	status,0,c
 13676  00271C  EF92  F013         	goto	u5711
 13677  002720  EF94  F013         	goto	u5710
 13678  002724                     u5711:
 13679  002724  EF96  F013         	goto	l5552
 13680  002728                     u5710:
 13681  002728  0E00               	movlw	0
 13682  00272A  6E26               	movwf	_atoi$2047^0,c
 13683  00272C                     l5552:
 13684  00272C  C026  F022         	movff	_atoi$2047,_atoi$2046
 13685  002730  6A23               	clrf	(_atoi$2046+1)^0,c
 13686  002732  5022               	movf	_atoi$2046^0,w,c
 13687  002734  1023               	iorwf	(_atoi$2046+1)^0,w,c
 13688  002736  A4D8               	btfss	status,2,c
 13689  002738  EFA0  F013         	goto	u5721
 13690  00273C  EFA2  F013         	goto	u5720
 13691  002740                     u5721:
 13692  002740  EF65  F013         	goto	l5542
 13693  002744                     u5720:
 13694  002744  EFAC  F013         	goto	l5562
 13695  002748                     l5558:
 13696  002748  0E00               	movlw	0
 13697  00274A  6E21               	movwf	(atoi@neg+1)^0,c
 13698  00274C  0E01               	movlw	1
 13699  00274E  6E20               	movwf	atoi@neg^0,c
 13700  002750                     l5560:
 13701  002750  4A1A               	infsnz	atoi@s^0,f,c
 13702  002752  2A1B               	incf	(atoi@s+1)^0,f,c
 13703  002754  EFE3  F013         	goto	l5568
 13704  002758                     l5562:
 13705  002758  C01A  FFF6         	movff	atoi@s,tblptrl
 13706  00275C  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13707  002760                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13708  002760  6AF8               	clrf	tblptru,c
 13709  002762                     	endif
 13710  002762                     	if	0	;tblptru may be non-zero
 13711  002762                     	endif
 13712  002762  0008               	tblrd		*
 13713  002764  50F5               	movf	tablat,w,c
 13714  002766  6E1C               	movwf	??_atoi^0,c
 13715  002768  6A1D               	clrf	(??_atoi+1)^0,c
 13716                           
 13717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13718                           ; Switch size 1, requested type "simple"
 13719                           ; Number of cases is 1, Range of values is 0 to 0
 13720                           ; switch strategies available:
 13721                           ; Name         Instructions Cycles
 13722                           ; simple_byte            4     3 (average)
 13723                           ;	Chosen strategy is simple_byte
 13724  00276A  501D               	movf	(??_atoi+1)^0,w,c
 13725  00276C  0A00               	xorlw	0	; case 0
 13726  00276E  B4D8               	btfsc	status,2,c
 13727  002770  EFBC  F013         	goto	l6656
 13728  002774  EFE3  F013         	goto	l5568
 13729  002778                     l6656:
 13730                           
 13731                           ; Switch size 1, requested type "simple"
 13732                           ; Number of cases is 2, Range of values is 43 to 45
 13733                           ; switch strategies available:
 13734                           ; Name         Instructions Cycles
 13735                           ; simple_byte            7     4 (average)
 13736                           ;	Chosen strategy is simple_byte
 13737  002778  501C               	movf	??_atoi^0,w,c
 13738  00277A  0A2B               	xorlw	43	; case 43
 13739  00277C  B4D8               	btfsc	status,2,c
 13740  00277E  EFA8  F013         	goto	l5560
 13741  002782  0A06               	xorlw	6	; case 45
 13742  002784  B4D8               	btfsc	status,2,c
 13743  002786  EFA4  F013         	goto	l5558
 13744  00278A  EFE3  F013         	goto	l5568
 13745  00278E                     l5564:
 13746  00278E  C027  F013         	movff	atoi@n,___wmul@multiplier
 13747  002792  C028  F014         	movff	atoi@n+1,___wmul@multiplier+1
 13748  002796  0E00               	movlw	0
 13749  002798  6E16               	movwf	(___wmul@multiplicand+1)^0,c
 13750  00279A  0E0A               	movlw	10
 13751  00279C  6E15               	movwf	___wmul@multiplicand^0,c
 13752  00279E  EC21  F01C         	call	___wmul	;wreg free
 13753  0027A2  C01A  FFF6         	movff	atoi@s,tblptrl
 13754  0027A6  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13755  0027AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13756  0027AA  6AF8               	clrf	tblptru,c
 13757  0027AC                     	endif
 13758  0027AC                     	if	0	;tblptru may be non-zero
 13759  0027AC                     	endif
 13760  0027AC  0008               	tblrd		*
 13761  0027AE  50F5               	movf	tablat,w,c
 13762  0027B0  5E13               	subwf	?___wmul^0,f,c
 13763  0027B2  0E00               	movlw	0
 13764  0027B4  5A14               	subwfb	(?___wmul+1)^0,f,c
 13765  0027B6  0E30               	movlw	48
 13766  0027B8  2413               	addwf	?___wmul^0,w,c
 13767  0027BA  6E27               	movwf	atoi@n^0,c
 13768  0027BC  0E00               	movlw	0
 13769  0027BE  2014               	addwfc	(?___wmul+1)^0,w,c
 13770  0027C0  6E28               	movwf	(atoi@n+1)^0,c
 13771  0027C2  EFA8  F013         	goto	l5560
 13772  0027C6                     l5568:
 13773  0027C6  0ED0               	movlw	208
 13774  0027C8  6E1C               	movwf	??_atoi^0,c
 13775  0027CA  0EFF               	movlw	255
 13776  0027CC  6E1D               	movwf	(??_atoi+1)^0,c
 13777  0027CE  C01A  FFF6         	movff	atoi@s,tblptrl
 13778  0027D2  C01B  FFF7         	movff	atoi@s+1,tblptrh
 13779  0027D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13780  0027D6  6AF8               	clrf	tblptru,c
 13781  0027D8                     	endif
 13782  0027D8                     	if	0	;tblptru may be non-zero
 13783  0027D8                     	endif
 13784  0027D8  0008               	tblrd		*
 13785  0027DA  50F5               	movf	tablat,w,c
 13786  0027DC  6E1E               	movwf	(??_atoi+2)^0,c
 13787  0027DE  6A1F               	clrf	(??_atoi+3)^0,c
 13788  0027E0  501C               	movf	??_atoi^0,w,c
 13789  0027E2  261E               	addwf	(??_atoi+2)^0,f,c
 13790  0027E4  501D               	movf	(??_atoi+1)^0,w,c
 13791  0027E6  221F               	addwfc	(??_atoi+3)^0,f,c
 13792  0027E8  501F               	movf	(??_atoi+3)^0,w,c
 13793  0027EA  E10A               	bnz	u5730
 13794  0027EC  0E0A               	movlw	10
 13795  0027EE  5C1E               	subwf	(??_atoi+2)^0,w,c
 13796  0027F0  A0D8               	btfss	status,0,c
 13797  0027F2  EFFD  F013         	goto	u5731
 13798  0027F6  EF00  F014         	goto	u5730
 13799  0027FA                     u5731:
 13800  0027FA  0E01               	movlw	1
 13801  0027FC  EF01  F014         	goto	u5740
 13802  002800                     u5730:
 13803  002800  0E00               	movlw	0
 13804  002802                     u5740:
 13805  002802  6E24               	movwf	_atoi$2048^0,c
 13806  002804  6A25               	clrf	(_atoi$2048+1)^0,c
 13807  002806  5024               	movf	_atoi$2048^0,w,c
 13808  002808  1025               	iorwf	(_atoi$2048+1)^0,w,c
 13809  00280A  A4D8               	btfss	status,2,c
 13810  00280C  EF0A  F014         	goto	u5751
 13811  002810  EF0C  F014         	goto	u5750
 13812  002814                     u5751:
 13813  002814  EFC7  F013         	goto	l5564
 13814  002818                     u5750:
 13815  002818  5020               	movf	atoi@neg^0,w,c
 13816  00281A  1021               	iorwf	(atoi@neg+1)^0,w,c
 13817  00281C  A4D8               	btfss	status,2,c
 13818  00281E  EF13  F014         	goto	u5761
 13819  002822  EF15  F014         	goto	u5760
 13820  002826                     u5761:
 13821  002826  EF23  F014         	goto	l1620
 13822  00282A                     u5760:
 13823  00282A  C027  F01C         	movff	atoi@n,??_atoi
 13824  00282E  C028  F01D         	movff	atoi@n+1,??_atoi+1
 13825  002832  1E1C               	comf	??_atoi^0,f,c
 13826  002834  1E1D               	comf	(??_atoi+1)^0,f,c
 13827  002836  4A1C               	infsnz	??_atoi^0,f,c
 13828  002838  2A1D               	incf	(??_atoi+1)^0,f,c
 13829  00283A  C01C  F01A         	movff	??_atoi,?_atoi
 13830  00283E  C01D  F01B         	movff	??_atoi+1,?_atoi+1
 13831  002842  EF27  F014         	goto	l1623
 13832  002846                     l1620:
 13833  002846  C027  F01A         	movff	atoi@n,?_atoi
 13834  00284A  C028  F01B         	movff	atoi@n+1,?_atoi+1
 13835  00284E                     l1623:
 13836  00284E  0012               	return		;funcret
 13837  002850                     __end_of_atoi:
 13838                           	callstack 0
 13839                           
 13840 ;; *************** function _isspace *****************
 13841 ;; Defined at:
 13842 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;  c               2   18[COMRAM] int 
 13845 ;; Auto vars:     Size  Location     Type
 13846 ;;		None
 13847 ;; Return value:  Size  Location     Type
 13848 ;;                  2   18[COMRAM] int 
 13849 ;; Registers used:
 13850 ;;		wreg, status,2, status,0
 13851 ;; Tracked objects:
 13852 ;;		On entry : 0/0
 13853 ;;		On exit  : 0/0
 13854 ;;		Unchanged: 0/0
 13855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13859 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13860 ;;Total ram usage:        7 bytes
 13861 ;; Hardware stack levels used:    1
 13862 ;; Hardware stack levels required when called:    4
 13863 ;; This function calls:
 13864 ;;		Nothing
 13865 ;; This function is called by:
 13866 ;;		_atoi
 13867 ;; This function uses a non-reentrant model
 13868 ;;
 13869                           
 13870                           	psect	text50
 13871  00341E                     __ptext50:
 13872                           	callstack 0
 13873  00341E                     _isspace:
 13874                           	callstack 22
 13875  00341E  0E01               	movlw	1
 13876  003420  6E19               	movwf	_isspace$2073^0,c
 13877  003422  0E20               	movlw	32
 13878  003424  1813               	xorwf	isspace@c^0,w,c
 13879  003426  1014               	iorwf	(isspace@c+1)^0,w,c
 13880  003428  B4D8               	btfsc	status,2,c
 13881  00342A  EF19  F01A         	goto	u5241
 13882  00342E  EF1B  F01A         	goto	u5240
 13883  003432                     u5241:
 13884  003432  EF34  F01A         	goto	l5344
 13885  003436                     u5240:
 13886  003436  0EF7               	movlw	247
 13887  003438  6E15               	movwf	??_isspace^0,c
 13888  00343A  0EFF               	movlw	255
 13889  00343C  6E16               	movwf	(??_isspace+1)^0,c
 13890  00343E  C013  F017         	movff	isspace@c,??_isspace+2
 13891  003442  C014  F018         	movff	isspace@c+1,??_isspace+3
 13892  003446  5015               	movf	??_isspace^0,w,c
 13893  003448  2617               	addwf	(??_isspace+2)^0,f,c
 13894  00344A  5016               	movf	(??_isspace+1)^0,w,c
 13895  00344C  2218               	addwfc	(??_isspace+3)^0,f,c
 13896  00344E  5018               	movf	(??_isspace+3)^0,w,c
 13897  003450  E109               	bnz	u5250
 13898  003452  0E05               	movlw	5
 13899  003454  5C17               	subwf	(??_isspace+2)^0,w,c
 13900  003456  A0D8               	btfss	status,0,c
 13901  003458  EF30  F01A         	goto	u5251
 13902  00345C  EF32  F01A         	goto	u5250
 13903  003460                     u5251:
 13904  003460  EF34  F01A         	goto	l5344
 13905  003464                     u5250:
 13906  003464  0E00               	movlw	0
 13907  003466  6E19               	movwf	_isspace$2073^0,c
 13908  003468                     l5344:
 13909  003468  C019  F013         	movff	_isspace$2073,?_isspace
 13910  00346C  6A14               	clrf	(?_isspace+1)^0,c
 13911  00346E  0012               	return		;funcret
 13912  003470                     __end_of_isspace:
 13913                           	callstack 0
 13914                           
 13915 ;; *************** function _isdigit *****************
 13916 ;; Defined at:
 13917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
 13918 ;; Parameters:    Size  Location     Type
 13919 ;;  c               2   18[COMRAM] int 
 13920 ;; Auto vars:     Size  Location     Type
 13921 ;;		None
 13922 ;; Return value:  Size  Location     Type
 13923 ;;                  2   18[COMRAM] int 
 13924 ;; Registers used:
 13925 ;;		wreg, status,2, status,0
 13926 ;; Tracked objects:
 13927 ;;		On entry : 0/0
 13928 ;;		On exit  : 0/0
 13929 ;;		Unchanged: 0/0
 13930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13931 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13933 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13934 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13935 ;;Total ram usage:        6 bytes
 13936 ;; Hardware stack levels used:    1
 13937 ;; Hardware stack levels required when called:    4
 13938 ;; This function calls:
 13939 ;;		Nothing
 13940 ;; This function is called by:
 13941 ;;		_vfpfcnvrt
 13942 ;;		_atoi
 13943 ;; This function uses a non-reentrant model
 13944 ;;
 13945                           
 13946                           	psect	text51
 13947  003696                     __ptext51:
 13948                           	callstack 0
 13949  003696                     _isdigit:
 13950                           	callstack 23
 13951  003696  0ED0               	movlw	208
 13952  003698  6E15               	movwf	??_isdigit^0,c
 13953  00369A  0EFF               	movlw	255
 13954  00369C  6E16               	movwf	(??_isdigit+1)^0,c
 13955  00369E  C013  F017         	movff	isdigit@c,??_isdigit+2
 13956  0036A2  C014  F018         	movff	isdigit@c+1,??_isdigit+3
 13957  0036A6  5015               	movf	??_isdigit^0,w,c
 13958  0036A8  2617               	addwf	(??_isdigit+2)^0,f,c
 13959  0036AA  5016               	movf	(??_isdigit+1)^0,w,c
 13960  0036AC  2218               	addwfc	(??_isdigit+3)^0,f,c
 13961  0036AE  5018               	movf	(??_isdigit+3)^0,w,c
 13962  0036B0  E10A               	bnz	u5220
 13963  0036B2  0E0A               	movlw	10
 13964  0036B4  5C17               	subwf	(??_isdigit+2)^0,w,c
 13965  0036B6  A0D8               	btfss	status,0,c
 13966  0036B8  EF60  F01B         	goto	u5221
 13967  0036BC  EF63  F01B         	goto	u5220
 13968  0036C0                     u5221:
 13969  0036C0  0E01               	movlw	1
 13970  0036C2  EF64  F01B         	goto	u5230
 13971  0036C6                     u5220:
 13972  0036C6  0E00               	movlw	0
 13973  0036C8                     u5230:
 13974  0036C8  6E13               	movwf	?_isdigit^0,c
 13975  0036CA  6A14               	clrf	(?_isdigit+1)^0,c
 13976  0036CC  0012               	return		;funcret
 13977  0036CE                     __end_of_isdigit:
 13978                           	callstack 0
 13979                           
 13980 ;; *************** function ___wmul *****************
 13981 ;; Defined at:
 13982 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
 13983 ;; Parameters:    Size  Location     Type
 13984 ;;  multiplier      2   18[COMRAM] unsigned int 
 13985 ;;  multiplicand    2   20[COMRAM] unsigned int 
 13986 ;; Auto vars:     Size  Location     Type
 13987 ;;  product         2   22[COMRAM] unsigned int 
 13988 ;; Return value:  Size  Location     Type
 13989 ;;                  2   18[COMRAM] unsigned int 
 13990 ;; Registers used:
 13991 ;;		wreg, status,2, status,0, prodl, prodh
 13992 ;; Tracked objects:
 13993 ;;		On entry : 0/0
 13994 ;;		On exit  : 0/0
 13995 ;;		Unchanged: 0/0
 13996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14000 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14001 ;;Total ram usage:        6 bytes
 14002 ;; Hardware stack levels used:    1
 14003 ;; Hardware stack levels required when called:    4
 14004 ;; This function calls:
 14005 ;;		Nothing
 14006 ;; This function is called by:
 14007 ;;		_atoi
 14008 ;; This function uses a non-reentrant model
 14009 ;;
 14010                           
 14011                           	psect	text52
 14012  003842                     __ptext52:
 14013                           	callstack 0
 14014  003842                     ___wmul:
 14015                           	callstack 22
 14016  003842  5013               	movf	___wmul@multiplier^0,w,c
 14017  003844  0215               	mulwf	___wmul@multiplicand^0,c
 14018  003846  CFF3 F017          	movff	prodl,___wmul@product
 14019  00384A  CFF4 F018          	movff	prodh,___wmul@product+1
 14020  00384E  5013               	movf	___wmul@multiplier^0,w,c
 14021  003850  0216               	mulwf	(___wmul@multiplicand+1)^0,c
 14022  003852  50F3               	movf	243,w,c
 14023  003854  2618               	addwf	(___wmul@product+1)^0,f,c
 14024  003856  5014               	movf	(___wmul@multiplier+1)^0,w,c
 14025  003858  0215               	mulwf	___wmul@multiplicand^0,c
 14026  00385A  50F3               	movf	243,w,c
 14027  00385C  2618               	addwf	(___wmul@product+1)^0,f,c
 14028  00385E  C017  F013         	movff	___wmul@product,?___wmul
 14029  003862  C018  F014         	movff	___wmul@product+1,?___wmul+1
 14030  003866  0012               	return		;funcret
 14031  003868                     __end_of___wmul:
 14032                           	callstack 0
 14033                           
 14034 ;; *************** function _SPI2_ExchangeByte *****************
 14035 ;; Defined at:
 14036 ;;		line 92 in file "mcc_generated_files/spi2.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;  data            1    wreg     unsigned char 
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;  data            1   18[COMRAM] unsigned char 
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  1    wreg      unsigned char 
 14043 ;; Registers used:
 14044 ;;		wreg, status,2
 14045 ;; Tracked objects:
 14046 ;;		On entry : 0/0
 14047 ;;		On exit  : 0/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14054 ;;Total ram usage:        1 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:    4
 14057 ;; This function calls:
 14058 ;;		Nothing
 14059 ;; This function is called by:
 14060 ;;		_SDCARD_ReadBlock
 14061 ;;		_SDCARD_WriteBlock
 14062 ;;		_SDCARD_PollWriteComplete
 14063 ;;		_SDCARD_Initialize
 14064 ;;		_SPI2_WriteBlock
 14065 ;;		_SPI2_ReadBlock
 14066 ;; This function uses a non-reentrant model
 14067 ;;
 14068                           
 14069                           	psect	text53
 14070  0038C2                     __ptext53:
 14071                           	callstack 0
 14072  0038C2                     _SPI2_ExchangeByte:
 14073                           	callstack 25
 14074                           
 14075                           ;incstack = 0
 14076                           ;SPI2_ExchangeByte@data stored from wreg
 14077  0038C2  6E13               	movwf	SPI2_ExchangeByte@data^0,c
 14078  0038C4                     
 14079                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 14080  0038C4  C013  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 14081  0038C8                     l288:
 14082  0038C8  AEA4               	btfss	164,7,c	;volatile
 14083  0038CA  EF69  F01C         	goto	u5941
 14084  0038CE  EF6B  F01C         	goto	u5940
 14085  0038D2                     u5941:
 14086  0038D2  EF64  F01C         	goto	l288
 14087  0038D6                     u5940:
 14088  0038D6                     
 14089                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 14090  0038D6  9EA4               	bcf	164,7,c	;volatile
 14091                           
 14092                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 14093  0038D8  506F               	movf	111,w,c	;volatile
 14094  0038DA  0012               	return		;funcret
 14095  0038DC                     __end_of_SPI2_ExchangeByte:
 14096                           	callstack 0
 14097                           
 14098 ;; *************** function _EUSART1_is_rx_ready *****************
 14099 ;; Defined at:
 14100 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 14101 ;; Parameters:    Size  Location     Type
 14102 ;;		None
 14103 ;; Auto vars:     Size  Location     Type
 14104 ;;		None
 14105 ;; Return value:  Size  Location     Type
 14106 ;;                  1    wreg      _Bool 
 14107 ;; Registers used:
 14108 ;;		wreg
 14109 ;; Tracked objects:
 14110 ;;		On entry : 0/0
 14111 ;;		On exit  : 0/0
 14112 ;;		Unchanged: 0/0
 14113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14118 ;;Total ram usage:        0 bytes
 14119 ;; Hardware stack levels used:    1
 14120 ;; Hardware stack levels required when called:    4
 14121 ;; This function calls:
 14122 ;;		Nothing
 14123 ;; This function is called by:
 14124 ;;		_main
 14125 ;; This function uses a non-reentrant model
 14126 ;;
 14127                           
 14128                           	psect	text54
 14129  003908                     __ptext54:
 14130                           	callstack 0
 14131  003908                     _EUSART1_is_rx_ready:
 14132                           	callstack 26
 14133  003908                     
 14134                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 14135  003908  BA9E               	btfsc	158,5,c	;volatile
 14136  00390A  EF89  F01C         	goto	u5951
 14137  00390E  EF8C  F01C         	goto	u5950
 14138  003912                     u5951:
 14139  003912  0E01               	movlw	1
 14140  003914  EF8D  F01C         	goto	u5956
 14141  003918                     u5950:
 14142  003918  0E00               	movlw	0
 14143  00391A                     u5956:
 14144  00391A  0012               	return		;funcret
 14145  00391C                     __end_of_EUSART1_is_rx_ready:
 14146                           	callstack 0
 14147                           
 14148 ;; *************** function _EUSART1_Read *****************
 14149 ;; Defined at:
 14150 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;		None
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;		None
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1    wreg      unsigned char 
 14157 ;; Registers used:
 14158 ;;		wreg, status,2
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14168 ;;Total ram usage:        0 bytes
 14169 ;; Hardware stack levels used:    1
 14170 ;; Hardware stack levels required when called:    4
 14171 ;; This function calls:
 14172 ;;		Nothing
 14173 ;; This function is called by:
 14174 ;;		_main
 14175 ;;		_getch
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           	psect	text55
 14180  0037F4                     __ptext55:
 14181                           	callstack 0
 14182  0037F4                     _EUSART1_Read:
 14183                           	callstack 26
 14184  0037F4                     l80:
 14185                           
 14186                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 14187  0037F4  AA9E               	btfss	158,5,c	;volatile
 14188  0037F6  EFFF  F01B         	goto	u5961
 14189  0037FA  EF01  F01C         	goto	u5960
 14190  0037FE                     u5961:
 14191  0037FE  EFFA  F01B         	goto	l80
 14192  003802                     u5960:
 14193  003802                     
 14194                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 14195  003802  0E00               	movlw	0
 14196  003804  6E4B               	movwf	_eusart1RxLastError^0,c	;volatile
 14197  003806                     
 14198                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 14199  003806  A2AB               	btfss	171,1,c	;volatile
 14200  003808  EF08  F01C         	goto	u5971
 14201  00380C  EF0A  F01C         	goto	u5970
 14202  003810                     u5971:
 14203  003810  EF0C  F01C         	goto	l5796
 14204  003814                     u5970:
 14205  003814                     
 14206                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 14207  003814  98AB               	bcf	171,4,c	;volatile
 14208                           
 14209                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 14210  003816  88AB               	bsf	171,4,c	;volatile
 14211  003818                     l5796:
 14212                           
 14213                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 14214  003818  50AE               	movf	174,w,c	;volatile
 14215  00381A  0012               	return		;funcret
 14216  00381C                     __end_of_EUSART1_Read:
 14217                           	callstack 0
 14218                           
 14219 ;; *************** function _INTERRUPT_InterruptManager *****************
 14220 ;; Defined at:
 14221 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;		None
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;		None
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  1    wreg      void 
 14228 ;; Registers used:
 14229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14237 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;Total ram usage:        4 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:    3
 14242 ;; This function calls:
 14243 ;;		_TMR0_ISR
 14244 ;; This function is called by:
 14245 ;;		Interrupt level 2
 14246 ;; This function uses a non-reentrant model
 14247 ;;
 14248                           
 14249                           	psect	intcode
 14250  000008                     __pintcode:
 14251                           	callstack 0
 14252  000008                     _INTERRUPT_InterruptManager:
 14253                           	callstack 17
 14254                           
 14255                           ;incstack = 0
 14256  000008  824D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14257  00000A  CFFA F00F          	movff	pclath,??_INTERRUPT_InterruptManager
 14258  00000E  CFFB F010          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14259  000012  CFD9 F011          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 14260  000016  CFDA F012          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 14261  00001A                     
 14262                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 14263  00001A  AAF2               	btfss	242,5,c	;volatile
 14264  00001C  EF12  F000         	goto	i2u414_41
 14265  000020  EF14  F000         	goto	i2u414_40
 14266  000024                     i2u414_41:
 14267  000024  EF1D  F000         	goto	i2l334
 14268  000028                     i2u414_40:
 14269  000028  A4F2               	btfss	242,2,c	;volatile
 14270  00002A  EF19  F000         	goto	i2u415_41
 14271  00002E  EF1B  F000         	goto	i2u415_40
 14272  000032                     i2u415_41:
 14273  000032  EF1D  F000         	goto	i2l334
 14274  000036                     i2u415_40:
 14275  000036                     
 14276                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 14277  000036  EC9D  F01B         	call	_TMR0_ISR	;wreg free
 14278  00003A                     i2l334:
 14279  00003A  C012  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14280  00003E  C011  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14281  000042  C010  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14282  000046  C00F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14283  00004A  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14284  00004C  0011               	retfie		f
 14285  00004E                     __end_of_INTERRUPT_InterruptManager:
 14286                           	callstack 0
 14287                           
 14288 ;; *************** function _TMR0_ISR *****************
 14289 ;; Defined at:
 14290 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;		None
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;		None
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  1    wreg      void 
 14297 ;; Registers used:
 14298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14299 ;; Tracked objects:
 14300 ;;		On entry : 0/0
 14301 ;;		On exit  : 0/0
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14308 ;;Total ram usage:        0 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; Hardware stack levels required when called:    2
 14311 ;; This function calls:
 14312 ;;		Absolute function
 14313 ;;		_TMR0_DefaultInterruptHandler
 14314 ;;		_myTMR0ISR
 14315 ;; This function is called by:
 14316 ;;		_INTERRUPT_InterruptManager
 14317 ;; This function uses a non-reentrant model
 14318 ;;
 14319                           
 14320                           	psect	text57
 14321  00373A                     __ptext57:
 14322                           	callstack 0
 14323  00373A                     _TMR0_ISR:
 14324                           	callstack 17
 14325  00373A                     
 14326                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 14327  00373A  94F2               	bcf	242,2,c	;volatile
 14328  00373C                     
 14329                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 14330  00373C  5044               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 14331  00373E  6ED7               	movwf	215,c	;volatile
 14332  003740                     
 14333                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 14334  003740  C043  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 14335  003744                     
 14336                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 14337  003744  5045               	movf	_TMR0_InterruptHandler^0,w,c
 14338  003746  1046               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 14339  003748  B4D8               	btfsc	status,2,c
 14340  00374A  EFA9  F01B         	goto	i2u386_41
 14341  00374E  EFAB  F01B         	goto	i2u386_40
 14342  003752                     i2u386_41:
 14343  003752  EFB7  F01B         	goto	i2l154
 14344  003756                     i2u386_40:
 14345  003756                     
 14346                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 14347  003756  D802               	call	i2u387_48
 14348  003758  EFB7  F01B         	goto	i2u387_49
 14349  00375C                     i2u387_48:
 14350  00375C  0005               	push	
 14351  00375E  6EFA               	movwf	pclath,c
 14352  003760  5045               	movf	_TMR0_InterruptHandler^0,w,c
 14353  003762  6EFD               	movwf	tosl,c
 14354  003764  5046               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 14355  003766  6EFE               	movwf	tosh,c
 14356  003768  6AFF               	clrf	tosu,c
 14357  00376A  50FA               	movf	pclath,w,c
 14358  00376C  0012               	return		;indir
 14359  00376E                     i2u387_49:
 14360  00376E                     i2l154:
 14361  00376E  0012               	return		;funcret
 14362  003770                     __end_of_TMR0_ISR:
 14363                           	callstack 0
 14364                           
 14365 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14366 ;; Defined at:
 14367 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 14368 ;; Parameters:    Size  Location     Type
 14369 ;;		None
 14370 ;; Auto vars:     Size  Location     Type
 14371 ;;		None
 14372 ;; Return value:  Size  Location     Type
 14373 ;;                  1    wreg      void 
 14374 ;; Registers used:
 14375 ;;		None
 14376 ;; Tracked objects:
 14377 ;;		On entry : 0/0
 14378 ;;		On exit  : 0/0
 14379 ;;		Unchanged: 0/0
 14380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14385 ;;Total ram usage:        0 bytes
 14386 ;; Hardware stack levels used:    1
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_TMR0_Initialize
 14391 ;;		_TMR0_ISR
 14392 ;; This function uses a non-reentrant model
 14393 ;;
 14394                           
 14395                           	psect	text58
 14396  003990                     __ptext58:
 14397                           	callstack 0
 14398  003990                     _TMR0_DefaultInterruptHandler:
 14399                           	callstack 18
 14400  003990  0012               	return		;funcret
 14401  003992                     __end_of_TMR0_DefaultInterruptHandler:
 14402                           	callstack 0
 14403                           
 14404 ;; *************** function _myTMR0ISR *****************
 14405 ;; Defined at:
 14406 ;;		line 474 in file "main.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;		None
 14409 ;; Auto vars:     Size  Location     Type
 14410 ;;  mic             2   12[COMRAM] unsigned short 
 14411 ;; Return value:  Size  Location     Type
 14412 ;;                  1    wreg      void 
 14413 ;; Registers used:
 14414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14415 ;; Tracked objects:
 14416 ;;		On entry : 0/0
 14417 ;;		On exit  : 0/0
 14418 ;;		Unchanged: 0/0
 14419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14424 ;;Total ram usage:        4 bytes
 14425 ;; Hardware stack levels used:    1
 14426 ;; Hardware stack levels required when called:    1
 14427 ;; This function calls:
 14428 ;;		_EPWM1_LoadDutyValue
 14429 ;;		_TMR0_ReadTimer
 14430 ;;		i2_TMR0_WriteTimer
 14431 ;; This function is called by:
 14432 ;;		_main
 14433 ;;		_TMR0_ISR
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text59
 14438  00182C                     __ptext59:
 14439                           	callstack 0
 14440  00182C                     _myTMR0ISR:
 14441                           	callstack 17
 14442  00182C                     
 14443                           ;main.c: 475:     ADCON0bits.GO_NOT_DONE = 1;
 14444  00182C  82C2               	bsf	194,1,c	;volatile
 14445  00182E                     
 14446                           ;main.c: 477:     TMR0_WriteTimer(0x10000 - (sampleRate - TMR0_ReadTimer()));
 14447  00182E  EC44  F01C         	call	_TMR0_ReadTimer	;wreg free
 14448  001832  0100               	movlb	0	; () banked
 14449  001834  51C2               	movf	_sampleRate& (0+255),w,b
 14450  001836  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 14451  001838  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 14452  00183A  51C3               	movf	(_sampleRate+1)& (0+255),w,b
 14453  00183C  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 14454  00183E  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 14455  001840  ECBD  F01C         	call	i2_TMR0_WriteTimer	;wreg free
 14456  001844                     
 14457                           ;main.c: 478:     static uint16_t bufferIndex = 0;;main.c: 479:     static myTMR0states_
      +                          t state = IDLE;;main.c: 480:     static uint8_t *buffer = sdCardBuffer1;;main.c: 481:   
      +                            static uint8_t useBuffer1 = 1;;main.c: 483:     uint16_t mic = ADRESH;
 14458  001844  CFC4 F00D          	movff	4036,myTMR0ISR@mic	;volatile
 14459  001848  6A0E               	clrf	(myTMR0ISR@mic+1)^0,c
 14460                           
 14461                           ;main.c: 485:     switch(state) {
 14462  00184A  EF68  F00D         	goto	i2l4220
 14463  00184E                     i2l4130:
 14464                           
 14465                           ;main.c: 487:             if (startCollect) {
 14466  00184E  504A               	movf	_startCollect^0,w,c
 14467  001850  B4D8               	btfsc	status,2,c
 14468  001852  EF2D  F00C         	goto	i2u359_41
 14469  001856  EF2F  F00C         	goto	i2u359_40
 14470  00185A                     i2u359_41:
 14471  00185A  EF44  F00C         	goto	i2l4140
 14472  00185E                     i2u359_40:
 14473  00185E                     
 14474                           ;main.c: 488:                 collecting = 1;
 14475  00185E  0E01               	movlw	1
 14476  001860  0100               	movlb	0	; () banked
 14477  001862  6FBD               	movwf	_collecting& (0+255),b
 14478                           
 14479                           ;main.c: 489:                 stopCollect = 0;
 14480  001864  0E00               	movlw	0
 14481  001866  6E49               	movwf	_stopCollect^0,c
 14482                           
 14483                           ;main.c: 490:                 state = MIC_ACQUIRE;
 14484  001868  0E04               	movlw	4
 14485  00186A  6E47               	movwf	myTMR0ISR@state^0,c
 14486                           
 14487                           ;main.c: 491:                 bufferIndex = 0;
 14488  00186C  0E00               	movlw	0
 14489  00186E  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14490  001870  0E00               	movlw	0
 14491  001872  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14492  001874                     
 14493                           ; BSR set to: 0
 14494                           ;main.c: 492:                 buffer = sdCardBuffer1;
 14495  001874  0EFC               	movlw	low _sdCardBuffer1
 14496  001876  6FC0               	movwf	myTMR0ISR@buffer& (0+255),b
 14497  001878  0E05               	movlw	high _sdCardBuffer1
 14498  00187A  6FC1               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14499  00187C                     
 14500                           ; BSR set to: 0
 14501                           ;main.c: 493:                 useBuffer1 = 1;
 14502  00187C  0E01               	movlw	1
 14503  00187E  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14504  001880                     
 14505                           ; BSR set to: 0
 14506                           ;main.c: 494:                 startCollect = 0;
 14507  001880  0E00               	movlw	0
 14508  001882  6E4A               	movwf	_startCollect^0,c
 14509                           
 14510                           ;main.c: 495:             } else if (doPlayback) {
 14511  001884  EF89  F00D         	goto	i2l648
 14512  001888                     i2l4140:
 14513  001888  0100               	movlb	0	; () banked
 14514  00188A  51BC               	movf	_doPlayback& (0+255),w,b
 14515  00188C  B4D8               	btfsc	status,2,c
 14516  00188E  EF4B  F00C         	goto	i2u360_41
 14517  001892  EF4D  F00C         	goto	i2u360_40
 14518  001896                     i2u360_41:
 14519  001896  EF89  F00D         	goto	i2l648
 14520  00189A                     i2u360_40:
 14521  00189A                     
 14522                           ; BSR set to: 0
 14523                           ;main.c: 496:                 useBuffer1 = 1;
 14524  00189A  0E01               	movlw	1
 14525  00189C  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14526                           
 14527                           ;main.c: 497:                 stopPlayback = 0;
 14528  00189E  0E00               	movlw	0
 14529  0018A0  6E48               	movwf	_stopPlayback^0,c
 14530  0018A2                     
 14531                           ; BSR set to: 0
 14532                           ;main.c: 498:                 buffer = sdCardBuffer1;
 14533  0018A2  0EFC               	movlw	low _sdCardBuffer1
 14534  0018A4  6FC0               	movwf	myTMR0ISR@buffer& (0+255),b
 14535  0018A6  0E05               	movlw	high _sdCardBuffer1
 14536  0018A8  6FC1               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14537  0018AA                     
 14538                           ; BSR set to: 0
 14539                           ;main.c: 499:                 bufferIndex = 0;
 14540  0018AA  0E00               	movlw	0
 14541  0018AC  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14542  0018AE  0E00               	movlw	0
 14543  0018B0  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14544  0018B2                     
 14545                           ; BSR set to: 0
 14546                           ;main.c: 500:                 state = PLAYBACK;
 14547  0018B2  0E02               	movlw	2
 14548  0018B4  6E47               	movwf	myTMR0ISR@state^0,c
 14549  0018B6  EF89  F00D         	goto	i2l648
 14550  0018BA                     i2l4150:
 14551                           
 14552                           ;main.c: 505:             if ((useBuffer1 && !buffer1Full) || (!useBuffer1 && !buffer2Fu
      +                          ll)) {
 14553  0018BA  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14554  0018BC  B4D8               	btfsc	status,2,c
 14555  0018BE  EF63  F00C         	goto	i2u361_41
 14556  0018C2  EF65  F00C         	goto	i2u361_40
 14557  0018C6                     i2u361_41:
 14558  0018C6  EF6E  F00C         	goto	i2l4154
 14559  0018CA                     i2u361_40:
 14560  0018CA  0100               	movlb	0	; () banked
 14561  0018CC  51BF               	movf	_buffer1Full& (0+255),w,b
 14562  0018CE  B4D8               	btfsc	status,2,c
 14563  0018D0  EF6C  F00C         	goto	i2u362_41
 14564  0018D4  EF6E  F00C         	goto	i2u362_40
 14565  0018D8                     i2u362_41:
 14566  0018D8  EF89  F00D         	goto	i2l648
 14567  0018DC                     i2u362_40:
 14568  0018DC                     i2l4154:
 14569  0018DC  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14570  0018DE  A4D8               	btfss	status,2,c
 14571  0018E0  EF74  F00C         	goto	i2u363_41
 14572  0018E4  EF76  F00C         	goto	i2u363_40
 14573  0018E8                     i2u363_41:
 14574  0018E8  EF81  F00C         	goto	i2l4158
 14575  0018EC                     i2u363_40:
 14576  0018EC  0100               	movlb	0	; () banked
 14577  0018EE  51BE               	movf	_buffer2Full& (0+255),w,b
 14578  0018F0  A4D8               	btfss	status,2,c
 14579  0018F2  EF7D  F00C         	goto	i2u364_41
 14580  0018F6  EF7F  F00C         	goto	i2u364_40
 14581  0018FA                     i2u364_41:
 14582  0018FA  EF81  F00C         	goto	i2l4158
 14583  0018FE                     i2u364_40:
 14584  0018FE  EF89  F00D         	goto	i2l648
 14585  001902                     i2l4158:
 14586                           
 14587                           ;main.c: 510:             EPWM1_LoadDutyValue(buffer[bufferIndex++]);
 14588  001902  5041               	movf	myTMR0ISR@bufferIndex^0,w,c
 14589  001904  0100               	movlb	0	; () banked
 14590  001906  25C0               	addwf	myTMR0ISR@buffer& (0+255),w,b
 14591  001908  6ED9               	movwf	fsr2l,c
 14592  00190A  5042               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14593  00190C  21C1               	addwfc	(myTMR0ISR@buffer+1)& (0+255),w,b
 14594  00190E  6EDA               	movwf	fsr2h,c
 14595  001910  50DF               	movf	indf2,w,c
 14596  001912  6E0B               	movwf	??_myTMR0ISR^0,c
 14597  001914  500B               	movf	??_myTMR0ISR^0,w,c
 14598  001916  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
 14599  001918  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
 14600  00191A  ECB8  F01B         	call	_EPWM1_LoadDutyValue	;wreg free
 14601  00191E  4A41               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14602  001920  2A42               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14603  001922                     
 14604                           ;main.c: 512:             if(bufferIndex == 512) {
 14605  001922  0E02               	movlw	2
 14606  001924  1842               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14607  001926  1041               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14608  001928  A4D8               	btfss	status,2,c
 14609  00192A  EF99  F00C         	goto	i2u365_41
 14610  00192E  EF9B  F00C         	goto	i2u365_40
 14611  001932                     i2u365_41:
 14612  001932  EF89  F00D         	goto	i2l648
 14613  001936                     i2u365_40:
 14614  001936                     
 14615                           ;main.c: 513:                 if (useBuffer1) {
 14616  001936  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14617  001938  B4D8               	btfsc	status,2,c
 14618  00193A  EFA1  F00C         	goto	i2u366_41
 14619  00193E  EFA3  F00C         	goto	i2u366_40
 14620  001942                     i2u366_41:
 14621  001942  EFB6  F00C         	goto	i2l4174
 14622  001946                     i2u366_40:
 14623  001946                     
 14624                           ;main.c: 514:                     buffer1Full = 0;
 14625  001946  0E00               	movlw	0
 14626  001948  0100               	movlb	0	; () banked
 14627  00194A  6FBF               	movwf	_buffer1Full& (0+255),b
 14628  00194C                     
 14629                           ; BSR set to: 0
 14630                           ;main.c: 515:                     buffer = sdCardBuffer2;
 14631  00194C  0EFC               	movlw	low _sdCardBuffer2
 14632  00194E  6FC0               	movwf	myTMR0ISR@buffer& (0+255),b
 14633  001950  0E03               	movlw	high _sdCardBuffer2
 14634  001952  6FC1               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14635  001954                     
 14636                           ; BSR set to: 0
 14637                           ;main.c: 516:                     if (!buffer2Full)
 14638  001954  51BE               	movf	_buffer2Full& (0+255),w,b
 14639  001956  A4D8               	btfss	status,2,c
 14640  001958  EFB0  F00C         	goto	i2u367_41
 14641  00195C  EFB2  F00C         	goto	i2u367_40
 14642  001960                     i2u367_41:
 14643  001960  EFC7  F00C         	goto	i2l632
 14644  001964                     i2u367_40:
 14645  001964                     i2l4172:
 14646                           
 14647                           ; BSR set to: 0
 14648                           ;main.c: 517:                         state = MIC_AWAIT_BUFFER;
 14649  001964  0E03               	movlw	3
 14650  001966  6E47               	movwf	myTMR0ISR@state^0,c
 14651  001968  EFC7  F00C         	goto	i2l632
 14652  00196C                     i2l4174:
 14653                           
 14654                           ;main.c: 519:                     buffer2Full = 0;
 14655  00196C  0E00               	movlw	0
 14656  00196E  0100               	movlb	0	; () banked
 14657  001970  6FBE               	movwf	_buffer2Full& (0+255),b
 14658  001972                     
 14659                           ; BSR set to: 0
 14660                           ;main.c: 520:                     buffer = sdCardBuffer1;
 14661  001972  0EFC               	movlw	low _sdCardBuffer1
 14662  001974  6FC0               	movwf	myTMR0ISR@buffer& (0+255),b
 14663  001976  0E05               	movlw	high _sdCardBuffer1
 14664  001978  6FC1               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14665  00197A                     
 14666                           ; BSR set to: 0
 14667                           ;main.c: 521:                     if (!buffer1Full)
 14668  00197A  51BF               	movf	_buffer1Full& (0+255),w,b
 14669  00197C  A4D8               	btfss	status,2,c
 14670  00197E  EFC3  F00C         	goto	i2u368_41
 14671  001982  EFC5  F00C         	goto	i2u368_40
 14672  001986                     i2u368_41:
 14673  001986  EFC7  F00C         	goto	i2l632
 14674  00198A                     i2u368_40:
 14675  00198A  EFB2  F00C         	goto	i2l4172
 14676  00198E                     i2l632:
 14677                           
 14678                           ; BSR set to: 0
 14679                           ;main.c: 524:                 useBuffer1 = !useBuffer1;
 14680  00198E  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14681  001990  B4D8               	btfsc	status,2,c
 14682  001992  EFCD  F00C         	goto	i2u369_41
 14683  001996  EFD0  F00C         	goto	i2u369_40
 14684  00199A                     i2u369_41:
 14685  00199A  0E01               	movlw	1
 14686  00199C  EFD1  F00C         	goto	i2u370_40
 14687  0019A0                     i2u369_40:
 14688  0019A0  0E00               	movlw	0
 14689  0019A2                     i2u370_40:
 14690  0019A2  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14691                           
 14692                           ;main.c: 525:                 bufferIndex = 0;
 14693  0019A4  0E00               	movlw	0
 14694  0019A6  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14695  0019A8  0E00               	movlw	0
 14696  0019AA  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14697                           
 14698                           ;main.c: 526:                 if (stopPlayback) {
 14699  0019AC  5048               	movf	_stopPlayback^0,w,c
 14700  0019AE  B4D8               	btfsc	status,2,c
 14701  0019B0  EFDC  F00C         	goto	i2u371_41
 14702  0019B4  EFDE  F00C         	goto	i2u371_40
 14703  0019B8                     i2u371_41:
 14704  0019B8  EF89  F00D         	goto	i2l648
 14705  0019BC                     i2u371_40:
 14706  0019BC                     
 14707                           ; BSR set to: 0
 14708                           ;main.c: 527:                     stopPlayback = 0;
 14709  0019BC  0E00               	movlw	0
 14710  0019BE  6E48               	movwf	_stopPlayback^0,c
 14711                           
 14712                           ;main.c: 528:                     state = IDLE;
 14713  0019C0  0E00               	movlw	0
 14714  0019C2  6E47               	movwf	myTMR0ISR@state^0,c
 14715                           
 14716                           ;main.c: 529:                     doPlayback = 0;
 14717  0019C4  0E00               	movlw	0
 14718  0019C6  6FBC               	movwf	_doPlayback& (0+255),b
 14719  0019C8  EF89  F00D         	goto	i2l648
 14720  0019CC                     i2l4184:
 14721                           
 14722                           ;main.c: 536:             if ((useBuffer1 && buffer1Full) || (!useBuffer1 && buffer2Full
      +                          )) {
 14723  0019CC  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14724  0019CE  B4D8               	btfsc	status,2,c
 14725  0019D0  EFEC  F00C         	goto	i2u372_41
 14726  0019D4  EFEE  F00C         	goto	i2u372_40
 14727  0019D8                     i2u372_41:
 14728  0019D8  EFF7  F00C         	goto	i2l4188
 14729  0019DC                     i2u372_40:
 14730  0019DC  0100               	movlb	0	; () banked
 14731  0019DE  51BF               	movf	_buffer1Full& (0+255),w,b
 14732  0019E0  A4D8               	btfss	status,2,c
 14733  0019E2  EFF5  F00C         	goto	i2u373_41
 14734  0019E6  EFF7  F00C         	goto	i2u373_40
 14735  0019EA                     i2u373_41:
 14736  0019EA  EF89  F00D         	goto	i2l648
 14737  0019EE                     i2u373_40:
 14738  0019EE                     i2l4188:
 14739  0019EE  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14740  0019F0  A4D8               	btfss	status,2,c
 14741  0019F2  EFFD  F00C         	goto	i2u374_41
 14742  0019F6  EFFF  F00C         	goto	i2u374_40
 14743  0019FA                     i2u374_41:
 14744  0019FA  EF0A  F00D         	goto	i2l4192
 14745  0019FE                     i2u374_40:
 14746  0019FE  0100               	movlb	0	; () banked
 14747  001A00  51BE               	movf	_buffer2Full& (0+255),w,b
 14748  001A02  B4D8               	btfsc	status,2,c
 14749  001A04  EF06  F00D         	goto	i2u375_41
 14750  001A08  EF08  F00D         	goto	i2u375_40
 14751  001A0C                     i2u375_41:
 14752  001A0C  EF0A  F00D         	goto	i2l4192
 14753  001A10                     i2u375_40:
 14754  001A10  EF89  F00D         	goto	i2l648
 14755  001A14                     i2l4192:
 14756                           
 14757                           ;main.c: 542:             buffer[bufferIndex++] = mic;
 14758  001A14  5041               	movf	myTMR0ISR@bufferIndex^0,w,c
 14759  001A16  0100               	movlb	0	; () banked
 14760  001A18  25C0               	addwf	myTMR0ISR@buffer& (0+255),w,b
 14761  001A1A  6ED9               	movwf	fsr2l,c
 14762  001A1C  5042               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14763  001A1E  21C1               	addwfc	(myTMR0ISR@buffer+1)& (0+255),w,b
 14764  001A20  6EDA               	movwf	fsr2h,c
 14765  001A22  C00D  FFDF         	movff	myTMR0ISR@mic,indf2
 14766  001A26                     
 14767                           ; BSR set to: 0
 14768  001A26  4A41               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14769  001A28  2A42               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14770  001A2A                     
 14771                           ; BSR set to: 0
 14772                           ;main.c: 544:             if(bufferIndex == 512) {
 14773  001A2A  0E02               	movlw	2
 14774  001A2C  1842               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14775  001A2E  1041               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14776  001A30  A4D8               	btfss	status,2,c
 14777  001A32  EF1D  F00D         	goto	i2u376_41
 14778  001A36  EF1F  F00D         	goto	i2u376_40
 14779  001A3A                     i2u376_41:
 14780  001A3A  EF89  F00D         	goto	i2l648
 14781  001A3E                     i2u376_40:
 14782  001A3E                     
 14783                           ; BSR set to: 0
 14784                           ;main.c: 545:                 if (useBuffer1) {
 14785  001A3E  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14786  001A40  B4D8               	btfsc	status,2,c
 14787  001A42  EF25  F00D         	goto	i2u377_41
 14788  001A46  EF27  F00D         	goto	i2u377_40
 14789  001A4A                     i2u377_41:
 14790  001A4A  EF39  F00D         	goto	i2l4208
 14791  001A4E                     i2u377_40:
 14792  001A4E                     
 14793                           ; BSR set to: 0
 14794                           ;main.c: 546:                     buffer1Full = 1;
 14795  001A4E  0E01               	movlw	1
 14796  001A50  6FBF               	movwf	_buffer1Full& (0+255),b
 14797  001A52                     
 14798                           ; BSR set to: 0
 14799                           ;main.c: 547:                     buffer = sdCardBuffer2;
 14800  001A52  0EFC               	movlw	low _sdCardBuffer2
 14801  001A54  6FC0               	movwf	myTMR0ISR@buffer& (0+255),b
 14802  001A56  0E03               	movlw	high _sdCardBuffer2
 14803  001A58  6FC1               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14804  001A5A                     
 14805                           ; BSR set to: 0
 14806                           ;main.c: 548:                     if (buffer2Full)
 14807  001A5A  51BE               	movf	_buffer2Full& (0+255),w,b
 14808  001A5C  B4D8               	btfsc	status,2,c
 14809  001A5E  EF33  F00D         	goto	i2u378_41
 14810  001A62  EF35  F00D         	goto	i2u378_40
 14811  001A66                     i2u378_41:
 14812  001A66  EF49  F00D         	goto	i2l645
 14813  001A6A                     i2u378_40:
 14814  001A6A                     i2l4206:
 14815                           
 14816                           ; BSR set to: 0
 14817                           ;main.c: 549:                         state = MIC_AWAIT_BUFFER;
 14818  001A6A  0E03               	movlw	3
 14819  001A6C  6E47               	movwf	myTMR0ISR@state^0,c
 14820  001A6E  EF49  F00D         	goto	i2l645
 14821  001A72                     i2l4208:
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;main.c: 551:                     buffer2Full = 1;
 14825  001A72  0E01               	movlw	1
 14826  001A74  6FBE               	movwf	_buffer2Full& (0+255),b
 14827  001A76                     
 14828                           ; BSR set to: 0
 14829                           ;main.c: 552:                     buffer = sdCardBuffer1;
 14830  001A76  0EFC               	movlw	low _sdCardBuffer1
 14831  001A78  6FC0               	movwf	myTMR0ISR@buffer& (0+255),b
 14832  001A7A  0E05               	movlw	high _sdCardBuffer1
 14833  001A7C  6FC1               	movwf	(myTMR0ISR@buffer+1)& (0+255),b
 14834  001A7E                     
 14835                           ; BSR set to: 0
 14836                           ;main.c: 553:                     if (buffer1Full)
 14837  001A7E  51BF               	movf	_buffer1Full& (0+255),w,b
 14838  001A80  B4D8               	btfsc	status,2,c
 14839  001A82  EF45  F00D         	goto	i2u379_41
 14840  001A86  EF47  F00D         	goto	i2u379_40
 14841  001A8A                     i2u379_41:
 14842  001A8A  EF49  F00D         	goto	i2l645
 14843  001A8E                     i2u379_40:
 14844  001A8E  EF35  F00D         	goto	i2l4206
 14845  001A92                     i2l645:
 14846                           
 14847                           ; BSR set to: 0
 14848                           ;main.c: 556:                 useBuffer1 = !useBuffer1;
 14849  001A92  504C               	movf	myTMR0ISR@useBuffer1^0,w,c
 14850  001A94  B4D8               	btfsc	status,2,c
 14851  001A96  EF4F  F00D         	goto	i2u380_41
 14852  001A9A  EF52  F00D         	goto	i2u380_40
 14853  001A9E                     i2u380_41:
 14854  001A9E  0E01               	movlw	1
 14855  001AA0  EF53  F00D         	goto	i2u381_40
 14856  001AA4                     i2u380_40:
 14857  001AA4  0E00               	movlw	0
 14858  001AA6                     i2u381_40:
 14859  001AA6  6E4C               	movwf	myTMR0ISR@useBuffer1^0,c
 14860                           
 14861                           ;main.c: 557:                 bufferIndex = 0;
 14862  001AA8  0E00               	movlw	0
 14863  001AAA  6E42               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14864  001AAC  0E00               	movlw	0
 14865  001AAE  6E41               	movwf	myTMR0ISR@bufferIndex^0,c
 14866                           
 14867                           ;main.c: 558:                 if (stopCollect) {
 14868  001AB0  5049               	movf	_stopCollect^0,w,c
 14869  001AB2  B4D8               	btfsc	status,2,c
 14870  001AB4  EF5E  F00D         	goto	i2u382_41
 14871  001AB8  EF60  F00D         	goto	i2u382_40
 14872  001ABC                     i2u382_41:
 14873  001ABC  EF89  F00D         	goto	i2l648
 14874  001AC0                     i2u382_40:
 14875  001AC0                     
 14876                           ; BSR set to: 0
 14877                           ;main.c: 559:                     stopCollect = 0;
 14878  001AC0  0E00               	movlw	0
 14879  001AC2  6E49               	movwf	_stopCollect^0,c
 14880                           
 14881                           ;main.c: 560:                     collecting = 0;
 14882  001AC4  0E00               	movlw	0
 14883  001AC6  6FBD               	movwf	_collecting& (0+255),b
 14884                           
 14885                           ;main.c: 561:                     state = IDLE;
 14886  001AC8  0E00               	movlw	0
 14887  001ACA  6E47               	movwf	myTMR0ISR@state^0,c
 14888  001ACC  EF89  F00D         	goto	i2l648
 14889  001AD0                     i2l4220:
 14890  001AD0  5047               	movf	myTMR0ISR@state^0,w,c
 14891  001AD2  6E0B               	movwf	??_myTMR0ISR^0,c
 14892  001AD4  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 14893                           
 14894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14895                           ; Switch size 1, requested type "simple"
 14896                           ; Number of cases is 1, Range of values is 0 to 0
 14897                           ; switch strategies available:
 14898                           ; Name         Instructions Cycles
 14899                           ; simple_byte            4     3 (average)
 14900                           ;	Chosen strategy is simple_byte
 14901  001AD6  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 14902  001AD8  0A00               	xorlw	0	; case 0
 14903  001ADA  B4D8               	btfsc	status,2,c
 14904  001ADC  EF72  F00D         	goto	i2l6658
 14905  001AE0  EF89  F00D         	goto	i2l648
 14906  001AE4                     i2l6658:
 14907                           
 14908                           ; Switch size 1, requested type "simple"
 14909                           ; Number of cases is 5, Range of values is 0 to 4
 14910                           ; switch strategies available:
 14911                           ; Name         Instructions Cycles
 14912                           ; simple_byte           16     9 (average)
 14913                           ;	Chosen strategy is simple_byte
 14914  001AE4  500B               	movf	??_myTMR0ISR^0,w,c
 14915  001AE6  0A00               	xorlw	0	; case 0
 14916  001AE8  B4D8               	btfsc	status,2,c
 14917  001AEA  EF27  F00C         	goto	i2l4130
 14918  001AEE  0A01               	xorlw	1	; case 1
 14919  001AF0  B4D8               	btfsc	status,2,c
 14920  001AF2  EF5D  F00C         	goto	i2l4150
 14921  001AF6  0A03               	xorlw	3	; case 2
 14922  001AF8  B4D8               	btfsc	status,2,c
 14923  001AFA  EF81  F00C         	goto	i2l4158
 14924  001AFE  0A01               	xorlw	1	; case 3
 14925  001B00  B4D8               	btfsc	status,2,c
 14926  001B02  EFE6  F00C         	goto	i2l4184
 14927  001B06  0A07               	xorlw	7	; case 4
 14928  001B08  B4D8               	btfsc	status,2,c
 14929  001B0A  EF0A  F00D         	goto	i2l4192
 14930  001B0E  EF89  F00D         	goto	i2l648
 14931  001B12                     i2l648:
 14932  001B12  0012               	return		;funcret
 14933  001B14                     __end_of_myTMR0ISR:
 14934                           	callstack 0
 14935                           
 14936 ;; *************** function i2_TMR0_WriteTimer *****************
 14937 ;; Defined at:
 14938 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 14939 ;; Parameters:    Size  Location     Type
 14940 ;;  timerVal        2    8[COMRAM] unsigned short 
 14941 ;; Auto vars:     Size  Location     Type
 14942 ;;		None
 14943 ;; Return value:  Size  Location     Type
 14944 ;;                  1    wreg      void 
 14945 ;; Registers used:
 14946 ;;		wreg, status,2
 14947 ;; Tracked objects:
 14948 ;;		On entry : 0/0
 14949 ;;		On exit  : 0/0
 14950 ;;		Unchanged: 0/0
 14951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14956 ;;Total ram usage:        2 bytes
 14957 ;; Hardware stack levels used:    1
 14958 ;; This function calls:
 14959 ;;		Nothing
 14960 ;; This function is called by:
 14961 ;;		_myTMR0ISR
 14962 ;; This function uses a non-reentrant model
 14963 ;;
 14964                           
 14965                           	psect	text60
 14966  00397A                     __ptext60:
 14967                           	callstack 0
 14968  00397A                     i2_TMR0_WriteTimer:
 14969                           	callstack 17
 14970  00397A                     
 14971                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 14972  00397A  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 14973  00397C  6ED7               	movwf	215,c	;volatile
 14974  00397E                     
 14975                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 14976  00397E  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 14977  003982  0012               	return		;funcret
 14978  003984                     __end_ofi2_TMR0_WriteTimer:
 14979                           	callstack 0
 14980                           
 14981 ;; *************** function _TMR0_ReadTimer *****************
 14982 ;; Defined at:
 14983 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 14984 ;; Parameters:    Size  Location     Type
 14985 ;;		None
 14986 ;; Auto vars:     Size  Location     Type
 14987 ;;  readVal         2    4[COMRAM] unsigned short 
 14988 ;;  readValHigh     1    7[COMRAM] unsigned char 
 14989 ;;  readValLow      1    6[COMRAM] unsigned char 
 14990 ;; Return value:  Size  Location     Type
 14991 ;;                  2    0[COMRAM] unsigned short 
 14992 ;; Registers used:
 14993 ;;		wreg, status,2
 14994 ;; Tracked objects:
 14995 ;;		On entry : 0/0
 14996 ;;		On exit  : 0/0
 14997 ;;		Unchanged: 0/0
 14998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15000 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15002 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15003 ;;Total ram usage:        8 bytes
 15004 ;; Hardware stack levels used:    1
 15005 ;; This function calls:
 15006 ;;		Nothing
 15007 ;; This function is called by:
 15008 ;;		_myTMR0ISR
 15009 ;; This function uses a non-reentrant model
 15010 ;;
 15011                           
 15012                           	psect	text61
 15013  003888                     __ptext61:
 15014                           	callstack 0
 15015  003888                     _TMR0_ReadTimer:
 15016                           	callstack 17
 15017  003888                     
 15018                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 15019  003888  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 15020                           
 15021                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 15022  00388C  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 15023  003890                     
 15024                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 15025  003890  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 15026  003892  6E03               	movwf	??_TMR0_ReadTimer^0,c
 15027  003894  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 15028  003896  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 15029  003898  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 15030  00389C                     
 15031                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 15032  00389C  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 15033  0038A0  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 15034  0038A4  0012               	return		;funcret
 15035  0038A6                     __end_of_TMR0_ReadTimer:
 15036                           	callstack 0
 15037                           
 15038 ;; *************** function _EPWM1_LoadDutyValue *****************
 15039 ;; Defined at:
 15040 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 15041 ;; Parameters:    Size  Location     Type
 15042 ;;  dutyValue       2    0[COMRAM] unsigned short 
 15043 ;; Auto vars:     Size  Location     Type
 15044 ;;		None
 15045 ;; Return value:  Size  Location     Type
 15046 ;;                  1    wreg      void 
 15047 ;; Registers used:
 15048 ;;		wreg, status,2, status,0
 15049 ;; Tracked objects:
 15050 ;;		On entry : 0/0
 15051 ;;		On exit  : 0/0
 15052 ;;		Unchanged: 0/0
 15053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15058 ;;Total ram usage:        4 bytes
 15059 ;; Hardware stack levels used:    1
 15060 ;; This function calls:
 15061 ;;		Nothing
 15062 ;; This function is called by:
 15063 ;;		_myTMR0ISR
 15064 ;; This function uses a non-reentrant model
 15065 ;;
 15066                           
 15067                           	psect	text62
 15068  003770                     __ptext62:
 15069                           	callstack 0
 15070  003770                     _EPWM1_LoadDutyValue:
 15071                           	callstack 17
 15072  003770                     
 15073                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 15074  003770  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 15075  003774  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 15076  003778  90D8               	bcf	status,0,c
 15077  00377A  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 15078  00377C  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 15079  00377E  90D8               	bcf	status,0,c
 15080  003780  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 15081  003782  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 15082  003784  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
 15083  003786  6EBE               	movwf	190,c	;volatile
 15084                           
 15085                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 15086  003788  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 15087  00378C  0E03               	movlw	3
 15088  00378E  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 15089  003790  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
 15090  003792  0EF0               	movlw	240
 15091  003794  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 15092  003796  50BD               	movf	189,w,c	;volatile
 15093  003798  0BCF               	andlw	207
 15094  00379A  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
 15095  00379C  6EBD               	movwf	189,c	;volatile
 15096  00379E  0012               	return		;funcret
 15097  0037A0                     __end_of_EPWM1_LoadDutyValue:
 15098                           	callstack 0
 15099                           
 15100                           	psect	text63
 15101  000000                     __ptext63:
 15102                           	callstack 0
 15103  000000                     
 15104                           	psect	rparam
 15105  0000                     
 15106                           	psect	temp
 15107  00004D                     btemp:
 15108                           	callstack 0
 15109  00004D                     	ds	1
 15110  0000                     int$flags	set	btemp
 15111  0000                     wtemp8	set	btemp+1
 15112  0000                     ttemp5	set	btemp+1
 15113  0000                     ttemp6	set	btemp+4
 15114  0000                     ttemp7	set	btemp+8
 15115                           
 15116                           	psect	idloc
 15117                           
 15118                           ;Config register IDLOC0 @ 0x200000
 15119                           ;	unspecified, using default values
 15120  200000                     	org	2097152
 15121  200000  FF                 	db	255
 15122                           
 15123                           ;Config register IDLOC1 @ 0x200001
 15124                           ;	unspecified, using default values
 15125  200001                     	org	2097153
 15126  200001  FF                 	db	255
 15127                           
 15128                           ;Config register IDLOC2 @ 0x200002
 15129                           ;	unspecified, using default values
 15130  200002                     	org	2097154
 15131  200002  FF                 	db	255
 15132                           
 15133                           ;Config register IDLOC3 @ 0x200003
 15134                           ;	unspecified, using default values
 15135  200003                     	org	2097155
 15136  200003  FF                 	db	255
 15137                           
 15138                           ;Config register IDLOC4 @ 0x200004
 15139                           ;	unspecified, using default values
 15140  200004                     	org	2097156
 15141  200004  FF                 	db	255
 15142                           
 15143                           ;Config register IDLOC5 @ 0x200005
 15144                           ;	unspecified, using default values
 15145  200005                     	org	2097157
 15146  200005  FF                 	db	255
 15147                           
 15148                           ;Config register IDLOC6 @ 0x200006
 15149                           ;	unspecified, using default values
 15150  200006                     	org	2097158
 15151  200006  FF                 	db	255
 15152                           
 15153                           ;Config register IDLOC7 @ 0x200007
 15154                           ;	unspecified, using default values
 15155  200007                     	org	2097159
 15156  200007  FF                 	db	255
 15157                           
 15158                           	psect	config
 15159                           
 15160                           ; Padding undefined space
 15161  300000                     	org	3145728
 15162  300000  FF                 	db	255
 15163                           
 15164                           ;Config register CONFIG1H @ 0x300001
 15165                           ;	Oscillator Selection bits
 15166                           ;	FOSC = INTIO67, Internal oscillator block
 15167                           ;	4X PLL Enable
 15168                           ;	PLLCFG = OFF, Oscillator used directly
 15169                           ;	Primary clock enable bit
 15170                           ;	PRICLKEN = ON, Primary clock enabled
 15171                           ;	Fail-Safe Clock Monitor Enable bit
 15172                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15173                           ;	Internal/External Oscillator Switchover bit
 15174                           ;	IESO = OFF, Oscillator Switchover mode disabled
 15175  300001                     	org	3145729
 15176  300001  28                 	db	40
 15177                           
 15178                           ;Config register CONFIG2L @ 0x300002
 15179                           ;	Power-up Timer Enable bit
 15180                           ;	PWRTEN = OFF, Power up timer disabled
 15181                           ;	Brown-out Reset Enable bits
 15182                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15183                           ;	Brown Out Reset Voltage bits
 15184                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15185  300002                     	org	3145730
 15186  300002  1F                 	db	31
 15187                           
 15188                           ;Config register CONFIG2H @ 0x300003
 15189                           ;	Watchdog Timer Enable bits
 15190                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15191                           ;	Watchdog Timer Postscale Select bits
 15192                           ;	WDTPS = 32768, 1:32768
 15193  300003                     	org	3145731
 15194  300003  3C                 	db	60
 15195                           
 15196                           ; Padding undefined space
 15197  300004                     	org	3145732
 15198  300004  FF                 	db	255
 15199                           
 15200                           ;Config register CONFIG3H @ 0x300005
 15201                           ;	CCP2 MUX bit
 15202                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15203                           ;	PORTB A/D Enable bit
 15204                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 15205                           ;	P3A/CCP3 Mux bit
 15206                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15207                           ;	HFINTOSC Fast Start-up
 15208                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15209                           ;	Timer3 Clock input mux bit
 15210                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15211                           ;	ECCP2 B output mux bit
 15212                           ;	P2BMX = PORTB5, P2B is on RB5
 15213                           ;	MCLR Pin Enable bit
 15214                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15215  300005                     	org	3145733
 15216  300005  BF                 	db	191
 15217                           
 15218                           ;Config register CONFIG4L @ 0x300006
 15219                           ;	Stack Full/Underflow Reset Enable bit
 15220                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15221                           ;	Single-Supply ICSP Enable bit
 15222                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15223                           ;	Extended Instruction Set Enable bit
 15224                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15225                           ;	Background Debug
 15226                           ;	DEBUG = OFF, Disabled
 15227  300006                     	org	3145734
 15228  300006  85                 	db	133
 15229                           
 15230                           ; Padding undefined space
 15231  300007                     	org	3145735
 15232  300007  FF                 	db	255
 15233                           
 15234                           ;Config register CONFIG5L @ 0x300008
 15235                           ;	Code Protection Block 0
 15236                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 15237                           ;	Code Protection Block 1
 15238                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 15239                           ;	Code Protection Block 2
 15240                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 15241                           ;	Code Protection Block 3
 15242                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 15243  300008                     	org	3145736
 15244  300008  0F                 	db	15
 15245                           
 15246                           ;Config register CONFIG5H @ 0x300009
 15247                           ;	Boot Block Code Protection bit
 15248                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15249                           ;	Data EEPROM Code Protection bit
 15250                           ;	CPD = OFF, Data EEPROM not code-protected
 15251  300009                     	org	3145737
 15252  300009  C0                 	db	192
 15253                           
 15254                           ;Config register CONFIG6L @ 0x30000A
 15255                           ;	Write Protection Block 0
 15256                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 15257                           ;	Write Protection Block 1
 15258                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 15259                           ;	Write Protection Block 2
 15260                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 15261                           ;	Write Protection Block 3
 15262                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 15263  30000A                     	org	3145738
 15264  30000A  0F                 	db	15
 15265                           
 15266                           ;Config register CONFIG6H @ 0x30000B
 15267                           ;	Configuration Register Write Protection bit
 15268                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15269                           ;	Boot Block Write Protection bit
 15270                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15271                           ;	Data EEPROM Write Protection bit
 15272                           ;	WRTD = OFF, Data EEPROM not write-protected
 15273  30000B                     	org	3145739
 15274  30000B  E0                 	db	224
 15275                           
 15276                           ;Config register CONFIG7L @ 0x30000C
 15277                           ;	Table Read Protection Block 0
 15278                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 15279                           ;	Table Read Protection Block 1
 15280                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15281                           ;	Table Read Protection Block 2
 15282                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 15283                           ;	Table Read Protection Block 3
 15284                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 15285  30000C                     	org	3145740
 15286  30000C  0F                 	db	15
 15287                           
 15288                           ;Config register CONFIG7H @ 0x30000D
 15289                           ;	Boot Block Table Read Protection bit
 15290                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15291  30000D                     	org	3145741
 15292  30000D  40                 	db	64
 15293                           tosu	equ	0xFFF
 15294                           tosh	equ	0xFFE
 15295                           tosl	equ	0xFFD
 15296                           stkptr	equ	0xFFC
 15297                           pclatu	equ	0xFFB
 15298                           pclath	equ	0xFFA
 15299                           pcl	equ	0xFF9
 15300                           tblptru	equ	0xFF8
 15301                           tblptrh	equ	0xFF7
 15302                           tblptrl	equ	0xFF6
 15303                           tablat	equ	0xFF5
 15304                           prodh	equ	0xFF4
 15305                           prodl	equ	0xFF3
 15306                           indf0	equ	0xFEF
 15307                           postinc0	equ	0xFEE
 15308                           postdec0	equ	0xFED
 15309                           preinc0	equ	0xFEC
 15310                           plusw0	equ	0xFEB
 15311                           fsr0h	equ	0xFEA
 15312                           fsr0l	equ	0xFE9
 15313                           wreg	equ	0xFE8
 15314                           indf1	equ	0xFE7
 15315                           postinc1	equ	0xFE6
 15316                           postdec1	equ	0xFE5
 15317                           preinc1	equ	0xFE4
 15318                           plusw1	equ	0xFE3
 15319                           fsr1h	equ	0xFE2
 15320                           fsr1l	equ	0xFE1
 15321                           bsr	equ	0xFE0
 15322                           indf2	equ	0xFDF
 15323                           postinc2	equ	0xFDE
 15324                           postdec2	equ	0xFDD
 15325                           preinc2	equ	0xFDC
 15326                           plusw2	equ	0xFDB
 15327                           fsr2h	equ	0xFDA
 15328                           fsr2l	equ	0xFD9
 15329                           status	equ	0xFD8

Data Sizes:
    Strings     3225
    Constant    30
    Data        5
    BSS         2244
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      76
    BANK0           160     91     100
    BANK1           256     78     252
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1896_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[13]), 
		 -> STR_54(CODE[23]), STR_53(CODE[5]), STR_52(CODE[25]), STR_51(CODE[20]), 
		 -> STR_50(CODE[71]), STR_49(CODE[50]), STR_48(CODE[22]), STR_47(CODE[33]), 
		 -> STR_46(CODE[58]), STR_45(CODE[3]), STR_44(CODE[68]), STR_43(CODE[58]), 
		 -> STR_42(CODE[7]), STR_41(CODE[2]), STR_40(CODE[5]), STR_39(CODE[31]), 
		 -> STR_38(CODE[27]), STR_37(CODE[3]), STR_36(CODE[76]), STR_35(CODE[30]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[13]), 
		 -> STR_54(CODE[23]), STR_53(CODE[5]), STR_52(CODE[25]), STR_51(CODE[20]), 
		 -> STR_50(CODE[71]), STR_49(CODE[50]), STR_48(CODE[22]), STR_47(CODE[33]), 
		 -> STR_46(CODE[58]), STR_45(CODE[3]), STR_44(CODE[68]), STR_43(CODE[58]), 
		 -> STR_42(CODE[7]), STR_41(CODE[2]), STR_40(CODE[5]), STR_39(CODE[31]), 
		 -> STR_38(CODE[27]), STR_37(CODE[3]), STR_36(CODE[76]), STR_35(CODE[30]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[13]), 
		 -> STR_54(CODE[23]), STR_53(CODE[5]), STR_52(CODE[25]), STR_51(CODE[20]), 
		 -> STR_50(CODE[71]), STR_49(CODE[50]), STR_48(CODE[22]), STR_47(CODE[33]), 
		 -> STR_46(CODE[58]), STR_45(CODE[3]), STR_44(CODE[68]), STR_43(CODE[58]), 
		 -> STR_42(CODE[7]), STR_41(CODE[2]), STR_40(CODE[5]), STR_39(CODE[31]), 
		 -> STR_38(CODE[27]), STR_37(CODE[3]), STR_36(CODE[76]), STR_35(CODE[30]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[13]), 
		 -> STR_54(CODE[23]), STR_53(CODE[5]), STR_52(CODE[25]), STR_51(CODE[20]), 
		 -> STR_50(CODE[71]), STR_49(CODE[50]), STR_48(CODE[22]), STR_47(CODE[33]), 
		 -> STR_46(CODE[58]), STR_45(CODE[3]), STR_44(CODE[68]), STR_43(CODE[58]), 
		 -> STR_42(CODE[7]), STR_41(CODE[2]), STR_40(CODE[5]), STR_39(CODE[31]), 
		 -> STR_38(CODE[27]), STR_37(CODE[3]), STR_36(CODE[76]), STR_35(CODE[30]), 
		 -> STR_34(CODE[4]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    myTMR0ISR@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _printAscii->_printf
    _printAddress->_printf
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                82    82      0  210303
                                             87 BANK0      4     4      0
                                              0 BANK1     78    78      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                   _incrementAddress
                   _microSecondDelay
                       _printAddress
                         _printAscii
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAscii                                           0     0      0   40088
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAddress                                         4     0      4   40420
                                             77 BANK0      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _microSecondDelay                                     4     2      2     338
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _incrementAddress                                     4     0      4     788
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   40878
                                             77 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             20 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0     124
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6    1548
                                             19 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6    1008
                                             19 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      96
                                             19 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   40444
                                             77 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   40088
                                             67 BANK0     10     4      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28643
                                             59 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   28080
                                             28 BANK0     31    25      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7005
                                             47 COMRAM    11     0     11
                                              0 BANK0     28    28      0
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             24 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6387
                                             47 COMRAM    10     0     10
                                              0 BANK0     22    22      0
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             18 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             18 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7241
                                             47 COMRAM    10     0     10
                                              0 BANK0     26    26      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4975
                                             36 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             29 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             36 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             18 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             18 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             29 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1546
                                             20 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             19 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             25 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             18 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             18 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     282
                                             14 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     282
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           4     4      0     282
                                             10 COMRAM     4     4      0
                _EPWM1_LoadDutyValue
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _EPWM1_LoadDutyValue                                 4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _incrementAddress
   _microSecondDelay
   _printAddress
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printAscii
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _EPWM1_LoadDutyValue
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4E      FC       7       98.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3A      4C       1       80.9%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      12        0.0%
DATA                 0      0     9AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 05 10:25:26 2020

                                            l17 3886                                              l71 391A  
                                            l63 3574                                              l80 37F4  
                                            l90 3906                                              l84 381A  
                                            l87 38F4                                              l96 3978  
                          myTMR0ISR@bufferIndex 0041                            SDCARD_ReadBlock@addr 0014  
                           ___wmul@multiplicand 0015                                 _timer0ReloadVal 0043  
                                hexDumpBuffer@i 00B5                                  hexDumpBuffer@j 00B1  
                                           l111 395A                                             l114 396E  
                                           l108 3964                                             l135 3702  
                                           l219 37CA                                             l251 3840  
                                           l147 3946                                             l157 3950  
                                           l173 393C                                             l254 38B2  
                                           l327 398A                                             l353 38F0  
                                           l257 38C0                                             l290 38D6  
                                           l282 30B4                                             l291 38DA  
                                           l603 3582                                             l285 398E  
                                           l605 35B0                                             l278 392C  
                                           l470 03AA                                             l288 38C8  
                                           l457 00B4                                             l474 03EC  
                                           l723 25E4                                             l651 24C8  
                                           l717 2B4E                                             l734 26B4  
                                           l582 1132                                             l559 0CB4  
                                           l672 314E                                             l592 34B2  
                                           l737 3866                                             l682 3270  
                                           l851 29D6                                             l499 0646  
                                           l692 3624                                             l684 3272  
                                           l687 35EE                                             l599 3352  
                                           l864 2CB2                                             l698 2A0E  
                                           _PR2 000FBB                                    _startCollect 004A  
                                           _abs 34F8                                             _pad 2F48  
                              main@writeAddress 0180                                 _TMR2_Initialize 392E  
                                           prod 000FF3                                             tosl 000FFD  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                   main@address 01DA                                     _stopCollect 0049  
                                          ?_abs 0025                                            l1182 2DA2  
                                          l1175 2D82                                            l1415 37F2  
                                          l1192 2F46                                            l1504 210E  
                                          l1185 2F26                                            l1521 1E38  
                                          l1514 22DC                                            l1506 2116  
                                          l1620 2846                                            l1452 2F8C  
                                          l1542 2072                                            l1623 284E  
                                          l1471 2E4A                                            l1455 2FCE  
                                          l1519 1E30                                            l1632 36CC  
                                          l1640 346E                                            l1544 20D4  
                                          l1528 1ED2                                            l1473 2E76  
                                          l1457 3008                                            l1481 1BBC  
                                          l1626 35EC                                            l1571 182A  
                                          l1468 2E08                                            l1661 31E4  
                                          l1646 3694                                            l1558 139E  
                                          l1479 1BB4                                            l5200 296C  
                                          l1592 3536                                            l1680 3414  
                                          l1584 33B6                                            l6000 2AEC  
                                          l1585 33BE                                            l5122 38F4  
                                          l5130 3162                                            l5210 29B6  
                                          l5202 296E                                            l6010 2B0A  
                                          l6002 2AF2                                            l1675 3738  
                                          l1499 1DF6                                            l1691 365C  
                                          l5124 3902                                            l5132 3174  
                                          l5204 2980                                            l5220 2B82  
                                          l5300 2FAC                                            l6020 2B3C  
                                          l6012 2B10                                            l6004 2AF8  
                                          l6100 00A0                                            l1589 352E  
                                          l1669 34F6                                            l1685 341C  
                                          l5126 3972                                            l5134 317E  
                                          l5206 2986                                            l5230 2BDA  
                                          l5222 2B86                                            l5214 2B50  
                                          l5310 34F8                                            l5142 34B4  
                                          l5150 3704                                            l5302 2FB0  
                                          l6014 2B1A                                            l6006 2AFE  
                                          l6030 24E2                                            l6022 24CA  
                                          l6110 00CE                                            l6102 00A4  
                                          l5136 319C                                            l5128 3150  
                                          l5208 2996                                            l5240 2C5C  
                                          l5232 2BEE                                            l5224 2B94  
                                          l5216 2B54                                            l5312 3512  
                                          l5144 34C0                                            l5152 3710  
                                          l5304 2FDC                                            l5400 1BFC  
                                          l5160 3626                                            l6016 2B1C  
                                          l6008 2B04                                            l6040 2550  
                                          l6032 24F4                                            l6024 24D8  
                                          l6200 0512                                            l6120 00F2  
                                          l6112 00D0                                            l6104 00A6  
                                          l5138 31D2                                            l5170 2850  
                                          l5234 2BFC                                            l5242 2C62  
                                          l5226 2BB4                                            l5218 2B62  
                                          l5146 34D2                                            l5154 3714  
                                          l5306 2FF0                                            l5402 1C02  
                                          l5410 1CF6                                            l5250 2CB4  
                                          l5314 365E                                            l5322 33C0  
                                          l6018 2B2C                                            l6050 25BC  
                                          l6042 255C                                            l6034 2512  
                                          l6210 055E                                            l6202 0522  
                                          l6130 0126                                            l6122 0100  
                                          l6114 00D2                                            l6106 00B2  
                                          l5164 3842                                            l5332 3696  
                                          l5340 3436                                            l5180 2894  
                                          l5172 2854                                            l5244 2C72  
                                          l5236 2C2A                                            l5228 2BD2  
                                          l5148 34D6                                            l5156 372C  
                                          l5412 1D12                                            l5420 1D72  
                                          l5404 1C84                                            l5260 2D08  
                                          l5252 2CC0                                            l6060 2620  
                                          l6044 256E                                            l6052 25C2  
                                          l6036 251E                                            l6300 08AA  
                                          l6220 060C                                            l6212 05BA  
                                          l6204 0536                                            l6140 036E  
                                          l6132 013A                                            l6124 010E  
                                          l6116 00D6                                            l6108 00C2  
                                          l5166 385E                                            l5342 3464  
                                          l5350 2DB6                                            l5190 28EA  
                                          l5182 28B4                                            l5174 2862  
                                          l5246 2C92                                            l5238 2C4A  
                                          l5430 1DB6                                            l5422 1D84  
                                          l5414 1D30                                            l5406 1C8C  
                                          l5270 2D7C                                            l5262 2D1A  
                                          l5254 2CDE                                            l5318 35B2  
                                          l5326 33F6                                            l5510 1F64  
                                          l5502 1F06                                            l6070 268C  
                                          l6062 262C                                            l6054 25D8  
                                          l6046 258A                                            l6038 2532  
                                          l6302 08CA                                            l6310 0922  
                                          l6230 067A                                            l6222 061C  
                                          l6214 05CE                                            l6206 054A  
                                          l6142 0378                                            l6134 0142  
                                          l6126 0112                                            l6118 00E4  
                                          ?_pad 0025                                            l5344 3468  
                                          l5336 341E                                            l5352 2DC2  
                                          l5192 28FE                                            l5184 28B8  
                                          l5176 2882                                            l5432 1DBE  
                                          l5424 1D92                                            l5416 1D4A  
                                          l5408 1C92                                            l5264 2D48  
                                          l5256 2CE6                                            l5280 2EC0  
                                          l5272 2E78                                            l5440 20E4  
                                          l5328 3408                                            l5504 1F18  
                                          l5512 1F78                                            l5520 1FF4  
                                          l5600 1318                                            l6064 263E  
                                          l6072 2692                                            l6056 2608  
                                          l6048 259A                                            l6400 0C5C  
                                          l6320 096A                                            l6312 0934  
                                          l6304 08DA                                            l6240 06EA  
                                          l6232 0696                                            l6216 05E6  
                                          l6208 054E                                            l6160 03E2  
                                          l6152 03B0                                            l6136 015A  
                                          l6128 0118                                            l5338 3422  
                                          l5370 2E58                                            l5362 2E00  
                                          l5354 2DCE                                            l5194 290C  
                                          l5186 28C4                                            l5178 2886  
                                          l5290 2F56                                            l5426 1D98  
                                          l5434 1DCE                                            l5418 1D64  
                                          l5266 2D68                                            l5258 2CFA  
                                          l5282 2EEE                                            l5274 2E96  
                                          l5450 2152                                            l5442 20E6  
                                          l5530 2080                                            l5522 2012  
                                          l5514 1F8A                                            l6074 26A8  
                                          l6066 265A                                            l6058 260E  
                                          l6410 0CC4                                            l6402 0C5E  
                                          l6322 0982                                            l6330 09A0  
                                          l6314 093A                                            l6306 08DC  
                                          l6250 0756                                            l6242 06FC  
                                          l6234 069C                                            l6226 0656  
                                          l6218 05F6                                            l6154 03BA  
                                          l6146 0392                                            l6138 035E  
                                          l5540 26B6                                            l5372 2E6A  
                                          l5364 2E14                                            l5356 2DDC  
                                          l5348 2DA4                                            l5196 291E  
                                          l5188 28E2                                            l5292 2F6A  
                                          l5428 1DAA                                            l5380 1B5E  
                                          l5268 2D6A                                            l5284 2F0E  
                                          l5276 2E9E                                            l5452 2158  
                                          l5460 2240                                            l5444 2100  
                                          l5532 2086                                            l5524 2030  
                                          l5516 1F90                                            l5508 1F52  
                                          l5620 13AC                                            l5612 132A  
                                          l5604 131E                                            l6068 266A  
                                          l6500 10B6                                            l6420 0D1A  
                                          l6412 0CD0                                            l6404 0C82  
                                          l6340 09FC                                            l6332 09A6  
                                          l6308 0900                                            l6260 07AE  
                                          l6244 0718                                            l6252 077C  
                                          l6236 06C0                                            l6228 0668  
                                          l6172 042A                                            l6164 03FC  
                                          l6148 03A0                                            l5550 2728  
                                          l5542 26CA                                            l5366 2E28  
                                          l5358 2DEE                                            l5198 294C  
                                          l5294 2F78                                            l5390 1BC4  
                                          l5382 1B7E                                            l5286 2F20  
                                          l5278 2EB2                                            l5462 2254  
                                          l5470 22B4                                            l5454 21D0  
                                          l5446 213E                                            l5438 20D6  
                                          l5534 2096                                            l5526 204A  
                                          l5518 1F96                                            l5630 1426  
                                          l5622 13AE                                            l6510 1124  
                                          l6502 10CC                                            l6422 0D42  
                                          l6430 0DA4                                            l6414 0CE2  
                                          l6406 0C94                                            l6350 0A5C  
                                          l6334 09BC                                            l6342 09FE  
                                          l6326 099A                                            l6318 094E  
                                          l6270 07F2                                            l6262 07BA  
                                          l6254 0780                                            l6246 071E  
                                          l6190 04B8                                            l6174 044A  
                                          l6182 046C                                            l6166 0406  
                                          l6158 03D4                                            l5560 2750  
                                          l5552 272C                                            l5544 26CE  
                                          l5368 2E2C                                            l5296 2F84  
                                          l5288 2F48                                            l5392 1BD6  
                                          l5384 1B8C                                            l5376 1B14  
                                          l5464 2272                                            l5456 21D6  
                                          l5448 2148                                            l5536 20AC  
                                          l5528 2064                                            l5480 1E22  
                                          l5632 1446                                            l5640 14B0  
                                          l5624 13D4                                            l5616 1336  
                                          l5608 1324                                            l5720 3354  
                                          l5712 395C                                            l5800 393E  
                                          l6520 1200                                            l6512 11B0  
                                          l6504 10DE                                            l6440 0E6C  
                                          l6432 0DBA                                            l6424 0D5C  
                                          l6416 0CF0                                            l6408 0CA4  
                                          l6360 0ABC                                            l6352 0A64  
                                          l6344 0A22                                            l6336 09CC  
                                          l6272 07F8                                            l6264 07CE  
                                          l6256 0794                                            l6248 0742  
                                          l6192 04CA                                            l6184 0488  
                                          l6176 045E                                            l6168 0414  
                                          l6096 0052                                            l5562 2758  
                                          l5546 26D2                                            l5298 2F98  
                                          l5394 1BE4                                            l5386 1B8E  
                                          l5378 1B34                                            l5466 228C  
                                          l5458 21DC                                            l5490 1E8C  
                                          l5482 1E4E                                            l5474 1DF8  
                                          l5650 154A                                            l5642 14D6  
                                          l5634 1454                                            l5626 140A  
                                          l5618 138C                                            l5722 335C  
                                          l5714 3952                                            l5730 3538  
                                          l5810 3828                                            l5802 3942  
                                          l6514 11CC                                            l6506 1100  
                                          l6450 0EDC                                            l6442 0E7C  
                                          l6434 0E44                                            l6426 0D6A  
                                          l6418 0CFA                                            l6370 0B1C  
                                          l6362 0AD8                                            l6354 0A74  
                                          l6338 09EC                                            l6290 0878  
                                          l6282 082C                                            l6274 0800  
                                          l6346 0A44                                            l6266 07D2  
                                          l6258 0798                                            l6194 04DE  
                                          l6186 04A0                                            l6178 0462  
                                          l6098 0084                                            l5572 2806  
                                          l5564 278E                                            l5556 2732  
                                          l5548 26F0                                            l5396 1BEA  
                                          l5388 1BA8                                            l5468 22A6  
                                          l5492 1E92                                            l5484 1E58  
                                          l5476 1E06                                            l5660 1616  
                                          l5652 1570                                            l5644 1508  
                                          l5628 1418                                            l5724 336A  
                                          l5716 3966                                            l5732 354C  
                                          l5740 36CE                                            l5820 383C  
                                          l5812 382C                                            l5804 381C  
                                          l5900 3492                                            l6516 11DA  
                                          l6508 110E                                            l6444 0E92  
                                          l6436 0E58                                            l6428 0DA0  
                                          l6380 0B84                                            l6372 0B3C  
                                          l6364 0AF0                                            l6356 0A90  
                                          l6348 0A58                                            l6284 0848  
                                          l6276 0812                                            l6268 07E2  
                                          l6196 04EA                                            l6524 1216  
                                          l5574 2818                                            l5558 2748  
                                          l5398 1BF2                                            l5494 1E9A  
                                          l5486 1E78                                            l5478 1E08  
                                          l5670 16E4                                            l5662 1660  
                                          l5654 15B8                                            l5638 149E  
                                          l5590 12F0                                            l5582 12A8  
                                          l5726 3398                                            l5910 30B6  
                                          l5830 3082                                            l5822 300C  
                                          l5734 3558                                            l5718 3948  
                                          l5750 36F2                                            l5742 36D0  
                                          l5814 3830                                            l5806 3820  
                                          l5902 34A2                                            l6518 11EE  
                                          l6470 0F88                                            l6462 0F2E  
                                          l6454 0EF4                                            l6446 0EAE  
                                          l6438 0E5C                                            l6390 0C00  
                                          l6382 0BA0                                            l6374 0B4C  
                                          l6366 0AF6                                            l6358 0AA8  
                                          l6286 0860                                            l6294 087E  
                                          l6278 0818                                            l6198 050E  
                                          l5576 282A                                            l5568 27C6  
                                          l5496 1EB6                                            l5488 1E82  
                                          l5672 16FC                                            l5680 1782  
                                          l5648 1524                                            l5592 12FE  
                                          l5584 12CE                                            l5920 30D0  
                                          l5912 30B8                                            l5840 31E6  
                                          l5832 30B2                                            l5824 301A  
                                          l5728 3868                                            l5736 3564  
                                          l5760 37AC                                            l5752 36FE  
                                          l5744 36D8                                            l5816 3834  
                                          l5808 3824                                            l6480 1022  
                                          l6472 0F8C                                            l6456 0F0E  
                                          l6448 0ED2                                            l6464 0F3A  
                                          l6392 0C06                                            l6384 0BB8  
                                          l6368 0B0C                                            l6376 0B4E  
                                          l6296 0884                                            l5498 1EC6  
                                          l5682 17A8                                            l5690 17D8  
                                          l5674 170A                                            l5666 1698  
                                          l5658 15F0                                            l5594 1300  
                                          l5586 12DC                                            l5930 310E  
                                          l5922 30D6                                            l5914 30BE  
                                          l5850 31FA                                            l5842 31E6  
                                          l5826 305A                                            l5738 3570  
                                          l5762 37C8                                            l5770 392A  
                                          l5746 36EE                                            l5754 392E  
                                          l5818 3838                                            l5906 32E8  
                                          l6490 1062                                            l6482 1030  
                                          l6474 0FAA                                            l6466 0F4E  
                                          l6458 0F24                                            l6394 0C1C  
                                          l6386 0BCC                                            l6378 0B72  
                                          l6298 089A                                            l5692 17E6  
                                          l5684 17B6                                            l5676 1746  
                                          l5668 16BE                                            l5596 1312  
                                          l5588 12EC                                            l5780 37D6  
                                          l5940 312E                                            l5924 30DC  
                                          l5916 30C4                                            l5908 30B6  
                                          l5860 3228                                            l5852 3200  
                                          l5844 31E8                                            l5836 398C  
                                          l5828 305E                                            l5764 3988  
                                          l5772 38A6                                            l5748 36F0  
                                          l5756 3936                                            l6652 122E  
                                          l6492 1068                                            l6484 103E  
                                          l6476 1006                                            l6468 0F74  
                                          l6396 0C2C                                            l6388 0BE8  
                                          l5790 3802                                            l5686 17CA  
                                          l6654 135E                                            l5942 3140  
                                          l5926 30E2                                            l5918 30CA  
                                          l5870 325A                                            l5862 3240  
                                          l5854 3206                                            l5846 31EE  
                                          l5774 38DC                                            l5758 37A0  
                                          l5766 391C                                            l5838 22DE  
                                          l6494 1072                                            l6486 104C  
                                          l6478 1014                                            l6398 0C4C  
                                          l5792 3806                                            l5784 3908  
                                          l5776 38C4                                            l6656 2778  
                                          l5696 17F2                                            l5960 2A4A  
                                          l5952 29E6                                            l5880 360A  
                                          l5944 314C                                            l5936 3116  
                                          l5928 30F8                                            l5872 325E  
                                          l5856 320C                                            l5848 31F4  
                                          l5768 3928                                            l6496 1086  
                                          l6488 105E                                            l5794 3814  
                                          l5698 1818                                            l5778 37CC  
                                          l5970 2A76                                            l5962 2A4C  
                                          l5954 29EC                                            l5946 29DC  
                                          l5874 35F0                                            l5938 312A  
                                          l5858 3212                                            l6498 10A8  
                                          l5796 3818                                            l5788 37F4  
                                          l5980 2A94                                            l5972 2A7C  
                                          l5964 2A5C                                            l5956 29F2  
                                          l5876 35F8                                            l5868 3248  
                                          l5892 3576                                            l5990 2ABC  
                                          l5982 2A9A                                            l5974 2A82  
                                          l5966 2A6E                                            l5958 2A10  
                                          l5886 3610                                            l5878 35FA  
                                          l5894 3596                                            l5992 2ACC  
                                          l5984 2AA0                                            l5976 2A88  
                                          l5968 2A70                                            l5888 3622  
                                          l5896 359A                                            l5994 2ADE  
                                          l5986 2AAA                                            l5978 2A8E  
                                          l5898 3470                                            l5996 2AE0  
                                          l5988 2AAC                                            l5998 2AE6  
                                          STR_1 FFBB                                            STR_2 FECF  
                                          STR_3 FFC4                                            STR_4 FC91  
                                          STR_5 FFF9                                            STR_6 FF69  
                                          STR_7 FB71                                            STR_8 FD9F  
                                          STR_9 FF7F                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u5000 2BFC                                            u5001 2BF8  
                                          u5010 2C2A                                            u5011 2C26  
                                          u5020 2C72                                            u5100 2F56  
                                          u5021 2C6E                                            u5101 2F52  
                                          u5110 2F78                                            u5111 2F74  
                                          u5031 2CBA                                            u5120 2FCE  
                                          u5040 2CDE                                            u5200 33F2  
                                          u6000 3270                                            u5121 2FCA  
                                          u5041 2CDA                                            u6001 326C  
                                          u5130 2FDC                                            u5050 2D08  
                                          u5210 3408                                            u6010 360A  
                                          u5131 2FD8                                            u5051 2D04  
                                          u5211 3404                                            u6011 3606  
                                          u5220 36C6                                            u5300 2E58  
                                          u5140 3512                                            u5060 2D48  
                                          u6100 2ACC                                            u6020 35B0  
                                          u5221 36C0                                            u5301 2E54  
                                          u5141 350E                                            u5061 2D44  
                                          u6101 2AC8                                            u6021 35AC  
                                          u5230 36C8                                            u5310 1B46  
                                          u5070 2E96                                            u5150 368E  
                                          u6110 2B2C                                            u6030 3492  
                                          u5311 1B40                                            u5071 2E92  
                                          u5151 3688                                            u6111 2B28  
                                          u6031 348E                                            u5240 3436  
                                          u5400 1D4A                                            u5320 1B48  
                                          u5080 2EC0                                            u5160 3690  
                                          u6120 2B3C                                            u6040 30F8  
                                          u6200 265A                                            u5241 3432  
                                          u5401 1D46                                            u5081 2EBC  
                                          u6121 2B38                                            u6041 30F4  
                                          u6201 2656                                            u5250 3464  
                                          u5410 1D64                                            u5330 1B5E  
                                          u5090 2EEE                                            u5170 35E6  
                                          u6050 310E                                            u6210 26A8  
                                          u6130 24F4                                            u5251 3460  
                                          u5411 1D60                                            u5331 1B5A  
                                          u5091 2EEA                                            u5171 35E0  
                                          u6051 310A                                            u6211 26A4  
                                          u6131 24F0                                            u5260 2DB6  
                                          u5420 1D72                                            u5340 1B8C  
                                          u5500 228C                                            u5180 35E8  
                                          u6060 3140                                            u6140 2512  
                                          u6300 03D0                                            u5261 2DB2  
                                          u5421 1D6E                                            u5341 1B88  
                                          u5501 2288                                            u6061 313C  
                                          u6141 250E                                            u6301 03CC  
                                          u5270 2DDC                                            u5430 1D84  
                                          u5350 1BA8                                            u5510 22A6  
                                          u5190 33F0                                            u6070 2A0E  
                                          u6150 2532                                            u6310 0426  
                                          u5271 2DD8                                            u5431 1D80  
                                          u5351 1BA4                                            u5511 22A2  
                                          u5191 33EA                                            u6071 2A0A  
                                          u6151 252E                                            u6311 0422  
                                          u5280 2DFC                                            u5440 1D92  
                                          u5360 1BD6                                            u5520 22B4  
                                          u5600 1F4C                                            u6080 2A5C  
                                          u6160 2550                                            u6400 060C  
                                          u6320 045E                                            u6240 0096  
                                          u5281 2DF8                                            u5441 1D8E  
                                          u5361 1BD2                                            u5521 22B0  
                                          u5601 1F46                                            u6081 2A58  
                                          u6161 254C                                            u6401 0608  
                                          u6321 045A                                            u4810 3902  
                                          u5290 2E4A                                            u5450 1DAA  
                                          u5370 1BE4                                            u5610 1F4E  
                                          u5530 1E06                                            u6090 2ABC  
                                          u6170 258A                                            u6410 0642  
                                          u6330 04A0                                            u6250 00C2  
                                          u4811 38FE                                            u5291 2E46  
                                          u5451 1DA6                                            u5371 1BE0  
                                          u5531 1E02                                            u6091 2AB8  
                                          u6171 2586                                            u6411 063E  
                                          u6331 049C                                            u6251 00BE  
                                          i2l20 379E                                            u5700 26F0  
                                          u4820 3162                                            u4900 2862  
                                          u5380 1D12                                            u5460 20E4  
                                          u5620 1F64                                            u5540 1E22  
                                          u6180 25D8                                            u6500 0812  
                                          u6420 067A                                            u6340 04B4  
                                          u6260 013A                                            u5701 26EC  
                                          u4821 315E                                            u4901 285E  
                                          u5381 1D0E                                            u5461 20E0  
                                          u5621 1F60                                            u5541 1E1E  
                                          u6181 25D4                                            u6501 080E  
                                          u6421 0676                                            u6341 04B0  
                                          u6261 0136                                            u5710 2728  
                                          u4830 3174                                            u4910 2894  
                                          u5390 1D30                                            u5470 2100  
                                          u5630 1FCE                                            u5550 1E4E  
                                          u6190 2620                                            u6510 0828  
                                          u6430 06E6                                            u6350 04CA  
                                          u6270 01A8                                            u5711 2724  
                                          u4831 3170                                            u4911 2890  
                                          u5391 1D2C                                            u5471 20FC  
                                          u5551 1E4A                                            u6191 261C  
                                          u6511 0824                                            u6431 06E2  
                                          u6351 04C6                                            u5720 2744  
                                          u4840 319C                                            u5480 2254  
                                          u5640 2012                                            u5560 1EB6  
                                          u5800 13D4                                            u6600 09BC  
                                          u6520 0860                                            u6440 06FC  
                                          u6360 0522                                            u5721 2740  
                                          u4841 3198                                            u4921 28BE  
                                          u5481 2250                                            u5641 200E  
                                          u5561 1EB2                                            u5801 13D0  
                                          u6601 09B8                                            u6521 085C  
                                          u6441 06F8                                            u6361 051E  
                                          u5730 2800                                            u4850 31D2  
                                          u4930 28E2                                            u5490 2272  
                                          u5650 2030                                            u5570 1F00  
                                          u5810 1418                                            u6610 09CC  
                                          u6530 0874                                            u6450 0756  
                                          u6370 0536                                            u6290 038E  
                                          u5731 27FA                                            u4851 31CE  
                                          u4931 28DE                                            u5491 226E  
                                          u5651 202C                                            u5635 1FBC  
                                          u5571 1EFA                                            u5811 1414  
                                          u6611 09C8                                            u6531 0870  
                                          u6451 0752                                            u6371 0532  
                                          u6291 038A                                            u6275 019E  
                                          u5740 2802                                            u4940 290C  
                                          u4860 34F6                                            u5660 204A  
                                          u5580 1F02                                            u5900 16E4  
                                          u5820 1498                                            u6700 0BB8  
                                          u6620 0A58                                            u6540 089A  
                                          u6460 077C                                            u6380 054A  
                                          u4941 2908                                            u4861 34F2  
                                          u5661 2046                                            u5901 16E0  
                                          u5821 1492                                            u6701 0BB4  
                                          u6621 0A54                                            u6541 0896  
                                          u6461 0778                                            u6381 0546  
                                          u6285 0252                                            u5750 2818  
                                          u4950 294C                                            u4870 372C  
                                          u5670 2064                                            u5590 1F18  
                                          u5910 17A8                                            u5830 149A  
                                          u6710 0BCC                                            u6630 0A74  
                                          u6550 08AA                                            u6470 0794  
                                          u6390 05A0                                            u5751 2814  
                                          u4951 2948                                            u4871 3728  
                                          u5671 2060                                            u5591 1F14  
                                          u5911 17A4                                            u6711 0BC8  
                                          u6631 0A70                                            u6551 08A6  
                                          u6471 0790                                            u5760 282A  
                                          u4960 2996                                            u4880 3656  
                                          u5680 2072                                            u5840 14B0  
                                          u5920 33B6                                            u6800 0E58  
                                          u6720 0C00                                            u6640 0AA8  
                                          u6560 0934                                            u6480 07AA  
                                          u5761 2826                                            u4961 2992  
                                          u4881 3650                                            u5681 206E  
                                          u5841 14AC                                            u5921 33B2  
                                          u6801 0E54                                            u6721 0BFC  
                                          u6641 0AA4                                            u6561 0930  
                                          u6481 07A6                                            u4970 2B62  
                                          u4890 3658                                            u5690 2080  
                                          u5850 14D6                                            u5770 12CE  
                                          u5930 38C0                                            u6810 0EF0  
                                          u6730 0C1C                                            u6650 0ABC  
                                          u6570 094A                                            u6490 07CE  
                                          u4971 2B5E                                            u5691 207C  
                                          u5851 14D2                                            u5771 12CA  
                                          u5931 38BC                                            u6811 0EEC  
                                          u6731 0C18                                            u6651 0AB8  
                                          u6571 0946                                            u6491 07CA  
                                          u6395 0596                                            u5940 38D6  
                                          u4980 2B94                                            u5860 154A  
                                          u5780 139E                                            u6820 0F4E  
                                          u6740 0C2C                                            u6660 0AF0  
                                          u6580 0982                                            u5941 38D2  
                                          u4981 2B90                                            u5861 1546  
                                          u5781 139A                                            u6821 0F4A  
                                          u6741 0C28                                            u6661 0AEC  
                                          u6581 097E                                            u5950 3918  
                                          u4990 2BD2                                            u5870 1570  
                                          u5790 13AC                                            u6830 0F74  
                                          u6750 0C94                                            u6670 0B0C  
                                          u6590 0996                                            u5951 3912  
                                          u4991 2BCE                                            u5871 156C  
                                          u5791 13A8                                            u6831 0F70  
                                          u6751 0C90                                            u6671 0B08  
                                          u6591 0992                                            u5960 3802  
                                          u5880 1616                                            u6840 0F88  
                                          u6760 0CA4                                            u6680 0B1C  
                                          u5961 37FE                                            u5881 1612  
                                          u6841 0F84                                            u6761 0CA0  
                                          u6681 0B18                                            u5970 3814  
                                          u5890 16BE                                            u6850 0FEC  
                                          u6770 0CB4                                            u6690 0B84  
                                          u5971 3810                                            u5891 16BA  
                                          u6771 0CB0                                            u6691 0B80  
                                          u5956 391A                                            u5980 301A  
                                          u6860 1086                                            u6780 0CE2  
                                          u5981 3016                                            u6861 1082  
                                          u6781 0CDE                                            u5990 3228  
                                          u6870 10A8                                            u6790 0DB6  
                                          u5991 3224                                            u6871 10A4  
                                          u6855 0FE2                                            u6791 0DB2  
                                          u6880 1100                                            u6881 10FC  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 38F2                                            abs@a 0025  
                                          _dbuf 018E                                            _atoi 26B6  
                                          _ctoa 2DA4                                            _main 0052  
                                          _dtoa 1B14                                   ?_EUSART1_Read 0001  
                                          _prec 003D                                            _nout 0184  
                                          pad@i 002C                                            pad@p 0029  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf1 000FE7                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 002E  
                                          fsr2l 000FD9                                            btemp 004D  
                                          _utoa 20D6                                            _xtoa 1DF8  
                                   main@timeout 01D2                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00AF  
                                          start 004E                           ??_EPWM1_LoadDutyValue 0003  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0027                                           ??_pad 002B  
                       __end_of_TMR0_Initialize 3704                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 38C2  
                               __end_of___aodiv 29D8                                           ?_atoi 001A  
                                   ?_SPI2_Close 0001                                           ?_ctoa 001E  
                                         ?_main 0001                                           ?_dtoa 0030  
                               __end_of___aomod 2CB4                                           STR_10 FFE9  
                                         STR_11 FFFC                                           STR_20 FB73  
                                         STR_12 FFE9                                           STR_13 FF9C  
                                         STR_21 FE5D                                           STR_30 FB73  
                                         STR_22 FB73                                           STR_14 FEF9  
                                         STR_15 FB73                                           STR_31 FFCD  
                                         STR_23 FCDE                                           STR_32 FFF0  
                                         STR_40 FFE9                                           STR_16 FF9F  
                                         STR_24 FC66                                           STR_33 FFF0  
                                         STR_41 FFFC                                           STR_17 FFD5  
                                         STR_25 FB3A                                           STR_26 FB73  
                                         STR_34 FFF2                                           STR_42 FFDC  
                                         STR_18 FEE4                                           STR_50 F3B1  
                                         STR_51 FF36                                           STR_19 FE75  
                                         STR_35 FD63                                           STR_27 FBD9  
                                         STR_43 FAC6                                           STR_52 FE44  
                                         STR_60 FCB9                                           STR_28 FC3A  
                                         STR_44 F3F8                                           STR_36 F365  
                                         STR_45 FF9C                                           STR_37 FF9C  
                                         STR_53 FD7C                                           STR_61 FEBA  
                                         STR_29 FD24                                           STR_70 FF9C  
                                         STR_54 FE8D                                           STR_38 FE0F  
                                         STR_62 FD81                                           STR_46 FB00  
                                         STR_55 FFAE                                           STR_71 FF90  
                                         STR_63 FF0E                                           STR_39 FD44  
                                         STR_47 FD03                                           STR_72 FF5D  
                                         STR_48 FEA4                                           STR_64 FDD8  
                                         STR_56 FC0A                                           STR_80 F4B8  
                                         STR_57 FB00                                           STR_73 FF6E  
                                         STR_65 FF22                                           STR_49 FBA7  
                                         STR_81 F4F6                                           STR_58 FD03  
                                         STR_74 FFE9                                           STR_66 FF4A  
                                         STR_90 F898                                           STR_82 F534  
                                         STR_59 FEA4                                           STR_75 FFFC  
                                         STR_67 FFE9                                           STR_91 F8D6  
                                         STR_83 F572                                           STR_68 FFFC  
                                         STR_76 FFE9                                           STR_92 F990  
                                         STR_84 F5B0                                           STR_77 FF9C  
                                         STR_69 FFE9                                           STR_93 F9CE  
                                         STR_85 F62C                                           STR_94 FA0C  
                                         STR_86 F6A8                                           STR_78 F43C  
                                         STR_95 FA4A                                           STR_87 F724  
                                         STR_79 F47A                                           STR_96 FA88  
                                         STR_88 F762                                           STR_97 F952  
                                         STR_89 F7DE                                           STR_98 F952  
                                         STR_99 F914                       TMR0_ReadTimer@readValHigh 0008  
                                         ?_utoa 0030                                           _T0CON 000FD5  
                               __end_of___lodiv 2DA4                                           ?_xtoa 0030  
                                         _T2CON 000FBA                                 __end_of___lomod 2F48  
                                         i2l144 38A4                                           i2l160 3990  
                                         i2l154 376E                                           i2l147 3982  
                               _TMR0_WriteTimer 393E                                           i2l334 003A  
                                         i2l632 198E                                           i2l645 1A92  
                                         i2l648 1B12                                    vfpfcnvrt@fmt 007E  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0092  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                  _stopPlayback 0048               __size_of_TMR0_SetInterruptHandler 000A  
                            __size_of_SPI2_Open 00AC                       ?_TMR0_SetInterruptHandler 0013  
                              __end_of_TMR0_ISR 3770                                    main@sinIndex 00BB  
                                         _flags 003F                                           _fputc 3150  
                               __end_of_isalpha 35EE                                           _fputs 34B4  
                               __end_of_isdigit 36CE                                           atoi@n 0027  
                                         pad@fp 0025                                           atoi@s 001A  
                                         _width 003B                                           ctoa@c 0020  
                                         _putch 3970                                           ctoa@l 0022  
                                         ctoa@w 0024                                           main@i 01E4  
                                         main@j 01D7                                           dtoa@d 0032  
                                         dtoa@i 0078                                           dtoa@n 0070  
                                         dtoa@p 006A                                           dtoa@s 006E  
                                         dtoa@w 006C                                 __end_of_islower 365E  
                               __end_of_isspace 3470                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 3696                                           pclath 000FFA  
                                  main@printVal 01CC                                           tablat 000FF5  
                                ??_EUSART1_Read 0013                                           ttemp5 004E  
                                         ttemp6 0051                                           ttemp7 0055  
                                         utoa@d 0032                                           utoa@i 0074  
                                         utoa@n 006C                                           utoa@p 0068  
                                         utoa@w 006A                                           status 000FD8  
                                         wtemp8 004E                                           xtoa@c 007A  
                                         xtoa@d 0032                                           xtoa@i 0078  
                                         xtoa@n 0070                                           xtoa@p 006C  
                                         xtoa@w 006E                                           xtoa@x 003A  
                               __end_of_toupper 341E                                ___lodiv@dividend 0013  
            _EUSART1_DefaultFramingErrorHandler 000000                             myTMR0ISR@useBuffer1 004C  
                                  _toupper$2122 001F                                 __initialization 3274  
                  SDCARD_ReadBlock@sdCardBuffer 0018                                    __end_of_atoi 2850  
                                  __end_of_ctoa 2E78                      __end_of_EUSART1_Initialize 3576  
                                  __end_of_main 12A8                                    __end_of_dtoa 1DF8  
                                  __end_of_utoa 22DE                               _SPI2_ExchangeByte 38C2  
                                  __end_of_xtoa 20D6               __size_of_SDCARD_PollWriteComplete 0038  
                     ?_SDCARD_PollWriteComplete 0001                         __end_of_TMR2_Initialize 393E  
                   ?_INTERRUPT_InterruptManager 0001                              ?_SPI2_ExchangeByte 0001  
                                        ??_atoi 001C                                          ??_ctoa 0021  
                                        ??_main 00B7                                          ??_dtoa 0060  
                                        ??_utoa 0060                                          ??_xtoa 0060  
                                 __activetblptr 000003                        __size_of_SPI2_Initialize 0012  
                              ___lodiv@quotient 0023                             ??_SPI2_ExchangeByte 0013  
                                  myTMR0ISR@mic 000D                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0015                                          STR_100 F81C  
                                        STR_101 F85A                                          STR_110 F4B8  
                                        STR_102 F7A0                                          ?_fputs 001E  
                                        STR_111 F47A                                          STR_103 F6E6  
                                        STR_112 F43C                                          STR_120 FFF6  
                                        STR_104 F66A                                          STR_121 FF9C  
                                        STR_113 FDF4                                          STR_105 F5EE  
                                        STR_106 F5B0                                          STR_122 FFE3  
                                        STR_114 FE2A                                          _ADRESH 000FC4  
                                        STR_107 F572                                          STR_123 FF7B  
                                        STR_115 FDBC                                          STR_108 F534  
                                        STR_124 F3AF                                          STR_116 FFEE  
                                        STR_109 F4F6                                          STR_117 FF7D  
                                        STR_125 FFF6                                          STR_126 FF9C  
                                        STR_118 FF7C                                          _ADRESL 000FC3  
                                        STR_119 F3AF                                          _CCPR1H 000FBF  
                                        _CCPR1L 000FBE                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l4200 1A4E                                          i2l4050 3890  
                                        i2l4210 1A76                                          i2l4202 1A52  
                                        i2l4130 184E                                          i2l4052 389C  
                                        i2l4212 1A7E                                          i2l4204 1A5A  
                                        i2l4132 185E                                          i2l4140 1888  
                                        i2l4220 1AD0                                          i2l4124 182C  
                                        i2l4038 3770                                          i2l4206 1A6A  
                                        i2l4150 18BA                                          i2l4142 189A  
                                        i2l4134 1874                                          i2l4126 182E  
                                        i2l4048 3888                                          i2l4064 397A  
                                        i2l4216 1AC0                                          i2l4208 1A72  
                                        i2l4160 191E                                          i2l4152 18CA  
                                        i2l4144 18A2                                          i2l4136 187C  
                                        i2l4128 1844                                          i2l4066 397E  
                                        i2l4170 1954                                          i2l4162 1922  
                                        i2l4154 18DC                                          i2l4146 18AA  
                                        i2l4138 1880                                          i2l4250 373C  
                                        i2l4172 1964                                          i2l4164 1936  
                                        i2l4156 18EC                                          i2l4148 18B2  
                                        i2l4252 3740                                          i2l4190 19FE  
                                        i2l4182 19BC                                          i2l4166 1946  
                                        i2l4174 196C                                          i2l4158 1902  
                                        i2l4254 3744                                          i2l4192 1A14  
                                        i2l4184 19CC                                          i2l4176 1972  
                                        i2l4168 194C                                          i2l4256 3756  
                                        i2l4248 373A                                          i2l4194 1A26  
                                        i2l4186 19DC                                          i2l4178 197A  
                                        i2l4196 1A2A                                          i2l4188 19EE  
                                        i2l4198 1A3E                                          i2l4550 001A  
                                        i2l4552 0028                                          i2l4554 0036  
                                        i2l6658 1AE4                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 008E  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                             __size_of_SPI2_Close 0004  
                             __end_of_SPI2_Open 30B6                       __end_of_SPI2_ExchangeByte 38DC  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 00A1  
                                     ??___aodiv 0023                                       ??___aomod 0023  
                                        ___wmul 3842                   incrementAddress@sdCardAddress 0013  
                       __end_of_TMR0_WriteTimer 3948                                main@failureIndex 01F7  
                                     ??___lodiv 0023                                       ??___lomod 0023  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 0013  
                              ?_TMR0_Initialize 0001                       __size_of_microSecondDelay 003C  
                                        clear_0 32AE                                          clear_1 32C0  
                                        clear_2 32D8                                          _printf 37CC  
                                        pad@buf 0027                ??_EUSART1_SetOverrunErrorHandler 0015  
               ?_EUSART1_SetOverrunErrorHandler 0013                                          ctoa@fp 001E  
                                        dtoa@fp 0030                                          _strlen 3704  
                                        fputc@c 0015                               ?_incrementAddress 0013  
                                        fputs@c 0022                                          fputs@i 0023  
                                  __pdataCOMRAM 004C                                          fputs@s 001E  
                                     ??_isalpha 0015                                       ??_isdigit 0015  
                                     ??_islower 0015                                    __mediumconst F346  
                                     ??_isspace 0015                                          tblptrh 000FF7  
                                     ??_isupper 0015                                          tblptrl 000FF6  
                                        tblptru 000FF8                              ??_incrementAddress 0017  
                           main@writeEndAddress 01EE                                __end_of_vfprintf 33C0  
                               ??_EUSART1_Write 0013                                          utoa@fp 0030  
      TMR0_SetInterruptHandler@InterruptHandler 0013                                          xtoa@fp 0030  
                                     ??_toupper 001B                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 381C                                      __accesstop 0060  
                       __end_of__initialization 32DE                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                _SDCARD_ReadBlock 30B6  
                             ?_EPWM1_Initialize 0001                      __end_of_spi2_configuration F365  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 3984  
                           ??_SYSTEM_Initialize 0017                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 0013                                   __end_of_fputc 31E6  
                                 __end_of_fputs 34F8                                   __end_of_putch 397A  
                       __size_of_TMR0_ReadTimer 001E                                ?_TMR2_Initialize 0001  
                                main@endAddress 01C8                            __end_of_EUSART1_Read 381C  
                                       ??_fputc 0019                       __end_of_SYSTEM_Initialize 3842  
                                       ??_fputs 0022                              __size_of_myTMR0ISR 02E8  
                                       ??_putch 0014                              SDCARD_WriteBlock@i 001A  
                             ??_SPI2_Initialize 0013                                      __pbssBANK0 00BB  
                                    __pbssBANK1 0100                                 myTMR0ISR@buffer 00C0  
                                    _doPlayback 00BC                               _writeFailureTable 01FC  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 3970  
              __end_of_TMR0_SetInterruptHandler 3952                                         ?___wmul 0013  
                                    ??_TMR0_ISR 000F                                ?_TMR0_WriteTimer 0013  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                       ?_printf 00A3                                    ??_SPI2_Close 0013  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0013  
        __end_of_EUSART1_SetFramingErrorHandler 3966         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 395C                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0584                                      _collecting 00BD  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                                ___lomod@dividend 0013  
                             SDCARD_ReadBlock@i 001A                     __end_of_EPWM1_LoadDutyValue 37A0  
              __end_of_SDCARD_PollWriteComplete 3626                              __end_of_SPI2_Close 3990  
                          _ADC_InterruptHandler 0186                                         __Hparam 0000  
                                       __Lparam 0000                           __end_of_hexDumpBuffer 26B6  
                     SDCARD_Initialize@response 00B0                                         ___aodiv 2850  
                                       ___aomod 2B50                                 __size_of___wmul 0026  
                                       ___lodiv 2CB4                                         ___lomod 2E78  
                             __end_of_myTMR0ISR 1B14                                       ?_vfprintf 009B  
                              _microSecondDelay 3576                             _EUSART1_is_rx_ready 3908  
                                       __pcinit 3274                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 22DE  
                                       __ptext2 32E8                                         __ptext3 3576  
                                       __ptext4 3470                                         __ptext5 24CA  
                                       __ptext6 393E                                         __ptext7 381C  
                                       __ptext8 392E                                         __ptext9 36CE  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 38A6  
                                     _T2CONbits 000FBA                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 35B2  
                                       _isdigit 3696                              _EUSART1_Initialize 3538  
                                       _islower 3626                        ??_PIN_MANAGER_Initialize 0013  
                                       _isspace 341E                                         _isupper 365E  
                                  _sdCardBuffer 07FC                                         atoi@neg 0020  
                                       main@cmd 01E3                      __size_of_SYSTEM_Initialize 0026  
                                       main@sin 01AE                                         _toupper 33C0  
                          end_of_initialization 32DE                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _sampleRate 00C2  
                                       fputc@fp 0017                     _EUSART1_OverrunErrorHandler 018A  
                                       fputs@fp 0020                               __end_ofmain@F6231 F361  
                                 ?_printAddress 00AD                   SDCARD_WriteBlock@sdCardBuffer 0018  
                             __end_of_vfpfcnvrt 182C                           TMR0_ReadTimer@readVal 0005  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 003B                                       _SPI2_Open 300A  
                                _TMR0_ReadTimer 3888                            ??_EUSART1_Initialize 0015  
                         SDCARD_WriteBlock@addr 0014                                         strlen@a 0015  
                                       strlen@s 0013                                      _printAscii 22DE  
                      _TMR0_SetInterruptHandler 3948                        __end_of_SDCARD_ReadBlock 3150  
                                     _TRISBbits 000F93                                      main@i_1316 01E0  
                                    main@i_1286 01DE                                      main@i_1297 01E2  
              __size_of_EUSART1_SetErrorHandler 000A                  SDCARD_PollWriteComplete@status 0014  
                           EUSART1_Write@txData 0013                           ??_EUSART1_is_rx_ready 0013  
                           printAddress@address 00AD                                    _EUSART1_Read 37F4  
                     __size_of_incrementAddress 0044                                  ??_printAddress 003B  
                                    main@status 01F6                        _SDCARD_PollWriteComplete 35EE  
                        __end_of_TMR0_ReadTimer 38A6                    __end_of_INTERRUPT_Initialize 398C  
                             _SDCARD_Initialize 29D8                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 0080                                     vfpfcnvrt@fp 007C  
                                   vfpfcnvrt@ll 0086                                  __end_of___wmul 3868  
                                 __pidataCOMRAM 3992                               __size_of_TMR0_ISR 0036  
                            ?_SDCARD_Initialize 0001                                  _ADC_Initialize 38DC  
                        ?_OSCILLATOR_Initialize 0001                                 _SPI2_Initialize 391C  
                                __end_of_printf 37F4                                  __end_of_strlen 373A  
                            _spi2_configuration F361                             start_initialization 3274  
                               ___lodiv@divisor 001B                       __size_of_EPWM1_Initialize 0020  
                               ___lodiv@counter 002B                             ??_SDCARD_Initialize 003B  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 3538                                     __end_of_pad 300A  
                                   putch@txData 0014                    EPWM1_LoadDutyValue@dutyValue 0001  
                         __end_of_EUSART1_Write 3908                               main@sdCardAddress 01F2  
                     __end_of_SDCARD_Initialize 2B50                                     vfprintf@fmt 009D  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0017  
                        __end_of_ADC_Initialize 38F2                                     __pdataBANK0 00C0  
                                   ?_printAscii 0001                                        ??_printf 003B  
                         SPI2_ExchangeByte@data 0013                                        ??_strlen 0015  
                                   __pbssBIGRAM 01FC                                     __pbssCOMRAM 003B  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 01AE  
                           hexDumpBuffer@j_1451 00B3                                ___aodiv@dividend 0013  
                      __size_of_TMR2_Initialize 0010                        __end_of_microSecondDelay 35B2  
              ??_EUSART1_SetFramingErrorHandler 0015                 ?_EUSART1_SetFramingErrorHandler 0013  
                             main@printedBlocks 01CE                              _writeFailureStatus 0100  
                                     _atoi$2046 0022                                       _atoi$2047 0026  
                                     _atoi$2048 0024                           _TMR0_InterruptHandler 0045  
                                myTMR0ISR@state 0047                          _PIN_MANAGER_Initialize 37A0  
                                     _dtoa$1990 0068                               _SDCARD_WriteBlock 31E6  
                                     __pintcode 0008                                   __pmediumconst F346  
                       __end_of_SPI2_Initialize 392E                                        ?___aodiv 0013  
                                      ?___aomod 0013                                ___aodiv@quotient 0025  
                            ?_SDCARD_WriteBlock 0014                                        ?___lodiv 0013  
                                      ?___lomod 0013                                 ?_ADC_Initialize 0001  
                                   ??_SPI2_Open 0013                SPI2_Open@spi2UniqueConfiguration 0014  
                  ??_INTERRUPT_InterruptManager 000F                               __size_of_vfprintf 006C  
                                     _myTMR0ISR 182C                                 ___lomod@divisor 001B  
                           ??_SDCARD_WriteBlock 001A                                 ___lomod@counter 0023  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0013                                        ?_isdigit 0013  
                         main@writeStartAddress 01EA                            __end_of_printAddress 3354  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 0188  
                                      ?_islower 0013                                        ?_isspace 0013  
                                      ?_isupper 0013                         _EUSART1_SetErrorHandler 3966  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 0019                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 3988                                     _buffer1Full 00BF  
                                   _buffer2Full 00BE                               ??_TMR0_Initialize 0015  
                                ___wmul@product 0017         EUSART1_SetErrorHandler@interruptHandler 0013  
                                      _LATBbits 000F8A                             __size_of_printAscii 01EC  
                              _incrementAddress 3470                       __end_of_SDCARD_WriteBlock 3274  
           __size_of_INTERRUPT_InterruptManager 0046                      ??_TMR0_SetInterruptHandler 0015  
                                      i2u414_40 0028                                        i2u414_41 0024  
                                      i2u415_40 0036                                        i2u415_41 0032  
                                      i2u360_40 189A                                        i2u360_41 1896  
                                      i2u361_40 18CA                                        i2u361_41 18C6  
                                      _PIR1bits 000F9E                                        i2u370_40 19A2  
                                      i2u362_40 18DC                                        i2u362_41 18D8  
                                      i2u371_40 19BC                                        i2u363_40 18EC  
                                      i2u371_41 19B8                                        i2u363_41 18E8  
                                      i2u380_40 1AA4                                        i2u372_40 19DC  
                                      i2u364_40 18FE                                        i2u380_41 1A9E  
                                      i2u372_41 19D8                                        i2u364_41 18FA  
                                      i2u381_40 1AA6                                        i2u373_40 19EE  
                                      i2u365_40 1936                                        i2u373_41 19EA  
                                      i2u365_41 1932                                        _PIR3bits 000FA4  
                                      i2u382_40 1AC0                                        i2u374_40 19FE  
                                      i2u366_40 1946                                        i2u382_41 1ABC  
                                      i2u374_41 19FA                                        i2u366_41 1942  
                                      i2u375_40 1A10                                        i2u367_40 1964  
                                      i2u359_40 185E                                        i2u375_41 1A0C  
                                      i2u367_41 1960                                        i2u359_41 185A  
                               main@readAddress 01E6                                        i2u376_40 1A3E  
                                      i2u368_40 198A                                        i2u376_41 1A3A  
                                      i2u368_41 1986                                        i2u377_40 1A4E  
                                      i2u369_40 19A0                                        i2u377_41 1A4A  
                                      i2u369_41 199A                                        i2u378_40 1A6A  
                                      i2u386_40 3756                                        i2u378_41 1A66  
                                      i2u386_41 3752                                        i2u379_40 1A8E  
                                      i2u379_41 1A8A                                        i2u387_48 375C  
                                      i2u387_49 376E                    __size_of_EPWM1_LoadDutyValue 0030  
                    __size_of_SDCARD_Initialize 0178                                        _RCONbits 000FD0  
                                     main@F6231 F347                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 373A  
                                      _PSTR1CON 000FB9                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 12A8                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$2008 0068                                       _xtoa$2009 006A  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0013  
                                    ?_myTMR0ISR 0001                                _EPWM1_Initialize 3868  
                             i2_TMR0_WriteTimer 397A                               ?_SDCARD_ReadBlock 0014  
                                  _isspace$2073 0019                          __size_of_hexDumpBuffer 01EC  
                                    vfpfcnvrt@c 009A                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                                       copy_data0 3288  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 001A  
                    ??_SDCARD_PollWriteComplete 0014                               ??_TMR2_Initialize 0013  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 009F                                        __Lrparam 0000  
                                    vfprintf@fp 009B                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0013                                __size_of___aodiv 0188  
                            SDCARD_Initialize@i 00AD                                __size_of___aomod 0164  
                              main@timeout_1293 01D8                                main@timeout_1294 01D9  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 007C  
                               ___aodiv@divisor 001B                                 ___aodiv@counter 0023  
                     __end_ofi2_TMR0_WriteTimer 3984                       ??_EUSART1_SetErrorHandler 0015  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 391C  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 3948                                        __ptext11 391C  
                                      __ptext20 38DC                                        __ptext12 37A0  
                                      __ptext21 300A                                        __ptext13 38A6  
                                      __ptext30 1DF8                                        __ptext22 398C  
                                      __ptext14 3988                                        __ptext31 33C0  
                                      __ptext23 31E6                                        __ptext15 3538  
                                      __ptext40 3704                                        __ptext32 3626  
                                      __ptext24 30B6                                        __ptext16 3952  
                                      __ptext41 34B4                                        __ptext33 365E  
                                      __ptext25 35EE                                        __ptext17 395C  
                                      __ptext50 341E                                        __ptext42 34F8  
                                      __ptext34 35B2                                        __ptext26 29D8  
                                      __ptext18 3966                                        __ptext51 3696  
                                      __ptext43 2B50                                        __ptext35 20D6  
                                      __ptext27 37CC                                        __ptext19 3868  
                                      __ptext60 397A                                        __ptext52 3842  
                                      __ptext44 2850                                        __ptext36 2E78  
                                      __ptext28 3354                                        __ptext61 3888  
                                      __ptext53 38C2                                        __ptext45 2DA4  
                                      __ptext37 2CB4                                        __ptext29 12A8  
                                      __ptext62 3770                                        __ptext54 3908  
                                      __ptext46 3150                                        __ptext38 1B14  
                                      __ptext63 0000                                        __ptext55 37F4  
                                      __ptext47 3970                                        __ptext39 2F48  
                                      __ptext48 38F2                                        __ptext57 373A  
                                      __ptext49 26B6                                        __ptext58 3990  
                                      __ptext59 182C                                __size_of_isupper 0038  
                                  _SSP2CON1bits 000F6C                         TMR0_WriteTimer@timerVal 0013  
                             ??_TMR0_WriteTimer 0015                                __size_of_toupper 005E  
                                 __size_of_atoi 019A                           main@writeAddress_1291 01F8  
                                 __size_of_ctoa 00D4                                   __size_of_main 1256  
                                 __size_of_dtoa 02E4                                   __size_of_utoa 0208  
                              ??_TMR0_ReadTimer 0003                                   __size_of_xtoa 02DE  
                    __size_of_SDCARD_WriteBlock 008E            __end_of_TMR0_DefaultInterruptHandler 3992  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 3990  
EUSART1_SetOverrunErrorHandler@interruptHandler 0013                                   _hexDumpBuffer 24CA  
                                 _sdCardBuffer1 05FC                                   _sdCardBuffer2 03FC  
                                      int$flags 004D                                        _vfprintf 3354  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                      main@addr 01D3                                       printf@fmt 00A3  
                         __size_of_printAddress 006C                                    ??_printAscii 003B  
                   _EUSART1_FramingErrorHandler 018C                                ___aomod@dividend 0013  
                                   ??_myTMR0ISR 000B                                  _vfpfcnvrt$2023 0090  
                                    _INTCONbits 000FF2                                        isalpha@c 0013  
                                      isdigit@c 0013                          ??_INTERRUPT_Initialize 0013  
                      SDCARD_Initialize@verbose 00AF                                        intlevel2 0000  
                             ?_microSecondDelay 0013                                        islower@c 0013  
                                      isspace@c 0013                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 395C         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 3952                                      _RCSTA1bits 000FAB  
                            ??_microSecondDelay 0015                              __end_of_printAscii 24CA  
                                      isupper@c 0013                                ??_ADC_Initialize 0013  
                                  _printAddress 32E8                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                  ?_hexDumpBuffer 00AD  
                                      printf@ap 00AB  EUSART1_SetFramingErrorHandler@interruptHandler 0013  
                               ___aomod@divisor 001B                              microSecondDelay@us 0013  
                                   ??_vfpfcnvrt 0082                                 ___aomod@counter 0023  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 004B  
                                    _SPI2_Close 398C                        __end_of_incrementAddress 34B4  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 36CE  
                                      toupper@c 0019                             _EPWM1_LoadDutyValue 3770  
                             microSecondDelay@i 0015                                    ___aodiv@sign 0024  
                __end_of_PIN_MANAGER_Initialize 37CC                       hexDumpBuffer@sdCardBuffer 00AD  
                                  ___aomod@sign 0024                                    fp__myTMR0ISR 0000  
                      __end_of_EPWM1_Initialize 3888                            ?_EPWM1_LoadDutyValue 0001  
