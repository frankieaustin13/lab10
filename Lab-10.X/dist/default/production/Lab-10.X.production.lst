

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 03 15:27:33 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 05/05/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC18F26K22 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     
    84 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
    85  0000                     
    86 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
    87  0000                     
    88 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
    89  0000                     
    90                           	psect	idataBANK0
    91  00EBC0                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for main@F6133
    95  00EBC0  80                 	db	128
    96  00EBC1  99                 	db	153
    97  00EBC2  B1                 	db	177
    98  00EBC3  C7                 	db	199
    99  00EBC4  DB                 	db	219
   100  00EBC5  EA                 	db	234
   101  00EBC6  F6                 	db	246
   102  00EBC7  FE                 	db	254
   103  00EBC8  FF                 	db	255
   104  00EBC9  FE                 	db	254
   105  00EBCA  F6                 	db	246
   106  00EBCB  EA                 	db	234
   107  00EBCC  DB                 	db	219
   108  00EBCD  C7                 	db	199
   109  00EBCE  B1                 	db	177
   110  00EBCF  99                 	db	153
   111  00EBD0  80                 	db	128
   112  00EBD1  67                 	db	103
   113  00EBD2  4F                 	db	79
   114  00EBD3  39                 	db	57
   115  00EBD4  25                 	db	37
   116  00EBD5  16                 	db	22
   117  00EBD6  0A                 	db	10
   118  00EBD7  02                 	db	2
   119  00EBD8  00                 	db	0
   120  00EBD9  02                 	db	2
   121  00EBDA  0A                 	db	10
   122  00EBDB  16                 	db	22
   123  00EBDC  25                 	db	37
   124  00EBDD  39                 	db	57
   125  00EBDE  4F                 	db	79
   126  00EBDF  67                 	db	103
   127  0000                     _ANSELA	set	3896
   128  0000                     _ANSELB	set	3897
   129  0000                     _ANSELC	set	3898
   130  0000                     _CCPTMRS0bits	set	3913
   131  0000                     _OSCTUNE	set	3995
   132  0000                     _OSCCON2	set	4050
   133  0000                     _OSCCON	set	4051
   134  0000                     _INTCON2bits	set	4081
   135  0000                     _WPUB	set	3937
   136  0000                     _TRISC	set	3988
   137  0000                     _TRISB	set	3987
   138  0000                     _TRISA	set	3986
   139  0000                     _LATC	set	3979
   140  0000                     _LATB	set	3978
   141  0000                     _LATA	set	3977
   142  0000                     _T2CONbits	set	4026
   143  0000                     _T2CON	set	4026
   144  0000                     _TMR2	set	4028
   145  0000                     _PR2	set	4027
   146  0000                     _T0CON	set	4053
   147  0000                     _INTCONbits	set	4082
   148  0000                     _TMR0L	set	4054
   149  0000                     _TMR0H	set	4055
   150  0000                     _T0CONbits	set	4053
   151  0000                     _TXREG1	set	4013
   152  0000                     _RCREG1	set	4014
   153  0000                     _RCSTA1bits	set	4011
   154  0000                     _TXSTA1bits	set	4012
   155  0000                     _PIR1bits	set	3998
   156  0000                     _SPBRGH1	set	4016
   157  0000                     _SPBRG1	set	4015
   158  0000                     _TXSTA1	set	4012
   159  0000                     _RCSTA1	set	4011
   160  0000                     _BAUDCON1	set	4024
   161  0000                     _CCPR1L	set	4030
   162  0000                     _CCPR1H	set	4031
   163  0000                     _PSTR1CON	set	4025
   164  0000                     _PWM1CON	set	4023
   165  0000                     _ECCP1AS	set	4022
   166  0000                     _CCP1CON	set	4029
   167  0000                     _PLLRDY	set	32407
   168                           
   169                           	psect	mediumconst
   170  00FCD6                     __pmediumconst:
   171                           	callstack 0
   172  00FCD6  00                 	db	0
   173  00FCD7                     STR_24:
   174  00FCD7  43                 	db	67	;'C'
   175  00FCD8  75                 	db	117	;'u'
   176  00FCD9  72                 	db	114	;'r'
   177  00FCDA  72                 	db	114	;'r'
   178  00FCDB  65                 	db	101	;'e'
   179  00FCDC  6E                 	db	110	;'n'
   180  00FCDD  74                 	db	116	;'t'
   181  00FCDE  6C                 	db	108	;'l'
   182  00FCDF  79                 	db	121	;'y'
   183  00FCE0  20                 	db	32
   184  00FCE1  67                 	db	103	;'g'
   185  00FCE2  65                 	db	101	;'e'
   186  00FCE3  6E                 	db	110	;'n'
   187  00FCE4  65                 	db	101	;'e'
   188  00FCE5  72                 	db	114	;'r'
   189  00FCE6  61                 	db	97	;'a'
   190  00FCE7  74                 	db	116	;'t'
   191  00FCE8  69                 	db	105	;'i'
   192  00FCE9  6E                 	db	110	;'n'
   193  00FCEA  67                 	db	103	;'g'
   194  00FCEB  20                 	db	32
   195  00FCEC  61                 	db	97	;'a'
   196  00FCED  20                 	db	32
   197  00FCEE  31                 	db	49	;'1'
   198  00FCEF  30                 	db	48	;'0'
   199  00FCF0  30                 	db	48	;'0'
   200  00FCF1  25                 	db	37
   201  00FCF2  25                 	db	37
   202  00FCF3  20                 	db	32
   203  00FCF4  64                 	db	100	;'d'
   204  00FCF5  75                 	db	117	;'u'
   205  00FCF6  74                 	db	116	;'t'
   206  00FCF7  79                 	db	121	;'y'
   207  00FCF8  20                 	db	32
   208  00FCF9  63                 	db	99	;'c'
   209  00FCFA  79                 	db	121	;'y'
   210  00FCFB  63                 	db	99	;'c'
   211  00FCFC  6C                 	db	108	;'l'
   212  00FCFD  65                 	db	101	;'e'
   213  00FCFE  20                 	db	32
   214  00FCFF  50                 	db	80	;'P'
   215  00FD00  57                 	db	87	;'W'
   216  00FD01  4D                 	db	77	;'M'
   217  00FD02  20                 	db	32
   218  00FD03  77                 	db	119	;'w'
   219  00FD04  61                 	db	97	;'a'
   220  00FD05  76                 	db	118	;'v'
   221  00FD06  65                 	db	101	;'e'
   222  00FD07  66                 	db	102	;'f'
   223  00FD08  6F                 	db	111	;'o'
   224  00FD09  72                 	db	114	;'r'
   225  00FD0A  6D                 	db	109	;'m'
   226  00FD0B  20                 	db	32
   227  00FD0C  6F                 	db	111	;'o'
   228  00FD0D  6E                 	db	110	;'n'
   229  00FD0E  20                 	db	32
   230  00FD0F  52                 	db	82	;'R'
   231  00FD10  43                 	db	67	;'C'
   232  00FD11  32                 	db	50	;'2'
   233  00FD12  2E                 	db	46
   234  00FD13  0D                 	db	13
   235  00FD14  0A                 	db	10
   236  00FD15  00                 	db	0
   237  00FD16                     STR_22:
   238  00FD16  43                 	db	67	;'C'
   239  00FD17  75                 	db	117	;'u'
   240  00FD18  72                 	db	114	;'r'
   241  00FD19  72                 	db	114	;'r'
   242  00FD1A  65                 	db	101	;'e'
   243  00FD1B  6E                 	db	110	;'n'
   244  00FD1C  74                 	db	116	;'t'
   245  00FD1D  6C                 	db	108	;'l'
   246  00FD1E  79                 	db	121	;'y'
   247  00FD1F  20                 	db	32
   248  00FD20  67                 	db	103	;'g'
   249  00FD21  65                 	db	101	;'e'
   250  00FD22  6E                 	db	110	;'n'
   251  00FD23  65                 	db	101	;'e'
   252  00FD24  72                 	db	114	;'r'
   253  00FD25  61                 	db	97	;'a'
   254  00FD26  74                 	db	116	;'t'
   255  00FD27  69                 	db	105	;'i'
   256  00FD28  6E                 	db	110	;'n'
   257  00FD29  67                 	db	103	;'g'
   258  00FD2A  20                 	db	32
   259  00FD2B  61                 	db	97	;'a'
   260  00FD2C  20                 	db	32
   261  00FD2D  30                 	db	48	;'0'
   262  00FD2E  25                 	db	37
   263  00FD2F  25                 	db	37
   264  00FD30  20                 	db	32
   265  00FD31  64                 	db	100	;'d'
   266  00FD32  75                 	db	117	;'u'
   267  00FD33  74                 	db	116	;'t'
   268  00FD34  79                 	db	121	;'y'
   269  00FD35  20                 	db	32
   270  00FD36  63                 	db	99	;'c'
   271  00FD37  79                 	db	121	;'y'
   272  00FD38  63                 	db	99	;'c'
   273  00FD39  6C                 	db	108	;'l'
   274  00FD3A  65                 	db	101	;'e'
   275  00FD3B  20                 	db	32
   276  00FD3C  50                 	db	80	;'P'
   277  00FD3D  57                 	db	87	;'W'
   278  00FD3E  4D                 	db	77	;'M'
   279  00FD3F  20                 	db	32
   280  00FD40  77                 	db	119	;'w'
   281  00FD41  61                 	db	97	;'a'
   282  00FD42  76                 	db	118	;'v'
   283  00FD43  65                 	db	101	;'e'
   284  00FD44  66                 	db	102	;'f'
   285  00FD45  6F                 	db	111	;'o'
   286  00FD46  72                 	db	114	;'r'
   287  00FD47  6D                 	db	109	;'m'
   288  00FD48  20                 	db	32
   289  00FD49  6F                 	db	111	;'o'
   290  00FD4A  6E                 	db	110	;'n'
   291  00FD4B  20                 	db	32
   292  00FD4C  52                 	db	82	;'R'
   293  00FD4D  43                 	db	67	;'C'
   294  00FD4E  32                 	db	50	;'2'
   295  00FD4F  2E                 	db	46
   296  00FD50  0D                 	db	13
   297  00FD51  0A                 	db	10
   298  00FD52  00                 	db	0
   299  00FD53                     STR_12:
   300  00FD53  73                 	db	115	;'s'
   301  00FD54  3A                 	db	58	;':'
   302  00FD55  20                 	db	32
   303  00FD56  73                 	db	115	;'s'
   304  00FD57  74                 	db	116	;'t'
   305  00FD58  65                 	db	101	;'e'
   306  00FD59  70                 	db	112	;'p'
   307  00FD5A  20                 	db	32
   308  00FD5B  74                 	db	116	;'t'
   309  00FD5C  68                 	db	104	;'h'
   310  00FD5D  72                 	db	114	;'r'
   311  00FD5E  6F                 	db	111	;'o'
   312  00FD5F  75                 	db	117	;'u'
   313  00FD60  67                 	db	103	;'g'
   314  00FD61  68                 	db	104	;'h'
   315  00FD62  20                 	db	32
   316  00FD63  73                 	db	115	;'s'
   317  00FD64  69                 	db	105	;'i'
   318  00FD65  6E                 	db	110	;'n'
   319  00FD66  65                 	db	101	;'e'
   320  00FD67  20                 	db	32
   321  00FD68  77                 	db	119	;'w'
   322  00FD69  61                 	db	97	;'a'
   323  00FD6A  76                 	db	118	;'v'
   324  00FD6B  65                 	db	101	;'e'
   325  00FD6C  20                 	db	32
   326  00FD6D  74                 	db	116	;'t'
   327  00FD6E  61                 	db	97	;'a'
   328  00FD6F  62                 	db	98	;'b'
   329  00FD70  6C                 	db	108	;'l'
   330  00FD71  65                 	db	101	;'e'
   331  00FD72  20                 	db	32
   332  00FD73  77                 	db	119	;'w'
   333  00FD74  69                 	db	105	;'i'
   334  00FD75  74                 	db	116	;'t'
   335  00FD76  68                 	db	104	;'h'
   336  00FD77  20                 	db	32
   337  00FD78  50                 	db	80	;'P'
   338  00FD79  49                 	db	73	;'I'
   339  00FD7A  43                 	db	67	;'C'
   340  00FD7B  20                 	db	32
   341  00FD7C  38                 	db	56	;'8'
   342  00FD7D  2D                 	db	45
   343  00FD7E  62                 	db	98	;'b'
   344  00FD7F  69                 	db	105	;'i'
   345  00FD80  74                 	db	116	;'t'
   346  00FD81  20                 	db	32
   347  00FD82  50                 	db	80	;'P'
   348  00FD83  57                 	db	87	;'W'
   349  00FD84  4D                 	db	77	;'M'
   350  00FD85  0D                 	db	13
   351  00FD86  0A                 	db	10
   352  00FD87  00                 	db	0
   353  00FD88                     STR_5:
   354  00FD88  2D                 	db	45
   355  00FD89  2D                 	db	45
   356  00FD8A  2D                 	db	45
   357  00FD8B  2D                 	db	45
   358  00FD8C  2D                 	db	45
   359  00FD8D  2D                 	db	45
   360  00FD8E  2D                 	db	45
   361  00FD8F  2D                 	db	45
   362  00FD90  2D                 	db	45
   363  00FD91  2D                 	db	45
   364  00FD92  2D                 	db	45
   365  00FD93  2D                 	db	45
   366  00FD94  2D                 	db	45
   367  00FD95  2D                 	db	45
   368  00FD96  2D                 	db	45
   369  00FD97  2D                 	db	45
   370  00FD98  2D                 	db	45
   371  00FD99  2D                 	db	45
   372  00FD9A  2D                 	db	45
   373  00FD9B  2D                 	db	45
   374  00FD9C  2D                 	db	45
   375  00FD9D  2D                 	db	45
   376  00FD9E  2D                 	db	45
   377  00FD9F  2D                 	db	45
   378  00FDA0  2D                 	db	45
   379  00FDA1  2D                 	db	45
   380  00FDA2  2D                 	db	45
   381  00FDA3  2D                 	db	45
   382  00FDA4  2D                 	db	45
   383  00FDA5  2D                 	db	45
   384  00FDA6  2D                 	db	45
   385  00FDA7  2D                 	db	45
   386  00FDA8  2D                 	db	45
   387  00FDA9  2D                 	db	45
   388  00FDAA  2D                 	db	45
   389  00FDAB  2D                 	db	45
   390  00FDAC  2D                 	db	45
   391  00FDAD  2D                 	db	45
   392  00FDAE  2D                 	db	45
   393  00FDAF  2D                 	db	45
   394  00FDB0  2D                 	db	45
   395  00FDB1  2D                 	db	45
   396  00FDB2  2D                 	db	45
   397  00FDB3  2D                 	db	45
   398  00FDB4  2D                 	db	45
   399  00FDB5  2D                 	db	45
   400  00FDB6  2D                 	db	45
   401  00FDB7  2D                 	db	45
   402  00FDB8  2D                 	db	45
   403  00FDB9  0D                 	db	13
   404  00FDBA  0A                 	db	10
   405  00FDBB  00                 	db	0
   406  00FDBC                     STR_30:
   407  00FDBC  50                 	db	80	;'P'
   408  00FDBD  72                 	db	114	;'r'
   409  00FDBE  65                 	db	101	;'e'
   410  00FDBF  73                 	db	115	;'s'
   411  00FDC0  73                 	db	115	;'s'
   412  00FDC1  20                 	db	32
   413  00FDC2  61                 	db	97	;'a'
   414  00FDC3  6E                 	db	110	;'n'
   415  00FDC4  79                 	db	121	;'y'
   416  00FDC5  20                 	db	32
   417  00FDC6  6F                 	db	111	;'o'
   418  00FDC7  74                 	db	116	;'t'
   419  00FDC8  68                 	db	104	;'h'
   420  00FDC9  65                 	db	101	;'e'
   421  00FDCA  72                 	db	114	;'r'
   422  00FDCB  20                 	db	32
   423  00FDCC  6B                 	db	107	;'k'
   424  00FDCD  65                 	db	101	;'e'
   425  00FDCE  79                 	db	121	;'y'
   426  00FDCF  20                 	db	32
   427  00FDD0  74                 	db	116	;'t'
   428  00FDD1  6F                 	db	111	;'o'
   429  00FDD2  20                 	db	32
   430  00FDD3  73                 	db	115	;'s'
   431  00FDD4  74                 	db	116	;'t'
   432  00FDD5  65                 	db	101	;'e'
   433  00FDD6  70                 	db	112	;'p'
   434  00FDD7  20                 	db	32
   435  00FDD8  74                 	db	116	;'t'
   436  00FDD9  68                 	db	104	;'h'
   437  00FDDA  72                 	db	114	;'r'
   438  00FDDB  6F                 	db	111	;'o'
   439  00FDDC  75                 	db	117	;'u'
   440  00FDDD  67                 	db	103	;'g'
   441  00FDDE  68                 	db	104	;'h'
   442  00FDDF  20                 	db	32
   443  00FDE0  73                 	db	115	;'s'
   444  00FDE1  69                 	db	105	;'i'
   445  00FDE2  6E                 	db	110	;'n'
   446  00FDE3  65                 	db	101	;'e'
   447  00FDE4  20                 	db	32
   448  00FDE5  74                 	db	116	;'t'
   449  00FDE6  61                 	db	97	;'a'
   450  00FDE7  62                 	db	98	;'b'
   451  00FDE8  6C                 	db	108	;'l'
   452  00FDE9  65                 	db	101	;'e'
   453  00FDEA  2E                 	db	46
   454  00FDEB  0D                 	db	13
   455  00FDEC  0A                 	db	10
   456  00FDED  0A                 	db	10
   457  00FDEE  00                 	db	0
   458  00FDEF                     STR_13:
   459  00FDEF  53                 	db	83	;'S'
   460  00FDF0  3A                 	db	58	;':'
   461  00FDF1  20                 	db	32
   462  00FDF2  73                 	db	115	;'s'
   463  00FDF3  69                 	db	105	;'i'
   464  00FDF4  6E                 	db	110	;'n'
   465  00FDF5  67                 	db	103	;'g'
   466  00FDF6  6C                 	db	108	;'l'
   467  00FDF7  65                 	db	101	;'e'
   468  00FDF8  20                 	db	32
   469  00FDF9  73                 	db	115	;'s'
   470  00FDFA  74                 	db	116	;'t'
   471  00FDFB  65                 	db	101	;'e'
   472  00FDFC  70                 	db	112	;'p'
   473  00FDFD  20                 	db	32
   474  00FDFE  50                 	db	80	;'P'
   475  00FDFF  57                 	db	87	;'W'
   476  00FE00  4D                 	db	77	;'M'
   477  00FE01  20                 	db	32
   478  00FE02  64                 	db	100	;'d'
   479  00FE03  75                 	db	117	;'u'
   480  00FE04  74                 	db	116	;'t'
   481  00FE05  79                 	db	121	;'y'
   482  00FE06  20                 	db	32
   483  00FE07  63                 	db	99	;'c'
   484  00FE08  79                 	db	121	;'y'
   485  00FE09  63                 	db	99	;'c'
   486  00FE0A  6C                 	db	108	;'l'
   487  00FE0B  65                 	db	101	;'e'
   488  00FE0C  20                 	db	32
   489  00FE0D  66                 	db	102	;'f'
   490  00FE0E  72                 	db	114	;'r'
   491  00FE0F  6F                 	db	111	;'o'
   492  00FE10  6D                 	db	109	;'m'
   493  00FE11  20                 	db	32
   494  00FE12  30                 	db	48	;'0'
   495  00FE13  25                 	db	37
   496  00FE14  25                 	db	37
   497  00FE15  20                 	db	32
   498  00FE16  74                 	db	116	;'t'
   499  00FE17  6F                 	db	111	;'o'
   500  00FE18  20                 	db	32
   501  00FE19  31                 	db	49	;'1'
   502  00FE1A  30                 	db	48	;'0'
   503  00FE1B  30                 	db	48	;'0'
   504  00FE1C  25                 	db	37
   505  00FE1D  25                 	db	37
   506  00FE1E  2E                 	db	46
   507  00FE1F  0D                 	db	13
   508  00FE20  0A                 	db	10
   509  00FE21  00                 	db	0
   510  00FE22                     STR_19:
   511  00FE22  43                 	db	67	;'C'
   512  00FE23  6F                 	db	111	;'o'
   513  00FE24  6E                 	db	110	;'n'
   514  00FE25  6E                 	db	110	;'n'
   515  00FE26  65                 	db	101	;'e'
   516  00FE27  63                 	db	99	;'c'
   517  00FE28  74                 	db	116	;'t'
   518  00FE29  20                 	db	32
   519  00FE2A  6A                 	db	106	;'j'
   520  00FE2B  75                 	db	117	;'u'
   521  00FE2C  6D                 	db	109	;'m'
   522  00FE2D  70                 	db	112	;'p'
   523  00FE2E  65                 	db	101	;'e'
   524  00FE2F  72                 	db	114	;'r'
   525  00FE30  20                 	db	32
   526  00FE31  6F                 	db	111	;'o'
   527  00FE32  76                 	db	118	;'v'
   528  00FE33  65                 	db	101	;'e'
   529  00FE34  72                 	db	114	;'r'
   530  00FE35  20                 	db	32
   531  00FE36  74                 	db	116	;'t'
   532  00FE37  68                 	db	104	;'h'
   533  00FE38  65                 	db	101	;'e'
   534  00FE39  20                 	db	32
   535  00FE3A  52                 	db	82	;'R'
   536  00FE3B  43                 	db	67	;'C'
   537  00FE3C  32                 	db	50	;'2'
   538  00FE3D  2F                 	db	47
   539  00FE3E  4C                 	db	76	;'L'
   540  00FE3F  50                 	db	80	;'P'
   541  00FE40  46                 	db	70	;'F'
   542  00FE41  5F                 	db	95	;'_'
   543  00FE42  69                 	db	105	;'i'
   544  00FE43  6E                 	db	110	;'n'
   545  00FE44  20                 	db	32
   546  00FE45  68                 	db	104	;'h'
   547  00FE46  65                 	db	101	;'e'
   548  00FE47  61                 	db	97	;'a'
   549  00FE48  64                 	db	100	;'d'
   550  00FE49  65                 	db	101	;'e'
   551  00FE4A  72                 	db	114	;'r'
   552  00FE4B  20                 	db	32
   553  00FE4C  70                 	db	112	;'p'
   554  00FE4D  69                 	db	105	;'i'
   555  00FE4E  6E                 	db	110	;'n'
   556  00FE4F  73                 	db	115	;'s'
   557  00FE50  2E                 	db	46
   558  00FE51  0D                 	db	13
   559  00FE52  0A                 	db	10
   560  00FE53  00                 	db	0
   561  00FE54                     STR_21:
   562  00FE54  43                 	db	67	;'C'
   563  00FE55  6F                 	db	111	;'o'
   564  00FE56  6E                 	db	110	;'n'
   565  00FE57  6E                 	db	110	;'n'
   566  00FE58  65                 	db	101	;'e'
   567  00FE59  63                 	db	99	;'c'
   568  00FE5A  74                 	db	116	;'t'
   569  00FE5B  20                 	db	32
   570  00FE5C  43                 	db	67	;'C'
   571  00FE5D  68                 	db	104	;'h'
   572  00FE5E  61                 	db	97	;'a'
   573  00FE5F  6E                 	db	110	;'n'
   574  00FE60  6E                 	db	110	;'n'
   575  00FE61  65                 	db	101	;'e'
   576  00FE62  6C                 	db	108	;'l'
   577  00FE63  20                 	db	32
   578  00FE64  32                 	db	50	;'2'
   579  00FE65  20                 	db	32
   580  00FE66  73                 	db	115	;'s'
   581  00FE67  63                 	db	99	;'c'
   582  00FE68  6F                 	db	111	;'o'
   583  00FE69  70                 	db	112	;'p'
   584  00FE6A  65                 	db	101	;'e'
   585  00FE6B  20                 	db	32
   586  00FE6C  70                 	db	112	;'p'
   587  00FE6D  72                 	db	114	;'r'
   588  00FE6E  6F                 	db	111	;'o'
   589  00FE6F  62                 	db	98	;'b'
   590  00FE70  65                 	db	101	;'e'
   591  00FE71  20                 	db	32
   592  00FE72  74                 	db	116	;'t'
   593  00FE73  6F                 	db	111	;'o'
   594  00FE74  20                 	db	32
   595  00FE75  4C                 	db	76	;'L'
   596  00FE76  50                 	db	80	;'P'
   597  00FE77  46                 	db	70	;'F'
   598  00FE78  5F                 	db	95	;'_'
   599  00FE79  6F                 	db	111	;'o'
   600  00FE7A  75                 	db	117	;'u'
   601  00FE7B  74                 	db	116	;'t'
   602  00FE7C  2E                 	db	46
   603  00FE7D  0D                 	db	13
   604  00FE7E  0A                 	db	10
   605  00FE7F  00                 	db	0
   606  00FE80                     STR_14:
   607  00FE80  70                 	db	112	;'p'
   608  00FE81  3A                 	db	58	;':'
   609  00FE82  20                 	db	32
   610  00FE83  47                 	db	71	;'G'
   611  00FE84  65                 	db	101	;'e'
   612  00FE85  6E                 	db	110	;'n'
   613  00FE86  65                 	db	101	;'e'
   614  00FE87  72                 	db	114	;'r'
   615  00FE88  61                 	db	97	;'a'
   616  00FE89  74                 	db	116	;'t'
   617  00FE8A  65                 	db	101	;'e'
   618  00FE8B  20                 	db	32
   619  00FE8C  61                 	db	97	;'a'
   620  00FE8D  20                 	db	32
   621  00FE8E  73                 	db	115	;'s'
   622  00FE8F  69                 	db	105	;'i'
   623  00FE90  6E                 	db	110	;'n'
   624  00FE91  65                 	db	101	;'e'
   625  00FE92  20                 	db	32
   626  00FE93  77                 	db	119	;'w'
   627  00FE94  61                 	db	97	;'a'
   628  00FE95  76                 	db	118	;'v'
   629  00FE96  65                 	db	101	;'e'
   630  00FE97  20                 	db	32
   631  00FE98  75                 	db	117	;'u'
   632  00FE99  73                 	db	115	;'s'
   633  00FE9A  69                 	db	105	;'i'
   634  00FE9B  6E                 	db	110	;'n'
   635  00FE9C  67                 	db	103	;'g'
   636  00FE9D  20                 	db	32
   637  00FE9E  50                 	db	80	;'P'
   638  00FE9F  57                 	db	87	;'W'
   639  00FEA0  4D                 	db	77	;'M'
   640  00FEA1  20                 	db	32
   641  00FEA2  2B                 	db	43
   642  00FEA3  20                 	db	32
   643  00FEA4  4C                 	db	76	;'L'
   644  00FEA5  50                 	db	80	;'P'
   645  00FEA6  46                 	db	70	;'F'
   646  00FEA7  0D                 	db	13
   647  00FEA8  0A                 	db	10
   648  00FEA9  00                 	db	0
   649  00FEAA                     STR_23:
   650  00FEAA  50                 	db	80	;'P'
   651  00FEAB  72                 	db	114	;'r'
   652  00FEAC  65                 	db	101	;'e'
   653  00FEAD  73                 	db	115	;'s'
   654  00FEAE  73                 	db	115	;'s'
   655  00FEAF  20                 	db	32
   656  00FEB0  61                 	db	97	;'a'
   657  00FEB1  6E                 	db	110	;'n'
   658  00FEB2  79                 	db	121	;'y'
   659  00FEB3  20                 	db	32
   660  00FEB4  6B                 	db	107	;'k'
   661  00FEB5  65                 	db	101	;'e'
   662  00FEB6  79                 	db	121	;'y'
   663  00FEB7  20                 	db	32
   664  00FEB8  74                 	db	116	;'t'
   665  00FEB9  6F                 	db	111	;'o'
   666  00FEBA  20                 	db	32
   667  00FEBB  63                 	db	99	;'c'
   668  00FEBC  68                 	db	104	;'h'
   669  00FEBD  61                 	db	97	;'a'
   670  00FEBE  6E                 	db	110	;'n'
   671  00FEBF  67                 	db	103	;'g'
   672  00FEC0  65                 	db	101	;'e'
   673  00FEC1  20                 	db	32
   674  00FEC2  74                 	db	116	;'t'
   675  00FEC3  68                 	db	104	;'h'
   676  00FEC4  69                 	db	105	;'i'
   677  00FEC5  73                 	db	115	;'s'
   678  00FEC6  20                 	db	32
   679  00FEC7  74                 	db	116	;'t'
   680  00FEC8  6F                 	db	111	;'o'
   681  00FEC9  20                 	db	32
   682  00FECA  31                 	db	49	;'1'
   683  00FECB  30                 	db	48	;'0'
   684  00FECC  30                 	db	48	;'0'
   685  00FECD  25                 	db	37
   686  00FECE  2E                 	db	46
   687  00FECF  0D                 	db	13
   688  00FED0  0A                 	db	10
   689  00FED1  00                 	db	0
   690  00FED2                     STR_20:
   691  00FED2  43                 	db	67	;'C'
   692  00FED3  6F                 	db	111	;'o'
   693  00FED4  6E                 	db	110	;'n'
   694  00FED5  6E                 	db	110	;'n'
   695  00FED6  65                 	db	101	;'e'
   696  00FED7  63                 	db	99	;'c'
   697  00FED8  74                 	db	116	;'t'
   698  00FED9  20                 	db	32
   699  00FEDA  43                 	db	67	;'C'
   700  00FEDB  68                 	db	104	;'h'
   701  00FEDC  61                 	db	97	;'a'
   702  00FEDD  6E                 	db	110	;'n'
   703  00FEDE  6E                 	db	110	;'n'
   704  00FEDF  65                 	db	101	;'e'
   705  00FEE0  6C                 	db	108	;'l'
   706  00FEE1  20                 	db	32
   707  00FEE2  31                 	db	49	;'1'
   708  00FEE3  20                 	db	32
   709  00FEE4  73                 	db	115	;'s'
   710  00FEE5  63                 	db	99	;'c'
   711  00FEE6  6F                 	db	111	;'o'
   712  00FEE7  70                 	db	112	;'p'
   713  00FEE8  65                 	db	101	;'e'
   714  00FEE9  20                 	db	32
   715  00FEEA  70                 	db	112	;'p'
   716  00FEEB  72                 	db	114	;'r'
   717  00FEEC  6F                 	db	111	;'o'
   718  00FEED  62                 	db	98	;'b'
   719  00FEEE  65                 	db	101	;'e'
   720  00FEEF  20                 	db	32
   721  00FEF0  74                 	db	116	;'t'
   722  00FEF1  6F                 	db	111	;'o'
   723  00FEF2  20                 	db	32
   724  00FEF3  52                 	db	82	;'R'
   725  00FEF4  43                 	db	67	;'C'
   726  00FEF5  32                 	db	50	;'2'
   727  00FEF6  2E                 	db	46
   728  00FEF7  0D                 	db	13
   729  00FEF8  0A                 	db	10
   730  00FEF9  00                 	db	0
   731  00FEFA                     STR_11:
   732  00FEFA  2B                 	db	43
   733  00FEFB  2F                 	db	47
   734  00FEFC  2D                 	db	45
   735  00FEFD  3A                 	db	58	;':'
   736  00FEFE  20                 	db	32
   737  00FEFF  69                 	db	105	;'i'
   738  00FF00  6E                 	db	110	;'n'
   739  00FF01  63                 	db	99	;'c'
   740  00FF02  72                 	db	114	;'r'
   741  00FF03  65                 	db	101	;'e'
   742  00FF04  61                 	db	97	;'a'
   743  00FF05  73                 	db	115	;'s'
   744  00FF06  65                 	db	101	;'e'
   745  00FF07  2F                 	db	47
   746  00FF08  64                 	db	100	;'d'
   747  00FF09  65                 	db	101	;'e'
   748  00FF0A  63                 	db	99	;'c'
   749  00FF0B  72                 	db	114	;'r'
   750  00FF0C  65                 	db	101	;'e'
   751  00FF0D  61                 	db	97	;'a'
   752  00FF0E  73                 	db	115	;'s'
   753  00FF0F  65                 	db	101	;'e'
   754  00FF10  20                 	db	32
   755  00FF11  76                 	db	118	;'v'
   756  00FF12  6F                 	db	111	;'o'
   757  00FF13  6C                 	db	108	;'l'
   758  00FF14  75                 	db	117	;'u'
   759  00FF15  6D                 	db	109	;'m'
   760  00FF16  65                 	db	101	;'e'
   761  00FF17  0D                 	db	13
   762  00FF18  0A                 	db	10
   763  00FF19  00                 	db	0
   764  00FF1A                     STR_31:
   765  00FF1A  43                 	db	67	;'C'
   766  00FF1B  75                 	db	117	;'u'
   767  00FF1C  72                 	db	114	;'r'
   768  00FF1D  72                 	db	114	;'r'
   769  00FF1E  65                 	db	101	;'e'
   770  00FF1F  6E                 	db	110	;'n'
   771  00FF20  74                 	db	116	;'t'
   772  00FF21  20                 	db	32
   773  00FF22  4C                 	db	76	;'L'
   774  00FF23  6F                 	db	111	;'o'
   775  00FF24  61                 	db	97	;'a'
   776  00FF25  64                 	db	100	;'d'
   777  00FF26  44                 	db	68	;'D'
   778  00FF27  75                 	db	117	;'u'
   779  00FF28  74                 	db	116	;'t'
   780  00FF29  79                 	db	121	;'y'
   781  00FF2A  56                 	db	86	;'V'
   782  00FF2B  61                 	db	97	;'a'
   783  00FF2C  6C                 	db	108	;'l'
   784  00FF2D  75                 	db	117	;'u'
   785  00FF2E  65                 	db	101	;'e'
   786  00FF2F  20                 	db	32
   787  00FF30  3D                 	db	61	;'='
   788  00FF31  20                 	db	32
   789  00FF32  25                 	db	37
   790  00FF33  64                 	db	100	;'d'
   791  00FF34  0D                 	db	13
   792  00FF35  0A                 	db	10
   793  00FF36  00                 	db	0
   794  00FF37                     STR_2:
   795  00FF37  41                 	db	65	;'A'
   796  00FF38  6E                 	db	110	;'n'
   797  00FF39  61                 	db	97	;'a'
   798  00FF3A  6C                 	db	108	;'l'
   799  00FF3B  6F                 	db	111	;'o'
   800  00FF3C  67                 	db	103	;'g'
   801  00FF3D  20                 	db	32
   802  00FF3E  77                 	db	119	;'w'
   803  00FF3F  61                 	db	97	;'a'
   804  00FF40  76                 	db	118	;'v'
   805  00FF41  65                 	db	101	;'e'
   806  00FF42  66                 	db	102	;'f'
   807  00FF43  6F                 	db	111	;'o'
   808  00FF44  72                 	db	114	;'r'
   809  00FF45  6D                 	db	109	;'m'
   810  00FF46  20                 	db	32
   811  00FF47  67                 	db	103	;'g'
   812  00FF48  65                 	db	101	;'e'
   813  00FF49  6E                 	db	110	;'n'
   814  00FF4A  65                 	db	101	;'e'
   815  00FF4B  72                 	db	114	;'r'
   816  00FF4C  61                 	db	97	;'a'
   817  00FF4D  74                 	db	116	;'t'
   818  00FF4E  6F                 	db	111	;'o'
   819  00FF4F  72                 	db	114	;'r'
   820  00FF50  0D                 	db	13
   821  00FF51  0A                 	db	10
   822  00FF52  00                 	db	0
   823  00FF53                     STR_25:
   824  00FF53  50                 	db	80	;'P'
   825  00FF54  72                 	db	114	;'r'
   826  00FF55  65                 	db	101	;'e'
   827  00FF56  73                 	db	115	;'s'
   828  00FF57  73                 	db	115	;'s'
   829  00FF58  20                 	db	32
   830  00FF59  61                 	db	97	;'a'
   831  00FF5A  6E                 	db	110	;'n'
   832  00FF5B  79                 	db	121	;'y'
   833  00FF5C  20                 	db	32
   834  00FF5D  6B                 	db	107	;'k'
   835  00FF5E  65                 	db	101	;'e'
   836  00FF5F  79                 	db	121	;'y'
   837  00FF60  20                 	db	32
   838  00FF61  74                 	db	116	;'t'
   839  00FF62  6F                 	db	111	;'o'
   840  00FF63  20                 	db	32
   841  00FF64  65                 	db	101	;'e'
   842  00FF65  78                 	db	120	;'x'
   843  00FF66  69                 	db	105	;'i'
   844  00FF67  74                 	db	116	;'t'
   845  00FF68  2E                 	db	46
   846  00FF69  0D                 	db	13
   847  00FF6A  0A                 	db	10
   848  00FF6B  00                 	db	0
   849  00FF6C                     STR_10:
   850  00FF6C  7A                 	db	122	;'z'
   851  00FF6D  3A                 	db	58	;':'
   852  00FF6E  20                 	db	32
   853  00FF6F  43                 	db	67	;'C'
   854  00FF70  6C                 	db	108	;'l'
   855  00FF71  65                 	db	101	;'e'
   856  00FF72  61                 	db	97	;'a'
   857  00FF73  72                 	db	114	;'r'
   858  00FF74  20                 	db	32
   859  00FF75  74                 	db	116	;'t'
   860  00FF76  68                 	db	104	;'h'
   861  00FF77  65                 	db	101	;'e'
   862  00FF78  20                 	db	32
   863  00FF79  74                 	db	116	;'t'
   864  00FF7A  65                 	db	101	;'e'
   865  00FF7B  72                 	db	114	;'r'
   866  00FF7C  6D                 	db	109	;'m'
   867  00FF7D  69                 	db	105	;'i'
   868  00FF7E  6E                 	db	110	;'n'
   869  00FF7F  61                 	db	97	;'a'
   870  00FF80  6C                 	db	108	;'l'
   871  00FF81  0D                 	db	13
   872  00FF82  0A                 	db	10
   873  00FF83  00                 	db	0
   874  00FF84                     STR_9:
   875  00FF84  5A                 	db	90	;'Z'
   876  00FF85  3A                 	db	58	;':'
   877  00FF86  20                 	db	32
   878  00FF87  52                 	db	82	;'R'
   879  00FF88  65                 	db	101	;'e'
   880  00FF89  73                 	db	115	;'s'
   881  00FF8A  65                 	db	101	;'e'
   882  00FF8B  74                 	db	116	;'t'
   883  00FF8C  20                 	db	32
   884  00FF8D  70                 	db	112	;'p'
   885  00FF8E  72                 	db	114	;'r'
   886  00FF8F  6F                 	db	111	;'o'
   887  00FF90  63                 	db	99	;'c'
   888  00FF91  65                 	db	101	;'e'
   889  00FF92  73                 	db	115	;'s'
   890  00FF93  73                 	db	115	;'s'
   891  00FF94  6F                 	db	111	;'o'
   892  00FF95  72                 	db	114	;'r'
   893  00FF96  0D                 	db	13
   894  00FF97  0A                 	db	10
   895  00FF98  00                 	db	0
   896  00FF99                     STR_29:
   897  00FF99  50                 	db	80	;'P'
   898  00FF9A  72                 	db	114	;'r'
   899  00FF9B  65                 	db	101	;'e'
   900  00FF9C  73                 	db	115	;'s'
   901  00FF9D  73                 	db	115	;'s'
   902  00FF9E  20                 	db	32
   903  00FF9F  78                 	db	120	;'x'
   904  00FFA0  20                 	db	32
   905  00FFA1  74                 	db	116	;'t'
   906  00FFA2  6F                 	db	111	;'o'
   907  00FFA3  20                 	db	32
   908  00FFA4  65                 	db	101	;'e'
   909  00FFA5  78                 	db	120	;'x'
   910  00FFA6  69                 	db	105	;'i'
   911  00FFA7  74                 	db	116	;'t'
   912  00FFA8  2E                 	db	46
   913  00FFA9  0D                 	db	13
   914  00FFAA  0A                 	db	10
   915  00FFAB  00                 	db	0
   916  00FFAC                     STR_38:
   917  00FFAC  55                 	db	85	;'U'
   918  00FFAD  6E                 	db	110	;'n'
   919  00FFAE  6B                 	db	107	;'k'
   920  00FFAF  6E                 	db	110	;'n'
   921  00FFB0  6F                 	db	111	;'o'
   922  00FFB1  77                 	db	119	;'w'
   923  00FFB2  6E                 	db	110	;'n'
   924  00FFB3  20                 	db	32
   925  00FFB4  6B                 	db	107	;'k'
   926  00FFB5  65                 	db	101	;'e'
   927  00FFB6  79                 	db	121	;'y'
   928  00FFB7  20                 	db	32
   929  00FFB8  25                 	db	37
   930  00FFB9  63                 	db	99	;'c'
   931  00FFBA  0D                 	db	13
   932  00FFBB  0A                 	db	10
   933  00FFBC  00                 	db	0
   934  00FFBD                     STR_7:
   935  00FFBD  3F                 	db	63	;'?'
   936  00FFBE  3A                 	db	58	;':'
   937  00FFBF  20                 	db	32
   938  00FFC0  68                 	db	104	;'h'
   939  00FFC1  65                 	db	101	;'e'
   940  00FFC2  6C                 	db	108	;'l'
   941  00FFC3  70                 	db	112	;'p'
   942  00FFC4  20                 	db	32
   943  00FFC5  6D                 	db	109	;'m'
   944  00FFC6  65                 	db	101	;'e'
   945  00FFC7  6E                 	db	110	;'n'
   946  00FFC8  75                 	db	117	;'u'
   947  00FFC9  0D                 	db	13
   948  00FFCA  0A                 	db	10
   949  00FFCB  00                 	db	0
   950  00FFCC                     STR_1:
   951  00FFCC  69                 	db	105	;'i'
   952  00FFCD  6E                 	db	110	;'n'
   953  00FFCE  4C                 	db	76	;'L'
   954  00FFCF  61                 	db	97	;'a'
   955  00FFD0  62                 	db	98	;'b'
   956  00FFD1  20                 	db	32
   957  00FFD2  31                 	db	49	;'1'
   958  00FFD3  30                 	db	48	;'0'
   959  00FFD4  0D                 	db	13
   960  00FFD5  0A                 	db	10
   961  00FFD6  00                 	db	0
   962  00FFD7                     STR_32:
   963  00FFD7  45                 	db	69	;'E'
   964  00FFD8  78                 	db	120	;'x'
   965  00FFD9  69                 	db	105	;'i'
   966  00FFDA  74                 	db	116	;'t'
   967  00FFDB  20                 	db	32
   968  00FFDC  50                 	db	80	;'P'
   969  00FFDD  57                 	db	87	;'W'
   970  00FFDE  4D                 	db	77	;'M'
   971  00FFDF  0D                 	db	13
   972  00FFE0  0A                 	db	10
   973  00FFE1  00                 	db	0
   974  00FFE2                     STR_3:
   975  00FFE2  44                 	db	68	;'D'
   976  00FFE3  65                 	db	101	;'e'
   977  00FFE4  76                 	db	118	;'v'
   978  00FFE5  27                 	db	39
   979  00FFE6  32                 	db	50	;'2'
   980  00FFE7  31                 	db	49	;'1'
   981  00FFE8  0D                 	db	13
   982  00FFE9  0A                 	db	10
   983  00FFEA  00                 	db	0
   984  00FFEB                     STR_16:
   985  00FFEB  6F                 	db	111	;'o'
   986  00FFEC  3A                 	db	58	;':'
   987  00FFED  09                 	db	9
   988  00FFEE  6F                 	db	111	;'o'
   989  00FFEF  6B                 	db	107	;'k'
   990  00FFF0  0D                 	db	13
   991  00FFF1  0A                 	db	10
   992  00FFF2  00                 	db	0
   993  00FFF3                     STR_8:
   994  00FFF3  6F                 	db	111	;'o'
   995  00FFF4  3A                 	db	58	;':'
   996  00FFF5  20                 	db	32
   997  00FFF6  6B                 	db	107	;'k'
   998  00FFF7  0D                 	db	13
   999  00FFF8  0A                 	db	10
  1000  00FFF9  00                 	db	0
  1001  00FFFA                     STR_4:
  1002  00FFFA  0D                 	db	13
  1003  00FFFB  0A                 	db	10
  1004  00FFFC  3E                 	db	62	;'>'
  1005  00FFFD  20                 	db	32
  1006  00FFFE  00                 	db	0
  1007  00FFFF  00                 	db	0	; dummy byte at the end
  1008  0000                     
  1009                           ; #config settings
  1010                           
  1011                           	psect	cinit
  1012  00ECB2                     __pcinit:
  1013                           	callstack 0
  1014  00ECB2                     start_initialization:
  1015                           	callstack 0
  1016  00ECB2                     __initialization:
  1017                           	callstack 0
  1018                           
  1019                           ; Initialize objects allocated to BANK0 (32 bytes)
  1020                           ; load TBLPTR registers with __pidataBANK0
  1021  00ECB2  0EC0               	movlw	low __pidataBANK0
  1022  00ECB4  6EF6               	movwf	tblptrl,c
  1023  00ECB6  0EEB               	movlw	high __pidataBANK0
  1024  00ECB8  6EF7               	movwf	tblptrh,c
  1025  00ECBA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1026  00ECBC  6EF8               	movwf	tblptru,c
  1027  00ECBE  EE00  F0BB         	lfsr	0,__pdataBANK0
  1028  00ECC2  EE10 F020          	lfsr	1,32
  1029  00ECC6                     copy_data0:
  1030  00ECC6  0009               	tblrd		*+
  1031  00ECC8  CFF5 FFEE          	movff	tablat,postinc0
  1032  00ECCC  50E5               	movf	postdec1,w,c
  1033  00ECCE  50E1               	movf	fsr1l,w,c
  1034  00ECD0  E1FA               	bnz	copy_data0
  1035                           
  1036                           ; Clear objects allocated to BANK0 (48 bytes)
  1037  00ECD2  EE00  F060         	lfsr	0,__pbssBANK0
  1038  00ECD6  0E30               	movlw	48
  1039  00ECD8                     clear_0:
  1040  00ECD8  6AEE               	clrf	postinc0,c
  1041  00ECDA  06E8               	decf	wreg,f,c
  1042  00ECDC  E1FD               	bnz	clear_0
  1043                           
  1044                           ; Clear objects allocated to COMRAM (1 bytes)
  1045  00ECDE  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  1046  00ECE0                     end_of_initialization:
  1047                           	callstack 0
  1048  00ECE0                     __end_of__initialization:
  1049                           	callstack 0
  1050  00ECE0  0100               	movlb	0
  1051  00ECE2  EF3B  F07C         	goto	_main	;jump to C main() function
  1052                           
  1053                           	psect	bssCOMRAM
  1054  00005F                     __pbssCOMRAM:
  1055                           	callstack 0
  1056  00005F                     _eusart1RxLastError:
  1057                           	callstack 0
  1058  00005F                     	ds	1
  1059                           
  1060                           	psect	bssBANK0
  1061  000060                     __pbssBANK0:
  1062                           	callstack 0
  1063  000060                     _nout:
  1064                           	callstack 0
  1065  000060                     	ds	2
  1066  000062                     _width:
  1067                           	callstack 0
  1068  000062                     	ds	2
  1069  000064                     _prec:
  1070                           	callstack 0
  1071  000064                     	ds	2
  1072  000066                     _flags:
  1073                           	callstack 0
  1074  000066                     	ds	2
  1075  000068                     _timer0ReloadVal:
  1076                           	callstack 0
  1077  000068                     	ds	2
  1078  00006A                     _EUSART1_ErrorHandler:
  1079                           	callstack 0
  1080  00006A                     	ds	2
  1081  00006C                     _EUSART1_OverrunErrorHandler:
  1082                           	callstack 0
  1083  00006C                     	ds	2
  1084  00006E                     _EUSART1_FramingErrorHandler:
  1085                           	callstack 0
  1086  00006E                     	ds	2
  1087  000070                     _dbuf:
  1088                           	callstack 0
  1089  000070                     	ds	32
  1090                           
  1091                           	psect	dataBANK0
  1092  0000BB                     __pdataBANK0:
  1093                           	callstack 0
  1094  0000BB                     main@F6133:
  1095                           	callstack 0
  1096  0000BB                     	ds	32
  1097                           
  1098                           	psect	cstackBANK0
  1099  000090                     __pcstackBANK0:
  1100                           	callstack 0
  1101  000090                     	ds	2
  1102  000092                     printf@ap:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x2
  1106  000092                     	ds	2
  1107  000094                     ??_main:
  1108                           
  1109                           ; 1 bytes @ 0x4
  1110  000094                     	ds	2
  1111  000096                     main@sin:
  1112                           	callstack 0
  1113                           
  1114                           ; 32 bytes @ 0x6
  1115  000096                     	ds	32
  1116  0000B6                     main@volumeAdjust:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x26
  1120  0000B6                     	ds	1
  1121  0000B7                     main@cmd:
  1122                           	callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x27
  1125  0000B7                     	ds	1
  1126  0000B8                     main@i:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x28
  1130  0000B8                     	ds	1
  1131  0000B9                     main@index:
  1132                           	callstack 0
  1133                           
  1134                           ; 2 bytes @ 0x29
  1135  0000B9                     	ds	2
  1136                           
  1137                           	psect	cstackCOMRAM
  1138  000001                     __pcstackCOMRAM:
  1139                           	callstack 0
  1140  000001                     ??_TMR0_Initialize:
  1141  000001                     ?_strlen:
  1142                           	callstack 0
  1143  000001                     ?_TMR0_ReadTimer:
  1144                           	callstack 0
  1145  000001                     ?___aodiv:
  1146                           	callstack 0
  1147  000001                     ?___aomod:
  1148                           	callstack 0
  1149  000001                     EUSART1_Write@txData:
  1150                           	callstack 0
  1151  000001                     EPWM1_LoadDutyValue@dutyValue:
  1152                           	callstack 0
  1153  000001                     EUSART1_SetFramingErrorHandler@interruptHandler:
  1154                           	callstack 0
  1155  000001                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  1156                           	callstack 0
  1157  000001                     EUSART1_SetErrorHandler@interruptHandler:
  1158                           	callstack 0
  1159  000001                     strlen@s:
  1160                           	callstack 0
  1161  000001                     ___aodiv@dividend:
  1162                           	callstack 0
  1163  000001                     ___aomod@dividend:
  1164                           	callstack 0
  1165                           
  1166                           ; 8 bytes @ 0x0
  1167  000001                     	ds	1
  1168  000002                     putch@txData:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x1
  1172  000002                     	ds	1
  1173  000003                     ??_EPWM1_LoadDutyValue:
  1174  000003                     ??_TMR0_ReadTimer:
  1175  000003                     fputc@c:
  1176                           	callstack 0
  1177  000003                     strlen@a:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x2
  1181  000003                     	ds	2
  1182  000005                     TMR0_ReadTimer@readVal:
  1183                           	callstack 0
  1184  000005                     fputc@fp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0x4
  1188  000005                     	ds	2
  1189  000007                     ??_fputc:
  1190  000007                     TMR0_ReadTimer@readValLow:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x6
  1194  000007                     	ds	1
  1195  000008                     TMR0_ReadTimer@readValHigh:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x7
  1199  000008                     	ds	1
  1200  000009                     TMR0_WriteTimer@timerVal:
  1201                           	callstack 0
  1202  000009                     ___aodiv@divisor:
  1203                           	callstack 0
  1204  000009                     ___aomod@divisor:
  1205                           	callstack 0
  1206                           
  1207                           ; 8 bytes @ 0x8
  1208  000009                     	ds	2
  1209  00000B                     
  1210                           ; 1 bytes @ 0xA
  1211  00000B                     	ds	1
  1212  00000C                     ?_ctoa:
  1213                           	callstack 0
  1214  00000C                     ctoa@fp:
  1215                           	callstack 0
  1216  00000C                     fputs@s:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0xB
  1220  00000C                     	ds	2
  1221  00000E                     ctoa@c:
  1222                           	callstack 0
  1223  00000E                     fputs@fp:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0xD
  1227  00000E                     	ds	1
  1228  00000F                     ??_ctoa:
  1229                           
  1230                           ; 1 bytes @ 0xE
  1231  00000F                     	ds	1
  1232  000010                     fputs@c:
  1233                           	callstack 0
  1234  000010                     ctoa@l:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0xF
  1238  000010                     	ds	1
  1239  000011                     ___aodiv@counter:
  1240                           	callstack 0
  1241  000011                     ___aomod@counter:
  1242                           	callstack 0
  1243  000011                     fputs@i:
  1244                           	callstack 0
  1245                           
  1246                           ; 2 bytes @ 0x10
  1247  000011                     	ds	1
  1248  000012                     ___aodiv@sign:
  1249                           	callstack 0
  1250  000012                     ___aomod@sign:
  1251                           	callstack 0
  1252  000012                     ctoa@w:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x11
  1256  000012                     	ds	1
  1257  000013                     ?_abs:
  1258                           	callstack 0
  1259  000013                     ?_pad:
  1260                           	callstack 0
  1261  000013                     pad@fp:
  1262                           	callstack 0
  1263  000013                     abs@a:
  1264                           	callstack 0
  1265  000013                     ___aodiv@quotient:
  1266                           	callstack 0
  1267                           
  1268                           ; 8 bytes @ 0x12
  1269  000013                     	ds	2
  1270  000015                     ??_abs:
  1271  000015                     pad@buf:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x14
  1275  000015                     	ds	2
  1276  000017                     pad@p:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x16
  1280  000017                     	ds	2
  1281  000019                     ??_pad:
  1282                           
  1283                           ; 1 bytes @ 0x18
  1284  000019                     	ds	1
  1285  00001A                     pad@i:
  1286                           	callstack 0
  1287                           
  1288                           ; 2 bytes @ 0x19
  1289  00001A                     	ds	2
  1290  00001C                     pad@w:
  1291                           	callstack 0
  1292                           
  1293                           ; 2 bytes @ 0x1B
  1294  00001C                     	ds	2
  1295  00001E                     ?_dtoa:
  1296                           	callstack 0
  1297  00001E                     dtoa@fp:
  1298                           	callstack 0
  1299                           
  1300                           ; 2 bytes @ 0x1D
  1301  00001E                     	ds	2
  1302  000020                     dtoa@d:
  1303                           	callstack 0
  1304                           
  1305                           ; 8 bytes @ 0x1F
  1306  000020                     	ds	8
  1307  000028                     ??_dtoa:
  1308                           
  1309                           ; 1 bytes @ 0x27
  1310  000028                     	ds	8
  1311  000030                     _dtoa$1203:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x2F
  1315  000030                     	ds	2
  1316  000032                     dtoa@p:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x31
  1320  000032                     	ds	2
  1321  000034                     dtoa@w:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x33
  1325  000034                     	ds	2
  1326  000036                     dtoa@s:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x35
  1330  000036                     	ds	2
  1331  000038                     dtoa@n:
  1332                           	callstack 0
  1333                           
  1334                           ; 8 bytes @ 0x37
  1335  000038                     	ds	8
  1336  000040                     dtoa@i:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x3F
  1340  000040                     	ds	2
  1341  000042                     ?_vfpfcnvrt:
  1342                           	callstack 0
  1343  000042                     vfpfcnvrt@fp:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x41
  1347  000042                     	ds	2
  1348  000044                     vfpfcnvrt@fmt:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x43
  1352  000044                     	ds	2
  1353  000046                     vfpfcnvrt@ap:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x45
  1357  000046                     	ds	2
  1358  000048                     ??_vfpfcnvrt:
  1359                           
  1360                           ; 1 bytes @ 0x47
  1361  000048                     	ds	2
  1362  00004A                     vfpfcnvrt@ll:
  1363                           	callstack 0
  1364                           
  1365                           ; 8 bytes @ 0x49
  1366  00004A                     	ds	8
  1367  000052                     vfpfcnvrt@c:
  1368                           	callstack 0
  1369                           
  1370                           ; 1 bytes @ 0x51
  1371  000052                     	ds	1
  1372  000053                     ?_vfprintf:
  1373                           	callstack 0
  1374  000053                     vfprintf@fp:
  1375                           	callstack 0
  1376                           
  1377                           ; 2 bytes @ 0x52
  1378  000053                     	ds	2
  1379  000055                     vfprintf@fmt:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x54
  1383  000055                     	ds	2
  1384  000057                     vfprintf@ap:
  1385                           	callstack 0
  1386                           
  1387                           ; 2 bytes @ 0x56
  1388  000057                     	ds	2
  1389  000059                     vfprintf@cfmt:
  1390                           	callstack 0
  1391                           
  1392                           ; 2 bytes @ 0x58
  1393  000059                     	ds	2
  1394  00005B                     ?_printf:
  1395                           	callstack 0
  1396  00005B                     printf@fmt:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x5A
  1400  00005B                     	ds	4
  1401  00005F                     
  1402                           ; 1 bytes @ 0x5E
  1403 ;;
  1404 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1405 ;;
  1406 ;; *************** function _main *****************
  1407 ;; Defined at:
  1408 ;;		line 31 in file "main.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;  sin            32    6[BANK0 ] unsigned char [32]
  1413 ;;  index           2   41[BANK0 ] unsigned short 
  1414 ;;  i               1   40[BANK0 ] unsigned char 
  1415 ;;  cmd             1   39[BANK0 ] unsigned char 
  1416 ;;  volumeAdjust    1   38[BANK0 ] unsigned char 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;Total ram usage:       39 bytes
  1431 ;; Hardware stack levels required when called:    9
  1432 ;; This function calls:
  1433 ;;		_EPWM1_LoadDutyValue
  1434 ;;		_EUSART1_Read
  1435 ;;		_EUSART1_is_rx_ready
  1436 ;;		_SYSTEM_Initialize
  1437 ;;		_TMR0_HasOverflowOccured
  1438 ;;		_TMR0_ReadTimer
  1439 ;;		_TMR0_WriteTimer
  1440 ;;		_printf
  1441 ;; This function is called by:
  1442 ;;		Startup code after reset
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text0
  1447  00F876                     __ptext0:
  1448                           	callstack 0
  1449  00F876                     _main:
  1450                           	callstack 22
  1451  00F876                     
  1452                           ;main.c: 33: 
  1453  00F876  EE20  F0BB         	lfsr	2,main@F6133
  1454  00F87A  EE10  F096         	lfsr	1,main@sin
  1455  00F87E  0E1F               	movlw	31
  1456  00F880                     u1291:
  1457  00F880  CFDB FFE3          	movff	plusw2,plusw1
  1458  00F884  06E8               	decf	wreg,f,c
  1459  00F886  E2FC               	bc	u1291
  1460  00F888                     
  1461                           ;main.c: 34: ;main.c: 35: ;main.c: 36:                 case '?':;main.c: 37:            
      +                                   printf("-------------------------------------------------\r\n");
  1462  00F888  0E01               	movlw	1
  1463  00F88A  0100               	movlb	0	; () banked
  1464  00F88C  6FB6               	movwf	main@volumeAdjust& (0+255),b
  1465  00F88E                     
  1466                           ; BSR set to: 0
  1467                           ;main.c: 39:                     printf("?: help menu\r\n");
  1468  00F88E  ECA6  F075         	call	_SYSTEM_Initialize	;wreg free
  1469  00F892                     
  1470                           ;main.c: 40:                     printf("o: k\r\n");
  1471  00F892  0E00               	movlw	0
  1472  00F894  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1473  00F896  0E00               	movlw	0
  1474  00F898  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1475  00F89A  EC41  F076         	call	_EPWM1_LoadDutyValue	;wreg free
  1476  00F89E                     
  1477                           ;main.c: 42:                     printf("z: Clear the terminal\r\n");
  1478  00F89E  0E00               	movlw	0
  1479  00F8A0  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1480  00F8A2  0E00               	movlw	0
  1481  00F8A4  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  1482  00F8A6  EC75  F075         	call	_TMR0_WriteTimer	;wreg free
  1483  00F8AA                     
  1484                           ;main.c: 43:                     printf("+/-: increase/decrease volume\r\n");
  1485  00F8AA  94F2               	bcf	242,2,c	;volatile
  1486  00F8AC                     l263:
  1487  00F8AC  A4F2               	btfss	242,2,c	;volatile
  1488  00F8AE  EF5B  F07C         	goto	u1301
  1489  00F8B2  EF5D  F07C         	goto	u1300
  1490  00F8B6                     u1301:
  1491  00F8B6  EF56  F07C         	goto	l263
  1492  00F8BA                     u1300:
  1493  00F8BA                     
  1494                           ;main.c: 46:                     printf("p: Generate a sine wave using PWM + LPF\r\n");
  1495  00F8BA  0ECC               	movlw	low STR_1
  1496  00F8BC  6E5B               	movwf	printf@fmt^0,c
  1497  00F8BE  0EFF               	movlw	high STR_1
  1498  00F8C0  6E5C               	movwf	(printf@fmt+1)^0,c
  1499  00F8C2  EC18  F076         	call	_printf	;wreg free
  1500                           
  1501                           ;main.c: 47:                     printf("-----------------------------------------------
      +                          --\r\n");
  1502  00F8C6  0E37               	movlw	low STR_2
  1503  00F8C8  6E5B               	movwf	printf@fmt^0,c
  1504  00F8CA  0EFF               	movlw	high STR_2
  1505  00F8CC  6E5C               	movwf	(printf@fmt+1)^0,c
  1506  00F8CE  EC18  F076         	call	_printf	;wreg free
  1507                           
  1508                           ;main.c: 48:                     break;
  1509  00F8D2  0EE2               	movlw	low STR_3
  1510  00F8D4  6E5B               	movwf	printf@fmt^0,c
  1511  00F8D6  0EFF               	movlw	high STR_3
  1512  00F8D8  6E5C               	movwf	(printf@fmt+1)^0,c
  1513  00F8DA  EC18  F076         	call	_printf	;wreg free
  1514                           
  1515                           ;main.c: 49: 
  1516  00F8DE  0EFA               	movlw	low STR_4
  1517  00F8E0  6E5B               	movwf	printf@fmt^0,c
  1518  00F8E2  0EFF               	movlw	high STR_4
  1519  00F8E4  6E5C               	movwf	(printf@fmt+1)^0,c
  1520  00F8E6  EC18  F076         	call	_printf	;wreg free
  1521  00F8EA                     l2071:
  1522                           
  1523                           ;main.c: 53:                 case 'o':
  1524  00F8EA  EC87  F075         	call	_EUSART1_is_rx_ready	;wreg free
  1525  00F8EE  0900               	iorlw	0
  1526  00F8F0  B4D8               	btfsc	status,2,c
  1527  00F8F2  EF7D  F07C         	goto	u1311
  1528  00F8F6  EF7F  F07C         	goto	u1310
  1529  00F8FA                     u1311:
  1530  00F8FA  EF75  F07C         	goto	l2071
  1531  00F8FE                     u1310:
  1532  00F8FE                     
  1533                           ;main.c: 54:                     printf("o:	ok\r\n");
  1534  00F8FE  ECF0  F075         	call	_EUSART1_Read	;wreg free
  1535  00F902  0100               	movlb	0	; () banked
  1536  00F904  6FB7               	movwf	main@cmd& (0+255),b
  1537                           
  1538                           ;main.c: 55:                     break;
  1539  00F906  EF38  F07E         	goto	l2171
  1540  00F90A                     l2075:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 61:                     for (i = 0; i < 40; i++) printf("\n");
  1544  00F90A  0E88               	movlw	low STR_5
  1545  00F90C  6E5B               	movwf	printf@fmt^0,c
  1546  00F90E  0EFD               	movlw	high STR_5
  1547  00F910  6E5C               	movwf	(printf@fmt+1)^0,c
  1548  00F912  EC18  F076         	call	_printf	;wreg free
  1549                           
  1550                           ;main.c: 62:                     __asm("reset");
  1551  00F916  0E88               	movlw	low STR_5
  1552  00F918  6E5B               	movwf	printf@fmt^0,c
  1553  00F91A  0EFD               	movlw	high STR_5
  1554  00F91C  6E5C               	movwf	(printf@fmt+1)^0,c
  1555  00F91E  EC18  F076         	call	_printf	;wreg free
  1556                           
  1557                           ;main.c: 63:                     break;
  1558  00F922  0EBD               	movlw	low STR_7
  1559  00F924  6E5B               	movwf	printf@fmt^0,c
  1560  00F926  0EFF               	movlw	high STR_7
  1561  00F928  6E5C               	movwf	(printf@fmt+1)^0,c
  1562  00F92A  EC18  F076         	call	_printf	;wreg free
  1563                           
  1564                           ;main.c: 64: 
  1565  00F92E  0EF3               	movlw	low STR_8
  1566  00F930  6E5B               	movwf	printf@fmt^0,c
  1567  00F932  0EFF               	movlw	high STR_8
  1568  00F934  6E5C               	movwf	(printf@fmt+1)^0,c
  1569  00F936  EC18  F076         	call	_printf	;wreg free
  1570                           
  1571                           ;main.c: 65: 
  1572  00F93A  0E84               	movlw	low STR_9
  1573  00F93C  6E5B               	movwf	printf@fmt^0,c
  1574  00F93E  0EFF               	movlw	high STR_9
  1575  00F940  6E5C               	movwf	(printf@fmt+1)^0,c
  1576  00F942  EC18  F076         	call	_printf	;wreg free
  1577                           
  1578                           ;main.c: 66: 
  1579  00F946  0E6C               	movlw	low STR_10
  1580  00F948  6E5B               	movwf	printf@fmt^0,c
  1581  00F94A  0EFF               	movlw	high STR_10
  1582  00F94C  6E5C               	movwf	(printf@fmt+1)^0,c
  1583  00F94E  EC18  F076         	call	_printf	;wreg free
  1584                           
  1585                           ;main.c: 67: 
  1586  00F952  0EFA               	movlw	low STR_11
  1587  00F954  6E5B               	movwf	printf@fmt^0,c
  1588  00F956  0EFE               	movlw	high STR_11
  1589  00F958  6E5C               	movwf	(printf@fmt+1)^0,c
  1590  00F95A  EC18  F076         	call	_printf	;wreg free
  1591                           
  1592                           ;main.c: 68:                 case 'z':
  1593  00F95E  0E53               	movlw	low STR_12
  1594  00F960  6E5B               	movwf	printf@fmt^0,c
  1595  00F962  0EFD               	movlw	high STR_12
  1596  00F964  6E5C               	movwf	(printf@fmt+1)^0,c
  1597  00F966  EC18  F076         	call	_printf	;wreg free
  1598                           
  1599                           ;main.c: 69:                     for (i = 0; i < 40; i++) printf("\n");
  1600  00F96A  0EEF               	movlw	low STR_13
  1601  00F96C  6E5B               	movwf	printf@fmt^0,c
  1602  00F96E  0EFD               	movlw	high STR_13
  1603  00F970  6E5C               	movwf	(printf@fmt+1)^0,c
  1604  00F972  EC18  F076         	call	_printf	;wreg free
  1605                           
  1606                           ;main.c: 70:                     break;
  1607  00F976  0E80               	movlw	low STR_14
  1608  00F978  6E5B               	movwf	printf@fmt^0,c
  1609  00F97A  0EFE               	movlw	high STR_14
  1610  00F97C  6E5C               	movwf	(printf@fmt+1)^0,c
  1611  00F97E  EC18  F076         	call	_printf	;wreg free
  1612                           
  1613                           ;main.c: 71: 
  1614  00F982  0E88               	movlw	low STR_5
  1615  00F984  6E5B               	movwf	printf@fmt^0,c
  1616  00F986  0EFD               	movlw	high STR_5
  1617  00F988  6E5C               	movwf	(printf@fmt+1)^0,c
  1618  00F98A  EC18  F076         	call	_printf	;wreg free
  1619                           
  1620                           ;main.c: 72: 
  1621  00F98E  EF75  F07C         	goto	l2071
  1622  00F992                     l2077:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;main.c: 78:                     volumeAdjust += 1;
  1626  00F992  0EEB               	movlw	low STR_16
  1627  00F994  6E5B               	movwf	printf@fmt^0,c
  1628  00F996  0EFF               	movlw	high STR_16
  1629  00F998  6E5C               	movwf	(printf@fmt+1)^0,c
  1630  00F99A  EC18  F076         	call	_printf	;wreg free
  1631                           
  1632                           ;main.c: 79:                     break;
  1633  00F99E  EF75  F07C         	goto	l2071
  1634  00F9A2                     l2079:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 85:                     printf("Connect jumper over the RC2/LPF_in header pins.
      +                          \r\n");
  1638  00F9A2  0E00               	movlw	0
  1639  00F9A4  6FB8               	movwf	main@i& (0+255),b
  1640  00F9A6                     l2085:
  1641                           
  1642                           ; BSR set to: 0
  1643  00F9A6  0EED               	movlw	low (STR_30+49)
  1644  00F9A8  6E5B               	movwf	printf@fmt^0,c
  1645  00F9AA  0EFD               	movlw	high (STR_30+49)
  1646  00F9AC  6E5C               	movwf	(printf@fmt+1)^0,c
  1647  00F9AE  EC18  F076         	call	_printf	;wreg free
  1648  00F9B2  0100               	movlb	0	; () banked
  1649  00F9B4  2BB8               	incf	main@i& (0+255),f,b
  1650  00F9B6                     
  1651                           ; BSR set to: 0
  1652  00F9B6  0E27               	movlw	39
  1653  00F9B8  65B8               	cpfsgt	main@i& (0+255),b
  1654  00F9BA  EFE1  F07C         	goto	u1321
  1655  00F9BE  EFE3  F07C         	goto	u1320
  1656  00F9C2                     u1321:
  1657  00F9C2  EFD3  F07C         	goto	l2085
  1658  00F9C6                     u1320:
  1659  00F9C6                     
  1660                           ; BSR set to: 0
  1661  00F9C6  00FF               	reset		;# 
  1662                           
  1663                           ;main.c: 87:                     printf("Connect Channel 2 scope probe to LPF_out.\r\n")
      +                          ;
  1664  00F9C8  EF75  F07C         	goto	l2071
  1665  00F9CC                     l2091:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;main.c: 93:                     (void) EUSART1_Read();
  1669  00F9CC  0E00               	movlw	0
  1670  00F9CE  6FB8               	movwf	main@i& (0+255),b
  1671  00F9D0                     l2097:
  1672                           
  1673                           ; BSR set to: 0
  1674  00F9D0  0EED               	movlw	low (STR_30+49)
  1675  00F9D2  6E5B               	movwf	printf@fmt^0,c
  1676  00F9D4  0EFD               	movlw	high (STR_30+49)
  1677  00F9D6  6E5C               	movwf	(printf@fmt+1)^0,c
  1678  00F9D8  EC18  F076         	call	_printf	;wreg free
  1679  00F9DC  0100               	movlb	0	; () banked
  1680  00F9DE  2BB8               	incf	main@i& (0+255),f,b
  1681  00F9E0                     
  1682                           ; BSR set to: 0
  1683  00F9E0  0E27               	movlw	39
  1684  00F9E2  65B8               	cpfsgt	main@i& (0+255),b
  1685  00F9E4  EFF6  F07C         	goto	u1331
  1686  00F9E8  EFF8  F07C         	goto	u1330
  1687  00F9EC                     u1331:
  1688  00F9EC  EFE8  F07C         	goto	l2097
  1689  00F9F0                     u1330:
  1690  00F9F0  EF75  F07C         	goto	l2071
  1691  00F9F4                     l2103:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;main.c: 98:                     while ((EUSART1_is_rx_ready()) == 0);
  1695  00F9F4  07B6               	decf	main@volumeAdjust& (0+255),f,b
  1696                           
  1697                           ;main.c: 99:                     (void) EUSART1_Read();
  1698  00F9F6  EF75  F07C         	goto	l2071
  1699  00F9FA                     l2105:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;main.c: 102: 
  1703  00F9FA  2BB6               	incf	main@volumeAdjust& (0+255),f,b
  1704                           
  1705                           ;main.c: 103: 
  1706  00F9FC  EF75  F07C         	goto	l2071
  1707  00FA00                     l2107:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;main.c: 109:                     printf("Connect Channel 1 scope probe to RC2.\r\n");
  1711  00FA00  0E22               	movlw	low STR_19
  1712  00FA02  6E5B               	movwf	printf@fmt^0,c
  1713  00FA04  0EFE               	movlw	high STR_19
  1714  00FA06  6E5C               	movwf	(printf@fmt+1)^0,c
  1715  00FA08  EC18  F076         	call	_printf	;wreg free
  1716                           
  1717                           ;main.c: 110:                     printf("Connect Channel 2 scope probe to LPF_out.\r\n"
      +                          );
  1718  00FA0C  0ED2               	movlw	low STR_20
  1719  00FA0E  6E5B               	movwf	printf@fmt^0,c
  1720  00FA10  0EFE               	movlw	high STR_20
  1721  00FA12  6E5C               	movwf	(printf@fmt+1)^0,c
  1722  00FA14  EC18  F076         	call	_printf	;wreg free
  1723                           
  1724                           ;main.c: 111:                     printf("Press ""x"" to exit.\r\n");
  1725  00FA18  0E54               	movlw	low STR_21
  1726  00FA1A  6E5B               	movwf	printf@fmt^0,c
  1727  00FA1C  0EFE               	movlw	high STR_21
  1728  00FA1E  6E5C               	movwf	(printf@fmt+1)^0,c
  1729  00FA20  EC18  F076         	call	_printf	;wreg free
  1730  00FA24                     
  1731                           ;main.c: 113: 
  1732  00FA24  0E00               	movlw	0
  1733  00FA26  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1734  00FA28  0E00               	movlw	0
  1735  00FA2A  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1736  00FA2C  EC41  F076         	call	_EPWM1_LoadDutyValue	;wreg free
  1737  00FA30                     
  1738                           ;main.c: 114:                     index = 0;
  1739  00FA30  0E16               	movlw	low STR_22
  1740  00FA32  6E5B               	movwf	printf@fmt^0,c
  1741  00FA34  0EFD               	movlw	high STR_22
  1742  00FA36  6E5C               	movwf	(printf@fmt+1)^0,c
  1743  00FA38  EC18  F076         	call	_printf	;wreg free
  1744  00FA3C                     
  1745                           ;main.c: 115:                     do {
  1746  00FA3C  0EAA               	movlw	low STR_23
  1747  00FA3E  6E5B               	movwf	printf@fmt^0,c
  1748  00FA40  0EFE               	movlw	high STR_23
  1749  00FA42  6E5C               	movwf	(printf@fmt+1)^0,c
  1750  00FA44  EC18  F076         	call	_printf	;wreg free
  1751  00FA48                     l2115:
  1752  00FA48  EC87  F075         	call	_EUSART1_is_rx_ready	;wreg free
  1753  00FA4C  0900               	iorlw	0
  1754  00FA4E  B4D8               	btfsc	status,2,c
  1755  00FA50  EF2C  F07D         	goto	u1341
  1756  00FA54  EF2E  F07D         	goto	u1340
  1757  00FA58                     u1341:
  1758  00FA58  EF24  F07D         	goto	l2115
  1759  00FA5C                     u1340:
  1760  00FA5C                     
  1761                           ;main.c: 117:                         printf("Current LoadDutyValue = %d\r\n", sin[index
      +                          ]);
  1762  00FA5C  ECF0  F075         	call	_EUSART1_Read	;wreg free
  1763  00FA60                     
  1764                           ;main.c: 119:                         index = (index + 1)&0b00011111;
  1765  00FA60  0E01               	movlw	1
  1766  00FA62  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1767  00FA64  0E00               	movlw	0
  1768  00FA66  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1769  00FA68  EC41  F076         	call	_EPWM1_LoadDutyValue	;wreg free
  1770  00FA6C                     
  1771                           ;main.c: 120:                     } while (EUSART1_Read() != 'x');
  1772  00FA6C  0ED7               	movlw	low STR_24
  1773  00FA6E  6E5B               	movwf	printf@fmt^0,c
  1774  00FA70  0EFC               	movlw	high STR_24
  1775  00FA72  6E5C               	movwf	(printf@fmt+1)^0,c
  1776  00FA74  EC18  F076         	call	_printf	;wreg free
  1777  00FA78                     
  1778                           ;main.c: 121: 
  1779  00FA78  0E53               	movlw	low STR_25
  1780  00FA7A  6E5B               	movwf	printf@fmt^0,c
  1781  00FA7C  0EFF               	movlw	high STR_25
  1782  00FA7E  6E5C               	movwf	(printf@fmt+1)^0,c
  1783  00FA80  EC18  F076         	call	_printf	;wreg free
  1784  00FA84                     l2125:
  1785  00FA84  EC87  F075         	call	_EUSART1_is_rx_ready	;wreg free
  1786  00FA88  0900               	iorlw	0
  1787  00FA8A  B4D8               	btfsc	status,2,c
  1788  00FA8C  EF4A  F07D         	goto	u1351
  1789  00FA90  EF4C  F07D         	goto	u1350
  1790  00FA94                     u1351:
  1791  00FA94  EF42  F07D         	goto	l2125
  1792  00FA98                     u1350:
  1793  00FA98                     
  1794                           ;main.c: 123:                     printf("Exit PWM\r\n");
  1795  00FA98  ECF0  F075         	call	_EUSART1_Read	;wreg free
  1796                           
  1797                           ;main.c: 125: 
  1798  00FA9C  EF75  F07C         	goto	l2071
  1799  00FAA0                     l2129:
  1800                           
  1801                           ; BSR set to: 0
  1802                           ;main.c: 132:                     printf("Connect Channel 2 scope probe to LPF_out.\r\n"
      +                          );
  1803  00FAA0  0E22               	movlw	low STR_19
  1804  00FAA2  6E5B               	movwf	printf@fmt^0,c
  1805  00FAA4  0EFE               	movlw	high STR_19
  1806  00FAA6  6E5C               	movwf	(printf@fmt+1)^0,c
  1807  00FAA8  EC18  F076         	call	_printf	;wreg free
  1808                           
  1809                           ;main.c: 133:                     printf("Press any key to exit.\r\n");
  1810  00FAAC  0ED2               	movlw	low STR_20
  1811  00FAAE  6E5B               	movwf	printf@fmt^0,c
  1812  00FAB0  0EFE               	movlw	high STR_20
  1813  00FAB2  6E5C               	movwf	(printf@fmt+1)^0,c
  1814  00FAB4  EC18  F076         	call	_printf	;wreg free
  1815                           
  1816                           ;main.c: 134: 
  1817  00FAB8  0E54               	movlw	low STR_21
  1818  00FABA  6E5B               	movwf	printf@fmt^0,c
  1819  00FABC  0EFE               	movlw	high STR_21
  1820  00FABE  6E5C               	movwf	(printf@fmt+1)^0,c
  1821  00FAC0  EC18  F076         	call	_printf	;wreg free
  1822                           
  1823                           ;main.c: 135:                     while ((EUSART1_is_rx_ready()) == 0) {
  1824  00FAC4  0E99               	movlw	low STR_29
  1825  00FAC6  6E5B               	movwf	printf@fmt^0,c
  1826  00FAC8  0EFF               	movlw	high STR_29
  1827  00FACA  6E5C               	movwf	(printf@fmt+1)^0,c
  1828  00FACC  EC18  F076         	call	_printf	;wreg free
  1829                           
  1830                           ;main.c: 136: 
  1831  00FAD0  0EBC               	movlw	low STR_30
  1832  00FAD2  6E5B               	movwf	printf@fmt^0,c
  1833  00FAD4  0EFD               	movlw	high STR_30
  1834  00FAD6  6E5C               	movwf	(printf@fmt+1)^0,c
  1835  00FAD8  EC18  F076         	call	_printf	;wreg free
  1836  00FADC                     
  1837                           ;main.c: 138:                         INTCONbits.TMR0IF = 0;
  1838  00FADC  0E00               	movlw	0
  1839  00FADE  0100               	movlb	0	; () banked
  1840  00FAE0  6FBA               	movwf	(main@index+1)& (0+255),b
  1841  00FAE2  0E00               	movlw	0
  1842  00FAE4  6FB9               	movwf	main@index& (0+255),b
  1843  00FAE6                     l2133:
  1844                           
  1845                           ;main.c: 140: 
  1846  00FAE6  0E96               	movlw	low main@sin
  1847  00FAE8  0100               	movlb	0	; () banked
  1848  00FAEA  25B9               	addwf	main@index& (0+255),w,b
  1849  00FAEC  6ED9               	movwf	fsr2l,c
  1850  00FAEE  0E00               	movlw	high main@sin
  1851  00FAF0  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1852  00FAF2  6EDA               	movwf	fsr2h,c
  1853  00FAF4  50DF               	movf	indf2,w,c
  1854  00FAF6  6F94               	movwf	??_main& (0+255),b
  1855  00FAF8  5194               	movf	??_main& (0+255),w,b
  1856  00FAFA  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1857  00FAFC  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1858  00FAFE  EC41  F076         	call	_EPWM1_LoadDutyValue	;wreg free
  1859  00FB02                     
  1860                           ;main.c: 141: 
  1861  00FB02  0E1A               	movlw	low STR_31
  1862  00FB04  6E5B               	movwf	printf@fmt^0,c
  1863  00FB06  0EFF               	movlw	high STR_31
  1864  00FB08  6E5C               	movwf	(printf@fmt+1)^0,c
  1865  00FB0A  0E96               	movlw	low main@sin
  1866  00FB0C  0100               	movlb	0	; () banked
  1867  00FB0E  25B9               	addwf	main@index& (0+255),w,b
  1868  00FB10  6ED9               	movwf	fsr2l,c
  1869  00FB12  0E00               	movlw	high main@sin
  1870  00FB14  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1871  00FB16  6EDA               	movwf	fsr2h,c
  1872  00FB18  50DF               	movf	indf2,w,c
  1873  00FB1A  6F94               	movwf	??_main& (0+255),b
  1874  00FB1C  5194               	movf	??_main& (0+255),w,b
  1875  00FB1E  6E5D               	movwf	(?_printf+2)^0,c
  1876  00FB20  6A5E               	clrf	(?_printf+3)^0,c
  1877  00FB22  EC18  F076         	call	_printf	;wreg free
  1878  00FB26                     l2137:
  1879  00FB26  EC87  F075         	call	_EUSART1_is_rx_ready	;wreg free
  1880  00FB2A  0900               	iorlw	0
  1881  00FB2C  B4D8               	btfsc	status,2,c
  1882  00FB2E  EF9B  F07D         	goto	u1361
  1883  00FB32  EF9D  F07D         	goto	u1360
  1884  00FB36                     u1361:
  1885  00FB36  EF93  F07D         	goto	l2137
  1886  00FB3A                     u1360:
  1887  00FB3A                     
  1888                           ;main.c: 143:                         index = (index + 1)&0b00011111;
  1889  00FB3A  0E01               	movlw	1
  1890  00FB3C  0100               	movlb	0	; () banked
  1891  00FB3E  25B9               	addwf	main@index& (0+255),w,b
  1892  00FB40  6F94               	movwf	??_main& (0+255),b
  1893  00FB42  0E00               	movlw	0
  1894  00FB44  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1895  00FB46  6F95               	movwf	(??_main+1)& (0+255),b
  1896  00FB48  0E1F               	movlw	31
  1897  00FB4A  1594               	andwf	??_main& (0+255),w,b
  1898  00FB4C  6FB9               	movwf	main@index& (0+255),b
  1899  00FB4E  6BBA               	clrf	(main@index+1)& (0+255),b
  1900  00FB50                     
  1901                           ; BSR set to: 0
  1902                           ;main.c: 144: 
  1903  00FB50  ECF0  F075         	call	_EUSART1_Read	;wreg free
  1904  00FB54  0A78               	xorlw	120
  1905  00FB56  A4D8               	btfss	status,2,c
  1906  00FB58  EFB0  F07D         	goto	u1371
  1907  00FB5C  EFB2  F07D         	goto	u1370
  1908  00FB60                     u1371:
  1909  00FB60  EF73  F07D         	goto	l2133
  1910  00FB64                     u1370:
  1911  00FB64                     
  1912                           ;main.c: 146: 
  1913  00FB64  0E00               	movlw	0
  1914  00FB66  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  1915  00FB68  0E00               	movlw	0
  1916  00FB6A  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  1917  00FB6C  EC41  F076         	call	_EPWM1_LoadDutyValue	;wreg free
  1918  00FB70                     
  1919                           ;main.c: 147:                     EPWM1_LoadDutyValue(0);
  1920  00FB70  0ED7               	movlw	low STR_32
  1921  00FB72  6E5B               	movwf	printf@fmt^0,c
  1922  00FB74  0EFF               	movlw	high STR_32
  1923  00FB76  6E5C               	movwf	(printf@fmt+1)^0,c
  1924  00FB78  EC18  F076         	call	_printf	;wreg free
  1925                           
  1926                           ;main.c: 148:                     (void) EUSART1_Read();
  1927  00FB7C  EF75  F07C         	goto	l2071
  1928  00FB80                     l2147:
  1929                           
  1930                           ; BSR set to: 0
  1931                           ;main.c: 154: 
  1932  00FB80  0E22               	movlw	low STR_19
  1933  00FB82  6E5B               	movwf	printf@fmt^0,c
  1934  00FB84  0EFE               	movlw	high STR_19
  1935  00FB86  6E5C               	movwf	(printf@fmt+1)^0,c
  1936  00FB88  EC18  F076         	call	_printf	;wreg free
  1937                           
  1938                           ;main.c: 155:                 default:
  1939  00FB8C  0ED2               	movlw	low STR_20
  1940  00FB8E  6E5B               	movwf	printf@fmt^0,c
  1941  00FB90  0EFE               	movlw	high STR_20
  1942  00FB92  6E5C               	movwf	(printf@fmt+1)^0,c
  1943  00FB94  EC18  F076         	call	_printf	;wreg free
  1944                           
  1945                           ;main.c: 156:                     printf("Unknown key %c\r\n", cmd);
  1946  00FB98  0E54               	movlw	low STR_21
  1947  00FB9A  6E5B               	movwf	printf@fmt^0,c
  1948  00FB9C  0EFE               	movlw	high STR_21
  1949  00FB9E  6E5C               	movwf	(printf@fmt+1)^0,c
  1950  00FBA0  EC18  F076         	call	_printf	;wreg free
  1951                           
  1952                           ;main.c: 157:                     break;
  1953  00FBA4  0E53               	movlw	low STR_25
  1954  00FBA6  6E5B               	movwf	printf@fmt^0,c
  1955  00FBA8  0EFF               	movlw	high STR_25
  1956  00FBAA  6E5C               	movwf	(printf@fmt+1)^0,c
  1957  00FBAC  EC18  F076         	call	_printf	;wreg free
  1958                           
  1959                           ;main.c: 159: 
  1960  00FBB0  EF13  F07E         	goto	l2159
  1961  00FBB4                     l2149:
  1962                           
  1963                           ;main.c: 161:     }
  1964  00FBB4  ECC1  F075         	call	_TMR0_ReadTimer	;wreg free
  1965  00FBB8  0E7F               	movlw	127
  1966  00FBBA  2401               	addwf	?_TMR0_ReadTimer^0,w,c
  1967  00FBBC  6E09               	movwf	TMR0_WriteTimer@timerVal^0,c
  1968  00FBBE  0EF3               	movlw	243
  1969  00FBC0  2002               	addwfc	(?_TMR0_ReadTimer+1)^0,w,c
  1970  00FBC2  6E0A               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  1971  00FBC4  EC75  F075         	call	_TMR0_WriteTimer	;wreg free
  1972  00FBC8                     
  1973                           ;main.c: 162: }
  1974  00FBC8  94F2               	bcf	242,2,c	;volatile
  1975  00FBCA                     l2153:
  1976  00FBCA  EC91  F075         	call	_TMR0_HasOverflowOccured	;wreg free
  1977  00FBCE  0900               	iorlw	0
  1978  00FBD0  B4D8               	btfsc	status,2,c
  1979  00FBD2  EFED  F07D         	goto	u1381
  1980  00FBD6  EFEF  F07D         	goto	u1380
  1981  00FBDA                     u1381:
  1982  00FBDA  EFE5  F07D         	goto	l2153
  1983  00FBDE                     u1380:
  1984  00FBDE  C0B6  F094         	movff	main@volumeAdjust,??_main
  1985  00FBE2  0E96               	movlw	low main@sin
  1986  00FBE4  0100               	movlb	0	; () banked
  1987  00FBE6  25B9               	addwf	main@index& (0+255),w,b
  1988  00FBE8  6ED9               	movwf	fsr2l,c
  1989  00FBEA  0E00               	movlw	high main@sin
  1990  00FBEC  21BA               	addwfc	(main@index+1)& (0+255),w,b
  1991  00FBEE  6EDA               	movwf	fsr2h,c
  1992  00FBF0  50DF               	movf	indf2,w,c
  1993  00FBF2  6F95               	movwf	(??_main+1)& (0+255),b
  1994  00FBF4  2B94               	incf	??_main& (0+255),f,b
  1995  00FBF6  EFFF  F07D         	goto	u1394
  1996  00FBFA                     u1395:
  1997  00FBFA  90D8               	bcf	status,0,c
  1998  00FBFC  3395               	rrcf	(??_main+1)& (0+255),f,b
  1999  00FBFE                     u1394:
  2000  00FBFE  2F94               	decfsz	??_main& (0+255),f,b
  2001  00FC00  EFFD  F07D         	goto	u1395
  2002  00FC04  0100               	movlb	0	; () banked
  2003  00FC06  5195               	movf	(??_main+1)& (0+255),w,b
  2004  00FC08  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  2005  00FC0A  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  2006  00FC0C  EC41  F076         	call	_EPWM1_LoadDutyValue	;wreg free
  2007  00FC10  0E01               	movlw	1
  2008  00FC12  0100               	movlb	0	; () banked
  2009  00FC14  25B9               	addwf	main@index& (0+255),w,b
  2010  00FC16  6F94               	movwf	??_main& (0+255),b
  2011  00FC18  0E00               	movlw	0
  2012  00FC1A  21BA               	addwfc	(main@index+1)& (0+255),w,b
  2013  00FC1C  6F95               	movwf	(??_main+1)& (0+255),b
  2014  00FC1E  0E1F               	movlw	31
  2015  00FC20  1594               	andwf	??_main& (0+255),w,b
  2016  00FC22  6FB9               	movwf	main@index& (0+255),b
  2017  00FC24  6BBA               	clrf	(main@index+1)& (0+255),b
  2018  00FC26                     l2159:
  2019                           
  2020                           ;main.c: 159: 
  2021  00FC26  EC87  F075         	call	_EUSART1_is_rx_ready	;wreg free
  2022  00FC2A  0900               	iorlw	0
  2023  00FC2C  B4D8               	btfsc	status,2,c
  2024  00FC2E  EF1B  F07E         	goto	u1401
  2025  00FC32  EF1D  F07E         	goto	u1400
  2026  00FC36                     u1401:
  2027  00FC36  EFDA  F07D         	goto	l2149
  2028  00FC3A                     u1400:
  2029  00FC3A  0E00               	movlw	0
  2030  00FC3C  6E02               	movwf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
  2031  00FC3E  0E00               	movlw	0
  2032  00FC40  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
  2033  00FC42  EC41  F076         	call	_EPWM1_LoadDutyValue	;wreg free
  2034  00FC46  ECF0  F075         	call	_EUSART1_Read	;wreg free
  2035  00FC4A  0ED7               	movlw	low STR_32
  2036  00FC4C  6E5B               	movwf	printf@fmt^0,c
  2037  00FC4E  0EFF               	movlw	high STR_32
  2038  00FC50  6E5C               	movwf	(printf@fmt+1)^0,c
  2039  00FC52  EC18  F076         	call	_printf	;wreg free
  2040  00FC56  EF75  F07C         	goto	l2071
  2041  00FC5A                     l2167:
  2042                           
  2043                           ; BSR set to: 0
  2044  00FC5A  0EAC               	movlw	low STR_38
  2045  00FC5C  6E5B               	movwf	printf@fmt^0,c
  2046  00FC5E  0EFF               	movlw	high STR_38
  2047  00FC60  6E5C               	movwf	(printf@fmt+1)^0,c
  2048  00FC62  C0B7  F05D         	movff	main@cmd,?_printf+2
  2049  00FC66  6A5E               	clrf	(?_printf+3)^0,c
  2050  00FC68  EC18  F076         	call	_printf	;wreg free
  2051  00FC6C  EF75  F07C         	goto	l2071
  2052  00FC70                     l2171:
  2053                           
  2054                           ; BSR set to: 0
  2055  00FC70  51B7               	movf	main@cmd& (0+255),w,b
  2056  00FC72  6F94               	movwf	??_main& (0+255),b
  2057  00FC74  6B95               	clrf	(??_main+1)& (0+255),b
  2058                           
  2059                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2060                           ; Switch size 1, requested type "simple"
  2061                           ; Number of cases is 1, Range of values is 0 to 0
  2062                           ; switch strategies available:
  2063                           ; Name         Instructions Cycles
  2064                           ; simple_byte            4     3 (average)
  2065                           ;	Chosen strategy is simple_byte
  2066  00FC76  5195               	movf	(??_main+1)& (0+255),w,b
  2067  00FC78  0A00               	xorlw	0	; case 0
  2068  00FC7A  B4D8               	btfsc	status,2,c
  2069  00FC7C  EF42  F07E         	goto	l2197
  2070  00FC80  EF2D  F07E         	goto	l2167
  2071  00FC84                     l2197:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ; Switch size 1, requested type "simple"
  2075                           ; Number of cases is 9, Range of values is 43 to 122
  2076                           ; switch strategies available:
  2077                           ; Name         Instructions Cycles
  2078                           ; simple_byte           28    15 (average)
  2079                           ;	Chosen strategy is simple_byte
  2080  00FC84  5194               	movf	??_main& (0+255),w,b
  2081  00FC86  0A2B               	xorlw	43	; case 43
  2082  00FC88  B4D8               	btfsc	status,2,c
  2083  00FC8A  EFFA  F07C         	goto	l2103
  2084  00FC8E  0A06               	xorlw	6	; case 45
  2085  00FC90  B4D8               	btfsc	status,2,c
  2086  00FC92  EFFD  F07C         	goto	l2105
  2087  00FC96  0A12               	xorlw	18	; case 63
  2088  00FC98  B4D8               	btfsc	status,2,c
  2089  00FC9A  EF85  F07C         	goto	l2075
  2090  00FC9E  0A6C               	xorlw	108	; case 83
  2091  00FCA0  B4D8               	btfsc	status,2,c
  2092  00FCA2  EF00  F07D         	goto	l2107
  2093  00FCA6  0A09               	xorlw	9	; case 90
  2094  00FCA8  B4D8               	btfsc	status,2,c
  2095  00FCAA  EFD1  F07C         	goto	l2079
  2096  00FCAE  0A35               	xorlw	53	; case 111
  2097  00FCB0  B4D8               	btfsc	status,2,c
  2098  00FCB2  EFC9  F07C         	goto	l2077
  2099  00FCB6  0A1F               	xorlw	31	; case 112
  2100  00FCB8  B4D8               	btfsc	status,2,c
  2101  00FCBA  EFC0  F07D         	goto	l2147
  2102  00FCBE  0A03               	xorlw	3	; case 115
  2103  00FCC0  B4D8               	btfsc	status,2,c
  2104  00FCC2  EF50  F07D         	goto	l2129
  2105  00FCC6  0A09               	xorlw	9	; case 122
  2106  00FCC8  B4D8               	btfsc	status,2,c
  2107  00FCCA  EFE6  F07C         	goto	l2091
  2108  00FCCE  EF2D  F07E         	goto	l2167
  2109  00FCD2  EF00  F000         	goto	start
  2110  00FCD6                     __end_of_main:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _printf *****************
  2114 ;; Defined at:
  2115 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  2118 ;;		 -> STR_38(17), STR_37(11), STR_36(25), STR_35(44), 
  2119 ;;		 -> STR_34(40), STR_33(50), STR_32(11), STR_31(29), 
  2120 ;;		 -> STR_30(51), STR_29(19), STR_28(44), STR_27(40), 
  2121 ;;		 -> STR_26(50), STR_25(25), STR_24(63), STR_23(40), 
  2122 ;;		 -> STR_22(61), STR_21(44), STR_20(40), STR_19(50), 
  2123 ;;		 -> STR_18(2), STR_17(2), STR_16(8), STR_15(52), 
  2124 ;;		 -> STR_14(42), STR_13(51), STR_12(53), STR_11(32), 
  2125 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  2126 ;;		 -> STR_6(52), STR_5(52), STR_4(5), STR_3(9), 
  2127 ;;		 -> STR_2(28), STR_1(11), 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  ap              2    2[BANK0 ] PTR void [1]
  2130 ;;		 -> ?_printf(2), 
  2131 ;;  ret             2    0        int 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2   90[COMRAM] int 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:        8 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    8
  2148 ;; This function calls:
  2149 ;;		_vfprintf
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text1
  2156  00EC30                     __ptext1:
  2157                           	callstack 0
  2158  00EC30                     _printf:
  2159                           	callstack 22
  2160  00EC30  0E5D               	movlw	low (?_printf+2)
  2161  00EC32  0100               	movlb	0	; () banked
  2162  00EC34  6F92               	movwf	printf@ap& (0+255),b
  2163  00EC36  0E00               	movlw	high (?_printf+2)
  2164  00EC38  6F93               	movwf	(printf@ap+1)& (0+255),b
  2165  00EC3A                     
  2166                           ; BSR set to: 0
  2167  00EC3A  0E00               	movlw	0
  2168  00EC3C  6E53               	movwf	vfprintf@fp^0,c
  2169  00EC3E  0E00               	movlw	0
  2170  00EC40  6E54               	movwf	(vfprintf@fp+1)^0,c
  2171  00EC42  C05B  F055         	movff	printf@fmt,vfprintf@fmt
  2172  00EC46  C05C  F056         	movff	printf@fmt+1,vfprintf@fmt+1
  2173  00EC4A  0E92               	movlw	low printf@ap
  2174  00EC4C  6E57               	movwf	vfprintf@ap^0,c
  2175  00EC4E  0E00               	movlw	high printf@ap
  2176  00EC50  6E58               	movwf	(vfprintf@ap+1)^0,c
  2177  00EC52  ECEF  F076         	call	_vfprintf	;wreg free
  2178  00EC56  0012               	return		;funcret
  2179  00EC58                     __end_of_printf:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _vfprintf *****************
  2183 ;; Defined at:
  2184 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  2187 ;;		 -> NULL(0), 
  2188 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  2189 ;;		 -> STR_38(17), STR_37(11), STR_36(25), STR_35(44), 
  2190 ;;		 -> STR_34(40), STR_33(50), STR_32(11), STR_31(29), 
  2191 ;;		 -> STR_30(51), STR_29(19), STR_28(44), STR_27(40), 
  2192 ;;		 -> STR_26(50), STR_25(25), STR_24(63), STR_23(40), 
  2193 ;;		 -> STR_22(61), STR_21(44), STR_20(40), STR_19(50), 
  2194 ;;		 -> STR_18(2), STR_17(2), STR_16(8), STR_15(52), 
  2195 ;;		 -> STR_14(42), STR_13(51), STR_12(53), STR_11(32), 
  2196 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  2197 ;;		 -> STR_6(52), STR_5(52), STR_4(5), STR_3(9), 
  2198 ;;		 -> STR_2(28), STR_1(11), 
  2199 ;;  ap              2   86[COMRAM] PTR PTR void 
  2200 ;;		 -> printf@ap(2), 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  2203 ;;		 -> STR_38(17), STR_37(11), STR_36(25), STR_35(44), 
  2204 ;;		 -> STR_34(40), STR_33(50), STR_32(11), STR_31(29), 
  2205 ;;		 -> STR_30(51), STR_29(19), STR_28(44), STR_27(40), 
  2206 ;;		 -> STR_26(50), STR_25(25), STR_24(63), STR_23(40), 
  2207 ;;		 -> STR_22(61), STR_21(44), STR_20(40), STR_19(50), 
  2208 ;;		 -> STR_18(2), STR_17(2), STR_16(8), STR_15(52), 
  2209 ;;		 -> STR_14(42), STR_13(51), STR_12(53), STR_11(32), 
  2210 ;;		 -> STR_10(24), STR_9(21), STR_8(7), STR_7(15), 
  2211 ;;		 -> STR_6(52), STR_5(52), STR_4(5), STR_3(9), 
  2212 ;;		 -> STR_2(28), STR_1(11), 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2   82[COMRAM] int 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;Total ram usage:        8 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    7
  2229 ;; This function calls:
  2230 ;;		_vfpfcnvrt
  2231 ;; This function is called by:
  2232 ;;		_printf
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text2
  2237  00EDDE                     __ptext2:
  2238                           	callstack 0
  2239  00EDDE                     _vfprintf:
  2240                           	callstack 22
  2241  00EDDE                     
  2242                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2243  00EDDE  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  2244  00EDE2  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2245  00EDE6                     
  2246                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2247  00EDE6  0E00               	movlw	0
  2248  00EDE8  0100               	movlb	0	; () banked
  2249  00EDEA  6F61               	movwf	(_nout+1)& (0+255),b
  2250  00EDEC  0E00               	movlw	0
  2251  00EDEE  6F60               	movwf	_nout& (0+255),b
  2252                           
  2253                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2254  00EDF0  EF0D  F077         	goto	l2001
  2255  00EDF4                     l1999:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2259  00EDF4  C053  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  2260  00EDF8  C054  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2261  00EDFC  0E59               	movlw	low vfprintf@cfmt
  2262  00EDFE  6E44               	movwf	vfpfcnvrt@fmt^0,c
  2263  00EE00  0E00               	movlw	high vfprintf@cfmt
  2264  00EE02  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2265  00EE04  C057  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  2266  00EE08  C058  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2267  00EE0C  ECB1  F079         	call	_vfpfcnvrt	;wreg free
  2268  00EE10  5042               	movf	?_vfpfcnvrt^0,w,c
  2269  00EE12  0100               	movlb	0	; () banked
  2270  00EE14  2760               	addwf	_nout& (0+255),f,b
  2271  00EE16  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  2272  00EE18  2361               	addwfc	(_nout+1)& (0+255),f,b
  2273  00EE1A                     l2001:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2277  00EE1A  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  2278  00EE1E  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2279  00EE22                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2280  00EE22  6AF8               	clrf	tblptru,c
  2281  00EE24                     	endif
  2282  00EE24                     	if	0	;tblptru may be non-zero
  2283  00EE24                     	endif
  2284  00EE24  0008               	tblrd		*
  2285  00EE26  50F5               	movf	tablat,w,c
  2286  00EE28  0900               	iorlw	0
  2287  00EE2A  A4D8               	btfss	status,2,c
  2288  00EE2C  EF1A  F077         	goto	u1241
  2289  00EE30  EF1C  F077         	goto	u1240
  2290  00EE34                     u1241:
  2291  00EE34  EFFA  F076         	goto	l1999
  2292  00EE38                     u1240:
  2293  00EE38                     
  2294                           ; BSR set to: 0
  2295                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2296  00EE38  C060  F053         	movff	_nout,?_vfprintf
  2297  00EE3C  C061  F054         	movff	_nout+1,?_vfprintf+1
  2298  00EE40                     
  2299                           ; BSR set to: 0
  2300  00EE40  0012               	return		;funcret
  2301  00EE42                     __end_of_vfprintf:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _vfpfcnvrt *****************
  2305 ;; Defined at:
  2306 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  2309 ;;		 -> NULL(0), 
  2310 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  2311 ;;		 -> vfprintf@cfmt(2), 
  2312 ;;  ap              2   69[COMRAM] PTR PTR void 
  2313 ;;		 -> printf@ap(2), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  ll              8   73[COMRAM] long long 
  2316 ;;  llu             8    0        unsigned long long 
  2317 ;;  f               4    0        unsigned long long 
  2318 ;;  vp              3    0        PTR void 
  2319 ;;  ct              3    0        unsigned char [3]
  2320 ;;  cp              3    0        PTR unsigned char 
  2321 ;;  i               2    0        int 
  2322 ;;  done            2    0        int 
  2323 ;;  c               1   81[COMRAM] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  2   65[COMRAM] int 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2333 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;Total ram usage:       17 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    6
  2340 ;; This function calls:
  2341 ;;		_ctoa
  2342 ;;		_dtoa
  2343 ;;		_fputc
  2344 ;; This function is called by:
  2345 ;;		_vfprintf
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text3
  2350  00F362                     __ptext3:
  2351                           	callstack 0
  2352  00F362                     _vfpfcnvrt:
  2353                           	callstack 22
  2354  00F362                     
  2355                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2356  00F362  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2357  00F366  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2358  00F36A  CFDE FFF6          	movff	postinc2,tblptrl
  2359  00F36E  CFDD FFF7          	movff	postdec2,tblptrh
  2360  00F372                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2361  00F372  6AF8               	clrf	tblptru,c
  2362  00F374                     	endif
  2363  00F374                     	if	0	;tblptru may be non-zero
  2364  00F374                     	endif
  2365  00F374  0008               	tblrd		*
  2366  00F376  50F5               	movf	tablat,w,c
  2367  00F378  0A25               	xorlw	37
  2368  00F37A  A4D8               	btfss	status,2,c
  2369  00F37C  EFC2  F079         	goto	u1181
  2370  00F380  EFC4  F079         	goto	u1180
  2371  00F384                     u1181:
  2372  00F384  EFAD  F07A         	goto	l1951
  2373  00F388                     u1180:
  2374  00F388                     
  2375                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2376  00F388  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2377  00F38C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2378  00F390  2ADE               	incf	postinc2,f,c
  2379  00F392  0E00               	movlw	0
  2380  00F394  22DD               	addwfc	postdec2,f,c
  2381  00F396                     
  2382                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2383  00F396  0E00               	movlw	0
  2384  00F398  0100               	movlb	0	; () banked
  2385  00F39A  6F63               	movwf	(_width+1)& (0+255),b
  2386  00F39C  0E00               	movlw	0
  2387  00F39E  6F62               	movwf	_width& (0+255),b
  2388  00F3A0  C062  F066         	movff	_width,_flags
  2389  00F3A4  C063  F067         	movff	_width+1,_flags+1
  2390  00F3A8                     
  2391                           ; BSR set to: 0
  2392                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2393  00F3A8  6964               	setf	_prec& (0+255),b
  2394  00F3AA  6965               	setf	(_prec+1)& (0+255),b
  2395  00F3AC                     
  2396                           ; BSR set to: 0
  2397                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
  2398  00F3AC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2399  00F3B0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2400  00F3B4  CFDE FFF6          	movff	postinc2,tblptrl
  2401  00F3B8  CFDD FFF7          	movff	postdec2,tblptrh
  2402  00F3BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2403  00F3BC  6AF8               	clrf	tblptru,c
  2404  00F3BE                     	endif
  2405  00F3BE                     	if	0	;tblptru may be non-zero
  2406  00F3BE                     	endif
  2407  00F3BE  0008               	tblrd		*
  2408  00F3C0  50F5               	movf	tablat,w,c
  2409  00F3C2  0A63               	xorlw	99
  2410  00F3C4  A4D8               	btfss	status,2,c
  2411  00F3C6  EFE7  F079         	goto	u1191
  2412  00F3CA  EFE9  F079         	goto	u1190
  2413  00F3CE                     u1191:
  2414  00F3CE  EF10  F07A         	goto	l1925
  2415  00F3D2                     u1190:
  2416  00F3D2                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
  2419  00F3D2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2420  00F3D6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2421  00F3DA  2ADE               	incf	postinc2,f,c
  2422  00F3DC  0E00               	movlw	0
  2423  00F3DE  22DD               	addwfc	postdec2,f,c
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2426  00F3E0  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2427  00F3E4  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2428  00F3E8  CFDF F048          	movff	indf2,??_vfpfcnvrt
  2429  00F3EC  0E02               	movlw	2
  2430  00F3EE  26DE               	addwf	postinc2,f,c
  2431  00F3F0  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  2432  00F3F4  0E00               	movlw	0
  2433  00F3F6  22DD               	addwfc	postdec2,f,c
  2434  00F3F8  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2435  00F3FC  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2436  00F400  50DF               	movf	indf2,w,c
  2437  00F402  6E52               	movwf	vfpfcnvrt@c^0,c
  2438  00F404                     
  2439                           ; BSR set to: 0
  2440                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
  2441  00F404  C042  F00C         	movff	vfpfcnvrt@fp,ctoa@fp
  2442  00F408  C043  F00D         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
  2443  00F40C  C052  F00E         	movff	vfpfcnvrt@c,ctoa@c
  2444  00F410  ECCF  F077         	call	_ctoa	;wreg free
  2445  00F414  C00C  F042         	movff	?_ctoa,?_vfpfcnvrt
  2446  00F418  C00D  F043         	movff	?_ctoa+1,?_vfpfcnvrt+1
  2447  00F41C  EFC9  F07A         	goto	l1062
  2448  00F420                     l1925:
  2449                           
  2450                           ; BSR set to: 0
  2451                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2452  00F420  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  00F424  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  00F428  CFDE FFF6          	movff	postinc2,tblptrl
  2455  00F42C  CFDD FFF7          	movff	postdec2,tblptrh
  2456  00F430                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2457  00F430  6AF8               	clrf	tblptru,c
  2458  00F432                     	endif
  2459  00F432                     	if	0	;tblptru may be non-zero
  2460  00F432                     	endif
  2461  00F432  0008               	tblrd		*
  2462  00F434  50F5               	movf	tablat,w,c
  2463  00F436  0A64               	xorlw	100
  2464  00F438  B4D8               	btfsc	status,2,c
  2465  00F43A  EF21  F07A         	goto	u1201
  2466  00F43E  EF23  F07A         	goto	u1200
  2467  00F442                     u1201:
  2468  00F442  EF36  F07A         	goto	l1929
  2469  00F446                     u1200:
  2470  00F446                     
  2471                           ; BSR set to: 0
  2472  00F446  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2473  00F44A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2474  00F44E  CFDE FFF6          	movff	postinc2,tblptrl
  2475  00F452  CFDD FFF7          	movff	postdec2,tblptrh
  2476  00F456                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2477  00F456  6AF8               	clrf	tblptru,c
  2478  00F458                     	endif
  2479  00F458                     	if	0	;tblptru may be non-zero
  2480  00F458                     	endif
  2481  00F458  0008               	tblrd		*
  2482  00F45A  50F5               	movf	tablat,w,c
  2483  00F45C  0A69               	xorlw	105
  2484  00F45E  A4D8               	btfss	status,2,c
  2485  00F460  EF34  F07A         	goto	u1211
  2486  00F464  EF36  F07A         	goto	u1210
  2487  00F468                     u1211:
  2488  00F468  EF76  F07A         	goto	l1935
  2489  00F46C                     u1210:
  2490  00F46C                     l1929:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2494  00F46C  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2495  00F470  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2496  00F474  2ADE               	incf	postinc2,f,c
  2497  00F476  0E00               	movlw	0
  2498  00F478  22DD               	addwfc	postdec2,f,c
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2501  00F47A  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2502  00F47E  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2503  00F482  CFDF F048          	movff	indf2,??_vfpfcnvrt
  2504  00F486  0E02               	movlw	2
  2505  00F488  26DE               	addwf	postinc2,f,c
  2506  00F48A  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  2507  00F48E  0E00               	movlw	0
  2508  00F490  22DD               	addwfc	postdec2,f,c
  2509  00F492  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2510  00F496  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2511  00F49A  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  2512  00F49E  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  2513  00F4A2  0E00               	movlw	0
  2514  00F4A4  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2515  00F4A6  0EFF               	movlw	-1
  2516  00F4A8  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  2517  00F4AA  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  2518  00F4AC  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  2519  00F4AE  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  2520  00F4B0  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  2521  00F4B2  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  2522  00F4B4                     
  2523                           ; BSR set to: 0
  2524                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2525  00F4B4  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  2526  00F4B8  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2527  00F4BC  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  2528  00F4C0  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2529  00F4C4  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2530  00F4C8  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2531  00F4CC  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2532  00F4D0  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2533  00F4D4  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2534  00F4D8  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2535  00F4DC  ECCA  F07A         	call	_dtoa	;wreg free
  2536  00F4E0  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  2537  00F4E4  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2538  00F4E8  EFC9  F07A         	goto	l1062
  2539  00F4EC                     l1935:
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2543  00F4EC  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2544  00F4F0  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2545  00F4F4  CFDE FFF6          	movff	postinc2,tblptrl
  2546  00F4F8  CFDD FFF7          	movff	postdec2,tblptrh
  2547  00F4FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2548  00F4FC  6AF8               	clrf	tblptru,c
  2549  00F4FE                     	endif
  2550  00F4FE                     	if	0	;tblptru may be non-zero
  2551  00F4FE                     	endif
  2552  00F4FE  0008               	tblrd		*
  2553  00F500  50F5               	movf	tablat,w,c
  2554  00F502  0A25               	xorlw	37
  2555  00F504  A4D8               	btfss	status,2,c
  2556  00F506  EF87  F07A         	goto	u1221
  2557  00F50A  EF89  F07A         	goto	u1220
  2558  00F50E                     u1221:
  2559  00F50E  EFA0  F07A         	goto	l1945
  2560  00F512                     u1220:
  2561  00F512                     
  2562                           ; BSR set to: 0
  2563                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2564  00F512  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2565  00F516  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2566  00F51A  2ADE               	incf	postinc2,f,c
  2567  00F51C  0E00               	movlw	0
  2568  00F51E  22DD               	addwfc	postdec2,f,c
  2569  00F520                     
  2570                           ; BSR set to: 0
  2571                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2572  00F520  0E00               	movlw	0
  2573  00F522  6E04               	movwf	(fputc@c+1)^0,c
  2574  00F524  0E25               	movlw	37
  2575  00F526  6E03               	movwf	fputc@c^0,c
  2576  00F528  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2577  00F52C  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2578  00F530  EC21  F077         	call	_fputc	;wreg free
  2579  00F534                     l1941:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2582  00F534  0E00               	movlw	0
  2583  00F536  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2584  00F538  0E01               	movlw	1
  2585  00F53A  6E42               	movwf	?_vfpfcnvrt^0,c
  2586  00F53C  EFC9  F07A         	goto	l1062
  2587  00F540                     l1945:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2591  00F540  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2592  00F544  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2593  00F548  2ADE               	incf	postinc2,f,c
  2594  00F54A  0E00               	movlw	0
  2595  00F54C  22DD               	addwfc	postdec2,f,c
  2596  00F54E                     
  2597                           ; BSR set to: 0
  2598                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2599  00F54E  0E00               	movlw	0
  2600  00F550  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  2601  00F552  0E00               	movlw	0
  2602  00F554  6E42               	movwf	?_vfpfcnvrt^0,c
  2603  00F556  EFC9  F07A         	goto	l1062
  2604  00F55A                     l1951:
  2605                           
  2606                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2607  00F55A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2608  00F55E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2609  00F562  CFDE FFF6          	movff	postinc2,tblptrl
  2610  00F566  CFDD FFF7          	movff	postdec2,tblptrh
  2611  00F56A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2612  00F56A  6AF8               	clrf	tblptru,c
  2613  00F56C                     	endif
  2614  00F56C                     	if	0	;tblptru may be non-zero
  2615  00F56C                     	endif
  2616  00F56C  0008               	tblrd		*
  2617  00F56E  50F5               	movf	tablat,w,c
  2618  00F570  6E03               	movwf	fputc@c^0,c
  2619  00F572  6A04               	clrf	(fputc@c+1)^0,c
  2620  00F574  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2621  00F578  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2622  00F57C  EC21  F077         	call	_fputc	;wreg free
  2623  00F580                     
  2624                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2625  00F580  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2626  00F584  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2627  00F588  2ADE               	incf	postinc2,f,c
  2628  00F58A  0E00               	movlw	0
  2629  00F58C  22DD               	addwfc	postdec2,f,c
  2630  00F58E  EF9A  F07A         	goto	l1941
  2631  00F592                     l1062:
  2632  00F592  0012               	return		;funcret
  2633  00F594                     __end_of_vfpfcnvrt:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _dtoa *****************
  2637 ;; Defined at:
  2638 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  2641 ;;		 -> NULL(0), 
  2642 ;;  d               8   31[COMRAM] long long 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  n               8   55[COMRAM] long long 
  2645 ;;  i               2   63[COMRAM] int 
  2646 ;;  s               2   53[COMRAM] int 
  2647 ;;  w               2   51[COMRAM] int 
  2648 ;;  p               2   49[COMRAM] int 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2   29[COMRAM] int 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2658 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;Total ram usage:       36 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    5
  2665 ;; This function calls:
  2666 ;;		___aodiv
  2667 ;;		___aomod
  2668 ;;		_abs
  2669 ;;		_pad
  2670 ;; This function is called by:
  2671 ;;		_vfpfcnvrt
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text4
  2676  00F594                     __ptext4:
  2677                           	callstack 0
  2678  00F594                     _dtoa:
  2679                           	callstack 22
  2680  00F594                     
  2681                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2682  00F594  C020  F038         	movff	dtoa@d,dtoa@n
  2683  00F598  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  2684  00F59C  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  2685  00F5A0  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  2686  00F5A4  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  2687  00F5A8  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  2688  00F5AC  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  2689  00F5B0  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  2690  00F5B4                     
  2691                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2692  00F5B4  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  2693  00F5B6  EFDF  F07A         	goto	u1031
  2694  00F5BA  EFE2  F07A         	goto	u1030
  2695  00F5BE                     u1031:
  2696  00F5BE  0E01               	movlw	1
  2697  00F5C0  EFE3  F07A         	goto	u1040
  2698  00F5C4                     u1030:
  2699  00F5C4  0E00               	movlw	0
  2700  00F5C6                     u1040:
  2701  00F5C6  6E36               	movwf	dtoa@s^0,c
  2702  00F5C8  6A37               	clrf	(dtoa@s+1)^0,c
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2705  00F5CA  5036               	movf	dtoa@s^0,w,c
  2706  00F5CC  1037               	iorwf	(dtoa@s+1)^0,w,c
  2707  00F5CE  B4D8               	btfsc	status,2,c
  2708  00F5D0  EFEC  F07A         	goto	u1051
  2709  00F5D4  EFEE  F07A         	goto	u1050
  2710  00F5D8                     u1051:
  2711  00F5D8  EFFE  F07A         	goto	l1847
  2712  00F5DC                     u1050:
  2713  00F5DC                     
  2714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2715  00F5DC  1E3F               	comf	(dtoa@n+7)^0,f,c
  2716  00F5DE  1E3E               	comf	(dtoa@n+6)^0,f,c
  2717  00F5E0  1E3D               	comf	(dtoa@n+5)^0,f,c
  2718  00F5E2  1E3C               	comf	(dtoa@n+4)^0,f,c
  2719  00F5E4  1E3B               	comf	(dtoa@n+3)^0,f,c
  2720  00F5E6  1E3A               	comf	(dtoa@n+2)^0,f,c
  2721  00F5E8  1E39               	comf	(dtoa@n+1)^0,f,c
  2722  00F5EA  6C38               	negf	dtoa@n^0,c
  2723  00F5EC  0E00               	movlw	0
  2724  00F5EE  2239               	addwfc	(dtoa@n+1)^0,f,c
  2725  00F5F0  223A               	addwfc	(dtoa@n+2)^0,f,c
  2726  00F5F2  223B               	addwfc	(dtoa@n+3)^0,f,c
  2727  00F5F4  223C               	addwfc	(dtoa@n+4)^0,f,c
  2728  00F5F6  223D               	addwfc	(dtoa@n+5)^0,f,c
  2729  00F5F8  223E               	addwfc	(dtoa@n+6)^0,f,c
  2730  00F5FA  223F               	addwfc	(dtoa@n+7)^0,f,c
  2731  00F5FC                     l1847:
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2734  00F5FC  0100               	movlb	0	; () banked
  2735  00F5FE  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2736  00F600  EF04  F07B         	goto	u1061
  2737  00F604  EF06  F07B         	goto	u1060
  2738  00F608                     u1061:
  2739  00F608  EF07  F07B         	goto	l1851
  2740  00F60C                     u1060:
  2741  00F60C                     
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2744  00F60C  9366               	bcf	_flags& (0+255),1,b
  2745  00F60E                     l1851:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2749  00F60E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2750  00F610  EF14  F07B         	goto	u1070
  2751  00F614  5165               	movf	(_prec+1)& (0+255),w,b
  2752  00F616  E106               	bnz	u1071
  2753  00F618  0564               	decf	_prec& (0+255),w,b
  2754  00F61A  B0D8               	btfsc	status,0,c
  2755  00F61C  EF12  F07B         	goto	u1071
  2756  00F620  EF14  F07B         	goto	u1070
  2757  00F624                     u1071:
  2758  00F624  EF1A  F07B         	goto	l1037
  2759  00F628                     u1070:
  2760  00F628                     
  2761                           ; BSR set to: 0
  2762  00F628  0E00               	movlw	0
  2763  00F62A  6E33               	movwf	(dtoa@p+1)^0,c
  2764  00F62C  0E01               	movlw	1
  2765  00F62E  6E32               	movwf	dtoa@p^0,c
  2766  00F630  EF1E  F07B         	goto	l1039
  2767  00F634                     l1037:
  2768                           
  2769                           ; BSR set to: 0
  2770  00F634  C064  F032         	movff	_prec,dtoa@p
  2771  00F638  C065  F033         	movff	_prec+1,dtoa@p+1
  2772  00F63C                     l1039:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2776  00F63C  C062  F034         	movff	_width,dtoa@w
  2777  00F640  C063  F035         	movff	_width+1,dtoa@w+1
  2778  00F644                     
  2779                           ; BSR set to: 0
  2780                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2781  00F644  5036               	movf	dtoa@s^0,w,c
  2782  00F646  1037               	iorwf	(dtoa@s+1)^0,w,c
  2783  00F648  A4D8               	btfss	status,2,c
  2784  00F64A  EF29  F07B         	goto	u1081
  2785  00F64E  EF2B  F07B         	goto	u1080
  2786  00F652                     u1081:
  2787  00F652  EF32  F07B         	goto	l1859
  2788  00F656                     u1080:
  2789  00F656                     
  2790                           ; BSR set to: 0
  2791  00F656  A566               	btfss	_flags& (0+255),2,b
  2792  00F658  EF30  F07B         	goto	u1091
  2793  00F65C  EF32  F07B         	goto	u1090
  2794  00F660                     u1091:
  2795  00F660  EF35  F07B         	goto	l1861
  2796  00F664                     u1090:
  2797  00F664                     l1859:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
  2801  00F664  0634               	decf	dtoa@w^0,f,c
  2802  00F666  A0D8               	btfss	status,0,c
  2803  00F668  0635               	decf	(dtoa@w+1)^0,f,c
  2804  00F66A                     l1861:
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2808  00F66A  0E00               	movlw	0
  2809  00F66C  6E41               	movwf	(dtoa@i+1)^0,c
  2810  00F66E  0E1F               	movlw	31
  2811  00F670  6E40               	movwf	dtoa@i^0,c
  2812  00F672                     
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2815  00F672  0E00               	movlw	0
  2816  00F674  6F8F               	movwf	(_dbuf+31)& (0+255),b
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2819  00F676  EFB9  F07B         	goto	l1875
  2820  00F67A                     l1865:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
  2823  00F67A  0640               	decf	dtoa@i^0,f,c
  2824  00F67C  A0D8               	btfss	status,0,c
  2825  00F67E  0641               	decf	(dtoa@i+1)^0,f,c
  2826  00F680                     
  2827                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2828  00F680  0E70               	movlw	low _dbuf
  2829  00F682  2440               	addwf	dtoa@i^0,w,c
  2830  00F684  6ED9               	movwf	fsr2l,c
  2831  00F686  0E00               	movlw	high _dbuf
  2832  00F688  2041               	addwfc	(dtoa@i+1)^0,w,c
  2833  00F68A  6EDA               	movwf	fsr2h,c
  2834  00F68C  C038  F001         	movff	dtoa@n,___aomod@dividend
  2835  00F690  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2836  00F694  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2837  00F698  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2838  00F69C  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2839  00F6A0  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2840  00F6A4  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2841  00F6A8  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2842  00F6AC  0E0A               	movlw	10
  2843  00F6AE  6E09               	movwf	___aomod@divisor^0,c
  2844  00F6B0  0E00               	movlw	0
  2845  00F6B2  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2846  00F6B4  0E00               	movlw	0
  2847  00F6B6  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2848  00F6B8  0E00               	movlw	0
  2849  00F6BA  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2850  00F6BC  0E00               	movlw	0
  2851  00F6BE  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2852  00F6C0  0E00               	movlw	0
  2853  00F6C2  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2854  00F6C4  0E00               	movlw	0
  2855  00F6C6  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2856  00F6C8  0E00               	movlw	0
  2857  00F6CA  6E10               	movwf	(___aomod@divisor+7)^0,c
  2858  00F6CC  EC3B  F078         	call	___aomod	;wreg free
  2859  00F6D0  C001  F028         	movff	?___aomod,??_dtoa
  2860  00F6D4  C002  F029         	movff	?___aomod+1,??_dtoa+1
  2861  00F6D8  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  2862  00F6DC  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  2863  00F6E0  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  2864  00F6E4  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  2865  00F6E8  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  2866  00F6EC  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  2867  00F6F0  C028  F013         	movff	??_dtoa,abs@a
  2868  00F6F4  C02A  F014         	movff	??_dtoa+2,abs@a+1
  2869  00F6F8  ECAD  F076         	call	_abs	;wreg free
  2870  00F6FC  5013               	movf	?_abs^0,w,c
  2871  00F6FE  0F30               	addlw	48
  2872  00F700  6EDF               	movwf	indf2,c
  2873  00F702                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
  2875  00F702  0632               	decf	dtoa@p^0,f,c
  2876  00F704  A0D8               	btfss	status,0,c
  2877  00F706  0633               	decf	(dtoa@p+1)^0,f,c
  2878  00F708                     
  2879                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
  2880  00F708  0634               	decf	dtoa@w^0,f,c
  2881  00F70A  A0D8               	btfss	status,0,c
  2882  00F70C  0635               	decf	(dtoa@w+1)^0,f,c
  2883  00F70E                     
  2884                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2885  00F70E  C038  F001         	movff	dtoa@n,___aodiv@dividend
  2886  00F712  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2887  00F716  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2888  00F71A  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2889  00F71E  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2890  00F722  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2891  00F726  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2892  00F72A  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2893  00F72E  0E0A               	movlw	10
  2894  00F730  6E09               	movwf	___aodiv@divisor^0,c
  2895  00F732  0E00               	movlw	0
  2896  00F734  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2897  00F736  0E00               	movlw	0
  2898  00F738  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2899  00F73A  0E00               	movlw	0
  2900  00F73C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2901  00F73E  0E00               	movlw	0
  2902  00F740  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2903  00F742  0E00               	movlw	0
  2904  00F744  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2905  00F746  0E00               	movlw	0
  2906  00F748  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2907  00F74A  0E00               	movlw	0
  2908  00F74C  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2909  00F74E  ECED  F078         	call	___aodiv	;wreg free
  2910  00F752  C001  F038         	movff	?___aodiv,dtoa@n
  2911  00F756  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  2912  00F75A  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  2913  00F75E  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  2914  00F762  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  2915  00F766  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  2916  00F76A  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  2917  00F76E  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  2918  00F772                     l1875:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2921  00F772  BE41               	btfsc	(dtoa@i+1)^0,7,c
  2922  00F774  EFC4  F07B         	goto	u1101
  2923  00F778  5041               	movf	(dtoa@i+1)^0,w,c
  2924  00F77A  E108               	bnz	u1100
  2925  00F77C  0440               	decf	dtoa@i^0,w,c
  2926  00F77E  A0D8               	btfss	status,0,c
  2927  00F780  EFC4  F07B         	goto	u1101
  2928  00F784  EFC6  F07B         	goto	u1100
  2929  00F788                     u1101:
  2930  00F788  EFF7  F07B         	goto	l1885
  2931  00F78C                     u1100:
  2932  00F78C  5038               	movf	dtoa@n^0,w,c
  2933  00F78E  1039               	iorwf	(dtoa@n+1)^0,w,c
  2934  00F790  103A               	iorwf	(dtoa@n+2)^0,w,c
  2935  00F792  103B               	iorwf	(dtoa@n+3)^0,w,c
  2936  00F794  103C               	iorwf	(dtoa@n+4)^0,w,c
  2937  00F796  103D               	iorwf	(dtoa@n+5)^0,w,c
  2938  00F798  103E               	iorwf	(dtoa@n+6)^0,w,c
  2939  00F79A  103F               	iorwf	(dtoa@n+7)^0,w,c
  2940  00F79C  A4D8               	btfss	status,2,c
  2941  00F79E  EFD3  F07B         	goto	u1111
  2942  00F7A2  EFD5  F07B         	goto	u1110
  2943  00F7A6                     u1111:
  2944  00F7A6  EF3D  F07B         	goto	l1865
  2945  00F7AA                     u1110:
  2946  00F7AA  BE33               	btfsc	(dtoa@p+1)^0,7,c
  2947  00F7AC  EFE2  F07B         	goto	u1120
  2948  00F7B0  5033               	movf	(dtoa@p+1)^0,w,c
  2949  00F7B2  E106               	bnz	u1121
  2950  00F7B4  0432               	decf	dtoa@p^0,w,c
  2951  00F7B6  B0D8               	btfsc	status,0,c
  2952  00F7B8  EFE0  F07B         	goto	u1121
  2953  00F7BC  EFE2  F07B         	goto	u1120
  2954  00F7C0                     u1121:
  2955  00F7C0  EF3D  F07B         	goto	l1865
  2956  00F7C4                     u1120:
  2957  00F7C4  BE35               	btfsc	(dtoa@w+1)^0,7,c
  2958  00F7C6  EFED  F07B         	goto	u1131
  2959  00F7CA  5035               	movf	(dtoa@w+1)^0,w,c
  2960  00F7CC  E108               	bnz	u1130
  2961  00F7CE  0434               	decf	dtoa@w^0,w,c
  2962  00F7D0  A0D8               	btfss	status,0,c
  2963  00F7D2  EFED  F07B         	goto	u1131
  2964  00F7D6  EFEF  F07B         	goto	u1130
  2965  00F7DA                     u1131:
  2966  00F7DA  EFF7  F07B         	goto	l1885
  2967  00F7DE                     u1130:
  2968  00F7DE  0100               	movlb	0	; () banked
  2969  00F7E0  B366               	btfsc	_flags& (0+255),1,b
  2970  00F7E2  EFF5  F07B         	goto	u1141
  2971  00F7E6  EFF7  F07B         	goto	u1140
  2972  00F7EA                     u1141:
  2973  00F7EA  EF3D  F07B         	goto	l1865
  2974  00F7EE                     u1140:
  2975  00F7EE                     l1885:
  2976                           
  2977                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2978  00F7EE  5036               	movf	dtoa@s^0,w,c
  2979  00F7F0  1037               	iorwf	(dtoa@s+1)^0,w,c
  2980  00F7F2  A4D8               	btfss	status,2,c
  2981  00F7F4  EFFE  F07B         	goto	u1151
  2982  00F7F8  EF00  F07C         	goto	u1150
  2983  00F7FC                     u1151:
  2984  00F7FC  EF08  F07C         	goto	l1889
  2985  00F800                     u1150:
  2986  00F800  0100               	movlb	0	; () banked
  2987  00F802  A566               	btfss	_flags& (0+255),2,b
  2988  00F804  EF06  F07C         	goto	u1161
  2989  00F808  EF08  F07C         	goto	u1160
  2990  00F80C                     u1161:
  2991  00F80C  EF26  F07C         	goto	l1899
  2992  00F810                     u1160:
  2993  00F810                     l1889:
  2994                           
  2995                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
  2996  00F810  0640               	decf	dtoa@i^0,f,c
  2997  00F812  A0D8               	btfss	status,0,c
  2998  00F814  0641               	decf	(dtoa@i+1)^0,f,c
  2999  00F816                     
  3000                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3001  00F816  5036               	movf	dtoa@s^0,w,c
  3002  00F818  1037               	iorwf	(dtoa@s+1)^0,w,c
  3003  00F81A  A4D8               	btfss	status,2,c
  3004  00F81C  EF12  F07C         	goto	u1171
  3005  00F820  EF14  F07C         	goto	u1170
  3006  00F824                     u1171:
  3007  00F824  EF1A  F07C         	goto	l1895
  3008  00F828                     u1170:
  3009  00F828  0E00               	movlw	0
  3010  00F82A  6E31               	movwf	(_dtoa$1203+1)^0,c
  3011  00F82C  0E2B               	movlw	43
  3012  00F82E  6E30               	movwf	_dtoa$1203^0,c
  3013  00F830  EF1E  F07C         	goto	l1897
  3014  00F834                     l1895:
  3015  00F834  0E00               	movlw	0
  3016  00F836  6E31               	movwf	(_dtoa$1203+1)^0,c
  3017  00F838  0E2D               	movlw	45
  3018  00F83A  6E30               	movwf	_dtoa$1203^0,c
  3019  00F83C                     l1897:
  3020  00F83C  0E70               	movlw	low _dbuf
  3021  00F83E  2440               	addwf	dtoa@i^0,w,c
  3022  00F840  6ED9               	movwf	fsr2l,c
  3023  00F842  0E00               	movlw	high _dbuf
  3024  00F844  2041               	addwfc	(dtoa@i+1)^0,w,c
  3025  00F846  6EDA               	movwf	fsr2h,c
  3026  00F848  C030  FFDF         	movff	_dtoa$1203,indf2
  3027  00F84C                     l1899:
  3028                           
  3029                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3030  00F84C  C01E  F013         	movff	dtoa@fp,pad@fp
  3031  00F850  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  3032  00F854  0E70               	movlw	low _dbuf
  3033  00F856  2440               	addwf	dtoa@i^0,w,c
  3034  00F858  6E15               	movwf	pad@buf^0,c
  3035  00F85A  0E00               	movlw	high _dbuf
  3036  00F85C  2041               	addwfc	(dtoa@i+1)^0,w,c
  3037  00F85E  6E16               	movwf	(pad@buf+1)^0,c
  3038  00F860  C034  F017         	movff	dtoa@w,pad@p
  3039  00F864  C035  F018         	movff	dtoa@w+1,pad@p+1
  3040  00F868  EC6C  F077         	call	_pad	;wreg free
  3041  00F86C  C013  F01E         	movff	?_pad,?_dtoa
  3042  00F870  C014  F01F         	movff	?_pad+1,?_dtoa+1
  3043  00F874  0012               	return		;funcret
  3044  00F876                     __end_of_dtoa:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _pad *****************
  3048 ;; Defined at:
  3049 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3052 ;;		 -> NULL(0), 
  3053 ;;  buf             2   20[COMRAM] PTR unsigned char 
  3054 ;;		 -> dbuf(32), 
  3055 ;;  p               2   22[COMRAM] int 
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;  w               2   27[COMRAM] int 
  3058 ;;  i               2   25[COMRAM] int 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  2   18[COMRAM] int 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3068 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;Total ram usage:       11 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; Hardware stack levels required when called:    4
  3075 ;; This function calls:
  3076 ;;		_fputc
  3077 ;;		_fputs
  3078 ;;		_strlen
  3079 ;; This function is called by:
  3080 ;;		_dtoa
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text5
  3085  00EED8                     __ptext5:
  3086                           	callstack 0
  3087  00EED8                     _pad:
  3088                           	callstack 22
  3089  00EED8                     
  3090                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3091  00EED8  0100               	movlb	0	; () banked
  3092  00EEDA  A166               	btfss	_flags& (0+255),0,b
  3093  00EEDC  EF72  F077         	goto	u931
  3094  00EEE0  EF74  F077         	goto	u930
  3095  00EEE4                     u931:
  3096  00EEE4  EF7E  F077         	goto	l1791
  3097  00EEE8                     u930:
  3098  00EEE8                     
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3101  00EEE8  C015  F00C         	movff	pad@buf,fputs@s
  3102  00EEEC  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3103  00EEF0  C013  F00E         	movff	pad@fp,fputs@fp
  3104  00EEF4  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3105  00EEF8  ECCD  F076         	call	_fputs	;wreg free
  3106  00EEFC                     l1791:
  3107                           
  3108                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3109  00EEFC  BE18               	btfsc	(pad@p+1)^0,7,c
  3110  00EEFE  EF83  F077         	goto	u941
  3111  00EF02  EF85  F077         	goto	u940
  3112  00EF06                     u941:
  3113  00EF06  EF8B  F077         	goto	l1795
  3114  00EF0A                     u940:
  3115  00EF0A  C017  F01C         	movff	pad@p,pad@w
  3116  00EF0E  C018  F01D         	movff	pad@p+1,pad@w+1
  3117  00EF12  EF8F  F077         	goto	l1010
  3118  00EF16                     l1795:
  3119  00EF16  0E00               	movlw	0
  3120  00EF18  6E1D               	movwf	(pad@w+1)^0,c
  3121  00EF1A  0E00               	movlw	0
  3122  00EF1C  6E1C               	movwf	pad@w^0,c
  3123  00EF1E                     l1010:
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3126  00EF1E  0E00               	movlw	0
  3127  00EF20  6E1B               	movwf	(pad@i+1)^0,c
  3128  00EF22  0E00               	movlw	0
  3129  00EF24  6E1A               	movwf	pad@i^0,c
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3132  00EF26  EFA1  F077         	goto	l1801
  3133  00EF2A                     l1797:
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3136  00EF2A  0E00               	movlw	0
  3137  00EF2C  6E04               	movwf	(fputc@c+1)^0,c
  3138  00EF2E  0E20               	movlw	32
  3139  00EF30  6E03               	movwf	fputc@c^0,c
  3140  00EF32  C013  F005         	movff	pad@fp,fputc@fp
  3141  00EF36  C014  F006         	movff	pad@fp+1,fputc@fp+1
  3142  00EF3A  EC21  F077         	call	_fputc	;wreg free
  3143  00EF3E                     
  3144                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3145  00EF3E  4A1A               	infsnz	pad@i^0,f,c
  3146  00EF40  2A1B               	incf	(pad@i+1)^0,f,c
  3147  00EF42                     l1801:
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3150  00EF42  501C               	movf	pad@w^0,w,c
  3151  00EF44  5C1A               	subwf	pad@i^0,w,c
  3152  00EF46  501B               	movf	(pad@i+1)^0,w,c
  3153  00EF48  0A80               	xorlw	128
  3154  00EF4A  6E19               	movwf	??_pad^0,c
  3155  00EF4C  501D               	movf	(pad@w+1)^0,w,c
  3156  00EF4E  0A80               	xorlw	128
  3157  00EF50  5819               	subwfb	??_pad^0,w,c
  3158  00EF52  A0D8               	btfss	status,0,c
  3159  00EF54  EFAE  F077         	goto	u951
  3160  00EF58  EFB0  F077         	goto	u950
  3161  00EF5C                     u951:
  3162  00EF5C  EF95  F077         	goto	l1797
  3163  00EF60                     u950:
  3164  00EF60                     
  3165                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3166  00EF60  0100               	movlb	0	; () banked
  3167  00EF62  B166               	btfsc	_flags& (0+255),0,b
  3168  00EF64  EFB6  F077         	goto	u961
  3169  00EF68  EFB8  F077         	goto	u960
  3170  00EF6C                     u961:
  3171  00EF6C  EFC2  F077         	goto	l1805
  3172  00EF70                     u960:
  3173  00EF70                     
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3176  00EF70  C015  F00C         	movff	pad@buf,fputs@s
  3177  00EF74  C016  F00D         	movff	pad@buf+1,fputs@s+1
  3178  00EF78  C013  F00E         	movff	pad@fp,fputs@fp
  3179  00EF7C  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  3180  00EF80  ECCD  F076         	call	_fputs	;wreg free
  3181  00EF84                     l1805:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3184  00EF84  C015  F001         	movff	pad@buf,strlen@s
  3185  00EF88  C016  F002         	movff	pad@buf+1,strlen@s+1
  3186  00EF8C  EC73  F076         	call	_strlen	;wreg free
  3187  00EF90  501C               	movf	pad@w^0,w,c
  3188  00EF92  2401               	addwf	?_strlen^0,w,c
  3189  00EF94  6E13               	movwf	?_pad^0,c
  3190  00EF96  501D               	movf	(pad@w+1)^0,w,c
  3191  00EF98  2002               	addwfc	(?_strlen+1)^0,w,c
  3192  00EF9A  6E14               	movwf	(?_pad+1)^0,c
  3193  00EF9C  0012               	return		;funcret
  3194  00EF9E                     __end_of_pad:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _strlen *****************
  3198 ;; Defined at:
  3199 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3202 ;;		 -> dbuf(32), 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3205 ;;		 -> dbuf(32), 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    0[COMRAM] unsigned int 
  3208 ;; Registers used:
  3209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;Total ram usage:        4 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; This function calls:
  3222 ;;		Nothing
  3223 ;; This function is called by:
  3224 ;;		_pad
  3225 ;; This function uses a non-reentrant model
  3226 ;;
  3227                           
  3228                           	psect	text6
  3229  00ECE6                     __ptext6:
  3230                           	callstack 0
  3231  00ECE6                     _strlen:
  3232                           	callstack 25
  3233  00ECE6  C001  F003         	movff	strlen@s,strlen@a
  3234  00ECEA  C002  F004         	movff	strlen@s+1,strlen@a+1
  3235  00ECEE  EF7B  F076         	goto	l1701
  3236  00ECF2                     l1699:
  3237  00ECF2  4A01               	infsnz	strlen@s^0,f,c
  3238  00ECF4  2A02               	incf	(strlen@s+1)^0,f,c
  3239  00ECF6                     l1701:
  3240  00ECF6  C001  FFD9         	movff	strlen@s,fsr2l
  3241  00ECFA  C002  FFDA         	movff	strlen@s+1,fsr2h
  3242  00ECFE  50DF               	movf	indf2,w,c
  3243  00ED00  A4D8               	btfss	status,2,c
  3244  00ED02  EF85  F076         	goto	u791
  3245  00ED06  EF87  F076         	goto	u790
  3246  00ED0A                     u791:
  3247  00ED0A  EF79  F076         	goto	l1699
  3248  00ED0E                     u790:
  3249  00ED0E  5003               	movf	strlen@a^0,w,c
  3250  00ED10  5C01               	subwf	strlen@s^0,w,c
  3251  00ED12  6E01               	movwf	?_strlen^0,c
  3252  00ED14  5004               	movf	(strlen@a+1)^0,w,c
  3253  00ED16  5802               	subwfb	(strlen@s+1)^0,w,c
  3254  00ED18  6E02               	movwf	(?_strlen+1)^0,c
  3255  00ED1A  0012               	return		;funcret
  3256  00ED1C                     __end_of_strlen:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _fputs *****************
  3260 ;; Defined at:
  3261 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  s               2   11[COMRAM] PTR const unsigned char 
  3264 ;;		 -> dbuf(32), 
  3265 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  3266 ;;		 -> NULL(0), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  i               2   16[COMRAM] int 
  3269 ;;  c               1   15[COMRAM] unsigned char 
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  2   11[COMRAM] int 
  3272 ;; Registers used:
  3273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;Total ram usage:        7 bytes
  3284 ;; Hardware stack levels used:    1
  3285 ;; Hardware stack levels required when called:    3
  3286 ;; This function calls:
  3287 ;;		_fputc
  3288 ;; This function is called by:
  3289 ;;		_pad
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text7
  3294  00ED9A                     __ptext7:
  3295                           	callstack 0
  3296  00ED9A                     _fputs:
  3297                           	callstack 22
  3298  00ED9A  0E00               	movlw	0
  3299  00ED9C  6E12               	movwf	(fputs@i+1)^0,c
  3300  00ED9E  0E00               	movlw	0
  3301  00EDA0  6E11               	movwf	fputs@i^0,c
  3302  00EDA2  EFDE  F076         	goto	l1695
  3303  00EDA6                     l1691:
  3304  00EDA6  C010  F003         	movff	fputs@c,fputc@c
  3305  00EDAA  6A04               	clrf	(fputc@c+1)^0,c
  3306  00EDAC  C00E  F005         	movff	fputs@fp,fputc@fp
  3307  00EDB0  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  3308  00EDB4  EC21  F077         	call	_fputc	;wreg free
  3309  00EDB8  4A11               	infsnz	fputs@i^0,f,c
  3310  00EDBA  2A12               	incf	(fputs@i+1)^0,f,c
  3311  00EDBC                     l1695:
  3312  00EDBC  5011               	movf	fputs@i^0,w,c
  3313  00EDBE  240C               	addwf	fputs@s^0,w,c
  3314  00EDC0  6ED9               	movwf	fsr2l,c
  3315  00EDC2  5012               	movf	(fputs@i+1)^0,w,c
  3316  00EDC4  200D               	addwfc	(fputs@s+1)^0,w,c
  3317  00EDC6  6EDA               	movwf	fsr2h,c
  3318  00EDC8  50DF               	movf	indf2,w,c
  3319  00EDCA  6E10               	movwf	fputs@c^0,c
  3320  00EDCC  5010               	movf	fputs@c^0,w,c
  3321  00EDCE  A4D8               	btfss	status,2,c
  3322  00EDD0  EFEC  F076         	goto	u781
  3323  00EDD4  EFEE  F076         	goto	u780
  3324  00EDD8                     u781:
  3325  00EDD8  EFD3  F076         	goto	l1691
  3326  00EDDC                     u780:
  3327  00EDDC  0012               	return		;funcret
  3328  00EDDE                     __end_of_fputs:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _abs *****************
  3332 ;; Defined at:
  3333 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  a               2   18[COMRAM] int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  2   18[COMRAM] int 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:        4 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_dtoa
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text8
  3361  00ED5A                     __ptext8:
  3362                           	callstack 0
  3363  00ED5A                     _abs:
  3364                           	callstack 26
  3365  00ED5A  BE14               	btfsc	(abs@a+1)^0,7,c
  3366  00ED5C  EFBA  F076         	goto	u970
  3367  00ED60  5014               	movf	(abs@a+1)^0,w,c
  3368  00ED62  E106               	bnz	u971
  3369  00ED64  0413               	decf	abs@a^0,w,c
  3370  00ED66  B0D8               	btfsc	status,0,c
  3371  00ED68  EFB8  F076         	goto	u971
  3372  00ED6C  EFBA  F076         	goto	u970
  3373  00ED70                     u971:
  3374  00ED70  EFC8  F076         	goto	l1076
  3375  00ED74                     u970:
  3376  00ED74  C013  F015         	movff	abs@a,??_abs
  3377  00ED78  C014  F016         	movff	abs@a+1,??_abs+1
  3378  00ED7C  1E15               	comf	??_abs^0,f,c
  3379  00ED7E  1E16               	comf	(??_abs+1)^0,f,c
  3380  00ED80  4A15               	infsnz	??_abs^0,f,c
  3381  00ED82  2A16               	incf	(??_abs+1)^0,f,c
  3382  00ED84  C015  F013         	movff	??_abs,?_abs
  3383  00ED88  C016  F014         	movff	??_abs+1,?_abs+1
  3384  00ED8C  EFCC  F076         	goto	l1079
  3385  00ED90                     l1076:
  3386  00ED90  C013  F013         	movff	abs@a,?_abs
  3387  00ED94  C014  F014         	movff	abs@a+1,?_abs+1
  3388  00ED98                     l1079:
  3389  00ED98  0012               	return		;funcret
  3390  00ED9A                     __end_of_abs:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function ___aomod *****************
  3394 ;; Defined at:
  3395 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  dividend        8    0[COMRAM] long long 
  3398 ;;  divisor         8    8[COMRAM] long long 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  sign            1   17[COMRAM] unsigned char 
  3401 ;;  counter         1   16[COMRAM] unsigned char 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  8    0[COMRAM] long long 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:       18 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_dtoa
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text9
  3425  00F076                     __ptext9:
  3426                           	callstack 0
  3427  00F076                     ___aomod:
  3428                           	callstack 26
  3429  00F076  0E00               	movlw	0
  3430  00F078  6E12               	movwf	___aomod@sign^0,c
  3431  00F07A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3432  00F07C  EF44  F078         	goto	u870
  3433  00F080  EF42  F078         	goto	u871
  3434  00F084                     u871:
  3435  00F084  EF56  F078         	goto	l1759
  3436  00F088                     u870:
  3437  00F088  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3438  00F08A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3439  00F08C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3440  00F08E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3441  00F090  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3442  00F092  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3443  00F094  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3444  00F096  6C01               	negf	___aomod@dividend^0,c
  3445  00F098  0E00               	movlw	0
  3446  00F09A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3447  00F09C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3448  00F09E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3449  00F0A0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3450  00F0A2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3451  00F0A4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3452  00F0A6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3453  00F0A8  0E01               	movlw	1
  3454  00F0AA  6E12               	movwf	___aomod@sign^0,c
  3455  00F0AC                     l1759:
  3456  00F0AC  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3457  00F0AE  EF5D  F078         	goto	u880
  3458  00F0B2  EF5B  F078         	goto	u881
  3459  00F0B6                     u881:
  3460  00F0B6  EF6D  F078         	goto	l1763
  3461  00F0BA                     u880:
  3462  00F0BA  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3463  00F0BC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3464  00F0BE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3465  00F0C0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3466  00F0C2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3467  00F0C4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3468  00F0C6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3469  00F0C8  6C09               	negf	___aomod@divisor^0,c
  3470  00F0CA  0E00               	movlw	0
  3471  00F0CC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3472  00F0CE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3473  00F0D0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3474  00F0D2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3475  00F0D4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3476  00F0D6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3477  00F0D8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3478  00F0DA                     l1763:
  3479  00F0DA  5009               	movf	___aomod@divisor^0,w,c
  3480  00F0DC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3481  00F0DE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3482  00F0E0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3483  00F0E2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3484  00F0E4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3485  00F0E6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3486  00F0E8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3487  00F0EA  B4D8               	btfsc	status,2,c
  3488  00F0EC  EF7A  F078         	goto	u891
  3489  00F0F0  EF7C  F078         	goto	u890
  3490  00F0F4                     u891:
  3491  00F0F4  EFC4  F078         	goto	l1779
  3492  00F0F8                     u890:
  3493  00F0F8  0E01               	movlw	1
  3494  00F0FA  6E11               	movwf	___aomod@counter^0,c
  3495  00F0FC  EF8A  F078         	goto	l1769
  3496  00F100                     l1767:
  3497  00F100  90D8               	bcf	status,0,c
  3498  00F102  3609               	rlcf	___aomod@divisor^0,f,c
  3499  00F104  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3500  00F106  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3501  00F108  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3502  00F10A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3503  00F10C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3504  00F10E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3505  00F110  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3506  00F112  2A11               	incf	___aomod@counter^0,f,c
  3507  00F114                     l1769:
  3508  00F114  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3509  00F116  EF8F  F078         	goto	u901
  3510  00F11A  EF91  F078         	goto	u900
  3511  00F11E                     u901:
  3512  00F11E  EF80  F078         	goto	l1767
  3513  00F122                     u900:
  3514  00F122                     l1771:
  3515  00F122  5009               	movf	___aomod@divisor^0,w,c
  3516  00F124  5C01               	subwf	___aomod@dividend^0,w,c
  3517  00F126  500A               	movf	(___aomod@divisor+1)^0,w,c
  3518  00F128  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3519  00F12A  500B               	movf	(___aomod@divisor+2)^0,w,c
  3520  00F12C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3521  00F12E  500C               	movf	(___aomod@divisor+3)^0,w,c
  3522  00F130  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3523  00F132  500D               	movf	(___aomod@divisor+4)^0,w,c
  3524  00F134  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3525  00F136  500E               	movf	(___aomod@divisor+5)^0,w,c
  3526  00F138  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3527  00F13A  500F               	movf	(___aomod@divisor+6)^0,w,c
  3528  00F13C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3529  00F13E  5010               	movf	(___aomod@divisor+7)^0,w,c
  3530  00F140  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3531  00F142  A0D8               	btfss	status,0,c
  3532  00F144  EFA6  F078         	goto	u911
  3533  00F148  EFA8  F078         	goto	u910
  3534  00F14C                     u911:
  3535  00F14C  EFB8  F078         	goto	l1775
  3536  00F150                     u910:
  3537  00F150  5009               	movf	___aomod@divisor^0,w,c
  3538  00F152  5E01               	subwf	___aomod@dividend^0,f,c
  3539  00F154  500A               	movf	(___aomod@divisor+1)^0,w,c
  3540  00F156  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3541  00F158  500B               	movf	(___aomod@divisor+2)^0,w,c
  3542  00F15A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3543  00F15C  500C               	movf	(___aomod@divisor+3)^0,w,c
  3544  00F15E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3545  00F160  500D               	movf	(___aomod@divisor+4)^0,w,c
  3546  00F162  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3547  00F164  500E               	movf	(___aomod@divisor+5)^0,w,c
  3548  00F166  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3549  00F168  500F               	movf	(___aomod@divisor+6)^0,w,c
  3550  00F16A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3551  00F16C  5010               	movf	(___aomod@divisor+7)^0,w,c
  3552  00F16E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3553  00F170                     l1775:
  3554  00F170  90D8               	bcf	status,0,c
  3555  00F172  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3556  00F174  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3557  00F176  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3558  00F178  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3559  00F17A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3560  00F17C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3561  00F17E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3562  00F180  3209               	rrcf	___aomod@divisor^0,f,c
  3563  00F182  2E11               	decfsz	___aomod@counter^0,f,c
  3564  00F184  EF91  F078         	goto	l1771
  3565  00F188                     l1779:
  3566  00F188  5012               	movf	___aomod@sign^0,w,c
  3567  00F18A  B4D8               	btfsc	status,2,c
  3568  00F18C  EFCA  F078         	goto	u921
  3569  00F190  EFCC  F078         	goto	u920
  3570  00F194                     u921:
  3571  00F194  EFDC  F078         	goto	l1783
  3572  00F198                     u920:
  3573  00F198  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3574  00F19A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3575  00F19C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3576  00F19E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3577  00F1A0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3578  00F1A2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3579  00F1A4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3580  00F1A6  6C01               	negf	___aomod@dividend^0,c
  3581  00F1A8  0E00               	movlw	0
  3582  00F1AA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3583  00F1AC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3584  00F1AE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3585  00F1B0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3586  00F1B2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3587  00F1B4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3588  00F1B6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3589  00F1B8                     l1783:
  3590  00F1B8  C001  F001         	movff	___aomod@dividend,?___aomod
  3591  00F1BC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3592  00F1C0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3593  00F1C4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3594  00F1C8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3595  00F1CC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3596  00F1D0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3597  00F1D4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3598  00F1D8  0012               	return		;funcret
  3599  00F1DA                     __end_of___aomod:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function ___aodiv *****************
  3603 ;; Defined at:
  3604 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  dividend        8    0[COMRAM] long long 
  3607 ;;  divisor         8    8[COMRAM] long long 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  quotient        8   18[COMRAM] long long 
  3610 ;;  sign            1   17[COMRAM] unsigned char 
  3611 ;;  counter         1   16[COMRAM] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  8    0[COMRAM] long long 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3621 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;Total ram usage:       26 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_dtoa
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text10
  3635  00F1DA                     __ptext10:
  3636                           	callstack 0
  3637  00F1DA                     ___aodiv:
  3638                           	callstack 26
  3639  00F1DA  0E00               	movlw	0
  3640  00F1DC  6E12               	movwf	___aodiv@sign^0,c
  3641  00F1DE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3642  00F1E0  EFF6  F078         	goto	u800
  3643  00F1E4  EFF4  F078         	goto	u801
  3644  00F1E8                     u801:
  3645  00F1E8  EF08  F079         	goto	l1715
  3646  00F1EC                     u800:
  3647  00F1EC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3648  00F1EE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3649  00F1F0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3650  00F1F2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3651  00F1F4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3652  00F1F6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3653  00F1F8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3654  00F1FA  6C09               	negf	___aodiv@divisor^0,c
  3655  00F1FC  0E00               	movlw	0
  3656  00F1FE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3657  00F200  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3658  00F202  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3659  00F204  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3660  00F206  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3661  00F208  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3662  00F20A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3663  00F20C  0E01               	movlw	1
  3664  00F20E  6E12               	movwf	___aodiv@sign^0,c
  3665  00F210                     l1715:
  3666  00F210  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3667  00F212  EF0F  F079         	goto	u810
  3668  00F216  EF0D  F079         	goto	u811
  3669  00F21A                     u811:
  3670  00F21A  EF21  F079         	goto	l1721
  3671  00F21E                     u810:
  3672  00F21E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3673  00F220  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3674  00F222  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3675  00F224  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3676  00F226  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3677  00F228  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3678  00F22A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3679  00F22C  6C01               	negf	___aodiv@dividend^0,c
  3680  00F22E  0E00               	movlw	0
  3681  00F230  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3682  00F232  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3683  00F234  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3684  00F236  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3685  00F238  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3686  00F23A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3687  00F23C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3688  00F23E  0E01               	movlw	1
  3689  00F240  1A12               	xorwf	___aodiv@sign^0,f,c
  3690  00F242                     l1721:
  3691  00F242  EE20  F013         	lfsr	2,___aodiv@quotient
  3692  00F246  0E07               	movlw	7
  3693  00F248                     u821:
  3694  00F248  6ADE               	clrf	postinc2,c
  3695  00F24A  06E8               	decf	wreg,f,c
  3696  00F24C  E2FD               	bc	u821
  3697  00F24E  5009               	movf	___aodiv@divisor^0,w,c
  3698  00F250  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3699  00F252  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3700  00F254  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3701  00F256  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3702  00F258  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3703  00F25A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3704  00F25C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3705  00F25E  B4D8               	btfsc	status,2,c
  3706  00F260  EF34  F079         	goto	u831
  3707  00F264  EF36  F079         	goto	u830
  3708  00F268                     u831:
  3709  00F268  EF88  F079         	goto	l1743
  3710  00F26C                     u830:
  3711  00F26C  0E01               	movlw	1
  3712  00F26E  6E11               	movwf	___aodiv@counter^0,c
  3713  00F270  EF44  F079         	goto	l1729
  3714  00F274                     l1727:
  3715  00F274  90D8               	bcf	status,0,c
  3716  00F276  3609               	rlcf	___aodiv@divisor^0,f,c
  3717  00F278  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3718  00F27A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3719  00F27C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3720  00F27E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3721  00F280  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3722  00F282  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3723  00F284  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3724  00F286  2A11               	incf	___aodiv@counter^0,f,c
  3725  00F288                     l1729:
  3726  00F288  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3727  00F28A  EF49  F079         	goto	u841
  3728  00F28E  EF4B  F079         	goto	u840
  3729  00F292                     u841:
  3730  00F292  EF3A  F079         	goto	l1727
  3731  00F296                     u840:
  3732  00F296                     l1731:
  3733  00F296  90D8               	bcf	status,0,c
  3734  00F298  3613               	rlcf	___aodiv@quotient^0,f,c
  3735  00F29A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3736  00F29C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3737  00F29E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3738  00F2A0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3739  00F2A2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3740  00F2A4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3741  00F2A6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3742  00F2A8  5009               	movf	___aodiv@divisor^0,w,c
  3743  00F2AA  5C01               	subwf	___aodiv@dividend^0,w,c
  3744  00F2AC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3745  00F2AE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3746  00F2B0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3747  00F2B2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3748  00F2B4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3749  00F2B6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3750  00F2B8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3751  00F2BA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3752  00F2BC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3753  00F2BE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3754  00F2C0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3755  00F2C2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3756  00F2C4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3757  00F2C6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3758  00F2C8  A0D8               	btfss	status,0,c
  3759  00F2CA  EF69  F079         	goto	u851
  3760  00F2CE  EF6B  F079         	goto	u850
  3761  00F2D2                     u851:
  3762  00F2D2  EF7C  F079         	goto	l1739
  3763  00F2D6                     u850:
  3764  00F2D6  5009               	movf	___aodiv@divisor^0,w,c
  3765  00F2D8  5E01               	subwf	___aodiv@dividend^0,f,c
  3766  00F2DA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3767  00F2DC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3768  00F2DE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3769  00F2E0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3770  00F2E2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3771  00F2E4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3772  00F2E6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3773  00F2E8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3774  00F2EA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3775  00F2EC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3776  00F2EE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3777  00F2F0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3778  00F2F2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3779  00F2F4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3780  00F2F6  8013               	bsf	___aodiv@quotient^0,0,c
  3781  00F2F8                     l1739:
  3782  00F2F8  90D8               	bcf	status,0,c
  3783  00F2FA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3784  00F2FC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3785  00F2FE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3786  00F300  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3787  00F302  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3788  00F304  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3789  00F306  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3790  00F308  3209               	rrcf	___aodiv@divisor^0,f,c
  3791  00F30A  2E11               	decfsz	___aodiv@counter^0,f,c
  3792  00F30C  EF4B  F079         	goto	l1731
  3793  00F310                     l1743:
  3794  00F310  5012               	movf	___aodiv@sign^0,w,c
  3795  00F312  B4D8               	btfsc	status,2,c
  3796  00F314  EF8E  F079         	goto	u861
  3797  00F318  EF90  F079         	goto	u860
  3798  00F31C                     u861:
  3799  00F31C  EFA0  F079         	goto	l1747
  3800  00F320                     u860:
  3801  00F320  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3802  00F322  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3803  00F324  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3804  00F326  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3805  00F328  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3806  00F32A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3807  00F32C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3808  00F32E  6C13               	negf	___aodiv@quotient^0,c
  3809  00F330  0E00               	movlw	0
  3810  00F332  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3811  00F334  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3812  00F336  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3813  00F338  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3814  00F33A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3815  00F33C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3816  00F33E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3817  00F340                     l1747:
  3818  00F340  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3819  00F344  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3820  00F348  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3821  00F34C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3822  00F350  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3823  00F354  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3824  00F358  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3825  00F35C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3826  00F360  0012               	return		;funcret
  3827  00F362                     __end_of___aodiv:
  3828                           	callstack 0
  3829                           
  3830 ;; *************** function _ctoa *****************
  3831 ;; Defined at:
  3832 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3835 ;;		 -> NULL(0), 
  3836 ;;  c               1   13[COMRAM] unsigned char 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  w               2   17[COMRAM] int 
  3839 ;;  l               2   15[COMRAM] int 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2   11[COMRAM] int 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3849 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;Total ram usage:        8 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    3
  3856 ;; This function calls:
  3857 ;;		_fputc
  3858 ;; This function is called by:
  3859 ;;		_vfpfcnvrt
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text11
  3864  00EF9E                     __ptext11:
  3865                           	callstack 0
  3866  00EF9E                     _ctoa:
  3867                           	callstack 24
  3868  00EF9E                     
  3869                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
  3870  00EF9E  0100               	movlb	0	; () banked
  3871  00EFA0  5162               	movf	_width& (0+255),w,b
  3872  00EFA2  1163               	iorwf	(_width+1)& (0+255),w,b
  3873  00EFA4  A4D8               	btfss	status,2,c
  3874  00EFA6  EFD7  F077         	goto	u981
  3875  00EFAA  EFD9  F077         	goto	u980
  3876  00EFAE                     u981:
  3877  00EFAE  EFDF  F077         	goto	l1817
  3878  00EFB2                     u980:
  3879  00EFB2                     
  3880                           ; BSR set to: 0
  3881  00EFB2  C062  F012         	movff	_width,ctoa@w
  3882  00EFB6  C063  F013         	movff	_width+1,ctoa@w+1
  3883  00EFBA  EFE5  F077         	goto	l1819
  3884  00EFBE                     l1817:
  3885                           
  3886                           ; BSR set to: 0
  3887  00EFBE  0EFF               	movlw	255
  3888  00EFC0  2562               	addwf	_width& (0+255),w,b
  3889  00EFC2  6E12               	movwf	ctoa@w^0,c
  3890  00EFC4  0EFF               	movlw	255
  3891  00EFC6  2163               	addwfc	(_width+1)& (0+255),w,b
  3892  00EFC8  6E13               	movwf	(ctoa@w+1)^0,c
  3893  00EFCA                     l1819:
  3894                           
  3895                           ; BSR set to: 0
  3896                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
  3897  00EFCA  A166               	btfss	_flags& (0+255),0,b
  3898  00EFCC  EFEA  F077         	goto	u991
  3899  00EFD0  EFEC  F077         	goto	u990
  3900  00EFD4                     u991:
  3901  00EFD4  EFF5  F077         	goto	l1823
  3902  00EFD8                     u990:
  3903  00EFD8                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
  3906  00EFD8  C00E  F003         	movff	ctoa@c,fputc@c
  3907  00EFDC  6A04               	clrf	(fputc@c+1)^0,c
  3908  00EFDE  C00C  F005         	movff	ctoa@fp,fputc@fp
  3909  00EFE2  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  3910  00EFE6  EC21  F077         	call	_fputc	;wreg free
  3911  00EFEA                     l1823:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
  3914  00EFEA  BE13               	btfsc	(ctoa@w+1)^0,7,c
  3915  00EFEC  EFFA  F077         	goto	u1001
  3916  00EFF0  EFFC  F077         	goto	u1000
  3917  00EFF4                     u1001:
  3918  00EFF4  EFFE  F077         	goto	l1827
  3919  00EFF8                     u1000:
  3920  00EFF8  EF02  F078         	goto	l1026
  3921  00EFFC                     l1827:
  3922  00EFFC  0E00               	movlw	0
  3923  00EFFE  6E13               	movwf	(ctoa@w+1)^0,c
  3924  00F000  0E00               	movlw	0
  3925  00F002  6E12               	movwf	ctoa@w^0,c
  3926  00F004                     l1026:
  3927                           
  3928                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
  3929  00F004  0E00               	movlw	0
  3930  00F006  6E11               	movwf	(ctoa@l+1)^0,c
  3931  00F008  0E00               	movlw	0
  3932  00F00A  6E10               	movwf	ctoa@l^0,c
  3933                           
  3934                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3935  00F00C  EF14  F078         	goto	l1833
  3936  00F010                     l1829:
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
  3939  00F010  0E00               	movlw	0
  3940  00F012  6E04               	movwf	(fputc@c+1)^0,c
  3941  00F014  0E20               	movlw	32
  3942  00F016  6E03               	movwf	fputc@c^0,c
  3943  00F018  C00C  F005         	movff	ctoa@fp,fputc@fp
  3944  00F01C  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  3945  00F020  EC21  F077         	call	_fputc	;wreg free
  3946  00F024                     
  3947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
  3948  00F024  4A10               	infsnz	ctoa@l^0,f,c
  3949  00F026  2A11               	incf	(ctoa@l+1)^0,f,c
  3950  00F028                     l1833:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
  3953  00F028  5012               	movf	ctoa@w^0,w,c
  3954  00F02A  5C10               	subwf	ctoa@l^0,w,c
  3955  00F02C  5011               	movf	(ctoa@l+1)^0,w,c
  3956  00F02E  0A80               	xorlw	128
  3957  00F030  6E0F               	movwf	??_ctoa^0,c
  3958  00F032  5013               	movf	(ctoa@w+1)^0,w,c
  3959  00F034  0A80               	xorlw	128
  3960  00F036  580F               	subwfb	??_ctoa^0,w,c
  3961  00F038  A0D8               	btfss	status,0,c
  3962  00F03A  EF21  F078         	goto	u1011
  3963  00F03E  EF23  F078         	goto	u1010
  3964  00F042                     u1011:
  3965  00F042  EF08  F078         	goto	l1829
  3966  00F046                     u1010:
  3967  00F046                     
  3968                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
  3969  00F046  0100               	movlb	0	; () banked
  3970  00F048  B166               	btfsc	_flags& (0+255),0,b
  3971  00F04A  EF29  F078         	goto	u1021
  3972  00F04E  EF2B  F078         	goto	u1020
  3973  00F052                     u1021:
  3974  00F052  EF34  F078         	goto	l1837
  3975  00F056                     u1020:
  3976  00F056                     
  3977                           ; BSR set to: 0
  3978                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
  3979  00F056  C00E  F003         	movff	ctoa@c,fputc@c
  3980  00F05A  6A04               	clrf	(fputc@c+1)^0,c
  3981  00F05C  C00C  F005         	movff	ctoa@fp,fputc@fp
  3982  00F060  C00D  F006         	movff	ctoa@fp+1,fputc@fp+1
  3983  00F064  EC21  F077         	call	_fputc	;wreg free
  3984  00F068                     l1837:
  3985                           
  3986                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
  3987  00F068  0E01               	movlw	1
  3988  00F06A  2410               	addwf	ctoa@l^0,w,c
  3989  00F06C  6E0C               	movwf	?_ctoa^0,c
  3990  00F06E  0E00               	movlw	0
  3991  00F070  2011               	addwfc	(ctoa@l+1)^0,w,c
  3992  00F072  6E0D               	movwf	(?_ctoa+1)^0,c
  3993  00F074  0012               	return		;funcret
  3994  00F076                     __end_of_ctoa:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _fputc *****************
  3998 ;; Defined at:
  3999 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  c               2    2[COMRAM] int 
  4002 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4003 ;;		 -> NULL(0), 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  2    2[COMRAM] int 
  4008 ;; Registers used:
  4009 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;Total ram usage:        9 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    2
  4022 ;; This function calls:
  4023 ;;		_putch
  4024 ;; This function is called by:
  4025 ;;		_pad
  4026 ;;		_ctoa
  4027 ;;		_vfpfcnvrt
  4028 ;;		_fputs
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text12
  4033  00EE42                     __ptext12:
  4034                           	callstack 0
  4035  00EE42                     _fputc:
  4036                           	callstack 25
  4037  00EE42  5005               	movf	fputc@fp^0,w,c
  4038  00EE44  1006               	iorwf	(fputc@fp+1)^0,w,c
  4039  00EE46  B4D8               	btfsc	status,2,c
  4040  00EE48  EF28  F077         	goto	u741
  4041  00EE4C  EF2A  F077         	goto	u740
  4042  00EE50                     u741:
  4043  00EE50  EF33  F077         	goto	l1679
  4044  00EE54                     u740:
  4045  00EE54  5005               	movf	fputc@fp^0,w,c
  4046  00EE56  1006               	iorwf	(fputc@fp+1)^0,w,c
  4047  00EE58  A4D8               	btfss	status,2,c
  4048  00EE5A  EF31  F077         	goto	u751
  4049  00EE5E  EF33  F077         	goto	u750
  4050  00EE62                     u751:
  4051  00EE62  EF38  F077         	goto	l1681
  4052  00EE66                     u750:
  4053  00EE66                     l1679:
  4054  00EE66  5003               	movf	fputc@c^0,w,c
  4055  00EE68  EC7A  F075         	call	_putch
  4056  00EE6C  EF6B  F077         	goto	l1091
  4057  00EE70                     l1681:
  4058  00EE70  EE20 F004          	lfsr	2,4
  4059  00EE74  5005               	movf	fputc@fp^0,w,c
  4060  00EE76  26D9               	addwf	fsr2l,f,c
  4061  00EE78  5006               	movf	(fputc@fp+1)^0,w,c
  4062  00EE7A  22DA               	addwfc	fsr2h,f,c
  4063  00EE7C  50DE               	movf	postinc2,w,c
  4064  00EE7E  10DE               	iorwf	postinc2,w,c
  4065  00EE80  B4D8               	btfsc	status,2,c
  4066  00EE82  EF45  F077         	goto	u761
  4067  00EE86  EF47  F077         	goto	u760
  4068  00EE8A                     u761:
  4069  00EE8A  EF62  F077         	goto	l1685
  4070  00EE8E                     u760:
  4071  00EE8E  EE20 F004          	lfsr	2,4
  4072  00EE92  5005               	movf	fputc@fp^0,w,c
  4073  00EE94  26D9               	addwf	fsr2l,f,c
  4074  00EE96  5006               	movf	(fputc@fp+1)^0,w,c
  4075  00EE98  22DA               	addwfc	fsr2h,f,c
  4076  00EE9A  EE10 F002          	lfsr	1,2
  4077  00EE9E  5005               	movf	fputc@fp^0,w,c
  4078  00EEA0  26E1               	addwf	fsr1l,f,c
  4079  00EEA2  5006               	movf	(fputc@fp+1)^0,w,c
  4080  00EEA4  22E2               	addwfc	fsr1h,f,c
  4081  00EEA6  50DE               	movf	postinc2,w,c
  4082  00EEA8  5CE6               	subwf	postinc1,w,c
  4083  00EEAA  50E6               	movf	postinc1,w,c
  4084  00EEAC  0A80               	xorlw	128
  4085  00EEAE  6E0B               	movwf	(??_fputc+4)^0,c
  4086  00EEB0  50DE               	movf	postinc2,w,c
  4087  00EEB2  0A80               	xorlw	128
  4088  00EEB4  580B               	subwfb	(??_fputc+4)^0,w,c
  4089  00EEB6  B0D8               	btfsc	status,0,c
  4090  00EEB8  EF60  F077         	goto	u771
  4091  00EEBC  EF62  F077         	goto	u770
  4092  00EEC0                     u771:
  4093  00EEC0  EF6B  F077         	goto	l1091
  4094  00EEC4                     u770:
  4095  00EEC4                     l1685:
  4096  00EEC4  EE20 F002          	lfsr	2,2
  4097  00EEC8  5005               	movf	fputc@fp^0,w,c
  4098  00EECA  26D9               	addwf	fsr2l,f,c
  4099  00EECC  5006               	movf	(fputc@fp+1)^0,w,c
  4100  00EECE  22DA               	addwfc	fsr2h,f,c
  4101  00EED0  2ADE               	incf	postinc2,f,c
  4102  00EED2  0E00               	movlw	0
  4103  00EED4  22DD               	addwfc	postdec2,f,c
  4104  00EED6                     l1091:
  4105  00EED6  0012               	return		;funcret
  4106  00EED8                     __end_of_fputc:
  4107                           	callstack 0
  4108                           
  4109 ;; *************** function _putch *****************
  4110 ;; Defined at:
  4111 ;;		line 146 in file "mcc_generated_files/eusart1.c"
  4112 ;; Parameters:    Size  Location     Type
  4113 ;;  txData          1    wreg     unsigned char 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;  txData          1    1[COMRAM] unsigned char 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      void 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, cstack
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;Total ram usage:        1 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    1
  4132 ;; This function calls:
  4133 ;;		_EUSART1_Write
  4134 ;; This function is called by:
  4135 ;;		_fputc
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           
  4139                           	psect	text13
  4140  00EAF4                     __ptext13:
  4141                           	callstack 0
  4142  00EAF4                     _putch:
  4143                           	callstack 25
  4144                           
  4145                           ;incstack = 0
  4146                           ;putch@txData stored from wreg
  4147  00EAF4  6E02               	movwf	putch@txData^0,c
  4148  00EAF6                     
  4149                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
  4150  00EAF6  5002               	movf	putch@txData^0,w,c
  4151  00EAF8  EC9B  F075         	call	_EUSART1_Write
  4152  00EAFC  0012               	return		;funcret
  4153  00EAFE                     __end_of_putch:
  4154                           	callstack 0
  4155                           
  4156 ;; *************** function _EUSART1_Write *****************
  4157 ;; Defined at:
  4158 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  txData          1    wreg     unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  txData          1    0[COMRAM] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;Total ram usage:        1 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_putch
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text14
  4186  00EB36                     __ptext14:
  4187                           	callstack 0
  4188  00EB36                     _EUSART1_Write:
  4189                           	callstack 25
  4190                           
  4191                           ;incstack = 0
  4192                           ;EUSART1_Write@txData stored from wreg
  4193  00EB36  6E01               	movwf	EUSART1_Write@txData^0,c
  4194  00EB38                     l87:
  4195                           
  4196                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
  4197  00EB38  A89E               	btfss	158,4,c	;volatile
  4198  00EB3A  EFA1  F075         	goto	u731
  4199  00EB3E  EFA3  F075         	goto	u730
  4200  00EB42                     u731:
  4201  00EB42  EF9C  F075         	goto	l87
  4202  00EB46                     u730:
  4203  00EB46                     
  4204                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
  4205  00EB46  C001  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4206  00EB4A  0012               	return		;funcret
  4207  00EB4C                     __end_of_EUSART1_Write:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _TMR0_WriteTimer *****************
  4211 ;; Defined at:
  4212 ;;		line 115 in file "mcc_generated_files/tmr0.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  timerVal        2    8[COMRAM] unsigned short 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      void 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;Total ram usage:        2 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_main
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text15
  4240  00EAEA                     __ptext15:
  4241                           	callstack 0
  4242  00EAEA                     _TMR0_WriteTimer:
  4243                           	callstack 30
  4244  00EAEA                     
  4245                           ;mcc_generated_files/tmr0.c: 115: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 116: {;mcc_generated_files/tmr0.c: 118:     TMR0H = timerVal >> 8;
  4246  00EAEA  500A               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  4247  00EAEC  6ED7               	movwf	215,c	;volatile
  4248  00EAEE                     
  4249                           ;mcc_generated_files/tmr0.c: 119:     TMR0L = (uint8_t) timerVal;
  4250  00EAEE  C009  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  4251  00EAF2  0012               	return		;funcret
  4252  00EAF4                     __end_of_TMR0_WriteTimer:
  4253                           	callstack 0
  4254                           
  4255 ;; *************** function _TMR0_ReadTimer *****************
  4256 ;; Defined at:
  4257 ;;		line 102 in file "mcc_generated_files/tmr0.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;		None
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  readVal         2    4[COMRAM] unsigned short 
  4262 ;;  readValHigh     1    7[COMRAM] unsigned char 
  4263 ;;  readValLow      1    6[COMRAM] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  2    0[COMRAM] unsigned short 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;Total ram usage:        8 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_main
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text16
  4287  00EB82                     __ptext16:
  4288                           	callstack 0
  4289  00EB82                     _TMR0_ReadTimer:
  4290                           	callstack 30
  4291  00EB82                     
  4292                           ;mcc_generated_files/tmr0.c: 104:     uint16_t readVal;;mcc_generated_files/tmr0.c: 105:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 106:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 108:     readValLow = TMR0L;
  4293  00EB82  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
  4294                           
  4295                           ;mcc_generated_files/tmr0.c: 109:     readValHigh = TMR0H;
  4296  00EB86  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
  4297  00EB8A                     
  4298                           ;mcc_generated_files/tmr0.c: 110:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
  4299  00EB8A  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
  4300  00EB8C  6E03               	movwf	??_TMR0_ReadTimer^0,c
  4301  00EB8E  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
  4302  00EB90  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
  4303  00EB92  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
  4304  00EB96                     
  4305                           ;mcc_generated_files/tmr0.c: 112:     return readVal;
  4306  00EB96  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
  4307  00EB9A  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
  4308  00EB9E  0012               	return		;funcret
  4309  00EBA0                     __end_of_TMR0_ReadTimer:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _TMR0_HasOverflowOccured *****************
  4313 ;; Defined at:
  4314 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      _Bool 
  4321 ;; Registers used:
  4322 ;;		wreg
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text17
  4342  00EB22                     __ptext17:
  4343                           	callstack 0
  4344  00EB22                     _TMR0_HasOverflowOccured:
  4345                           	callstack 30
  4346  00EB22                     
  4347                           ;mcc_generated_files/tmr0.c: 132:     return(INTCONbits.TMR0IF);
  4348  00EB22  B4F2               	btfsc	242,2,c	;volatile
  4349  00EB24  EF96  F075         	goto	u1281
  4350  00EB28  EF99  F075         	goto	u1280
  4351  00EB2C                     u1281:
  4352  00EB2C  0E01               	movlw	1
  4353  00EB2E  EF9A  F075         	goto	u1286
  4354  00EB32                     u1280:
  4355  00EB32  0E00               	movlw	0
  4356  00EB34                     u1286:
  4357  00EB34  0012               	return		;funcret
  4358  00EB36                     __end_of_TMR0_HasOverflowOccured:
  4359                           	callstack 0
  4360                           
  4361 ;; *************** function _SYSTEM_Initialize *****************
  4362 ;; Defined at:
  4363 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    2
  4384 ;; This function calls:
  4385 ;;		_EPWM1_Initialize
  4386 ;;		_EUSART1_Initialize
  4387 ;;		_OSCILLATOR_Initialize
  4388 ;;		_PIN_MANAGER_Initialize
  4389 ;;		_TMR0_Initialize
  4390 ;;		_TMR2_Initialize
  4391 ;; This function is called by:
  4392 ;;		_main
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text18
  4397  00EB4C                     __ptext18:
  4398                           	callstack 0
  4399  00EB4C                     _SYSTEM_Initialize:
  4400                           	callstack 28
  4401  00EB4C                     
  4402                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4403  00EB4C  EC2C  F076         	call	_PIN_MANAGER_Initialize	;wreg free
  4404                           
  4405                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4406  00EB50  ECB3  F075         	call	_OSCILLATOR_Initialize	;wreg free
  4407                           
  4408                           ;mcc_generated_files/mcc.c: 55:     EPWM1_Initialize();
  4409  00EB54  ECD0  F075         	call	_EPWM1_Initialize	;wreg free
  4410                           
  4411                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  4412  00EB58  EC7F  F075         	call	_TMR2_Initialize	;wreg free
  4413  00EB5C                     
  4414                           ;mcc_generated_files/mcc.c: 57:     TMR0_Initialize();
  4415  00EB5C  EC04  F076         	call	_TMR0_Initialize	;wreg free
  4416  00EB60                     
  4417                           ;mcc_generated_files/mcc.c: 58:     EUSART1_Initialize();
  4418  00EB60  EC8E  F076         	call	_EUSART1_Initialize	;wreg free
  4419  00EB64  0012               	return		;funcret
  4420  00EB66                     __end_of_SYSTEM_Initialize:
  4421                           	callstack 0
  4422                           
  4423 ;; *************** function _TMR2_Initialize *****************
  4424 ;; Defined at:
  4425 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;		None
  4428 ;; Auto vars:     Size  Location     Type
  4429 ;;		None
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      void 
  4432 ;; Registers used:
  4433 ;;		wreg, status,2
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;Total ram usage:        0 bytes
  4444 ;; Hardware stack levels used:    1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_SYSTEM_Initialize
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text19
  4453  00EAFE                     __ptext19:
  4454                           	callstack 0
  4455  00EAFE                     _TMR2_Initialize:
  4456                           	callstack 29
  4457  00EAFE                     
  4458                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  4459  00EAFE  0E3F               	movlw	63
  4460  00EB00  6EBB               	movwf	187,c	;volatile
  4461                           
  4462                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  4463  00EB02  0E00               	movlw	0
  4464  00EB04  6EBC               	movwf	188,c	;volatile
  4465  00EB06                     
  4466                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  4467  00EB06  929E               	bcf	158,1,c	;volatile
  4468                           
  4469                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x1C;
  4470  00EB08  0E1C               	movlw	28
  4471  00EB0A  6EBA               	movwf	186,c	;volatile
  4472  00EB0C  0012               	return		;funcret
  4473  00EB0E                     __end_of_TMR2_Initialize:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _TMR0_Initialize *****************
  4477 ;; Defined at:
  4478 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;Total ram usage:        2 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_SYSTEM_Initialize
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text20
  4506  00EC08                     __ptext20:
  4507                           	callstack 0
  4508  00EC08                     _TMR0_Initialize:
  4509                           	callstack 29
  4510  00EC08                     
  4511                           ;mcc_generated_files/tmr0.c: 71:     T0CONbits.T08BIT = 0;
  4512  00EC08  9CD5               	bcf	213,6,c	;volatile
  4513                           
  4514                           ;mcc_generated_files/tmr0.c: 74:     TMR0H = 0xFF;
  4515  00EC0A  68D7               	setf	215,c	;volatile
  4516  00EC0C                     
  4517                           ;mcc_generated_files/tmr0.c: 77:     TMR0L = 0xC1;
  4518  00EC0C  0EC1               	movlw	193
  4519  00EC0E  6ED6               	movwf	214,c	;volatile
  4520  00EC10                     
  4521                           ;mcc_generated_files/tmr0.c: 81:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  4522  00EC10  50D6               	movf	214,w,c	;volatile
  4523  00EC12  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
  4524  00EC16  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  4525  00EC18  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  4526  00EC1C  6A01               	clrf	??_TMR0_Initialize^0,c
  4527  00EC1E  1001               	iorwf	??_TMR0_Initialize^0,w,c
  4528  00EC20  0100               	movlb	0	; () banked
  4529  00EC22  6F68               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  4530  00EC24  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  4531  00EC26  6F69               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  4532  00EC28                     
  4533                           ; BSR set to: 0
  4534                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IF = 0;
  4535  00EC28  94F2               	bcf	242,2,c	;volatile
  4536  00EC2A                     
  4537                           ; BSR set to: 0
  4538                           ;mcc_generated_files/tmr0.c: 87:     T0CON = 0x97;
  4539  00EC2A  0E97               	movlw	151
  4540  00EC2C  6ED5               	movwf	213,c	;volatile
  4541  00EC2E                     
  4542                           ; BSR set to: 0
  4543  00EC2E  0012               	return		;funcret
  4544  00EC30                     __end_of_TMR0_Initialize:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function _PIN_MANAGER_Initialize *****************
  4548 ;; Defined at:
  4549 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;		None
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;Total ram usage:        0 bytes
  4568 ;; Hardware stack levels used:    1
  4569 ;; This function calls:
  4570 ;;		Nothing
  4571 ;; This function is called by:
  4572 ;;		_SYSTEM_Initialize
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text21
  4577  00EC58                     __ptext21:
  4578                           	callstack 0
  4579  00EC58                     _PIN_MANAGER_Initialize:
  4580                           	callstack 29
  4581  00EC58                     
  4582                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4583  00EC58  0E00               	movlw	0
  4584  00EC5A  6E89               	movwf	137,c	;volatile
  4585                           
  4586                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4587  00EC5C  0E00               	movlw	0
  4588  00EC5E  6E8A               	movwf	138,c	;volatile
  4589                           
  4590                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4591  00EC60  0E00               	movlw	0
  4592  00EC62  6E8B               	movwf	139,c	;volatile
  4593  00EC64                     
  4594                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  4595  00EC64  6892               	setf	146,c	;volatile
  4596  00EC66                     
  4597                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xFF;
  4598  00EC66  6893               	setf	147,c	;volatile
  4599                           
  4600                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  4601  00EC68  0EBB               	movlw	187
  4602  00EC6A  6E94               	movwf	148,c	;volatile
  4603                           
  4604                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  4605  00EC6C  0E3C               	movlw	60
  4606  00EC6E  010F               	movlb	15	; () banked
  4607  00EC70  6F3A               	movwf	58,b	;volatile
  4608                           
  4609                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x3F;
  4610  00EC72  0E3F               	movlw	63
  4611  00EC74  6F39               	movwf	57,b	;volatile
  4612                           
  4613                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  4614  00EC76  0E2F               	movlw	47
  4615  00EC78  6F38               	movwf	56,b	;volatile
  4616                           
  4617                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4618  00EC7A  0E00               	movlw	0
  4619  00EC7C  6E61               	movwf	97,c	;volatile
  4620  00EC7E                     
  4621                           ; BSR set to: 15
  4622                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  4623  00EC7E  8EF1               	bsf	241,7,c	;volatile
  4624  00EC80                     
  4625                           ; BSR set to: 15
  4626  00EC80  0012               	return		;funcret
  4627  00EC82                     __end_of_PIN_MANAGER_Initialize:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _OSCILLATOR_Initialize *****************
  4631 ;; Defined at:
  4632 ;;		line 61 in file "mcc_generated_files/mcc.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, status,2
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;Total ram usage:        0 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; This function calls:
  4653 ;;		Nothing
  4654 ;; This function is called by:
  4655 ;;		_SYSTEM_Initialize
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text22
  4660  00EB66                     __ptext22:
  4661                           	callstack 0
  4662  00EB66                     _OSCILLATOR_Initialize:
  4663                           	callstack 29
  4664  00EB66                     
  4665                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x70;
  4666  00EB66  0E70               	movlw	112
  4667  00EB68  6ED3               	movwf	211,c	;volatile
  4668                           
  4669                           ;mcc_generated_files/mcc.c: 66:     OSCCON2 = 0x04;
  4670  00EB6A  0E04               	movlw	4
  4671  00EB6C  6ED2               	movwf	210,c	;volatile
  4672                           
  4673                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x40;
  4674  00EB6E  0E40               	movlw	64
  4675  00EB70  6E9B               	movwf	155,c	;volatile
  4676  00EB72                     l235:
  4677                           
  4678                           ;mcc_generated_files/mcc.c: 70:     while(PLLRDY == 0)
  4679  00EB72  AED2               	btfss	4050,7,c	;volatile
  4680  00EB74  EFBE  F075         	goto	u1231
  4681  00EB78  EFC0  F075         	goto	u1230
  4682  00EB7C                     u1231:
  4683  00EB7C  EFB9  F075         	goto	l235
  4684  00EB80                     u1230:
  4685  00EB80  0012               	return		;funcret
  4686  00EB82                     __end_of_OSCILLATOR_Initialize:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _EUSART1_Initialize *****************
  4690 ;; Defined at:
  4691 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    1
  4712 ;; This function calls:
  4713 ;;		_EUSART1_SetErrorHandler
  4714 ;;		_EUSART1_SetFramingErrorHandler
  4715 ;;		_EUSART1_SetOverrunErrorHandler
  4716 ;; This function is called by:
  4717 ;;		_SYSTEM_Initialize
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text23
  4722  00ED1C                     __ptext23:
  4723                           	callstack 0
  4724  00ED1C                     _EUSART1_Initialize:
  4725                           	callstack 28
  4726  00ED1C                     
  4727                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  4728  00ED1C  0E08               	movlw	8
  4729  00ED1E  6EB8               	movwf	184,c	;volatile
  4730                           
  4731                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  4732  00ED20  0E90               	movlw	144
  4733  00ED22  6EAB               	movwf	171,c	;volatile
  4734                           
  4735                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  4736  00ED24  0E24               	movlw	36
  4737  00ED26  6EAC               	movwf	172,c	;volatile
  4738                           
  4739                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  4740  00ED28  0E82               	movlw	130
  4741  00ED2A  6EAF               	movwf	175,c	;volatile
  4742                           
  4743                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  4744  00ED2C  0E06               	movlw	6
  4745  00ED2E  6EB0               	movwf	176,c	;volatile
  4746  00ED30                     
  4747                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  4748  00ED30  0E00               	movlw	0
  4749  00ED32  6E01               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  4750  00ED34  0E00               	movlw	0
  4751  00ED36  6E02               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  4752  00ED38  EC6B  F075         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  4753  00ED3C                     
  4754                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  4755  00ED3C  0E00               	movlw	0
  4756  00ED3E  6E01               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  4757  00ED40  0E00               	movlw	0
  4758  00ED42  6E02               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  4759  00ED44  EC70  F075         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  4760  00ED48                     
  4761                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  4762  00ED48  0E00               	movlw	0
  4763  00ED4A  6E01               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  4764  00ED4C  0E00               	movlw	0
  4765  00ED4E  6E02               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  4766  00ED50  EC66  F075         	call	_EUSART1_SetErrorHandler	;wreg free
  4767  00ED54                     
  4768                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  4769  00ED54  0E00               	movlw	0
  4770  00ED56  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  4771  00ED58  0012               	return		;funcret
  4772  00ED5A                     __end_of_EUSART1_Initialize:
  4773                           	callstack 0
  4774                           
  4775 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  4776 ;; Defined at:
  4777 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4780 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;Total ram usage:        2 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_EUSART1_Initialize
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text24
  4806  00EAE0                     __ptext24:
  4807                           	callstack 0
  4808  00EAE0                     _EUSART1_SetOverrunErrorHandler:
  4809                           	callstack 28
  4810  00EAE0                     
  4811                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  4812  00EAE0  C001  F06C         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  4813  00EAE4  C002  F06D         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  4814  00EAE8  0012               	return		;funcret
  4815  00EAEA                     __end_of_EUSART1_SetOverrunErrorHandler:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  4819 ;; Defined at:
  4820 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4823 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;		None
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      void 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2, status,0
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:        2 bytes
  4840 ;; Hardware stack levels used:    1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_EUSART1_Initialize
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text25
  4849  00EAD6                     __ptext25:
  4850                           	callstack 0
  4851  00EAD6                     _EUSART1_SetFramingErrorHandler:
  4852                           	callstack 28
  4853  00EAD6                     
  4854                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  4855  00EAD6  C001  F06E         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  4856  00EADA  C002  F06F         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  4857  00EADE  0012               	return		;funcret
  4858  00EAE0                     __end_of_EUSART1_SetFramingErrorHandler:
  4859                           	callstack 0
  4860                           
  4861 ;; *************** function _EUSART1_SetErrorHandler *****************
  4862 ;; Defined at:
  4863 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  4866 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;Total ram usage:        2 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; This function calls:
  4885 ;;		Nothing
  4886 ;; This function is called by:
  4887 ;;		_EUSART1_Initialize
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text26
  4892  00EACC                     __ptext26:
  4893                           	callstack 0
  4894  00EACC                     _EUSART1_SetErrorHandler:
  4895                           	callstack 28
  4896  00EACC                     
  4897                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  4898  00EACC  C001  F06A         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  4899  00EAD0  C002  F06B         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  4900  00EAD4  0012               	return		;funcret
  4901  00EAD6                     __end_of_EUSART1_SetErrorHandler:
  4902                           	callstack 0
  4903                           
  4904 ;; *************** function _EPWM1_Initialize *****************
  4905 ;; Defined at:
  4906 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  1    wreg      void 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;Total ram usage:        0 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_SYSTEM_Initialize
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text27
  4934  00EBA0                     __ptext27:
  4935                           	callstack 0
  4936  00EBA0                     _EPWM1_Initialize:
  4937                           	callstack 29
  4938  00EBA0                     
  4939                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  4940  00EBA0  0E3C               	movlw	60
  4941  00EBA2  6EBD               	movwf	189,c	;volatile
  4942                           
  4943                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  4944  00EBA4  0E00               	movlw	0
  4945  00EBA6  6EB6               	movwf	182,c	;volatile
  4946                           
  4947                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  4948  00EBA8  0E80               	movlw	128
  4949  00EBAA  6EB7               	movwf	183,c	;volatile
  4950                           
  4951                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  4952  00EBAC  0E01               	movlw	1
  4953  00EBAE  6EB9               	movwf	185,c	;volatile
  4954                           
  4955                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  4956  00EBB0  0E00               	movlw	0
  4957  00EBB2  6EBF               	movwf	191,c	;volatile
  4958                           
  4959                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  4960  00EBB4  0E1F               	movlw	31
  4961  00EBB6  6EBE               	movwf	190,c	;volatile
  4962                           
  4963                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  4964  00EBB8  0EFC               	movlw	-4
  4965  00EBBA  010F               	movlb	15	; () banked
  4966  00EBBC  1749               	andwf	73,f,b	;volatile
  4967  00EBBE                     
  4968                           ; BSR set to: 15
  4969  00EBBE  0012               	return		;funcret
  4970  00EBC0                     __end_of_EPWM1_Initialize:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _EUSART1_is_rx_ready *****************
  4974 ;; Defined at:
  4975 ;;		line 99 in file "mcc_generated_files/eusart1.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;		None
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      _Bool 
  4982 ;; Registers used:
  4983 ;;		wreg
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;Total ram usage:        0 bytes
  4994 ;; Hardware stack levels used:    1
  4995 ;; This function calls:
  4996 ;;		Nothing
  4997 ;; This function is called by:
  4998 ;;		_main
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           	psect	text28
  5003  00EB0E                     __ptext28:
  5004                           	callstack 0
  5005  00EB0E                     _EUSART1_is_rx_ready:
  5006                           	callstack 30
  5007  00EB0E                     
  5008                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
  5009  00EB0E  BA9E               	btfsc	158,5,c	;volatile
  5010  00EB10  EF8C  F075         	goto	u1251
  5011  00EB14  EF8F  F075         	goto	u1250
  5012  00EB18                     u1251:
  5013  00EB18  0E01               	movlw	1
  5014  00EB1A  EF90  F075         	goto	u1256
  5015  00EB1E                     u1250:
  5016  00EB1E  0E00               	movlw	0
  5017  00EB20                     u1256:
  5018  00EB20  0012               	return		;funcret
  5019  00EB22                     __end_of_EUSART1_is_rx_ready:
  5020                           	callstack 0
  5021                           
  5022 ;; *************** function _EUSART1_Read *****************
  5023 ;; Defined at:
  5024 ;;		line 113 in file "mcc_generated_files/eusart1.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;		None
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      unsigned char 
  5031 ;; Registers used:
  5032 ;;		wreg, status,2
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:        0 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_main
  5048 ;;		_getch
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text29
  5053  00EBE0                     __ptext29:
  5054                           	callstack 0
  5055  00EBE0                     _EUSART1_Read:
  5056                           	callstack 30
  5057  00EBE0                     l80:
  5058                           
  5059                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
  5060  00EBE0  AA9E               	btfss	158,5,c	;volatile
  5061  00EBE2  EFF5  F075         	goto	u1261
  5062  00EBE6  EFF7  F075         	goto	u1260
  5063  00EBEA                     u1261:
  5064  00EBEA  EFF0  F075         	goto	l80
  5065  00EBEE                     u1260:
  5066  00EBEE                     
  5067                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
  5068  00EBEE  0E00               	movlw	0
  5069  00EBF0  6E5F               	movwf	_eusart1RxLastError^0,c	;volatile
  5070  00EBF2                     
  5071                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
  5072  00EBF2  A2AB               	btfss	171,1,c	;volatile
  5073  00EBF4  EFFE  F075         	goto	u1271
  5074  00EBF8  EF00  F076         	goto	u1270
  5075  00EBFC                     u1271:
  5076  00EBFC  EF02  F076         	goto	l2017
  5077  00EC00                     u1270:
  5078  00EC00                     
  5079                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
  5080  00EC00  98AB               	bcf	171,4,c	;volatile
  5081                           
  5082                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
  5083  00EC02  88AB               	bsf	171,4,c	;volatile
  5084  00EC04                     l2017:
  5085                           
  5086                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
  5087  00EC04  50AE               	movf	174,w,c	;volatile
  5088  00EC06  0012               	return		;funcret
  5089  00EC08                     __end_of_EUSART1_Read:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _EPWM1_LoadDutyValue *****************
  5093 ;; Defined at:
  5094 ;;		line 90 in file "mcc_generated_files/epwm1.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  dutyValue       2    0[COMRAM] unsigned short 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5108 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;Total ram usage:        4 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text30
  5122  00EC82                     __ptext30:
  5123                           	callstack 0
  5124  00EC82                     _EPWM1_LoadDutyValue:
  5125                           	callstack 30
  5126  00EC82                     
  5127                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
  5128  00EC82  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5129  00EC86  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
  5130  00EC8A  90D8               	bcf	status,0,c
  5131  00EC8C  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5132  00EC8E  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5133  00EC90  90D8               	bcf	status,0,c
  5134  00EC92  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
  5135  00EC94  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
  5136  00EC96  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
  5137  00EC98  6EBE               	movwf	190,c	;volatile
  5138                           
  5139                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
  5140  00EC9A  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
  5141  00EC9E  0E03               	movlw	3
  5142  00ECA0  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5143  00ECA2  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
  5144  00ECA4  0EF0               	movlw	240
  5145  00ECA6  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
  5146  00ECA8  50BD               	movf	189,w,c	;volatile
  5147  00ECAA  0BCF               	andlw	207
  5148  00ECAC  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
  5149  00ECAE  6EBD               	movwf	189,c	;volatile
  5150  00ECB0  0012               	return		;funcret
  5151  00ECB2                     __end_of_EPWM1_LoadDutyValue:
  5152                           	callstack 0
  5153                           
  5154                           	psect	rparam
  5155  0000                     
  5156                           	psect	idloc
  5157                           
  5158                           ;Config register IDLOC0 @ 0x200000
  5159                           ;	unspecified, using default values
  5160  200000                     	org	2097152
  5161  200000  FF                 	db	255
  5162                           
  5163                           ;Config register IDLOC1 @ 0x200001
  5164                           ;	unspecified, using default values
  5165  200001                     	org	2097153
  5166  200001  FF                 	db	255
  5167                           
  5168                           ;Config register IDLOC2 @ 0x200002
  5169                           ;	unspecified, using default values
  5170  200002                     	org	2097154
  5171  200002  FF                 	db	255
  5172                           
  5173                           ;Config register IDLOC3 @ 0x200003
  5174                           ;	unspecified, using default values
  5175  200003                     	org	2097155
  5176  200003  FF                 	db	255
  5177                           
  5178                           ;Config register IDLOC4 @ 0x200004
  5179                           ;	unspecified, using default values
  5180  200004                     	org	2097156
  5181  200004  FF                 	db	255
  5182                           
  5183                           ;Config register IDLOC5 @ 0x200005
  5184                           ;	unspecified, using default values
  5185  200005                     	org	2097157
  5186  200005  FF                 	db	255
  5187                           
  5188                           ;Config register IDLOC6 @ 0x200006
  5189                           ;	unspecified, using default values
  5190  200006                     	org	2097158
  5191  200006  FF                 	db	255
  5192                           
  5193                           ;Config register IDLOC7 @ 0x200007
  5194                           ;	unspecified, using default values
  5195  200007                     	org	2097159
  5196  200007  FF                 	db	255
  5197                           
  5198                           	psect	config
  5199                           
  5200                           ; Padding undefined space
  5201  300000                     	org	3145728
  5202  300000  FF                 	db	255
  5203                           
  5204                           ;Config register CONFIG1H @ 0x300001
  5205                           ;	Oscillator Selection bits
  5206                           ;	FOSC = INTIO67, Internal oscillator block
  5207                           ;	4X PLL Enable
  5208                           ;	PLLCFG = OFF, Oscillator used directly
  5209                           ;	Primary clock enable bit
  5210                           ;	PRICLKEN = ON, Primary clock enabled
  5211                           ;	Fail-Safe Clock Monitor Enable bit
  5212                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5213                           ;	Internal/External Oscillator Switchover bit
  5214                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5215  300001                     	org	3145729
  5216  300001  28                 	db	40
  5217                           
  5218                           ;Config register CONFIG2L @ 0x300002
  5219                           ;	Power-up Timer Enable bit
  5220                           ;	PWRTEN = OFF, Power up timer disabled
  5221                           ;	Brown-out Reset Enable bits
  5222                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5223                           ;	Brown Out Reset Voltage bits
  5224                           ;	BORV = 190, VBOR set to 1.90 V nominal
  5225  300002                     	org	3145730
  5226  300002  1F                 	db	31
  5227                           
  5228                           ;Config register CONFIG2H @ 0x300003
  5229                           ;	Watchdog Timer Enable bits
  5230                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  5231                           ;	Watchdog Timer Postscale Select bits
  5232                           ;	WDTPS = 32768, 1:32768
  5233  300003                     	org	3145731
  5234  300003  3C                 	db	60
  5235                           
  5236                           ; Padding undefined space
  5237  300004                     	org	3145732
  5238  300004  FF                 	db	255
  5239                           
  5240                           ;Config register CONFIG3H @ 0x300005
  5241                           ;	CCP2 MUX bit
  5242                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
  5243                           ;	PORTB A/D Enable bit
  5244                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5245                           ;	P3A/CCP3 Mux bit
  5246                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
  5247                           ;	HFINTOSC Fast Start-up
  5248                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
  5249                           ;	Timer3 Clock input mux bit
  5250                           ;	T3CMX = PORTC0, T3CKI is on RC0
  5251                           ;	ECCP2 B output mux bit
  5252                           ;	P2BMX = PORTB5, P2B is on RB5
  5253                           ;	MCLR Pin Enable bit
  5254                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
  5255  300005                     	org	3145733
  5256  300005  BF                 	db	191
  5257                           
  5258                           ;Config register CONFIG4L @ 0x300006
  5259                           ;	Stack Full/Underflow Reset Enable bit
  5260                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5261                           ;	Single-Supply ICSP Enable bit
  5262                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5263                           ;	Extended Instruction Set Enable bit
  5264                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5265                           ;	Background Debug
  5266                           ;	DEBUG = OFF, Disabled
  5267  300006                     	org	3145734
  5268  300006  85                 	db	133
  5269                           
  5270                           ; Padding undefined space
  5271  300007                     	org	3145735
  5272  300007  FF                 	db	255
  5273                           
  5274                           ;Config register CONFIG5L @ 0x300008
  5275                           ;	Code Protection Block 0
  5276                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5277                           ;	Code Protection Block 1
  5278                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5279                           ;	Code Protection Block 2
  5280                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5281                           ;	Code Protection Block 3
  5282                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5283  300008                     	org	3145736
  5284  300008  0F                 	db	15
  5285                           
  5286                           ;Config register CONFIG5H @ 0x300009
  5287                           ;	Boot Block Code Protection bit
  5288                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5289                           ;	Data EEPROM Code Protection bit
  5290                           ;	CPD = OFF, Data EEPROM not code-protected
  5291  300009                     	org	3145737
  5292  300009  C0                 	db	192
  5293                           
  5294                           ;Config register CONFIG6L @ 0x30000A
  5295                           ;	Write Protection Block 0
  5296                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5297                           ;	Write Protection Block 1
  5298                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5299                           ;	Write Protection Block 2
  5300                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5301                           ;	Write Protection Block 3
  5302                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5303  30000A                     	org	3145738
  5304  30000A  0F                 	db	15
  5305                           
  5306                           ;Config register CONFIG6H @ 0x30000B
  5307                           ;	Configuration Register Write Protection bit
  5308                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5309                           ;	Boot Block Write Protection bit
  5310                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5311                           ;	Data EEPROM Write Protection bit
  5312                           ;	WRTD = OFF, Data EEPROM not write-protected
  5313  30000B                     	org	3145739
  5314  30000B  E0                 	db	224
  5315                           
  5316                           ;Config register CONFIG7L @ 0x30000C
  5317                           ;	Table Read Protection Block 0
  5318                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5319                           ;	Table Read Protection Block 1
  5320                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5321                           ;	Table Read Protection Block 2
  5322                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5323                           ;	Table Read Protection Block 3
  5324                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5325  30000C                     	org	3145740
  5326  30000C  0F                 	db	15
  5327                           
  5328                           ;Config register CONFIG7H @ 0x30000D
  5329                           ;	Boot Block Table Read Protection bit
  5330                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5331  30000D                     	org	3145741
  5332  30000D  40                 	db	64
  5333                           tosu	equ	0xFFF
  5334                           tosh	equ	0xFFE
  5335                           tosl	equ	0xFFD
  5336                           stkptr	equ	0xFFC
  5337                           pclatu	equ	0xFFB
  5338                           pclath	equ	0xFFA
  5339                           pcl	equ	0xFF9
  5340                           tblptru	equ	0xFF8
  5341                           tblptrh	equ	0xFF7
  5342                           tblptrl	equ	0xFF6
  5343                           tablat	equ	0xFF5
  5344                           prodh	equ	0xFF4
  5345                           prodl	equ	0xFF3
  5346                           indf0	equ	0xFEF
  5347                           postinc0	equ	0xFEE
  5348                           postdec0	equ	0xFED
  5349                           preinc0	equ	0xFEC
  5350                           plusw0	equ	0xFEB
  5351                           fsr0h	equ	0xFEA
  5352                           fsr0l	equ	0xFE9
  5353                           wreg	equ	0xFE8
  5354                           indf1	equ	0xFE7
  5355                           postinc1	equ	0xFE6
  5356                           postdec1	equ	0xFE5
  5357                           preinc1	equ	0xFE4
  5358                           plusw1	equ	0xFE3
  5359                           fsr1h	equ	0xFE2
  5360                           fsr1l	equ	0xFE1
  5361                           bsr	equ	0xFE0
  5362                           indf2	equ	0xFDF
  5363                           postinc2	equ	0xFDE
  5364                           postdec2	equ	0xFDD
  5365                           preinc2	equ	0xFDC
  5366                           plusw2	equ	0xFDB
  5367                           fsr2h	equ	0xFDA
  5368                           fsr2l	equ	0xFD9
  5369                           status	equ	0xFD8

Data Sizes:
    Strings     808
    Constant    0
    Data        32
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     43     123
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1134_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_38(CODE[17]), STR_37(CODE[11]), STR_36(CODE[25]), STR_35(CODE[44]), 
		 -> STR_34(CODE[40]), STR_33(CODE[50]), STR_32(CODE[11]), STR_31(CODE[29]), 
		 -> STR_30(CODE[51]), STR_29(CODE[19]), STR_28(CODE[44]), STR_27(CODE[40]), 
		 -> STR_26(CODE[50]), STR_25(CODE[25]), STR_24(CODE[63]), STR_23(CODE[40]), 
		 -> STR_22(CODE[61]), STR_21(CODE[44]), STR_20(CODE[40]), STR_19(CODE[50]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[8]), STR_15(CODE[52]), 
		 -> STR_14(CODE[42]), STR_13(CODE[51]), STR_12(CODE[53]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[52]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[28]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 63
		 -> STR_38(CODE[17]), STR_37(CODE[11]), STR_36(CODE[25]), STR_35(CODE[44]), 
		 -> STR_34(CODE[40]), STR_33(CODE[50]), STR_32(CODE[11]), STR_31(CODE[29]), 
		 -> STR_30(CODE[51]), STR_29(CODE[19]), STR_28(CODE[44]), STR_27(CODE[40]), 
		 -> STR_26(CODE[50]), STR_25(CODE[25]), STR_24(CODE[63]), STR_23(CODE[40]), 
		 -> STR_22(CODE[61]), STR_21(CODE[44]), STR_20(CODE[40]), STR_19(CODE[50]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[8]), STR_15(CODE[52]), 
		 -> STR_14(CODE[42]), STR_13(CODE[51]), STR_12(CODE[53]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[52]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[28]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 63
		 -> STR_38(CODE[17]), STR_37(CODE[11]), STR_36(CODE[25]), STR_35(CODE[44]), 
		 -> STR_34(CODE[40]), STR_33(CODE[50]), STR_32(CODE[11]), STR_31(CODE[29]), 
		 -> STR_30(CODE[51]), STR_29(CODE[19]), STR_28(CODE[44]), STR_27(CODE[40]), 
		 -> STR_26(CODE[50]), STR_25(CODE[25]), STR_24(CODE[63]), STR_23(CODE[40]), 
		 -> STR_22(CODE[61]), STR_21(CODE[44]), STR_20(CODE[40]), STR_19(CODE[50]), 
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[8]), STR_15(CODE[52]), 
		 -> STR_14(CODE[42]), STR_13(CODE[51]), STR_12(CODE[53]), STR_11(CODE[32]), 
		 -> STR_10(CODE[24]), STR_9(CODE[21]), STR_8(CODE[7]), STR_7(CODE[15]), 
		 -> STR_6(CODE[52]), STR_5(CODE[52]), STR_4(CODE[5]), STR_3(CODE[9]), 
		 -> STR_2(CODE[28]), STR_1(CODE[11]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _TMR0_WriteTimer->_TMR0_ReadTimer
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    _main->_printf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   13568
                                              4 BANK0     39    39      0
                _EPWM1_LoadDutyValue
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                     _TMR0_ReadTimer
                    _TMR0_WriteTimer
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   12088
                                             90 COMRAM     4     0      4
                                              0 BANK0      4     4      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9144
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    8787
                                             65 COMRAM    17    11      6
                               _ctoa
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    5226
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3577
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1669
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    1623
                                             11 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1268
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART1_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     196
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (1) _TMR0_ReadTimer                                       8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                   _EPWM1_Initialize
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EPWM1_LoadDutyValue                                  4     2      2     576
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EPWM1_LoadDutyValue
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SYSTEM_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_ReadTimer
   _TMR0_WriteTimer
     _TMR0_ReadTimer (ARG)
   _printf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     2B      7B       5       76.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      12        0.0%
DATA                 0      0      DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 03 15:27:33 2020

                              main@volumeAdjust 00B6                 __end_of_TMR0_HasOverflowOccured EB36  
                                            l20 ECB0                                              l17 EBBE  
                                            l71 EB20                                              l63 ED58  
                                            l80 EBE0                                              l90 EB4A  
                                            l84 EC06                                              l87 EB38  
                                            l96 EAFC                                 _timer0ReloadVal 0068  
                                           l111 EAE8                                             l114 EAD4  
                                           l108 EADE                                             l141 EAF2  
                                           l206 EC80                                             l160 EB0C  
                                           l232 EB64                                             l129 EC2E  
                                           l138 EB9E                                             l235 EB72  
                                           l147 EB34                                             l238 EB80  
                                           l263 F8AC                                             l432 F1D8  
                                           l274 F9C6                                             l419 F360  
                                           l983 EC56                                             _PR2 000FBB  
                                           u800 F1EC                                             u801 F1E8  
                                           u730 EB46                                             u810 F21E  
                                           u731 EB42                                             u811 F21A  
                                           u740 EE54                                             u900 F122  
                                           u741 EE50                                             u821 F248  
                                           u901 F11E                                             u750 EE66  
                                           u830 F26C                                             u910 F150  
                                           u751 EE62                                             u831 F268  
                                           u911 F14C                                             u760 EE8E  
                                           u840 F296                                             u920 F198  
                                           u761 EE8A                                             u841 F292  
                                           u921 F194                                             u770 EEC4  
                                           u850 F2D6                                             u930 EEE8  
                                           u771 EEC0                                             u851 F2D2  
                                           u931 EEE4                                             u860 F320  
                                           u780 EDDC                                             u940 EF0A  
                                           u861 F31C                                             u781 EDD8  
                                           u941 EF06                                             u870 F088  
                                           u790 ED0E                                             u950 EF60  
                                           u871 F084                                             u791 ED0A  
                                           u951 EF5C                                             u880 F0BA  
                                           u960 EF70                                             u881 F0B6  
                                           u961 EF6C                                             u890 F0F8  
                                           u970 ED74                                             u891 F0F4  
                                           u971 ED70                                             u980 EFB2  
                                           u981 EFAE                                             u990 EFD8  
                                           u991 EFD4                                             _abs ED5A  
                                           _pad EED8                                 _TMR2_Initialize EAFE  
                                           wreg 000FE8                                      _TXSTA1bits 000FAC  
                                          l1010 EF1E                                            l1013 EF60  
                                          l1031 F074                                            l1015 EF9C  
                                          l1105 ED1A                                            l2001 EE1A  
                                          l1026 F004                                            l2003 EC82  
                                          l2011 EBEE                                            ?_abs 0013  
                                          l2013 EBF2                                            l2005 EB0E  
                                          l2021 EB82                                            l1029 F046  
                                          l1037 F634                                            l2101 F9E0  
                                          l1062 F592                                            l2015 EC00  
                                          l2023 EB8A                                            l2031 EAEE  
                                          l1039 F63C                                            l1071 EE38  
                                          l2111 FA30                                            l2103 F9F4  
                                          l1072 EE40                                            l2017 EC04  
                                          l2009 EBE0                                            l2041 EB60  
                                          l2033 EB22                                            l2025 EB96  
                                          l1057 F874                                            l2121 FA6C  
                                          l2113 FA3C                                            l2105 F9FA  
                                          l1091 EED6                                            l2043 EC30  
                                          l2131 FADC                                            l2123 FA78  
                                          l2115 FA48                                            l2107 FA00  
                                          l1076 ED90                                            l2037 EB4C  
                                          l2029 EAEA                                            l2045 EC3A  
                                          l2141 FB50                                            l2133 FAE6  
                                          l2125 FA84                                            l2117 FA5C  
                                          l2109 FA24                                            l2061 F88E  
                                          l2039 EB5C                                            l1079 ED98  
                                          l2151 FBC8                                            l2143 FB64  
                                          l2135 FB02                                            l2127 FA98  
                                          l2119 FA60                                            l2071 F8EA  
                                          l2063 F892                                            l2161 FC3A  
                                          l2153 FBCA                                            l2145 FB70  
                                          l2137 FB26                                            l2129 FAA0  
                                          l2073 F8FE                                            l2065 F89E  
                                          l2057 F876                                            l1099 EDDC  
                                          l2163 FC46                                            l2155 FBDE  
                                          l2147 FB80                                            l2139 FB3A  
                                          l2091 F9CC                                            l2075 F90A  
                                          l2171 FC70                                            l2067 F8AA  
                                          l2059 F888                                            l1701 ECF6  
                                          l2165 FC4A                                            l2157 FC10  
                                          l2149 FBB4                                            l2085 F9A6  
                                          l2077 F992                                            l2069 F8BA  
                                          l1711 F1EC                                            l1703 ED0E  
                                          l2167 FC5A                                            l2159 FC26  
                                          l2087 F9B2                                            l2079 F9A2  
                                          l1721 F242                                            l1713 F20C  
                                          l1801 EF42                                            l2097 F9D0  
                                          l2089 F9B6                                            l1731 F296  
                                          l1723 F24E                                            l1715 F210  
                                          l1707 F1DA                                            l1811 ED74  
                                          l1803 EF70                                            l2099 F9DC  
                                          l1821 EFD8                                            l1813 EF9E  
                                          l1741 F30A                                            l1733 F2A8  
                                          l1725 F26C                                            l1717 F21E  
                                          l1709 F1DE                                            l1805 EF84  
                                          l2197 FC84                                            l1903 EAD6  
                                          l1671 EB46                                            l1831 F024  
                                          l1823 EFEA                                            l1815 EFB2  
                                          l1735 F2D6                                            l1727 F274  
                                          l1743 F310                                            l1719 F23E  
                                          l1751 F076                                            l1911 F388  
                                          l1905 EAE0                                            l1673 EAF6  
                                          l1681 EE70                                            l1833 F028  
                                          l1817 EFBE                                            l1745 F320  
                                          l1737 F2F6                                            l1729 F288  
                                          l1761 F0BA                                            l1753 F07A  
                                          l1809 ED5A                                            l1841 F594  
                                          l1921 F404                                            l1913 F396  
                                          l1907 EACC                                            l1683 EE8E  
                                          l1675 EE42                                            l1835 F056  
                                          l1827 EFFC                                            l1819 EFCA  
                                          l1747 F340                                            l1739 F2F8  
                                          l1771 F122                                            l1763 F0DA  
                                          l1755 F088                                            l1691 EDA6  
                                          l1851 F60E                                            l1843 F5B4  
                                          l1931 F4B4                                            l1915 F3A8  
                                          l1669 EB38                                            l1685 EEC4  
                                          l1677 EE54                                            l1837 F068  
                                          l1829 F010                                            l1781 F198  
                                          l1773 F150                                            l1765 F0F8  
                                          l1757 F0A8                                            l1693 EDB8  
                                          l1861 F66A                                            l1853 F628  
                                          l1845 F5DC                                            l1941 F534  
                                          l1925 F420                                            l1917 F3AC  
                                          l1909 F362                                            l1679 EE66  
                                          l1783 F1B8                                            l1775 F170  
                                          l1767 F100                                            l1759 F0AC  
                                          l1695 EDBC                                            l1791 EEFC  
                                          l1871 F708                                            l1863 F672  
                                          l1855 F644                                            l1847 F5FC  
                                          l1935 F4EC                                            l1927 F446  
                                          l1919 F3D2                                            l1951 F55A  
                                          l1961 ED1C                                            l1777 F182  
                                          l1769 F114                                            l1689 ED9A  
                                          l1697 ECE6                                            l1793 EF0A  
                                          l1881 F7C4                                            l1873 F70E  
                                          l1865 F67A                                            l1857 F656  
                                          l1849 F60C                                            l1953 F580  
                                          l1937 F512                                            l1945 F540  
                                          l1929 F46C                                            l1963 ED30  
                                          l1971 EC08                                            l1779 F188  
                                          l1699 ECF2                                            l1795 EF16  
                                          l1787 EED8                                            l1891 F816  
                                          l1883 F7DE                                            l1867 F680  
                                          l1875 F772                                            l1859 F664  
                                          l1947 F54E                                            l1939 F520  
                                          l1965 ED3C                                            l1973 EC0C  
                                          l1981 EAFE                                            l1797 EF2A  
                                          l1789 EEE8                                            l1893 F828  
                                          l1877 F78C                                            l1885 F7EE  
                                          l1869 F702                                            ?_pad 0013  
                                          l1959 EBA0                                            l1967 ED48  
                                          l1991 EC7E                                            l1975 EC10  
                                          l1983 EB06                                            l1799 EF3E  
                                          l1895 F834                                            l1887 F800  
                                          l1879 F7AA                                            l1969 ED54  
                                          l1993 EB66                                            l1985 EC58  
                                          l1977 EC28                                            l1897 F83C  
                                          l1889 F810                                            l1987 EC64  
                                          l1979 EC2A                                            l1899 F84C  
                                          l1995 EDDE                                            l1989 EC66  
                                          l1997 EDE6                                            l1999 EDF4  
                                          STR_1 FFCC                                            STR_2 FF37  
                                          STR_3 FFE2                                            STR_4 FFFA  
                                          STR_5 FD88                                            STR_6 FD88  
                                          STR_7 FFBD                                            STR_8 FFF3  
                                          STR_9 FF84                                            u1000 EFF8  
                                          u1001 EFF4                                            u1010 F046  
                                          u1011 F042                                            u1020 F056  
                                          u1100 F78C                                            u1021 F052  
                                          u1101 F788                                            u1110 F7AA  
                                          u1030 F5C4                                            u1111 F7A6  
                                          u1031 F5BE                                            u1120 F7C4  
                                          u1040 F5C6                                            u1200 F446  
                                          u1121 F7C0                                            u1201 F442  
                                          u1130 F7DE                                            u1050 F5DC  
                                          u1210 F46C                                            u1131 F7DA  
                                          u1051 F5D8                                            u1211 F468  
                                          u1140 F7EE                                            u1060 F60C  
                                          u1220 F512                                            u1300 F8BA  
                                          u1141 F7EA                                            u1061 F608  
                                          u1221 F50E                                            u1301 F8B6  
                                          u1230 EB80                                            u1150 F800  
                                          u1070 F628                                            u1310 F8FE  
                                          u1231 EB7C                                            u1151 F7FC  
                                          u1071 F624                                            u1311 F8FA  
                                          u1160 F810                                            u1080 F656  
                                          u1240 EE38                                            u1400 FC3A  
                                          u1320 F9C6                                            u1161 F80C  
                                          u1081 F652                                            u1241 EE34  
                                          u1401 FC36                                            u1321 F9C2  
                                          u1250 EB1E                                            u1170 F828  
                                          u1090 F664                                            u1330 F9F0  
                                          u1251 EB18                                            u1171 F824  
                                          u1091 F660                                            u1331 F9EC  
                                          u1260 EBEE                                            u1180 F388  
                                          u1340 FA5C                                            u1261 EBEA  
                                          u1181 F384                                            u1341 FA58  
                                          _LATA 000F89                                            u1270 EC00  
                                          u1190 F3D2                                            u1350 FA98  
                                          _LATB 000F8A                                            u1271 EBFC  
                                          u1191 F3CE                                            u1351 FA94  
                                          _LATC 000F8B                                            u1256 EB20  
                                          u1280 EB32                                            u1360 FB3A  
                                          u1281 EB2C                                            u1361 FB36  
                                          u1370 FB64                                            u1371 FB60  
                                          u1291 F880                                            u1380 FBDE  
                                          u1381 FBDA                                            u1286 EB34  
                                          u1394 FBFE                                            u1395 FBFA  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write EB36                                            abs@a 0013  
                                          _dbuf 0070                                            _ctoa EF9E  
                                          _main F876                                            _dtoa F594  
                                 ?_EUSART1_Read 0001                                            _prec 0064  
                                          _nout 0060                                            pad@i 001A  
                                          pad@p 0017                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf2 000FDF  
                                          fsr1l 000FE1                                            pad@w 001C  
                                          fsr2l 000FD9                                            start 0000  
                         ??_EPWM1_LoadDutyValue 0003                                    ___param_bank 000000  
                                         ??_abs 0015                                           ??_pad 0019  
                       __end_of_TMR0_Initialize EC30                  __size_of_OSCILLATOR_Initialize 001C  
                 __end_of_OSCILLATOR_Initialize EB82                                 __end_of___aodiv F362  
                                         ?_ctoa 000C                                           ?_main 0001  
                                         ?_dtoa 001E                                 __end_of___aomod F1DA  
                                         STR_10 FF6C                                           STR_11 FEFA  
                                         STR_20 FED2                                           STR_12 FD53  
                                         STR_21 FE54                                           STR_13 FDEF  
                                         STR_14 FE80                                           STR_30 FDBC  
                                         STR_22 FD16                                           STR_15 FD88  
                                         STR_31 FF1A                                           STR_23 FEAA  
                                         STR_16 FFEB                                           STR_32 FFD7  
                                         STR_24 FCD7                                           STR_17 FDED  
                                         STR_33 FE22                                           STR_25 FF53  
                                         STR_18 FDED                                           STR_34 FED2  
                                         STR_26 FE22                                           STR_27 FED2  
                                         STR_35 FE54                                           STR_19 FE22  
                                         STR_36 FF53                                           STR_28 FE54  
                                         STR_37 FFD7                                           STR_29 FF99  
                                         STR_38 FFAC                       TMR0_ReadTimer@readValHigh 0008  
                                         _T0CON 000FD5                                           _T2CON 000FBA  
                               _TMR0_WriteTimer EAEA                                    vfpfcnvrt@fmt 0044  
                                         _TMR0H 000FD7                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                           _flags 0066  
                                         _fputc EE42                                           _fputs ED9A  
                                         pad@fp 0013                                           _width 0062  
                                         ctoa@c 000E                                           _putch EAF4  
                                         ctoa@l 0010                                           ctoa@w 0012  
                                         main@i 00B8                                           dtoa@d 0020  
                                         dtoa@i 0040                                           dtoa@n 0038  
                                         dtoa@p 0032                                           dtoa@s 0036  
                                         dtoa@w 0034                                  ?_EUSART1_Write 0001  
                                         tablat 000FF5                                  ??_EUSART1_Read 0001  
                                         plusw1 000FE3                                           plusw2 000FDB  
                                         status 000FD8              _EUSART1_DefaultFramingErrorHandler 000000  
                               __initialization ECB2                                    __end_of_ctoa F076  
                    __end_of_EUSART1_Initialize ED5A                                    __end_of_main FCD6  
                                  __end_of_dtoa F876                         __end_of_TMR2_Initialize EB0E  
                                        ??_ctoa 000F                                          ??_main 0094  
                                        ??_dtoa 0028                                   __activetblptr 000003  
                                        ?_fputc 0003                                          ?_fputs 000C  
                                        _CCPR1H 000FBF                                          _CCPR1L 000FBE  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                __size_of_TMR0_HasOverflowOccured 0014  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 0059                                       ??___aodiv 0011  
                                     ??___aomod 0011                         __end_of_TMR0_WriteTimer EAF4  
                      ?_EUSART1_SetErrorHandler 0001                                ?_TMR0_Initialize 0001  
                                        clear_0 ECD8                                          _printf EC30  
                                        pad@buf 0015                ??_EUSART1_SetOverrunErrorHandler 0003  
               ?_EUSART1_SetOverrunErrorHandler 0001                                          ctoa@fp 000C  
                                        dtoa@fp 001E                                          _strlen ECE6  
                                        fputc@c 0003                                          fputs@c 0010  
                                        fputs@i 0011                                          fputs@s 000C  
                                  __mediumconst FCD6                                          tblptrh 000FF7  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                              __end_of_vfprintf EE42                                 ??_EUSART1_Write 0001  
                             _SYSTEM_Initialize EB4C                                      __accesstop 0060  
                       __end_of__initialization ECE0                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                               ?_EPWM1_Initialize 0001  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 EBC0  
                           ??_SYSTEM_Initialize 0003                              ??_EPWM1_Initialize 0001  
                                 __end_of_fputc EED8                                   __end_of_fputs EDDE  
                                 __end_of_putch EAFE                         __size_of_TMR0_ReadTimer 001E  
                              ?_TMR2_Initialize 0001                            __end_of_EUSART1_Read EC08  
                                       ??_fputc 0007                       __end_of_SYSTEM_Initialize EB66  
                                       ??_fputs 0010                                         ??_putch 0002  
                                    __pbssBANK0 0060                 __end_of_EUSART1_SetErrorHandler EAD6  
                              ?_TMR0_WriteTimer 0009                                         _CCP1CON 000FBD  
                                       _ECCP1AS 000FB6                                         ?_printf 005B  
                                       ?_strlen 0001          __end_of_EUSART1_SetFramingErrorHandler EAE0  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler EAD6  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0232  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                         _TMR0_HasOverflowOccured EB22  
                   __end_of_EPWM1_LoadDutyValue ECB2                                         __Hparam 0000  
                                       __Lparam 0000                                         ___aodiv F1DA  
                                       ___aomod F076                                       ?_vfprintf 0053  
                           _EUSART1_is_rx_ready EB0E                                         __pcinit ECB2  
                                       __ramtop 1000                                         __ptext0 F876  
                                       __ptext1 EC30                                         __ptext2 EDDE  
                                       __ptext3 F362                                         __ptext4 F594  
                                       __ptext5 EED8                                         __ptext6 ECE6  
                                       __ptext7 ED9A                                         __ptext8 ED5A  
                                       __ptext9 F076                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize EB66                                       _T2CONbits 000FBA  
                                  __size_of_abs 0040                                    __size_of_pad 00C6  
                            _EUSART1_Initialize ED1C                        ??_PIN_MANAGER_Initialize 0001  
                                       main@cmd 00B7                      __size_of_SYSTEM_Initialize 001A  
                                       main@sin 0096                            end_of_initialization ECE0  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                       fputc@fp 0005                     _EUSART1_OverrunErrorHandler 006C  
                                       fputs@fp 000E                               __end_of_vfpfcnvrt F594  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 0059  
                                _TMR0_ReadTimer EB82                            ??_EUSART1_Initialize 0003  
                                       strlen@a 0003                                         strlen@s 0001  
                     ??_TMR0_HasOverflowOccured 0001                __size_of_EUSART1_SetErrorHandler 000A  
                           EUSART1_Write@txData 0001                           ??_EUSART1_is_rx_ready 0001  
                                  _EUSART1_Read EBE0                          __end_of_TMR0_ReadTimer EBA0  
                                   vfpfcnvrt@ap 0046                                     vfpfcnvrt@fp 0042  
                                   vfpfcnvrt@ll 004A                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_printf EC58                                  __end_of_strlen ED1C  
                           start_initialization ECB2                       __size_of_EPWM1_Initialize 0020  
                      __size_of_TMR0_Initialize 0028                 __size_of_PIN_MANAGER_Initialize 002A  
                                   __end_of_abs ED9A                                     __end_of_pad EF9E  
                                   putch@txData 0002                    EPWM1_LoadDutyValue@dutyValue 0001  
                         __end_of_EUSART1_Write EB4C                                     vfprintf@fmt 0055  
                               ?_TMR0_ReadTimer 0001                                     __pdataBANK0 00BB  
                                      ??_printf 005F                                        ??_strlen 0003  
                                   __pbssCOMRAM 005F                                   __pcstackBANK0 0090  
                              ___aodiv@dividend 0001                        __size_of_TMR2_Initialize 0010  
              ??_EUSART1_SetFramingErrorHandler 0003                 ?_EUSART1_SetFramingErrorHandler 0001  
                        _PIN_MANAGER_Initialize EC58                                       _dtoa$1203 0030  
                                 __pmediumconst FCD6                                        ?___aodiv 0001  
                                      ?___aomod 0001                                ___aodiv@quotient 0013  
                             __size_of_vfprintf 0064                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 006A                         _EUSART1_SetErrorHandler EACC  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                __size_of_putch 000A                               ??_TMR0_Initialize 0001  
       EUSART1_SetErrorHandler@interruptHandler 0001                                        _PIR1bits 000F9E  
                  __size_of_EPWM1_LoadDutyValue 0030                                       main@F6133 00BB  
                                      _PSTR1CON 000FB9                                       _vfpfcnvrt F362  
                      TMR0_ReadTimer@readValLow 0007                                       main@index 00B9  
                              _EPWM1_Initialize EBA0                                      vfpfcnvrt@c 0052  
                                   _INTCON2bits 000FF1                                       copy_data0 ECC6  
                             ??_TMR2_Initialize 0001                                        __Hrparam 0000  
                                    vfprintf@ap 0057                                        __Lrparam 0000  
                                    vfprintf@fp 0053                         ??_OSCILLATOR_Initialize 0001  
                              __size_of___aodiv 0188                                __size_of___aomod 0164  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 0042  
                               ___aodiv@divisor 0009                                 ___aodiv@counter 0011  
                     ??_EUSART1_SetErrorHandler 0003                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready EB22                                        __ptext10 F1DA  
                                      __ptext11 EF9E                                        __ptext20 EC08  
                                      __ptext12 EE42                                        __ptext21 EC58  
                                      __ptext13 EAF4                                        __ptext30 EC82  
                                      __ptext22 EB66                                        __ptext14 EB36  
                                      __ptext23 ED1C                                        __ptext15 EAEA  
                                      __ptext24 EAE0                                        __ptext16 EB82  
                                      __ptext25 EAD6                                        __ptext17 EB22  
                                      __ptext26 EACC                                        __ptext18 EB4C  
                                      __ptext27 EBA0                                        __ptext19 EAFE  
                                      __ptext28 EB0E                                        __ptext29 EBE0  
                       TMR0_WriteTimer@timerVal 0009                               ??_TMR0_WriteTimer 000B  
                                 __size_of_ctoa 00D8                                   __size_of_main 0460  
                                 __size_of_dtoa 02E2                                ??_TMR0_ReadTimer 0003  
EUSART1_SetOverrunErrorHandler@interruptHandler 0001                                        _vfprintf EDDE  
                                     printf@fmt 005B                     _EUSART1_FramingErrorHandler 006E  
                              ___aomod@dividend 0001                        ?_TMR0_HasOverflowOccured 0001  
                                    _INTCONbits 000FF2                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler EAEA         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler EAE0                                      _RCSTA1bits 000FAB  
                                      printf@ap 0092  EUSART1_SetFramingErrorHandler@interruptHandler 0001  
                               ___aomod@divisor 0009                                     ??_vfpfcnvrt 0048  
                               ___aomod@counter 0011                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 005F                                 _TMR0_Initialize EC08  
                           _EPWM1_LoadDutyValue EC82                                    ___aodiv@sign 0012  
                __end_of_PIN_MANAGER_Initialize EC82                                    ___aomod@sign 0012  
                      __end_of_EPWM1_Initialize EBC0                            ?_EPWM1_LoadDutyValue 0001  
