

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 04 16:33:42 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 05/05/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F26K22 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   123  0000                     
   124 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   125  0000                     
   126 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   127  0000                     
   128                           	psect	idataCOMRAM
   129  003848                     __pidataCOMRAM:
   130                           	callstack 0
   131                           
   132                           ;initializer for myTMR0ISR@buffer
   133  003848  DE                 	db	low _sdCardBuffer1
   134  003849  05                 	db	high _sdCardBuffer1
   135                           
   136                           	psect	idataBANK0
   137  00384A                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _sampleRate
   141  00384A  0640               	dw	1600
   142                           
   143                           	psect	mediumconst
   144  00F316                     __pmediumconst:
   145                           	callstack 0
   146  00F316  00                 	db	0
   147  00F317                     _sin:
   148                           	callstack 0
   149  00F317  80                 	db	128
   150  00F318  9F                 	db	159
   151  00F319  BB                 	db	187
   152  00F31A  D5                 	db	213
   153  00F31B  E9                 	db	233
   154  00F31C  F8                 	db	248
   155  00F31D  FF                 	db	255
   156  00F31E  FF                 	db	255
   157  00F31F  F8                 	db	248
   158  00F320  E9                 	db	233
   159  00F321  D5                 	db	213
   160  00F322  BB                 	db	187
   161  00F323  9F                 	db	159
   162  00F324  80                 	db	128
   163  00F325  61                 	db	97
   164  00F326  45                 	db	69
   165  00F327  2B                 	db	43
   166  00F328  17                 	db	23
   167  00F329  08                 	db	8
   168  00F32A  01                 	db	1
   169  00F32B  01                 	db	1
   170  00F32C  08                 	db	8
   171  00F32D  17                 	db	23
   172  00F32E  2B                 	db	43
   173  00F32F  45                 	db	69
   174  00F330  61                 	db	97
   175  00F331                     __end_of_sin:
   176                           	callstack 0
   177  00F331                     _spi2_configuration:
   178                           	callstack 0
   179  00F331  01                 	db	1
   180  00F332  40                 	db	64
   181  00F333  01                 	db	1
   182  00F334  00                 	db	0
   183  00F335                     __end_of_spi2_configuration:
   184                           	callstack 0
   185  0000                     _ANSELA	set	3896
   186  0000                     _ANSELB	set	3897
   187  0000                     _ANSELC	set	3898
   188  0000                     _CCPTMRS0bits	set	3913
   189  0000                     _LATBbits	set	3978
   190  0000                     _PIR3bits	set	4004
   191  0000                     _SSP2BUF	set	3951
   192  0000                     _SSP2CON2	set	3947
   193  0000                     _SSP2CON1bits	set	3948
   194  0000                     _TRISBbits	set	3987
   195  0000                     _SSP2ADD	set	3950
   196  0000                     _SSP2CON1	set	3948
   197  0000                     _SSP2STAT	set	3949
   198  0000                     _ADCON0bits	set	4034
   199  0000                     _ADCON0	set	4034
   200  0000                     _ADRESH	set	4036
   201  0000                     _ADRESL	set	4035
   202  0000                     _ADCON2	set	4032
   203  0000                     _ADCON1	set	4033
   204  0000                     _OSCTUNE	set	3995
   205  0000                     _OSCCON2	set	4050
   206  0000                     _OSCCON	set	4051
   207  0000                     _INTCON2bits	set	4081
   208  0000                     _WPUB	set	3937
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISA	set	3986
   212  0000                     _LATC	set	3979
   213  0000                     _LATB	set	3978
   214  0000                     _LATA	set	3977
   215  0000                     _T2CONbits	set	4026
   216  0000                     _T2CON	set	4026
   217  0000                     _TMR2	set	4028
   218  0000                     _PR2	set	4027
   219  0000                     _T0CON	set	4053
   220  0000                     _TMR0L	set	4054
   221  0000                     _TMR0H	set	4055
   222  0000                     _T0CONbits	set	4053
   223  0000                     _TXREG1	set	4013
   224  0000                     _RCREG1	set	4014
   225  0000                     _RCSTA1bits	set	4011
   226  0000                     _TXSTA1bits	set	4012
   227  0000                     _PIR1bits	set	3998
   228  0000                     _SPBRGH1	set	4016
   229  0000                     _SPBRG1	set	4015
   230  0000                     _TXSTA1	set	4012
   231  0000                     _RCSTA1	set	4011
   232  0000                     _BAUDCON1	set	4024
   233  0000                     _INTCONbits	set	4082
   234  0000                     _RCONbits	set	4048
   235  0000                     _CCPR1L	set	4030
   236  0000                     _CCPR1H	set	4031
   237  0000                     _PSTR1CON	set	4025
   238  0000                     _PWM1CON	set	4023
   239  0000                     _ECCP1AS	set	4022
   240  0000                     _CCP1CON	set	4029
   241  0000                     _PLLRDY	set	32407
   242  00F335                     STR_42:
   243  00F335  50                 	db	80	;'P'
   244  00F336  72                 	db	114	;'r'
   245  00F337  65                 	db	101	;'e'
   246  00F338  73                 	db	115	;'s'
   247  00F339  73                 	db	115	;'s'
   248  00F33A  20                 	db	32
   249  00F33B  61                 	db	97	;'a'
   250  00F33C  6E                 	db	110	;'n'
   251  00F33D  79                 	db	121	;'y'
   252  00F33E  20                 	db	32
   253  00F33F  6B                 	db	107	;'k'
   254  00F340  65                 	db	101	;'e'
   255  00F341  79                 	db	121	;'y'
   256  00F342  20                 	db	32
   257  00F343  74                 	db	116	;'t'
   258  00F344  6F                 	db	111	;'o'
   259  00F345  20                 	db	32
   260  00F346  73                 	db	115	;'s'
   261  00F347  74                 	db	116	;'t'
   262  00F348  61                 	db	97	;'a'
   263  00F349  72                 	db	114	;'r'
   264  00F34A  74                 	db	116	;'t'
   265  00F34B  20                 	db	32
   266  00F34C  72                 	db	114	;'r'
   267  00F34D  65                 	db	101	;'e'
   268  00F34E  63                 	db	99	;'c'
   269  00F34F  6F                 	db	111	;'o'
   270  00F350  72                 	db	114	;'r'
   271  00F351  64                 	db	100	;'d'
   272  00F352  69                 	db	105	;'i'
   273  00F353  6E                 	db	110	;'n'
   274  00F354  67                 	db	103	;'g'
   275  00F355  20                 	db	32
   276  00F356  61                 	db	97	;'a'
   277  00F357  75                 	db	117	;'u'
   278  00F358  64                 	db	100	;'d'
   279  00F359  69                 	db	105	;'i'
   280  00F35A  6F                 	db	111	;'o'
   281  00F35B  20                 	db	32
   282  00F35C  61                 	db	97	;'a'
   283  00F35D  6E                 	db	110	;'n'
   284  00F35E  64                 	db	100	;'d'
   285  00F35F  20                 	db	32
   286  00F360  70                 	db	112	;'p'
   287  00F361  72                 	db	114	;'r'
   288  00F362  65                 	db	101	;'e'
   289  00F363  73                 	db	115	;'s'
   290  00F364  73                 	db	115	;'s'
   291  00F365  20                 	db	32
   292  00F366  61                 	db	97	;'a'
   293  00F367  6E                 	db	110	;'n'
   294  00F368  79                 	db	121	;'y'
   295  00F369  20                 	db	32
   296  00F36A  6B                 	db	107	;'k'
   297  00F36B  65                 	db	101	;'e'
   298  00F36C  79                 	db	121	;'y'
   299  00F36D  20                 	db	32
   300  00F36E  74                 	db	116	;'t'
   301  00F36F  6F                 	db	111	;'o'
   302  00F370  20                 	db	32
   303  00F371  73                 	db	115	;'s'
   304  00F372  74                 	db	116	;'t'
   305  00F373  6F                 	db	111	;'o'
   306  00F374  70                 	db	112	;'p'
   307  00F375  20                 	db	32
   308  00F376  72                 	db	114	;'r'
   309  00F377  65                 	db	101	;'e'
   310  00F378  63                 	db	99	;'c'
   311  00F379  6F                 	db	111	;'o'
   312  00F37A  72                 	db	114	;'r'
   313  00F37B  64                 	db	100	;'d'
   314  00F37C  69                 	db	105	;'i'
   315  00F37D  6E                 	db	110	;'n'
   316  00F37E  67                 	db	103	;'g'
   317  00F37F  2E                 	db	46
   318  00F380  00                 	db	0
   319  00F381                     STR_56:
   320  00F381  4C                 	db	76	;'L'
   321  00F382  6F                 	db	111	;'o'
   322  00F383  67                 	db	103	;'g'
   323  00F384  20                 	db	32
   324  00F385  66                 	db	102	;'f'
   325  00F386  69                 	db	105	;'i'
   326  00F387  6C                 	db	108	;'l'
   327  00F388  65                 	db	101	;'e'
   328  00F389  20                 	db	32
   329  00F38A  6E                 	db	110	;'n'
   330  00F38B  61                 	db	97	;'a'
   331  00F38C  6D                 	db	109	;'m'
   332  00F38D  65                 	db	101	;'e'
   333  00F38E  3A                 	db	58	;':'
   334  00F38F  20                 	db	32
   335  00F390  42                 	db	66	;'B'
   336  00F391  72                 	db	114	;'r'
   337  00F392  6F                 	db	111	;'o'
   338  00F393  77                 	db	119	;'w'
   339  00F394  73                 	db	115	;'s'
   340  00F395  65                 	db	101	;'e'
   341  00F396  20                 	db	32
   342  00F397  61                 	db	97	;'a'
   343  00F398  6E                 	db	110	;'n'
   344  00F399  64                 	db	100	;'d'
   345  00F39A  20                 	db	32
   346  00F39B  70                 	db	112	;'p'
   347  00F39C  72                 	db	114	;'r'
   348  00F39D  6F                 	db	111	;'o'
   349  00F39E  76                 	db	118	;'v'
   350  00F39F  69                 	db	105	;'i'
   351  00F3A0  64                 	db	100	;'d'
   352  00F3A1  65                 	db	101	;'e'
   353  00F3A2  20                 	db	32
   354  00F3A3  61                 	db	97	;'a'
   355  00F3A4  20                 	db	32
   356  00F3A5  2E                 	db	46
   357  00F3A6  63                 	db	99	;'c'
   358  00F3A7  73                 	db	115	;'s'
   359  00F3A8  76                 	db	118	;'v'
   360  00F3A9  20                 	db	32
   361  00F3AA  65                 	db	101	;'e'
   362  00F3AB  78                 	db	120	;'x'
   363  00F3AC  74                 	db	116	;'t'
   364  00F3AD  65                 	db	101	;'e'
   365  00F3AE  6E                 	db	110	;'n'
   366  00F3AF  73                 	db	115	;'s'
   367  00F3B0  69                 	db	105	;'i'
   368  00F3B1  6F                 	db	111	;'o'
   369  00F3B2  6E                 	db	110	;'n'
   370  00F3B3  20                 	db	32
   371  00F3B4  74                 	db	116	;'t'
   372  00F3B5  6F                 	db	111	;'o'
   373  00F3B6  20                 	db	32
   374  00F3B7  79                 	db	121	;'y'
   375  00F3B8  6F                 	db	111	;'o'
   376  00F3B9  75                 	db	117	;'u'
   377  00F3BA  72                 	db	114	;'r'
   378  00F3BB  20                 	db	32
   379  00F3BC  66                 	db	102	;'f'
   380  00F3BD  69                 	db	105	;'i'
   381  00F3BE  6C                 	db	108	;'l'
   382  00F3BF  65                 	db	101	;'e'
   383  00F3C0  20                 	db	32
   384  00F3C1  6E                 	db	110	;'n'
   385  00F3C2  61                 	db	97	;'a'
   386  00F3C3  6D                 	db	109	;'m'
   387  00F3C4  65                 	db	101	;'e'
   388  00F3C5  0D                 	db	13
   389  00F3C6  0A                 	db	10
   390  00F3C7  00                 	db	0
   391  00F3C8                     STR_50:
   392  00F3C8  54                 	db	84	;'T'
   393  00F3C9  6F                 	db	111	;'o'
   394  00F3CA  20                 	db	32
   395  00F3CB  73                 	db	115	;'s'
   396  00F3CC  70                 	db	112	;'p'
   397  00F3CD  6F                 	db	111	;'o'
   398  00F3CE  6F                 	db	111	;'o'
   399  00F3CF  6C                 	db	108	;'l'
   400  00F3D0  20                 	db	32
   401  00F3D1  74                 	db	116	;'t'
   402  00F3D2  65                 	db	101	;'e'
   403  00F3D3  72                 	db	114	;'r'
   404  00F3D4  6D                 	db	109	;'m'
   405  00F3D5  69                 	db	105	;'i'
   406  00F3D6  6E                 	db	110	;'n'
   407  00F3D7  61                 	db	97	;'a'
   408  00F3D8  6C                 	db	108	;'l'
   409  00F3D9  20                 	db	32
   410  00F3DA  63                 	db	99	;'c'
   411  00F3DB  6F                 	db	111	;'o'
   412  00F3DC  6E                 	db	110	;'n'
   413  00F3DD  74                 	db	116	;'t'
   414  00F3DE  65                 	db	101	;'e'
   415  00F3DF  6E                 	db	110	;'n'
   416  00F3E0  74                 	db	116	;'t'
   417  00F3E1  73                 	db	115	;'s'
   418  00F3E2  20                 	db	32
   419  00F3E3  69                 	db	105	;'i'
   420  00F3E4  6E                 	db	110	;'n'
   421  00F3E5  74                 	db	116	;'t'
   422  00F3E6  6F                 	db	111	;'o'
   423  00F3E7  20                 	db	32
   424  00F3E8  61                 	db	97	;'a'
   425  00F3E9  20                 	db	32
   426  00F3EA  66                 	db	102	;'f'
   427  00F3EB  69                 	db	105	;'i'
   428  00F3EC  6C                 	db	108	;'l'
   429  00F3ED  65                 	db	101	;'e'
   430  00F3EE  20                 	db	32
   431  00F3EF  66                 	db	102	;'f'
   432  00F3F0  6F                 	db	111	;'o'
   433  00F3F1  6C                 	db	108	;'l'
   434  00F3F2  6C                 	db	108	;'l'
   435  00F3F3  6F                 	db	111	;'o'
   436  00F3F4  77                 	db	119	;'w'
   437  00F3F5  20                 	db	32
   438  00F3F6  74                 	db	116	;'t'
   439  00F3F7  68                 	db	104	;'h'
   440  00F3F8  65                 	db	101	;'e'
   441  00F3F9  73                 	db	115	;'s'
   442  00F3FA  65                 	db	101	;'e'
   443  00F3FB  20                 	db	32
   444  00F3FC  69                 	db	105	;'i'
   445  00F3FD  6E                 	db	110	;'n'
   446  00F3FE  73                 	db	115	;'s'
   447  00F3FF  74                 	db	116	;'t'
   448  00F400  72                 	db	114	;'r'
   449  00F401  75                 	db	117	;'u'
   450  00F402  63                 	db	99	;'c'
   451  00F403  74                 	db	116	;'t'
   452  00F404  69                 	db	105	;'i'
   453  00F405  6F                 	db	111	;'o'
   454  00F406  6E                 	db	110	;'n'
   455  00F407  73                 	db	115	;'s'
   456  00F408  3A                 	db	58	;':'
   457  00F409  0D                 	db	13
   458  00F40A  0A                 	db	10
   459  00F40B  00                 	db	0
   460  00F40C                     STR_83:
   461  00F40C  2E                 	db	46
   462  00F40D  2E                 	db	46
   463  00F40E  2E                 	db	46
   464  00F40F  2E                 	db	46
   465  00F410  2E                 	db	46
   466  00F411  2E                 	db	46
   467  00F412  2E                 	db	46
   468  00F413  2E                 	db	46
   469  00F414  2E                 	db	46
   470  00F415  2E                 	db	46
   471  00F416  2E                 	db	46
   472  00F417  2E                 	db	46
   473  00F418  2E                 	db	46
   474  00F419  2E                 	db	46
   475  00F41A  2E                 	db	46
   476  00F41B  2E                 	db	46
   477  00F41C  2E                 	db	46
   478  00F41D  2E                 	db	46
   479  00F41E  2E                 	db	46
   480  00F41F  2E                 	db	46
   481  00F420  2E                 	db	46
   482  00F421  2E                 	db	46
   483  00F422  2E                 	db	46
   484  00F423  2E                 	db	46
   485  00F424  2E                 	db	46
   486  00F425  2E                 	db	46
   487  00F426  2E                 	db	46
   488  00F427  2E                 	db	46
   489  00F428  2E                 	db	46
   490  00F429  2E                 	db	46
   491  00F42A  2E                 	db	46
   492  00F42B  2E                 	db	46
   493  00F42C  2E                 	db	46
   494  00F42D  2E                 	db	46
   495  00F42E  2E                 	db	46
   496  00F42F  2E                 	db	46
   497  00F430  2E                 	db	46
   498  00F431  2E                 	db	46
   499  00F432  2E                 	db	46
   500  00F433  2E                 	db	46
   501  00F434  2E                 	db	46
   502  00F435  2E                 	db	46
   503  00F436  2E                 	db	46
   504  00F437  2E                 	db	46
   505  00F438  2E                 	db	46
   506  00F439  2E                 	db	46
   507  00F43A  2E                 	db	46
   508  00F43B  2E                 	db	46
   509  00F43C  2E                 	db	46
   510  00F43D  2E                 	db	46
   511  00F43E  2E                 	db	46
   512  00F43F  2E                 	db	46
   513  00F440  2E                 	db	46
   514  00F441  2E                 	db	46
   515  00F442  2E                 	db	46
   516  00F443  2E                 	db	46
   517  00F444  2E                 	db	46
   518  00F445  2E                 	db	46
   519  00F446  2E                 	db	46
   520  00F447  0D                 	db	13
   521  00F448  0A                 	db	10
   522  00F449  00                 	db	0
   523  00F44A                     STR_84:
   524  00F44A  2E                 	db	46
   525  00F44B  2E                 	db	46
   526  00F44C  2E                 	db	46
   527  00F44D  2E                 	db	46
   528  00F44E  2E                 	db	46
   529  00F44F  2E                 	db	46
   530  00F450  2E                 	db	46
   531  00F451  2E                 	db	46
   532  00F452  2E                 	db	46
   533  00F453  2E                 	db	46
   534  00F454  2E                 	db	46
   535  00F455  2E                 	db	46
   536  00F456  2E                 	db	46
   537  00F457  2E                 	db	46
   538  00F458  2E                 	db	46
   539  00F459  2E                 	db	46
   540  00F45A  2E                 	db	46
   541  00F45B  2E                 	db	46
   542  00F45C  2E                 	db	46
   543  00F45D  2E                 	db	46
   544  00F45E  2E                 	db	46
   545  00F45F  3F                 	db	63	;'?'
   546  00F460  3F                 	db	63	;'?'
   547  00F461  3F                 	db	63	;'?'
   548  00F462  3F                 	db	63	;'?'
   549  00F463  3F                 	db	63	;'?'
   550  00F464  3F                 	db	63	;'?'
   551  00F465  3F                 	db	63	;'?'
   552  00F466  3F                 	db	63	;'?'
   553  00F467  3F                 	db	63	;'?'
   554  00F468  3F                 	db	63	;'?'
   555  00F469  3F                 	db	63	;'?'
   556  00F46A  3F                 	db	63	;'?'
   557  00F46B  3F                 	db	63	;'?'
   558  00F46C  3F                 	db	63	;'?'
   559  00F46D  3F                 	db	63	;'?'
   560  00F46E  3F                 	db	63	;'?'
   561  00F46F  3F                 	db	63	;'?'
   562  00F470  2E                 	db	46
   563  00F471  2E                 	db	46
   564  00F472  2E                 	db	46
   565  00F473  2E                 	db	46
   566  00F474  2E                 	db	46
   567  00F475  2E                 	db	46
   568  00F476  2E                 	db	46
   569  00F477  2E                 	db	46
   570  00F478  2E                 	db	46
   571  00F479  2E                 	db	46
   572  00F47A  2E                 	db	46
   573  00F47B  2E                 	db	46
   574  00F47C  2E                 	db	46
   575  00F47D  2E                 	db	46
   576  00F47E  2E                 	db	46
   577  00F47F  2E                 	db	46
   578  00F480  2E                 	db	46
   579  00F481  2E                 	db	46
   580  00F482  2E                 	db	46
   581  00F483  2E                 	db	46
   582  00F484  2E                 	db	46
   583  00F485  0D                 	db	13
   584  00F486  0A                 	db	10
   585  00F487  00                 	db	0
   586  00F488                     STR_85:
   587  00F488  2E                 	db	46
   588  00F489  2E                 	db	46
   589  00F48A  2E                 	db	46
   590  00F48B  2E                 	db	46
   591  00F48C  2E                 	db	46
   592  00F48D  2E                 	db	46
   593  00F48E  2E                 	db	46
   594  00F48F  2E                 	db	46
   595  00F490  2E                 	db	46
   596  00F491  2E                 	db	46
   597  00F492  2E                 	db	46
   598  00F493  2E                 	db	46
   599  00F494  2E                 	db	46
   600  00F495  2E                 	db	46
   601  00F496  2E                 	db	46
   602  00F497  2E                 	db	46
   603  00F498  2E                 	db	46
   604  00F499  3F                 	db	63	;'?'
   605  00F49A  3F                 	db	63	;'?'
   606  00F49B  3F                 	db	63	;'?'
   607  00F49C  3F                 	db	63	;'?'
   608  00F49D  3F                 	db	63	;'?'
   609  00F49E  3F                 	db	63	;'?'
   610  00F49F  3F                 	db	63	;'?'
   611  00F4A0  3F                 	db	63	;'?'
   612  00F4A1  3F                 	db	63	;'?'
   613  00F4A2  3F                 	db	63	;'?'
   614  00F4A3  3F                 	db	63	;'?'
   615  00F4A4  3F                 	db	63	;'?'
   616  00F4A5  3F                 	db	63	;'?'
   617  00F4A6  3F                 	db	63	;'?'
   618  00F4A7  3F                 	db	63	;'?'
   619  00F4A8  3F                 	db	63	;'?'
   620  00F4A9  3F                 	db	63	;'?'
   621  00F4AA  3F                 	db	63	;'?'
   622  00F4AB  3F                 	db	63	;'?'
   623  00F4AC  3F                 	db	63	;'?'
   624  00F4AD  3F                 	db	63	;'?'
   625  00F4AE  3F                 	db	63	;'?'
   626  00F4AF  3F                 	db	63	;'?'
   627  00F4B0  3F                 	db	63	;'?'
   628  00F4B1  3F                 	db	63	;'?'
   629  00F4B2  2E                 	db	46
   630  00F4B3  2E                 	db	46
   631  00F4B4  2E                 	db	46
   632  00F4B5  2E                 	db	46
   633  00F4B6  2E                 	db	46
   634  00F4B7  2E                 	db	46
   635  00F4B8  2E                 	db	46
   636  00F4B9  2E                 	db	46
   637  00F4BA  2E                 	db	46
   638  00F4BB  2E                 	db	46
   639  00F4BC  2E                 	db	46
   640  00F4BD  2E                 	db	46
   641  00F4BE  2E                 	db	46
   642  00F4BF  2E                 	db	46
   643  00F4C0  2E                 	db	46
   644  00F4C1  2E                 	db	46
   645  00F4C2  2E                 	db	46
   646  00F4C3  0D                 	db	13
   647  00F4C4  0A                 	db	10
   648  00F4C5  00                 	db	0
   649  00F4C6                     STR_86:
   650  00F4C6  2E                 	db	46
   651  00F4C7  2E                 	db	46
   652  00F4C8  2E                 	db	46
   653  00F4C9  2E                 	db	46
   654  00F4CA  2E                 	db	46
   655  00F4CB  2E                 	db	46
   656  00F4CC  2E                 	db	46
   657  00F4CD  2E                 	db	46
   658  00F4CE  2E                 	db	46
   659  00F4CF  2E                 	db	46
   660  00F4D0  2E                 	db	46
   661  00F4D1  2E                 	db	46
   662  00F4D2  2E                 	db	46
   663  00F4D3  2E                 	db	46
   664  00F4D4  3F                 	db	63	;'?'
   665  00F4D5  3F                 	db	63	;'?'
   666  00F4D6  3F                 	db	63	;'?'
   667  00F4D7  3F                 	db	63	;'?'
   668  00F4D8  3F                 	db	63	;'?'
   669  00F4D9  3F                 	db	63	;'?'
   670  00F4DA  3F                 	db	63	;'?'
   671  00F4DB  3F                 	db	63	;'?'
   672  00F4DC  3F                 	db	63	;'?'
   673  00F4DD  3F                 	db	63	;'?'
   674  00F4DE  3F                 	db	63	;'?'
   675  00F4DF  3F                 	db	63	;'?'
   676  00F4E0  3F                 	db	63	;'?'
   677  00F4E1  3F                 	db	63	;'?'
   678  00F4E2  3F                 	db	63	;'?'
   679  00F4E3  3F                 	db	63	;'?'
   680  00F4E4  3F                 	db	63	;'?'
   681  00F4E5  3F                 	db	63	;'?'
   682  00F4E6  3F                 	db	63	;'?'
   683  00F4E7  3F                 	db	63	;'?'
   684  00F4E8  3F                 	db	63	;'?'
   685  00F4E9  3F                 	db	63	;'?'
   686  00F4EA  3F                 	db	63	;'?'
   687  00F4EB  3F                 	db	63	;'?'
   688  00F4EC  3F                 	db	63	;'?'
   689  00F4ED  3F                 	db	63	;'?'
   690  00F4EE  3F                 	db	63	;'?'
   691  00F4EF  3F                 	db	63	;'?'
   692  00F4F0  3F                 	db	63	;'?'
   693  00F4F1  3F                 	db	63	;'?'
   694  00F4F2  3F                 	db	63	;'?'
   695  00F4F3  2E                 	db	46
   696  00F4F4  2E                 	db	46
   697  00F4F5  2E                 	db	46
   698  00F4F6  2E                 	db	46
   699  00F4F7  2E                 	db	46
   700  00F4F8  2E                 	db	46
   701  00F4F9  2E                 	db	46
   702  00F4FA  2E                 	db	46
   703  00F4FB  2E                 	db	46
   704  00F4FC  2E                 	db	46
   705  00F4FD  2E                 	db	46
   706  00F4FE  2E                 	db	46
   707  00F4FF  2E                 	db	46
   708  00F500  2E                 	db	46
   709  00F501  0D                 	db	13
   710  00F502  0A                 	db	10
   711  00F503  00                 	db	0
   712  00F504                     STR_87:
   713  00F504  2E                 	db	46
   714  00F505  2E                 	db	46
   715  00F506  2E                 	db	46
   716  00F507  2E                 	db	46
   717  00F508  2E                 	db	46
   718  00F509  2E                 	db	46
   719  00F50A  2E                 	db	46
   720  00F50B  2E                 	db	46
   721  00F50C  2E                 	db	46
   722  00F50D  2E                 	db	46
   723  00F50E  2E                 	db	46
   724  00F50F  2E                 	db	46
   725  00F510  3F                 	db	63	;'?'
   726  00F511  3F                 	db	63	;'?'
   727  00F512  3F                 	db	63	;'?'
   728  00F513  3F                 	db	63	;'?'
   729  00F514  3F                 	db	63	;'?'
   730  00F515  3F                 	db	63	;'?'
   731  00F516  3F                 	db	63	;'?'
   732  00F517  3F                 	db	63	;'?'
   733  00F518  3F                 	db	63	;'?'
   734  00F519  3F                 	db	63	;'?'
   735  00F51A  3F                 	db	63	;'?'
   736  00F51B  3F                 	db	63	;'?'
   737  00F51C  3F                 	db	63	;'?'
   738  00F51D  3F                 	db	63	;'?'
   739  00F51E  3F                 	db	63	;'?'
   740  00F51F  3F                 	db	63	;'?'
   741  00F520  3F                 	db	63	;'?'
   742  00F521  3F                 	db	63	;'?'
   743  00F522  3F                 	db	63	;'?'
   744  00F523  3F                 	db	63	;'?'
   745  00F524  3F                 	db	63	;'?'
   746  00F525  3F                 	db	63	;'?'
   747  00F526  3F                 	db	63	;'?'
   748  00F527  3F                 	db	63	;'?'
   749  00F528  3F                 	db	63	;'?'
   750  00F529  3F                 	db	63	;'?'
   751  00F52A  3F                 	db	63	;'?'
   752  00F52B  3F                 	db	63	;'?'
   753  00F52C  3F                 	db	63	;'?'
   754  00F52D  3F                 	db	63	;'?'
   755  00F52E  3F                 	db	63	;'?'
   756  00F52F  3F                 	db	63	;'?'
   757  00F530  3F                 	db	63	;'?'
   758  00F531  3F                 	db	63	;'?'
   759  00F532  3F                 	db	63	;'?'
   760  00F533  2E                 	db	46
   761  00F534  2E                 	db	46
   762  00F535  2E                 	db	46
   763  00F536  2E                 	db	46
   764  00F537  2E                 	db	46
   765  00F538  2E                 	db	46
   766  00F539  2E                 	db	46
   767  00F53A  2E                 	db	46
   768  00F53B  2E                 	db	46
   769  00F53C  2E                 	db	46
   770  00F53D  2E                 	db	46
   771  00F53E  2E                 	db	46
   772  00F53F  0D                 	db	13
   773  00F540  0A                 	db	10
   774  00F541  00                 	db	0
   775  00F542                     STR_88:
   776  00F542  2E                 	db	46
   777  00F543  2E                 	db	46
   778  00F544  2E                 	db	46
   779  00F545  2E                 	db	46
   780  00F546  2E                 	db	46
   781  00F547  2E                 	db	46
   782  00F548  2E                 	db	46
   783  00F549  2E                 	db	46
   784  00F54A  2E                 	db	46
   785  00F54B  2E                 	db	46
   786  00F54C  3F                 	db	63	;'?'
   787  00F54D  3F                 	db	63	;'?'
   788  00F54E  3F                 	db	63	;'?'
   789  00F54F  3F                 	db	63	;'?'
   790  00F550  3F                 	db	63	;'?'
   791  00F551  3F                 	db	63	;'?'
   792  00F552  3F                 	db	63	;'?'
   793  00F553  3F                 	db	63	;'?'
   794  00F554  3F                 	db	63	;'?'
   795  00F555  3F                 	db	63	;'?'
   796  00F556  3F                 	db	63	;'?'
   797  00F557  3F                 	db	63	;'?'
   798  00F558  3F                 	db	63	;'?'
   799  00F559  3F                 	db	63	;'?'
   800  00F55A  3F                 	db	63	;'?'
   801  00F55B  3F                 	db	63	;'?'
   802  00F55C  3F                 	db	63	;'?'
   803  00F55D  3F                 	db	63	;'?'
   804  00F55E  3F                 	db	63	;'?'
   805  00F55F  3F                 	db	63	;'?'
   806  00F560  3F                 	db	63	;'?'
   807  00F561  3F                 	db	63	;'?'
   808  00F562  3F                 	db	63	;'?'
   809  00F563  3F                 	db	63	;'?'
   810  00F564  3F                 	db	63	;'?'
   811  00F565  3F                 	db	63	;'?'
   812  00F566  3F                 	db	63	;'?'
   813  00F567  3F                 	db	63	;'?'
   814  00F568  3F                 	db	63	;'?'
   815  00F569  3F                 	db	63	;'?'
   816  00F56A  3F                 	db	63	;'?'
   817  00F56B  3F                 	db	63	;'?'
   818  00F56C  3F                 	db	63	;'?'
   819  00F56D  3F                 	db	63	;'?'
   820  00F56E  3F                 	db	63	;'?'
   821  00F56F  3F                 	db	63	;'?'
   822  00F570  3F                 	db	63	;'?'
   823  00F571  3F                 	db	63	;'?'
   824  00F572  3F                 	db	63	;'?'
   825  00F573  2E                 	db	46
   826  00F574  2E                 	db	46
   827  00F575  2E                 	db	46
   828  00F576  2E                 	db	46
   829  00F577  2E                 	db	46
   830  00F578  2E                 	db	46
   831  00F579  2E                 	db	46
   832  00F57A  2E                 	db	46
   833  00F57B  2E                 	db	46
   834  00F57C  2E                 	db	46
   835  00F57D  0D                 	db	13
   836  00F57E  0A                 	db	10
   837  00F57F  00                 	db	0
   838  00F580                     STR_89:
   839  00F580  2E                 	db	46
   840  00F581  2E                 	db	46
   841  00F582  2E                 	db	46
   842  00F583  2E                 	db	46
   843  00F584  2E                 	db	46
   844  00F585  2E                 	db	46
   845  00F586  2E                 	db	46
   846  00F587  2E                 	db	46
   847  00F588  2E                 	db	46
   848  00F589  3F                 	db	63	;'?'
   849  00F58A  3F                 	db	63	;'?'
   850  00F58B  3F                 	db	63	;'?'
   851  00F58C  3F                 	db	63	;'?'
   852  00F58D  3F                 	db	63	;'?'
   853  00F58E  3F                 	db	63	;'?'
   854  00F58F  3F                 	db	63	;'?'
   855  00F590  3F                 	db	63	;'?'
   856  00F591  3F                 	db	63	;'?'
   857  00F592  3F                 	db	63	;'?'
   858  00F593  3F                 	db	63	;'?'
   859  00F594  3F                 	db	63	;'?'
   860  00F595  3F                 	db	63	;'?'
   861  00F596  3F                 	db	63	;'?'
   862  00F597  3F                 	db	63	;'?'
   863  00F598  3F                 	db	63	;'?'
   864  00F599  3F                 	db	63	;'?'
   865  00F59A  3F                 	db	63	;'?'
   866  00F59B  3F                 	db	63	;'?'
   867  00F59C  3F                 	db	63	;'?'
   868  00F59D  3F                 	db	63	;'?'
   869  00F59E  3F                 	db	63	;'?'
   870  00F59F  3F                 	db	63	;'?'
   871  00F5A0  3F                 	db	63	;'?'
   872  00F5A1  3F                 	db	63	;'?'
   873  00F5A2  3F                 	db	63	;'?'
   874  00F5A3  3F                 	db	63	;'?'
   875  00F5A4  3F                 	db	63	;'?'
   876  00F5A5  3F                 	db	63	;'?'
   877  00F5A6  3F                 	db	63	;'?'
   878  00F5A7  3F                 	db	63	;'?'
   879  00F5A8  3F                 	db	63	;'?'
   880  00F5A9  3F                 	db	63	;'?'
   881  00F5AA  3F                 	db	63	;'?'
   882  00F5AB  3F                 	db	63	;'?'
   883  00F5AC  3F                 	db	63	;'?'
   884  00F5AD  3F                 	db	63	;'?'
   885  00F5AE  3F                 	db	63	;'?'
   886  00F5AF  3F                 	db	63	;'?'
   887  00F5B0  3F                 	db	63	;'?'
   888  00F5B1  3F                 	db	63	;'?'
   889  00F5B2  2E                 	db	46
   890  00F5B3  2E                 	db	46
   891  00F5B4  2E                 	db	46
   892  00F5B5  2E                 	db	46
   893  00F5B6  2E                 	db	46
   894  00F5B7  2E                 	db	46
   895  00F5B8  2E                 	db	46
   896  00F5B9  2E                 	db	46
   897  00F5BA  2E                 	db	46
   898  00F5BB  0D                 	db	13
   899  00F5BC  0A                 	db	10
   900  00F5BD  00                 	db	0
   901  00F5BE                     STR_110:
   902  00F5BE  2E                 	db	46
   903  00F5BF  2E                 	db	46
   904  00F5C0  2E                 	db	46
   905  00F5C1  2E                 	db	46
   906  00F5C2  2E                 	db	46
   907  00F5C3  2E                 	db	46
   908  00F5C4  2E                 	db	46
   909  00F5C5  3F                 	db	63	;'?'
   910  00F5C6  3F                 	db	63	;'?'
   911  00F5C7  3F                 	db	63	;'?'
   912  00F5C8  3F                 	db	63	;'?'
   913  00F5C9  3F                 	db	63	;'?'
   914  00F5CA  3F                 	db	63	;'?'
   915  00F5CB  3F                 	db	63	;'?'
   916  00F5CC  3F                 	db	63	;'?'
   917  00F5CD  3F                 	db	63	;'?'
   918  00F5CE  3F                 	db	63	;'?'
   919  00F5CF  3F                 	db	63	;'?'
   920  00F5D0  3F                 	db	63	;'?'
   921  00F5D1  3F                 	db	63	;'?'
   922  00F5D2  3F                 	db	63	;'?'
   923  00F5D3  3F                 	db	63	;'?'
   924  00F5D4  3F                 	db	63	;'?'
   925  00F5D5  3F                 	db	63	;'?'
   926  00F5D6  3A                 	db	58	;':'
   927  00F5D7  3A                 	db	58	;':'
   928  00F5D8  3A                 	db	58	;':'
   929  00F5D9  3A                 	db	58	;':'
   930  00F5DA  3A                 	db	58	;':'
   931  00F5DB  3A                 	db	58	;':'
   932  00F5DC  3A                 	db	58	;':'
   933  00F5DD  3A                 	db	58	;':'
   934  00F5DE  3A                 	db	58	;':'
   935  00F5DF  3A                 	db	58	;':'
   936  00F5E0  3A                 	db	58	;':'
   937  00F5E1  3F                 	db	63	;'?'
   938  00F5E2  3F                 	db	63	;'?'
   939  00F5E3  3F                 	db	63	;'?'
   940  00F5E4  3F                 	db	63	;'?'
   941  00F5E5  3F                 	db	63	;'?'
   942  00F5E6  3F                 	db	63	;'?'
   943  00F5E7  3F                 	db	63	;'?'
   944  00F5E8  3F                 	db	63	;'?'
   945  00F5E9  3F                 	db	63	;'?'
   946  00F5EA  3F                 	db	63	;'?'
   947  00F5EB  3F                 	db	63	;'?'
   948  00F5EC  3F                 	db	63	;'?'
   949  00F5ED  3F                 	db	63	;'?'
   950  00F5EE  3F                 	db	63	;'?'
   951  00F5EF  3F                 	db	63	;'?'
   952  00F5F0  3F                 	db	63	;'?'
   953  00F5F1  3F                 	db	63	;'?'
   954  00F5F2  2E                 	db	46
   955  00F5F3  2E                 	db	46
   956  00F5F4  2E                 	db	46
   957  00F5F5  2E                 	db	46
   958  00F5F6  2E                 	db	46
   959  00F5F7  2E                 	db	46
   960  00F5F8  2E                 	db	46
   961  00F5F9  0D                 	db	13
   962  00F5FA  0A                 	db	10
   963  00F5FB  00                 	db	0
   964  00F5FC                     STR_90:
   965  00F5FC  2E                 	db	46
   966  00F5FD  2E                 	db	46
   967  00F5FE  2E                 	db	46
   968  00F5FF  2E                 	db	46
   969  00F600  2E                 	db	46
   970  00F601  2E                 	db	46
   971  00F602  2E                 	db	46
   972  00F603  3F                 	db	63	;'?'
   973  00F604  3F                 	db	63	;'?'
   974  00F605  3F                 	db	63	;'?'
   975  00F606  3F                 	db	63	;'?'
   976  00F607  3F                 	db	63	;'?'
   977  00F608  3F                 	db	63	;'?'
   978  00F609  3F                 	db	63	;'?'
   979  00F60A  3F                 	db	63	;'?'
   980  00F60B  3F                 	db	63	;'?'
   981  00F60C  3F                 	db	63	;'?'
   982  00F60D  3F                 	db	63	;'?'
   983  00F60E  3F                 	db	63	;'?'
   984  00F60F  3F                 	db	63	;'?'
   985  00F610  3F                 	db	63	;'?'
   986  00F611  3F                 	db	63	;'?'
   987  00F612  3F                 	db	63	;'?'
   988  00F613  3F                 	db	63	;'?'
   989  00F614  3F                 	db	63	;'?'
   990  00F615  3F                 	db	63	;'?'
   991  00F616  3F                 	db	63	;'?'
   992  00F617  3F                 	db	63	;'?'
   993  00F618  3F                 	db	63	;'?'
   994  00F619  3F                 	db	63	;'?'
   995  00F61A  3F                 	db	63	;'?'
   996  00F61B  3F                 	db	63	;'?'
   997  00F61C  3F                 	db	63	;'?'
   998  00F61D  3F                 	db	63	;'?'
   999  00F61E  3F                 	db	63	;'?'
  1000  00F61F  3F                 	db	63	;'?'
  1001  00F620  3F                 	db	63	;'?'
  1002  00F621  3F                 	db	63	;'?'
  1003  00F622  3F                 	db	63	;'?'
  1004  00F623  3F                 	db	63	;'?'
  1005  00F624  3F                 	db	63	;'?'
  1006  00F625  3F                 	db	63	;'?'
  1007  00F626  3F                 	db	63	;'?'
  1008  00F627  3F                 	db	63	;'?'
  1009  00F628  3F                 	db	63	;'?'
  1010  00F629  3F                 	db	63	;'?'
  1011  00F62A  3F                 	db	63	;'?'
  1012  00F62B  3F                 	db	63	;'?'
  1013  00F62C  3F                 	db	63	;'?'
  1014  00F62D  3F                 	db	63	;'?'
  1015  00F62E  3F                 	db	63	;'?'
  1016  00F62F  3F                 	db	63	;'?'
  1017  00F630  2E                 	db	46
  1018  00F631  2E                 	db	46
  1019  00F632  2E                 	db	46
  1020  00F633  2E                 	db	46
  1021  00F634  2E                 	db	46
  1022  00F635  2E                 	db	46
  1023  00F636  2E                 	db	46
  1024  00F637  0D                 	db	13
  1025  00F638  0A                 	db	10
  1026  00F639  00                 	db	0
  1027  00F63A                     STR_109:
  1028  00F63A  2E                 	db	46
  1029  00F63B  2E                 	db	46
  1030  00F63C  2E                 	db	46
  1031  00F63D  2E                 	db	46
  1032  00F63E  2E                 	db	46
  1033  00F63F  2E                 	db	46
  1034  00F640  3F                 	db	63	;'?'
  1035  00F641  3F                 	db	63	;'?'
  1036  00F642  3F                 	db	63	;'?'
  1037  00F643  3F                 	db	63	;'?'
  1038  00F644  3F                 	db	63	;'?'
  1039  00F645  3F                 	db	63	;'?'
  1040  00F646  3F                 	db	63	;'?'
  1041  00F647  3F                 	db	63	;'?'
  1042  00F648  3F                 	db	63	;'?'
  1043  00F649  3F                 	db	63	;'?'
  1044  00F64A  3F                 	db	63	;'?'
  1045  00F64B  3F                 	db	63	;'?'
  1046  00F64C  3F                 	db	63	;'?'
  1047  00F64D  3F                 	db	63	;'?'
  1048  00F64E  3F                 	db	63	;'?'
  1049  00F64F  3A                 	db	58	;':'
  1050  00F650  3A                 	db	58	;':'
  1051  00F651  3A                 	db	58	;':'
  1052  00F652  3A                 	db	58	;':'
  1053  00F653  3A                 	db	58	;':'
  1054  00F654  3F                 	db	63	;'?'
  1055  00F655  3F                 	db	63	;'?'
  1056  00F656  3F                 	db	63	;'?'
  1057  00F657  3F                 	db	63	;'?'
  1058  00F658  3F                 	db	63	;'?'
  1059  00F659  3F                 	db	63	;'?'
  1060  00F65A  3F                 	db	63	;'?'
  1061  00F65B  3A                 	db	58	;':'
  1062  00F65C  3A                 	db	58	;':'
  1063  00F65D  3A                 	db	58	;':'
  1064  00F65E  3A                 	db	58	;':'
  1065  00F65F  3A                 	db	58	;':'
  1066  00F660  3F                 	db	63	;'?'
  1067  00F661  3F                 	db	63	;'?'
  1068  00F662  3F                 	db	63	;'?'
  1069  00F663  3F                 	db	63	;'?'
  1070  00F664  3F                 	db	63	;'?'
  1071  00F665  3F                 	db	63	;'?'
  1072  00F666  3F                 	db	63	;'?'
  1073  00F667  3F                 	db	63	;'?'
  1074  00F668  3F                 	db	63	;'?'
  1075  00F669  3F                 	db	63	;'?'
  1076  00F66A  3F                 	db	63	;'?'
  1077  00F66B  3F                 	db	63	;'?'
  1078  00F66C  3F                 	db	63	;'?'
  1079  00F66D  3F                 	db	63	;'?'
  1080  00F66E  3F                 	db	63	;'?'
  1081  00F66F  2E                 	db	46
  1082  00F670  2E                 	db	46
  1083  00F671  2E                 	db	46
  1084  00F672  2E                 	db	46
  1085  00F673  2E                 	db	46
  1086  00F674  2E                 	db	46
  1087  00F675  0D                 	db	13
  1088  00F676  0A                 	db	10
  1089  00F677  00                 	db	0
  1090  00F678                     STR_91:
  1091  00F678  2E                 	db	46
  1092  00F679  2E                 	db	46
  1093  00F67A  2E                 	db	46
  1094  00F67B  2E                 	db	46
  1095  00F67C  2E                 	db	46
  1096  00F67D  2E                 	db	46
  1097  00F67E  3F                 	db	63	;'?'
  1098  00F67F  3F                 	db	63	;'?'
  1099  00F680  3F                 	db	63	;'?'
  1100  00F681  3F                 	db	63	;'?'
  1101  00F682  3F                 	db	63	;'?'
  1102  00F683  3F                 	db	63	;'?'
  1103  00F684  3F                 	db	63	;'?'
  1104  00F685  3F                 	db	63	;'?'
  1105  00F686  3F                 	db	63	;'?'
  1106  00F687  3F                 	db	63	;'?'
  1107  00F688  3F                 	db	63	;'?'
  1108  00F689  3F                 	db	63	;'?'
  1109  00F68A  3F                 	db	63	;'?'
  1110  00F68B  3F                 	db	63	;'?'
  1111  00F68C  3F                 	db	63	;'?'
  1112  00F68D  3F                 	db	63	;'?'
  1113  00F68E  3F                 	db	63	;'?'
  1114  00F68F  3F                 	db	63	;'?'
  1115  00F690  3F                 	db	63	;'?'
  1116  00F691  3F                 	db	63	;'?'
  1117  00F692  3F                 	db	63	;'?'
  1118  00F693  3F                 	db	63	;'?'
  1119  00F694  3F                 	db	63	;'?'
  1120  00F695  3F                 	db	63	;'?'
  1121  00F696  3F                 	db	63	;'?'
  1122  00F697  3F                 	db	63	;'?'
  1123  00F698  3F                 	db	63	;'?'
  1124  00F699  3F                 	db	63	;'?'
  1125  00F69A  3F                 	db	63	;'?'
  1126  00F69B  3F                 	db	63	;'?'
  1127  00F69C  3F                 	db	63	;'?'
  1128  00F69D  3F                 	db	63	;'?'
  1129  00F69E  3F                 	db	63	;'?'
  1130  00F69F  3F                 	db	63	;'?'
  1131  00F6A0  3F                 	db	63	;'?'
  1132  00F6A1  3F                 	db	63	;'?'
  1133  00F6A2  3F                 	db	63	;'?'
  1134  00F6A3  3F                 	db	63	;'?'
  1135  00F6A4  3F                 	db	63	;'?'
  1136  00F6A5  3F                 	db	63	;'?'
  1137  00F6A6  3F                 	db	63	;'?'
  1138  00F6A7  3F                 	db	63	;'?'
  1139  00F6A8  3F                 	db	63	;'?'
  1140  00F6A9  3F                 	db	63	;'?'
  1141  00F6AA  3F                 	db	63	;'?'
  1142  00F6AB  3F                 	db	63	;'?'
  1143  00F6AC  3F                 	db	63	;'?'
  1144  00F6AD  2E                 	db	46
  1145  00F6AE  2E                 	db	46
  1146  00F6AF  2E                 	db	46
  1147  00F6B0  2E                 	db	46
  1148  00F6B1  2E                 	db	46
  1149  00F6B2  2E                 	db	46
  1150  00F6B3  0D                 	db	13
  1151  00F6B4  0A                 	db	10
  1152  00F6B5  00                 	db	0
  1153  00F6B6                     STR_108:
  1154  00F6B6  2E                 	db	46
  1155  00F6B7  2E                 	db	46
  1156  00F6B8  2E                 	db	46
  1157  00F6B9  2E                 	db	46
  1158  00F6BA  2E                 	db	46
  1159  00F6BB  3F                 	db	63	;'?'
  1160  00F6BC  3F                 	db	63	;'?'
  1161  00F6BD  3F                 	db	63	;'?'
  1162  00F6BE  3F                 	db	63	;'?'
  1163  00F6BF  3F                 	db	63	;'?'
  1164  00F6C0  3F                 	db	63	;'?'
  1165  00F6C1  3F                 	db	63	;'?'
  1166  00F6C2  3F                 	db	63	;'?'
  1167  00F6C3  3F                 	db	63	;'?'
  1168  00F6C4  3F                 	db	63	;'?'
  1169  00F6C5  3F                 	db	63	;'?'
  1170  00F6C6  3F                 	db	63	;'?'
  1171  00F6C7  3F                 	db	63	;'?'
  1172  00F6C8  3F                 	db	63	;'?'
  1173  00F6C9  3A                 	db	58	;':'
  1174  00F6CA  3A                 	db	58	;':'
  1175  00F6CB  3A                 	db	58	;':'
  1176  00F6CC  3A                 	db	58	;':'
  1177  00F6CD  3F                 	db	63	;'?'
  1178  00F6CE  3F                 	db	63	;'?'
  1179  00F6CF  3F                 	db	63	;'?'
  1180  00F6D0  3F                 	db	63	;'?'
  1181  00F6D1  3F                 	db	63	;'?'
  1182  00F6D2  3F                 	db	63	;'?'
  1183  00F6D3  3F                 	db	63	;'?'
  1184  00F6D4  3F                 	db	63	;'?'
  1185  00F6D5  3F                 	db	63	;'?'
  1186  00F6D6  3F                 	db	63	;'?'
  1187  00F6D7  3F                 	db	63	;'?'
  1188  00F6D8  3F                 	db	63	;'?'
  1189  00F6D9  3F                 	db	63	;'?'
  1190  00F6DA  3A                 	db	58	;':'
  1191  00F6DB  3A                 	db	58	;':'
  1192  00F6DC  3A                 	db	58	;':'
  1193  00F6DD  3A                 	db	58	;':'
  1194  00F6DE  3F                 	db	63	;'?'
  1195  00F6DF  3F                 	db	63	;'?'
  1196  00F6E0  3F                 	db	63	;'?'
  1197  00F6E1  3F                 	db	63	;'?'
  1198  00F6E2  3F                 	db	63	;'?'
  1199  00F6E3  3F                 	db	63	;'?'
  1200  00F6E4  3F                 	db	63	;'?'
  1201  00F6E5  3F                 	db	63	;'?'
  1202  00F6E6  3F                 	db	63	;'?'
  1203  00F6E7  3F                 	db	63	;'?'
  1204  00F6E8  3F                 	db	63	;'?'
  1205  00F6E9  3F                 	db	63	;'?'
  1206  00F6EA  3F                 	db	63	;'?'
  1207  00F6EB  3F                 	db	63	;'?'
  1208  00F6EC  2E                 	db	46
  1209  00F6ED  2E                 	db	46
  1210  00F6EE  2E                 	db	46
  1211  00F6EF  2E                 	db	46
  1212  00F6F0  2E                 	db	46
  1213  00F6F1  0D                 	db	13
  1214  00F6F2  0A                 	db	10
  1215  00F6F3  00                 	db	0
  1216  00F6F4                     STR_92:
  1217  00F6F4  2E                 	db	46
  1218  00F6F5  2E                 	db	46
  1219  00F6F6  2E                 	db	46
  1220  00F6F7  2E                 	db	46
  1221  00F6F8  2E                 	db	46
  1222  00F6F9  3F                 	db	63	;'?'
  1223  00F6FA  3F                 	db	63	;'?'
  1224  00F6FB  3F                 	db	63	;'?'
  1225  00F6FC  3F                 	db	63	;'?'
  1226  00F6FD  3F                 	db	63	;'?'
  1227  00F6FE  3F                 	db	63	;'?'
  1228  00F6FF  3F                 	db	63	;'?'
  1229  00F700  3F                 	db	63	;'?'
  1230  00F701  3F                 	db	63	;'?'
  1231  00F702  3F                 	db	63	;'?'
  1232  00F703  3F                 	db	63	;'?'
  1233  00F704  3F                 	db	63	;'?'
  1234  00F705  3F                 	db	63	;'?'
  1235  00F706  3F                 	db	63	;'?'
  1236  00F707  3F                 	db	63	;'?'
  1237  00F708  3F                 	db	63	;'?'
  1238  00F709  3F                 	db	63	;'?'
  1239  00F70A  3F                 	db	63	;'?'
  1240  00F70B  3F                 	db	63	;'?'
  1241  00F70C  3F                 	db	63	;'?'
  1242  00F70D  3F                 	db	63	;'?'
  1243  00F70E  3F                 	db	63	;'?'
  1244  00F70F  3F                 	db	63	;'?'
  1245  00F710  3F                 	db	63	;'?'
  1246  00F711  3F                 	db	63	;'?'
  1247  00F712  3F                 	db	63	;'?'
  1248  00F713  3F                 	db	63	;'?'
  1249  00F714  3F                 	db	63	;'?'
  1250  00F715  3F                 	db	63	;'?'
  1251  00F716  3F                 	db	63	;'?'
  1252  00F717  3F                 	db	63	;'?'
  1253  00F718  3F                 	db	63	;'?'
  1254  00F719  3F                 	db	63	;'?'
  1255  00F71A  3F                 	db	63	;'?'
  1256  00F71B  3F                 	db	63	;'?'
  1257  00F71C  3F                 	db	63	;'?'
  1258  00F71D  3F                 	db	63	;'?'
  1259  00F71E  3F                 	db	63	;'?'
  1260  00F71F  3F                 	db	63	;'?'
  1261  00F720  3F                 	db	63	;'?'
  1262  00F721  3F                 	db	63	;'?'
  1263  00F722  3F                 	db	63	;'?'
  1264  00F723  3F                 	db	63	;'?'
  1265  00F724  3F                 	db	63	;'?'
  1266  00F725  3F                 	db	63	;'?'
  1267  00F726  3F                 	db	63	;'?'
  1268  00F727  3F                 	db	63	;'?'
  1269  00F728  3F                 	db	63	;'?'
  1270  00F729  3F                 	db	63	;'?'
  1271  00F72A  2E                 	db	46
  1272  00F72B  2E                 	db	46
  1273  00F72C  2E                 	db	46
  1274  00F72D  2E                 	db	46
  1275  00F72E  2E                 	db	46
  1276  00F72F  0D                 	db	13
  1277  00F730  0A                 	db	10
  1278  00F731  00                 	db	0
  1279  00F732                     STR_93:
  1280  00F732  2E                 	db	46
  1281  00F733  2E                 	db	46
  1282  00F734  2E                 	db	46
  1283  00F735  2E                 	db	46
  1284  00F736  3F                 	db	63	;'?'
  1285  00F737  3F                 	db	63	;'?'
  1286  00F738  3F                 	db	63	;'?'
  1287  00F739  3F                 	db	63	;'?'
  1288  00F73A  3A                 	db	58	;':'
  1289  00F73B  3A                 	db	58	;':'
  1290  00F73C  3A                 	db	58	;':'
  1291  00F73D  3A                 	db	58	;':'
  1292  00F73E  3A                 	db	58	;':'
  1293  00F73F  3A                 	db	58	;':'
  1294  00F740  3A                 	db	58	;':'
  1295  00F741  3A                 	db	58	;':'
  1296  00F742  3A                 	db	58	;':'
  1297  00F743  3A                 	db	58	;':'
  1298  00F744  3A                 	db	58	;':'
  1299  00F745  3F                 	db	63	;'?'
  1300  00F746  3F                 	db	63	;'?'
  1301  00F747  3F                 	db	63	;'?'
  1302  00F748  3F                 	db	63	;'?'
  1303  00F749  3F                 	db	63	;'?'
  1304  00F74A  3F                 	db	63	;'?'
  1305  00F74B  3F                 	db	63	;'?'
  1306  00F74C  3F                 	db	63	;'?'
  1307  00F74D  3F                 	db	63	;'?'
  1308  00F74E  3F                 	db	63	;'?'
  1309  00F74F  3F                 	db	63	;'?'
  1310  00F750  3F                 	db	63	;'?'
  1311  00F751  3F                 	db	63	;'?'
  1312  00F752  3F                 	db	63	;'?'
  1313  00F753  3F                 	db	63	;'?'
  1314  00F754  3F                 	db	63	;'?'
  1315  00F755  3F                 	db	63	;'?'
  1316  00F756  3F                 	db	63	;'?'
  1317  00F757  3F                 	db	63	;'?'
  1318  00F758  3F                 	db	63	;'?'
  1319  00F759  3F                 	db	63	;'?'
  1320  00F75A  3A                 	db	58	;':'
  1321  00F75B  3A                 	db	58	;':'
  1322  00F75C  3A                 	db	58	;':'
  1323  00F75D  3A                 	db	58	;':'
  1324  00F75E  3A                 	db	58	;':'
  1325  00F75F  3A                 	db	58	;':'
  1326  00F760  3A                 	db	58	;':'
  1327  00F761  3A                 	db	58	;':'
  1328  00F762  3A                 	db	58	;':'
  1329  00F763  3A                 	db	58	;':'
  1330  00F764  3A                 	db	58	;':'
  1331  00F765  3F                 	db	63	;'?'
  1332  00F766  3F                 	db	63	;'?'
  1333  00F767  3F                 	db	63	;'?'
  1334  00F768  3F                 	db	63	;'?'
  1335  00F769  2E                 	db	46
  1336  00F76A  2E                 	db	46
  1337  00F76B  2E                 	db	46
  1338  00F76C  2E                 	db	46
  1339  00F76D  0D                 	db	13
  1340  00F76E  0A                 	db	10
  1341  00F76F  00                 	db	0
  1342  00F770                     STR_107:
  1343  00F770  2E                 	db	46
  1344  00F771  2E                 	db	46
  1345  00F772  2E                 	db	46
  1346  00F773  2E                 	db	46
  1347  00F774  3F                 	db	63	;'?'
  1348  00F775  3F                 	db	63	;'?'
  1349  00F776  3F                 	db	63	;'?'
  1350  00F777  3F                 	db	63	;'?'
  1351  00F778  3F                 	db	63	;'?'
  1352  00F779  3F                 	db	63	;'?'
  1353  00F77A  3F                 	db	63	;'?'
  1354  00F77B  3F                 	db	63	;'?'
  1355  00F77C  3F                 	db	63	;'?'
  1356  00F77D  3F                 	db	63	;'?'
  1357  00F77E  3F                 	db	63	;'?'
  1358  00F77F  3F                 	db	63	;'?'
  1359  00F780  3F                 	db	63	;'?'
  1360  00F781  3F                 	db	63	;'?'
  1361  00F782  3A                 	db	58	;':'
  1362  00F783  3A                 	db	58	;':'
  1363  00F784  3A                 	db	58	;':'
  1364  00F785  3F                 	db	63	;'?'
  1365  00F786  3F                 	db	63	;'?'
  1366  00F787  3F                 	db	63	;'?'
  1367  00F788  3F                 	db	63	;'?'
  1368  00F789  3F                 	db	63	;'?'
  1369  00F78A  3F                 	db	63	;'?'
  1370  00F78B  3F                 	db	63	;'?'
  1371  00F78C  3F                 	db	63	;'?'
  1372  00F78D  3F                 	db	63	;'?'
  1373  00F78E  3F                 	db	63	;'?'
  1374  00F78F  3F                 	db	63	;'?'
  1375  00F790  3F                 	db	63	;'?'
  1376  00F791  3F                 	db	63	;'?'
  1377  00F792  3F                 	db	63	;'?'
  1378  00F793  3F                 	db	63	;'?'
  1379  00F794  3F                 	db	63	;'?'
  1380  00F795  3F                 	db	63	;'?'
  1381  00F796  3A                 	db	58	;':'
  1382  00F797  3A                 	db	58	;':'
  1383  00F798  3A                 	db	58	;':'
  1384  00F799  3F                 	db	63	;'?'
  1385  00F79A  3F                 	db	63	;'?'
  1386  00F79B  3F                 	db	63	;'?'
  1387  00F79C  3F                 	db	63	;'?'
  1388  00F79D  3F                 	db	63	;'?'
  1389  00F79E  3F                 	db	63	;'?'
  1390  00F79F  3F                 	db	63	;'?'
  1391  00F7A0  3F                 	db	63	;'?'
  1392  00F7A1  3F                 	db	63	;'?'
  1393  00F7A2  3F                 	db	63	;'?'
  1394  00F7A3  3F                 	db	63	;'?'
  1395  00F7A4  3F                 	db	63	;'?'
  1396  00F7A5  3F                 	db	63	;'?'
  1397  00F7A6  3F                 	db	63	;'?'
  1398  00F7A7  2E                 	db	46
  1399  00F7A8  2E                 	db	46
  1400  00F7A9  2E                 	db	46
  1401  00F7AA  2E                 	db	46
  1402  00F7AB  0D                 	db	13
  1403  00F7AC  0A                 	db	10
  1404  00F7AD  00                 	db	0
  1405  00F7AE                     STR_94:
  1406  00F7AE  2E                 	db	46
  1407  00F7AF  2E                 	db	46
  1408  00F7B0  2E                 	db	46
  1409  00F7B1  3F                 	db	63	;'?'
  1410  00F7B2  3F                 	db	63	;'?'
  1411  00F7B3  3A                 	db	58	;':'
  1412  00F7B4  3A                 	db	58	;':'
  1413  00F7B5  3A                 	db	58	;':'
  1414  00F7B6  3A                 	db	58	;':'
  1415  00F7B7  3A                 	db	58	;':'
  1416  00F7B8  3A                 	db	58	;':'
  1417  00F7B9  3A                 	db	58	;':'
  1418  00F7BA  3A                 	db	58	;':'
  1419  00F7BB  3A                 	db	58	;':'
  1420  00F7BC  3A                 	db	58	;':'
  1421  00F7BD  3A                 	db	58	;':'
  1422  00F7BE  3A                 	db	58	;':'
  1423  00F7BF  3A                 	db	58	;':'
  1424  00F7C0  3A                 	db	58	;':'
  1425  00F7C1  3A                 	db	58	;':'
  1426  00F7C2  3A                 	db	58	;':'
  1427  00F7C3  3A                 	db	58	;':'
  1428  00F7C4  3A                 	db	58	;':'
  1429  00F7C5  3A                 	db	58	;':'
  1430  00F7C6  3A                 	db	58	;':'
  1431  00F7C7  3F                 	db	63	;'?'
  1432  00F7C8  3F                 	db	63	;'?'
  1433  00F7C9  3F                 	db	63	;'?'
  1434  00F7CA  3F                 	db	63	;'?'
  1435  00F7CB  3F                 	db	63	;'?'
  1436  00F7CC  3F                 	db	63	;'?'
  1437  00F7CD  3F                 	db	63	;'?'
  1438  00F7CE  3F                 	db	63	;'?'
  1439  00F7CF  3F                 	db	63	;'?'
  1440  00F7D0  3A                 	db	58	;':'
  1441  00F7D1  3A                 	db	58	;':'
  1442  00F7D2  3A                 	db	58	;':'
  1443  00F7D3  3A                 	db	58	;':'
  1444  00F7D4  3A                 	db	58	;':'
  1445  00F7D5  3A                 	db	58	;':'
  1446  00F7D6  3A                 	db	58	;':'
  1447  00F7D7  3A                 	db	58	;':'
  1448  00F7D8  3A                 	db	58	;':'
  1449  00F7D9  3A                 	db	58	;':'
  1450  00F7DA  3A                 	db	58	;':'
  1451  00F7DB  3A                 	db	58	;':'
  1452  00F7DC  3A                 	db	58	;':'
  1453  00F7DD  3A                 	db	58	;':'
  1454  00F7DE  3A                 	db	58	;':'
  1455  00F7DF  3A                 	db	58	;':'
  1456  00F7E0  3A                 	db	58	;':'
  1457  00F7E1  3A                 	db	58	;':'
  1458  00F7E2  3A                 	db	58	;':'
  1459  00F7E3  3A                 	db	58	;':'
  1460  00F7E4  3F                 	db	63	;'?'
  1461  00F7E5  3F                 	db	63	;'?'
  1462  00F7E6  2E                 	db	46
  1463  00F7E7  2E                 	db	46
  1464  00F7E8  2E                 	db	46
  1465  00F7E9  0D                 	db	13
  1466  00F7EA  0A                 	db	10
  1467  00F7EB  00                 	db	0
  1468  00F7EC                     STR_105:
  1469  00F7EC  2E                 	db	46
  1470  00F7ED  2E                 	db	46
  1471  00F7EE  2E                 	db	46
  1472  00F7EF  3F                 	db	63	;'?'
  1473  00F7F0  3F                 	db	63	;'?'
  1474  00F7F1  3F                 	db	63	;'?'
  1475  00F7F2  3F                 	db	63	;'?'
  1476  00F7F3  3F                 	db	63	;'?'
  1477  00F7F4  3F                 	db	63	;'?'
  1478  00F7F5  3F                 	db	63	;'?'
  1479  00F7F6  3F                 	db	63	;'?'
  1480  00F7F7  3F                 	db	63	;'?'
  1481  00F7F8  3F                 	db	63	;'?'
  1482  00F7F9  3F                 	db	63	;'?'
  1483  00F7FA  3F                 	db	63	;'?'
  1484  00F7FB  3F                 	db	63	;'?'
  1485  00F7FC  3A                 	db	58	;':'
  1486  00F7FD  3A                 	db	58	;':'
  1487  00F7FE  3A                 	db	58	;':'
  1488  00F7FF  3F                 	db	63	;'?'
  1489  00F800  3F                 	db	63	;'?'
  1490  00F801  3F                 	db	63	;'?'
  1491  00F802  3F                 	db	63	;'?'
  1492  00F803  3F                 	db	63	;'?'
  1493  00F804  3F                 	db	63	;'?'
  1494  00F805  3F                 	db	63	;'?'
  1495  00F806  3F                 	db	63	;'?'
  1496  00F807  3F                 	db	63	;'?'
  1497  00F808  3F                 	db	63	;'?'
  1498  00F809  3F                 	db	63	;'?'
  1499  00F80A  3F                 	db	63	;'?'
  1500  00F80B  3F                 	db	63	;'?'
  1501  00F80C  3F                 	db	63	;'?'
  1502  00F80D  3F                 	db	63	;'?'
  1503  00F80E  3F                 	db	63	;'?'
  1504  00F80F  3F                 	db	63	;'?'
  1505  00F810  3F                 	db	63	;'?'
  1506  00F811  3F                 	db	63	;'?'
  1507  00F812  3F                 	db	63	;'?'
  1508  00F813  3F                 	db	63	;'?'
  1509  00F814  3A                 	db	58	;':'
  1510  00F815  3A                 	db	58	;':'
  1511  00F816  3A                 	db	58	;':'
  1512  00F817  3F                 	db	63	;'?'
  1513  00F818  3F                 	db	63	;'?'
  1514  00F819  3F                 	db	63	;'?'
  1515  00F81A  3F                 	db	63	;'?'
  1516  00F81B  3F                 	db	63	;'?'
  1517  00F81C  3F                 	db	63	;'?'
  1518  00F81D  3F                 	db	63	;'?'
  1519  00F81E  3F                 	db	63	;'?'
  1520  00F81F  3F                 	db	63	;'?'
  1521  00F820  3F                 	db	63	;'?'
  1522  00F821  3F                 	db	63	;'?'
  1523  00F822  3F                 	db	63	;'?'
  1524  00F823  3F                 	db	63	;'?'
  1525  00F824  2E                 	db	46
  1526  00F825  2E                 	db	46
  1527  00F826  2E                 	db	46
  1528  00F827  0D                 	db	13
  1529  00F828  0A                 	db	10
  1530  00F829  00                 	db	0
  1531  00F82A                     STR_106:
  1532  00F82A  2E                 	db	46
  1533  00F82B  2E                 	db	46
  1534  00F82C  2E                 	db	46
  1535  00F82D  2E                 	db	46
  1536  00F82E  3F                 	db	63	;'?'
  1537  00F82F  3F                 	db	63	;'?'
  1538  00F830  3F                 	db	63	;'?'
  1539  00F831  3F                 	db	63	;'?'
  1540  00F832  3F                 	db	63	;'?'
  1541  00F833  3F                 	db	63	;'?'
  1542  00F834  3F                 	db	63	;'?'
  1543  00F835  3F                 	db	63	;'?'
  1544  00F836  3F                 	db	63	;'?'
  1545  00F837  3F                 	db	63	;'?'
  1546  00F838  3F                 	db	63	;'?'
  1547  00F839  3F                 	db	63	;'?'
  1548  00F83A  3F                 	db	63	;'?'
  1549  00F83B  3A                 	db	58	;':'
  1550  00F83C  3A                 	db	58	;':'
  1551  00F83D  3A                 	db	58	;':'
  1552  00F83E  3F                 	db	63	;'?'
  1553  00F83F  3F                 	db	63	;'?'
  1554  00F840  3F                 	db	63	;'?'
  1555  00F841  3F                 	db	63	;'?'
  1556  00F842  3F                 	db	63	;'?'
  1557  00F843  3F                 	db	63	;'?'
  1558  00F844  3F                 	db	63	;'?'
  1559  00F845  3F                 	db	63	;'?'
  1560  00F846  3F                 	db	63	;'?'
  1561  00F847  3F                 	db	63	;'?'
  1562  00F848  3F                 	db	63	;'?'
  1563  00F849  3F                 	db	63	;'?'
  1564  00F84A  3F                 	db	63	;'?'
  1565  00F84B  3F                 	db	63	;'?'
  1566  00F84C  3F                 	db	63	;'?'
  1567  00F84D  3F                 	db	63	;'?'
  1568  00F84E  3F                 	db	63	;'?'
  1569  00F84F  3F                 	db	63	;'?'
  1570  00F850  3F                 	db	63	;'?'
  1571  00F851  3A                 	db	58	;':'
  1572  00F852  3A                 	db	58	;':'
  1573  00F853  3A                 	db	58	;':'
  1574  00F854  3F                 	db	63	;'?'
  1575  00F855  3F                 	db	63	;'?'
  1576  00F856  3F                 	db	63	;'?'
  1577  00F857  3F                 	db	63	;'?'
  1578  00F858  3F                 	db	63	;'?'
  1579  00F859  3F                 	db	63	;'?'
  1580  00F85A  3F                 	db	63	;'?'
  1581  00F85B  3F                 	db	63	;'?'
  1582  00F85C  3F                 	db	63	;'?'
  1583  00F85D  3F                 	db	63	;'?'
  1584  00F85E  3F                 	db	63	;'?'
  1585  00F85F  3F                 	db	63	;'?'
  1586  00F860  3F                 	db	63	;'?'
  1587  00F861  3F                 	db	63	;'?'
  1588  00F862  2E                 	db	46
  1589  00F863  2E                 	db	46
  1590  00F864  2E                 	db	46
  1591  00F865  0D                 	db	13
  1592  00F866  0A                 	db	10
  1593  00F867  00                 	db	0
  1594  00F868                     STR_95:
  1595  00F868  2E                 	db	46
  1596  00F869  2E                 	db	46
  1597  00F86A  3F                 	db	63	;'?'
  1598  00F86B  3F                 	db	63	;'?'
  1599  00F86C  3F                 	db	63	;'?'
  1600  00F86D  3A                 	db	58	;':'
  1601  00F86E  3A                 	db	58	;':'
  1602  00F86F  3A                 	db	58	;':'
  1603  00F870  3A                 	db	58	;':'
  1604  00F871  3A                 	db	58	;':'
  1605  00F872  3A                 	db	58	;':'
  1606  00F873  3A                 	db	58	;':'
  1607  00F874  3A                 	db	58	;':'
  1608  00F875  3A                 	db	58	;':'
  1609  00F876  3A                 	db	58	;':'
  1610  00F877  3A                 	db	58	;':'
  1611  00F878  3A                 	db	58	;':'
  1612  00F879  3A                 	db	58	;':'
  1613  00F87A  3A                 	db	58	;':'
  1614  00F87B  3A                 	db	58	;':'
  1615  00F87C  3A                 	db	58	;':'
  1616  00F87D  3A                 	db	58	;':'
  1617  00F87E  3A                 	db	58	;':'
  1618  00F87F  3A                 	db	58	;':'
  1619  00F880  3A                 	db	58	;':'
  1620  00F881  3A                 	db	58	;':'
  1621  00F882  3A                 	db	58	;':'
  1622  00F883  3A                 	db	58	;':'
  1623  00F884  3A                 	db	58	;':'
  1624  00F885  3A                 	db	58	;':'
  1625  00F886  3A                 	db	58	;':'
  1626  00F887  3A                 	db	58	;':'
  1627  00F888  3A                 	db	58	;':'
  1628  00F889  3A                 	db	58	;':'
  1629  00F88A  3A                 	db	58	;':'
  1630  00F88B  3A                 	db	58	;':'
  1631  00F88C  3A                 	db	58	;':'
  1632  00F88D  3A                 	db	58	;':'
  1633  00F88E  3A                 	db	58	;':'
  1634  00F88F  3A                 	db	58	;':'
  1635  00F890  3A                 	db	58	;':'
  1636  00F891  3A                 	db	58	;':'
  1637  00F892  3A                 	db	58	;':'
  1638  00F893  3A                 	db	58	;':'
  1639  00F894  3A                 	db	58	;':'
  1640  00F895  3A                 	db	58	;':'
  1641  00F896  3A                 	db	58	;':'
  1642  00F897  3A                 	db	58	;':'
  1643  00F898  3A                 	db	58	;':'
  1644  00F899  3A                 	db	58	;':'
  1645  00F89A  3A                 	db	58	;':'
  1646  00F89B  3A                 	db	58	;':'
  1647  00F89C  3A                 	db	58	;':'
  1648  00F89D  3A                 	db	58	;':'
  1649  00F89E  3F                 	db	63	;'?'
  1650  00F89F  3F                 	db	63	;'?'
  1651  00F8A0  3F                 	db	63	;'?'
  1652  00F8A1  2E                 	db	46
  1653  00F8A2  2E                 	db	46
  1654  00F8A3  0D                 	db	13
  1655  00F8A4  0A                 	db	10
  1656  00F8A5  00                 	db	0
  1657  00F8A6                     STR_96:
  1658  00F8A6  2E                 	db	46
  1659  00F8A7  2E                 	db	46
  1660  00F8A8  3F                 	db	63	;'?'
  1661  00F8A9  3F                 	db	63	;'?'
  1662  00F8AA  3F                 	db	63	;'?'
  1663  00F8AB  3F                 	db	63	;'?'
  1664  00F8AC  3A                 	db	58	;':'
  1665  00F8AD  3A                 	db	58	;':'
  1666  00F8AE  3A                 	db	58	;':'
  1667  00F8AF  3A                 	db	58	;':'
  1668  00F8B0  3A                 	db	58	;':'
  1669  00F8B1  3A                 	db	58	;':'
  1670  00F8B2  3A                 	db	58	;':'
  1671  00F8B3  3A                 	db	58	;':'
  1672  00F8B4  3A                 	db	58	;':'
  1673  00F8B5  3A                 	db	58	;':'
  1674  00F8B6  3A                 	db	58	;':'
  1675  00F8B7  3A                 	db	58	;':'
  1676  00F8B8  3A                 	db	58	;':'
  1677  00F8B9  3A                 	db	58	;':'
  1678  00F8BA  3A                 	db	58	;':'
  1679  00F8BB  3A                 	db	58	;':'
  1680  00F8BC  3A                 	db	58	;':'
  1681  00F8BD  3A                 	db	58	;':'
  1682  00F8BE  3A                 	db	58	;':'
  1683  00F8BF  3A                 	db	58	;':'
  1684  00F8C0  3A                 	db	58	;':'
  1685  00F8C1  3A                 	db	58	;':'
  1686  00F8C2  3F                 	db	63	;'?'
  1687  00F8C3  3F                 	db	63	;'?'
  1688  00F8C4  3F                 	db	63	;'?'
  1689  00F8C5  3A                 	db	58	;':'
  1690  00F8C6  3A                 	db	58	;':'
  1691  00F8C7  3A                 	db	58	;':'
  1692  00F8C8  3A                 	db	58	;':'
  1693  00F8C9  3A                 	db	58	;':'
  1694  00F8CA  3A                 	db	58	;':'
  1695  00F8CB  3A                 	db	58	;':'
  1696  00F8CC  3A                 	db	58	;':'
  1697  00F8CD  3A                 	db	58	;':'
  1698  00F8CE  3A                 	db	58	;':'
  1699  00F8CF  3A                 	db	58	;':'
  1700  00F8D0  3A                 	db	58	;':'
  1701  00F8D1  3A                 	db	58	;':'
  1702  00F8D2  3A                 	db	58	;':'
  1703  00F8D3  3A                 	db	58	;':'
  1704  00F8D4  3A                 	db	58	;':'
  1705  00F8D5  3A                 	db	58	;':'
  1706  00F8D6  3A                 	db	58	;':'
  1707  00F8D7  3A                 	db	58	;':'
  1708  00F8D8  3A                 	db	58	;':'
  1709  00F8D9  3A                 	db	58	;':'
  1710  00F8DA  3A                 	db	58	;':'
  1711  00F8DB  3F                 	db	63	;'?'
  1712  00F8DC  3F                 	db	63	;'?'
  1713  00F8DD  3F                 	db	63	;'?'
  1714  00F8DE  3F                 	db	63	;'?'
  1715  00F8DF  2E                 	db	46
  1716  00F8E0  2E                 	db	46
  1717  00F8E1  0D                 	db	13
  1718  00F8E2  0A                 	db	10
  1719  00F8E3  00                 	db	0
  1720  00F8E4                     STR_104:
  1721  00F8E4  2E                 	db	46
  1722  00F8E5  2E                 	db	46
  1723  00F8E6  2E                 	db	46
  1724  00F8E7  3F                 	db	63	;'?'
  1725  00F8E8  3F                 	db	63	;'?'
  1726  00F8E9  3F                 	db	63	;'?'
  1727  00F8EA  3F                 	db	63	;'?'
  1728  00F8EB  3F                 	db	63	;'?'
  1729  00F8EC  3F                 	db	63	;'?'
  1730  00F8ED  3F                 	db	63	;'?'
  1731  00F8EE  3F                 	db	63	;'?'
  1732  00F8EF  3F                 	db	63	;'?'
  1733  00F8F0  3F                 	db	63	;'?'
  1734  00F8F1  3F                 	db	63	;'?'
  1735  00F8F2  3F                 	db	63	;'?'
  1736  00F8F3  3F                 	db	63	;'?'
  1737  00F8F4  3F                 	db	63	;'?'
  1738  00F8F5  3F                 	db	63	;'?'
  1739  00F8F6  3F                 	db	63	;'?'
  1740  00F8F7  3F                 	db	63	;'?'
  1741  00F8F8  3F                 	db	63	;'?'
  1742  00F8F9  3F                 	db	63	;'?'
  1743  00F8FA  3F                 	db	63	;'?'
  1744  00F8FB  3F                 	db	63	;'?'
  1745  00F8FC  3F                 	db	63	;'?'
  1746  00F8FD  3F                 	db	63	;'?'
  1747  00F8FE  3F                 	db	63	;'?'
  1748  00F8FF  3F                 	db	63	;'?'
  1749  00F900  3F                 	db	63	;'?'
  1750  00F901  3F                 	db	63	;'?'
  1751  00F902  3F                 	db	63	;'?'
  1752  00F903  3F                 	db	63	;'?'
  1753  00F904  3F                 	db	63	;'?'
  1754  00F905  3F                 	db	63	;'?'
  1755  00F906  3F                 	db	63	;'?'
  1756  00F907  3F                 	db	63	;'?'
  1757  00F908  3F                 	db	63	;'?'
  1758  00F909  3F                 	db	63	;'?'
  1759  00F90A  3F                 	db	63	;'?'
  1760  00F90B  3F                 	db	63	;'?'
  1761  00F90C  3F                 	db	63	;'?'
  1762  00F90D  3F                 	db	63	;'?'
  1763  00F90E  3F                 	db	63	;'?'
  1764  00F90F  3F                 	db	63	;'?'
  1765  00F910  3F                 	db	63	;'?'
  1766  00F911  3F                 	db	63	;'?'
  1767  00F912  3F                 	db	63	;'?'
  1768  00F913  3F                 	db	63	;'?'
  1769  00F914  3F                 	db	63	;'?'
  1770  00F915  3F                 	db	63	;'?'
  1771  00F916  3F                 	db	63	;'?'
  1772  00F917  3F                 	db	63	;'?'
  1773  00F918  3F                 	db	63	;'?'
  1774  00F919  3F                 	db	63	;'?'
  1775  00F91A  3F                 	db	63	;'?'
  1776  00F91B  3F                 	db	63	;'?'
  1777  00F91C  3F                 	db	63	;'?'
  1778  00F91D  2E                 	db	46
  1779  00F91E  2E                 	db	46
  1780  00F91F  0D                 	db	13
  1781  00F920  0A                 	db	10
  1782  00F921  00                 	db	0
  1783  00F922                     STR_102:
  1784  00F922  2E                 	db	46
  1785  00F923  2E                 	db	46
  1786  00F924  3F                 	db	63	;'?'
  1787  00F925  3F                 	db	63	;'?'
  1788  00F926  3F                 	db	63	;'?'
  1789  00F927  3F                 	db	63	;'?'
  1790  00F928  3F                 	db	63	;'?'
  1791  00F929  3F                 	db	63	;'?'
  1792  00F92A  3F                 	db	63	;'?'
  1793  00F92B  3F                 	db	63	;'?'
  1794  00F92C  3F                 	db	63	;'?'
  1795  00F92D  3F                 	db	63	;'?'
  1796  00F92E  3F                 	db	63	;'?'
  1797  00F92F  3F                 	db	63	;'?'
  1798  00F930  3F                 	db	63	;'?'
  1799  00F931  3F                 	db	63	;'?'
  1800  00F932  3F                 	db	63	;'?'
  1801  00F933  3F                 	db	63	;'?'
  1802  00F934  3F                 	db	63	;'?'
  1803  00F935  3F                 	db	63	;'?'
  1804  00F936  3F                 	db	63	;'?'
  1805  00F937  3F                 	db	63	;'?'
  1806  00F938  3F                 	db	63	;'?'
  1807  00F939  3F                 	db	63	;'?'
  1808  00F93A  3F                 	db	63	;'?'
  1809  00F93B  3F                 	db	63	;'?'
  1810  00F93C  3F                 	db	63	;'?'
  1811  00F93D  3F                 	db	63	;'?'
  1812  00F93E  3F                 	db	63	;'?'
  1813  00F93F  3F                 	db	63	;'?'
  1814  00F940  3F                 	db	63	;'?'
  1815  00F941  3F                 	db	63	;'?'
  1816  00F942  3F                 	db	63	;'?'
  1817  00F943  3F                 	db	63	;'?'
  1818  00F944  3F                 	db	63	;'?'
  1819  00F945  3F                 	db	63	;'?'
  1820  00F946  3F                 	db	63	;'?'
  1821  00F947  3F                 	db	63	;'?'
  1822  00F948  3F                 	db	63	;'?'
  1823  00F949  3F                 	db	63	;'?'
  1824  00F94A  3F                 	db	63	;'?'
  1825  00F94B  3F                 	db	63	;'?'
  1826  00F94C  3F                 	db	63	;'?'
  1827  00F94D  3F                 	db	63	;'?'
  1828  00F94E  3F                 	db	63	;'?'
  1829  00F94F  3F                 	db	63	;'?'
  1830  00F950  3F                 	db	63	;'?'
  1831  00F951  3F                 	db	63	;'?'
  1832  00F952  3F                 	db	63	;'?'
  1833  00F953  3F                 	db	63	;'?'
  1834  00F954  3F                 	db	63	;'?'
  1835  00F955  3F                 	db	63	;'?'
  1836  00F956  3F                 	db	63	;'?'
  1837  00F957  3F                 	db	63	;'?'
  1838  00F958  3F                 	db	63	;'?'
  1839  00F959  3F                 	db	63	;'?'
  1840  00F95A  3F                 	db	63	;'?'
  1841  00F95B  2E                 	db	46
  1842  00F95C  2E                 	db	46
  1843  00F95D  0D                 	db	13
  1844  00F95E  0A                 	db	10
  1845  00F95F  00                 	db	0
  1846  00F960                     STR_97:
  1847  00F960  2E                 	db	46
  1848  00F961  3F                 	db	63	;'?'
  1849  00F962  3F                 	db	63	;'?'
  1850  00F963  3F                 	db	63	;'?'
  1851  00F964  3F                 	db	63	;'?'
  1852  00F965  3F                 	db	63	;'?'
  1853  00F966  3F                 	db	63	;'?'
  1854  00F967  3A                 	db	58	;':'
  1855  00F968  3A                 	db	58	;':'
  1856  00F969  3A                 	db	58	;':'
  1857  00F96A  3A                 	db	58	;':'
  1858  00F96B  3A                 	db	58	;':'
  1859  00F96C  3A                 	db	58	;':'
  1860  00F96D  3A                 	db	58	;':'
  1861  00F96E  3A                 	db	58	;':'
  1862  00F96F  3A                 	db	58	;':'
  1863  00F970  3A                 	db	58	;':'
  1864  00F971  3A                 	db	58	;':'
  1865  00F972  3A                 	db	58	;':'
  1866  00F973  3A                 	db	58	;':'
  1867  00F974  3A                 	db	58	;':'
  1868  00F975  3A                 	db	58	;':'
  1869  00F976  3A                 	db	58	;':'
  1870  00F977  3A                 	db	58	;':'
  1871  00F978  3A                 	db	58	;':'
  1872  00F979  3A                 	db	58	;':'
  1873  00F97A  3A                 	db	58	;':'
  1874  00F97B  3F                 	db	63	;'?'
  1875  00F97C  3F                 	db	63	;'?'
  1876  00F97D  3F                 	db	63	;'?'
  1877  00F97E  3F                 	db	63	;'?'
  1878  00F97F  3F                 	db	63	;'?'
  1879  00F980  3A                 	db	58	;':'
  1880  00F981  3A                 	db	58	;':'
  1881  00F982  3A                 	db	58	;':'
  1882  00F983  3A                 	db	58	;':'
  1883  00F984  3A                 	db	58	;':'
  1884  00F985  3A                 	db	58	;':'
  1885  00F986  3A                 	db	58	;':'
  1886  00F987  3A                 	db	58	;':'
  1887  00F988  3A                 	db	58	;':'
  1888  00F989  3A                 	db	58	;':'
  1889  00F98A  3A                 	db	58	;':'
  1890  00F98B  3A                 	db	58	;':'
  1891  00F98C  3A                 	db	58	;':'
  1892  00F98D  3A                 	db	58	;':'
  1893  00F98E  3A                 	db	58	;':'
  1894  00F98F  3A                 	db	58	;':'
  1895  00F990  3A                 	db	58	;':'
  1896  00F991  3A                 	db	58	;':'
  1897  00F992  3A                 	db	58	;':'
  1898  00F993  3A                 	db	58	;':'
  1899  00F994  3A                 	db	58	;':'
  1900  00F995  3F                 	db	63	;'?'
  1901  00F996  3F                 	db	63	;'?'
  1902  00F997  3F                 	db	63	;'?'
  1903  00F998  3F                 	db	63	;'?'
  1904  00F999  3F                 	db	63	;'?'
  1905  00F99A  2E                 	db	46
  1906  00F99B  0D                 	db	13
  1907  00F99C  0A                 	db	10
  1908  00F99D  00                 	db	0
  1909  00F99E                     STR_98:
  1910  00F99E  2E                 	db	46
  1911  00F99F  3F                 	db	63	;'?'
  1912  00F9A0  3F                 	db	63	;'?'
  1913  00F9A1  3F                 	db	63	;'?'
  1914  00F9A2  3F                 	db	63	;'?'
  1915  00F9A3  3F                 	db	63	;'?'
  1916  00F9A4  3F                 	db	63	;'?'
  1917  00F9A5  3F                 	db	63	;'?'
  1918  00F9A6  3A                 	db	58	;':'
  1919  00F9A7  3A                 	db	58	;':'
  1920  00F9A8  3A                 	db	58	;':'
  1921  00F9A9  3A                 	db	58	;':'
  1922  00F9AA  3A                 	db	58	;':'
  1923  00F9AB  3A                 	db	58	;':'
  1924  00F9AC  3A                 	db	58	;':'
  1925  00F9AD  3A                 	db	58	;':'
  1926  00F9AE  3A                 	db	58	;':'
  1927  00F9AF  3A                 	db	58	;':'
  1928  00F9B0  3A                 	db	58	;':'
  1929  00F9B1  3A                 	db	58	;':'
  1930  00F9B2  3A                 	db	58	;':'
  1931  00F9B3  3A                 	db	58	;':'
  1932  00F9B4  3A                 	db	58	;':'
  1933  00F9B5  3A                 	db	58	;':'
  1934  00F9B6  3A                 	db	58	;':'
  1935  00F9B7  3A                 	db	58	;':'
  1936  00F9B8  3F                 	db	63	;'?'
  1937  00F9B9  3F                 	db	63	;'?'
  1938  00F9BA  3F                 	db	63	;'?'
  1939  00F9BB  3F                 	db	63	;'?'
  1940  00F9BC  3F                 	db	63	;'?'
  1941  00F9BD  3F                 	db	63	;'?'
  1942  00F9BE  3F                 	db	63	;'?'
  1943  00F9BF  3A                 	db	58	;':'
  1944  00F9C0  3A                 	db	58	;':'
  1945  00F9C1  3A                 	db	58	;':'
  1946  00F9C2  3A                 	db	58	;':'
  1947  00F9C3  3A                 	db	58	;':'
  1948  00F9C4  3A                 	db	58	;':'
  1949  00F9C5  3A                 	db	58	;':'
  1950  00F9C6  3A                 	db	58	;':'
  1951  00F9C7  3A                 	db	58	;':'
  1952  00F9C8  3A                 	db	58	;':'
  1953  00F9C9  3A                 	db	58	;':'
  1954  00F9CA  3A                 	db	58	;':'
  1955  00F9CB  3A                 	db	58	;':'
  1956  00F9CC  3A                 	db	58	;':'
  1957  00F9CD  3A                 	db	58	;':'
  1958  00F9CE  3A                 	db	58	;':'
  1959  00F9CF  3A                 	db	58	;':'
  1960  00F9D0  3A                 	db	58	;':'
  1961  00F9D1  3A                 	db	58	;':'
  1962  00F9D2  3F                 	db	63	;'?'
  1963  00F9D3  3F                 	db	63	;'?'
  1964  00F9D4  3F                 	db	63	;'?'
  1965  00F9D5  3F                 	db	63	;'?'
  1966  00F9D6  3F                 	db	63	;'?'
  1967  00F9D7  3F                 	db	63	;'?'
  1968  00F9D8  2E                 	db	46
  1969  00F9D9  0D                 	db	13
  1970  00F9DA  0A                 	db	10
  1971  00F9DB  00                 	db	0
  1972  00F9DC                     STR_99:
  1973  00F9DC  2E                 	db	46
  1974  00F9DD  3F                 	db	63	;'?'
  1975  00F9DE  3F                 	db	63	;'?'
  1976  00F9DF  3F                 	db	63	;'?'
  1977  00F9E0  3F                 	db	63	;'?'
  1978  00F9E1  3F                 	db	63	;'?'
  1979  00F9E2  3F                 	db	63	;'?'
  1980  00F9E3  3F                 	db	63	;'?'
  1981  00F9E4  3A                 	db	58	;':'
  1982  00F9E5  3A                 	db	58	;':'
  1983  00F9E6  3A                 	db	58	;':'
  1984  00F9E7  3A                 	db	58	;':'
  1985  00F9E8  3A                 	db	58	;':'
  1986  00F9E9  3A                 	db	58	;':'
  1987  00F9EA  3A                 	db	58	;':'
  1988  00F9EB  3A                 	db	58	;':'
  1989  00F9EC  3A                 	db	58	;':'
  1990  00F9ED  3A                 	db	58	;':'
  1991  00F9EE  3A                 	db	58	;':'
  1992  00F9EF  3A                 	db	58	;':'
  1993  00F9F0  3A                 	db	58	;':'
  1994  00F9F1  3A                 	db	58	;':'
  1995  00F9F2  3A                 	db	58	;':'
  1996  00F9F3  3A                 	db	58	;':'
  1997  00F9F4  3A                 	db	58	;':'
  1998  00F9F5  3F                 	db	63	;'?'
  1999  00F9F6  3F                 	db	63	;'?'
  2000  00F9F7  3F                 	db	63	;'?'
  2001  00F9F8  3F                 	db	63	;'?'
  2002  00F9F9  3F                 	db	63	;'?'
  2003  00F9FA  3F                 	db	63	;'?'
  2004  00F9FB  3F                 	db	63	;'?'
  2005  00F9FC  3F                 	db	63	;'?'
  2006  00F9FD  3F                 	db	63	;'?'
  2007  00F9FE  3A                 	db	58	;':'
  2008  00F9FF  3A                 	db	58	;':'
  2009  00FA00  3A                 	db	58	;':'
  2010  00FA01  3A                 	db	58	;':'
  2011  00FA02  3A                 	db	58	;':'
  2012  00FA03  3A                 	db	58	;':'
  2013  00FA04  3A                 	db	58	;':'
  2014  00FA05  3A                 	db	58	;':'
  2015  00FA06  3A                 	db	58	;':'
  2016  00FA07  3A                 	db	58	;':'
  2017  00FA08  3A                 	db	58	;':'
  2018  00FA09  3A                 	db	58	;':'
  2019  00FA0A  3A                 	db	58	;':'
  2020  00FA0B  3A                 	db	58	;':'
  2021  00FA0C  3A                 	db	58	;':'
  2022  00FA0D  3A                 	db	58	;':'
  2023  00FA0E  3A                 	db	58	;':'
  2024  00FA0F  3A                 	db	58	;':'
  2025  00FA10  3F                 	db	63	;'?'
  2026  00FA11  3F                 	db	63	;'?'
  2027  00FA12  3F                 	db	63	;'?'
  2028  00FA13  3F                 	db	63	;'?'
  2029  00FA14  3F                 	db	63	;'?'
  2030  00FA15  3F                 	db	63	;'?'
  2031  00FA16  2E                 	db	46
  2032  00FA17  0D                 	db	13
  2033  00FA18  0A                 	db	10
  2034  00FA19  00                 	db	0
  2035  00FA1A                     STR_100:
  2036  00FA1A  2E                 	db	46
  2037  00FA1B  3F                 	db	63	;'?'
  2038  00FA1C  3F                 	db	63	;'?'
  2039  00FA1D  3F                 	db	63	;'?'
  2040  00FA1E  3F                 	db	63	;'?'
  2041  00FA1F  3F                 	db	63	;'?'
  2042  00FA20  3F                 	db	63	;'?'
  2043  00FA21  3F                 	db	63	;'?'
  2044  00FA22  3F                 	db	63	;'?'
  2045  00FA23  3A                 	db	58	;':'
  2046  00FA24  3A                 	db	58	;':'
  2047  00FA25  3A                 	db	58	;':'
  2048  00FA26  3A                 	db	58	;':'
  2049  00FA27  3A                 	db	58	;':'
  2050  00FA28  3A                 	db	58	;':'
  2051  00FA29  3A                 	db	58	;':'
  2052  00FA2A  3A                 	db	58	;':'
  2053  00FA2B  3A                 	db	58	;':'
  2054  00FA2C  3A                 	db	58	;':'
  2055  00FA2D  3A                 	db	58	;':'
  2056  00FA2E  3A                 	db	58	;':'
  2057  00FA2F  3A                 	db	58	;':'
  2058  00FA30  3A                 	db	58	;':'
  2059  00FA31  3A                 	db	58	;':'
  2060  00FA32  3F                 	db	63	;'?'
  2061  00FA33  3F                 	db	63	;'?'
  2062  00FA34  3F                 	db	63	;'?'
  2063  00FA35  3F                 	db	63	;'?'
  2064  00FA36  3F                 	db	63	;'?'
  2065  00FA37  3F                 	db	63	;'?'
  2066  00FA38  3F                 	db	63	;'?'
  2067  00FA39  3F                 	db	63	;'?'
  2068  00FA3A  3F                 	db	63	;'?'
  2069  00FA3B  3F                 	db	63	;'?'
  2070  00FA3C  3F                 	db	63	;'?'
  2071  00FA3D  3A                 	db	58	;':'
  2072  00FA3E  3A                 	db	58	;':'
  2073  00FA3F  3A                 	db	58	;':'
  2074  00FA40  3A                 	db	58	;':'
  2075  00FA41  3A                 	db	58	;':'
  2076  00FA42  3A                 	db	58	;':'
  2077  00FA43  3A                 	db	58	;':'
  2078  00FA44  3A                 	db	58	;':'
  2079  00FA45  3A                 	db	58	;':'
  2080  00FA46  3A                 	db	58	;':'
  2081  00FA47  3A                 	db	58	;':'
  2082  00FA48  3A                 	db	58	;':'
  2083  00FA49  3A                 	db	58	;':'
  2084  00FA4A  3A                 	db	58	;':'
  2085  00FA4B  3A                 	db	58	;':'
  2086  00FA4C  3F                 	db	63	;'?'
  2087  00FA4D  3F                 	db	63	;'?'
  2088  00FA4E  3F                 	db	63	;'?'
  2089  00FA4F  3F                 	db	63	;'?'
  2090  00FA50  3F                 	db	63	;'?'
  2091  00FA51  3F                 	db	63	;'?'
  2092  00FA52  3F                 	db	63	;'?'
  2093  00FA53  3F                 	db	63	;'?'
  2094  00FA54  2E                 	db	46
  2095  00FA55  0D                 	db	13
  2096  00FA56  0A                 	db	10
  2097  00FA57  00                 	db	0
  2098  00FA58                     STR_101:
  2099  00FA58  2E                 	db	46
  2100  00FA59  3F                 	db	63	;'?'
  2101  00FA5A  3F                 	db	63	;'?'
  2102  00FA5B  3F                 	db	63	;'?'
  2103  00FA5C  3F                 	db	63	;'?'
  2104  00FA5D  3F                 	db	63	;'?'
  2105  00FA5E  3F                 	db	63	;'?'
  2106  00FA5F  3F                 	db	63	;'?'
  2107  00FA60  3F                 	db	63	;'?'
  2108  00FA61  3F                 	db	63	;'?'
  2109  00FA62  3F                 	db	63	;'?'
  2110  00FA63  3A                 	db	58	;':'
  2111  00FA64  3A                 	db	58	;':'
  2112  00FA65  3A                 	db	58	;':'
  2113  00FA66  3A                 	db	58	;':'
  2114  00FA67  3A                 	db	58	;':'
  2115  00FA68  3A                 	db	58	;':'
  2116  00FA69  3A                 	db	58	;':'
  2117  00FA6A  3A                 	db	58	;':'
  2118  00FA6B  3A                 	db	58	;':'
  2119  00FA6C  3A                 	db	58	;':'
  2120  00FA6D  3F                 	db	63	;'?'
  2121  00FA6E  3F                 	db	63	;'?'
  2122  00FA6F  3F                 	db	63	;'?'
  2123  00FA70  3F                 	db	63	;'?'
  2124  00FA71  3F                 	db	63	;'?'
  2125  00FA72  3F                 	db	63	;'?'
  2126  00FA73  3F                 	db	63	;'?'
  2127  00FA74  3F                 	db	63	;'?'
  2128  00FA75  3F                 	db	63	;'?'
  2129  00FA76  3F                 	db	63	;'?'
  2130  00FA77  3F                 	db	63	;'?'
  2131  00FA78  3F                 	db	63	;'?'
  2132  00FA79  3F                 	db	63	;'?'
  2133  00FA7A  3F                 	db	63	;'?'
  2134  00FA7B  3F                 	db	63	;'?'
  2135  00FA7C  3F                 	db	63	;'?'
  2136  00FA7D  3F                 	db	63	;'?'
  2137  00FA7E  3A                 	db	58	;':'
  2138  00FA7F  3A                 	db	58	;':'
  2139  00FA80  3A                 	db	58	;':'
  2140  00FA81  3A                 	db	58	;':'
  2141  00FA82  3A                 	db	58	;':'
  2142  00FA83  3A                 	db	58	;':'
  2143  00FA84  3A                 	db	58	;':'
  2144  00FA85  3A                 	db	58	;':'
  2145  00FA86  3A                 	db	58	;':'
  2146  00FA87  3A                 	db	58	;':'
  2147  00FA88  3F                 	db	63	;'?'
  2148  00FA89  3F                 	db	63	;'?'
  2149  00FA8A  3F                 	db	63	;'?'
  2150  00FA8B  3F                 	db	63	;'?'
  2151  00FA8C  3F                 	db	63	;'?'
  2152  00FA8D  3F                 	db	63	;'?'
  2153  00FA8E  3F                 	db	63	;'?'
  2154  00FA8F  3F                 	db	63	;'?'
  2155  00FA90  3F                 	db	63	;'?'
  2156  00FA91  3F                 	db	63	;'?'
  2157  00FA92  2E                 	db	46
  2158  00FA93  0D                 	db	13
  2159  00FA94  0A                 	db	10
  2160  00FA95  00                 	db	0
  2161  00FA96                     STR_49:
  2162  00FA96  59                 	db	89	;'Y'
  2163  00FA97  6F                 	db	111	;'o'
  2164  00FA98  75                 	db	117	;'u'
  2165  00FA99  20                 	db	32
  2166  00FA9A  6D                 	db	109	;'m'
  2167  00FA9B  61                 	db	97	;'a'
  2168  00FA9C  79                 	db	121	;'y'
  2169  00FA9D  20                 	db	32
  2170  00FA9E  74                 	db	116	;'t'
  2171  00FA9F  65                 	db	101	;'e'
  2172  00FAA0  72                 	db	114	;'r'
  2173  00FAA1  6D                 	db	109	;'m'
  2174  00FAA2  69                 	db	105	;'i'
  2175  00FAA3  6E                 	db	110	;'n'
  2176  00FAA4  61                 	db	97	;'a'
  2177  00FAA5  74                 	db	116	;'t'
  2178  00FAA6  65                 	db	101	;'e'
  2179  00FAA7  20                 	db	32
  2180  00FAA8  73                 	db	115	;'s'
  2181  00FAA9  70                 	db	112	;'p'
  2182  00FAAA  6F                 	db	111	;'o'
  2183  00FAAB  6F                 	db	111	;'o'
  2184  00FAAC  6C                 	db	108	;'l'
  2185  00FAAD  69                 	db	105	;'i'
  2186  00FAAE  6E                 	db	110	;'n'
  2187  00FAAF  67                 	db	103	;'g'
  2188  00FAB0  20                 	db	32
  2189  00FAB1  61                 	db	97	;'a'
  2190  00FAB2  74                 	db	116	;'t'
  2191  00FAB3  20                 	db	32
  2192  00FAB4  61                 	db	97	;'a'
  2193  00FAB5  6E                 	db	110	;'n'
  2194  00FAB6  79                 	db	121	;'y'
  2195  00FAB7  74                 	db	116	;'t'
  2196  00FAB8  69                 	db	105	;'i'
  2197  00FAB9  6D                 	db	109	;'m'
  2198  00FABA  65                 	db	101	;'e'
  2199  00FABB  20                 	db	32
  2200  00FABC  77                 	db	119	;'w'
  2201  00FABD  69                 	db	105	;'i'
  2202  00FABE  74                 	db	116	;'t'
  2203  00FABF  68                 	db	104	;'h'
  2204  00FAC0  20                 	db	32
  2205  00FAC1  61                 	db	97	;'a'
  2206  00FAC2  20                 	db	32
  2207  00FAC3  6B                 	db	107	;'k'
  2208  00FAC4  65                 	db	101	;'e'
  2209  00FAC5  79                 	db	121	;'y'
  2210  00FAC6  20                 	db	32
  2211  00FAC7  70                 	db	112	;'p'
  2212  00FAC8  72                 	db	114	;'r'
  2213  00FAC9  65                 	db	101	;'e'
  2214  00FACA  73                 	db	115	;'s'
  2215  00FACB  73                 	db	115	;'s'
  2216  00FACC  2E                 	db	46
  2217  00FACD  0D                 	db	13
  2218  00FACE  0A                 	db	10
  2219  00FACF  00                 	db	0
  2220  00FAD0                     STR_52:
  2221  00FAD0  52                 	db	82	;'R'
  2222  00FAD1  69                 	db	105	;'i'
  2223  00FAD2  67                 	db	103	;'g'
  2224  00FAD3  68                 	db	104	;'h'
  2225  00FAD4  74                 	db	116	;'t'
  2226  00FAD5  20                 	db	32
  2227  00FAD6  6D                 	db	109	;'m'
  2228  00FAD7  6F                 	db	111	;'o'
  2229  00FAD8  75                 	db	117	;'u'
  2230  00FAD9  73                 	db	115	;'s'
  2231  00FADA  65                 	db	101	;'e'
  2232  00FADB  20                 	db	32
  2233  00FADC  63                 	db	99	;'c'
  2234  00FADD  6C                 	db	108	;'l'
  2235  00FADE  69                 	db	105	;'i'
  2236  00FADF  63                 	db	99	;'c'
  2237  00FAE0  6B                 	db	107	;'k'
  2238  00FAE1  20                 	db	32
  2239  00FAE2  6F                 	db	111	;'o'
  2240  00FAE3  6E                 	db	110	;'n'
  2241  00FAE4  20                 	db	32
  2242  00FAE5  74                 	db	116	;'t'
  2243  00FAE6  68                 	db	104	;'h'
  2244  00FAE7  65                 	db	101	;'e'
  2245  00FAE8  20                 	db	32
  2246  00FAE9  75                 	db	117	;'u'
  2247  00FAEA  70                 	db	112	;'p'
  2248  00FAEB  70                 	db	112	;'p'
  2249  00FAEC  65                 	db	101	;'e'
  2250  00FAED  72                 	db	114	;'r'
  2251  00FAEE  20                 	db	32
  2252  00FAEF  6C                 	db	108	;'l'
  2253  00FAF0  65                 	db	101	;'e'
  2254  00FAF1  66                 	db	102	;'f'
  2255  00FAF2  74                 	db	116	;'t'
  2256  00FAF3  20                 	db	32
  2257  00FAF4  6F                 	db	111	;'o'
  2258  00FAF5  66                 	db	102	;'f'
  2259  00FAF6  20                 	db	32
  2260  00FAF7  74                 	db	116	;'t'
  2261  00FAF8  68                 	db	104	;'h'
  2262  00FAF9  65                 	db	101	;'e'
  2263  00FAFA  20                 	db	32
  2264  00FAFB  50                 	db	80	;'P'
  2265  00FAFC  75                 	db	117	;'u'
  2266  00FAFD  54                 	db	84	;'T'
  2267  00FAFE  54                 	db	84	;'T'
  2268  00FAFF  59                 	db	89	;'Y'
  2269  00FB00  20                 	db	32
  2270  00FB01  77                 	db	119	;'w'
  2271  00FB02  69                 	db	105	;'i'
  2272  00FB03  6E                 	db	110	;'n'
  2273  00FB04  64                 	db	100	;'d'
  2274  00FB05  6F                 	db	111	;'o'
  2275  00FB06  77                 	db	119	;'w'
  2276  00FB07  0D                 	db	13
  2277  00FB08  0A                 	db	10
  2278  00FB09  00                 	db	0
  2279  00FB0A                     STR_25:
  2280  00FB0A  31                 	db	49	;'1'
  2281  00FB0B  3A                 	db	58	;':'
  2282  00FB0C  20                 	db	32
  2283  00FB0D  77                 	db	119	;'w'
  2284  00FB0E  72                 	db	114	;'r'
  2285  00FB0F  69                 	db	105	;'i'
  2286  00FB10  74                 	db	116	;'t'
  2287  00FB11  65                 	db	101	;'e'
  2288  00FB12  20                 	db	32
  2289  00FB13  61                 	db	97	;'a'
  2290  00FB14  20                 	db	32
  2291  00FB15  70                 	db	112	;'p'
  2292  00FB16  65                 	db	101	;'e'
  2293  00FB17  72                 	db	114	;'r'
  2294  00FB18  66                 	db	102	;'f'
  2295  00FB19  65                 	db	101	;'e'
  2296  00FB1A  63                 	db	99	;'c'
  2297  00FB1B  74                 	db	116	;'t'
  2298  00FB1C  20                 	db	32
  2299  00FB1D  32                 	db	50	;'2'
  2300  00FB1E  36                 	db	54	;'6'
  2301  00FB1F  20                 	db	32
  2302  00FB20  76                 	db	118	;'v'
  2303  00FB21  61                 	db	97	;'a'
  2304  00FB22  6C                 	db	108	;'l'
  2305  00FB23  75                 	db	117	;'u'
  2306  00FB24  65                 	db	101	;'e'
  2307  00FB25  20                 	db	32
  2308  00FB26  73                 	db	115	;'s'
  2309  00FB27  69                 	db	105	;'i'
  2310  00FB28  6E                 	db	110	;'n'
  2311  00FB29  65                 	db	101	;'e'
  2312  00FB2A  20                 	db	32
  2313  00FB2B  77                 	db	119	;'w'
  2314  00FB2C  61                 	db	97	;'a'
  2315  00FB2D  76                 	db	118	;'v'
  2316  00FB2E  65                 	db	101	;'e'
  2317  00FB2F  20                 	db	32
  2318  00FB30  74                 	db	116	;'t'
  2319  00FB31  6F                 	db	111	;'o'
  2320  00FB32  20                 	db	32
  2321  00FB33  74                 	db	116	;'t'
  2322  00FB34  68                 	db	104	;'h'
  2323  00FB35  65                 	db	101	;'e'
  2324  00FB36  20                 	db	32
  2325  00FB37  53                 	db	83	;'S'
  2326  00FB38  44                 	db	68	;'D'
  2327  00FB39  20                 	db	32
  2328  00FB3A  63                 	db	99	;'c'
  2329  00FB3B  61                 	db	97	;'a'
  2330  00FB3C  72                 	db	114	;'r'
  2331  00FB3D  64                 	db	100	;'d'
  2332  00FB3E  0D                 	db	13
  2333  00FB3F  0A                 	db	10
  2334  00FB40  00                 	db	0
  2335  00FB41                     STR_7:
  2336  00FB41  0D                 	db	13
  2337  00FB42  0A                 	db	10
  2338  00FB43  2D                 	db	45
  2339  00FB44  2D                 	db	45
  2340  00FB45  2D                 	db	45
  2341  00FB46  2D                 	db	45
  2342  00FB47  2D                 	db	45
  2343  00FB48  2D                 	db	45
  2344  00FB49  2D                 	db	45
  2345  00FB4A  2D                 	db	45
  2346  00FB4B  2D                 	db	45
  2347  00FB4C  2D                 	db	45
  2348  00FB4D  2D                 	db	45
  2349  00FB4E  2D                 	db	45
  2350  00FB4F  2D                 	db	45
  2351  00FB50  2D                 	db	45
  2352  00FB51  2D                 	db	45
  2353  00FB52  2D                 	db	45
  2354  00FB53  2D                 	db	45
  2355  00FB54  2D                 	db	45
  2356  00FB55  2D                 	db	45
  2357  00FB56  2D                 	db	45
  2358  00FB57  2D                 	db	45
  2359  00FB58  2D                 	db	45
  2360  00FB59  2D                 	db	45
  2361  00FB5A  2D                 	db	45
  2362  00FB5B  2D                 	db	45
  2363  00FB5C  2D                 	db	45
  2364  00FB5D  2D                 	db	45
  2365  00FB5E  2D                 	db	45
  2366  00FB5F  2D                 	db	45
  2367  00FB60  2D                 	db	45
  2368  00FB61  2D                 	db	45
  2369  00FB62  2D                 	db	45
  2370  00FB63  2D                 	db	45
  2371  00FB64  2D                 	db	45
  2372  00FB65  2D                 	db	45
  2373  00FB66  2D                 	db	45
  2374  00FB67  2D                 	db	45
  2375  00FB68  2D                 	db	45
  2376  00FB69  2D                 	db	45
  2377  00FB6A  2D                 	db	45
  2378  00FB6B  2D                 	db	45
  2379  00FB6C  2D                 	db	45
  2380  00FB6D  2D                 	db	45
  2381  00FB6E  2D                 	db	45
  2382  00FB6F  2D                 	db	45
  2383  00FB70  2D                 	db	45
  2384  00FB71  2D                 	db	45
  2385  00FB72  2D                 	db	45
  2386  00FB73  2D                 	db	45
  2387  00FB74  0D                 	db	13
  2388  00FB75  0A                 	db	10
  2389  00FB76  00                 	db	0
  2390  00FB77                     STR_55:
  2391  00FB77  53                 	db	83	;'S'
  2392  00FB78  65                 	db	101	;'e'
  2393  00FB79  6C                 	db	108	;'l'
  2394  00FB7A  65                 	db	101	;'e'
  2395  00FB7B  63                 	db	99	;'c'
  2396  00FB7C  74                 	db	116	;'t'
  2397  00FB7D  3A                 	db	58	;':'
  2398  00FB7E  20                 	db	32
  2399  00FB7F  20                 	db	32
  2400  00FB80  20                 	db	32
  2401  00FB81  20                 	db	32
  2402  00FB82  20                 	db	32
  2403  00FB83  53                 	db	83	;'S'
  2404  00FB84  65                 	db	101	;'e'
  2405  00FB85  73                 	db	115	;'s'
  2406  00FB86  73                 	db	115	;'s'
  2407  00FB87  69                 	db	105	;'i'
  2408  00FB88  6F                 	db	111	;'o'
  2409  00FB89  6E                 	db	110	;'n'
  2410  00FB8A  20                 	db	32
  2411  00FB8B  6C                 	db	108	;'l'
  2412  00FB8C  6F                 	db	111	;'o'
  2413  00FB8D  67                 	db	103	;'g'
  2414  00FB8E  67                 	db	103	;'g'
  2415  00FB8F  69                 	db	105	;'i'
  2416  00FB90  6E                 	db	110	;'n'
  2417  00FB91  67                 	db	103	;'g'
  2418  00FB92  3A                 	db	58	;':'
  2419  00FB93  20                 	db	32
  2420  00FB94  41                 	db	65	;'A'
  2421  00FB95  6C                 	db	108	;'l'
  2422  00FB96  6C                 	db	108	;'l'
  2423  00FB97  20                 	db	32
  2424  00FB98  73                 	db	115	;'s'
  2425  00FB99  65                 	db	101	;'e'
  2426  00FB9A  73                 	db	115	;'s'
  2427  00FB9B  73                 	db	115	;'s'
  2428  00FB9C  69                 	db	105	;'i'
  2429  00FB9D  6F                 	db	111	;'o'
  2430  00FB9E  6E                 	db	110	;'n'
  2431  00FB9F  20                 	db	32
  2432  00FBA0  6F                 	db	111	;'o'
  2433  00FBA1  75                 	db	117	;'u'
  2434  00FBA2  74                 	db	116	;'t'
  2435  00FBA3  70                 	db	112	;'p'
  2436  00FBA4  75                 	db	117	;'u'
  2437  00FBA5  74                 	db	116	;'t'
  2438  00FBA6  0D                 	db	13
  2439  00FBA7  0A                 	db	10
  2440  00FBA8  00                 	db	0
  2441  00FBA9                     STR_27:
  2442  00FBA9  2B                 	db	43
  2443  00FBAA  2F                 	db	47
  2444  00FBAB  2D                 	db	45
  2445  00FBAC  20                 	db	32
  2446  00FBAD  49                 	db	73	;'I'
  2447  00FBAE  6E                 	db	110	;'n'
  2448  00FBAF  63                 	db	99	;'c'
  2449  00FBB0  72                 	db	114	;'r'
  2450  00FBB1  65                 	db	101	;'e'
  2451  00FBB2  61                 	db	97	;'a'
  2452  00FBB3  73                 	db	115	;'s'
  2453  00FBB4  65                 	db	101	;'e'
  2454  00FBB5  2F                 	db	47
  2455  00FBB6  44                 	db	68	;'D'
  2456  00FBB7  65                 	db	101	;'e'
  2457  00FBB8  63                 	db	99	;'c'
  2458  00FBB9  72                 	db	114	;'r'
  2459  00FBBA  65                 	db	101	;'e'
  2460  00FBBB  61                 	db	97	;'a'
  2461  00FBBC  73                 	db	115	;'s'
  2462  00FBBD  65                 	db	101	;'e'
  2463  00FBBE  20                 	db	32
  2464  00FBBF  74                 	db	116	;'t'
  2465  00FBC0  68                 	db	104	;'h'
  2466  00FBC1  65                 	db	101	;'e'
  2467  00FBC2  20                 	db	32
  2468  00FBC3  73                 	db	115	;'s'
  2469  00FBC4  61                 	db	97	;'a'
  2470  00FBC5  6D                 	db	109	;'m'
  2471  00FBC6  70                 	db	112	;'p'
  2472  00FBC7  6C                 	db	108	;'l'
  2473  00FBC8  65                 	db	101	;'e'
  2474  00FBC9  20                 	db	32
  2475  00FBCA  72                 	db	114	;'r'
  2476  00FBCB  61                 	db	97	;'a'
  2477  00FBCC  74                 	db	116	;'t'
  2478  00FBCD  65                 	db	101	;'e'
  2479  00FBCE  20                 	db	32
  2480  00FBCF  62                 	db	98	;'b'
  2481  00FBD0  79                 	db	121	;'y'
  2482  00FBD1  20                 	db	32
  2483  00FBD2  31                 	db	49	;'1'
  2484  00FBD3  30                 	db	48	;'0'
  2485  00FBD4  20                 	db	32
  2486  00FBD5  75                 	db	117	;'u'
  2487  00FBD6  73                 	db	115	;'s'
  2488  00FBD7  0D                 	db	13
  2489  00FBD8  0A                 	db	10
  2490  00FBD9  00                 	db	0
  2491  00FBDA                     STR_61:
  2492  00FBDA  54                 	db	84	;'T'
  2493  00FBDB  6F                 	db	111	;'o'
  2494  00FBDC  20                 	db	32
  2495  00FBDD  63                 	db	99	;'c'
  2496  00FBDE  6C                 	db	108	;'l'
  2497  00FBDF  6F                 	db	111	;'o'
  2498  00FBE0  73                 	db	115	;'s'
  2499  00FBE1  65                 	db	101	;'e'
  2500  00FBE2  20                 	db	32
  2501  00FBE3  74                 	db	116	;'t'
  2502  00FBE4  68                 	db	104	;'h'
  2503  00FBE5  65                 	db	101	;'e'
  2504  00FBE6  20                 	db	32
  2505  00FBE7  66                 	db	102	;'f'
  2506  00FBE8  69                 	db	105	;'i'
  2507  00FBE9  6C                 	db	108	;'l'
  2508  00FBEA  65                 	db	101	;'e'
  2509  00FBEB  20                 	db	32
  2510  00FBEC  66                 	db	102	;'f'
  2511  00FBED  6F                 	db	111	;'o'
  2512  00FBEE  6C                 	db	108	;'l'
  2513  00FBEF  6C                 	db	108	;'l'
  2514  00FBF0  6F                 	db	111	;'o'
  2515  00FBF1  77                 	db	119	;'w'
  2516  00FBF2  20                 	db	32
  2517  00FBF3  74                 	db	116	;'t'
  2518  00FBF4  68                 	db	104	;'h'
  2519  00FBF5  65                 	db	101	;'e'
  2520  00FBF6  73                 	db	115	;'s'
  2521  00FBF7  65                 	db	101	;'e'
  2522  00FBF8  20                 	db	32
  2523  00FBF9  69                 	db	105	;'i'
  2524  00FBFA  6E                 	db	110	;'n'
  2525  00FBFB  73                 	db	115	;'s'
  2526  00FBFC  74                 	db	116	;'t'
  2527  00FBFD  72                 	db	114	;'r'
  2528  00FBFE  75                 	db	117	;'u'
  2529  00FBFF  63                 	db	99	;'c'
  2530  00FC00  74                 	db	116	;'t'
  2531  00FC01  69                 	db	105	;'i'
  2532  00FC02  6F                 	db	111	;'o'
  2533  00FC03  6E                 	db	110	;'n'
  2534  00FC04  73                 	db	115	;'s'
  2535  00FC05  3A                 	db	58	;':'
  2536  00FC06  20                 	db	32
  2537  00FC07  0D                 	db	13
  2538  00FC08  0A                 	db	10
  2539  00FC09  00                 	db	0
  2540  00FC0A                     STR_28:
  2541  00FC0A  57                 	db	87	;'W'
  2542  00FC0B  3A                 	db	58	;':'
  2543  00FC0C  20                 	db	32
  2544  00FC0D  57                 	db	87	;'W'
  2545  00FC0E  72                 	db	114	;'r'
  2546  00FC0F  69                 	db	105	;'i'
  2547  00FC10  74                 	db	116	;'t'
  2548  00FC11  65                 	db	101	;'e'
  2549  00FC12  20                 	db	32
  2550  00FC13  6D                 	db	109	;'m'
  2551  00FC14  69                 	db	105	;'i'
  2552  00FC15  63                 	db	99	;'c'
  2553  00FC16  72                 	db	114	;'r'
  2554  00FC17  6F                 	db	111	;'o'
  2555  00FC18  70                 	db	112	;'p'
  2556  00FC19  68                 	db	104	;'h'
  2557  00FC1A  6F                 	db	111	;'o'
  2558  00FC1B  6E                 	db	110	;'n'
  2559  00FC1C  65                 	db	101	;'e'
  2560  00FC1D  20                 	db	32
  2561  00FC1E  3D                 	db	61	;'='
  2562  00FC1F  3E                 	db	62	;'>'
  2563  00FC20  20                 	db	32
  2564  00FC21  53                 	db	83	;'S'
  2565  00FC22  44                 	db	68	;'D'
  2566  00FC23  20                 	db	32
  2567  00FC24  63                 	db	99	;'c'
  2568  00FC25  61                 	db	97	;'a'
  2569  00FC26  72                 	db	114	;'r'
  2570  00FC27  64                 	db	100	;'d'
  2571  00FC28  20                 	db	32
  2572  00FC29  61                 	db	97	;'a'
  2573  00FC2A  74                 	db	116	;'t'
  2574  00FC2B  20                 	db	32
  2575  00FC2C  31                 	db	49	;'1'
  2576  00FC2D  36                 	db	54	;'6'
  2577  00FC2E  30                 	db	48	;'0'
  2578  00FC2F  30                 	db	48	;'0'
  2579  00FC30  20                 	db	32
  2580  00FC31  75                 	db	117	;'u'
  2581  00FC32  73                 	db	115	;'s'
  2582  00FC33  0D                 	db	13
  2583  00FC34  0A                 	db	10
  2584  00FC35  00                 	db	0
  2585  00FC36                     STR_24:
  2586  00FC36  72                 	db	114	;'r'
  2587  00FC37  3A                 	db	58	;':'
  2588  00FC38  20                 	db	32
  2589  00FC39  72                 	db	114	;'r'
  2590  00FC3A  65                 	db	101	;'e'
  2591  00FC3B  61                 	db	97	;'a'
  2592  00FC3C  64                 	db	100	;'d'
  2593  00FC3D  20                 	db	32
  2594  00FC3E  61                 	db	97	;'a'
  2595  00FC3F  20                 	db	32
  2596  00FC40  62                 	db	98	;'b'
  2597  00FC41  6C                 	db	108	;'l'
  2598  00FC42  6F                 	db	111	;'o'
  2599  00FC43  63                 	db	99	;'c'
  2600  00FC44  6B                 	db	107	;'k'
  2601  00FC45  20                 	db	32
  2602  00FC46  6F                 	db	111	;'o'
  2603  00FC47  66                 	db	102	;'f'
  2604  00FC48  20                 	db	32
  2605  00FC49  25                 	db	37
  2606  00FC4A  64                 	db	100	;'d'
  2607  00FC4B  20                 	db	32
  2608  00FC4C  62                 	db	98	;'b'
  2609  00FC4D  79                 	db	121	;'y'
  2610  00FC4E  74                 	db	116	;'t'
  2611  00FC4F  65                 	db	101	;'e'
  2612  00FC50  73                 	db	115	;'s'
  2613  00FC51  20                 	db	32
  2614  00FC52  66                 	db	102	;'f'
  2615  00FC53  72                 	db	114	;'r'
  2616  00FC54  6F                 	db	111	;'o'
  2617  00FC55  6D                 	db	109	;'m'
  2618  00FC56  20                 	db	32
  2619  00FC57  53                 	db	83	;'S'
  2620  00FC58  44                 	db	68	;'D'
  2621  00FC59  20                 	db	32
  2622  00FC5A  63                 	db	99	;'c'
  2623  00FC5B  61                 	db	97	;'a'
  2624  00FC5C  72                 	db	114	;'r'
  2625  00FC5D  64                 	db	100	;'d'
  2626  00FC5E  0D                 	db	13
  2627  00FC5F  0A                 	db	10
  2628  00FC60  00                 	db	0
  2629  00FC61                     STR_4:
  2630  00FC61  4E                 	db	78	;'N'
  2631  00FC62  6F                 	db	111	;'o'
  2632  00FC63  20                 	db	32
  2633  00FC64  63                 	db	99	;'c'
  2634  00FC65  6F                 	db	111	;'o'
  2635  00FC66  6E                 	db	110	;'n'
  2636  00FC67  66                 	db	102	;'f'
  2637  00FC68  69                 	db	105	;'i'
  2638  00FC69  67                 	db	103	;'g'
  2639  00FC6A  75                 	db	117	;'u'
  2640  00FC6B  72                 	db	114	;'r'
  2641  00FC6C  61                 	db	97	;'a'
  2642  00FC6D  74                 	db	116	;'t'
  2643  00FC6E  69                 	db	105	;'i'
  2644  00FC6F  6F                 	db	111	;'o'
  2645  00FC70  6E                 	db	110	;'n'
  2646  00FC71  20                 	db	32
  2647  00FC72  6F                 	db	111	;'o'
  2648  00FC73  66                 	db	102	;'f'
  2649  00FC74  20                 	db	32
  2650  00FC75  64                 	db	100	;'d'
  2651  00FC76  65                 	db	101	;'e'
  2652  00FC77  76                 	db	118	;'v'
  2653  00FC78  65                 	db	101	;'e'
  2654  00FC79  6C                 	db	108	;'l'
  2655  00FC7A  6F                 	db	111	;'o'
  2656  00FC7B  70                 	db	112	;'p'
  2657  00FC7C  6D                 	db	109	;'m'
  2658  00FC7D  65                 	db	101	;'e'
  2659  00FC7E  6E                 	db	110	;'n'
  2660  00FC7F  74                 	db	116	;'t'
  2661  00FC80  20                 	db	32
  2662  00FC81  62                 	db	98	;'b'
  2663  00FC82  6F                 	db	111	;'o'
  2664  00FC83  61                 	db	97	;'a'
  2665  00FC84  72                 	db	114	;'r'
  2666  00FC85  64                 	db	100	;'d'
  2667  00FC86  0D                 	db	13
  2668  00FC87  0A                 	db	10
  2669  00FC88  00                 	db	0
  2670  00FC89                     STR_65:
  2671  00FC89  53                 	db	83	;'S'
  2672  00FC8A  65                 	db	101	;'e'
  2673  00FC8B  6C                 	db	108	;'l'
  2674  00FC8C  65                 	db	101	;'e'
  2675  00FC8D  63                 	db	99	;'c'
  2676  00FC8E  74                 	db	116	;'t'
  2677  00FC8F  3A                 	db	58	;':'
  2678  00FC90  20                 	db	32
  2679  00FC91  20                 	db	32
  2680  00FC92  20                 	db	32
  2681  00FC93  20                 	db	32
  2682  00FC94  20                 	db	32
  2683  00FC95  53                 	db	83	;'S'
  2684  00FC96  65                 	db	101	;'e'
  2685  00FC97  73                 	db	115	;'s'
  2686  00FC98  73                 	db	115	;'s'
  2687  00FC99  69                 	db	105	;'i'
  2688  00FC9A  6F                 	db	111	;'o'
  2689  00FC9B  6E                 	db	110	;'n'
  2690  00FC9C  20                 	db	32
  2691  00FC9D  20                 	db	32
  2692  00FC9E  6C                 	db	108	;'l'
  2693  00FC9F  6F                 	db	111	;'o'
  2694  00FCA0  67                 	db	103	;'g'
  2695  00FCA1  67                 	db	103	;'g'
  2696  00FCA2  69                 	db	105	;'i'
  2697  00FCA3  6E                 	db	110	;'n'
  2698  00FCA4  67                 	db	103	;'g'
  2699  00FCA5  3A                 	db	58	;':'
  2700  00FCA6  20                 	db	32
  2701  00FCA7  4E                 	db	78	;'N'
  2702  00FCA8  6F                 	db	111	;'o'
  2703  00FCA9  6E                 	db	110	;'n'
  2704  00FCAA  65                 	db	101	;'e'
  2705  00FCAB  0D                 	db	13
  2706  00FCAC  0A                 	db	10
  2707  00FCAD  00                 	db	0
  2708  00FCAE                     STR_23:
  2709  00FCAE  61                 	db	97	;'a'
  2710  00FCAF  2F                 	db	47
  2711  00FCB0  41                 	db	65	;'A'
  2712  00FCB1  20                 	db	32
  2713  00FCB2  64                 	db	100	;'d'
  2714  00FCB3  65                 	db	101	;'e'
  2715  00FCB4  63                 	db	99	;'c'
  2716  00FCB5  72                 	db	114	;'r'
  2717  00FCB6  65                 	db	101	;'e'
  2718  00FCB7  61                 	db	97	;'a'
  2719  00FCB8  73                 	db	115	;'s'
  2720  00FCB9  65                 	db	101	;'e'
  2721  00FCBA  2F                 	db	47
  2722  00FCBB  69                 	db	105	;'i'
  2723  00FCBC  6E                 	db	110	;'n'
  2724  00FCBD  63                 	db	99	;'c'
  2725  00FCBE  72                 	db	114	;'r'
  2726  00FCBF  65                 	db	101	;'e'
  2727  00FCC0  61                 	db	97	;'a'
  2728  00FCC1  73                 	db	115	;'s'
  2729  00FCC2  65                 	db	101	;'e'
  2730  00FCC3  20                 	db	32
  2731  00FCC4  72                 	db	114	;'r'
  2732  00FCC5  65                 	db	101	;'e'
  2733  00FCC6  61                 	db	97	;'a'
  2734  00FCC7  64                 	db	100	;'d'
  2735  00FCC8  20                 	db	32
  2736  00FCC9  61                 	db	97	;'a'
  2737  00FCCA  64                 	db	100	;'d'
  2738  00FCCB  64                 	db	100	;'d'
  2739  00FCCC  72                 	db	114	;'r'
  2740  00FCCD  65                 	db	101	;'e'
  2741  00FCCE  73                 	db	115	;'s'
  2742  00FCCF  73                 	db	115	;'s'
  2743  00FCD0  0D                 	db	13
  2744  00FCD1  0A                 	db	10
  2745  00FCD2  00                 	db	0
  2746  00FCD3                     STR_60:
  2747  00FCD3  53                 	db	83	;'S'
  2748  00FCD4  70                 	db	112	;'p'
  2749  00FCD5  6F                 	db	111	;'o'
  2750  00FCD6  6F                 	db	111	;'o'
  2751  00FCD7  6C                 	db	108	;'l'
  2752  00FCD8  65                 	db	101	;'e'
  2753  00FCD9  64                 	db	100	;'d'
  2754  00FCDA  20                 	db	32
  2755  00FCDB  25                 	db	37
  2756  00FCDC  75                 	db	117	;'u'
  2757  00FCDD  20                 	db	32
  2758  00FCDE  6F                 	db	111	;'o'
  2759  00FCDF  75                 	db	117	;'u'
  2760  00FCE0  74                 	db	116	;'t'
  2761  00FCE1  20                 	db	32
  2762  00FCE2  6F                 	db	111	;'o'
  2763  00FCE3  66                 	db	102	;'f'
  2764  00FCE4  20                 	db	32
  2765  00FCE5  74                 	db	116	;'t'
  2766  00FCE6  68                 	db	104	;'h'
  2767  00FCE7  65                 	db	101	;'e'
  2768  00FCE8  20                 	db	32
  2769  00FCE9  25                 	db	37
  2770  00FCEA  75                 	db	117	;'u'
  2771  00FCEB  20                 	db	32
  2772  00FCEC  62                 	db	98	;'b'
  2773  00FCED  6C                 	db	108	;'l'
  2774  00FCEE  6F                 	db	111	;'o'
  2775  00FCEF  63                 	db	99	;'c'
  2776  00FCF0  6B                 	db	107	;'k'
  2777  00FCF1  73                 	db	115	;'s'
  2778  00FCF2  2E                 	db	46
  2779  00FCF3  0D                 	db	13
  2780  00FCF4  0A                 	db	10
  2781  00FCF5  00                 	db	0
  2782  00FCF6                     STR_53:
  2783  00FCF6  53                 	db	83	;'S'
  2784  00FCF7  65                 	db	101	;'e'
  2785  00FCF8  6C                 	db	108	;'l'
  2786  00FCF9  65                 	db	101	;'e'
  2787  00FCFA  63                 	db	99	;'c'
  2788  00FCFB  74                 	db	116	;'t'
  2789  00FCFC  3A                 	db	58	;':'
  2790  00FCFD  20                 	db	32
  2791  00FCFE  20                 	db	32
  2792  00FCFF  20                 	db	32
  2793  00FD00  20                 	db	32
  2794  00FD01  20                 	db	32
  2795  00FD02  43                 	db	67	;'C'
  2796  00FD03  68                 	db	104	;'h'
  2797  00FD04  61                 	db	97	;'a'
  2798  00FD05  6E                 	db	110	;'n'
  2799  00FD06  67                 	db	103	;'g'
  2800  00FD07  65                 	db	101	;'e'
  2801  00FD08  20                 	db	32
  2802  00FD09  73                 	db	115	;'s'
  2803  00FD0A  65                 	db	101	;'e'
  2804  00FD0B  74                 	db	116	;'t'
  2805  00FD0C  74                 	db	116	;'t'
  2806  00FD0D  69                 	db	105	;'i'
  2807  00FD0E  6E                 	db	110	;'n'
  2808  00FD0F  67                 	db	103	;'g'
  2809  00FD10  73                 	db	115	;'s'
  2810  00FD11  2E                 	db	46
  2811  00FD12  2E                 	db	46
  2812  00FD13  2E                 	db	46
  2813  00FD14  0D                 	db	13
  2814  00FD15  0A                 	db	10
  2815  00FD16  00                 	db	0
  2816  00FD17                     STR_29:
  2817  00FD17  73                 	db	115	;'s'
  2818  00FD18  3A                 	db	58	;':'
  2819  00FD19  20                 	db	32
  2820  00FD1A  73                 	db	115	;'s'
  2821  00FD1B  70                 	db	112	;'p'
  2822  00FD1C  6F                 	db	111	;'o'
  2823  00FD1D  6F                 	db	111	;'o'
  2824  00FD1E  6C                 	db	108	;'l'
  2825  00FD1F  20                 	db	32
  2826  00FD20  6D                 	db	109	;'m'
  2827  00FD21  65                 	db	101	;'e'
  2828  00FD22  6D                 	db	109	;'m'
  2829  00FD23  6F                 	db	111	;'o'
  2830  00FD24  72                 	db	114	;'r'
  2831  00FD25  79                 	db	121	;'y'
  2832  00FD26  20                 	db	32
  2833  00FD27  74                 	db	116	;'t'
  2834  00FD28  6F                 	db	111	;'o'
  2835  00FD29  20                 	db	32
  2836  00FD2A  61                 	db	97	;'a'
  2837  00FD2B  20                 	db	32
  2838  00FD2C  63                 	db	99	;'c'
  2839  00FD2D  73                 	db	115	;'s'
  2840  00FD2E  76                 	db	118	;'v'
  2841  00FD2F  20                 	db	32
  2842  00FD30  66                 	db	102	;'f'
  2843  00FD31  69                 	db	105	;'i'
  2844  00FD32  6C                 	db	108	;'l'
  2845  00FD33  65                 	db	101	;'e'
  2846  00FD34  0D                 	db	13
  2847  00FD35  0A                 	db	10
  2848  00FD36  00                 	db	0
  2849  00FD37                     STR_34:
  2850  00FD37  57                 	db	87	;'W'
  2851  00FD38  72                 	db	114	;'r'
  2852  00FD39  69                 	db	105	;'i'
  2853  00FD3A  74                 	db	116	;'t'
  2854  00FD3B  65                 	db	101	;'e'
  2855  00FD3C  20                 	db	32
  2856  00FD3D  62                 	db	98	;'b'
  2857  00FD3E  6C                 	db	108	;'l'
  2858  00FD3F  6F                 	db	111	;'o'
  2859  00FD40  63                 	db	99	;'c'
  2860  00FD41  6B                 	db	107	;'k'
  2861  00FD42  20                 	db	32
  2862  00FD43  73                 	db	115	;'s'
  2863  00FD44  69                 	db	105	;'i'
  2864  00FD45  6E                 	db	110	;'n'
  2865  00FD46  20                 	db	32
  2866  00FD47  77                 	db	119	;'w'
  2867  00FD48  61                 	db	97	;'a'
  2868  00FD49  76                 	db	118	;'v'
  2869  00FD4A  65                 	db	101	;'e'
  2870  00FD4B  20                 	db	32
  2871  00FD4C  76                 	db	118	;'v'
  2872  00FD4D  61                 	db	97	;'a'
  2873  00FD4E  6C                 	db	108	;'l'
  2874  00FD4F  75                 	db	117	;'u'
  2875  00FD50  65                 	db	101	;'e'
  2876  00FD51  73                 	db	115	;'s'
  2877  00FD52  3A                 	db	58	;':'
  2878  00FD53  0D                 	db	13
  2879  00FD54  0A                 	db	10
  2880  00FD55  00                 	db	0
  2881  00FD56                     STR_45:
  2882  00FD56  53                 	db	83	;'S'
  2883  00FD57  74                 	db	116	;'t'
  2884  00FD58  61                 	db	97	;'a'
  2885  00FD59  74                 	db	116	;'t'
  2886  00FD5A  75                 	db	117	;'u'
  2887  00FD5B  73                 	db	115	;'s'
  2888  00FD5C  20                 	db	32
  2889  00FD5D  63                 	db	99	;'c'
  2890  00FD5E  6F                 	db	111	;'o'
  2891  00FD5F  64                 	db	100	;'d'
  2892  00FD60  65                 	db	101	;'e'
  2893  00FD61  3A                 	db	58	;':'
  2894  00FD62  20                 	db	32
  2895  00FD63  25                 	db	37
  2896  00FD64  64                 	db	100	;'d'
  2897  00FD65  20                 	db	32
  2898  00FD66  2D                 	db	45
  2899  00FD67  2D                 	db	45
  2900  00FD68  2D                 	db	45
  2901  00FD69  2D                 	db	45
  2902  00FD6A  20                 	db	32
  2903  00FD6B  41                 	db	65	;'A'
  2904  00FD6C  64                 	db	100	;'d'
  2905  00FD6D  64                 	db	100	;'d'
  2906  00FD6E  72                 	db	114	;'r'
  2907  00FD6F  65                 	db	101	;'e'
  2908  00FD70  73                 	db	115	;'s'
  2909  00FD71  73                 	db	115	;'s'
  2910  00FD72  3A                 	db	58	;':'
  2911  00FD73  20                 	db	32
  2912  00FD74  00                 	db	0
  2913  00FD75                     STR_35:
  2914  00FD75  41                 	db	65	;'A'
  2915  00FD76  6D                 	db	109	;'m'
  2916  00FD77  6F                 	db	111	;'o'
  2917  00FD78  75                 	db	117	;'u'
  2918  00FD79  6E                 	db	110	;'n'
  2919  00FD7A  74                 	db	116	;'t'
  2920  00FD7B  20                 	db	32
  2921  00FD7C  6F                 	db	111	;'o'
  2922  00FD7D  66                 	db	102	;'f'
  2923  00FD7E  20                 	db	32
  2924  00FD7F  62                 	db	98	;'b'
  2925  00FD80  6C                 	db	108	;'l'
  2926  00FD81  6F                 	db	111	;'o'
  2927  00FD82  63                 	db	99	;'c'
  2928  00FD83  6B                 	db	107	;'k'
  2929  00FD84  73                 	db	115	;'s'
  2930  00FD85  20                 	db	32
  2931  00FD86  73                 	db	115	;'s'
  2932  00FD87  74                 	db	116	;'t'
  2933  00FD88  6F                 	db	111	;'o'
  2934  00FD89  72                 	db	114	;'r'
  2935  00FD8A  65                 	db	101	;'e'
  2936  00FD8B  64                 	db	100	;'d'
  2937  00FD8C  3A                 	db	58	;':'
  2938  00FD8D  20                 	db	32
  2939  00FD8E  25                 	db	37
  2940  00FD8F  64                 	db	100	;'d'
  2941  00FD90  0D                 	db	13
  2942  00FD91  0A                 	db	10
  2943  00FD92  00                 	db	0
  2944  00FD93                     STR_67:
  2945  00FD93  55                 	db	85	;'U'
  2946  00FD94  6E                 	db	110	;'n'
  2947  00FD95  64                 	db	100	;'d'
  2948  00FD96  65                 	db	101	;'e'
  2949  00FD97  72                 	db	114	;'r'
  2950  00FD98  66                 	db	102	;'f'
  2951  00FD99  6C                 	db	108	;'l'
  2952  00FD9A  6F                 	db	111	;'o'
  2953  00FD9B  77                 	db	119	;'w'
  2954  00FD9C  65                 	db	101	;'e'
  2955  00FD9D  64                 	db	100	;'d'
  2956  00FD9E  20                 	db	32
  2957  00FD9F  74                 	db	116	;'t'
  2958  00FDA0  6F                 	db	111	;'o'
  2959  00FDA1  20                 	db	32
  2960  00FDA2  68                 	db	104	;'h'
  2961  00FDA3  69                 	db	105	;'i'
  2962  00FDA4  67                 	db	103	;'g'
  2963  00FDA5  68                 	db	104	;'h'
  2964  00FDA6  20                 	db	32
  2965  00FDA7  61                 	db	97	;'a'
  2966  00FDA8  64                 	db	100	;'d'
  2967  00FDA9  64                 	db	100	;'d'
  2968  00FDAA  72                 	db	114	;'r'
  2969  00FDAB  65                 	db	101	;'e'
  2970  00FDAC  73                 	db	115	;'s'
  2971  00FDAD  73                 	db	115	;'s'
  2972  00FDAE  0D                 	db	13
  2973  00FDAF  0A                 	db	10
  2974  00FDB0  00                 	db	0
  2975  00FDB1                     STR_8:
  2976  00FDB1  09                 	db	9
  2977  00FDB2  50                 	db	80	;'P'
  2978  00FDB3  6C                 	db	108	;'l'
  2979  00FDB4  61                 	db	97	;'a'
  2980  00FDB5  79                 	db	121	;'y'
  2981  00FDB6  20                 	db	32
  2982  00FDB7  6C                 	db	108	;'l'
  2983  00FDB8  65                 	db	101	;'e'
  2984  00FDB9  6E                 	db	110	;'n'
  2985  00FDBA  67                 	db	103	;'g'
  2986  00FDBB  74                 	db	116	;'t'
  2987  00FDBC  68                 	db	104	;'h'
  2988  00FDBD  20                 	db	32
  2989  00FDBE  69                 	db	105	;'i'
  2990  00FDBF  6E                 	db	110	;'n'
  2991  00FDC0  20                 	db	32
  2992  00FDC1  62                 	db	98	;'b'
  2993  00FDC2  6C                 	db	108	;'l'
  2994  00FDC3  6F                 	db	111	;'o'
  2995  00FDC4  63                 	db	99	;'c'
  2996  00FDC5  6B                 	db	107	;'k'
  2997  00FDC6  73                 	db	115	;'s'
  2998  00FDC7  3A                 	db	58	;':'
  2999  00FDC8  20                 	db	32
  3000  00FDC9  25                 	db	37
  3001  00FDCA  64                 	db	100	;'d'
  3002  00FDCB  0D                 	db	13
  3003  00FDCC  0A                 	db	10
  3004  00FDCD  00                 	db	0
  3005  00FDCE                     STR_120:
  3006  00FDCE  42                 	db	66	;'B'
  3007  00FDCF  6C                 	db	108	;'l'
  3008  00FDD0  6F                 	db	111	;'o'
  3009  00FDD1  63                 	db	99	;'c'
  3010  00FDD2  6B                 	db	107	;'k'
  3011  00FDD3  20                 	db	32
  3012  00FDD4  4C                 	db	76	;'L'
  3013  00FDD5  65                 	db	101	;'e'
  3014  00FDD6  6E                 	db	110	;'n'
  3015  00FDD7  67                 	db	103	;'g'
  3016  00FDD8  74                 	db	116	;'t'
  3017  00FDD9  68                 	db	104	;'h'
  3018  00FDDA  20                 	db	32
  3019  00FDDB  52                 	db	82	;'R'
  3020  00FDDC  65                 	db	101	;'e'
  3021  00FDDD  73                 	db	115	;'s'
  3022  00FDDE  70                 	db	112	;'p'
  3023  00FDDF  6F                 	db	111	;'o'
  3024  00FDE0  6E                 	db	110	;'n'
  3025  00FDE1  73                 	db	115	;'s'
  3026  00FDE2  65                 	db	101	;'e'
  3027  00FDE3  3A                 	db	58	;':'
  3028  00FDE4  20                 	db	32
  3029  00FDE5  25                 	db	37
  3030  00FDE6  78                 	db	120	;'x'
  3031  00FDE7  0D                 	db	13
  3032  00FDE8  0A                 	db	10
  3033  00FDE9  00                 	db	0
  3034  00FDEA                     STR_69:
  3035  00FDEA  4F                 	db	79	;'O'
  3036  00FDEB  76                 	db	118	;'v'
  3037  00FDEC  65                 	db	101	;'e'
  3038  00FDED  72                 	db	114	;'r'
  3039  00FDEE  66                 	db	102	;'f'
  3040  00FDEF  6C                 	db	108	;'l'
  3041  00FDF0  6F                 	db	111	;'o'
  3042  00FDF1  77                 	db	119	;'w'
  3043  00FDF2  65                 	db	101	;'e'
  3044  00FDF3  64                 	db	100	;'d'
  3045  00FDF4  20                 	db	32
  3046  00FDF5  74                 	db	116	;'t'
  3047  00FDF6  6F                 	db	111	;'o'
  3048  00FDF7  20                 	db	32
  3049  00FDF8  6C                 	db	108	;'l'
  3050  00FDF9  6F                 	db	111	;'o'
  3051  00FDFA  77                 	db	119	;'w'
  3052  00FDFB  20                 	db	32
  3053  00FDFC  61                 	db	97	;'a'
  3054  00FDFD  64                 	db	100	;'d'
  3055  00FDFE  64                 	db	100	;'d'
  3056  00FDFF  72                 	db	114	;'r'
  3057  00FE00  65                 	db	101	;'e'
  3058  00FE01  73                 	db	115	;'s'
  3059  00FE02  73                 	db	115	;'s'
  3060  00FE03  0D                 	db	13
  3061  00FE04  0A                 	db	10
  3062  00FE05  00                 	db	0
  3063  00FE06                     STR_118:
  3064  00FE06  43                 	db	67	;'C'
  3065  00FE07  4D                 	db	77	;'M'
  3066  00FE08  44                 	db	68	;'D'
  3067  00FE09  30                 	db	48	;'0'
  3068  00FE0A  2C                 	db	44
  3069  00FE0B  20                 	db	32
  3070  00FE0C  52                 	db	82	;'R'
  3071  00FE0D  65                 	db	101	;'e'
  3072  00FE0E  73                 	db	115	;'s'
  3073  00FE0F  65                 	db	101	;'e'
  3074  00FE10  74                 	db	116	;'t'
  3075  00FE11  20                 	db	32
  3076  00FE12  52                 	db	82	;'R'
  3077  00FE13  65                 	db	101	;'e'
  3078  00FE14  73                 	db	115	;'s'
  3079  00FE15  70                 	db	112	;'p'
  3080  00FE16  6F                 	db	111	;'o'
  3081  00FE17  6E                 	db	110	;'n'
  3082  00FE18  73                 	db	115	;'s'
  3083  00FE19  65                 	db	101	;'e'
  3084  00FE1A  3A                 	db	58	;':'
  3085  00FE1B  20                 	db	32
  3086  00FE1C  25                 	db	37
  3087  00FE1D  78                 	db	120	;'x'
  3088  00FE1E  0D                 	db	13
  3089  00FE1F  0A                 	db	10
  3090  00FE20  00                 	db	0
  3091  00FE21                     STR_44:
  3092  00FE21  4C                 	db	76	;'L'
  3093  00FE22  69                 	db	105	;'i'
  3094  00FE23  73                 	db	115	;'s'
  3095  00FE24  74                 	db	116	;'t'
  3096  00FE25  69                 	db	105	;'i'
  3097  00FE26  6E                 	db	110	;'n'
  3098  00FE27  67                 	db	103	;'g'
  3099  00FE28  20                 	db	32
  3100  00FE29  77                 	db	119	;'w'
  3101  00FE2A  72                 	db	114	;'r'
  3102  00FE2B  69                 	db	105	;'i'
  3103  00FE2C  74                 	db	116	;'t'
  3104  00FE2D  65                 	db	101	;'e'
  3105  00FE2E  20                 	db	32
  3106  00FE2F  66                 	db	102	;'f'
  3107  00FE30  61                 	db	97	;'a'
  3108  00FE31  69                 	db	105	;'i'
  3109  00FE32  6C                 	db	108	;'l'
  3110  00FE33  75                 	db	117	;'u'
  3111  00FE34  72                 	db	114	;'r'
  3112  00FE35  65                 	db	101	;'e'
  3113  00FE36  73                 	db	115	;'s'
  3114  00FE37  3A                 	db	58	;':'
  3115  00FE38  20                 	db	32
  3116  00FE39  0D                 	db	13
  3117  00FE3A  0A                 	db	10
  3118  00FE3B  00                 	db	0
  3119  00FE3C                     STR_119:
  3120  00FE3C  43                 	db	67	;'C'
  3121  00FE3D  4D                 	db	77	;'M'
  3122  00FE3E  44                 	db	68	;'D'
  3123  00FE3F  31                 	db	49	;'1'
  3124  00FE40  2C                 	db	44
  3125  00FE41  20                 	db	32
  3126  00FE42  49                 	db	73	;'I'
  3127  00FE43  6E                 	db	110	;'n'
  3128  00FE44  69                 	db	105	;'i'
  3129  00FE45  74                 	db	116	;'t'
  3130  00FE46  20                 	db	32
  3131  00FE47  52                 	db	82	;'R'
  3132  00FE48  65                 	db	101	;'e'
  3133  00FE49  73                 	db	115	;'s'
  3134  00FE4A  70                 	db	112	;'p'
  3135  00FE4B  6F                 	db	111	;'o'
  3136  00FE4C  6E                 	db	110	;'n'
  3137  00FE4D  73                 	db	115	;'s'
  3138  00FE4E  65                 	db	101	;'e'
  3139  00FE4F  3A                 	db	58	;':'
  3140  00FE50  20                 	db	32
  3141  00FE51  25                 	db	37
  3142  00FE52  78                 	db	120	;'x'
  3143  00FE53  0D                 	db	13
  3144  00FE54  0A                 	db	10
  3145  00FE55  00                 	db	0
  3146  00FE56                     STR_58:
  3147  00FE56  50                 	db	80	;'P'
  3148  00FE57  72                 	db	114	;'r'
  3149  00FE58  65                 	db	101	;'e'
  3150  00FE59  73                 	db	115	;'s'
  3151  00FE5A  73                 	db	115	;'s'
  3152  00FE5B  20                 	db	32
  3153  00FE5C  61                 	db	97	;'a'
  3154  00FE5D  6E                 	db	110	;'n'
  3155  00FE5E  79                 	db	121	;'y'
  3156  00FE5F  20                 	db	32
  3157  00FE60  6B                 	db	107	;'k'
  3158  00FE61  65                 	db	101	;'e'
  3159  00FE62  79                 	db	121	;'y'
  3160  00FE63  20                 	db	32
  3161  00FE64  74                 	db	116	;'t'
  3162  00FE65  6F                 	db	111	;'o'
  3163  00FE66  20                 	db	32
  3164  00FE67  73                 	db	115	;'s'
  3165  00FE68  74                 	db	116	;'t'
  3166  00FE69  61                 	db	97	;'a'
  3167  00FE6A  72                 	db	114	;'r'
  3168  00FE6B  74                 	db	116	;'t'
  3169  00FE6C  0D                 	db	13
  3170  00FE6D  0A                 	db	10
  3171  00FE6E  00                 	db	0
  3172  00FE6F                     STR_21:
  3173  00FE6F  69                 	db	105	;'i'
  3174  00FE70  3A                 	db	58	;':'
  3175  00FE71  20                 	db	32
  3176  00FE72  49                 	db	73	;'I'
  3177  00FE73  6E                 	db	110	;'n'
  3178  00FE74  69                 	db	105	;'i'
  3179  00FE75  74                 	db	116	;'t'
  3180  00FE76  69                 	db	105	;'i'
  3181  00FE77  61                 	db	97	;'a'
  3182  00FE78  6C                 	db	108	;'l'
  3183  00FE79  69                 	db	105	;'i'
  3184  00FE7A  7A                 	db	122	;'z'
  3185  00FE7B  65                 	db	101	;'e'
  3186  00FE7C  20                 	db	32
  3187  00FE7D  53                 	db	83	;'S'
  3188  00FE7E  44                 	db	68	;'D'
  3189  00FE7F  20                 	db	32
  3190  00FE80  63                 	db	99	;'c'
  3191  00FE81  61                 	db	97	;'a'
  3192  00FE82  72                 	db	114	;'r'
  3193  00FE83  64                 	db	100	;'d'
  3194  00FE84  0D                 	db	13
  3195  00FE85  0A                 	db	10
  3196  00FE86  00                 	db	0
  3197  00FE87                     STR_19:
  3198  00FE87  7A                 	db	122	;'z'
  3199  00FE88  3A                 	db	58	;':'
  3200  00FE89  20                 	db	32
  3201  00FE8A  43                 	db	67	;'C'
  3202  00FE8B  6C                 	db	108	;'l'
  3203  00FE8C  65                 	db	101	;'e'
  3204  00FE8D  61                 	db	97	;'a'
  3205  00FE8E  72                 	db	114	;'r'
  3206  00FE8F  20                 	db	32
  3207  00FE90  74                 	db	116	;'t'
  3208  00FE91  68                 	db	104	;'h'
  3209  00FE92  65                 	db	101	;'e'
  3210  00FE93  20                 	db	32
  3211  00FE94  74                 	db	116	;'t'
  3212  00FE95  65                 	db	101	;'e'
  3213  00FE96  72                 	db	114	;'r'
  3214  00FE97  6D                 	db	109	;'m'
  3215  00FE98  69                 	db	105	;'i'
  3216  00FE99  6E                 	db	110	;'n'
  3217  00FE9A  61                 	db	97	;'a'
  3218  00FE9B  6C                 	db	108	;'l'
  3219  00FE9C  0D                 	db	13
  3220  00FE9D  0A                 	db	10
  3221  00FE9E  00                 	db	0
  3222  00FE9F                     STR_41:
  3223  00FE9F  20                 	db	32
  3224  00FEA0  20                 	db	32
  3225  00FEA1  20                 	db	32
  3226  00FEA2  20                 	db	32
  3227  00FEA3  53                 	db	83	;'S'
  3228  00FEA4  74                 	db	116	;'t'
  3229  00FEA5  61                 	db	97	;'a'
  3230  00FEA6  74                 	db	116	;'t'
  3231  00FEA7  75                 	db	117	;'u'
  3232  00FEA8  73                 	db	115	;'s'
  3233  00FEA9  3A                 	db	58	;':'
  3234  00FEAA  20                 	db	32
  3235  00FEAB  20                 	db	32
  3236  00FEAC  20                 	db	32
  3237  00FEAD  20                 	db	32
  3238  00FEAE  20                 	db	32
  3239  00FEAF  25                 	db	37
  3240  00FEB0  30                 	db	48	;'0'
  3241  00FEB1  32                 	db	50	;'2'
  3242  00FEB2  78                 	db	120	;'x'
  3243  00FEB3  0D                 	db	13
  3244  00FEB4  0A                 	db	10
  3245  00FEB5  00                 	db	0
  3246  00FEB6                     STR_54:
  3247  00FEB6  53                 	db	83	;'S'
  3248  00FEB7  65                 	db	101	;'e'
  3249  00FEB8  6C                 	db	108	;'l'
  3250  00FEB9  65                 	db	101	;'e'
  3251  00FEBA  63                 	db	99	;'c'
  3252  00FEBB  74                 	db	116	;'t'
  3253  00FEBC  3A                 	db	58	;':'
  3254  00FEBD  20                 	db	32
  3255  00FEBE  20                 	db	32
  3256  00FEBF  20                 	db	32
  3257  00FEC0  20                 	db	32
  3258  00FEC1  20                 	db	32
  3259  00FEC2  4C                 	db	76	;'L'
  3260  00FEC3  6F                 	db	111	;'o'
  3261  00FEC4  67                 	db	103	;'g'
  3262  00FEC5  67                 	db	103	;'g'
  3263  00FEC6  69                 	db	105	;'i'
  3264  00FEC7  6E                 	db	110	;'n'
  3265  00FEC8  67                 	db	103	;'g'
  3266  00FEC9  0D                 	db	13
  3267  00FECA  0A                 	db	10
  3268  00FECB  00                 	db	0
  3269  00FECC                     STR_66:
  3270  00FECC  53                 	db	83	;'S'
  3271  00FECD  65                 	db	101	;'e'
  3272  00FECE  6C                 	db	108	;'l'
  3273  00FECF  65                 	db	101	;'e'
  3274  00FED0  63                 	db	99	;'c'
  3275  00FED1  74                 	db	116	;'t'
  3276  00FED2  3A                 	db	58	;':'
  3277  00FED3  20                 	db	32
  3278  00FED4  20                 	db	32
  3279  00FED5  20                 	db	32
  3280  00FED6  20                 	db	32
  3281  00FED7  20                 	db	32
  3282  00FED8  41                 	db	65	;'A'
  3283  00FED9  70                 	db	112	;'p'
  3284  00FEDA  70                 	db	112	;'p'
  3285  00FEDB  6C                 	db	108	;'l'
  3286  00FEDC  79                 	db	121	;'y'
  3287  00FEDD  20                 	db	32
  3288  00FEDE  0D                 	db	13
  3289  00FEDF  0A                 	db	10
  3290  00FEE0  00                 	db	0
  3291  00FEE1                     STR_2:
  3292  00FEE1  53                 	db	83	;'S'
  3293  00FEE2  44                 	db	68	;'D'
  3294  00FEE3  20                 	db	32
  3295  00FEE4  63                 	db	99	;'c'
  3296  00FEE5  61                 	db	97	;'a'
  3297  00FEE6  72                 	db	114	;'r'
  3298  00FEE7  64                 	db	100	;'d'
  3299  00FEE8  20                 	db	32
  3300  00FEE9  2B                 	db	43
  3301  00FEEA  20                 	db	32
  3302  00FEEB  70                 	db	112	;'p'
  3303  00FEEC  6C                 	db	108	;'l'
  3304  00FEED  61                 	db	97	;'a'
  3305  00FEEE  79                 	db	121	;'y'
  3306  00FEEF  62                 	db	98	;'b'
  3307  00FEF0  61                 	db	97	;'a'
  3308  00FEF1  63                 	db	99	;'c'
  3309  00FEF2  6B                 	db	107	;'k'
  3310  00FEF3  0D                 	db	13
  3311  00FEF4  0A                 	db	10
  3312  00FEF5  00                 	db	0
  3313  00FEF6                     STR_18:
  3314  00FEF6  5A                 	db	90	;'Z'
  3315  00FEF7  3A                 	db	58	;':'
  3316  00FEF8  20                 	db	32
  3317  00FEF9  52                 	db	82	;'R'
  3318  00FEFA  65                 	db	101	;'e'
  3319  00FEFB  73                 	db	115	;'s'
  3320  00FEFC  65                 	db	101	;'e'
  3321  00FEFD  74                 	db	116	;'t'
  3322  00FEFE  20                 	db	32
  3323  00FEFF  70                 	db	112	;'p'
  3324  00FF00  72                 	db	114	;'r'
  3325  00FF01  6F                 	db	111	;'o'
  3326  00FF02  63                 	db	99	;'c'
  3327  00FF03  65                 	db	101	;'e'
  3328  00FF04  73                 	db	115	;'s'
  3329  00FF05  73                 	db	115	;'s'
  3330  00FF06  6F                 	db	111	;'o'
  3331  00FF07  72                 	db	114	;'r'
  3332  00FF08  0D                 	db	13
  3333  00FF09  0A                 	db	10
  3334  00FF0A  00                 	db	0
  3335  00FF0B                     STR_14:
  3336  00FF0B  09                 	db	9
  3337  00FF0C  73                 	db	115	;'s'
  3338  00FF0D  61                 	db	97	;'a'
  3339  00FF0E  6D                 	db	109	;'m'
  3340  00FF0F  70                 	db	112	;'p'
  3341  00FF10  6C                 	db	108	;'l'
  3342  00FF11  65                 	db	101	;'e'
  3343  00FF12  20                 	db	32
  3344  00FF13  72                 	db	114	;'r'
  3345  00FF14  61                 	db	97	;'a'
  3346  00FF15  74                 	db	116	;'t'
  3347  00FF16  65                 	db	101	;'e'
  3348  00FF17  3A                 	db	58	;':'
  3349  00FF18  20                 	db	32
  3350  00FF19  25                 	db	37
  3351  00FF1A  64                 	db	100	;'d'
  3352  00FF1B  75                 	db	117	;'u'
  3353  00FF1C  73                 	db	115	;'s'
  3354  00FF1D  0D                 	db	13
  3355  00FF1E  0A                 	db	10
  3356  00FF1F  00                 	db	0
  3357  00FF20                     STR_68:
  3358  00FF20  44                 	db	68	;'D'
  3359  00FF21  65                 	db	101	;'e'
  3360  00FF22  63                 	db	99	;'c'
  3361  00FF23  72                 	db	114	;'r'
  3362  00FF24  65                 	db	101	;'e'
  3363  00FF25  61                 	db	97	;'a'
  3364  00FF26  73                 	db	115	;'s'
  3365  00FF27  65                 	db	101	;'e'
  3366  00FF28  64                 	db	100	;'d'
  3367  00FF29  20                 	db	32
  3368  00FF2A  61                 	db	97	;'a'
  3369  00FF2B  64                 	db	100	;'d'
  3370  00FF2C  64                 	db	100	;'d'
  3371  00FF2D  72                 	db	114	;'r'
  3372  00FF2E  65                 	db	101	;'e'
  3373  00FF2F  73                 	db	115	;'s'
  3374  00FF30  73                 	db	115	;'s'
  3375  00FF31  0D                 	db	13
  3376  00FF32  0A                 	db	10
  3377  00FF33  00                 	db	0
  3378  00FF34                     STR_70:
  3379  00FF34  49                 	db	73	;'I'
  3380  00FF35  6E                 	db	110	;'n'
  3381  00FF36  63                 	db	99	;'c'
  3382  00FF37  72                 	db	114	;'r'
  3383  00FF38  65                 	db	101	;'e'
  3384  00FF39  61                 	db	97	;'a'
  3385  00FF3A  73                 	db	115	;'s'
  3386  00FF3B  65                 	db	101	;'e'
  3387  00FF3C  64                 	db	100	;'d'
  3388  00FF3D  20                 	db	32
  3389  00FF3E  61                 	db	97	;'a'
  3390  00FF3F  64                 	db	100	;'d'
  3391  00FF40  64                 	db	100	;'d'
  3392  00FF41  72                 	db	114	;'r'
  3393  00FF42  65                 	db	101	;'e'
  3394  00FF43  73                 	db	115	;'s'
  3395  00FF44  73                 	db	115	;'s'
  3396  00FF45  0D                 	db	13
  3397  00FF46  0A                 	db	10
  3398  00FF47  00                 	db	0
  3399  00FF48                     STR_57:
  3400  00FF48  53                 	db	83	;'S'
  3401  00FF49  65                 	db	101	;'e'
  3402  00FF4A  6C                 	db	108	;'l'
  3403  00FF4B  65                 	db	101	;'e'
  3404  00FF4C  63                 	db	99	;'c'
  3405  00FF4D  74                 	db	116	;'t'
  3406  00FF4E  3A                 	db	58	;':'
  3407  00FF4F  20                 	db	32
  3408  00FF50  20                 	db	32
  3409  00FF51  20                 	db	32
  3410  00FF52  20                 	db	32
  3411  00FF53  20                 	db	32
  3412  00FF54  41                 	db	65	;'A'
  3413  00FF55  70                 	db	112	;'p'
  3414  00FF56  70                 	db	112	;'p'
  3415  00FF57  6C                 	db	108	;'l'
  3416  00FF58  79                 	db	121	;'y'
  3417  00FF59  0D                 	db	13
  3418  00FF5A  0A                 	db	10
  3419  00FF5B  00                 	db	0
  3420  00FF5C                     STR_71:
  3421  00FF5C  53                 	db	83	;'S'
  3422  00FF5D  44                 	db	68	;'D'
  3423  00FF5E  20                 	db	32
  3424  00FF5F  63                 	db	99	;'c'
  3425  00FF60  61                 	db	97	;'a'
  3426  00FF61  72                 	db	114	;'r'
  3427  00FF62  64                 	db	100	;'d'
  3428  00FF63  20                 	db	32
  3429  00FF64  61                 	db	97	;'a'
  3430  00FF65  64                 	db	100	;'d'
  3431  00FF66  64                 	db	100	;'d'
  3432  00FF67  72                 	db	114	;'r'
  3433  00FF68  65                 	db	101	;'e'
  3434  00FF69  73                 	db	115	;'s'
  3435  00FF6A  73                 	db	115	;'s'
  3436  00FF6B  3A                 	db	58	;':'
  3437  00FF6C  20                 	db	32
  3438  00FF6D  20                 	db	32
  3439  00FF6E  00                 	db	0
  3440  00FF6F                     STR_77:
  3441  00FF6F  55                 	db	85	;'U'
  3442  00FF70  6E                 	db	110	;'n'
  3443  00FF71  6B                 	db	107	;'k'
  3444  00FF72  6E                 	db	110	;'n'
  3445  00FF73  6F                 	db	111	;'o'
  3446  00FF74  77                 	db	119	;'w'
  3447  00FF75  6E                 	db	110	;'n'
  3448  00FF76  20                 	db	32
  3449  00FF77  6B                 	db	107	;'k'
  3450  00FF78  65                 	db	101	;'e'
  3451  00FF79  79                 	db	121	;'y'
  3452  00FF7A  20                 	db	32
  3453  00FF7B  25                 	db	37
  3454  00FF7C  63                 	db	99	;'c'
  3455  00FF7D  0D                 	db	13
  3456  00FF7E  0A                 	db	10
  3457  00FF7F  00                 	db	0
  3458  00FF80                     STR_36:
  3459  00FF80  20                 	db	32
  3460  00FF81  20                 	db	32
  3461  00FF82  20                 	db	32
  3462  00FF83  20                 	db	32
  3463  00FF84  41                 	db	65	;'A'
  3464  00FF85  64                 	db	100	;'d'
  3465  00FF86  64                 	db	100	;'d'
  3466  00FF87  72                 	db	114	;'r'
  3467  00FF88  65                 	db	101	;'e'
  3468  00FF89  73                 	db	115	;'s'
  3469  00FF8A  73                 	db	115	;'s'
  3470  00FF8B  3A                 	db	58	;':'
  3471  00FF8C  20                 	db	32
  3472  00FF8D  20                 	db	32
  3473  00FF8E  20                 	db	32
  3474  00FF8F  20                 	db	32
  3475  00FF90  00                 	db	0
  3476  00FF91                     STR_9:
  3477  00FF91  09                 	db	9
  3478  00FF92  73                 	db	115	;'s'
  3479  00FF93  64                 	db	100	;'d'
  3480  00FF94  43                 	db	67	;'C'
  3481  00FF95  61                 	db	97	;'a'
  3482  00FF96  72                 	db	114	;'r'
  3483  00FF97  64                 	db	100	;'d'
  3484  00FF98  41                 	db	65	;'A'
  3485  00FF99  64                 	db	100	;'d'
  3486  00FF9A  64                 	db	100	;'d'
  3487  00FF9B  72                 	db	114	;'r'
  3488  00FF9C  65                 	db	101	;'e'
  3489  00FF9D  73                 	db	115	;'s'
  3490  00FF9E  73                 	db	115	;'s'
  3491  00FF9F  3A                 	db	58	;':'
  3492  00FFA0  20                 	db	32
  3493  00FFA1  00                 	db	0
  3494  00FFA2                     STR_76:
  3495  00FFA2  52                 	db	82	;'R'
  3496  00FFA3  65                 	db	101	;'e'
  3497  00FFA4  61                 	db	97	;'a'
  3498  00FFA5  64                 	db	100	;'d'
  3499  00FFA6  20                 	db	32
  3500  00FFA7  62                 	db	98	;'b'
  3501  00FFA8  6C                 	db	108	;'l'
  3502  00FFA9  6F                 	db	111	;'o'
  3503  00FFAA  63                 	db	99	;'c'
  3504  00FFAB  6B                 	db	107	;'k'
  3505  00FFAC  3A                 	db	58	;':'
  3506  00FFAD  20                 	db	32
  3507  00FFAE  0D                 	db	13
  3508  00FFAF  0A                 	db	10
  3509  00FFB0  00                 	db	0
  3510  00FFB1                     STR_16:
  3511  00FFB1  3F                 	db	63	;'?'
  3512  00FFB2  3A                 	db	58	;':'
  3513  00FFB3  20                 	db	32
  3514  00FFB4  68                 	db	104	;'h'
  3515  00FFB5  65                 	db	101	;'e'
  3516  00FFB6  6C                 	db	108	;'l'
  3517  00FFB7  70                 	db	112	;'p'
  3518  00FFB8  20                 	db	32
  3519  00FFB9  6D                 	db	109	;'m'
  3520  00FFBA  65                 	db	101	;'e'
  3521  00FFBB  6E                 	db	110	;'n'
  3522  00FFBC  75                 	db	117	;'u'
  3523  00FFBD  0D                 	db	13
  3524  00FFBE  0A                 	db	10
  3525  00FFBF  00                 	db	0
  3526  00FFC0                     STR_1:
  3527  00FFC0  4C                 	db	76	;'L'
  3528  00FFC1  61                 	db	97	;'a'
  3529  00FFC2  62                 	db	98	;'b'
  3530  00FFC3  20                 	db	32
  3531  00FFC4  31                 	db	49	;'1'
  3532  00FFC5  30                 	db	48	;'0'
  3533  00FFC6  0D                 	db	13
  3534  00FFC7  0A                 	db	10
  3535  00FFC8  00                 	db	0
  3536  00FFC9                     STR_3:
  3537  00FFC9  44                 	db	68	;'D'
  3538  00FFCA  65                 	db	101	;'e'
  3539  00FFCB  76                 	db	118	;'v'
  3540  00FFCC  27                 	db	39
  3541  00FFCD  32                 	db	50	;'2'
  3542  00FFCE  31                 	db	49	;'1'
  3543  00FFCF  0D                 	db	13
  3544  00FFD0  0A                 	db	10
  3545  00FFD1  00                 	db	0
  3546  00FFD2                     STR_31:
  3547  00FFD2  6F                 	db	111	;'o'
  3548  00FFD3  3A                 	db	58	;':'
  3549  00FFD4  09                 	db	9
  3550  00FFD5  6F                 	db	111	;'o'
  3551  00FFD6  6B                 	db	107	;'k'
  3552  00FFD7  0D                 	db	13
  3553  00FFD8  0A                 	db	10
  3554  00FFD9  00                 	db	0
  3555  00FFDA                     STR_17:
  3556  00FFDA  6F                 	db	111	;'o'
  3557  00FFDB  3A                 	db	58	;':'
  3558  00FFDC  20                 	db	32
  3559  00FFDD  6B                 	db	107	;'k'
  3560  00FFDE  0D                 	db	13
  3561  00FFDF  0A                 	db	10
  3562  00FFE0  00                 	db	0
  3563  00FFE1                     STR_48:
  3564  00FFE1  25                 	db	37
  3565  00FFE2  30                 	db	48	;'0'
  3566  00FFE3  34                 	db	52	;'4'
  3567  00FFE4  78                 	db	120	;'x'
  3568  00FFE5  0D                 	db	13
  3569  00FFE6  0A                 	db	10
  3570  00FFE7  00                 	db	0
  3571  00FFE8                     STR_127:
  3572  00FFE8  25                 	db	37
  3573  00FFE9  30                 	db	48	;'0'
  3574  00FFEA  32                 	db	50	;'2'
  3575  00FFEB  78                 	db	120	;'x'
  3576  00FFEC  20                 	db	32
  3577  00FFED  00                 	db	0
  3578  00FFEE                     STR_10:
  3579  00FFEE  25                 	db	37
  3580  00FFEF  30                 	db	48	;'0'
  3581  00FFF0  34                 	db	52	;'4'
  3582  00FFF1  78                 	db	120	;'x'
  3583  00FFF2  00                 	db	0
  3584  00FFF3                     STR_121:
  3585  00FFF3  0D                 	db	13
  3586  00FFF4  0A                 	db	10
  3587  00FFF5  0A                 	db	10
  3588  00FFF6  00                 	db	0
  3589  00FFF7                     STR_125:
  3590  00FFF7  25                 	db	37
  3591  00FFF8  63                 	db	99	;'c'
  3592  00FFF9  00                 	db	0
  3593  00FFFA                     STR_5:
  3594  00FFFA  3E                 	db	62	;'>'
  3595  00FFFB  20                 	db	32
  3596  00FFFC  00                 	db	0
  3597  00FFFD                     STR_11:
  3598  00FFFD  3A                 	db	58	;':'
  3599  00FFFE  00                 	db	0
  3600  00FFFF  00                 	db	0	; dummy byte at the end
  3601  0000                     
  3602                           ; #config settings
  3603                           
  3604                           	psect	cinit
  3605  003176                     __pcinit:
  3606                           	callstack 0
  3607  003176                     start_initialization:
  3608                           	callstack 0
  3609  003176                     __initialization:
  3610                           	callstack 0
  3611                           
  3612                           ; Initialize objects allocated to BANK0 (2 bytes)
  3613                           ; load TBLPTR registers with __pidataBANK0
  3614  003176  0E4A               	movlw	low __pidataBANK0
  3615  003178  6EF6               	movwf	tblptrl,c
  3616  00317A  0E38               	movlw	high __pidataBANK0
  3617  00317C  6EF7               	movwf	tblptrh,c
  3618  00317E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3619  003180  6EF8               	movwf	tblptru,c
  3620  003182  0009               	tblrd		*+	;fetch initializer
  3621  003184  CFF5 F0D1          	movff	tablat,__pdataBANK0
  3622  003188  0009               	tblrd		*+	;fetch initializer
  3623  00318A  CFF5 F0D2          	movff	tablat,__pdataBANK0+1
  3624                           
  3625                           ; Initialize objects allocated to COMRAM (2 bytes)
  3626                           ; load TBLPTR registers with __pidataCOMRAM
  3627  00318E  0E48               	movlw	low __pidataCOMRAM
  3628  003190  6EF6               	movwf	tblptrl,c
  3629  003192  0E38               	movlw	high __pidataCOMRAM
  3630  003194  6EF7               	movwf	tblptrh,c
  3631  003196  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3632  003198  6EF8               	movwf	tblptru,c
  3633  00319A  0009               	tblrd		*+	;fetch initializer
  3634  00319C  CFF5 F04A          	movff	tablat,__pdataCOMRAM
  3635  0031A0  0009               	tblrd		*+	;fetch initializer
  3636  0031A2  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
  3637                           
  3638                           ; Clear objects allocated to BIGRAM (2048 bytes)
  3639  0031A6  EE01  F0DE         	lfsr	0,__pbssBIGRAM
  3640  0031AA  EE18 F000          	lfsr	1,2048
  3641  0031AE                     clear_0:
  3642  0031AE  6AEE               	clrf	postinc0,c
  3643  0031B0  50E5               	movf	postdec1,w,c
  3644  0031B2  50E1               	movf	fsr1l,w,c
  3645  0031B4  E1FC               	bnz	clear_0
  3646  0031B6  50E2               	movf	fsr1h,w,c
  3647  0031B8  E1FA               	bnz	clear_0
  3648                           
  3649                           ; Clear objects allocated to BANK1 (160 bytes)
  3650  0031BA  EE01  F000         	lfsr	0,__pbssBANK1
  3651  0031BE  0EA0               	movlw	160
  3652  0031C0                     clear_1:
  3653  0031C0  6AEE               	clrf	postinc0,c
  3654  0031C2  06E8               	decf	wreg,f,c
  3655  0031C4  E1FD               	bnz	clear_1
  3656                           
  3657                           ; Clear objects allocated to BANK0 (15 bytes)
  3658  0031C6  EE00  F0C2         	lfsr	0,__pbssBANK0
  3659  0031CA  0E0F               	movlw	15
  3660  0031CC                     clear_2:
  3661  0031CC  6AEE               	clrf	postinc0,c
  3662  0031CE  06E8               	decf	wreg,f,c
  3663  0031D0  E1FD               	bnz	clear_2
  3664                           
  3665                           ; Clear objects allocated to COMRAM (17 bytes)
  3666  0031D2  EE00  F039         	lfsr	0,__pbssCOMRAM
  3667  0031D6  0E11               	movlw	17
  3668  0031D8                     clear_3:
  3669  0031D8  6AEE               	clrf	postinc0,c
  3670  0031DA  06E8               	decf	wreg,f,c
  3671  0031DC  E1FD               	bnz	clear_3
  3672  0031DE                     end_of_initialization:
  3673                           	callstack 0
  3674  0031DE                     __end_of__initialization:
  3675                           	callstack 0
  3676  0031DE  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3677  0031E0  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3678  0031E2  0100               	movlb	0
  3679  0031E4  EF29  F000         	goto	_main	;jump to C main() function
  3680                           
  3681                           	psect	bssCOMRAM
  3682  000039                     __pbssCOMRAM:
  3683                           	callstack 0
  3684  000039                     _width:
  3685                           	callstack 0
  3686  000039                     	ds	2
  3687  00003B                     _prec:
  3688                           	callstack 0
  3689  00003B                     	ds	2
  3690  00003D                     _flags:
  3691                           	callstack 0
  3692  00003D                     	ds	2
  3693  00003F                     myTMR0ISR@bufferIndex:
  3694                           	callstack 0
  3695  00003F                     	ds	2
  3696  000041                     _timer0ReloadVal:
  3697                           	callstack 0
  3698  000041                     	ds	2
  3699  000043                     _TMR0_InterruptHandler:
  3700                           	callstack 0
  3701  000043                     	ds	2
  3702  000045                     myTMR0ISR@state:
  3703                           	callstack 0
  3704  000045                     	ds	1
  3705  000046                     _stopPlayback:
  3706                           	callstack 0
  3707  000046                     	ds	1
  3708  000047                     _stopCollect:
  3709                           	callstack 0
  3710  000047                     	ds	1
  3711  000048                     _startCollect:
  3712                           	callstack 0
  3713  000048                     	ds	1
  3714  000049                     _eusart1RxLastError:
  3715                           	callstack 0
  3716  000049                     	ds	1
  3717                           
  3718                           	psect	dataCOMRAM
  3719  00004A                     __pdataCOMRAM:
  3720                           	callstack 0
  3721  00004A                     myTMR0ISR@buffer:
  3722                           	callstack 0
  3723  00004A                     	ds	2
  3724                           
  3725                           	psect	bssBANK0
  3726  0000C2                     __pbssBANK0:
  3727                           	callstack 0
  3728  0000C2                     _nout:
  3729                           	callstack 0
  3730  0000C2                     	ds	2
  3731  0000C4                     _ADC_InterruptHandler:
  3732                           	callstack 0
  3733  0000C4                     	ds	2
  3734  0000C6                     _EUSART1_ErrorHandler:
  3735                           	callstack 0
  3736  0000C6                     	ds	2
  3737  0000C8                     _EUSART1_OverrunErrorHandler:
  3738                           	callstack 0
  3739  0000C8                     	ds	2
  3740  0000CA                     _EUSART1_FramingErrorHandler:
  3741                           	callstack 0
  3742  0000CA                     	ds	2
  3743  0000CC                     main@sinIndex:
  3744                           	callstack 0
  3745  0000CC                     	ds	1
  3746  0000CD                     _doPlayback:
  3747                           	callstack 0
  3748  0000CD                     	ds	1
  3749  0000CE                     _collecting:
  3750                           	callstack 0
  3751  0000CE                     	ds	1
  3752  0000CF                     _buffer2Full:
  3753                           	callstack 0
  3754  0000CF                     	ds	1
  3755  0000D0                     _buffer1Full:
  3756                           	callstack 0
  3757  0000D0                     	ds	1
  3758                           
  3759                           	psect	dataBANK0
  3760  0000D1                     __pdataBANK0:
  3761                           	callstack 0
  3762  0000D1                     _sampleRate:
  3763                           	callstack 0
  3764  0000D1                     	ds	2
  3765                           
  3766                           	psect	bssBANK1
  3767  000100                     __pbssBANK1:
  3768                           	callstack 0
  3769  000100                     _writeFailureStatus:
  3770                           	callstack 0
  3771  000100                     	ds	128
  3772  000180                     _dbuf:
  3773                           	callstack 0
  3774  000180                     	ds	32
  3775                           
  3776                           	psect	bssBIGRAM
  3777  0001DE                     __pbssBIGRAM:
  3778                           	callstack 0
  3779  0001DE                     _writeFailureTable:
  3780                           	callstack 0
  3781  0001DE                     	ds	512
  3782  0003DE                     _sdCardBuffer2:
  3783                           	callstack 0
  3784  0003DE                     	ds	512
  3785  0005DE                     _sdCardBuffer1:
  3786                           	callstack 0
  3787  0005DE                     	ds	512
  3788  0007DE                     _sdCardBuffer:
  3789                           	callstack 0
  3790  0007DE                     	ds	512
  3791                           
  3792                           	psect	cstackBANK1
  3793  0001A0                     __pcstackBANK1:
  3794                           	callstack 0
  3795  0001A0                     	ds	1
  3796  0001A1                     main@numBlocks:
  3797                           	callstack 0
  3798                           
  3799                           ; 4 bytes @ 0x1
  3800  0001A1                     	ds	4
  3801  0001A5                     main@printVal:
  3802                           	callstack 0
  3803                           
  3804                           ; 2 bytes @ 0x5
  3805  0001A5                     	ds	2
  3806  0001A7                     main@storedCounter:
  3807                           	callstack 0
  3808                           
  3809                           ; 4 bytes @ 0x7
  3810  0001A7                     	ds	4
  3811  0001AB                     main@printedBlocks:
  3812                           	callstack 0
  3813                           
  3814                           ; 4 bytes @ 0xB
  3815  0001AB                     	ds	4
  3816  0001AF                     main@j:
  3817                           	callstack 0
  3818                           
  3819                           ; 1 bytes @ 0xF
  3820  0001AF                     	ds	1
  3821  0001B0                     main@addr:
  3822                           	callstack 0
  3823                           
  3824                           ; 4 bytes @ 0x10
  3825  0001B0                     	ds	4
  3826  0001B4                     main@endAddress:
  3827                           	callstack 0
  3828                           
  3829                           ; 4 bytes @ 0x14
  3830  0001B4                     	ds	4
  3831  0001B8                     main@writeStartAddress:
  3832                           	callstack 0
  3833                           
  3834                           ; 4 bytes @ 0x18
  3835  0001B8                     	ds	4
  3836  0001BC                     main@i_1280:
  3837                           	callstack 0
  3838                           
  3839                           ; 2 bytes @ 0x1C
  3840  0001BC                     	ds	2
  3841  0001BE                     main@i_1316:
  3842                           	callstack 0
  3843                           
  3844                           ; 2 bytes @ 0x1E
  3845  0001BE                     	ds	2
  3846  0001C0                     main@i_1296:
  3847                           	callstack 0
  3848                           
  3849                           ; 1 bytes @ 0x20
  3850  0001C0                     	ds	1
  3851  0001C1                     main@address:
  3852                           	callstack 0
  3853                           
  3854                           ; 4 bytes @ 0x21
  3855  0001C1                     	ds	4
  3856  0001C5                     main@cmd:
  3857                           	callstack 0
  3858                           
  3859                           ; 1 bytes @ 0x25
  3860  0001C5                     	ds	1
  3861  0001C6                     main@writeEndAddress:
  3862                           	callstack 0
  3863                           
  3864                           ; 4 bytes @ 0x26
  3865  0001C6                     	ds	4
  3866  0001CA                     main@i:
  3867                           	callstack 0
  3868                           
  3869                           ; 2 bytes @ 0x2A
  3870  0001CA                     	ds	2
  3871  0001CC                     main@writeAddress:
  3872                           	callstack 0
  3873                           
  3874                           ; 4 bytes @ 0x2C
  3875  0001CC                     	ds	4
  3876  0001D0                     main@readAddress:
  3877                           	callstack 0
  3878                           
  3879                           ; 4 bytes @ 0x30
  3880  0001D0                     	ds	4
  3881  0001D4                     main@sdCardAddress:
  3882                           	callstack 0
  3883                           
  3884                           ; 4 bytes @ 0x34
  3885  0001D4                     	ds	4
  3886  0001D8                     main@failureIndex:
  3887                           	callstack 0
  3888                           
  3889                           ; 1 bytes @ 0x38
  3890  0001D8                     	ds	1
  3891  0001D9                     main@status:
  3892                           	callstack 0
  3893                           
  3894                           ; 1 bytes @ 0x39
  3895  0001D9                     	ds	1
  3896  0001DA                     main@writeAddress_1292:
  3897                           	callstack 0
  3898                           
  3899                           ; 4 bytes @ 0x3A
  3900  0001DA                     	ds	4
  3901                           
  3902                           	psect	cstackBANK0
  3903  000060                     __pcstackBANK0:
  3904                           	callstack 0
  3905  000060                     ?_dtoa:
  3906                           	callstack 0
  3907  000060                     ?_utoa:
  3908                           	callstack 0
  3909  000060                     ?_xtoa:
  3910                           	callstack 0
  3911  000060                     dtoa@fp:
  3912                           	callstack 0
  3913  000060                     utoa@fp:
  3914                           	callstack 0
  3915  000060                     xtoa@fp:
  3916                           	callstack 0
  3917                           
  3918                           ; 2 bytes @ 0x0
  3919  000060                     	ds	2
  3920  000062                     dtoa@d:
  3921                           	callstack 0
  3922  000062                     utoa@d:
  3923                           	callstack 0
  3924  000062                     xtoa@d:
  3925                           	callstack 0
  3926                           
  3927                           ; 8 bytes @ 0x2
  3928  000062                     	ds	8
  3929  00006A                     xtoa@x:
  3930                           	callstack 0
  3931  00006A                     _dtoa$1986:
  3932                           	callstack 0
  3933  00006A                     utoa@p:
  3934                           	callstack 0
  3935                           
  3936                           ; 2 bytes @ 0xA
  3937  00006A                     	ds	1
  3938  00006B                     _xtoa$2004:
  3939                           	callstack 0
  3940                           
  3941                           ; 2 bytes @ 0xB
  3942  00006B                     	ds	1
  3943  00006C                     dtoa@p:
  3944                           	callstack 0
  3945  00006C                     utoa@w:
  3946                           	callstack 0
  3947                           
  3948                           ; 2 bytes @ 0xC
  3949  00006C                     	ds	1
  3950  00006D                     _xtoa$2005:
  3951                           	callstack 0
  3952                           
  3953                           ; 2 bytes @ 0xD
  3954  00006D                     	ds	1
  3955  00006E                     dtoa@w:
  3956                           	callstack 0
  3957  00006E                     utoa@n:
  3958                           	callstack 0
  3959                           
  3960                           ; 8 bytes @ 0xE
  3961  00006E                     	ds	1
  3962  00006F                     xtoa@p:
  3963                           	callstack 0
  3964                           
  3965                           ; 2 bytes @ 0xF
  3966  00006F                     	ds	1
  3967  000070                     dtoa@s:
  3968                           	callstack 0
  3969                           
  3970                           ; 2 bytes @ 0x10
  3971  000070                     	ds	1
  3972  000071                     xtoa@w:
  3973                           	callstack 0
  3974                           
  3975                           ; 2 bytes @ 0x11
  3976  000071                     	ds	1
  3977  000072                     dtoa@n:
  3978                           	callstack 0
  3979                           
  3980                           ; 8 bytes @ 0x12
  3981  000072                     	ds	1
  3982  000073                     xtoa@n:
  3983                           	callstack 0
  3984                           
  3985                           ; 8 bytes @ 0x13
  3986  000073                     	ds	3
  3987  000076                     utoa@i:
  3988                           	callstack 0
  3989                           
  3990                           ; 2 bytes @ 0x16
  3991  000076                     	ds	4
  3992  00007A                     dtoa@i:
  3993                           	callstack 0
  3994                           
  3995                           ; 2 bytes @ 0x1A
  3996  00007A                     	ds	1
  3997  00007B                     xtoa@i:
  3998                           	callstack 0
  3999                           
  4000                           ; 2 bytes @ 0x1B
  4001  00007B                     	ds	2
  4002  00007D                     xtoa@c:
  4003                           	callstack 0
  4004                           
  4005                           ; 2 bytes @ 0x1D
  4006  00007D                     	ds	2
  4007  00007F                     ?_vfpfcnvrt:
  4008                           	callstack 0
  4009  00007F                     vfpfcnvrt@fp:
  4010                           	callstack 0
  4011                           
  4012                           ; 2 bytes @ 0x1F
  4013  00007F                     	ds	2
  4014  000081                     vfpfcnvrt@fmt:
  4015                           	callstack 0
  4016                           
  4017                           ; 2 bytes @ 0x21
  4018  000081                     	ds	2
  4019  000083                     vfpfcnvrt@ap:
  4020                           	callstack 0
  4021                           
  4022                           ; 2 bytes @ 0x23
  4023  000083                     	ds	2
  4024  000085                     ??_vfpfcnvrt:
  4025                           
  4026                           ; 1 bytes @ 0x25
  4027  000085                     	ds	4
  4028  000089                     vfpfcnvrt@ll:
  4029                           	callstack 0
  4030                           
  4031                           ; 8 bytes @ 0x29
  4032  000089                     	ds	8
  4033  000091                     vfpfcnvrt@done:
  4034                           	callstack 0
  4035                           
  4036                           ; 2 bytes @ 0x31
  4037  000091                     	ds	2
  4038  000093                     _vfpfcnvrt$2019:
  4039                           	callstack 0
  4040                           
  4041                           ; 2 bytes @ 0x33
  4042  000093                     	ds	2
  4043  000095                     vfpfcnvrt@llu:
  4044                           	callstack 0
  4045                           
  4046                           ; 8 bytes @ 0x35
  4047  000095                     	ds	8
  4048  00009D                     vfpfcnvrt@c:
  4049                           	callstack 0
  4050                           
  4051                           ; 1 bytes @ 0x3D
  4052  00009D                     	ds	1
  4053  00009E                     ?_vfprintf:
  4054                           	callstack 0
  4055  00009E                     vfprintf@fp:
  4056                           	callstack 0
  4057                           
  4058                           ; 2 bytes @ 0x3E
  4059  00009E                     	ds	2
  4060  0000A0                     vfprintf@fmt:
  4061                           	callstack 0
  4062                           
  4063                           ; 2 bytes @ 0x40
  4064  0000A0                     	ds	2
  4065  0000A2                     vfprintf@ap:
  4066                           	callstack 0
  4067                           
  4068                           ; 2 bytes @ 0x42
  4069  0000A2                     	ds	2
  4070  0000A4                     vfprintf@cfmt:
  4071                           	callstack 0
  4072                           
  4073                           ; 2 bytes @ 0x44
  4074  0000A4                     	ds	2
  4075  0000A6                     ?_printf:
  4076                           	callstack 0
  4077  0000A6                     printf@fmt:
  4078                           	callstack 0
  4079                           
  4080                           ; 2 bytes @ 0x46
  4081  0000A6                     	ds	12
  4082  0000B2                     printf@ap:
  4083                           	callstack 0
  4084                           
  4085                           ; 2 bytes @ 0x52
  4086  0000B2                     	ds	2
  4087  0000B4                     SDCARD_Initialize@i:
  4088                           	callstack 0
  4089  0000B4                     hexDumpBuffer@sdCardBuffer:
  4090                           	callstack 0
  4091  0000B4                     printAddress@address:
  4092                           	callstack 0
  4093                           
  4094                           ; 4 bytes @ 0x54
  4095  0000B4                     	ds	2
  4096  0000B6                     ??_hexDumpBuffer:
  4097  0000B6                     SDCARD_Initialize@verbose:
  4098                           	callstack 0
  4099                           
  4100                           ; 1 bytes @ 0x56
  4101  0000B6                     	ds	1
  4102  0000B7                     SDCARD_Initialize@response:
  4103                           	callstack 0
  4104                           
  4105                           ; 1 bytes @ 0x57
  4106  0000B7                     	ds	1
  4107  0000B8                     hexDumpBuffer@j:
  4108                           	callstack 0
  4109                           
  4110                           ; 2 bytes @ 0x58
  4111  0000B8                     	ds	2
  4112  0000BA                     hexDumpBuffer@j_1447:
  4113                           	callstack 0
  4114                           
  4115                           ; 2 bytes @ 0x5A
  4116  0000BA                     	ds	2
  4117  0000BC                     hexDumpBuffer@i:
  4118                           	callstack 0
  4119                           
  4120                           ; 2 bytes @ 0x5C
  4121  0000BC                     	ds	2
  4122  0000BE                     ??_main:
  4123                           
  4124                           ; 1 bytes @ 0x5E
  4125  0000BE                     	ds	4
  4126                           
  4127                           	psect	cstackCOMRAM
  4128  000001                     __pcstackCOMRAM:
  4129                           	callstack 0
  4130  000001                     ?_TMR0_ReadTimer:
  4131                           	callstack 0
  4132  000001                     EPWM1_LoadDutyValue@dutyValue:
  4133                           	callstack 0
  4134                           
  4135                           ; 2 bytes @ 0x0
  4136  000001                     	ds	2
  4137  000003                     ??_EPWM1_LoadDutyValue:
  4138  000003                     ??_TMR0_ReadTimer:
  4139                           
  4140                           ; 1 bytes @ 0x2
  4141  000003                     	ds	2
  4142  000005                     TMR0_ReadTimer@readVal:
  4143                           	callstack 0
  4144                           
  4145                           ; 2 bytes @ 0x4
  4146  000005                     	ds	2
  4147  000007                     TMR0_ReadTimer@readValLow:
  4148                           	callstack 0
  4149                           
  4150                           ; 1 bytes @ 0x6
  4151  000007                     	ds	1
  4152  000008                     TMR0_ReadTimer@readValHigh:
  4153                           	callstack 0
  4154                           
  4155                           ; 1 bytes @ 0x7
  4156  000008                     	ds	1
  4157  000009                     i2TMR0_WriteTimer@timerVal:
  4158                           	callstack 0
  4159                           
  4160                           ; 2 bytes @ 0x8
  4161  000009                     	ds	2
  4162  00000B                     ??_myTMR0ISR:
  4163  00000B                     
  4164                           ; 1 bytes @ 0xA
  4165  00000B                     	ds	2
  4166  00000D                     myTMR0ISR@mic:
  4167                           	callstack 0
  4168                           
  4169                           ; 2 bytes @ 0xC
  4170  00000D                     	ds	2
  4171  00000F                     myTMR0ISR@useBuffer1:
  4172                           	callstack 0
  4173                           
  4174                           ; 1 bytes @ 0xE
  4175  00000F                     	ds	1
  4176  000010                     ??_INTERRUPT_InterruptManager:
  4177                           
  4178                           ; 1 bytes @ 0xF
  4179  000010                     	ds	4
  4180  000014                     ??_SPI2_Open:
  4181  000014                     ?_strlen:
  4182                           	callstack 0
  4183  000014                     ?_isupper:
  4184                           	callstack 0
  4185  000014                     ?_isalpha:
  4186                           	callstack 0
  4187  000014                     ?_isdigit:
  4188                           	callstack 0
  4189  000014                     ?_isspace:
  4190                           	callstack 0
  4191  000014                     ?_islower:
  4192                           	callstack 0
  4193  000014                     ?___wmul:
  4194                           	callstack 0
  4195  000014                     ?_incrementAddress:
  4196                           	callstack 0
  4197  000014                     ?___aodiv:
  4198                           	callstack 0
  4199  000014                     ?___aomod:
  4200                           	callstack 0
  4201  000014                     ?___lodiv:
  4202                           	callstack 0
  4203  000014                     ?___lomod:
  4204                           	callstack 0
  4205  000014                     EUSART1_Write@txData:
  4206                           	callstack 0
  4207  000014                     SPI2_ExchangeByte@data:
  4208                           	callstack 0
  4209  000014                     EUSART1_SetFramingErrorHandler@interruptHandler:
  4210                           	callstack 0
  4211  000014                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  4212                           	callstack 0
  4213  000014                     EUSART1_SetErrorHandler@interruptHandler:
  4214                           	callstack 0
  4215  000014                     TMR0_WriteTimer@timerVal:
  4216                           	callstack 0
  4217  000014                     TMR0_SetInterruptHandler@InterruptHandler:
  4218                           	callstack 0
  4219  000014                     ___wmul@multiplier:
  4220                           	callstack 0
  4221  000014                     isalpha@c:
  4222                           	callstack 0
  4223  000014                     isdigit@c:
  4224                           	callstack 0
  4225  000014                     isspace@c:
  4226                           	callstack 0
  4227  000014                     isupper@c:
  4228                           	callstack 0
  4229  000014                     strlen@s:
  4230                           	callstack 0
  4231  000014                     islower@c:
  4232                           	callstack 0
  4233  000014                     incrementAddress@sdCardAddress:
  4234                           	callstack 0
  4235  000014                     ___aodiv@dividend:
  4236                           	callstack 0
  4237  000014                     ___aomod@dividend:
  4238                           	callstack 0
  4239  000014                     ___lodiv@dividend:
  4240                           	callstack 0
  4241  000014                     ___lomod@dividend:
  4242                           	callstack 0
  4243                           
  4244                           ; 8 bytes @ 0x13
  4245  000014                     	ds	1
  4246  000015                     putch@txData:
  4247                           	callstack 0
  4248  000015                     SPI2_Open@spi2UniqueConfiguration:
  4249                           	callstack 0
  4250  000015                     SDCARD_PollWriteComplete@status:
  4251                           	callstack 0
  4252  000015                     SDCARD_ReadBlock@addr:
  4253                           	callstack 0
  4254  000015                     SDCARD_WriteBlock@addr:
  4255                           	callstack 0
  4256                           
  4257                           ; 4 bytes @ 0x14
  4258  000015                     	ds	1
  4259  000016                     ??_isupper:
  4260  000016                     ??_isalpha:
  4261  000016                     ??_isdigit:
  4262  000016                     ??_isspace:
  4263  000016                     ??_islower:
  4264  000016                     ??_TMR0_Initialize:
  4265  000016                     ___wmul@multiplicand:
  4266                           	callstack 0
  4267  000016                     fputc@c:
  4268                           	callstack 0
  4269  000016                     strlen@a:
  4270                           	callstack 0
  4271                           
  4272                           ; 2 bytes @ 0x15
  4273  000016                     	ds	2
  4274  000018                     ___wmul@product:
  4275                           	callstack 0
  4276  000018                     fputc@fp:
  4277                           	callstack 0
  4278                           
  4279                           ; 2 bytes @ 0x17
  4280  000018                     	ds	1
  4281  000019                     SDCARD_ReadBlock@sdCardBuffer:
  4282                           	callstack 0
  4283  000019                     SDCARD_WriteBlock@sdCardBuffer:
  4284                           	callstack 0
  4285                           
  4286                           ; 2 bytes @ 0x18
  4287  000019                     	ds	1
  4288  00001A                     ??_fputc:
  4289  00001A                     ?_toupper:
  4290                           	callstack 0
  4291  00001A                     _isspace$2069:
  4292                           	callstack 0
  4293  00001A                     toupper@c:
  4294                           	callstack 0
  4295                           
  4296                           ; 2 bytes @ 0x19
  4297  00001A                     	ds	1
  4298  00001B                     ?_atoi:
  4299                           	callstack 0
  4300  00001B                     SDCARD_ReadBlock@i:
  4301                           	callstack 0
  4302  00001B                     SDCARD_WriteBlock@i:
  4303                           	callstack 0
  4304  00001B                     atoi@s:
  4305                           	callstack 0
  4306                           
  4307                           ; 2 bytes @ 0x1A
  4308  00001B                     	ds	1
  4309  00001C                     ??_toupper:
  4310  00001C                     ___aodiv@divisor:
  4311                           	callstack 0
  4312  00001C                     ___aomod@divisor:
  4313                           	callstack 0
  4314  00001C                     ___lodiv@divisor:
  4315                           	callstack 0
  4316  00001C                     ___lomod@divisor:
  4317                           	callstack 0
  4318                           
  4319                           ; 8 bytes @ 0x1B
  4320  00001C                     	ds	1
  4321  00001D                     ??_atoi:
  4322                           
  4323                           ; 1 bytes @ 0x1C
  4324  00001D                     	ds	2
  4325  00001F                     ?_ctoa:
  4326                           	callstack 0
  4327  00001F                     ctoa@fp:
  4328                           	callstack 0
  4329  00001F                     fputs@s:
  4330                           	callstack 0
  4331                           
  4332                           ; 2 bytes @ 0x1E
  4333  00001F                     	ds	1
  4334  000020                     _toupper$2118:
  4335                           	callstack 0
  4336                           
  4337                           ; 2 bytes @ 0x1F
  4338  000020                     	ds	1
  4339  000021                     ctoa@c:
  4340                           	callstack 0
  4341  000021                     atoi@neg:
  4342                           	callstack 0
  4343  000021                     fputs@fp:
  4344                           	callstack 0
  4345                           
  4346                           ; 2 bytes @ 0x20
  4347  000021                     	ds	1
  4348  000022                     ??_ctoa:
  4349                           
  4350                           ; 1 bytes @ 0x21
  4351  000022                     	ds	1
  4352  000023                     fputs@c:
  4353                           	callstack 0
  4354  000023                     ctoa@l:
  4355                           	callstack 0
  4356  000023                     _atoi$2042:
  4357                           	callstack 0
  4358                           
  4359                           ; 2 bytes @ 0x22
  4360  000023                     	ds	1
  4361  000024                     ___aodiv@counter:
  4362                           	callstack 0
  4363  000024                     ___aomod@counter:
  4364                           	callstack 0
  4365  000024                     ___lomod@counter:
  4366                           	callstack 0
  4367  000024                     fputs@i:
  4368                           	callstack 0
  4369  000024                     ___lodiv@quotient:
  4370                           	callstack 0
  4371                           
  4372                           ; 8 bytes @ 0x23
  4373  000024                     	ds	1
  4374  000025                     ___aodiv@sign:
  4375                           	callstack 0
  4376  000025                     ___aomod@sign:
  4377                           	callstack 0
  4378  000025                     ctoa@w:
  4379                           	callstack 0
  4380  000025                     _atoi$2044:
  4381                           	callstack 0
  4382                           
  4383                           ; 2 bytes @ 0x24
  4384  000025                     	ds	1
  4385  000026                     ?_abs:
  4386                           	callstack 0
  4387  000026                     ?_pad:
  4388                           	callstack 0
  4389  000026                     pad@fp:
  4390                           	callstack 0
  4391  000026                     abs@a:
  4392                           	callstack 0
  4393  000026                     ___aodiv@quotient:
  4394                           	callstack 0
  4395                           
  4396                           ; 8 bytes @ 0x25
  4397  000026                     	ds	1
  4398  000027                     _atoi$2043:
  4399                           	callstack 0
  4400                           
  4401                           ; 1 bytes @ 0x26
  4402  000027                     	ds	1
  4403  000028                     ??_abs:
  4404  000028                     pad@buf:
  4405                           	callstack 0
  4406  000028                     atoi@n:
  4407                           	callstack 0
  4408                           
  4409                           ; 2 bytes @ 0x27
  4410  000028                     	ds	2
  4411  00002A                     pad@p:
  4412                           	callstack 0
  4413                           
  4414                           ; 2 bytes @ 0x29
  4415  00002A                     	ds	2
  4416  00002C                     ??_pad:
  4417  00002C                     ___lodiv@counter:
  4418                           	callstack 0
  4419                           
  4420                           ; 1 bytes @ 0x2B
  4421  00002C                     	ds	1
  4422  00002D                     pad@i:
  4423                           	callstack 0
  4424                           
  4425                           ; 2 bytes @ 0x2C
  4426  00002D                     	ds	2
  4427  00002F                     pad@w:
  4428                           	callstack 0
  4429                           
  4430                           ; 2 bytes @ 0x2E
  4431  00002F                     	ds	2
  4432  000031                     ??_dtoa:
  4433  000031                     ??_utoa:
  4434  000031                     ??_xtoa:
  4435                           
  4436                           ; 1 bytes @ 0x30
  4437  000031                     	ds	8
  4438  000039                     
  4439                           ; 1 bytes @ 0x38
  4440 ;;
  4441 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4442 ;;
  4443 ;; *************** function _main *****************
  4444 ;; Defined at:
  4445 ;;		line 60 in file "main.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;		None
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  addr            4   16[BANK1 ] unsigned long 
  4450 ;;  i               2   28[BANK1 ] unsigned short 
  4451 ;;  printVal        2    5[BANK1 ] unsigned short 
  4452 ;;  i               1   32[BANK1 ] unsigned char 
  4453 ;;  i               2   30[BANK1 ] unsigned short 
  4454 ;;  j               1   15[BANK1 ] unsigned char 
  4455 ;;  writeAddress    4   58[BANK1 ] unsigned long 
  4456 ;;  failureIndex    1   56[BANK1 ] unsigned char 
  4457 ;;  readAddress     4   48[BANK1 ] unsigned long 
  4458 ;;  writeAddress    4   44[BANK1 ] unsigned long 
  4459 ;;  storedCounte    4    7[BANK1 ] unsigned long 
  4460 ;;  address         4   33[BANK1 ] unsigned long 
  4461 ;;  endAddress      4   20[BANK1 ] unsigned long 
  4462 ;;  printedBlock    4   11[BANK1 ] unsigned long 
  4463 ;;  numBlocks       4    1[BANK1 ] unsigned long 
  4464 ;;  sdCardAddres    4   52[BANK1 ] unsigned long 
  4465 ;;  writeEndAddr    4   38[BANK1 ] unsigned long 
  4466 ;;  writeStartAd    4   24[BANK1 ] unsigned long 
  4467 ;;  i               2   42[BANK1 ] unsigned short 
  4468 ;;  status          1   57[BANK1 ] unsigned char 
  4469 ;;  cmd             1   37[BANK1 ] unsigned char 
  4470 ;;  letter          1    0        unsigned char 
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         0       0      62       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         0       4      62       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:       66 bytes
  4485 ;; Hardware stack levels required when called:   14
  4486 ;; This function calls:
  4487 ;;		_EUSART1_Read
  4488 ;;		_EUSART1_is_rx_ready
  4489 ;;		_SDCARD_Initialize
  4490 ;;		_SDCARD_PollWriteComplete
  4491 ;;		_SDCARD_ReadBlock
  4492 ;;		_SDCARD_WriteBlock
  4493 ;;		_SPI2_Close
  4494 ;;		_SPI2_Open
  4495 ;;		_SYSTEM_Initialize
  4496 ;;		_TMR0_SetInterruptHandler
  4497 ;;		_TMR0_WriteTimer
  4498 ;;		_hexDumpBuffer
  4499 ;;		_incrementAddress
  4500 ;;		_printAddress
  4501 ;;		_printAscii
  4502 ;;		_printf
  4503 ;; This function is called by:
  4504 ;;		Startup code after reset
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text0
  4509  000052                     __ptext0:
  4510                           	callstack 0
  4511  000052                     _main:
  4512                           	callstack 17
  4513  000052                     
  4514                           ;main.c: 62:     uint8_t status;;main.c: 63:     uint16_t i;;main.c: 64:     uint32_t sd
      +                          CardAddress = 0x00000000;
  4515  000052  0E00               	movlw	0
  4516  000054  0101               	movlb	1	; () banked
  4517  000056  6FD4               	movwf	main@sdCardAddress& (0+255),b
  4518  000058  0E00               	movlw	0
  4519  00005A  6FD5               	movwf	(main@sdCardAddress+1)& (0+255),b
  4520  00005C  0E00               	movlw	0
  4521  00005E  6FD6               	movwf	(main@sdCardAddress+2)& (0+255),b
  4522  000060  0E00               	movlw	0
  4523  000062  6FD7               	movwf	(main@sdCardAddress+3)& (0+255),b
  4524                           
  4525                           ;main.c: 65:     uint32_t writeStartAddress = 0x00000000;
  4526  000064  0E00               	movlw	0
  4527  000066  6FB8               	movwf	main@writeStartAddress& (0+255),b
  4528  000068  0E00               	movlw	0
  4529  00006A  6FB9               	movwf	(main@writeStartAddress+1)& (0+255),b
  4530  00006C  0E00               	movlw	0
  4531  00006E  6FBA               	movwf	(main@writeStartAddress+2)& (0+255),b
  4532  000070  0E00               	movlw	0
  4533  000072  6FBB               	movwf	(main@writeStartAddress+3)& (0+255),b
  4534                           
  4535                           ;main.c: 66:     uint32_t writeEndAddress = 0x00000000;
  4536  000074  0E00               	movlw	0
  4537  000076  6FC6               	movwf	main@writeEndAddress& (0+255),b
  4538  000078  0E00               	movlw	0
  4539  00007A  6FC7               	movwf	(main@writeEndAddress+1)& (0+255),b
  4540  00007C  0E00               	movlw	0
  4541  00007E  6FC8               	movwf	(main@writeEndAddress+2)& (0+255),b
  4542  000080  0E00               	movlw	0
  4543  000082  6FC9               	movwf	(main@writeEndAddress+3)& (0+255),b
  4544  000084                     
  4545                           ; BSR set to: 1
  4546                           ;main.c: 71:     SYSTEM_Initialize();
  4547  000084  EC6C  F01B         	call	_SYSTEM_Initialize	;wreg free
  4548  000088  888A               	bsf	138,4,c	;volatile
  4549  00008A                     
  4550                           ;main.c: 75:     TMR0_WriteTimer(0x0000);
  4551  00008A  0E00               	movlw	0
  4552  00008C  6E15               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4553  00008E  0E00               	movlw	0
  4554  000090  6E14               	movwf	TMR0_WriteTimer@timerVal^0,c
  4555  000092  ECFD  F01B         	call	_TMR0_WriteTimer	;wreg free
  4556  000096                     
  4557                           ;main.c: 76:     INTCONbits.TMR0IF = 0;
  4558  000096  94F2               	bcf	242,2,c	;volatile
  4559  000098                     l455:
  4560  000098  A4F2               	btfss	242,2,c	;volatile
  4561  00009A  EF51  F000         	goto	u5951
  4562  00009E  EF53  F000         	goto	u5950
  4563  0000A2                     u5951:
  4564  0000A2  EF4C  F000         	goto	l455
  4565  0000A6                     u5950:
  4566  0000A6                     
  4567                           ;main.c: 79:     TMR0_SetInterruptHandler(myTMR0ISR);
  4568  0000A6  0ECC               	movlw	low _myTMR0ISR
  4569  0000A8  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4570  0000AA  0E1D               	movlw	high _myTMR0ISR
  4571  0000AC  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4572  0000AE  EC02  F01C         	call	_TMR0_SetInterruptHandler	;wreg free
  4573  0000B2                     
  4574                           ;main.c: 81:     (INTCONbits.GIE = 1);
  4575  0000B2  8EF2               	bsf	242,7,c	;volatile
  4576  0000B4                     
  4577                           ;main.c: 82:     (INTCONbits.PEIE = 1);
  4578  0000B4  8CF2               	bsf	242,6,c	;volatile
  4579  0000B6                     
  4580                           ;main.c: 84:     printAscii();
  4581  0000B6  ECF0  F010         	call	_printAscii	;wreg free
  4582  0000BA                     
  4583                           ;main.c: 86:     printf("Lab 10\r\n");
  4584  0000BA  0EC0               	movlw	low STR_1
  4585  0000BC  0100               	movlb	0	; () banked
  4586  0000BE  6FA6               	movwf	printf@fmt& (0+255),b
  4587  0000C0  0EFF               	movlw	high STR_1
  4588  0000C2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4589  0000C4  EC44  F01B         	call	_printf	;wreg free
  4590  0000C8                     
  4591                           ;main.c: 87:     printf("SD card + playback\r\n");
  4592  0000C8  0EE1               	movlw	low STR_2
  4593  0000CA  0100               	movlb	0	; () banked
  4594  0000CC  6FA6               	movwf	printf@fmt& (0+255),b
  4595  0000CE  0EFE               	movlw	high STR_2
  4596  0000D0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4597  0000D2  EC44  F01B         	call	_printf	;wreg free
  4598  0000D6                     
  4599                           ;main.c: 88:     printf("Dev'21\r\n");
  4600  0000D6  0EC9               	movlw	low STR_3
  4601  0000D8  0100               	movlb	0	; () banked
  4602  0000DA  6FA6               	movwf	printf@fmt& (0+255),b
  4603  0000DC  0EFF               	movlw	high STR_3
  4604  0000DE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4605  0000E0  EC44  F01B         	call	_printf	;wreg free
  4606  0000E4                     
  4607                           ;main.c: 89:     printf("No configuration of development board\r\n");
  4608  0000E4  0E61               	movlw	low STR_4
  4609  0000E6  0100               	movlb	0	; () banked
  4610  0000E8  6FA6               	movwf	printf@fmt& (0+255),b
  4611  0000EA  0EFC               	movlw	high STR_4
  4612  0000EC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4613  0000EE  EC44  F01B         	call	_printf	;wreg free
  4614  0000F2                     
  4615                           ;main.c: 91:     SPI2_Close();
  4616  0000F2  EC22  F01C         	call	_SPI2_Close	;wreg free
  4617  0000F6                     
  4618                           ;main.c: 92:     SPI2_Open(SPI2_DEFAULT);
  4619  0000F6  0E00               	movlw	0
  4620  0000F8  EC86  F017         	call	_SPI2_Open
  4621  0000FC                     l6040:
  4622                           
  4623                           ;main.c: 95:         printf("> ");
  4624  0000FC  0EFA               	movlw	low STR_5
  4625  0000FE  0100               	movlb	0	; () banked
  4626  000100  6FA6               	movwf	printf@fmt& (0+255),b
  4627  000102  0EFF               	movlw	high STR_5
  4628  000104  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4629  000106  EC44  F01B         	call	_printf	;wreg free
  4630  00010A                     l6042:
  4631  00010A  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  4632  00010E  0900               	iorlw	0
  4633  000110  B4D8               	btfsc	status,2,c
  4634  000112  EF8D  F000         	goto	u5961
  4635  000116  EF8F  F000         	goto	u5960
  4636  00011A                     u5961:
  4637  00011A  EF85  F000         	goto	l6042
  4638  00011E                     u5960:
  4639  00011E                     
  4640                           ;main.c: 97:         cmd = EUSART1_Read();
  4641  00011E  EC58  F01B         	call	_EUSART1_Read	;wreg free
  4642  000122  0101               	movlb	1	; () banked
  4643  000124  6FC5               	movwf	main@cmd& (0+255),b
  4644  000126                     
  4645                           ; BSR set to: 1
  4646                           ;main.c: 98:         printf("%c\r\n", cmd);
  4647  000126  0E7B               	movlw	low (STR_77+12)
  4648  000128  0100               	movlb	0	; () banked
  4649  00012A  6FA6               	movwf	printf@fmt& (0+255),b
  4650  00012C  0EFF               	movlw	high (STR_77+12)
  4651  00012E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4652  000130  C1C5  F0A8         	movff	main@cmd,?_printf+2
  4653  000134  6BA9               	clrf	(?_printf+3)& (0+255),b
  4654  000136  EC44  F01B         	call	_printf	;wreg free
  4655                           
  4656                           ;main.c: 99:         switch (cmd) {
  4657  00013A  EFFA  F008         	goto	l6420
  4658  00013E                     l6048:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;main.c: 105:                 printf("\r\n----------------------------------------------
      +                          ---\r\n");
  4662  00013E  0E41               	movlw	low STR_7
  4663  000140  6FA6               	movwf	printf@fmt& (0+255),b
  4664  000142  0EFB               	movlw	high STR_7
  4665  000144  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4666  000146  EC44  F01B         	call	_printf	;wreg free
  4667                           
  4668                           ;main.c: 106:                 printf("\tPlay length in blocks: %d\r\n", (writeEndAddress
      +                          -writeStartAddress)>>9);
  4669  00014A  0EB1               	movlw	low STR_8
  4670  00014C  0100               	movlb	0	; () banked
  4671  00014E  6FA6               	movwf	printf@fmt& (0+255),b
  4672  000150  0EFD               	movlw	high STR_8
  4673  000152  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4674  000154  0101               	movlb	1	; () banked
  4675  000156  51B8               	movf	main@writeStartAddress& (0+255),w,b
  4676  000158  5DC6               	subwf	main@writeEndAddress& (0+255),w,b
  4677  00015A  0100               	movlb	0	; () banked
  4678  00015C  6FBE               	movwf	??_main& (0+255),b
  4679  00015E  0101               	movlb	1	; () banked
  4680  000160  51B9               	movf	(main@writeStartAddress+1)& (0+255),w,b
  4681  000162  59C7               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  4682  000164  0100               	movlb	0	; () banked
  4683  000166  6FBF               	movwf	(??_main+1)& (0+255),b
  4684  000168  0101               	movlb	1	; () banked
  4685  00016A  51BA               	movf	(main@writeStartAddress+2)& (0+255),w,b
  4686  00016C  59C8               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  4687  00016E  0100               	movlb	0	; () banked
  4688  000170  6FC0               	movwf	(??_main+2)& (0+255),b
  4689  000172  0101               	movlb	1	; () banked
  4690  000174  51BB               	movf	(main@writeStartAddress+3)& (0+255),w,b
  4691  000176  59C9               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  4692  000178  0100               	movlb	0	; () banked
  4693  00017A  6FC1               	movwf	(??_main+3)& (0+255),b
  4694  00017C  0E0A               	movlw	10
  4695  00017E  EFC6  F000         	goto	u5970
  4696  000182                     u5975:
  4697  000182  90D8               	bcf	status,0,c
  4698  000184  33C1               	rrcf	(??_main+3)& (0+255),f,b
  4699  000186  33C0               	rrcf	(??_main+2)& (0+255),f,b
  4700  000188  33BF               	rrcf	(??_main+1)& (0+255),f,b
  4701  00018A  33BE               	rrcf	??_main& (0+255),f,b
  4702  00018C                     u5970:
  4703  00018C  2EE8               	decfsz	wreg,f,c
  4704  00018E  EFC1  F000         	goto	u5975
  4705  000192  C0BE  F0A8         	movff	??_main,?_printf+2
  4706  000196  C0BF  F0A9         	movff	??_main+1,?_printf+3
  4707  00019A  C0C0  F0AA         	movff	??_main+2,?_printf+4
  4708  00019E  C0C1  F0AB         	movff	??_main+3,?_printf+5
  4709  0001A2  EC44  F01B         	call	_printf	;wreg free
  4710                           
  4711                           ;main.c: 107:                 printf("\tsdCardAddress: ");
  4712  0001A6  0E91               	movlw	low STR_9
  4713  0001A8  0100               	movlb	0	; () banked
  4714  0001AA  6FA6               	movwf	printf@fmt& (0+255),b
  4715  0001AC  0EFF               	movlw	high STR_9
  4716  0001AE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4717  0001B0  EC44  F01B         	call	_printf	;wreg free
  4718                           
  4719                           ;main.c: 108:                 printf("%04x", sdCardAddress >> 16);
  4720  0001B4  0EEE               	movlw	low STR_10
  4721  0001B6  0100               	movlb	0	; () banked
  4722  0001B8  6FA6               	movwf	printf@fmt& (0+255),b
  4723  0001BA  0EFF               	movlw	high STR_10
  4724  0001BC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4725  0001BE  C1D6  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  4726  0001C2  C1D7  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  4727  0001C6  6BAA               	clrf	(?_printf+4)& (0+255),b
  4728  0001C8  6BAB               	clrf	(?_printf+5)& (0+255),b
  4729  0001CA  EC44  F01B         	call	_printf	;wreg free
  4730                           
  4731                           ;main.c: 109:                 printf(":");
  4732  0001CE  0EFD               	movlw	low STR_11
  4733  0001D0  0100               	movlb	0	; () banked
  4734  0001D2  6FA6               	movwf	printf@fmt& (0+255),b
  4735  0001D4  0EFF               	movlw	high STR_11
  4736  0001D6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4737  0001D8  EC44  F01B         	call	_printf	;wreg free
  4738                           
  4739                           ;main.c: 110:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  4740  0001DC  0EEE               	movlw	low STR_10
  4741  0001DE  0100               	movlb	0	; () banked
  4742  0001E0  6FA6               	movwf	printf@fmt& (0+255),b
  4743  0001E2  0EFF               	movlw	high STR_10
  4744  0001E4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4745  0001E6  0EFF               	movlw	255
  4746  0001E8  0101               	movlb	1	; () banked
  4747  0001EA  15D4               	andwf	main@sdCardAddress& (0+255),w,b
  4748  0001EC  0100               	movlb	0	; () banked
  4749  0001EE  6FA8               	movwf	(?_printf+2)& (0+255),b
  4750  0001F0  0EFF               	movlw	255
  4751  0001F2  0101               	movlb	1	; () banked
  4752  0001F4  15D5               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  4753  0001F6  0100               	movlb	0	; () banked
  4754  0001F8  6FA9               	movwf	(?_printf+3)& (0+255),b
  4755  0001FA  0E00               	movlw	0
  4756  0001FC  0101               	movlb	1	; () banked
  4757  0001FE  15D6               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  4758  000200  0100               	movlb	0	; () banked
  4759  000202  6FAA               	movwf	(?_printf+4)& (0+255),b
  4760  000204  0E00               	movlw	0
  4761  000206  0101               	movlb	1	; () banked
  4762  000208  15D7               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  4763  00020A  0100               	movlb	0	; () banked
  4764  00020C  6FAB               	movwf	(?_printf+5)& (0+255),b
  4765  00020E  EC44  F01B         	call	_printf	;wreg free
  4766                           
  4767                           ;main.c: 111:                 printf("\r\n");
  4768  000212  0EAE               	movlw	low (STR_76+12)
  4769  000214  0100               	movlb	0	; () banked
  4770  000216  6FA6               	movwf	printf@fmt& (0+255),b
  4771  000218  0EFF               	movlw	high (STR_76+12)
  4772  00021A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4773  00021C  EC44  F01B         	call	_printf	;wreg free
  4774                           
  4775                           ;main.c: 112:                 printf("\tsample rate: %dus\r\n", sampleRate / 16);
  4776  000220  0E0B               	movlw	low STR_14
  4777  000222  0100               	movlb	0	; () banked
  4778  000224  6FA6               	movwf	printf@fmt& (0+255),b
  4779  000226  0EFF               	movlw	high STR_14
  4780  000228  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4781  00022A  C0D1  F0BE         	movff	_sampleRate,??_main
  4782  00022E  C0D2  F0BF         	movff	_sampleRate+1,??_main+1
  4783  000232  0E04               	movlw	4
  4784  000234  6FC0               	movwf	(??_main+2)& (0+255),b
  4785  000236                     u5985:
  4786  000236  90D8               	bcf	status,0,c
  4787  000238  33BF               	rrcf	(??_main+1)& (0+255),f,b
  4788  00023A  33BE               	rrcf	??_main& (0+255),f,b
  4789  00023C  2FC0               	decfsz	(??_main+2)& (0+255),f,b
  4790  00023E  EF1B  F001         	goto	u5985
  4791  000242  C0BE  F0A8         	movff	??_main,?_printf+2
  4792  000246  C0BF  F0A9         	movff	??_main+1,?_printf+3
  4793  00024A  EC44  F01B         	call	_printf	;wreg free
  4794                           
  4795                           ;main.c: 113:                 printf("-------------------------------------------------\
      +                          r\n");
  4796  00024E  0E43               	movlw	low (STR_7+2)
  4797  000250  0100               	movlb	0	; () banked
  4798  000252  6FA6               	movwf	printf@fmt& (0+255),b
  4799  000254  0EFB               	movlw	high (STR_7+2)
  4800  000256  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4801  000258  EC44  F01B         	call	_printf	;wreg free
  4802                           
  4803                           ;main.c: 114:                 printf("?: help menu\r\n");
  4804  00025C  0EB1               	movlw	low STR_16
  4805  00025E  0100               	movlb	0	; () banked
  4806  000260  6FA6               	movwf	printf@fmt& (0+255),b
  4807  000262  0EFF               	movlw	high STR_16
  4808  000264  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4809  000266  EC44  F01B         	call	_printf	;wreg free
  4810                           
  4811                           ;main.c: 115:                 printf("o: k\r\n");
  4812  00026A  0EDA               	movlw	low STR_17
  4813  00026C  0100               	movlb	0	; () banked
  4814  00026E  6FA6               	movwf	printf@fmt& (0+255),b
  4815  000270  0EFF               	movlw	high STR_17
  4816  000272  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4817  000274  EC44  F01B         	call	_printf	;wreg free
  4818                           
  4819                           ;main.c: 116:                 printf("Z: Reset processor\r\n");
  4820  000278  0EF6               	movlw	low STR_18
  4821  00027A  0100               	movlb	0	; () banked
  4822  00027C  6FA6               	movwf	printf@fmt& (0+255),b
  4823  00027E  0EFE               	movlw	high STR_18
  4824  000280  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4825  000282  EC44  F01B         	call	_printf	;wreg free
  4826                           
  4827                           ;main.c: 117:                 printf("z: Clear the terminal\r\n");
  4828  000286  0E87               	movlw	low STR_19
  4829  000288  0100               	movlb	0	; () banked
  4830  00028A  6FA6               	movwf	printf@fmt& (0+255),b
  4831  00028C  0EFE               	movlw	high STR_19
  4832  00028E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4833  000290  EC44  F01B         	call	_printf	;wreg free
  4834                           
  4835                           ;main.c: 118:                 printf("-------------------------------------------------\
      +                          r\n");
  4836  000294  0E43               	movlw	low (STR_7+2)
  4837  000296  0100               	movlb	0	; () banked
  4838  000298  6FA6               	movwf	printf@fmt& (0+255),b
  4839  00029A  0EFB               	movlw	high (STR_7+2)
  4840  00029C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4841  00029E  EC44  F01B         	call	_printf	;wreg free
  4842                           
  4843                           ;main.c: 119:                 printf("i: Initialize SD card\r\n");
  4844  0002A2  0E6F               	movlw	low STR_21
  4845  0002A4  0100               	movlb	0	; () banked
  4846  0002A6  6FA6               	movwf	printf@fmt& (0+255),b
  4847  0002A8  0EFE               	movlw	high STR_21
  4848  0002AA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4849  0002AC  EC44  F01B         	call	_printf	;wreg free
  4850                           
  4851                           ;main.c: 120:                 printf("-------------------------------------------------\
      +                          r\n");
  4852  0002B0  0E43               	movlw	low (STR_7+2)
  4853  0002B2  0100               	movlb	0	; () banked
  4854  0002B4  6FA6               	movwf	printf@fmt& (0+255),b
  4855  0002B6  0EFB               	movlw	high (STR_7+2)
  4856  0002B8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4857  0002BA  EC44  F01B         	call	_printf	;wreg free
  4858                           
  4859                           ;main.c: 121:                 printf("a/A decrease/increase read address\r\n");
  4860  0002BE  0EAE               	movlw	low STR_23
  4861  0002C0  0100               	movlb	0	; () banked
  4862  0002C2  6FA6               	movwf	printf@fmt& (0+255),b
  4863  0002C4  0EFC               	movlw	high STR_23
  4864  0002C6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4865  0002C8  EC44  F01B         	call	_printf	;wreg free
  4866                           
  4867                           ;main.c: 122:                 printf("r: read a block of %d bytes from SD card\r\n", 512
      +                          );
  4868  0002CC  0E36               	movlw	low STR_24
  4869  0002CE  0100               	movlb	0	; () banked
  4870  0002D0  6FA6               	movwf	printf@fmt& (0+255),b
  4871  0002D2  0EFC               	movlw	high STR_24
  4872  0002D4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4873  0002D6  0E02               	movlw	2
  4874  0002D8  6FA9               	movwf	(?_printf+3)& (0+255),b
  4875  0002DA  0E00               	movlw	0
  4876  0002DC  6FA8               	movwf	(?_printf+2)& (0+255),b
  4877  0002DE  EC44  F01B         	call	_printf	;wreg free
  4878                           
  4879                           ;main.c: 123:                 printf("1: write a perfect 26 value sine wave to the SD ca
      +                          rd\r\n", 512);
  4880  0002E2  0E0A               	movlw	low STR_25
  4881  0002E4  0100               	movlb	0	; () banked
  4882  0002E6  6FA6               	movwf	printf@fmt& (0+255),b
  4883  0002E8  0EFB               	movlw	high STR_25
  4884  0002EA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4885  0002EC  0E02               	movlw	2
  4886  0002EE  6FA9               	movwf	(?_printf+3)& (0+255),b
  4887  0002F0  0E00               	movlw	0
  4888  0002F2  6FA8               	movwf	(?_printf+2)& (0+255),b
  4889  0002F4  EC44  F01B         	call	_printf	;wreg free
  4890                           
  4891                           ;main.c: 124:                 printf("-------------------------------------------------\
      +                          r\n");
  4892  0002F8  0E43               	movlw	low (STR_7+2)
  4893  0002FA  0100               	movlb	0	; () banked
  4894  0002FC  6FA6               	movwf	printf@fmt& (0+255),b
  4895  0002FE  0EFB               	movlw	high (STR_7+2)
  4896  000300  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4897  000302  EC44  F01B         	call	_printf	;wreg free
  4898                           
  4899                           ;main.c: 125:                 printf("+/- Increase/Decrease the sample rate by 10 us\r\n
      +                          ");
  4900  000306  0EA9               	movlw	low STR_27
  4901  000308  0100               	movlb	0	; () banked
  4902  00030A  6FA6               	movwf	printf@fmt& (0+255),b
  4903  00030C  0EFB               	movlw	high STR_27
  4904  00030E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4905  000310  EC44  F01B         	call	_printf	;wreg free
  4906                           
  4907                           ;main.c: 126:                 printf("W: Write microphone => SD card at 1600 us\r\n");
  4908  000314  0E0A               	movlw	low STR_28
  4909  000316  0100               	movlb	0	; () banked
  4910  000318  6FA6               	movwf	printf@fmt& (0+255),b
  4911  00031A  0EFC               	movlw	high STR_28
  4912  00031C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4913  00031E  EC44  F01B         	call	_printf	;wreg free
  4914                           
  4915                           ;main.c: 127:                 printf("s: spool memory to a csv file\r\n");
  4916  000322  0E17               	movlw	low STR_29
  4917  000324  0100               	movlb	0	; () banked
  4918  000326  6FA6               	movwf	printf@fmt& (0+255),b
  4919  000328  0EFD               	movlw	high STR_29
  4920  00032A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4921  00032C  EC44  F01B         	call	_printf	;wreg free
  4922                           
  4923                           ;main.c: 128:                 printf("-------------------------------------------------\
      +                          r\n");
  4924  000330  0E43               	movlw	low (STR_7+2)
  4925  000332  0100               	movlb	0	; () banked
  4926  000334  6FA6               	movwf	printf@fmt& (0+255),b
  4927  000336  0EFB               	movlw	high (STR_7+2)
  4928  000338  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4929  00033A  EC44  F01B         	call	_printf	;wreg free
  4930                           
  4931                           ;main.c: 129:                 break;
  4932  00033E  EF7E  F000         	goto	l6040
  4933  000342                     l6050:
  4934                           
  4935                           ; BSR set to: 0
  4936                           ;main.c: 135:                 printf("o:	ok\r\n");
  4937  000342  0ED2               	movlw	low STR_31
  4938  000344  6FA6               	movwf	printf@fmt& (0+255),b
  4939  000346  0EFF               	movlw	high STR_31
  4940  000348  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4941  00034A  EC44  F01B         	call	_printf	;wreg free
  4942                           
  4943                           ;main.c: 136:                 break;
  4944  00034E  EF7E  F000         	goto	l6040
  4945  000352                     l6052:
  4946                           
  4947                           ; BSR set to: 0
  4948                           ;main.c: 142:                 for (i = 0; i < 40; i++) printf("\n");
  4949  000352  0E00               	movlw	0
  4950  000354  0101               	movlb	1	; () banked
  4951  000356  6FCB               	movwf	(main@i+1)& (0+255),b
  4952  000358  0E00               	movlw	0
  4953  00035A  6FCA               	movwf	main@i& (0+255),b
  4954  00035C                     l6054:
  4955                           
  4956                           ; BSR set to: 1
  4957  00035C  51CB               	movf	(main@i+1)& (0+255),w,b
  4958  00035E  E109               	bnz	u5990
  4959  000360  0E28               	movlw	40
  4960  000362  5DCA               	subwf	main@i& (0+255),w,b
  4961  000364  A0D8               	btfss	status,0,c
  4962  000366  EFB7  F001         	goto	u5991
  4963  00036A  EFB9  F001         	goto	u5990
  4964  00036E                     u5991:
  4965  00036E  EFBB  F001         	goto	l6058
  4966  000372                     u5990:
  4967  000372  EFC7  F001         	goto	l468
  4968  000376                     l6058:
  4969                           
  4970                           ; BSR set to: 1
  4971  000376  0EF5               	movlw	low (STR_121+2)
  4972  000378  0100               	movlb	0	; () banked
  4973  00037A  6FA6               	movwf	printf@fmt& (0+255),b
  4974  00037C  0EFF               	movlw	high (STR_121+2)
  4975  00037E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4976  000380  EC44  F01B         	call	_printf	;wreg free
  4977  000384  0101               	movlb	1	; () banked
  4978  000386  4BCA               	infsnz	main@i& (0+255),f,b
  4979  000388  2BCB               	incf	(main@i+1)& (0+255),f,b
  4980  00038A  EFAE  F001         	goto	l6054
  4981  00038E                     l468:
  4982                           
  4983                           ; BSR set to: 1
  4984  00038E  00FF               	reset		;# 
  4985                           
  4986                           ;main.c: 144:                 break;
  4987  000390  EF7E  F000         	goto	l6040
  4988  000394                     l6064:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;main.c: 150:                 for (i = 0; i < 40; i++) printf("\n");
  4992  000394  0E00               	movlw	0
  4993  000396  0101               	movlb	1	; () banked
  4994  000398  6FCB               	movwf	(main@i+1)& (0+255),b
  4995  00039A  0E00               	movlw	0
  4996  00039C  6FCA               	movwf	main@i& (0+255),b
  4997  00039E                     l6066:
  4998                           
  4999                           ; BSR set to: 1
  5000  00039E  51CB               	movf	(main@i+1)& (0+255),w,b
  5001  0003A0  E109               	bnz	u6000
  5002  0003A2  0E28               	movlw	40
  5003  0003A4  5DCA               	subwf	main@i& (0+255),w,b
  5004  0003A6  A0D8               	btfss	status,0,c
  5005  0003A8  EFD8  F001         	goto	u6001
  5006  0003AC  EFDA  F001         	goto	u6000
  5007  0003B0                     u6001:
  5008  0003B0  EFDC  F001         	goto	l6070
  5009  0003B4                     u6000:
  5010  0003B4  EF7E  F000         	goto	l6040
  5011  0003B8                     l6070:
  5012                           
  5013                           ; BSR set to: 1
  5014  0003B8  0EF5               	movlw	low (STR_121+2)
  5015  0003BA  0100               	movlb	0	; () banked
  5016  0003BC  6FA6               	movwf	printf@fmt& (0+255),b
  5017  0003BE  0EFF               	movlw	high (STR_121+2)
  5018  0003C0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5019  0003C2  EC44  F01B         	call	_printf	;wreg free
  5020  0003C6  0101               	movlb	1	; () banked
  5021  0003C8  4BCA               	infsnz	main@i& (0+255),f,b
  5022  0003CA  2BCB               	incf	(main@i+1)& (0+255),f,b
  5023  0003CC  EFCF  F001         	goto	l6066
  5024  0003D0                     l472:
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;main.c: 154:                 static uint8_t sinIndex = 0;;main.c: 155:                 
      +                          uint32_t writeAddress = sdCardAddress;
  5028  0003D0  C1D4  F1CC         	movff	main@sdCardAddress,main@writeAddress
  5029  0003D4  C1D5  F1CD         	movff	main@sdCardAddress+1,main@writeAddress+1
  5030  0003D8  C1D6  F1CE         	movff	main@sdCardAddress+2,main@writeAddress+2
  5031  0003DC  C1D7  F1CF         	movff	main@sdCardAddress+3,main@writeAddress+3
  5032  0003E0                     
  5033                           ; BSR set to: 0
  5034                           ;main.c: 157:                 printAddress(writeAddress);
  5035  0003E0  C1CC  F0B4         	movff	main@writeAddress,printAddress@address
  5036  0003E4  C1CD  F0B5         	movff	main@writeAddress+1,printAddress@address+1
  5037  0003E8  C1CE  F0B6         	movff	main@writeAddress+2,printAddress@address+2
  5038  0003EC  C1CF  F0B7         	movff	main@writeAddress+3,printAddress@address+3
  5039  0003F0  ECF4  F018         	call	_printAddress	;wreg free
  5040  0003F4                     
  5041                           ;main.c: 159:                 for (uint8_t j = 0; j < 128 && !(EUSART1_is_rx_ready()); j
      +                          ++){
  5042  0003F4  0E00               	movlw	0
  5043  0003F6  0101               	movlb	1	; () banked
  5044  0003F8  6FAF               	movwf	main@j& (0+255),b
  5045  0003FA  EF6B  F002         	goto	l6106
  5046  0003FE                     l6080:
  5047                           
  5048                           ;main.c: 160:                     for (uint16_t i = 0; i < 512; i++) {
  5049  0003FE  0E00               	movlw	0
  5050  000400  0101               	movlb	1	; () banked
  5051  000402  6FBD               	movwf	(main@i_1280+1)& (0+255),b
  5052  000404  0E00               	movlw	0
  5053  000406  6FBC               	movwf	main@i_1280& (0+255),b
  5054  000408                     l6082:
  5055                           
  5056                           ; BSR set to: 1
  5057  000408  0E02               	movlw	2
  5058  00040A  5DBD               	subwf	(main@i_1280+1)& (0+255),w,b
  5059  00040C  A0D8               	btfss	status,0,c
  5060  00040E  EF0B  F002         	goto	u6011
  5061  000412  EF0D  F002         	goto	u6010
  5062  000416                     u6011:
  5063  000416  EF0F  F002         	goto	l6086
  5064  00041A                     u6010:
  5065  00041A  EF34  F002         	goto	l6096
  5066  00041E                     l6086:
  5067                           
  5068                           ; BSR set to: 1
  5069                           ;main.c: 161:                         sdCardBuffer[i] = sin[sinIndex];
  5070  00041E  0E17               	movlw	low _sin
  5071  000420  0100               	movlb	0	; () banked
  5072  000422  25CC               	addwf	main@sinIndex& (0+255),w,b
  5073  000424  6EF6               	movwf	tblptrl,c
  5074  000426  6AF7               	clrf	tblptrh,c
  5075  000428  0EF3               	movlw	high _sin
  5076  00042A  22F7               	addwfc	tblptrh,f,c
  5077  00042C                     	if	1	;There are 3 active tblptr bytes
  5078  00042C  6AF8               	clrf	tblptru,c
  5079  00042E  0E00               	movlw	low (__mediumconst shr (0+16))
  5080  000430  22F8               	addwfc	tblptru,f,c
  5081  000432                     	endif
  5082  000432  0EDE               	movlw	low _sdCardBuffer
  5083  000434  0101               	movlb	1	; () banked
  5084  000436  25BC               	addwf	main@i_1280& (0+255),w,b
  5085  000438  6ED9               	movwf	fsr2l,c
  5086  00043A  0E07               	movlw	high _sdCardBuffer
  5087  00043C  21BD               	addwfc	(main@i_1280+1)& (0+255),w,b
  5088  00043E  6EDA               	movwf	fsr2h,c
  5089  000440  0008               	tblrd		*
  5090  000442  CFF5 FFDF          	movff	tablat,indf2
  5091  000446                     
  5092                           ; BSR set to: 1
  5093                           ;main.c: 162:                         if (++sinIndex >= sizeof(sin))
  5094  000446  0100               	movlb	0	; () banked
  5095  000448  2BCC               	incf	main@sinIndex& (0+255),f,b
  5096  00044A  0E19               	movlw	25
  5097  00044C  65CC               	cpfsgt	main@sinIndex& (0+255),b
  5098  00044E  EF2B  F002         	goto	u6021
  5099  000452  EF2D  F002         	goto	u6020
  5100  000456                     u6021:
  5101  000456  EF2F  F002         	goto	l6092
  5102  00045A                     u6020:
  5103  00045A                     
  5104                           ; BSR set to: 0
  5105                           ;main.c: 163:                             sinIndex = 0;
  5106  00045A  0E00               	movlw	0
  5107  00045C  6FCC               	movwf	main@sinIndex& (0+255),b
  5108  00045E                     l6092:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;main.c: 164:                     }
  5112  00045E  0101               	movlb	1	; () banked
  5113  000460  4BBC               	infsnz	main@i_1280& (0+255),f,b
  5114  000462  2BBD               	incf	(main@i_1280+1)& (0+255),f,b
  5115  000464  EF04  F002         	goto	l6082
  5116  000468                     l6096:
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;main.c: 166:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer);
  5120  000468  C1CC  F015         	movff	main@writeAddress,SDCARD_WriteBlock@addr
  5121  00046C  C1CD  F016         	movff	main@writeAddress+1,SDCARD_WriteBlock@addr+1
  5122  000470  C1CE  F017         	movff	main@writeAddress+2,SDCARD_WriteBlock@addr+2
  5123  000474  C1CF  F018         	movff	main@writeAddress+3,SDCARD_WriteBlock@addr+3
  5124  000478  0EDE               	movlw	low _sdCardBuffer
  5125  00047A  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5126  00047C  0E07               	movlw	high _sdCardBuffer
  5127  00047E  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5128  000480  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  5129  000484                     l6098:
  5130  000484  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5131  000488  0101               	movlb	1	; () banked
  5132  00048A  6FD9               	movwf	main@status& (0+255),b
  5133  00048C  29D9               	incf	main@status& (0+255),w,b
  5134  00048E  B4D8               	btfsc	status,2,c
  5135  000490  EF4C  F002         	goto	u6031
  5136  000494  EF4E  F002         	goto	u6030
  5137  000498                     u6031:
  5138  000498  EF42  F002         	goto	l6098
  5139  00049C                     u6030:
  5140  00049C                     
  5141                           ; BSR set to: 1
  5142                           ;main.c: 168:                     } while (status != 5);
  5143  00049C  0E05               	movlw	5
  5144  00049E  19D9               	xorwf	main@status& (0+255),w,b
  5145  0004A0  A4D8               	btfss	status,2,c
  5146  0004A2  EF55  F002         	goto	u6041
  5147  0004A6  EF57  F002         	goto	u6040
  5148  0004AA                     u6041:
  5149  0004AA  EF34  F002         	goto	l6096
  5150  0004AE                     u6040:
  5151  0004AE                     
  5152                           ; BSR set to: 1
  5153                           ;main.c: 170:                     writeAddress = incrementAddress(writeAddress);
  5154  0004AE  C1CC  F014         	movff	main@writeAddress,incrementAddress@sdCardAddress
  5155  0004B2  C1CD  F015         	movff	main@writeAddress+1,incrementAddress@sdCardAddress+1
  5156  0004B6  C1CE  F016         	movff	main@writeAddress+2,incrementAddress@sdCardAddress+2
  5157  0004BA  C1CF  F017         	movff	main@writeAddress+3,incrementAddress@sdCardAddress+3
  5158  0004BE  ECB4  F019         	call	_incrementAddress	;wreg free
  5159  0004C2  C014  F1CC         	movff	?_incrementAddress,main@writeAddress
  5160  0004C6  C015  F1CD         	movff	?_incrementAddress+1,main@writeAddress+1
  5161  0004CA  C016  F1CE         	movff	?_incrementAddress+2,main@writeAddress+2
  5162  0004CE  C017  F1CF         	movff	?_incrementAddress+3,main@writeAddress+3
  5163  0004D2                     
  5164                           ;main.c: 171:                 }
  5165  0004D2  0101               	movlb	1	; () banked
  5166  0004D4  2BAF               	incf	main@j& (0+255),f,b
  5167  0004D6                     l6106:
  5168                           
  5169                           ; BSR set to: 1
  5170  0004D6  0E80               	movlw	128
  5171  0004D8  61AF               	cpfslt	main@j& (0+255),b
  5172  0004DA  EF71  F002         	goto	u6051
  5173  0004DE  EF73  F002         	goto	u6050
  5174  0004E2                     u6051:
  5175  0004E2  EF7D  F002         	goto	l6110
  5176  0004E6                     u6050:
  5177  0004E6                     
  5178                           ; BSR set to: 1
  5179  0004E6  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5180  0004EA  0900               	iorlw	0
  5181  0004EC  B4D8               	btfsc	status,2,c
  5182  0004EE  EF7B  F002         	goto	u6061
  5183  0004F2  EF7D  F002         	goto	u6060
  5184  0004F6                     u6061:
  5185  0004F6  EFFF  F001         	goto	l6080
  5186  0004FA                     u6060:
  5187  0004FA                     l6110:
  5188                           
  5189                           ;main.c: 172:                 if ((EUSART1_is_rx_ready()))
  5190  0004FA  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5191  0004FE  0900               	iorlw	0
  5192  000500  B4D8               	btfsc	status,2,c
  5193  000502  EF85  F002         	goto	u6071
  5194  000506  EF87  F002         	goto	u6070
  5195  00050A                     u6071:
  5196  00050A  EF89  F002         	goto	l6114
  5197  00050E                     u6070:
  5198  00050E                     
  5199                           ;main.c: 173:                     EUSART1_Read();
  5200  00050E  EC58  F01B         	call	_EUSART1_Read	;wreg free
  5201  000512                     l6114:
  5202                           
  5203                           ;main.c: 175:                 writeEndAddress = writeAddress;
  5204  000512  C1CC  F1C6         	movff	main@writeAddress,main@writeEndAddress
  5205  000516  C1CD  F1C7         	movff	main@writeAddress+1,main@writeEndAddress+1
  5206  00051A  C1CE  F1C8         	movff	main@writeAddress+2,main@writeEndAddress+2
  5207  00051E  C1CF  F1C9         	movff	main@writeAddress+3,main@writeEndAddress+3
  5208  000522                     
  5209                           ;main.c: 176:                 uint32_t storedCounter = writeAddress - sdCardAddress;
  5210  000522  0101               	movlb	1	; () banked
  5211  000524  51D4               	movf	main@sdCardAddress& (0+255),w,b
  5212  000526  5DCC               	subwf	main@writeAddress& (0+255),w,b
  5213  000528  6FA7               	movwf	main@storedCounter& (0+255),b
  5214  00052A  51D5               	movf	(main@sdCardAddress+1)& (0+255),w,b
  5215  00052C  59CD               	subwfb	(main@writeAddress+1)& (0+255),w,b
  5216  00052E  6FA8               	movwf	(main@storedCounter+1)& (0+255),b
  5217  000530  51D6               	movf	(main@sdCardAddress+2)& (0+255),w,b
  5218  000532  59CE               	subwfb	(main@writeAddress+2)& (0+255),w,b
  5219  000534  6FA9               	movwf	(main@storedCounter+2)& (0+255),b
  5220  000536  51D7               	movf	(main@sdCardAddress+3)& (0+255),w,b
  5221  000538  59CF               	subwfb	(main@writeAddress+3)& (0+255),w,b
  5222  00053A  6FAA               	movwf	(main@storedCounter+3)& (0+255),b
  5223  00053C                     
  5224                           ; BSR set to: 1
  5225                           ;main.c: 177:                 storedCounter >>= 9;
  5226  00053C  0E09               	movlw	9
  5227  00053E  0100               	movlb	0	; () banked
  5228  000540  6FBE               	movwf	??_main& (0+255),b
  5229  000542                     u6085:
  5230  000542  90D8               	bcf	status,0,c
  5231  000544  0101               	movlb	1	; () banked
  5232  000546  33AA               	rrcf	(main@storedCounter+3)& (0+255),f,b
  5233  000548  33A9               	rrcf	(main@storedCounter+2)& (0+255),f,b
  5234  00054A  33A8               	rrcf	(main@storedCounter+1)& (0+255),f,b
  5235  00054C  33A7               	rrcf	main@storedCounter& (0+255),f,b
  5236  00054E  0100               	movlb	0	; () banked
  5237  000550  2FBE               	decfsz	??_main& (0+255),f,b
  5238  000552  EFA1  F002         	goto	u6085
  5239  000556                     
  5240                           ; BSR set to: 0
  5241                           ;main.c: 179:                 printf("Write block sin wave values:\r\n");
  5242  000556  0E37               	movlw	low STR_34
  5243  000558  6FA6               	movwf	printf@fmt& (0+255),b
  5244  00055A  0EFD               	movlw	high STR_34
  5245  00055C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5246  00055E  EC44  F01B         	call	_printf	;wreg free
  5247  000562                     
  5248                           ;main.c: 180:                 printf("Amount of blocks stored: %d\r\n", storedCounter) ;
  5249  000562  0E75               	movlw	low STR_35
  5250  000564  0100               	movlb	0	; () banked
  5251  000566  6FA6               	movwf	printf@fmt& (0+255),b
  5252  000568  0EFD               	movlw	high STR_35
  5253  00056A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5254  00056C  C1A7  F0A8         	movff	main@storedCounter,?_printf+2
  5255  000570  C1A8  F0A9         	movff	main@storedCounter+1,?_printf+3
  5256  000574  C1A9  F0AA         	movff	main@storedCounter+2,?_printf+4
  5257  000578  C1AA  F0AB         	movff	main@storedCounter+3,?_printf+5
  5258  00057C  EC44  F01B         	call	_printf	;wreg free
  5259  000580                     
  5260                           ;main.c: 181:                 printf("    Address:    ");
  5261  000580  0E80               	movlw	low STR_36
  5262  000582  0100               	movlb	0	; () banked
  5263  000584  6FA6               	movwf	printf@fmt& (0+255),b
  5264  000586  0EFF               	movlw	high STR_36
  5265  000588  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5266  00058A  EC44  F01B         	call	_printf	;wreg free
  5267  00058E                     
  5268                           ;main.c: 182:                 printf("%04x", sdCardAddress >> 16);
  5269  00058E  0EEE               	movlw	low STR_10
  5270  000590  0100               	movlb	0	; () banked
  5271  000592  6FA6               	movwf	printf@fmt& (0+255),b
  5272  000594  0EFF               	movlw	high STR_10
  5273  000596  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5274  000598  C1D6  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  5275  00059C  C1D7  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  5276  0005A0  6BAA               	clrf	(?_printf+4)& (0+255),b
  5277  0005A2  6BAB               	clrf	(?_printf+5)& (0+255),b
  5278  0005A4  EC44  F01B         	call	_printf	;wreg free
  5279  0005A8                     
  5280                           ;main.c: 183:                 printf(":");
  5281  0005A8  0EFD               	movlw	low STR_11
  5282  0005AA  0100               	movlb	0	; () banked
  5283  0005AC  6FA6               	movwf	printf@fmt& (0+255),b
  5284  0005AE  0EFF               	movlw	high STR_11
  5285  0005B0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5286  0005B2  EC44  F01B         	call	_printf	;wreg free
  5287  0005B6                     
  5288                           ;main.c: 184:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  5289  0005B6  0EEE               	movlw	low STR_10
  5290  0005B8  0100               	movlb	0	; () banked
  5291  0005BA  6FA6               	movwf	printf@fmt& (0+255),b
  5292  0005BC  0EFF               	movlw	high STR_10
  5293  0005BE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5294  0005C0  0EFF               	movlw	255
  5295  0005C2  0101               	movlb	1	; () banked
  5296  0005C4  15D4               	andwf	main@sdCardAddress& (0+255),w,b
  5297  0005C6  0100               	movlb	0	; () banked
  5298  0005C8  6FA8               	movwf	(?_printf+2)& (0+255),b
  5299  0005CA  0EFF               	movlw	255
  5300  0005CC  0101               	movlb	1	; () banked
  5301  0005CE  15D5               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  5302  0005D0  0100               	movlb	0	; () banked
  5303  0005D2  6FA9               	movwf	(?_printf+3)& (0+255),b
  5304  0005D4  0E00               	movlw	0
  5305  0005D6  0101               	movlb	1	; () banked
  5306  0005D8  15D6               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  5307  0005DA  0100               	movlb	0	; () banked
  5308  0005DC  6FAA               	movwf	(?_printf+4)& (0+255),b
  5309  0005DE  0E00               	movlw	0
  5310  0005E0  0101               	movlb	1	; () banked
  5311  0005E2  15D7               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  5312  0005E4  0100               	movlb	0	; () banked
  5313  0005E6  6FAB               	movwf	(?_printf+5)& (0+255),b
  5314  0005E8  EC44  F01B         	call	_printf	;wreg free
  5315  0005EC                     
  5316                           ;main.c: 185:                 printf("\r\n");
  5317  0005EC  0EAE               	movlw	low (STR_76+12)
  5318  0005EE  0100               	movlb	0	; () banked
  5319  0005F0  6FA6               	movwf	printf@fmt& (0+255),b
  5320  0005F2  0EFF               	movlw	high (STR_76+12)
  5321  0005F4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5322  0005F6  EC44  F01B         	call	_printf	;wreg free
  5323  0005FA                     
  5324                           ;main.c: 186:                 printf("    Status:     %02x\r\n", status);
  5325  0005FA  0E9F               	movlw	low STR_41
  5326  0005FC  0100               	movlb	0	; () banked
  5327  0005FE  6FA6               	movwf	printf@fmt& (0+255),b
  5328  000600  0EFE               	movlw	high STR_41
  5329  000602  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5330  000604  C1D9  F0A8         	movff	main@status,?_printf+2
  5331  000608  6BA9               	clrf	(?_printf+3)& (0+255),b
  5332  00060A  EC44  F01B         	call	_printf	;wreg free
  5333                           
  5334                           ;main.c: 187:             };main.c: 188:                 break;
  5335  00060E  EF7E  F000         	goto	l6040
  5336  000612                     l6136:
  5337                           
  5338                           ; BSR set to: 0
  5339                           ;main.c: 191:                 sampleRate = sampleRate + 160;
  5340  000612  0EA0               	movlw	160
  5341  000614  25D1               	addwf	_sampleRate& (0+255),w,b
  5342  000616  6FD1               	movwf	_sampleRate& (0+255),b
  5343  000618  0E00               	movlw	0
  5344  00061A  21D2               	addwfc	(_sampleRate+1)& (0+255),w,b
  5345  00061C  6FD2               	movwf	(_sampleRate+1)& (0+255),b
  5346                           
  5347                           ;main.c: 192:                 break;
  5348  00061E  EF7E  F000         	goto	l6040
  5349  000622                     l6138:
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;main.c: 195:                 if (sampleRate > 320 ) {
  5353  000622  0E41               	movlw	65
  5354  000624  5DD1               	subwf	_sampleRate& (0+255),w,b
  5355  000626  0E01               	movlw	1
  5356  000628  59D2               	subwfb	(_sampleRate+1)& (0+255),w,b
  5357  00062A  A0D8               	btfss	status,0,c
  5358  00062C  EF1A  F003         	goto	u6091
  5359  000630  EF1C  F003         	goto	u6090
  5360  000634                     u6091:
  5361  000634  EF7E  F000         	goto	l6040
  5362  000638                     u6090:
  5363  000638                     
  5364                           ; BSR set to: 0
  5365                           ;main.c: 196:                     sampleRate = sampleRate - 160;
  5366  000638  0E60               	movlw	96
  5367  00063A  25D1               	addwf	_sampleRate& (0+255),w,b
  5368  00063C  6FD1               	movwf	_sampleRate& (0+255),b
  5369  00063E  0EFF               	movlw	255
  5370  000640  21D2               	addwfc	(_sampleRate+1)& (0+255),w,b
  5371  000642  6FD2               	movwf	(_sampleRate+1)& (0+255),b
  5372                           
  5373                           ;main.c: 197:                 } else {
  5374  000644  EF7E  F000         	goto	l6040
  5375  000648                     l493:
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;main.c: 203:                 uint32_t readAddress = writeStartAddress;
  5379  000648  C1B8  F1D0         	movff	main@writeStartAddress,main@readAddress
  5380  00064C  C1B9  F1D1         	movff	main@writeStartAddress+1,main@readAddress+1
  5381  000650  C1BA  F1D2         	movff	main@writeStartAddress+2,main@readAddress+2
  5382  000654  C1BB  F1D3         	movff	main@writeStartAddress+3,main@readAddress+3
  5383  000658                     
  5384                           ; BSR set to: 0
  5385                           ;main.c: 204:                 buffer1Full = 0;
  5386  000658  0E00               	movlw	0
  5387  00065A  6FD0               	movwf	_buffer1Full& (0+255),b
  5388                           
  5389                           ;main.c: 205:                 buffer2Full = 0;
  5390  00065C  0E00               	movlw	0
  5391  00065E  6FCF               	movwf	_buffer2Full& (0+255),b
  5392                           
  5393                           ;main.c: 206:                 doPlayback = 1;
  5394  000660  0E01               	movlw	1
  5395  000662  6FCD               	movwf	_doPlayback& (0+255),b
  5396                           
  5397                           ;main.c: 207:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5398  000664  EFA1  F003         	goto	l6164
  5399  000668                     l6144:
  5400  000668  0100               	movlb	0	; () banked
  5401  00066A  51D0               	movf	_buffer1Full& (0+255),w,b
  5402  00066C  A4D8               	btfss	status,2,c
  5403  00066E  EF3B  F003         	goto	u6101
  5404  000672  EF3D  F003         	goto	u6100
  5405  000676                     u6101:
  5406  000676  EF34  F003         	goto	l6144
  5407  00067A                     u6100:
  5408  00067A                     
  5409                           ; BSR set to: 0
  5410                           ;main.c: 209:                     SDCARD_ReadBlock(readAddress, sdCardBuffer1);
  5411  00067A  C1D0  F015         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5412  00067E  C1D1  F016         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5413  000682  C1D2  F017         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5414  000686  C1D3  F018         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5415  00068A  0EDE               	movlw	low _sdCardBuffer1
  5416  00068C  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5417  00068E  0E05               	movlw	high _sdCardBuffer1
  5418  000690  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5419  000692  ECDC  F017         	call	_SDCARD_ReadBlock	;wreg free
  5420  000696                     
  5421                           ;main.c: 210:                     buffer1Full = 1;
  5422  000696  0E01               	movlw	1
  5423  000698  0100               	movlb	0	; () banked
  5424  00069A  6FD0               	movwf	_buffer1Full& (0+255),b
  5425  00069C                     
  5426                           ; BSR set to: 0
  5427                           ;main.c: 211:                     readAddress = incrementAddress(readAddress);
  5428  00069C  C1D0  F014         	movff	main@readAddress,incrementAddress@sdCardAddress
  5429  0006A0  C1D1  F015         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5430  0006A4  C1D2  F016         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5431  0006A8  C1D3  F017         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5432  0006AC  ECB4  F019         	call	_incrementAddress	;wreg free
  5433  0006B0  C014  F1D0         	movff	?_incrementAddress,main@readAddress
  5434  0006B4  C015  F1D1         	movff	?_incrementAddress+1,main@readAddress+1
  5435  0006B8  C016  F1D2         	movff	?_incrementAddress+2,main@readAddress+2
  5436  0006BC  C017  F1D3         	movff	?_incrementAddress+3,main@readAddress+3
  5437  0006C0                     
  5438                           ;main.c: 212:                     if (readAddress == writeEndAddress)
  5439  0006C0  0101               	movlb	1	; () banked
  5440  0006C2  51C6               	movf	main@writeEndAddress& (0+255),w,b
  5441  0006C4  19D0               	xorwf	main@readAddress& (0+255),w,b
  5442  0006C6  E10D               	bnz	u6111
  5443  0006C8  51C7               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5444  0006CA  19D1               	xorwf	(main@readAddress+1)& (0+255),w,b
  5445  0006CC  E10A               	bnz	u6111
  5446  0006CE  51C8               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5447  0006D0  19D2               	xorwf	(main@readAddress+2)& (0+255),w,b
  5448  0006D2  E107               	bnz	u6111
  5449  0006D4  51C9               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5450  0006D6  19D3               	xorwf	(main@readAddress+3)& (0+255),w,b
  5451  0006D8  A4D8               	btfss	status,2,c
  5452  0006DA  EF71  F003         	goto	u6111
  5453  0006DE  EF73  F003         	goto	u6110
  5454  0006E2                     u6111:
  5455  0006E2  EF75  F003         	goto	l6156
  5456  0006E6                     u6110:
  5457  0006E6  EFBE  F003         	goto	l6168
  5458  0006EA                     l6156:
  5459  0006EA  0100               	movlb	0	; () banked
  5460  0006EC  51CF               	movf	_buffer2Full& (0+255),w,b
  5461  0006EE  A4D8               	btfss	status,2,c
  5462  0006F0  EF7C  F003         	goto	u6121
  5463  0006F4  EF7E  F003         	goto	u6120
  5464  0006F8                     u6121:
  5465  0006F8  EF75  F003         	goto	l6156
  5466  0006FC                     u6120:
  5467  0006FC                     
  5468                           ; BSR set to: 0
  5469                           ;main.c: 215:                     SDCARD_ReadBlock(readAddress, sdCardBuffer2);
  5470  0006FC  C1D0  F015         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5471  000700  C1D1  F016         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5472  000704  C1D2  F017         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5473  000708  C1D3  F018         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5474  00070C  0EDE               	movlw	low _sdCardBuffer2
  5475  00070E  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5476  000710  0E03               	movlw	high _sdCardBuffer2
  5477  000712  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5478  000714  ECDC  F017         	call	_SDCARD_ReadBlock	;wreg free
  5479  000718                     
  5480                           ;main.c: 216:                     buffer2Full = 1;
  5481  000718  0E01               	movlw	1
  5482  00071A  0100               	movlb	0	; () banked
  5483  00071C  6FCF               	movwf	_buffer2Full& (0+255),b
  5484  00071E                     
  5485                           ; BSR set to: 0
  5486                           ;main.c: 217:                     readAddress = incrementAddress(readAddress);
  5487  00071E  C1D0  F014         	movff	main@readAddress,incrementAddress@sdCardAddress
  5488  000722  C1D1  F015         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5489  000726  C1D2  F016         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5490  00072A  C1D3  F017         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5491  00072E  ECB4  F019         	call	_incrementAddress	;wreg free
  5492  000732  C014  F1D0         	movff	?_incrementAddress,main@readAddress
  5493  000736  C015  F1D1         	movff	?_incrementAddress+1,main@readAddress+1
  5494  00073A  C016  F1D2         	movff	?_incrementAddress+2,main@readAddress+2
  5495  00073E  C017  F1D3         	movff	?_incrementAddress+3,main@readAddress+3
  5496  000742                     l6164:
  5497                           
  5498                           ;main.c: 207:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5499  000742  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5500  000746  0900               	iorlw	0
  5501  000748  A4D8               	btfss	status,2,c
  5502  00074A  EFA9  F003         	goto	u6131
  5503  00074E  EFAB  F003         	goto	u6130
  5504  000752                     u6131:
  5505  000752  EFBE  F003         	goto	l6168
  5506  000756                     u6130:
  5507  000756  0101               	movlb	1	; () banked
  5508  000758  51C6               	movf	main@writeEndAddress& (0+255),w,b
  5509  00075A  19D0               	xorwf	main@readAddress& (0+255),w,b
  5510  00075C  E10D               	bnz	u6141
  5511  00075E  51C7               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5512  000760  19D1               	xorwf	(main@readAddress+1)& (0+255),w,b
  5513  000762  E10A               	bnz	u6141
  5514  000764  51C8               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5515  000766  19D2               	xorwf	(main@readAddress+2)& (0+255),w,b
  5516  000768  E107               	bnz	u6141
  5517  00076A  51C9               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5518  00076C  19D3               	xorwf	(main@readAddress+3)& (0+255),w,b
  5519  00076E  A4D8               	btfss	status,2,c
  5520  000770  EFBC  F003         	goto	u6141
  5521  000774  EFBE  F003         	goto	u6140
  5522  000778                     u6141:
  5523  000778  EF34  F003         	goto	l6144
  5524  00077C                     u6140:
  5525  00077C                     l6168:
  5526                           
  5527                           ;main.c: 219:                 stopPlayback = 1;
  5528  00077C  0E01               	movlw	1
  5529  00077E  6E46               	movwf	_stopPlayback^0,c
  5530  000780                     
  5531                           ;main.c: 220:                 if ((EUSART1_is_rx_ready())) {
  5532  000780  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5533  000784  0900               	iorlw	0
  5534  000786  B4D8               	btfsc	status,2,c
  5535  000788  EFC8  F003         	goto	u6151
  5536  00078C  EFCA  F003         	goto	u6150
  5537  000790                     u6151:
  5538  000790  EFCC  F003         	goto	l6174
  5539  000794                     u6150:
  5540  000794                     
  5541                           ;main.c: 221:                     EUSART1_Read();
  5542  000794  EC58  F01B         	call	_EUSART1_Read	;wreg free
  5543  000798                     l6174:
  5544  000798  0100               	movlb	0	; () banked
  5545  00079A  51CD               	movf	_doPlayback& (0+255),w,b
  5546  00079C  A4D8               	btfss	status,2,c
  5547  00079E  EFD3  F003         	goto	u6161
  5548  0007A2  EFD5  F003         	goto	u6160
  5549  0007A6                     u6161:
  5550  0007A6  EFCC  F003         	goto	l6174
  5551  0007AA                     u6160:
  5552  0007AA  EF7E  F000         	goto	l6040
  5553  0007AE                     l6176:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;main.c: 228:                 printf("Press any key to start recording audio and press a
      +                          ny key to stop recording.");
  5557  0007AE  0E35               	movlw	low STR_42
  5558  0007B0  6FA6               	movwf	printf@fmt& (0+255),b
  5559  0007B2  0EF3               	movlw	high STR_42
  5560  0007B4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5561  0007B6  EC44  F01B         	call	_printf	;wreg free
  5562  0007BA                     l6178:
  5563  0007BA  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5564  0007BE  0900               	iorlw	0
  5565  0007C0  B4D8               	btfsc	status,2,c
  5566  0007C2  EFE5  F003         	goto	u6171
  5567  0007C6  EFE7  F003         	goto	u6170
  5568  0007CA                     u6171:
  5569  0007CA  EFDD  F003         	goto	l6178
  5570  0007CE                     u6170:
  5571  0007CE                     
  5572                           ;main.c: 230:                 EUSART1_Read();
  5573  0007CE  EC58  F01B         	call	_EUSART1_Read	;wreg free
  5574  0007D2                     
  5575                           ;main.c: 231:                 writeStartAddress = sdCardAddress;
  5576  0007D2  C1D4  F1B8         	movff	main@sdCardAddress,main@writeStartAddress
  5577  0007D6  C1D5  F1B9         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5578  0007DA  C1D6  F1BA         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5579  0007DE  C1D7  F1BB         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5580  0007E2                     
  5581                           ;main.c: 232:                 uint32_t writeAddress = sdCardAddress;
  5582  0007E2  C1D4  F1DA         	movff	main@sdCardAddress,main@writeAddress_1292
  5583  0007E6  C1D5  F1DB         	movff	main@sdCardAddress+1,main@writeAddress_1292+1
  5584  0007EA  C1D6  F1DC         	movff	main@sdCardAddress+2,main@writeAddress_1292+2
  5585  0007EE  C1D7  F1DD         	movff	main@sdCardAddress+3,main@writeAddress_1292+3
  5586  0007F2                     
  5587                           ;main.c: 233:                 uint8_t failureIndex = 0;
  5588  0007F2  0E00               	movlw	0
  5589  0007F4  0101               	movlb	1	; () banked
  5590  0007F6  6FD8               	movwf	main@failureIndex& (0+255),b
  5591  0007F8                     
  5592                           ; BSR set to: 1
  5593                           ;main.c: 234:                 startCollect = 1;
  5594  0007F8  0E01               	movlw	1
  5595  0007FA  6E48               	movwf	_startCollect^0,c
  5596                           
  5597                           ;main.c: 236:                 while (!(EUSART1_is_rx_ready())) {
  5598  0007FC  EF10  F005         	goto	l6242
  5599  000800                     l6190:
  5600                           
  5601                           ;main.c: 237:                     if (buffer1Full) {
  5602  000800  0100               	movlb	0	; () banked
  5603  000802  51D0               	movf	_buffer1Full& (0+255),w,b
  5604  000804  B4D8               	btfsc	status,2,c
  5605  000806  EF07  F004         	goto	u6181
  5606  00080A  EF09  F004         	goto	u6180
  5607  00080E                     u6181:
  5608  00080E  EF88  F004         	goto	l6216
  5609  000812                     u6180:
  5610  000812                     
  5611                           ; BSR set to: 0
  5612                           ;main.c: 238:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5613  000812  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  5614  000816  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  5615  00081A  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  5616  00081E  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  5617  000822  0EDE               	movlw	low _sdCardBuffer1
  5618  000824  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5619  000826  0E05               	movlw	high _sdCardBuffer1
  5620  000828  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5621  00082A  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  5622  00082E                     l6194:
  5623  00082E  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5624  000832  0101               	movlb	1	; () banked
  5625  000834  6FD9               	movwf	main@status& (0+255),b
  5626  000836  29D9               	incf	main@status& (0+255),w,b
  5627  000838  B4D8               	btfsc	status,2,c
  5628  00083A  EF21  F004         	goto	u6191
  5629  00083E  EF23  F004         	goto	u6190
  5630  000842                     u6191:
  5631  000842  EF17  F004         	goto	l6194
  5632  000846                     u6190:
  5633  000846                     
  5634                           ; BSR set to: 1
  5635                           ;main.c: 240:                         if ((status & 0x1F) != 0x5) {
  5636  000846  51D9               	movf	main@status& (0+255),w,b
  5637  000848  0B1F               	andlw	31
  5638  00084A  0A05               	xorlw	5
  5639  00084C  B4D8               	btfsc	status,2,c
  5640  00084E  EF2B  F004         	goto	u6201
  5641  000852  EF2D  F004         	goto	u6200
  5642  000856                     u6201:
  5643  000856  EF47  F004         	goto	l6202
  5644  00085A                     u6200:
  5645  00085A                     
  5646                           ; BSR set to: 1
  5647                           ;main.c: 241:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5648  00085A  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  5649  00085E  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  5650  000862  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  5651  000866  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  5652  00086A  0EDE               	movlw	low _sdCardBuffer1
  5653  00086C  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5654  00086E  0E05               	movlw	high _sdCardBuffer1
  5655  000870  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5656  000872  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  5657  000876                     l6200:
  5658  000876  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5659  00087A  0101               	movlb	1	; () banked
  5660  00087C  6FD9               	movwf	main@status& (0+255),b
  5661  00087E  29D9               	incf	main@status& (0+255),w,b
  5662  000880  B4D8               	btfsc	status,2,c
  5663  000882  EF45  F004         	goto	u6211
  5664  000886  EF47  F004         	goto	u6210
  5665  00088A                     u6211:
  5666  00088A  EF3B  F004         	goto	l6200
  5667  00088E                     u6210:
  5668  00088E                     l6202:
  5669                           
  5670                           ; BSR set to: 1
  5671                           ;main.c: 244:                         buffer1Full = 0;
  5672  00088E  0E00               	movlw	0
  5673  000890  0100               	movlb	0	; () banked
  5674  000892  6FD0               	movwf	_buffer1Full& (0+255),b
  5675  000894                     
  5676                           ; BSR set to: 0
  5677                           ;main.c: 245:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5678  000894  0101               	movlb	1	; () banked
  5679  000896  51D9               	movf	main@status& (0+255),w,b
  5680  000898  0B1F               	andlw	31
  5681  00089A  0A05               	xorlw	5
  5682  00089C  B4D8               	btfsc	status,2,c
  5683  00089E  EF53  F004         	goto	u6221
  5684  0008A2  EF55  F004         	goto	u6220
  5685  0008A6                     u6221:
  5686  0008A6  EF76  F004         	goto	l6214
  5687  0008AA                     u6220:
  5688  0008AA                     
  5689                           ; BSR set to: 1
  5690  0008AA  0E80               	movlw	128
  5691  0008AC  61D8               	cpfslt	main@failureIndex& (0+255),b
  5692  0008AE  EF5B  F004         	goto	u6231
  5693  0008B2  EF5D  F004         	goto	u6230
  5694  0008B6                     u6231:
  5695  0008B6  EF76  F004         	goto	l6214
  5696  0008BA                     u6230:
  5697  0008BA                     
  5698                           ; BSR set to: 1
  5699                           ;main.c: 246:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5700  0008BA  51D8               	movf	main@failureIndex& (0+255),w,b
  5701  0008BC  0D04               	mullw	4
  5702  0008BE  0EDE               	movlw	low _writeFailureTable
  5703  0008C0  24F3               	addwf	243,w,c
  5704  0008C2  6ED9               	movwf	fsr2l,c
  5705  0008C4  0E01               	movlw	high _writeFailureTable
  5706  0008C6  20F4               	addwfc	prodh,w,c
  5707  0008C8  6EDA               	movwf	fsr2h,c
  5708  0008CA  C1DA  FFDE         	movff	main@writeAddress_1292,postinc2
  5709  0008CE  C1DB  FFDE         	movff	main@writeAddress_1292+1,postinc2
  5710  0008D2  C1DC  FFDE         	movff	main@writeAddress_1292+2,postinc2
  5711  0008D6  C1DD  FFDE         	movff	main@writeAddress_1292+3,postinc2
  5712  0008DA                     
  5713                           ; BSR set to: 1
  5714                           ;main.c: 247:                             writeFailureStatus[failureIndex] = status;
  5715  0008DA  0E00               	movlw	low _writeFailureStatus
  5716  0008DC  25D8               	addwf	main@failureIndex& (0+255),w,b
  5717  0008DE  6ED9               	movwf	fsr2l,c
  5718  0008E0  6ADA               	clrf	fsr2h,c
  5719  0008E2  0E01               	movlw	high _writeFailureStatus
  5720  0008E4  22DA               	addwfc	fsr2h,f,c
  5721  0008E6  C1D9  FFDF         	movff	main@status,indf2
  5722  0008EA                     
  5723                           ; BSR set to: 1
  5724                           ;main.c: 248:                             failureIndex++;
  5725  0008EA  2BD8               	incf	main@failureIndex& (0+255),f,b
  5726  0008EC                     l6214:
  5727                           
  5728                           ; BSR set to: 1
  5729                           ;main.c: 250:                         writeAddress = incrementAddress(writeAddress);
  5730  0008EC  C1DA  F014         	movff	main@writeAddress_1292,incrementAddress@sdCardAddress
  5731  0008F0  C1DB  F015         	movff	main@writeAddress_1292+1,incrementAddress@sdCardAddress+1
  5732  0008F4  C1DC  F016         	movff	main@writeAddress_1292+2,incrementAddress@sdCardAddress+2
  5733  0008F8  C1DD  F017         	movff	main@writeAddress_1292+3,incrementAddress@sdCardAddress+3
  5734  0008FC  ECB4  F019         	call	_incrementAddress	;wreg free
  5735  000900  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_1292
  5736  000904  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_1292+1
  5737  000908  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_1292+2
  5738  00090C  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_1292+3
  5739  000910                     l6216:
  5740                           
  5741                           ;main.c: 252:                     if (buffer2Full) {
  5742  000910  0100               	movlb	0	; () banked
  5743  000912  51CF               	movf	_buffer2Full& (0+255),w,b
  5744  000914  B4D8               	btfsc	status,2,c
  5745  000916  EF8F  F004         	goto	u6241
  5746  00091A  EF91  F004         	goto	u6240
  5747  00091E                     u6241:
  5748  00091E  EF10  F005         	goto	l6242
  5749  000922                     u6240:
  5750  000922                     
  5751                           ; BSR set to: 0
  5752                           ;main.c: 253:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  5753  000922  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  5754  000926  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  5755  00092A  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  5756  00092E  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  5757  000932  0EDE               	movlw	low _sdCardBuffer2
  5758  000934  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5759  000936  0E03               	movlw	high _sdCardBuffer2
  5760  000938  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5761  00093A  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  5762  00093E                     l6220:
  5763  00093E  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5764  000942  0101               	movlb	1	; () banked
  5765  000944  6FD9               	movwf	main@status& (0+255),b
  5766  000946  29D9               	incf	main@status& (0+255),w,b
  5767  000948  B4D8               	btfsc	status,2,c
  5768  00094A  EFA9  F004         	goto	u6251
  5769  00094E  EFAB  F004         	goto	u6250
  5770  000952                     u6251:
  5771  000952  EF9F  F004         	goto	l6220
  5772  000956                     u6250:
  5773  000956                     
  5774                           ; BSR set to: 1
  5775                           ;main.c: 255:                         if ((status & 0x1F) != 0x5) {
  5776  000956  51D9               	movf	main@status& (0+255),w,b
  5777  000958  0B1F               	andlw	31
  5778  00095A  0A05               	xorlw	5
  5779  00095C  B4D8               	btfsc	status,2,c
  5780  00095E  EFB3  F004         	goto	u6261
  5781  000962  EFB5  F004         	goto	u6260
  5782  000966                     u6261:
  5783  000966  EFCF  F004         	goto	l6228
  5784  00096A                     u6260:
  5785  00096A                     
  5786                           ; BSR set to: 1
  5787                           ;main.c: 256:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  5788  00096A  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  5789  00096E  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  5790  000972  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  5791  000976  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  5792  00097A  0EDE               	movlw	low _sdCardBuffer2
  5793  00097C  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5794  00097E  0E03               	movlw	high _sdCardBuffer2
  5795  000980  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5796  000982  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  5797  000986                     l6226:
  5798  000986  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5799  00098A  0101               	movlb	1	; () banked
  5800  00098C  6FD9               	movwf	main@status& (0+255),b
  5801  00098E  29D9               	incf	main@status& (0+255),w,b
  5802  000990  B4D8               	btfsc	status,2,c
  5803  000992  EFCD  F004         	goto	u6271
  5804  000996  EFCF  F004         	goto	u6270
  5805  00099A                     u6271:
  5806  00099A  EFC3  F004         	goto	l6226
  5807  00099E                     u6270:
  5808  00099E                     l6228:
  5809                           
  5810                           ; BSR set to: 1
  5811                           ;main.c: 259:                         buffer2Full = 0;
  5812  00099E  0E00               	movlw	0
  5813  0009A0  0100               	movlb	0	; () banked
  5814  0009A2  6FCF               	movwf	_buffer2Full& (0+255),b
  5815  0009A4                     
  5816                           ; BSR set to: 0
  5817                           ;main.c: 260:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5818  0009A4  0101               	movlb	1	; () banked
  5819  0009A6  51D9               	movf	main@status& (0+255),w,b
  5820  0009A8  0B1F               	andlw	31
  5821  0009AA  0A05               	xorlw	5
  5822  0009AC  B4D8               	btfsc	status,2,c
  5823  0009AE  EFDB  F004         	goto	u6281
  5824  0009B2  EFDD  F004         	goto	u6280
  5825  0009B6                     u6281:
  5826  0009B6  EFFE  F004         	goto	l6240
  5827  0009BA                     u6280:
  5828  0009BA                     
  5829                           ; BSR set to: 1
  5830  0009BA  0E80               	movlw	128
  5831  0009BC  61D8               	cpfslt	main@failureIndex& (0+255),b
  5832  0009BE  EFE3  F004         	goto	u6291
  5833  0009C2  EFE5  F004         	goto	u6290
  5834  0009C6                     u6291:
  5835  0009C6  EFFE  F004         	goto	l6240
  5836  0009CA                     u6290:
  5837  0009CA                     
  5838                           ; BSR set to: 1
  5839                           ;main.c: 261:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5840  0009CA  51D8               	movf	main@failureIndex& (0+255),w,b
  5841  0009CC  0D04               	mullw	4
  5842  0009CE  0EDE               	movlw	low _writeFailureTable
  5843  0009D0  24F3               	addwf	243,w,c
  5844  0009D2  6ED9               	movwf	fsr2l,c
  5845  0009D4  0E01               	movlw	high _writeFailureTable
  5846  0009D6  20F4               	addwfc	prodh,w,c
  5847  0009D8  6EDA               	movwf	fsr2h,c
  5848  0009DA  C1DA  FFDE         	movff	main@writeAddress_1292,postinc2
  5849  0009DE  C1DB  FFDE         	movff	main@writeAddress_1292+1,postinc2
  5850  0009E2  C1DC  FFDE         	movff	main@writeAddress_1292+2,postinc2
  5851  0009E6  C1DD  FFDE         	movff	main@writeAddress_1292+3,postinc2
  5852  0009EA                     
  5853                           ; BSR set to: 1
  5854                           ;main.c: 262:                             writeFailureStatus[failureIndex] = status;
  5855  0009EA  0E00               	movlw	low _writeFailureStatus
  5856  0009EC  25D8               	addwf	main@failureIndex& (0+255),w,b
  5857  0009EE  6ED9               	movwf	fsr2l,c
  5858  0009F0  6ADA               	clrf	fsr2h,c
  5859  0009F2  0E01               	movlw	high _writeFailureStatus
  5860  0009F4  22DA               	addwfc	fsr2h,f,c
  5861  0009F6  C1D9  FFDF         	movff	main@status,indf2
  5862  0009FA                     
  5863                           ; BSR set to: 1
  5864                           ;main.c: 263:                             failureIndex++;
  5865  0009FA  2BD8               	incf	main@failureIndex& (0+255),f,b
  5866  0009FC                     l6240:
  5867                           
  5868                           ; BSR set to: 1
  5869                           ;main.c: 265:                         writeAddress = incrementAddress(writeAddress);
  5870  0009FC  C1DA  F014         	movff	main@writeAddress_1292,incrementAddress@sdCardAddress
  5871  000A00  C1DB  F015         	movff	main@writeAddress_1292+1,incrementAddress@sdCardAddress+1
  5872  000A04  C1DC  F016         	movff	main@writeAddress_1292+2,incrementAddress@sdCardAddress+2
  5873  000A08  C1DD  F017         	movff	main@writeAddress_1292+3,incrementAddress@sdCardAddress+3
  5874  000A0C  ECB4  F019         	call	_incrementAddress	;wreg free
  5875  000A10  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_1292
  5876  000A14  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_1292+1
  5877  000A18  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_1292+2
  5878  000A1C  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_1292+3
  5879  000A20                     l6242:
  5880                           
  5881                           ;main.c: 236:                 while (!(EUSART1_is_rx_ready())) {
  5882  000A20  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5883  000A24  0900               	iorlw	0
  5884  000A26  B4D8               	btfsc	status,2,c
  5885  000A28  EF18  F005         	goto	u6301
  5886  000A2C  EF1A  F005         	goto	u6300
  5887  000A30                     u6301:
  5888  000A30  EF00  F004         	goto	l6190
  5889  000A34                     u6300:
  5890  000A34                     
  5891                           ;main.c: 268:                 EUSART1_Read();
  5892  000A34  EC58  F01B         	call	_EUSART1_Read	;wreg free
  5893  000A38                     
  5894                           ;main.c: 269:                 stopCollect = 1;
  5895  000A38  0E01               	movlw	1
  5896  000A3A  6E47               	movwf	_stopCollect^0,c
  5897                           
  5898                           ;main.c: 271:                 while (buffer1Full || buffer2Full || collecting) {
  5899  000A3C  EF2F  F006         	goto	l6300
  5900  000A40                     l6248:
  5901                           
  5902                           ; BSR set to: 0
  5903                           ;main.c: 272:                     if (buffer1Full) {
  5904  000A40  51D0               	movf	_buffer1Full& (0+255),w,b
  5905  000A42  B4D8               	btfsc	status,2,c
  5906  000A44  EF26  F005         	goto	u6311
  5907  000A48  EF28  F005         	goto	u6310
  5908  000A4C                     u6311:
  5909  000A4C  EFA7  F005         	goto	l6274
  5910  000A50                     u6310:
  5911  000A50                     
  5912                           ; BSR set to: 0
  5913                           ;main.c: 273:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5914  000A50  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  5915  000A54  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  5916  000A58  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  5917  000A5C  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  5918  000A60  0EDE               	movlw	low _sdCardBuffer1
  5919  000A62  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5920  000A64  0E05               	movlw	high _sdCardBuffer1
  5921  000A66  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5922  000A68  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  5923  000A6C                     l6252:
  5924  000A6C  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5925  000A70  0101               	movlb	1	; () banked
  5926  000A72  6FD9               	movwf	main@status& (0+255),b
  5927  000A74  29D9               	incf	main@status& (0+255),w,b
  5928  000A76  B4D8               	btfsc	status,2,c
  5929  000A78  EF40  F005         	goto	u6321
  5930  000A7C  EF42  F005         	goto	u6320
  5931  000A80                     u6321:
  5932  000A80  EF36  F005         	goto	l6252
  5933  000A84                     u6320:
  5934  000A84                     
  5935                           ; BSR set to: 1
  5936                           ;main.c: 275:                         if ((status & 0x1F) != 0x5) {
  5937  000A84  51D9               	movf	main@status& (0+255),w,b
  5938  000A86  0B1F               	andlw	31
  5939  000A88  0A05               	xorlw	5
  5940  000A8A  B4D8               	btfsc	status,2,c
  5941  000A8C  EF4A  F005         	goto	u6331
  5942  000A90  EF4C  F005         	goto	u6330
  5943  000A94                     u6331:
  5944  000A94  EF66  F005         	goto	l6260
  5945  000A98                     u6330:
  5946  000A98                     
  5947                           ; BSR set to: 1
  5948                           ;main.c: 276:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5949  000A98  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  5950  000A9C  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  5951  000AA0  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  5952  000AA4  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  5953  000AA8  0EDE               	movlw	low _sdCardBuffer1
  5954  000AAA  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5955  000AAC  0E05               	movlw	high _sdCardBuffer1
  5956  000AAE  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5957  000AB0  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  5958  000AB4                     l6258:
  5959  000AB4  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5960  000AB8  0101               	movlb	1	; () banked
  5961  000ABA  6FD9               	movwf	main@status& (0+255),b
  5962  000ABC  29D9               	incf	main@status& (0+255),w,b
  5963  000ABE  B4D8               	btfsc	status,2,c
  5964  000AC0  EF64  F005         	goto	u6341
  5965  000AC4  EF66  F005         	goto	u6340
  5966  000AC8                     u6341:
  5967  000AC8  EF5A  F005         	goto	l6258
  5968  000ACC                     u6340:
  5969  000ACC                     l6260:
  5970                           
  5971                           ; BSR set to: 1
  5972                           ;main.c: 279:                         buffer1Full = 0;
  5973  000ACC  0E00               	movlw	0
  5974  000ACE  0100               	movlb	0	; () banked
  5975  000AD0  6FD0               	movwf	_buffer1Full& (0+255),b
  5976  000AD2                     
  5977                           ; BSR set to: 0
  5978                           ;main.c: 280:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5979  000AD2  0101               	movlb	1	; () banked
  5980  000AD4  51D9               	movf	main@status& (0+255),w,b
  5981  000AD6  0B1F               	andlw	31
  5982  000AD8  0A05               	xorlw	5
  5983  000ADA  B4D8               	btfsc	status,2,c
  5984  000ADC  EF72  F005         	goto	u6351
  5985  000AE0  EF74  F005         	goto	u6350
  5986  000AE4                     u6351:
  5987  000AE4  EF95  F005         	goto	l6272
  5988  000AE8                     u6350:
  5989  000AE8                     
  5990                           ; BSR set to: 1
  5991  000AE8  0E80               	movlw	128
  5992  000AEA  61D8               	cpfslt	main@failureIndex& (0+255),b
  5993  000AEC  EF7A  F005         	goto	u6361
  5994  000AF0  EF7C  F005         	goto	u6360
  5995  000AF4                     u6361:
  5996  000AF4  EF95  F005         	goto	l6272
  5997  000AF8                     u6360:
  5998  000AF8                     
  5999                           ; BSR set to: 1
  6000                           ;main.c: 281:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  6001  000AF8  51D8               	movf	main@failureIndex& (0+255),w,b
  6002  000AFA  0D04               	mullw	4
  6003  000AFC  0EDE               	movlw	low _writeFailureTable
  6004  000AFE  24F3               	addwf	243,w,c
  6005  000B00  6ED9               	movwf	fsr2l,c
  6006  000B02  0E01               	movlw	high _writeFailureTable
  6007  000B04  20F4               	addwfc	prodh,w,c
  6008  000B06  6EDA               	movwf	fsr2h,c
  6009  000B08  C1DA  FFDE         	movff	main@writeAddress_1292,postinc2
  6010  000B0C  C1DB  FFDE         	movff	main@writeAddress_1292+1,postinc2
  6011  000B10  C1DC  FFDE         	movff	main@writeAddress_1292+2,postinc2
  6012  000B14  C1DD  FFDE         	movff	main@writeAddress_1292+3,postinc2
  6013  000B18                     
  6014                           ; BSR set to: 1
  6015                           ;main.c: 282:                             writeFailureStatus[failureIndex] = status;
  6016  000B18  0E00               	movlw	low _writeFailureStatus
  6017  000B1A  25D8               	addwf	main@failureIndex& (0+255),w,b
  6018  000B1C  6ED9               	movwf	fsr2l,c
  6019  000B1E  6ADA               	clrf	fsr2h,c
  6020  000B20  0E01               	movlw	high _writeFailureStatus
  6021  000B22  22DA               	addwfc	fsr2h,f,c
  6022  000B24  C1D9  FFDF         	movff	main@status,indf2
  6023  000B28                     
  6024                           ; BSR set to: 1
  6025                           ;main.c: 283:                             failureIndex++;
  6026  000B28  2BD8               	incf	main@failureIndex& (0+255),f,b
  6027  000B2A                     l6272:
  6028                           
  6029                           ; BSR set to: 1
  6030                           ;main.c: 285:                         writeAddress = incrementAddress(writeAddress);
  6031  000B2A  C1DA  F014         	movff	main@writeAddress_1292,incrementAddress@sdCardAddress
  6032  000B2E  C1DB  F015         	movff	main@writeAddress_1292+1,incrementAddress@sdCardAddress+1
  6033  000B32  C1DC  F016         	movff	main@writeAddress_1292+2,incrementAddress@sdCardAddress+2
  6034  000B36  C1DD  F017         	movff	main@writeAddress_1292+3,incrementAddress@sdCardAddress+3
  6035  000B3A  ECB4  F019         	call	_incrementAddress	;wreg free
  6036  000B3E  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_1292
  6037  000B42  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_1292+1
  6038  000B46  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_1292+2
  6039  000B4A  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_1292+3
  6040  000B4E                     l6274:
  6041                           
  6042                           ;main.c: 287:                     if (buffer2Full) {
  6043  000B4E  0100               	movlb	0	; () banked
  6044  000B50  51CF               	movf	_buffer2Full& (0+255),w,b
  6045  000B52  B4D8               	btfsc	status,2,c
  6046  000B54  EFAE  F005         	goto	u6371
  6047  000B58  EFB0  F005         	goto	u6370
  6048  000B5C                     u6371:
  6049  000B5C  EF2F  F006         	goto	l6300
  6050  000B60                     u6370:
  6051  000B60                     
  6052                           ; BSR set to: 0
  6053                           ;main.c: 288:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  6054  000B60  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  6055  000B64  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  6056  000B68  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  6057  000B6C  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  6058  000B70  0EDE               	movlw	low _sdCardBuffer2
  6059  000B72  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  6060  000B74  0E03               	movlw	high _sdCardBuffer2
  6061  000B76  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  6062  000B78  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  6063  000B7C                     l6278:
  6064  000B7C  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  6065  000B80  0101               	movlb	1	; () banked
  6066  000B82  6FD9               	movwf	main@status& (0+255),b
  6067  000B84  29D9               	incf	main@status& (0+255),w,b
  6068  000B86  B4D8               	btfsc	status,2,c
  6069  000B88  EFC8  F005         	goto	u6381
  6070  000B8C  EFCA  F005         	goto	u6380
  6071  000B90                     u6381:
  6072  000B90  EFBE  F005         	goto	l6278
  6073  000B94                     u6380:
  6074  000B94                     
  6075                           ; BSR set to: 1
  6076                           ;main.c: 290:                         if ((status & 0x1F) != 0x5) {
  6077  000B94  51D9               	movf	main@status& (0+255),w,b
  6078  000B96  0B1F               	andlw	31
  6079  000B98  0A05               	xorlw	5
  6080  000B9A  B4D8               	btfsc	status,2,c
  6081  000B9C  EFD2  F005         	goto	u6391
  6082  000BA0  EFD4  F005         	goto	u6390
  6083  000BA4                     u6391:
  6084  000BA4  EFEE  F005         	goto	l6286
  6085  000BA8                     u6390:
  6086  000BA8                     
  6087                           ; BSR set to: 1
  6088                           ;main.c: 291:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  6089  000BA8  C1DA  F015         	movff	main@writeAddress_1292,SDCARD_WriteBlock@addr
  6090  000BAC  C1DB  F016         	movff	main@writeAddress_1292+1,SDCARD_WriteBlock@addr+1
  6091  000BB0  C1DC  F017         	movff	main@writeAddress_1292+2,SDCARD_WriteBlock@addr+2
  6092  000BB4  C1DD  F018         	movff	main@writeAddress_1292+3,SDCARD_WriteBlock@addr+3
  6093  000BB8  0EDE               	movlw	low _sdCardBuffer2
  6094  000BBA  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  6095  000BBC  0E03               	movlw	high _sdCardBuffer2
  6096  000BBE  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  6097  000BC0  EC74  F018         	call	_SDCARD_WriteBlock	;wreg free
  6098  000BC4                     l6284:
  6099  000BC4  EC55  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  6100  000BC8  0101               	movlb	1	; () banked
  6101  000BCA  6FD9               	movwf	main@status& (0+255),b
  6102  000BCC  29D9               	incf	main@status& (0+255),w,b
  6103  000BCE  B4D8               	btfsc	status,2,c
  6104  000BD0  EFEC  F005         	goto	u6401
  6105  000BD4  EFEE  F005         	goto	u6400
  6106  000BD8                     u6401:
  6107  000BD8  EFE2  F005         	goto	l6284
  6108  000BDC                     u6400:
  6109  000BDC                     l6286:
  6110                           
  6111                           ; BSR set to: 1
  6112                           ;main.c: 294:                         buffer2Full = 0;
  6113  000BDC  0E00               	movlw	0
  6114  000BDE  0100               	movlb	0	; () banked
  6115  000BE0  6FCF               	movwf	_buffer2Full& (0+255),b
  6116  000BE2                     
  6117                           ; BSR set to: 0
  6118                           ;main.c: 295:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  6119  000BE2  0101               	movlb	1	; () banked
  6120  000BE4  51D9               	movf	main@status& (0+255),w,b
  6121  000BE6  0B1F               	andlw	31
  6122  000BE8  0A05               	xorlw	5
  6123  000BEA  B4D8               	btfsc	status,2,c
  6124  000BEC  EFFA  F005         	goto	u6411
  6125  000BF0  EFFC  F005         	goto	u6410
  6126  000BF4                     u6411:
  6127  000BF4  EF1D  F006         	goto	l6298
  6128  000BF8                     u6410:
  6129  000BF8                     
  6130                           ; BSR set to: 1
  6131  000BF8  0E80               	movlw	128
  6132  000BFA  61D8               	cpfslt	main@failureIndex& (0+255),b
  6133  000BFC  EF02  F006         	goto	u6421
  6134  000C00  EF04  F006         	goto	u6420
  6135  000C04                     u6421:
  6136  000C04  EF1D  F006         	goto	l6298
  6137  000C08                     u6420:
  6138  000C08                     
  6139                           ; BSR set to: 1
  6140                           ;main.c: 296:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  6141  000C08  51D8               	movf	main@failureIndex& (0+255),w,b
  6142  000C0A  0D04               	mullw	4
  6143  000C0C  0EDE               	movlw	low _writeFailureTable
  6144  000C0E  24F3               	addwf	243,w,c
  6145  000C10  6ED9               	movwf	fsr2l,c
  6146  000C12  0E01               	movlw	high _writeFailureTable
  6147  000C14  20F4               	addwfc	prodh,w,c
  6148  000C16  6EDA               	movwf	fsr2h,c
  6149  000C18  C1DA  FFDE         	movff	main@writeAddress_1292,postinc2
  6150  000C1C  C1DB  FFDE         	movff	main@writeAddress_1292+1,postinc2
  6151  000C20  C1DC  FFDE         	movff	main@writeAddress_1292+2,postinc2
  6152  000C24  C1DD  FFDE         	movff	main@writeAddress_1292+3,postinc2
  6153  000C28                     
  6154                           ; BSR set to: 1
  6155                           ;main.c: 297:                             writeFailureStatus[failureIndex] = status;
  6156  000C28  0E00               	movlw	low _writeFailureStatus
  6157  000C2A  25D8               	addwf	main@failureIndex& (0+255),w,b
  6158  000C2C  6ED9               	movwf	fsr2l,c
  6159  000C2E  6ADA               	clrf	fsr2h,c
  6160  000C30  0E01               	movlw	high _writeFailureStatus
  6161  000C32  22DA               	addwfc	fsr2h,f,c
  6162  000C34  C1D9  FFDF         	movff	main@status,indf2
  6163  000C38                     
  6164                           ; BSR set to: 1
  6165                           ;main.c: 298:                             failureIndex++;
  6166  000C38  2BD8               	incf	main@failureIndex& (0+255),f,b
  6167  000C3A                     l6298:
  6168                           
  6169                           ; BSR set to: 1
  6170                           ;main.c: 300:                         writeAddress = incrementAddress(writeAddress);
  6171  000C3A  C1DA  F014         	movff	main@writeAddress_1292,incrementAddress@sdCardAddress
  6172  000C3E  C1DB  F015         	movff	main@writeAddress_1292+1,incrementAddress@sdCardAddress+1
  6173  000C42  C1DC  F016         	movff	main@writeAddress_1292+2,incrementAddress@sdCardAddress+2
  6174  000C46  C1DD  F017         	movff	main@writeAddress_1292+3,incrementAddress@sdCardAddress+3
  6175  000C4A  ECB4  F019         	call	_incrementAddress	;wreg free
  6176  000C4E  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_1292
  6177  000C52  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_1292+1
  6178  000C56  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_1292+2
  6179  000C5A  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_1292+3
  6180  000C5E                     l6300:
  6181                           
  6182                           ;main.c: 271:                 while (buffer1Full || buffer2Full || collecting) {
  6183  000C5E  0100               	movlb	0	; () banked
  6184  000C60  51D0               	movf	_buffer1Full& (0+255),w,b
  6185  000C62  A4D8               	btfss	status,2,c
  6186  000C64  EF36  F006         	goto	u6431
  6187  000C68  EF38  F006         	goto	u6430
  6188  000C6C                     u6431:
  6189  000C6C  EF20  F005         	goto	l6248
  6190  000C70                     u6430:
  6191  000C70                     
  6192                           ; BSR set to: 0
  6193  000C70  51CF               	movf	_buffer2Full& (0+255),w,b
  6194  000C72  A4D8               	btfss	status,2,c
  6195  000C74  EF3E  F006         	goto	u6441
  6196  000C78  EF40  F006         	goto	u6440
  6197  000C7C                     u6441:
  6198  000C7C  EF20  F005         	goto	l6248
  6199  000C80                     u6440:
  6200  000C80                     
  6201                           ; BSR set to: 0
  6202  000C80  51CE               	movf	_collecting& (0+255),w,b
  6203  000C82  A4D8               	btfss	status,2,c
  6204  000C84  EF46  F006         	goto	u6451
  6205  000C88  EF48  F006         	goto	u6450
  6206  000C8C                     u6451:
  6207  000C8C  EF20  F005         	goto	l6248
  6208  000C90                     u6450:
  6209  000C90                     
  6210                           ; BSR set to: 0
  6211                           ;main.c: 303:                 writeEndAddress = writeAddress;
  6212  000C90  C1DA  F1C6         	movff	main@writeAddress_1292,main@writeEndAddress
  6213  000C94  C1DB  F1C7         	movff	main@writeAddress_1292+1,main@writeEndAddress+1
  6214  000C98  C1DC  F1C8         	movff	main@writeAddress_1292+2,main@writeEndAddress+2
  6215  000C9C  C1DD  F1C9         	movff	main@writeAddress_1292+3,main@writeEndAddress+3
  6216  000CA0                     
  6217                           ; BSR set to: 0
  6218                           ;main.c: 304:                 printf ("\r\n");
  6219  000CA0  0EAE               	movlw	low (STR_76+12)
  6220  000CA2  6FA6               	movwf	printf@fmt& (0+255),b
  6221  000CA4  0EFF               	movlw	high (STR_76+12)
  6222  000CA6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6223  000CA8  EC44  F01B         	call	_printf	;wreg free
  6224  000CAC                     
  6225                           ;main.c: 305:                 if (failureIndex > 0) {
  6226  000CAC  0101               	movlb	1	; () banked
  6227  000CAE  51D8               	movf	main@failureIndex& (0+255),w,b
  6228  000CB0  B4D8               	btfsc	status,2,c
  6229  000CB2  EF5D  F006         	goto	u6461
  6230  000CB6  EF5F  F006         	goto	u6460
  6231  000CBA                     u6461:
  6232  000CBA  EF7E  F000         	goto	l6040
  6233  000CBE                     u6460:
  6234  000CBE                     
  6235                           ; BSR set to: 1
  6236                           ;main.c: 306:                     printf ("Listing write failures: \r\n");
  6237  000CBE  0E21               	movlw	low STR_44
  6238  000CC0  0100               	movlb	0	; () banked
  6239  000CC2  6FA6               	movwf	printf@fmt& (0+255),b
  6240  000CC4  0EFE               	movlw	high STR_44
  6241  000CC6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6242  000CC8  EC44  F01B         	call	_printf	;wreg free
  6243  000CCC                     
  6244                           ;main.c: 307:                     for (uint8_t i = 0; i < failureIndex; i++) {
  6245  000CCC  0E00               	movlw	0
  6246  000CCE  0101               	movlb	1	; () banked
  6247  000CD0  6FC0               	movwf	main@i_1296& (0+255),b
  6248  000CD2  EFC0  F006         	goto	l6326
  6249  000CD6                     l6314:
  6250                           
  6251                           ; BSR set to: 1
  6252                           ;main.c: 308:                         uint32_t addr = writeFailureTable[i];
  6253  000CD6  51C0               	movf	main@i_1296& (0+255),w,b
  6254  000CD8  0D04               	mullw	4
  6255  000CDA  0EDE               	movlw	low _writeFailureTable
  6256  000CDC  24F3               	addwf	243,w,c
  6257  000CDE  6ED9               	movwf	fsr2l,c
  6258  000CE0  0E01               	movlw	high _writeFailureTable
  6259  000CE2  20F4               	addwfc	prodh,w,c
  6260  000CE4  6EDA               	movwf	fsr2h,c
  6261  000CE6  CFDE F1B0          	movff	postinc2,main@addr
  6262  000CEA  CFDE F1B1          	movff	postinc2,main@addr+1
  6263  000CEE  CFDE F1B2          	movff	postinc2,main@addr+2
  6264  000CF2  CFDE F1B3          	movff	postinc2,main@addr+3
  6265  000CF6                     
  6266                           ; BSR set to: 1
  6267                           ;main.c: 309:                         printf("Status code: %d ---- Address: ", writeFail
      +                          ureStatus[i]);
  6268  000CF6  0E56               	movlw	low STR_45
  6269  000CF8  0100               	movlb	0	; () banked
  6270  000CFA  6FA6               	movwf	printf@fmt& (0+255),b
  6271  000CFC  0EFD               	movlw	high STR_45
  6272  000CFE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6273  000D00  0E00               	movlw	low _writeFailureStatus
  6274  000D02  0101               	movlb	1	; () banked
  6275  000D04  25C0               	addwf	main@i_1296& (0+255),w,b
  6276  000D06  6ED9               	movwf	fsr2l,c
  6277  000D08  6ADA               	clrf	fsr2h,c
  6278  000D0A  0E01               	movlw	high _writeFailureStatus
  6279  000D0C  22DA               	addwfc	fsr2h,f,c
  6280  000D0E  50DF               	movf	indf2,w,c
  6281  000D10  0100               	movlb	0	; () banked
  6282  000D12  6FBE               	movwf	??_main& (0+255),b
  6283  000D14  51BE               	movf	??_main& (0+255),w,b
  6284  000D16  6FA8               	movwf	(?_printf+2)& (0+255),b
  6285  000D18  6BA9               	clrf	(?_printf+3)& (0+255),b
  6286  000D1A  EC44  F01B         	call	_printf	;wreg free
  6287  000D1E                     
  6288                           ;main.c: 310:                         printf("%04x", addr >> 16);
  6289  000D1E  0EEE               	movlw	low STR_10
  6290  000D20  0100               	movlb	0	; () banked
  6291  000D22  6FA6               	movwf	printf@fmt& (0+255),b
  6292  000D24  0EFF               	movlw	high STR_10
  6293  000D26  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6294  000D28  C1B2  F0A8         	movff	main@addr+2,?_printf+2
  6295  000D2C  C1B3  F0A9         	movff	main@addr+3,?_printf+3
  6296  000D30  6BAA               	clrf	(?_printf+4)& (0+255),b
  6297  000D32  6BAB               	clrf	(?_printf+5)& (0+255),b
  6298  000D34  EC44  F01B         	call	_printf	;wreg free
  6299  000D38                     
  6300                           ;main.c: 311:                         printf(":");
  6301  000D38  0EFD               	movlw	low STR_11
  6302  000D3A  0100               	movlb	0	; () banked
  6303  000D3C  6FA6               	movwf	printf@fmt& (0+255),b
  6304  000D3E  0EFF               	movlw	high STR_11
  6305  000D40  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6306  000D42  EC44  F01B         	call	_printf	;wreg free
  6307  000D46                     
  6308                           ;main.c: 312:                         printf("%04x\r\n", addr & 0X0000FFFF);
  6309  000D46  0EE1               	movlw	low STR_48
  6310  000D48  0100               	movlb	0	; () banked
  6311  000D4A  6FA6               	movwf	printf@fmt& (0+255),b
  6312  000D4C  0EFF               	movlw	high STR_48
  6313  000D4E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6314  000D50  0EFF               	movlw	255
  6315  000D52  0101               	movlb	1	; () banked
  6316  000D54  15B0               	andwf	main@addr& (0+255),w,b
  6317  000D56  0100               	movlb	0	; () banked
  6318  000D58  6FA8               	movwf	(?_printf+2)& (0+255),b
  6319  000D5A  0EFF               	movlw	255
  6320  000D5C  0101               	movlb	1	; () banked
  6321  000D5E  15B1               	andwf	(main@addr+1)& (0+255),w,b
  6322  000D60  0100               	movlb	0	; () banked
  6323  000D62  6FA9               	movwf	(?_printf+3)& (0+255),b
  6324  000D64  0E00               	movlw	0
  6325  000D66  0101               	movlb	1	; () banked
  6326  000D68  15B2               	andwf	(main@addr+2)& (0+255),w,b
  6327  000D6A  0100               	movlb	0	; () banked
  6328  000D6C  6FAA               	movwf	(?_printf+4)& (0+255),b
  6329  000D6E  0E00               	movlw	0
  6330  000D70  0101               	movlb	1	; () banked
  6331  000D72  15B3               	andwf	(main@addr+3)& (0+255),w,b
  6332  000D74  0100               	movlb	0	; () banked
  6333  000D76  6FAB               	movwf	(?_printf+5)& (0+255),b
  6334  000D78  EC44  F01B         	call	_printf	;wreg free
  6335  000D7C                     
  6336                           ;main.c: 313:                     }
  6337  000D7C  0101               	movlb	1	; () banked
  6338  000D7E  2BC0               	incf	main@i_1296& (0+255),f,b
  6339  000D80                     l6326:
  6340                           
  6341                           ; BSR set to: 1
  6342  000D80  51D8               	movf	main@failureIndex& (0+255),w,b
  6343  000D82  5DC0               	subwf	main@i_1296& (0+255),w,b
  6344  000D84  A0D8               	btfss	status,0,c
  6345  000D86  EFC7  F006         	goto	u6471
  6346  000D8A  EFC9  F006         	goto	u6470
  6347  000D8E                     u6471:
  6348  000D8E  EF6B  F006         	goto	l6314
  6349  000D92                     u6470:
  6350  000D92  EF7E  F000         	goto	l6040
  6351  000D96                     l6328:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;main.c: 320:                 printf("You may terminate spooling at anytime with a key p
      +                          ress.\r\n");
  6355  000D96  0E96               	movlw	low STR_49
  6356  000D98  6FA6               	movwf	printf@fmt& (0+255),b
  6357  000D9A  0EFA               	movlw	high STR_49
  6358  000D9C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6359  000D9E  EC44  F01B         	call	_printf	;wreg free
  6360                           
  6361                           ;main.c: 321:                 printf("To spool terminal contents into a file follow thes
      +                          e instructions:\r\n");
  6362  000DA2  0EC8               	movlw	low STR_50
  6363  000DA4  0100               	movlb	0	; () banked
  6364  000DA6  6FA6               	movwf	printf@fmt& (0+255),b
  6365  000DA8  0EF3               	movlw	high STR_50
  6366  000DAA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6367  000DAC  EC44  F01B         	call	_printf	;wreg free
  6368                           
  6369                           ;main.c: 322:                 printf("\r\n");
  6370  000DB0  0EAE               	movlw	low (STR_76+12)
  6371  000DB2  0100               	movlb	0	; () banked
  6372  000DB4  6FA6               	movwf	printf@fmt& (0+255),b
  6373  000DB6  0EFF               	movlw	high (STR_76+12)
  6374  000DB8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6375  000DBA  EC44  F01B         	call	_printf	;wreg free
  6376                           
  6377                           ;main.c: 323:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6378  000DBE  0ED0               	movlw	low STR_52
  6379  000DC0  0100               	movlb	0	; () banked
  6380  000DC2  6FA6               	movwf	printf@fmt& (0+255),b
  6381  000DC4  0EFA               	movlw	high STR_52
  6382  000DC6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6383  000DC8  EC44  F01B         	call	_printf	;wreg free
  6384                           
  6385                           ;main.c: 324:                 printf("Select:     Change settings...\r\n");
  6386  000DCC  0EF6               	movlw	low STR_53
  6387  000DCE  0100               	movlb	0	; () banked
  6388  000DD0  6FA6               	movwf	printf@fmt& (0+255),b
  6389  000DD2  0EFC               	movlw	high STR_53
  6390  000DD4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6391  000DD6  EC44  F01B         	call	_printf	;wreg free
  6392                           
  6393                           ;main.c: 325:                 printf("Select:     Logging\r\n");
  6394  000DDA  0EB6               	movlw	low STR_54
  6395  000DDC  0100               	movlb	0	; () banked
  6396  000DDE  6FA6               	movwf	printf@fmt& (0+255),b
  6397  000DE0  0EFE               	movlw	high STR_54
  6398  000DE2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6399  000DE4  EC44  F01B         	call	_printf	;wreg free
  6400                           
  6401                           ;main.c: 326:                 printf("Select:     Session logging: All session output\r\
      +                          n");
  6402  000DE8  0E77               	movlw	low STR_55
  6403  000DEA  0100               	movlb	0	; () banked
  6404  000DEC  6FA6               	movwf	printf@fmt& (0+255),b
  6405  000DEE  0EFB               	movlw	high STR_55
  6406  000DF0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6407  000DF2  EC44  F01B         	call	_printf	;wreg free
  6408                           
  6409                           ;main.c: 327:                 printf("Log file name: Browse and provide a .csv extension
      +                           to your file name\r\n");
  6410  000DF6  0E81               	movlw	low STR_56
  6411  000DF8  0100               	movlb	0	; () banked
  6412  000DFA  6FA6               	movwf	printf@fmt& (0+255),b
  6413  000DFC  0EF3               	movlw	high STR_56
  6414  000DFE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6415  000E00  EC44  F01B         	call	_printf	;wreg free
  6416                           
  6417                           ;main.c: 328:                 printf("Select:     Apply\r\n");
  6418  000E04  0E48               	movlw	low STR_57
  6419  000E06  0100               	movlb	0	; () banked
  6420  000E08  6FA6               	movwf	printf@fmt& (0+255),b
  6421  000E0A  0EFF               	movlw	high STR_57
  6422  000E0C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6423  000E0E  EC44  F01B         	call	_printf	;wreg free
  6424                           
  6425                           ;main.c: 329:                 printf("Press any key to start\r\n");
  6426  000E12  0E56               	movlw	low STR_58
  6427  000E14  0100               	movlb	0	; () banked
  6428  000E16  6FA6               	movwf	printf@fmt& (0+255),b
  6429  000E18  0EFE               	movlw	high STR_58
  6430  000E1A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6431  000E1C  EC44  F01B         	call	_printf	;wreg free
  6432  000E20                     l6330:
  6433  000E20  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6434  000E24  0900               	iorlw	0
  6435  000E26  B4D8               	btfsc	status,2,c
  6436  000E28  EF18  F007         	goto	u6481
  6437  000E2C  EF1A  F007         	goto	u6480
  6438  000E30                     u6481:
  6439  000E30  EF10  F007         	goto	l6330
  6440  000E34                     u6480:
  6441  000E34                     
  6442                           ;main.c: 332:                 EUSART1_Read();
  6443  000E34  EC58  F01B         	call	_EUSART1_Read	;wreg free
  6444  000E38                     
  6445                           ;main.c: 334:                 uint32_t address = writeStartAddress;
  6446  000E38  C1B8  F1C1         	movff	main@writeStartAddress,main@address
  6447  000E3C  C1B9  F1C2         	movff	main@writeStartAddress+1,main@address+1
  6448  000E40  C1BA  F1C3         	movff	main@writeStartAddress+2,main@address+2
  6449  000E44  C1BB  F1C4         	movff	main@writeStartAddress+3,main@address+3
  6450  000E48                     
  6451                           ;main.c: 335:                 uint32_t endAddress = writeEndAddress;
  6452  000E48  C1C6  F1B4         	movff	main@writeEndAddress,main@endAddress
  6453  000E4C  C1C7  F1B5         	movff	main@writeEndAddress+1,main@endAddress+1
  6454  000E50  C1C8  F1B6         	movff	main@writeEndAddress+2,main@endAddress+2
  6455  000E54  C1C9  F1B7         	movff	main@writeEndAddress+3,main@endAddress+3
  6456  000E58                     
  6457                           ;main.c: 336:                 uint32_t numBlocks = (endAddress - address) >> 9;
  6458  000E58  0101               	movlb	1	; () banked
  6459  000E5A  51C1               	movf	main@address& (0+255),w,b
  6460  000E5C  5DB4               	subwf	main@endAddress& (0+255),w,b
  6461  000E5E  0100               	movlb	0	; () banked
  6462  000E60  6FBE               	movwf	??_main& (0+255),b
  6463  000E62  0101               	movlb	1	; () banked
  6464  000E64  51C2               	movf	(main@address+1)& (0+255),w,b
  6465  000E66  59B5               	subwfb	(main@endAddress+1)& (0+255),w,b
  6466  000E68  0100               	movlb	0	; () banked
  6467  000E6A  6FBF               	movwf	(??_main+1)& (0+255),b
  6468  000E6C  0101               	movlb	1	; () banked
  6469  000E6E  51C3               	movf	(main@address+2)& (0+255),w,b
  6470  000E70  59B6               	subwfb	(main@endAddress+2)& (0+255),w,b
  6471  000E72  0100               	movlb	0	; () banked
  6472  000E74  6FC0               	movwf	(??_main+2)& (0+255),b
  6473  000E76  0101               	movlb	1	; () banked
  6474  000E78  51C4               	movf	(main@address+3)& (0+255),w,b
  6475  000E7A  59B7               	subwfb	(main@endAddress+3)& (0+255),w,b
  6476  000E7C  0100               	movlb	0	; () banked
  6477  000E7E  6FC1               	movwf	(??_main+3)& (0+255),b
  6478  000E80  0E0A               	movlw	10
  6479  000E82  EF48  F007         	goto	u6490
  6480  000E86                     u6495:
  6481  000E86  90D8               	bcf	status,0,c
  6482  000E88  33C1               	rrcf	(??_main+3)& (0+255),f,b
  6483  000E8A  33C0               	rrcf	(??_main+2)& (0+255),f,b
  6484  000E8C  33BF               	rrcf	(??_main+1)& (0+255),f,b
  6485  000E8E  33BE               	rrcf	??_main& (0+255),f,b
  6486  000E90                     u6490:
  6487  000E90  2EE8               	decfsz	wreg,f,c
  6488  000E92  EF43  F007         	goto	u6495
  6489  000E96  C0BE  F1A1         	movff	??_main,main@numBlocks
  6490  000E9A  C0BF  F1A2         	movff	??_main+1,main@numBlocks+1
  6491  000E9E  C0C0  F1A3         	movff	??_main+2,main@numBlocks+2
  6492  000EA2  C0C1  F1A4         	movff	??_main+3,main@numBlocks+3
  6493  000EA6                     
  6494                           ; BSR set to: 0
  6495                           ;main.c: 337:                 uint32_t printedBlocks = 0;
  6496  000EA6  0E00               	movlw	0
  6497  000EA8  0101               	movlb	1	; () banked
  6498  000EAA  6FAB               	movwf	main@printedBlocks& (0+255),b
  6499  000EAC  0E00               	movlw	0
  6500  000EAE  6FAC               	movwf	(main@printedBlocks+1)& (0+255),b
  6501  000EB0  0E00               	movlw	0
  6502  000EB2  6FAD               	movwf	(main@printedBlocks+2)& (0+255),b
  6503  000EB4  0E00               	movlw	0
  6504  000EB6  6FAE               	movwf	(main@printedBlocks+3)& (0+255),b
  6505                           
  6506                           ;main.c: 339:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6507  000EB8  EFB2  F007         	goto	l6362
  6508  000EBC                     l6342:
  6509                           
  6510                           ; BSR set to: 1
  6511                           ;main.c: 340:                     SDCARD_ReadBlock(address, sdCardBuffer);
  6512  000EBC  C1C1  F015         	movff	main@address,SDCARD_ReadBlock@addr
  6513  000EC0  C1C2  F016         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  6514  000EC4  C1C3  F017         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  6515  000EC8  C1C4  F018         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  6516  000ECC  0EDE               	movlw	low _sdCardBuffer
  6517  000ECE  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6518  000ED0  0E07               	movlw	high _sdCardBuffer
  6519  000ED2  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6520  000ED4  ECDC  F017         	call	_SDCARD_ReadBlock	;wreg free
  6521  000ED8                     
  6522                           ;main.c: 341:                     address = incrementAddress(address);
  6523  000ED8  C1C1  F014         	movff	main@address,incrementAddress@sdCardAddress
  6524  000EDC  C1C2  F015         	movff	main@address+1,incrementAddress@sdCardAddress+1
  6525  000EE0  C1C3  F016         	movff	main@address+2,incrementAddress@sdCardAddress+2
  6526  000EE4  C1C4  F017         	movff	main@address+3,incrementAddress@sdCardAddress+3
  6527  000EE8  ECB4  F019         	call	_incrementAddress	;wreg free
  6528  000EEC  C014  F1C1         	movff	?_incrementAddress,main@address
  6529  000EF0  C015  F1C2         	movff	?_incrementAddress+1,main@address+1
  6530  000EF4  C016  F1C3         	movff	?_incrementAddress+2,main@address+2
  6531  000EF8  C017  F1C4         	movff	?_incrementAddress+3,main@address+3
  6532  000EFC                     
  6533                           ;main.c: 343:                     for (uint16_t i = 0; i != 512; i++) {
  6534  000EFC  0E00               	movlw	0
  6535  000EFE  0101               	movlb	1	; () banked
  6536  000F00  6FBF               	movwf	(main@i_1316+1)& (0+255),b
  6537  000F02  0E00               	movlw	0
  6538  000F04  6FBE               	movwf	main@i_1316& (0+255),b
  6539  000F06                     l6348:
  6540                           
  6541                           ; BSR set to: 1
  6542  000F06  0E02               	movlw	2
  6543  000F08  19BF               	xorwf	(main@i_1316+1)& (0+255),w,b
  6544  000F0A  11BE               	iorwf	main@i_1316& (0+255),w,b
  6545  000F0C  A4D8               	btfss	status,2,c
  6546  000F0E  EF8B  F007         	goto	u6501
  6547  000F12  EF8D  F007         	goto	u6500
  6548  000F16                     u6501:
  6549  000F16  EF8F  F007         	goto	l6352
  6550  000F1A                     u6500:
  6551  000F1A  EFAC  F007         	goto	l6360
  6552  000F1E                     l6352:
  6553                           
  6554                           ; BSR set to: 1
  6555                           ;main.c: 344:                         uint16_t printVal = sdCardBuffer[i];
  6556  000F1E  0EDE               	movlw	low _sdCardBuffer
  6557  000F20  25BE               	addwf	main@i_1316& (0+255),w,b
  6558  000F22  6ED9               	movwf	fsr2l,c
  6559  000F24  0E07               	movlw	high _sdCardBuffer
  6560  000F26  21BF               	addwfc	(main@i_1316+1)& (0+255),w,b
  6561  000F28  6EDA               	movwf	fsr2h,c
  6562  000F2A  50DF               	movf	indf2,w,c
  6563  000F2C  0100               	movlb	0	; () banked
  6564  000F2E  6FBE               	movwf	??_main& (0+255),b
  6565  000F30  51BE               	movf	??_main& (0+255),w,b
  6566  000F32  0101               	movlb	1	; () banked
  6567  000F34  6FA5               	movwf	main@printVal& (0+255),b
  6568  000F36  6BA6               	clrf	(main@printVal+1)& (0+255),b
  6569  000F38                     
  6570                           ; BSR set to: 1
  6571                           ;main.c: 345:                         printf("%d\r\n", printVal);
  6572  000F38  0E8E               	movlw	low (STR_35+25)
  6573  000F3A  0100               	movlb	0	; () banked
  6574  000F3C  6FA6               	movwf	printf@fmt& (0+255),b
  6575  000F3E  0EFD               	movlw	high (STR_35+25)
  6576  000F40  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6577  000F42  C1A5  F0A8         	movff	main@printVal,?_printf+2
  6578  000F46  C1A6  F0A9         	movff	main@printVal+1,?_printf+3
  6579  000F4A  EC44  F01B         	call	_printf	;wreg free
  6580  000F4E                     
  6581                           ;main.c: 346:                     }
  6582  000F4E  0101               	movlb	1	; () banked
  6583  000F50  4BBE               	infsnz	main@i_1316& (0+255),f,b
  6584  000F52  2BBF               	incf	(main@i_1316+1)& (0+255),f,b
  6585  000F54  EF83  F007         	goto	l6348
  6586  000F58                     l6360:
  6587                           
  6588                           ; BSR set to: 1
  6589                           ;main.c: 347:                     printedBlocks++;
  6590  000F58  0E01               	movlw	1
  6591  000F5A  27AB               	addwf	main@printedBlocks& (0+255),f,b
  6592  000F5C  0E00               	movlw	0
  6593  000F5E  23AC               	addwfc	(main@printedBlocks+1)& (0+255),f,b
  6594  000F60  23AD               	addwfc	(main@printedBlocks+2)& (0+255),f,b
  6595  000F62  23AE               	addwfc	(main@printedBlocks+3)& (0+255),f,b
  6596  000F64                     l6362:
  6597                           
  6598                           ; BSR set to: 1
  6599                           ;main.c: 339:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6600  000F64  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6601  000F68  0900               	iorlw	0
  6602  000F6A  A4D8               	btfss	status,2,c
  6603  000F6C  EFBA  F007         	goto	u6511
  6604  000F70  EFBC  F007         	goto	u6510
  6605  000F74                     u6511:
  6606  000F74  EFCF  F007         	goto	l6366
  6607  000F78                     u6510:
  6608  000F78  0101               	movlb	1	; () banked
  6609  000F7A  51B4               	movf	main@endAddress& (0+255),w,b
  6610  000F7C  19C1               	xorwf	main@address& (0+255),w,b
  6611  000F7E  E10D               	bnz	u6521
  6612  000F80  51B5               	movf	(main@endAddress+1)& (0+255),w,b
  6613  000F82  19C2               	xorwf	(main@address+1)& (0+255),w,b
  6614  000F84  E10A               	bnz	u6521
  6615  000F86  51B6               	movf	(main@endAddress+2)& (0+255),w,b
  6616  000F88  19C3               	xorwf	(main@address+2)& (0+255),w,b
  6617  000F8A  E107               	bnz	u6521
  6618  000F8C  51B7               	movf	(main@endAddress+3)& (0+255),w,b
  6619  000F8E  19C4               	xorwf	(main@address+3)& (0+255),w,b
  6620  000F90  A4D8               	btfss	status,2,c
  6621  000F92  EFCD  F007         	goto	u6521
  6622  000F96  EFCF  F007         	goto	u6520
  6623  000F9A                     u6521:
  6624  000F9A  EF5E  F007         	goto	l6342
  6625  000F9E                     u6520:
  6626  000F9E                     l6366:
  6627                           
  6628                           ;main.c: 349:                 if ((EUSART1_is_rx_ready()))
  6629  000F9E  ECE2  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6630  000FA2  0900               	iorlw	0
  6631  000FA4  B4D8               	btfsc	status,2,c
  6632  000FA6  EFD7  F007         	goto	u6531
  6633  000FAA  EFD9  F007         	goto	u6530
  6634  000FAE                     u6531:
  6635  000FAE  EFDB  F007         	goto	l6370
  6636  000FB2                     u6530:
  6637  000FB2                     
  6638                           ;main.c: 350:                     EUSART1_Read();
  6639  000FB2  EC58  F01B         	call	_EUSART1_Read	;wreg free
  6640  000FB6                     l6370:
  6641                           
  6642                           ;main.c: 352:                 printf("Spooled %u out of the %u blocks.\r\n", printedBloc
      +                          ks, numBlocks);
  6643  000FB6  0ED3               	movlw	low STR_60
  6644  000FB8  0100               	movlb	0	; () banked
  6645  000FBA  6FA6               	movwf	printf@fmt& (0+255),b
  6646  000FBC  0EFC               	movlw	high STR_60
  6647  000FBE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6648  000FC0  C1AB  F0A8         	movff	main@printedBlocks,?_printf+2
  6649  000FC4  C1AC  F0A9         	movff	main@printedBlocks+1,?_printf+3
  6650  000FC8  C1AD  F0AA         	movff	main@printedBlocks+2,?_printf+4
  6651  000FCC  C1AE  F0AB         	movff	main@printedBlocks+3,?_printf+5
  6652  000FD0  C1A1  F0AC         	movff	main@numBlocks,?_printf+6
  6653  000FD4  C1A2  F0AD         	movff	main@numBlocks+1,?_printf+7
  6654  000FD8  C1A3  F0AE         	movff	main@numBlocks+2,?_printf+8
  6655  000FDC  C1A4  F0AF         	movff	main@numBlocks+3,?_printf+9
  6656  000FE0  EC44  F01B         	call	_printf	;wreg free
  6657  000FE4                     
  6658                           ;main.c: 353:                 printf("To close the file follow these instructions: \r\n"
      +                          );
  6659  000FE4  0EDA               	movlw	low STR_61
  6660  000FE6  0100               	movlb	0	; () banked
  6661  000FE8  6FA6               	movwf	printf@fmt& (0+255),b
  6662  000FEA  0EFB               	movlw	high STR_61
  6663  000FEC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6664  000FEE  EC44  F01B         	call	_printf	;wreg free
  6665  000FF2                     
  6666                           ;main.c: 354:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6667  000FF2  0ED0               	movlw	low STR_52
  6668  000FF4  0100               	movlb	0	; () banked
  6669  000FF6  6FA6               	movwf	printf@fmt& (0+255),b
  6670  000FF8  0EFA               	movlw	high STR_52
  6671  000FFA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6672  000FFC  EC44  F01B         	call	_printf	;wreg free
  6673  001000                     
  6674                           ;main.c: 355:                 printf("Select:     Change settings...\r\n");
  6675  001000  0EF6               	movlw	low STR_53
  6676  001002  0100               	movlb	0	; () banked
  6677  001004  6FA6               	movwf	printf@fmt& (0+255),b
  6678  001006  0EFC               	movlw	high STR_53
  6679  001008  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6680  00100A  EC44  F01B         	call	_printf	;wreg free
  6681  00100E                     
  6682                           ;main.c: 356:                 printf("Select:     Logging\r\n");
  6683  00100E  0EB6               	movlw	low STR_54
  6684  001010  0100               	movlb	0	; () banked
  6685  001012  6FA6               	movwf	printf@fmt& (0+255),b
  6686  001014  0EFE               	movlw	high STR_54
  6687  001016  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6688  001018  EC44  F01B         	call	_printf	;wreg free
  6689  00101C                     
  6690                           ;main.c: 357:                 printf("Select:     Session  logging: None\r\n");
  6691  00101C  0E89               	movlw	low STR_65
  6692  00101E  0100               	movlb	0	; () banked
  6693  001020  6FA6               	movwf	printf@fmt& (0+255),b
  6694  001022  0EFC               	movlw	high STR_65
  6695  001024  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6696  001026  EC44  F01B         	call	_printf	;wreg free
  6697  00102A                     
  6698                           ;main.c: 358:                 printf("Select:     Apply \r\n");
  6699  00102A  0ECC               	movlw	low STR_66
  6700  00102C  0100               	movlb	0	; () banked
  6701  00102E  6FA6               	movwf	printf@fmt& (0+255),b
  6702  001030  0EFE               	movlw	high STR_66
  6703  001032  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6704  001034  EC44  F01B         	call	_printf	;wreg free
  6705                           
  6706                           ;main.c: 360:                 break;
  6707  001038  EF7E  F000         	goto	l6040
  6708  00103C                     l6384:
  6709                           
  6710                           ; BSR set to: 0
  6711                           ;main.c: 368:                 SPI2_Close();
  6712  00103C  EC22  F01C         	call	_SPI2_Close	;wreg free
  6713  001040                     
  6714                           ;main.c: 369:                 SPI2_Open(SPI2_DEFAULT);
  6715  001040  0E00               	movlw	0
  6716  001042  EC86  F017         	call	_SPI2_Open
  6717  001046                     
  6718                           ;main.c: 370:                 SDCARD_Initialize(1);
  6719  001046  0E01               	movlw	1
  6720  001048  EC6D  F014         	call	_SDCARD_Initialize
  6721                           
  6722                           ;main.c: 371:                 break;
  6723  00104C  EF7E  F000         	goto	l6040
  6724  001050                     l6390:
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;main.c: 378:                 if (cmd == 'a') {
  6728  001050  0E61               	movlw	97
  6729  001052  0101               	movlb	1	; () banked
  6730  001054  19C5               	xorwf	main@cmd& (0+255),w,b
  6731  001056  A4D8               	btfss	status,2,c
  6732  001058  EF30  F008         	goto	u6541
  6733  00105C  EF32  F008         	goto	u6540
  6734  001060                     u6541:
  6735  001060  EF5E  F008         	goto	l6400
  6736  001064                     u6540:
  6737  001064                     
  6738                           ; BSR set to: 1
  6739                           ;main.c: 379:                     sdCardAddress -= 512;
  6740  001064  0E00               	movlw	0
  6741  001066  5FD4               	subwf	main@sdCardAddress& (0+255),f,b
  6742  001068  0E02               	movlw	2
  6743  00106A  5BD5               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  6744  00106C  0E00               	movlw	0
  6745  00106E  5BD6               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  6746  001070  0E00               	movlw	0
  6747  001072  5BD7               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  6748                           
  6749                           ;main.c: 380:                     if (sdCardAddress >= 0x04000000) {
  6750  001074  0E04               	movlw	4
  6751  001076  5DD7               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6752  001078  A0D8               	btfss	status,0,c
  6753  00107A  EF41  F008         	goto	u6551
  6754  00107E  EF43  F008         	goto	u6550
  6755  001082                     u6551:
  6756  001082  EF55  F008         	goto	l6398
  6757  001086                     u6550:
  6758  001086                     
  6759                           ; BSR set to: 1
  6760                           ;main.c: 381:                         printf("Underflowed to high address\r\n");
  6761  001086  0E93               	movlw	low STR_67
  6762  001088  0100               	movlb	0	; () banked
  6763  00108A  6FA6               	movwf	printf@fmt& (0+255),b
  6764  00108C  0EFD               	movlw	high STR_67
  6765  00108E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6766  001090  EC44  F01B         	call	_printf	;wreg free
  6767  001094                     
  6768                           ;main.c: 382:                         sdCardAddress = 0x04000000 - 512;
  6769  001094  0E00               	movlw	0
  6770  001096  0101               	movlb	1	; () banked
  6771  001098  6FD4               	movwf	main@sdCardAddress& (0+255),b
  6772  00109A  0EFE               	movlw	254
  6773  00109C  6FD5               	movwf	(main@sdCardAddress+1)& (0+255),b
  6774  00109E  0EFF               	movlw	255
  6775  0010A0  6FD6               	movwf	(main@sdCardAddress+2)& (0+255),b
  6776  0010A2  0E03               	movlw	3
  6777  0010A4  6FD7               	movwf	(main@sdCardAddress+3)& (0+255),b
  6778                           
  6779                           ;main.c: 383:                     } else {
  6780  0010A6  EF88  F008         	goto	l578
  6781  0010AA                     l6398:
  6782                           
  6783                           ; BSR set to: 1
  6784                           ;main.c: 384:                         printf("Decreased address\r\n");
  6785  0010AA  0E20               	movlw	low STR_68
  6786  0010AC  0100               	movlb	0	; () banked
  6787  0010AE  6FA6               	movwf	printf@fmt& (0+255),b
  6788  0010B0  0EFF               	movlw	high STR_68
  6789  0010B2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6790  0010B4  EC44  F01B         	call	_printf	;wreg free
  6791  0010B8  EF88  F008         	goto	l578
  6792  0010BC                     l6400:
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;main.c: 387:                     sdCardAddress += 512;
  6796  0010BC  0E00               	movlw	0
  6797  0010BE  27D4               	addwf	main@sdCardAddress& (0+255),f,b
  6798  0010C0  0E02               	movlw	2
  6799  0010C2  23D5               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  6800  0010C4  0E00               	movlw	0
  6801  0010C6  23D6               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  6802  0010C8  0E00               	movlw	0
  6803  0010CA  23D7               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  6804                           
  6805                           ;main.c: 388:                     if (sdCardAddress >= 0x04000000) {
  6806  0010CC  0E04               	movlw	4
  6807  0010CE  5DD7               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6808  0010D0  A0D8               	btfss	status,0,c
  6809  0010D2  EF6D  F008         	goto	u6561
  6810  0010D6  EF6F  F008         	goto	u6560
  6811  0010DA                     u6561:
  6812  0010DA  EF81  F008         	goto	l6406
  6813  0010DE                     u6560:
  6814  0010DE                     
  6815                           ; BSR set to: 1
  6816                           ;main.c: 389:                         printf("Overflowed to low address\r\n");
  6817  0010DE  0EEA               	movlw	low STR_69
  6818  0010E0  0100               	movlb	0	; () banked
  6819  0010E2  6FA6               	movwf	printf@fmt& (0+255),b
  6820  0010E4  0EFD               	movlw	high STR_69
  6821  0010E6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6822  0010E8  EC44  F01B         	call	_printf	;wreg free
  6823  0010EC                     
  6824                           ;main.c: 390:                         sdCardAddress = 0x00000000;
  6825  0010EC  0E00               	movlw	0
  6826  0010EE  0101               	movlb	1	; () banked
  6827  0010F0  6FD4               	movwf	main@sdCardAddress& (0+255),b
  6828  0010F2  0E00               	movlw	0
  6829  0010F4  6FD5               	movwf	(main@sdCardAddress+1)& (0+255),b
  6830  0010F6  0E00               	movlw	0
  6831  0010F8  6FD6               	movwf	(main@sdCardAddress+2)& (0+255),b
  6832  0010FA  0E00               	movlw	0
  6833  0010FC  6FD7               	movwf	(main@sdCardAddress+3)& (0+255),b
  6834                           
  6835                           ;main.c: 391:                     } else {
  6836  0010FE  EF88  F008         	goto	l578
  6837  001102                     l6406:
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;main.c: 392:                         printf("Increased address\r\n");
  6841  001102  0E34               	movlw	low STR_70
  6842  001104  0100               	movlb	0	; () banked
  6843  001106  6FA6               	movwf	printf@fmt& (0+255),b
  6844  001108  0EFF               	movlw	high STR_70
  6845  00110A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6846  00110C  EC44  F01B         	call	_printf	;wreg free
  6847  001110                     l578:
  6848                           
  6849                           ;main.c: 397:                 printf("SD card address:  ");
  6850  001110  0E5C               	movlw	low STR_71
  6851  001112  0100               	movlb	0	; () banked
  6852  001114  6FA6               	movwf	printf@fmt& (0+255),b
  6853  001116  0EFF               	movlw	high STR_71
  6854  001118  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6855  00111A  EC44  F01B         	call	_printf	;wreg free
  6856                           
  6857                           ;main.c: 398:                 printf("%04x", sdCardAddress >> 16);
  6858  00111E  0EEE               	movlw	low STR_10
  6859  001120  0100               	movlb	0	; () banked
  6860  001122  6FA6               	movwf	printf@fmt& (0+255),b
  6861  001124  0EFF               	movlw	high STR_10
  6862  001126  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6863  001128  C1D6  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  6864  00112C  C1D7  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  6865  001130  6BAA               	clrf	(?_printf+4)& (0+255),b
  6866  001132  6BAB               	clrf	(?_printf+5)& (0+255),b
  6867  001134  EC44  F01B         	call	_printf	;wreg free
  6868                           
  6869                           ;main.c: 399:                 printf(":");
  6870  001138  0EFD               	movlw	low STR_11
  6871  00113A  0100               	movlb	0	; () banked
  6872  00113C  6FA6               	movwf	printf@fmt& (0+255),b
  6873  00113E  0EFF               	movlw	high STR_11
  6874  001140  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6875  001142  EC44  F01B         	call	_printf	;wreg free
  6876                           
  6877                           ;main.c: 400:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  6878  001146  0EEE               	movlw	low STR_10
  6879  001148  0100               	movlb	0	; () banked
  6880  00114A  6FA6               	movwf	printf@fmt& (0+255),b
  6881  00114C  0EFF               	movlw	high STR_10
  6882  00114E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6883  001150  0EFF               	movlw	255
  6884  001152  0101               	movlb	1	; () banked
  6885  001154  15D4               	andwf	main@sdCardAddress& (0+255),w,b
  6886  001156  0100               	movlb	0	; () banked
  6887  001158  6FA8               	movwf	(?_printf+2)& (0+255),b
  6888  00115A  0EFF               	movlw	255
  6889  00115C  0101               	movlb	1	; () banked
  6890  00115E  15D5               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  6891  001160  0100               	movlb	0	; () banked
  6892  001162  6FA9               	movwf	(?_printf+3)& (0+255),b
  6893  001164  0E00               	movlw	0
  6894  001166  0101               	movlb	1	; () banked
  6895  001168  15D6               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  6896  00116A  0100               	movlb	0	; () banked
  6897  00116C  6FAA               	movwf	(?_printf+4)& (0+255),b
  6898  00116E  0E00               	movlw	0
  6899  001170  0101               	movlb	1	; () banked
  6900  001172  15D7               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  6901  001174  0100               	movlb	0	; () banked
  6902  001176  6FAB               	movwf	(?_printf+5)& (0+255),b
  6903  001178  EC44  F01B         	call	_printf	;wreg free
  6904                           
  6905                           ;main.c: 401:                 printf("\r\n");
  6906  00117C  0EAE               	movlw	low (STR_76+12)
  6907  00117E  0100               	movlb	0	; () banked
  6908  001180  6FA6               	movwf	printf@fmt& (0+255),b
  6909  001182  0EFF               	movlw	high (STR_76+12)
  6910  001184  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6911  001186  EC44  F01B         	call	_printf	;wreg free
  6912                           
  6913                           ;main.c: 402:                 break;
  6914  00118A  EF7E  F000         	goto	l6040
  6915  00118E                     l6408:
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;main.c: 408:                 SDCARD_ReadBlock(sdCardAddress, sdCardBuffer);
  6919  00118E  C1D4  F015         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  6920  001192  C1D5  F016         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  6921  001196  C1D6  F017         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  6922  00119A  C1D7  F018         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  6923  00119E  0EDE               	movlw	low _sdCardBuffer
  6924  0011A0  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6925  0011A2  0E07               	movlw	high _sdCardBuffer
  6926  0011A4  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6927  0011A6  ECDC  F017         	call	_SDCARD_ReadBlock	;wreg free
  6928  0011AA                     
  6929                           ;main.c: 409:                 printf("Read block: \r\n");
  6930  0011AA  0EA2               	movlw	low STR_76
  6931  0011AC  0100               	movlb	0	; () banked
  6932  0011AE  6FA6               	movwf	printf@fmt& (0+255),b
  6933  0011B0  0EFF               	movlw	high STR_76
  6934  0011B2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6935  0011B4  EC44  F01B         	call	_printf	;wreg free
  6936  0011B8                     
  6937                           ;main.c: 410:                 printAddress(sdCardAddress);
  6938  0011B8  C1D4  F0B4         	movff	main@sdCardAddress,printAddress@address
  6939  0011BC  C1D5  F0B5         	movff	main@sdCardAddress+1,printAddress@address+1
  6940  0011C0  C1D6  F0B6         	movff	main@sdCardAddress+2,printAddress@address+2
  6941  0011C4  C1D7  F0B7         	movff	main@sdCardAddress+3,printAddress@address+3
  6942  0011C8  ECF4  F018         	call	_printAddress	;wreg free
  6943  0011CC                     
  6944                           ;main.c: 411:                 hexDumpBuffer(sdCardBuffer);
  6945  0011CC  0EDE               	movlw	low _sdCardBuffer
  6946  0011CE  0100               	movlb	0	; () banked
  6947  0011D0  6FB4               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  6948  0011D2  0E07               	movlw	high _sdCardBuffer
  6949  0011D4  6FB5               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  6950  0011D6  ECE6  F011         	call	_hexDumpBuffer	;wreg free
  6951                           
  6952                           ;main.c: 412:                 break;
  6953  0011DA  EF7E  F000         	goto	l6040
  6954  0011DE                     l6416:
  6955                           
  6956                           ; BSR set to: 0
  6957                           ;main.c: 418:                 printf("Unknown key %c\r\n", cmd);
  6958  0011DE  0E6F               	movlw	low STR_77
  6959  0011E0  6FA6               	movwf	printf@fmt& (0+255),b
  6960  0011E2  0EFF               	movlw	high STR_77
  6961  0011E4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6962  0011E6  C1C5  F0A8         	movff	main@cmd,?_printf+2
  6963  0011EA  6BA9               	clrf	(?_printf+3)& (0+255),b
  6964  0011EC  EC44  F01B         	call	_printf	;wreg free
  6965                           
  6966                           ;main.c: 419:                 break;
  6967  0011F0  EF7E  F000         	goto	l6040
  6968  0011F4                     l6420:
  6969  0011F4  0101               	movlb	1	; () banked
  6970  0011F6  51C5               	movf	main@cmd& (0+255),w,b
  6971  0011F8  0100               	movlb	0	; () banked
  6972  0011FA  6FBE               	movwf	??_main& (0+255),b
  6973  0011FC  6BBF               	clrf	(??_main+1)& (0+255),b
  6974                           
  6975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6976                           ; Switch size 1, requested type "simple"
  6977                           ; Number of cases is 1, Range of values is 0 to 0
  6978                           ; switch strategies available:
  6979                           ; Name         Instructions Cycles
  6980                           ; simple_byte            4     3 (average)
  6981                           ;	Chosen strategy is simple_byte
  6982  0011FE  51BF               	movf	(??_main+1)& (0+255),w,b
  6983  001200  0A00               	xorlw	0	; case 0
  6984  001202  B4D8               	btfsc	status,2,c
  6985  001204  EF06  F009         	goto	l6538
  6986  001208  EFEF  F008         	goto	l6416
  6987  00120C                     l6538:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ; Switch size 1, requested type "simple"
  6991                           ; Number of cases is 14, Range of values is 43 to 122
  6992                           ; switch strategies available:
  6993                           ; Name         Instructions Cycles
  6994                           ; simple_byte           43    22 (average)
  6995                           ;	Chosen strategy is simple_byte
  6996  00120C  51BE               	movf	??_main& (0+255),w,b
  6997  00120E  0A2B               	xorlw	43	; case 43
  6998  001210  B4D8               	btfsc	status,2,c
  6999  001212  EF09  F003         	goto	l6136
  7000  001216  0A06               	xorlw	6	; case 45
  7001  001218  B4D8               	btfsc	status,2,c
  7002  00121A  EF11  F003         	goto	l6138
  7003  00121E  0A1C               	xorlw	28	; case 49
  7004  001220  B4D8               	btfsc	status,2,c
  7005  001222  EFE8  F001         	goto	l472
  7006  001226  0A0E               	xorlw	14	; case 63
  7007  001228  B4D8               	btfsc	status,2,c
  7008  00122A  EF9F  F000         	goto	l6048
  7009  00122E  0A7E               	xorlw	126	; case 65
  7010  001230  B4D8               	btfsc	status,2,c
  7011  001232  EF28  F008         	goto	l6390
  7012  001236  0A11               	xorlw	17	; case 80
  7013  001238  B4D8               	btfsc	status,2,c
  7014  00123A  EF24  F003         	goto	l493
  7015  00123E  0A07               	xorlw	7	; case 87
  7016  001240  B4D8               	btfsc	status,2,c
  7017  001242  EFD7  F003         	goto	l6176
  7018  001246  0A0D               	xorlw	13	; case 90
  7019  001248  B4D8               	btfsc	status,2,c
  7020  00124A  EFA9  F001         	goto	l6052
  7021  00124E  0A3B               	xorlw	59	; case 97
  7022  001250  B4D8               	btfsc	status,2,c
  7023  001252  EF28  F008         	goto	l6390
  7024  001256  0A08               	xorlw	8	; case 105
  7025  001258  B4D8               	btfsc	status,2,c
  7026  00125A  EF1E  F008         	goto	l6384
  7027  00125E  0A06               	xorlw	6	; case 111
  7028  001260  B4D8               	btfsc	status,2,c
  7029  001262  EFA1  F001         	goto	l6050
  7030  001266  0A1D               	xorlw	29	; case 114
  7031  001268  B4D8               	btfsc	status,2,c
  7032  00126A  EFC7  F008         	goto	l6408
  7033  00126E  0A01               	xorlw	1	; case 115
  7034  001270  B4D8               	btfsc	status,2,c
  7035  001272  EFCB  F006         	goto	l6328
  7036  001276  0A09               	xorlw	9	; case 122
  7037  001278  B4D8               	btfsc	status,2,c
  7038  00127A  EFCA  F001         	goto	l6064
  7039  00127E  EFEF  F008         	goto	l6416
  7040  001282  EF27  F000         	goto	start
  7041  001286                     __end_of_main:
  7042                           	callstack 0
  7043                           
  7044 ;; *************** function _printAscii *****************
  7045 ;; Defined at:
  7046 ;;		line 555 in file "main.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;		None
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;Total ram usage:        0 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:   13
  7067 ;; This function calls:
  7068 ;;		_printf
  7069 ;; This function is called by:
  7070 ;;		_main
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text1
  7075  0021E0                     __ptext1:
  7076                           	callstack 0
  7077  0021E0                     _printAscii:
  7078                           	callstack 17
  7079  0021E0                     
  7080                           ;main.c: 556:     printf("...........................................................\r\
      +                          n");
  7081  0021E0  0E0C               	movlw	low STR_83
  7082  0021E2  0100               	movlb	0	; () banked
  7083  0021E4  6FA6               	movwf	printf@fmt& (0+255),b
  7084  0021E6  0EF4               	movlw	high STR_83
  7085  0021E8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7086  0021EA  EC44  F01B         	call	_printf	;wreg free
  7087                           
  7088                           ;main.c: 557:     printf(".....................?????????????????.....................\r\
      +                          n");
  7089  0021EE  0E4A               	movlw	low STR_84
  7090  0021F0  0100               	movlb	0	; () banked
  7091  0021F2  6FA6               	movwf	printf@fmt& (0+255),b
  7092  0021F4  0EF4               	movlw	high STR_84
  7093  0021F6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7094  0021F8  EC44  F01B         	call	_printf	;wreg free
  7095                           
  7096                           ;main.c: 558:     printf(".................?????????????????????????.................\r\
      +                          n");
  7097  0021FC  0E88               	movlw	low STR_85
  7098  0021FE  0100               	movlb	0	; () banked
  7099  002200  6FA6               	movwf	printf@fmt& (0+255),b
  7100  002202  0EF4               	movlw	high STR_85
  7101  002204  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7102  002206  EC44  F01B         	call	_printf	;wreg free
  7103                           
  7104                           ;main.c: 559:     printf("..............???????????????????????????????..............\r\
      +                          n");
  7105  00220A  0EC6               	movlw	low STR_86
  7106  00220C  0100               	movlb	0	; () banked
  7107  00220E  6FA6               	movwf	printf@fmt& (0+255),b
  7108  002210  0EF4               	movlw	high STR_86
  7109  002212  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7110  002214  EC44  F01B         	call	_printf	;wreg free
  7111                           
  7112                           ;main.c: 560:     printf("............???????????????????????????????????............\r\
      +                          n");
  7113  002218  0E04               	movlw	low STR_87
  7114  00221A  0100               	movlb	0	; () banked
  7115  00221C  6FA6               	movwf	printf@fmt& (0+255),b
  7116  00221E  0EF5               	movlw	high STR_87
  7117  002220  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7118  002222  EC44  F01B         	call	_printf	;wreg free
  7119                           
  7120                           ;main.c: 561:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  7121  002226  0E42               	movlw	low STR_88
  7122  002228  0100               	movlb	0	; () banked
  7123  00222A  6FA6               	movwf	printf@fmt& (0+255),b
  7124  00222C  0EF5               	movlw	high STR_88
  7125  00222E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7126  002230  EC44  F01B         	call	_printf	;wreg free
  7127                           
  7128                           ;main.c: 562:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  7129  002234  0E80               	movlw	low STR_89
  7130  002236  0100               	movlb	0	; () banked
  7131  002238  6FA6               	movwf	printf@fmt& (0+255),b
  7132  00223A  0EF5               	movlw	high STR_89
  7133  00223C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7134  00223E  EC44  F01B         	call	_printf	;wreg free
  7135                           
  7136                           ;main.c: 563:     printf(".......?????????????????????????????????????????????.......\r\
      +                          n");
  7137  002242  0EFC               	movlw	low STR_90
  7138  002244  0100               	movlb	0	; () banked
  7139  002246  6FA6               	movwf	printf@fmt& (0+255),b
  7140  002248  0EF5               	movlw	high STR_90
  7141  00224A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7142  00224C  EC44  F01B         	call	_printf	;wreg free
  7143                           
  7144                           ;main.c: 564:     printf("......???????????????????????????????????????????????......\r\
      +                          n");
  7145  002250  0E78               	movlw	low STR_91
  7146  002252  0100               	movlb	0	; () banked
  7147  002254  6FA6               	movwf	printf@fmt& (0+255),b
  7148  002256  0EF6               	movlw	high STR_91
  7149  002258  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7150  00225A  EC44  F01B         	call	_printf	;wreg free
  7151                           
  7152                           ;main.c: 565:     printf(".....?????????????????????????????????????????????????.....\r\
      +                          n");
  7153  00225E  0EF4               	movlw	low STR_92
  7154  002260  0100               	movlb	0	; () banked
  7155  002262  6FA6               	movwf	printf@fmt& (0+255),b
  7156  002264  0EF6               	movlw	high STR_92
  7157  002266  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7158  002268  EC44  F01B         	call	_printf	;wreg free
  7159                           
  7160                           ;main.c: 566:     printf("....????:::::::::::?????????????????????:::::::::::????....\r\
      +                          n");
  7161  00226C  0E32               	movlw	low STR_93
  7162  00226E  0100               	movlb	0	; () banked
  7163  002270  6FA6               	movwf	printf@fmt& (0+255),b
  7164  002272  0EF7               	movlw	high STR_93
  7165  002274  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7166  002276  EC44  F01B         	call	_printf	;wreg free
  7167                           
  7168                           ;main.c: 567:     printf("...??::::::::::::::::::::?????????::::::::::::::::::::??...\r\
      +                          n");
  7169  00227A  0EAE               	movlw	low STR_94
  7170  00227C  0100               	movlb	0	; () banked
  7171  00227E  6FA6               	movwf	printf@fmt& (0+255),b
  7172  002280  0EF7               	movlw	high STR_94
  7173  002282  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7174  002284  EC44  F01B         	call	_printf	;wreg free
  7175                           
  7176                           ;main.c: 568:     printf("..???:::::::::::::::::::::::::::::::::::::::::::::::::???..\r\
      +                          n");
  7177  002288  0E68               	movlw	low STR_95
  7178  00228A  0100               	movlb	0	; () banked
  7179  00228C  6FA6               	movwf	printf@fmt& (0+255),b
  7180  00228E  0EF8               	movlw	high STR_95
  7181  002290  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7182  002292  EC44  F01B         	call	_printf	;wreg free
  7183                           
  7184                           ;main.c: 569:     printf("..????::::::::::::::::::::::???::::::::::::::::::::::????..\r\
      +                          n");
  7185  002296  0EA6               	movlw	low STR_96
  7186  002298  0100               	movlb	0	; () banked
  7187  00229A  6FA6               	movwf	printf@fmt& (0+255),b
  7188  00229C  0EF8               	movlw	high STR_96
  7189  00229E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7190  0022A0  EC44  F01B         	call	_printf	;wreg free
  7191                           
  7192                           ;main.c: 570:     printf(".??????::::::::::::::::::::?????:::::::::::::::::::::?????.\r\
      +                          n");
  7193  0022A4  0E60               	movlw	low STR_97
  7194  0022A6  0100               	movlb	0	; () banked
  7195  0022A8  6FA6               	movwf	printf@fmt& (0+255),b
  7196  0022AA  0EF9               	movlw	high STR_97
  7197  0022AC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7198  0022AE  EC44  F01B         	call	_printf	;wreg free
  7199                           
  7200                           ;main.c: 571:     printf(".???????::::::::::::::::::???????:::::::::::::::::::??????.\r\
      +                          n");
  7201  0022B2  0E9E               	movlw	low STR_98
  7202  0022B4  0100               	movlb	0	; () banked
  7203  0022B6  6FA6               	movwf	printf@fmt& (0+255),b
  7204  0022B8  0EF9               	movlw	high STR_98
  7205  0022BA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7206  0022BC  EC44  F01B         	call	_printf	;wreg free
  7207                           
  7208                           ;main.c: 572:     printf(".???????:::::::::::::::::?????????::::::::::::::::::??????.\r\
      +                          n");
  7209  0022C0  0EDC               	movlw	low STR_99
  7210  0022C2  0100               	movlb	0	; () banked
  7211  0022C4  6FA6               	movwf	printf@fmt& (0+255),b
  7212  0022C6  0EF9               	movlw	high STR_99
  7213  0022C8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7214  0022CA  EC44  F01B         	call	_printf	;wreg free
  7215                           
  7216                           ;main.c: 573:     printf(".????????:::::::::::::::???????????:::::::::::::::????????.\r\
      +                          n");
  7217  0022CE  0E1A               	movlw	low STR_100
  7218  0022D0  0100               	movlb	0	; () banked
  7219  0022D2  6FA6               	movwf	printf@fmt& (0+255),b
  7220  0022D4  0EFA               	movlw	high STR_100
  7221  0022D6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7222  0022D8  EC44  F01B         	call	_printf	;wreg free
  7223                           
  7224                           ;main.c: 574:     printf(".??????????::::::::::?????????????????::::::::::??????????.\r\
      +                          n");
  7225  0022DC  0E58               	movlw	low STR_101
  7226  0022DE  0100               	movlb	0	; () banked
  7227  0022E0  6FA6               	movwf	printf@fmt& (0+255),b
  7228  0022E2  0EFA               	movlw	high STR_101
  7229  0022E4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7230  0022E6  EC44  F01B         	call	_printf	;wreg free
  7231                           
  7232                           ;main.c: 575:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7233  0022EA  0E22               	movlw	low STR_102
  7234  0022EC  0100               	movlb	0	; () banked
  7235  0022EE  6FA6               	movwf	printf@fmt& (0+255),b
  7236  0022F0  0EF9               	movlw	high STR_102
  7237  0022F2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7238  0022F4  EC44  F01B         	call	_printf	;wreg free
  7239                           
  7240                           ;main.c: 576:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7241  0022F8  0E22               	movlw	low STR_102
  7242  0022FA  0100               	movlb	0	; () banked
  7243  0022FC  6FA6               	movwf	printf@fmt& (0+255),b
  7244  0022FE  0EF9               	movlw	high STR_102
  7245  002300  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7246  002302  EC44  F01B         	call	_printf	;wreg free
  7247                           
  7248                           ;main.c: 577:     printf("...??????????????????????????????????????????????????????..\r\
      +                          n");
  7249  002306  0EE4               	movlw	low STR_104
  7250  002308  0100               	movlb	0	; () banked
  7251  00230A  6FA6               	movwf	printf@fmt& (0+255),b
  7252  00230C  0EF8               	movlw	high STR_104
  7253  00230E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7254  002310  EC44  F01B         	call	_printf	;wreg free
  7255                           
  7256                           ;main.c: 578:     printf("...?????????????:::?????????????????????:::?????????????...\r\
      +                          n");
  7257  002314  0EEC               	movlw	low STR_105
  7258  002316  0100               	movlb	0	; () banked
  7259  002318  6FA6               	movwf	printf@fmt& (0+255),b
  7260  00231A  0EF7               	movlw	high STR_105
  7261  00231C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7262  00231E  EC44  F01B         	call	_printf	;wreg free
  7263                           
  7264                           ;main.c: 579:     printf("....?????????????:::???????????????????:::??????????????...\r\
      +                          n");
  7265  002322  0E2A               	movlw	low STR_106
  7266  002324  0100               	movlb	0	; () banked
  7267  002326  6FA6               	movwf	printf@fmt& (0+255),b
  7268  002328  0EF8               	movlw	high STR_106
  7269  00232A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7270  00232C  EC44  F01B         	call	_printf	;wreg free
  7271                           
  7272                           ;main.c: 580:     printf("....??????????????:::?????????????????:::??????????????....\r\
      +                          n");
  7273  002330  0E70               	movlw	low STR_107
  7274  002332  0100               	movlb	0	; () banked
  7275  002334  6FA6               	movwf	printf@fmt& (0+255),b
  7276  002336  0EF7               	movlw	high STR_107
  7277  002338  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7278  00233A  EC44  F01B         	call	_printf	;wreg free
  7279                           
  7280                           ;main.c: 581:     printf(".....??????????????::::?????????????::::??????????????.....\r\
      +                          n");
  7281  00233E  0EB6               	movlw	low STR_108
  7282  002340  0100               	movlb	0	; () banked
  7283  002342  6FA6               	movwf	printf@fmt& (0+255),b
  7284  002344  0EF6               	movlw	high STR_108
  7285  002346  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7286  002348  EC44  F01B         	call	_printf	;wreg free
  7287                           
  7288                           ;main.c: 582:     printf("......???????????????:::::???????:::::???????????????......\r\
      +                          n");
  7289  00234C  0E3A               	movlw	low STR_109
  7290  00234E  0100               	movlb	0	; () banked
  7291  002350  6FA6               	movwf	printf@fmt& (0+255),b
  7292  002352  0EF6               	movlw	high STR_109
  7293  002354  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7294  002356  EC44  F01B         	call	_printf	;wreg free
  7295                           
  7296                           ;main.c: 583:     printf(".......?????????????????:::::::::::?????????????????.......\r\
      +                          n");
  7297  00235A  0EBE               	movlw	low STR_110
  7298  00235C  0100               	movlb	0	; () banked
  7299  00235E  6FA6               	movwf	printf@fmt& (0+255),b
  7300  002360  0EF5               	movlw	high STR_110
  7301  002362  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7302  002364  EC44  F01B         	call	_printf	;wreg free
  7303                           
  7304                           ;main.c: 584:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  7305  002368  0E80               	movlw	low STR_89
  7306  00236A  0100               	movlb	0	; () banked
  7307  00236C  6FA6               	movwf	printf@fmt& (0+255),b
  7308  00236E  0EF5               	movlw	high STR_89
  7309  002370  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7310  002372  EC44  F01B         	call	_printf	;wreg free
  7311                           
  7312                           ;main.c: 585:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  7313  002376  0E42               	movlw	low STR_88
  7314  002378  0100               	movlb	0	; () banked
  7315  00237A  6FA6               	movwf	printf@fmt& (0+255),b
  7316  00237C  0EF5               	movlw	high STR_88
  7317  00237E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7318  002380  EC44  F01B         	call	_printf	;wreg free
  7319                           
  7320                           ;main.c: 586:     printf("............???????????????????????????????????............\r\
      +                          n");
  7321  002384  0E04               	movlw	low STR_87
  7322  002386  0100               	movlb	0	; () banked
  7323  002388  6FA6               	movwf	printf@fmt& (0+255),b
  7324  00238A  0EF5               	movlw	high STR_87
  7325  00238C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7326  00238E  EC44  F01B         	call	_printf	;wreg free
  7327                           
  7328                           ;main.c: 587:     printf("..............???????????????????????????????..............\r\
      +                          n");
  7329  002392  0EC6               	movlw	low STR_86
  7330  002394  0100               	movlb	0	; () banked
  7331  002396  6FA6               	movwf	printf@fmt& (0+255),b
  7332  002398  0EF4               	movlw	high STR_86
  7333  00239A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7334  00239C  EC44  F01B         	call	_printf	;wreg free
  7335                           
  7336                           ;main.c: 588:     printf(".................?????????????????????????.................\r\
      +                          n");
  7337  0023A0  0E88               	movlw	low STR_85
  7338  0023A2  0100               	movlb	0	; () banked
  7339  0023A4  6FA6               	movwf	printf@fmt& (0+255),b
  7340  0023A6  0EF4               	movlw	high STR_85
  7341  0023A8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7342  0023AA  EC44  F01B         	call	_printf	;wreg free
  7343                           
  7344                           ;main.c: 589:     printf(".....................?????????????????.....................\r\
      +                          n");
  7345  0023AE  0E4A               	movlw	low STR_84
  7346  0023B0  0100               	movlb	0	; () banked
  7347  0023B2  6FA6               	movwf	printf@fmt& (0+255),b
  7348  0023B4  0EF4               	movlw	high STR_84
  7349  0023B6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7350  0023B8  EC44  F01B         	call	_printf	;wreg free
  7351                           
  7352                           ;main.c: 590:     printf("...........................................................\r\
      +                          n");
  7353  0023BC  0E0C               	movlw	low STR_83
  7354  0023BE  0100               	movlb	0	; () banked
  7355  0023C0  6FA6               	movwf	printf@fmt& (0+255),b
  7356  0023C2  0EF4               	movlw	high STR_83
  7357  0023C4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7358  0023C6  EC44  F01B         	call	_printf	;wreg free
  7359  0023CA  0012               	return		;funcret
  7360  0023CC                     __end_of_printAscii:
  7361                           	callstack 0
  7362                           
  7363 ;; *************** function _printAddress *****************
  7364 ;; Defined at:
  7365 ;;		line 439 in file "main.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;  address         4   84[BANK0 ] unsigned long 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;		None
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7379 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7382 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7383 ;;Total ram usage:        4 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:   13
  7386 ;; This function calls:
  7387 ;;		_printf
  7388 ;; This function is called by:
  7389 ;;		_main
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text2
  7394  0031E8                     __ptext2:
  7395                           	callstack 0
  7396  0031E8                     _printAddress:
  7397                           	callstack 17
  7398  0031E8                     
  7399                           ;main.c: 439: void printAddress(uint32_t address);main.c: 440: {;main.c: 441:     printf
      +                          ("    Address:    ");
  7400  0031E8  0E80               	movlw	low STR_36
  7401  0031EA  0100               	movlb	0	; () banked
  7402  0031EC  6FA6               	movwf	printf@fmt& (0+255),b
  7403  0031EE  0EFF               	movlw	high STR_36
  7404  0031F0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7405  0031F2  EC44  F01B         	call	_printf	;wreg free
  7406                           
  7407                           ;main.c: 442:     printf("%04x", address >> 16);
  7408  0031F6  0EEE               	movlw	low STR_10
  7409  0031F8  0100               	movlb	0	; () banked
  7410  0031FA  6FA6               	movwf	printf@fmt& (0+255),b
  7411  0031FC  0EFF               	movlw	high STR_10
  7412  0031FE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7413  003200  C0B6  F0A8         	movff	printAddress@address+2,?_printf+2
  7414  003204  C0B7  F0A9         	movff	printAddress@address+3,?_printf+3
  7415  003208  6BAA               	clrf	(?_printf+4)& (0+255),b
  7416  00320A  6BAB               	clrf	(?_printf+5)& (0+255),b
  7417  00320C  EC44  F01B         	call	_printf	;wreg free
  7418                           
  7419                           ;main.c: 443:     printf(":");
  7420  003210  0EFD               	movlw	low STR_11
  7421  003212  0100               	movlb	0	; () banked
  7422  003214  6FA6               	movwf	printf@fmt& (0+255),b
  7423  003216  0EFF               	movlw	high STR_11
  7424  003218  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7425  00321A  EC44  F01B         	call	_printf	;wreg free
  7426                           
  7427                           ;main.c: 444:     printf("%04x", address & 0X0000FFFF);
  7428  00321E  0EEE               	movlw	low STR_10
  7429  003220  0100               	movlb	0	; () banked
  7430  003222  6FA6               	movwf	printf@fmt& (0+255),b
  7431  003224  0EFF               	movlw	high STR_10
  7432  003226  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7433  003228  0EFF               	movlw	255
  7434  00322A  15B4               	andwf	printAddress@address& (0+255),w,b
  7435  00322C  6FA8               	movwf	(?_printf+2)& (0+255),b
  7436  00322E  0EFF               	movlw	255
  7437  003230  15B5               	andwf	(printAddress@address+1)& (0+255),w,b
  7438  003232  6FA9               	movwf	(?_printf+3)& (0+255),b
  7439  003234  0E00               	movlw	0
  7440  003236  15B6               	andwf	(printAddress@address+2)& (0+255),w,b
  7441  003238  6FAA               	movwf	(?_printf+4)& (0+255),b
  7442  00323A  0E00               	movlw	0
  7443  00323C  15B7               	andwf	(printAddress@address+3)& (0+255),w,b
  7444  00323E  6FAB               	movwf	(?_printf+5)& (0+255),b
  7445  003240  EC44  F01B         	call	_printf	;wreg free
  7446                           
  7447                           ;main.c: 445:     printf("\r\n");
  7448  003244  0EAE               	movlw	low (STR_76+12)
  7449  003246  0100               	movlb	0	; () banked
  7450  003248  6FA6               	movwf	printf@fmt& (0+255),b
  7451  00324A  0EFF               	movlw	high (STR_76+12)
  7452  00324C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7453  00324E  EC44  F01B         	call	_printf	;wreg free
  7454  003252  0012               	return		;funcret
  7455  003254                     __end_of_printAddress:
  7456                           	callstack 0
  7457                           
  7458 ;; *************** function _incrementAddress *****************
  7459 ;; Defined at:
  7460 ;;		line 424 in file "main.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;  sdCardAddres    4   19[COMRAM] unsigned long 
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;		None
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  4   19[COMRAM] unsigned long 
  7467 ;; Registers used:
  7468 ;;		wreg, status,2, status,0
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;Total ram usage:        4 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; Hardware stack levels required when called:    4
  7481 ;; This function calls:
  7482 ;;		Nothing
  7483 ;; This function is called by:
  7484 ;;		_main
  7485 ;; This function uses a non-reentrant model
  7486 ;;
  7487                           
  7488                           	psect	text3
  7489  003368                     __ptext3:
  7490                           	callstack 0
  7491  003368                     _incrementAddress:
  7492                           	callstack 26
  7493  003368                     
  7494                           ;main.c: 424: uint32_t incrementAddress(uint32_t sdCardAddress);main.c: 425: {;main.c: 4
      +                          26:     sdCardAddress += 512;
  7495  003368  0E00               	movlw	0
  7496  00336A  2614               	addwf	incrementAddress@sdCardAddress^0,f,c
  7497  00336C  0E02               	movlw	2
  7498  00336E  2215               	addwfc	(incrementAddress@sdCardAddress+1)^0,f,c
  7499  003370  0E00               	movlw	0
  7500  003372  2216               	addwfc	(incrementAddress@sdCardAddress+2)^0,f,c
  7501  003374  0E00               	movlw	0
  7502  003376  2217               	addwfc	(incrementAddress@sdCardAddress+3)^0,f,c
  7503                           
  7504                           ;main.c: 427:     if (sdCardAddress >= 0x04000000)
  7505  003378  0E04               	movlw	4
  7506  00337A  5C17               	subwf	(incrementAddress@sdCardAddress+3)^0,w,c
  7507  00337C  A0D8               	btfss	status,0,c
  7508  00337E  EFC3  F019         	goto	u5741
  7509  003382  EFC5  F019         	goto	u5740
  7510  003386                     u5741:
  7511  003386  EFCD  F019         	goto	l5818
  7512  00338A                     u5740:
  7513  00338A                     
  7514                           ;main.c: 428:         sdCardAddress = 0x00000000;
  7515  00338A  0E00               	movlw	0
  7516  00338C  6E14               	movwf	incrementAddress@sdCardAddress^0,c
  7517  00338E  0E00               	movlw	0
  7518  003390  6E15               	movwf	(incrementAddress@sdCardAddress+1)^0,c
  7519  003392  0E00               	movlw	0
  7520  003394  6E16               	movwf	(incrementAddress@sdCardAddress+2)^0,c
  7521  003396  0E00               	movlw	0
  7522  003398  6E17               	movwf	(incrementAddress@sdCardAddress+3)^0,c
  7523  00339A                     l5818:
  7524                           
  7525                           ;main.c: 429:     return sdCardAddress;
  7526  00339A  C014  F014         	movff	incrementAddress@sdCardAddress,?_incrementAddress
  7527  00339E  C015  F015         	movff	incrementAddress@sdCardAddress+1,?_incrementAddress+1
  7528  0033A2  C016  F016         	movff	incrementAddress@sdCardAddress+2,?_incrementAddress+2
  7529  0033A6  C017  F017         	movff	incrementAddress@sdCardAddress+3,?_incrementAddress+3
  7530  0033AA  0012               	return		;funcret
  7531  0033AC                     __end_of_incrementAddress:
  7532                           	callstack 0
  7533                           
  7534 ;; *************** function _hexDumpBuffer *****************
  7535 ;; Defined at:
  7536 ;;		line 179 in file "sdCard.c"
  7537 ;; Parameters:    Size  Location     Type
  7538 ;;  sdCardBuffer    2   84[BANK0 ] PTR unsigned char 
  7539 ;;		 -> sdCardBuffer(512), 
  7540 ;; Auto vars:     Size  Location     Type
  7541 ;;  j               2   88[BANK0 ] int 
  7542 ;;  j               2   90[BANK0 ] int 
  7543 ;;  i               2   92[BANK0 ] unsigned short 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      void 
  7546 ;; Registers used:
  7547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7548 ;; Tracked objects:
  7549 ;;		On entry : 0/0
  7550 ;;		On exit  : 0/0
  7551 ;;		Unchanged: 0/0
  7552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7553 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7554 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7556 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7557 ;;Total ram usage:       10 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; Hardware stack levels required when called:   13
  7560 ;; This function calls:
  7561 ;;		_printf
  7562 ;; This function is called by:
  7563 ;;		_main
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text4
  7568  0023CC                     __ptext4:
  7569                           	callstack 0
  7570  0023CC                     _hexDumpBuffer:
  7571                           	callstack 17
  7572  0023CC                     
  7573                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  7574  0023CC  0EF3               	movlw	low STR_121
  7575  0023CE  0100               	movlb	0	; () banked
  7576  0023D0  6FA6               	movwf	printf@fmt& (0+255),b
  7577  0023D2  0EFF               	movlw	high STR_121
  7578  0023D4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7579  0023D6  EC44  F01B         	call	_printf	;wreg free
  7580  0023DA                     
  7581                           ;sdCard.c: 185:                     printf(".");
  7582  0023DA  0E00               	movlw	0
  7583  0023DC  0100               	movlb	0	; () banked
  7584  0023DE  6FBD               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  7585  0023E0  0E00               	movlw	0
  7586  0023E2  6FBC               	movwf	hexDumpBuffer@i& (0+255),b
  7587  0023E4                     l5944:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;sdCard.c: 186:                 } else {
  7591  0023E4  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7592  0023E6  11BD               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7593  0023E8  B4D8               	btfsc	status,2,c
  7594  0023EA  EFF9  F011         	goto	u5841
  7595  0023EE  EFFB  F011         	goto	u5840
  7596  0023F2                     u5841:
  7597  0023F2  EF10  F012         	goto	l5950
  7598  0023F6                     u5840:
  7599  0023F6                     
  7600                           ; BSR set to: 0
  7601  0023F6  0E07               	movlw	7
  7602  0023F8  15BC               	andwf	hexDumpBuffer@i& (0+255),w,b
  7603  0023FA  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7604  0023FC  0E00               	movlw	0
  7605  0023FE  15BD               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7606  002400  6FB7               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7607  002402  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7608  002404  11B7               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7609  002406  A4D8               	btfss	status,2,c
  7610  002408  EF08  F012         	goto	u5851
  7611  00240C  EF0A  F012         	goto	u5850
  7612  002410                     u5851:
  7613  002410  EF10  F012         	goto	l5950
  7614  002414                     u5850:
  7615  002414                     
  7616                           ; BSR set to: 0
  7617  002414  0E8F               	movlw	low (STR_36+15)
  7618  002416  6FA6               	movwf	printf@fmt& (0+255),b
  7619  002418  0EFF               	movlw	high (STR_36+15)
  7620  00241A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7621  00241C  EC44  F01B         	call	_printf	;wreg free
  7622  002420                     l5950:
  7623                           
  7624                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  7625  002420  0100               	movlb	0	; () banked
  7626  002422  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7627  002424  11BD               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7628  002426  B4D8               	btfsc	status,2,c
  7629  002428  EF18  F012         	goto	u5861
  7630  00242C  EF1A  F012         	goto	u5860
  7631  002430                     u5861:
  7632  002430  EF73  F012         	goto	l711
  7633  002434                     u5860:
  7634  002434                     
  7635                           ; BSR set to: 0
  7636  002434  0E0F               	movlw	15
  7637  002436  15BC               	andwf	hexDumpBuffer@i& (0+255),w,b
  7638  002438  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7639  00243A  0E00               	movlw	0
  7640  00243C  15BD               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7641  00243E  6FB7               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7642  002440  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7643  002442  11B7               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7644  002444  A4D8               	btfss	status,2,c
  7645  002446  EF27  F012         	goto	u5871
  7646  00244A  EF29  F012         	goto	u5870
  7647  00244E                     u5871:
  7648  00244E  EF73  F012         	goto	l711
  7649  002452                     u5870:
  7650  002452                     
  7651                           ; BSR set to: 0
  7652                           ;sdCard.c: 188:                 }
  7653  002452  0E8E               	movlw	low (STR_36+14)
  7654  002454  6FA6               	movwf	printf@fmt& (0+255),b
  7655  002456  0EFF               	movlw	high (STR_36+14)
  7656  002458  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7657  00245A  EC44  F01B         	call	_printf	;wreg free
  7658  00245E                     
  7659                           ;sdCard.c: 189:             }
  7660  00245E  0EF0               	movlw	240
  7661  002460  0100               	movlb	0	; () banked
  7662  002462  25BC               	addwf	hexDumpBuffer@i& (0+255),w,b
  7663  002464  6FB8               	movwf	hexDumpBuffer@j& (0+255),b
  7664  002466  0EFF               	movlw	255
  7665  002468  21BD               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7666  00246A  6FB9               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  7667  00246C  EF62  F012         	goto	l5966
  7668  002470                     l5958:
  7669                           
  7670                           ; BSR set to: 0
  7671                           ;sdCard.c: 190:             printf("\r\n");
  7672  002470  51B8               	movf	hexDumpBuffer@j& (0+255),w,b
  7673  002472  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7674  002474  6ED9               	movwf	fsr2l,c
  7675  002476  51B9               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7676  002478  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7677  00247A  6EDA               	movwf	fsr2h,c
  7678  00247C  0E20               	movlw	32
  7679  00247E  60DF               	cpfslt	indf2,c
  7680  002480  EF44  F012         	goto	u5881
  7681  002484  EF46  F012         	goto	u5880
  7682  002488                     u5881:
  7683  002488  EF4E  F012         	goto	l5962
  7684  00248C                     u5880:
  7685  00248C                     
  7686                           ; BSR set to: 0
  7687                           ;sdCard.c: 191:         }
  7688  00248C  0E7F               	movlw	low (STR_42+74)
  7689  00248E  6FA6               	movwf	printf@fmt& (0+255),b
  7690  002490  0EF3               	movlw	high (STR_42+74)
  7691  002492  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7692  002494  EC44  F01B         	call	_printf	;wreg free
  7693                           
  7694                           ;sdCard.c: 192: 
  7695  002498  EF5F  F012         	goto	l5964
  7696  00249C                     l5962:
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  7700  00249C  0EF7               	movlw	low STR_125
  7701  00249E  6FA6               	movwf	printf@fmt& (0+255),b
  7702  0024A0  0EFF               	movlw	high STR_125
  7703  0024A2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7704  0024A4  51B8               	movf	hexDumpBuffer@j& (0+255),w,b
  7705  0024A6  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7706  0024A8  6ED9               	movwf	fsr2l,c
  7707  0024AA  51B9               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7708  0024AC  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7709  0024AE  6EDA               	movwf	fsr2h,c
  7710  0024B0  50DF               	movf	indf2,w,c
  7711  0024B2  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7712  0024B4  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7713  0024B6  6FA8               	movwf	(?_printf+2)& (0+255),b
  7714  0024B8  6BA9               	clrf	(?_printf+3)& (0+255),b
  7715  0024BA  EC44  F01B         	call	_printf	;wreg free
  7716  0024BE                     l5964:
  7717                           
  7718                           ;sdCard.c: 195: 
  7719  0024BE  0100               	movlb	0	; () banked
  7720  0024C0  4BB8               	infsnz	hexDumpBuffer@j& (0+255),f,b
  7721  0024C2  2BB9               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  7722  0024C4                     l5966:
  7723                           
  7724                           ; BSR set to: 0
  7725  0024C4  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7726  0024C6  5DB8               	subwf	hexDumpBuffer@j& (0+255),w,b
  7727  0024C8  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7728  0024CA  59B9               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  7729  0024CC  A0D8               	btfss	status,0,c
  7730  0024CE  EF6B  F012         	goto	u5891
  7731  0024D2  EF6D  F012         	goto	u5890
  7732  0024D6                     u5891:
  7733  0024D6  EF38  F012         	goto	l5958
  7734  0024DA                     u5890:
  7735  0024DA                     
  7736                           ; BSR set to: 0
  7737                           ;sdCard.c: 196:     printf("   ");
  7738  0024DA  0EAE               	movlw	low (STR_76+12)
  7739  0024DC  6FA6               	movwf	printf@fmt& (0+255),b
  7740  0024DE  0EFF               	movlw	high (STR_76+12)
  7741  0024E0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7742  0024E2  EC44  F01B         	call	_printf	;wreg free
  7743  0024E6                     l711:
  7744                           
  7745                           ;sdCard.c: 199:             printf(".");
  7746  0024E6  0EE8               	movlw	low STR_127
  7747  0024E8  0100               	movlb	0	; () banked
  7748  0024EA  6FA6               	movwf	printf@fmt& (0+255),b
  7749  0024EC  0EFF               	movlw	high STR_127
  7750  0024EE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7751  0024F0  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7752  0024F2  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7753  0024F4  6ED9               	movwf	fsr2l,c
  7754  0024F6  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7755  0024F8  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7756  0024FA  6EDA               	movwf	fsr2h,c
  7757  0024FC  50DF               	movf	indf2,w,c
  7758  0024FE  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7759  002500  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7760  002502  6FA8               	movwf	(?_printf+2)& (0+255),b
  7761  002504  6BA9               	clrf	(?_printf+3)& (0+255),b
  7762  002506  EC44  F01B         	call	_printf	;wreg free
  7763  00250A                     
  7764                           ;sdCard.c: 200:         } else {
  7765  00250A  0100               	movlb	0	; () banked
  7766  00250C  4BBC               	infsnz	hexDumpBuffer@i& (0+255),f,b
  7767  00250E  2BBD               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  7768  002510                     
  7769                           ; BSR set to: 0
  7770  002510  0E02               	movlw	2
  7771  002512  5DBD               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7772  002514  A0D8               	btfss	status,0,c
  7773  002516  EF8F  F012         	goto	u5901
  7774  00251A  EF91  F012         	goto	u5900
  7775  00251E                     u5901:
  7776  00251E  EFF2  F011         	goto	l5944
  7777  002522                     u5900:
  7778  002522                     
  7779                           ; BSR set to: 0
  7780                           ;sdCard.c: 202:         }
  7781  002522  0E8D               	movlw	low (STR_36+13)
  7782  002524  6FA6               	movwf	printf@fmt& (0+255),b
  7783  002526  0EFF               	movlw	high (STR_36+13)
  7784  002528  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7785  00252A  EC44  F01B         	call	_printf	;wreg free
  7786  00252E                     
  7787                           ;sdCard.c: 203:     }
  7788  00252E  0EF0               	movlw	240
  7789  002530  0100               	movlb	0	; () banked
  7790  002532  25BC               	addwf	hexDumpBuffer@i& (0+255),w,b
  7791  002534  6FBA               	movwf	hexDumpBuffer@j_1447& (0+255),b
  7792  002536  0EFF               	movlw	255
  7793  002538  21BD               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7794  00253A  6FBB               	movwf	(hexDumpBuffer@j_1447+1)& (0+255),b
  7795  00253C  EFCA  F012         	goto	l5986
  7796  002540                     l5978:
  7797                           
  7798                           ; BSR set to: 0
  7799                           ;sdCard.c: 204:     printf("\r\n");
  7800  002540  51BA               	movf	hexDumpBuffer@j_1447& (0+255),w,b
  7801  002542  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7802  002544  6ED9               	movwf	fsr2l,c
  7803  002546  51BB               	movf	(hexDumpBuffer@j_1447+1)& (0+255),w,b
  7804  002548  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7805  00254A  6EDA               	movwf	fsr2h,c
  7806  00254C  0E20               	movlw	32
  7807  00254E  60DF               	cpfslt	indf2,c
  7808  002550  EFAC  F012         	goto	u5911
  7809  002554  EFAE  F012         	goto	u5910
  7810  002558                     u5911:
  7811  002558  EFB6  F012         	goto	l5982
  7812  00255C                     u5910:
  7813  00255C                     
  7814                           ; BSR set to: 0
  7815                           ;sdCard.c: 205: }
  7816  00255C  0E7F               	movlw	low (STR_42+74)
  7817  00255E  6FA6               	movwf	printf@fmt& (0+255),b
  7818  002560  0EF3               	movlw	high (STR_42+74)
  7819  002562  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7820  002564  EC44  F01B         	call	_printf	;wreg free
  7821  002568  EFC7  F012         	goto	l5984
  7822  00256C                     l5982:
  7823                           
  7824                           ; BSR set to: 0
  7825  00256C  0EF7               	movlw	low STR_125
  7826  00256E  6FA6               	movwf	printf@fmt& (0+255),b
  7827  002570  0EFF               	movlw	high STR_125
  7828  002572  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7829  002574  51BA               	movf	hexDumpBuffer@j_1447& (0+255),w,b
  7830  002576  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7831  002578  6ED9               	movwf	fsr2l,c
  7832  00257A  51BB               	movf	(hexDumpBuffer@j_1447+1)& (0+255),w,b
  7833  00257C  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7834  00257E  6EDA               	movwf	fsr2h,c
  7835  002580  50DF               	movf	indf2,w,c
  7836  002582  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7837  002584  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7838  002586  6FA8               	movwf	(?_printf+2)& (0+255),b
  7839  002588  6BA9               	clrf	(?_printf+3)& (0+255),b
  7840  00258A  EC44  F01B         	call	_printf	;wreg free
  7841  00258E                     l5984:
  7842  00258E  0100               	movlb	0	; () banked
  7843  002590  4BBA               	infsnz	hexDumpBuffer@j_1447& (0+255),f,b
  7844  002592  2BBB               	incf	(hexDumpBuffer@j_1447+1)& (0+255),f,b
  7845  002594                     l5986:
  7846                           
  7847                           ; BSR set to: 0
  7848  002594  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7849  002596  5DBA               	subwf	hexDumpBuffer@j_1447& (0+255),w,b
  7850  002598  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7851  00259A  59BB               	subwfb	(hexDumpBuffer@j_1447+1)& (0+255),w,b
  7852  00259C  A0D8               	btfss	status,0,c
  7853  00259E  EFD3  F012         	goto	u5921
  7854  0025A2  EFD5  F012         	goto	u5920
  7855  0025A6                     u5921:
  7856  0025A6  EFA0  F012         	goto	l5978
  7857  0025AA                     u5920:
  7858  0025AA                     
  7859                           ; BSR set to: 0
  7860  0025AA  0EAE               	movlw	low (STR_76+12)
  7861  0025AC  6FA6               	movwf	printf@fmt& (0+255),b
  7862  0025AE  0EFF               	movlw	high (STR_76+12)
  7863  0025B0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7864  0025B2  EC44  F01B         	call	_printf	;wreg free
  7865  0025B6  0012               	return		;funcret
  7866  0025B8                     __end_of_hexDumpBuffer:
  7867                           	callstack 0
  7868                           
  7869 ;; *************** function _TMR0_WriteTimer *****************
  7870 ;; Defined at:
  7871 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  timerVal        2   19[COMRAM] unsigned short 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;		None
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      void 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2
  7880 ;; Tracked objects:
  7881 ;;		On entry : 0/0
  7882 ;;		On exit  : 0/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7889 ;;Total ram usage:        2 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    4
  7892 ;; This function calls:
  7893 ;;		Nothing
  7894 ;; This function is called by:
  7895 ;;		_main
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           	psect	text5
  7900  0037FA                     __ptext5:
  7901                           	callstack 0
  7902  0037FA                     _TMR0_WriteTimer:
  7903                           	callstack 26
  7904  0037FA                     
  7905                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  7906  0037FA  5015               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  7907  0037FC  6ED7               	movwf	215,c	;volatile
  7908  0037FE                     
  7909                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  7910  0037FE  C014  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  7911  003802  0012               	return		;funcret
  7912  003804                     __end_of_TMR0_WriteTimer:
  7913                           	callstack 0
  7914                           
  7915 ;; *************** function _SYSTEM_Initialize *****************
  7916 ;; Defined at:
  7917 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;		None
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;Total ram usage:        0 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    6
  7938 ;; This function calls:
  7939 ;;		_ADC_Initialize
  7940 ;;		_EPWM1_Initialize
  7941 ;;		_EUSART1_Initialize
  7942 ;;		_INTERRUPT_Initialize
  7943 ;;		_OSCILLATOR_Initialize
  7944 ;;		_PIN_MANAGER_Initialize
  7945 ;;		_SPI2_Initialize
  7946 ;;		_TMR0_Initialize
  7947 ;;		_TMR2_Initialize
  7948 ;; This function is called by:
  7949 ;;		_main
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text6
  7954  0036D8                     __ptext6:
  7955                           	callstack 0
  7956  0036D8                     _SYSTEM_Initialize:
  7957                           	callstack 24
  7958  0036D8                     
  7959                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7960  0036D8  EC20  F01C         	call	_INTERRUPT_Initialize	;wreg free
  7961  0036DC                     
  7962                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  7963  0036DC  ECEC  F01B         	call	_SPI2_Initialize	;wreg free
  7964  0036E0                     
  7965                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7966  0036E0  EC2E  F01B         	call	_PIN_MANAGER_Initialize	;wreg free
  7967  0036E4                     
  7968                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7969  0036E4  ECB1  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  7970  0036E8                     
  7971                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  7972  0036E8  ECCC  F01B         	call	_ADC_Initialize	;wreg free
  7973  0036EC                     
  7974                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  7975  0036EC  EC92  F01B         	call	_EPWM1_Initialize	;wreg free
  7976  0036F0                     
  7977                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7978  0036F0  ECF5  F01B         	call	_TMR2_Initialize	;wreg free
  7979  0036F4                     
  7980                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7981  0036F4  ECC5  F01A         	call	_TMR0_Initialize	;wreg free
  7982  0036F8                     
  7983                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  7984  0036F8  EC18  F01A         	call	_EUSART1_Initialize	;wreg free
  7985  0036FC  0012               	return		;funcret
  7986  0036FE                     __end_of_SYSTEM_Initialize:
  7987                           	callstack 0
  7988                           
  7989 ;; *************** function _TMR2_Initialize *****************
  7990 ;; Defined at:
  7991 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;		None
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;		None
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  1    wreg      void 
  7998 ;; Registers used:
  7999 ;;		wreg, status,2
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;Total ram usage:        0 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; Hardware stack levels required when called:    4
  8012 ;; This function calls:
  8013 ;;		Nothing
  8014 ;; This function is called by:
  8015 ;;		_SYSTEM_Initialize
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text7
  8020  0037EA                     __ptext7:
  8021                           	callstack 0
  8022  0037EA                     _TMR2_Initialize:
  8023                           	callstack 25
  8024  0037EA                     
  8025                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  8026  0037EA  0E3F               	movlw	63
  8027  0037EC  6EBB               	movwf	187,c	;volatile
  8028                           
  8029                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  8030  0037EE  0E00               	movlw	0
  8031  0037F0  6EBC               	movwf	188,c	;volatile
  8032  0037F2                     
  8033                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  8034  0037F2  929E               	bcf	158,1,c	;volatile
  8035                           
  8036                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x1C;
  8037  0037F4  0E1C               	movlw	28
  8038  0037F6  6EBA               	movwf	186,c	;volatile
  8039  0037F8  0012               	return		;funcret
  8040  0037FA                     __end_of_TMR2_Initialize:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function _TMR0_Initialize *****************
  8044 ;; Defined at:
  8045 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;		None
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, status,0, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;Total ram usage:        2 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    5
  8066 ;; This function calls:
  8067 ;;		_TMR0_SetInterruptHandler
  8068 ;; This function is called by:
  8069 ;;		_SYSTEM_Initialize
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text8
  8074  00358A                     __ptext8:
  8075                           	callstack 0
  8076  00358A                     _TMR0_Initialize:
  8077                           	callstack 24
  8078  00358A                     
  8079                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  8080  00358A  9CD5               	bcf	213,6,c	;volatile
  8081  00358C                     
  8082                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  8083  00358C  0E00               	movlw	0
  8084  00358E  6ED7               	movwf	215,c	;volatile
  8085                           
  8086                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  8087  003590  0E00               	movlw	0
  8088  003592  6ED6               	movwf	214,c	;volatile
  8089  003594                     
  8090                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  8091  003594  50D6               	movf	214,w,c	;volatile
  8092  003596  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  8093  00359A  6A17               	clrf	(??_TMR0_Initialize+1)^0,c
  8094  00359C  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  8095  0035A0  6A16               	clrf	??_TMR0_Initialize^0,c
  8096  0035A2  1016               	iorwf	??_TMR0_Initialize^0,w,c
  8097  0035A4  6E41               	movwf	_timer0ReloadVal^0,c	;volatile
  8098  0035A6  5017               	movf	(??_TMR0_Initialize+1)^0,w,c
  8099  0035A8  6E42               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  8100  0035AA                     
  8101                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  8102  0035AA  94F2               	bcf	242,2,c	;volatile
  8103  0035AC                     
  8104                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  8105  0035AC  8AF2               	bsf	242,5,c	;volatile
  8106  0035AE                     
  8107                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8108  0035AE  0E4C               	movlw	low _TMR0_DefaultInterruptHandler
  8109  0035B0  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  8110  0035B2  0E38               	movlw	high _TMR0_DefaultInterruptHandler
  8111  0035B4  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  8112  0035B6  EC02  F01C         	call	_TMR0_SetInterruptHandler	;wreg free
  8113  0035BA                     
  8114                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  8115  0035BA  0E9F               	movlw	159
  8116  0035BC  6ED5               	movwf	213,c	;volatile
  8117  0035BE  0012               	return		;funcret
  8118  0035C0                     __end_of_TMR0_Initialize:
  8119                           	callstack 0
  8120                           
  8121 ;; *************** function _TMR0_SetInterruptHandler *****************
  8122 ;; Defined at:
  8123 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  8124 ;; Parameters:    Size  Location     Type
  8125 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8126 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8142 ;;Total ram usage:        2 bytes
  8143 ;; Hardware stack levels used:    1
  8144 ;; Hardware stack levels required when called:    4
  8145 ;; This function calls:
  8146 ;;		Nothing
  8147 ;; This function is called by:
  8148 ;;		_TMR0_Initialize
  8149 ;;		_main
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           	psect	text9
  8154  003804                     __ptext9:
  8155                           	callstack 0
  8156  003804                     _TMR0_SetInterruptHandler:
  8157                           	callstack 26
  8158  003804                     
  8159                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  8160  003804  C014  F043         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8161  003808  C015  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8162  00380C  0012               	return		;funcret
  8163  00380E                     __end_of_TMR0_SetInterruptHandler:
  8164                           	callstack 0
  8165                           
  8166 ;; *************** function _SPI2_Initialize *****************
  8167 ;; Defined at:
  8168 ;;		line 62 in file "mcc_generated_files/spi2.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      void 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    4
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_SYSTEM_Initialize
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text10
  8197  0037D8                     __ptext10:
  8198                           	callstack 0
  8199  0037D8                     _SPI2_Initialize:
  8200                           	callstack 25
  8201  0037D8                     
  8202                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  8203  0037D8  0E40               	movlw	64
  8204  0037DA  6E6D               	movwf	109,c	;volatile
  8205                           
  8206                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  8207  0037DC  0E01               	movlw	1
  8208  0037DE  6E6C               	movwf	108,c	;volatile
  8209                           
  8210                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  8211  0037E0  0E01               	movlw	1
  8212  0037E2  6E6E               	movwf	110,c	;volatile
  8213  0037E4                     
  8214                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  8215  0037E4  9293               	bcf	147,1,c	;volatile
  8216  0037E6                     
  8217                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  8218  0037E6  9A6C               	bcf	108,5,c	;volatile
  8219  0037E8  0012               	return		;funcret
  8220  0037EA                     __end_of_SPI2_Initialize:
  8221                           	callstack 0
  8222                           
  8223 ;; *************** function _PIN_MANAGER_Initialize *****************
  8224 ;; Defined at:
  8225 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;		None
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;		None
  8230 ;; Return value:  Size  Location     Type
  8231 ;;                  1    wreg      void 
  8232 ;; Registers used:
  8233 ;;		wreg, status,2
  8234 ;; Tracked objects:
  8235 ;;		On entry : 0/0
  8236 ;;		On exit  : 0/0
  8237 ;;		Unchanged: 0/0
  8238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8243 ;;Total ram usage:        0 bytes
  8244 ;; Hardware stack levels used:    1
  8245 ;; Hardware stack levels required when called:    4
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_SYSTEM_Initialize
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text11
  8254  00365C                     __ptext11:
  8255                           	callstack 0
  8256  00365C                     _PIN_MANAGER_Initialize:
  8257                           	callstack 25
  8258  00365C                     
  8259                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8260  00365C  0E00               	movlw	0
  8261  00365E  6E89               	movwf	137,c	;volatile
  8262                           
  8263                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8264  003660  0E00               	movlw	0
  8265  003662  6E8A               	movwf	138,c	;volatile
  8266                           
  8267                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8268  003664  0E00               	movlw	0
  8269  003666  6E8B               	movwf	139,c	;volatile
  8270  003668                     
  8271                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  8272  003668  6892               	setf	146,c	;volatile
  8273                           
  8274                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  8275  00366A  0EE5               	movlw	229
  8276  00366C  6E93               	movwf	147,c	;volatile
  8277                           
  8278                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  8279  00366E  0EBB               	movlw	187
  8280  003670  6E94               	movwf	148,c	;volatile
  8281                           
  8282                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  8283  003672  0E3C               	movlw	60
  8284  003674  010F               	movlb	15	; () banked
  8285  003676  6F3A               	movwf	58,b	;volatile
  8286                           
  8287                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  8288  003678  0E31               	movlw	49
  8289  00367A  6F39               	movwf	57,b	;volatile
  8290                           
  8291                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  8292  00367C  0E2F               	movlw	47
  8293  00367E  6F38               	movwf	56,b	;volatile
  8294                           
  8295                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8296  003680  0E00               	movlw	0
  8297  003682  6E61               	movwf	97,c	;volatile
  8298  003684                     
  8299                           ; BSR set to: 15
  8300                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8301  003684  8EF1               	bsf	241,7,c	;volatile
  8302  003686                     
  8303                           ; BSR set to: 15
  8304  003686  0012               	return		;funcret
  8305  003688                     __end_of_PIN_MANAGER_Initialize:
  8306                           	callstack 0
  8307                           
  8308 ;; *************** function _OSCILLATOR_Initialize *****************
  8309 ;; Defined at:
  8310 ;;		line 64 in file "mcc_generated_files/mcc.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;		None
  8313 ;; Auto vars:     Size  Location     Type
  8314 ;;		None
  8315 ;; Return value:  Size  Location     Type
  8316 ;;                  1    wreg      void 
  8317 ;; Registers used:
  8318 ;;		wreg, status,2
  8319 ;; Tracked objects:
  8320 ;;		On entry : 0/0
  8321 ;;		On exit  : 0/0
  8322 ;;		Unchanged: 0/0
  8323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8328 ;;Total ram usage:        0 bytes
  8329 ;; Hardware stack levels used:    1
  8330 ;; Hardware stack levels required when called:    4
  8331 ;; This function calls:
  8332 ;;		Nothing
  8333 ;; This function is called by:
  8334 ;;		_SYSTEM_Initialize
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text12
  8339  003762                     __ptext12:
  8340                           	callstack 0
  8341  003762                     _OSCILLATOR_Initialize:
  8342                           	callstack 25
  8343  003762                     
  8344                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  8345  003762  0E70               	movlw	112
  8346  003764  6ED3               	movwf	211,c	;volatile
  8347                           
  8348                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  8349  003766  0E04               	movlw	4
  8350  003768  6ED2               	movwf	210,c	;volatile
  8351                           
  8352                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  8353  00376A  0E40               	movlw	64
  8354  00376C  6E9B               	movwf	155,c	;volatile
  8355  00376E                     l270:
  8356                           
  8357                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  8358  00376E  AED2               	btfss	4050,7,c	;volatile
  8359  003770  EFBC  F01B         	goto	u5651
  8360  003774  EFBE  F01B         	goto	u5650
  8361  003778                     u5651:
  8362  003778  EFB7  F01B         	goto	l270
  8363  00377C                     u5650:
  8364  00377C  0012               	return		;funcret
  8365  00377E                     __end_of_OSCILLATOR_Initialize:
  8366                           	callstack 0
  8367                           
  8368 ;; *************** function _INTERRUPT_Initialize *****************
  8369 ;; Defined at:
  8370 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		None
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;Total ram usage:        0 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    4
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_SYSTEM_Initialize
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text13
  8399  003840                     __ptext13:
  8400                           	callstack 0
  8401  003840                     _INTERRUPT_Initialize:
  8402                           	callstack 25
  8403  003840                     
  8404                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8405  003840  9ED0               	bcf	208,7,c	;volatile
  8406  003842  0012               	return		;funcret
  8407  003844                     __end_of_INTERRUPT_Initialize:
  8408                           	callstack 0
  8409                           
  8410 ;; *************** function _EUSART1_Initialize *****************
  8411 ;; Defined at:
  8412 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;		None
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1    wreg      void 
  8419 ;; Registers used:
  8420 ;;		wreg, status,2, status,0, cstack
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 0/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;Total ram usage:        0 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:    5
  8433 ;; This function calls:
  8434 ;;		_EUSART1_SetErrorHandler
  8435 ;;		_EUSART1_SetFramingErrorHandler
  8436 ;;		_EUSART1_SetOverrunErrorHandler
  8437 ;; This function is called by:
  8438 ;;		_SYSTEM_Initialize
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text14
  8443  003430                     __ptext14:
  8444                           	callstack 0
  8445  003430                     _EUSART1_Initialize:
  8446                           	callstack 24
  8447  003430                     
  8448                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8449  003430  0E08               	movlw	8
  8450  003432  6EB8               	movwf	184,c	;volatile
  8451                           
  8452                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8453  003434  0E90               	movlw	144
  8454  003436  6EAB               	movwf	171,c	;volatile
  8455                           
  8456                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8457  003438  0E24               	movlw	36
  8458  00343A  6EAC               	movwf	172,c	;volatile
  8459                           
  8460                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  8461  00343C  0E82               	movlw	130
  8462  00343E  6EAF               	movwf	175,c	;volatile
  8463                           
  8464                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  8465  003440  0E06               	movlw	6
  8466  003442  6EB0               	movwf	176,c	;volatile
  8467  003444                     
  8468                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8469  003444  0E00               	movlw	0
  8470  003446  6E14               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8471  003448  0E00               	movlw	0
  8472  00344A  6E15               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8473  00344C  EC0C  F01C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8474  003450                     
  8475                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8476  003450  0E00               	movlw	0
  8477  003452  6E14               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8478  003454  0E00               	movlw	0
  8479  003456  6E15               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8480  003458  EC07  F01C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8481  00345C                     
  8482                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8483  00345C  0E00               	movlw	0
  8484  00345E  6E14               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8485  003460  0E00               	movlw	0
  8486  003462  6E15               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8487  003464  EC11  F01C         	call	_EUSART1_SetErrorHandler	;wreg free
  8488  003468                     
  8489                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8490  003468  0E00               	movlw	0
  8491  00346A  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
  8492  00346C  0012               	return		;funcret
  8493  00346E                     __end_of_EUSART1_Initialize:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8497 ;; Defined at:
  8498 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8501 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;Total ram usage:        2 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    4
  8520 ;; This function calls:
  8521 ;;		Nothing
  8522 ;; This function is called by:
  8523 ;;		_EUSART1_Initialize
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526                           
  8527                           	psect	text15
  8528  00380E                     __ptext15:
  8529                           	callstack 0
  8530  00380E                     _EUSART1_SetOverrunErrorHandler:
  8531                           	callstack 24
  8532  00380E                     
  8533                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8534  00380E  C014  F0C8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8535  003812  C015  F0C9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8536  003816  0012               	return		;funcret
  8537  003818                     __end_of_EUSART1_SetOverrunErrorHandler:
  8538                           	callstack 0
  8539                           
  8540 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8541 ;; Defined at:
  8542 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8545 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;		None
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, status,2, status,0
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;Total ram usage:        2 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:    4
  8564 ;; This function calls:
  8565 ;;		Nothing
  8566 ;; This function is called by:
  8567 ;;		_EUSART1_Initialize
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text16
  8572  003818                     __ptext16:
  8573                           	callstack 0
  8574  003818                     _EUSART1_SetFramingErrorHandler:
  8575                           	callstack 24
  8576  003818                     
  8577                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8578  003818  C014  F0CA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8579  00381C  C015  F0CB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8580  003820  0012               	return		;funcret
  8581  003822                     __end_of_EUSART1_SetFramingErrorHandler:
  8582                           	callstack 0
  8583                           
  8584 ;; *************** function _EUSART1_SetErrorHandler *****************
  8585 ;; Defined at:
  8586 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8589 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2, status,0
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8605 ;;Total ram usage:        2 bytes
  8606 ;; Hardware stack levels used:    1
  8607 ;; Hardware stack levels required when called:    4
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_EUSART1_Initialize
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text17
  8616  003822                     __ptext17:
  8617                           	callstack 0
  8618  003822                     _EUSART1_SetErrorHandler:
  8619                           	callstack 24
  8620  003822                     
  8621                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8622  003822  C014  F0C6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8623  003826  C015  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8624  00382A  0012               	return		;funcret
  8625  00382C                     __end_of_EUSART1_SetErrorHandler:
  8626                           	callstack 0
  8627                           
  8628 ;; *************** function _EPWM1_Initialize *****************
  8629 ;; Defined at:
  8630 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;		None
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8648 ;;Total ram usage:        0 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    4
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_SYSTEM_Initialize
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text18
  8659  003724                     __ptext18:
  8660                           	callstack 0
  8661  003724                     _EPWM1_Initialize:
  8662                           	callstack 25
  8663  003724                     
  8664                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  8665  003724  0E3C               	movlw	60
  8666  003726  6EBD               	movwf	189,c	;volatile
  8667                           
  8668                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8669  003728  0E00               	movlw	0
  8670  00372A  6EB6               	movwf	182,c	;volatile
  8671                           
  8672                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  8673  00372C  0E80               	movlw	128
  8674  00372E  6EB7               	movwf	183,c	;volatile
  8675                           
  8676                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  8677  003730  0E01               	movlw	1
  8678  003732  6EB9               	movwf	185,c	;volatile
  8679                           
  8680                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8681  003734  0E00               	movlw	0
  8682  003736  6EBF               	movwf	191,c	;volatile
  8683                           
  8684                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  8685  003738  0E1F               	movlw	31
  8686  00373A  6EBE               	movwf	190,c	;volatile
  8687                           
  8688                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  8689  00373C  0EFC               	movlw	-4
  8690  00373E  010F               	movlb	15	; () banked
  8691  003740  1749               	andwf	73,f,b	;volatile
  8692  003742                     
  8693                           ; BSR set to: 15
  8694  003742  0012               	return		;funcret
  8695  003744                     __end_of_EPWM1_Initialize:
  8696                           	callstack 0
  8697                           
  8698 ;; *************** function _ADC_Initialize *****************
  8699 ;; Defined at:
  8700 ;;		line 62 in file "mcc_generated_files/adc.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;		None
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		wreg, status,2
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;Total ram usage:        0 bytes
  8719 ;; Hardware stack levels used:    1
  8720 ;; Hardware stack levels required when called:    4
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_SYSTEM_Initialize
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728                           	psect	text19
  8729  003798                     __ptext19:
  8730                           	callstack 0
  8731  003798                     _ADC_Initialize:
  8732                           	callstack 25
  8733  003798                     
  8734                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  8735  003798  0E00               	movlw	0
  8736  00379A  6EC1               	movwf	193,c	;volatile
  8737                           
  8738                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  8739  00379C  0E26               	movlw	38
  8740  00379E  6EC0               	movwf	192,c	;volatile
  8741                           
  8742                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  8743  0037A0  0E00               	movlw	0
  8744  0037A2  6EC3               	movwf	195,c	;volatile
  8745                           
  8746                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  8747  0037A4  0E00               	movlw	0
  8748  0037A6  6EC4               	movwf	196,c	;volatile
  8749                           
  8750                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  8751  0037A8  0E11               	movlw	17
  8752  0037AA  6EC2               	movwf	194,c	;volatile
  8753  0037AC  0012               	return		;funcret
  8754  0037AE                     __end_of_ADC_Initialize:
  8755                           	callstack 0
  8756                           
  8757 ;; *************** function _SPI2_Open *****************
  8758 ;; Defined at:
  8759 ;;		line 72 in file "mcc_generated_files/spi2.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;  spi2UniqueCo    1    wreg     enum E355
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  spi2UniqueCo    1   20[COMRAM] enum E355
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      _Bool 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8776 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8777 ;;Total ram usage:        2 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    4
  8780 ;; This function calls:
  8781 ;;		Nothing
  8782 ;; This function is called by:
  8783 ;;		_main
  8784 ;; This function uses a non-reentrant model
  8785 ;;
  8786                           
  8787                           	psect	text20
  8788  002F0C                     __ptext20:
  8789                           	callstack 0
  8790  002F0C                     _SPI2_Open:
  8791                           	callstack 26
  8792                           
  8793                           ;incstack = 0
  8794                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  8795  002F0C  6E15               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  8796  002F0E                     
  8797                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  8798  002F0E  BA6C               	btfsc	108,5,c	;volatile
  8799  002F10  EF8C  F017         	goto	u5701
  8800  002F14  EF8E  F017         	goto	u5700
  8801  002F18                     u5701:
  8802  002F18  EFDB  F017         	goto	l338
  8803  002F1C                     u5700:
  8804  002F1C                     
  8805                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  8806  002F1C  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8807  002F1E  0D04               	mullw	4
  8808  002F20  0E01               	movlw	1
  8809  002F22  26F3               	addwf	243,f,c
  8810  002F24  0E00               	movlw	0
  8811  002F26  22F4               	addwfc	244,f,c
  8812  002F28  0E31               	movlw	low _spi2_configuration
  8813  002F2A  24F3               	addwf	243,w,c
  8814  002F2C  6EF6               	movwf	tblptrl,c
  8815  002F2E  0EF3               	movlw	high _spi2_configuration
  8816  002F30  20F4               	addwfc	244,w,c
  8817  002F32  6EF7               	movwf	tblptrh,c
  8818  002F34                     	if	1	;There are 3 active tblptr bytes
  8819  002F34  6AF8               	clrf	tblptru,c
  8820  002F36  0E00               	movlw	low (__mediumconst shr (0+16))
  8821  002F38  22F8               	addwfc	tblptru,f,c
  8822  002F3A                     	endif
  8823  002F3A  0008               	tblrd		*
  8824  002F3C  CFF5 FF6D          	movff	tablat,3949	;volatile
  8825                           
  8826                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  8827  002F40  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8828  002F42  0D04               	mullw	4
  8829  002F44  0E31               	movlw	low _spi2_configuration
  8830  002F46  24F3               	addwf	243,w,c
  8831  002F48  6EF6               	movwf	tblptrl,c
  8832  002F4A  0EF3               	movlw	high _spi2_configuration
  8833  002F4C  20F4               	addwfc	244,w,c
  8834  002F4E  6EF7               	movwf	tblptrh,c
  8835  002F50                     	if	1	;There are 3 active tblptr bytes
  8836  002F50  6AF8               	clrf	tblptru,c
  8837  002F52  0E00               	movlw	low (__mediumconst shr (0+16))
  8838  002F54  22F8               	addwfc	tblptru,f,c
  8839  002F56                     	endif
  8840  002F56  0008               	tblrd		*
  8841  002F58  CFF5 FF6C          	movff	tablat,3948	;volatile
  8842  002F5C                     
  8843                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  8844  002F5C  0E00               	movlw	0
  8845  002F5E  6E6B               	movwf	107,c	;volatile
  8846  002F60                     
  8847                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  8848  002F60  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8849  002F62  0D04               	mullw	4
  8850  002F64  0E02               	movlw	2
  8851  002F66  26F3               	addwf	243,f,c
  8852  002F68  0E00               	movlw	0
  8853  002F6A  22F4               	addwfc	244,f,c
  8854  002F6C  0E31               	movlw	low _spi2_configuration
  8855  002F6E  24F3               	addwf	243,w,c
  8856  002F70  6EF6               	movwf	tblptrl,c
  8857  002F72  0EF3               	movlw	high _spi2_configuration
  8858  002F74  20F4               	addwfc	244,w,c
  8859  002F76  6EF7               	movwf	tblptrh,c
  8860  002F78                     	if	1	;There are 3 active tblptr bytes
  8861  002F78  6AF8               	clrf	tblptru,c
  8862  002F7A  0E00               	movlw	low (__mediumconst shr (0+16))
  8863  002F7C  22F8               	addwfc	tblptru,f,c
  8864  002F7E                     	endif
  8865  002F7E  0008               	tblrd		*
  8866  002F80  CFF5 FF6E          	movff	tablat,3950	;volatile
  8867  002F84                     
  8868                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  8869  002F84  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8870  002F86  0D04               	mullw	4
  8871  002F88  0E03               	movlw	3
  8872  002F8A  26F3               	addwf	243,f,c
  8873  002F8C  0E00               	movlw	0
  8874  002F8E  22F4               	addwfc	244,f,c
  8875  002F90  0E31               	movlw	low _spi2_configuration
  8876  002F92  24F3               	addwf	243,w,c
  8877  002F94  6EF6               	movwf	tblptrl,c
  8878  002F96  0EF3               	movlw	high _spi2_configuration
  8879  002F98  20F4               	addwfc	244,w,c
  8880  002F9A  6EF7               	movwf	tblptrh,c
  8881  002F9C                     	if	1	;There are 3 active tblptr bytes
  8882  002F9C  6AF8               	clrf	tblptru,c
  8883  002F9E  0E00               	movlw	low (__mediumconst shr (0+16))
  8884  002FA0  22F8               	addwfc	tblptru,f,c
  8885  002FA2                     	endif
  8886  002FA2  0008               	tblrd		*
  8887  002FA4  CFF5 F014          	movff	tablat,??_SPI2_Open
  8888  002FA8  4614               	rlncf	??_SPI2_Open^0,f,c
  8889  002FAA  5093               	movf	147,w,c	;volatile
  8890  002FAC  1814               	xorwf	??_SPI2_Open^0,w,c
  8891  002FAE  0BFD               	andlw	-3
  8892  002FB0  1814               	xorwf	??_SPI2_Open^0,w,c
  8893  002FB2  6E93               	movwf	147,c	;volatile
  8894  002FB4                     
  8895                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  8896  002FB4  8A6C               	bsf	108,5,c	;volatile
  8897  002FB6                     l338:
  8898  002FB6  0012               	return		;funcret
  8899  002FB8                     __end_of_SPI2_Open:
  8900                           	callstack 0
  8901                           
  8902 ;; *************** function _SPI2_Close *****************
  8903 ;; Defined at:
  8904 ;;		line 87 in file "mcc_generated_files/spi2.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;		None
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;		None
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      void 
  8911 ;; Registers used:
  8912 ;;		None
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8922 ;;Total ram usage:        0 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    4
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_main
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text21
  8933  003844                     __ptext21:
  8934                           	callstack 0
  8935  003844                     _SPI2_Close:
  8936                           	callstack 26
  8937  003844                     
  8938                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  8939  003844  9A6C               	bcf	108,5,c	;volatile
  8940  003846  0012               	return		;funcret
  8941  003848                     __end_of_SPI2_Close:
  8942                           	callstack 0
  8943                           
  8944 ;; *************** function _SDCARD_WriteBlock *****************
  8945 ;; Defined at:
  8946 ;;		line 48 in file "sdCard.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;  addr            4   20[COMRAM] unsigned long 
  8949 ;;  sdCardBuffer    2   24[COMRAM] PTR unsigned char 
  8950 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;  i               2   26[COMRAM] unsigned short 
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8962 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8965 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8966 ;;Total ram usage:        8 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; Hardware stack levels required when called:    5
  8969 ;; This function calls:
  8970 ;;		_SPI2_ExchangeByte
  8971 ;; This function is called by:
  8972 ;;		_main
  8973 ;; This function uses a non-reentrant model
  8974 ;;
  8975                           
  8976                           	psect	text22
  8977  0030E8                     __ptext22:
  8978                           	callstack 0
  8979  0030E8                     _SDCARD_WriteBlock:
  8980                           	callstack 25
  8981  0030E8  988A               	bcf	138,4,c	;volatile
  8982  0030EA                     
  8983                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  8984  0030EA  0EFF               	movlw	255
  8985  0030EC  ECBF  F01B         	call	_SPI2_ExchangeByte
  8986  0030F0                     
  8987                           ;sdCard.c: 55: 
  8988  0030F0  0E58               	movlw	88
  8989  0030F2  ECBF  F01B         	call	_SPI2_ExchangeByte
  8990  0030F6                     
  8991                           ;sdCard.c: 56: 
  8992  0030F6  5018               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  8993  0030F8  ECBF  F01B         	call	_SPI2_ExchangeByte
  8994  0030FC                     
  8995                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  8996  0030FC  5017               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  8997  0030FE  ECBF  F01B         	call	_SPI2_ExchangeByte
  8998  003102                     
  8999                           ;sdCard.c: 58: 
  9000  003102  5016               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  9001  003104  ECBF  F01B         	call	_SPI2_ExchangeByte
  9002  003108                     
  9003                           ;sdCard.c: 59: 
  9004  003108  5015               	movf	SDCARD_WriteBlock@addr^0,w,c
  9005  00310A  ECBF  F01B         	call	_SPI2_ExchangeByte
  9006  00310E                     
  9007                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  9008  00310E  0EFF               	movlw	255
  9009  003110  ECBF  F01B         	call	_SPI2_ExchangeByte
  9010  003114                     l5780:
  9011  003114  0EFF               	movlw	255
  9012  003116  ECBF  F01B         	call	_SPI2_ExchangeByte
  9013  00311A  0AFF               	xorlw	255
  9014  00311C  B4D8               	btfsc	status,2,c
  9015  00311E  EF93  F018         	goto	u5711
  9016  003122  EF95  F018         	goto	u5710
  9017  003126                     u5711:
  9018  003126  EF8A  F018         	goto	l5780
  9019  00312A                     u5710:
  9020  00312A                     
  9021                           ;sdCard.c: 66: 
  9022  00312A  0EFF               	movlw	255
  9023  00312C  ECBF  F01B         	call	_SPI2_ExchangeByte
  9024                           
  9025                           ;sdCard.c: 67: 
  9026  003130  0EFF               	movlw	255
  9027  003132  ECBF  F01B         	call	_SPI2_ExchangeByte
  9028                           
  9029                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  9030  003136  0EFF               	movlw	255
  9031  003138  ECBF  F01B         	call	_SPI2_ExchangeByte
  9032                           
  9033                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  9034  00313C  0EFE               	movlw	254
  9035  00313E  ECBF  F01B         	call	_SPI2_ExchangeByte
  9036  003142                     
  9037                           ;sdCard.c: 74: 
  9038  003142  0E00               	movlw	0
  9039  003144  6E1C               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  9040  003146  0E00               	movlw	0
  9041  003148  6E1B               	movwf	SDCARD_WriteBlock@i^0,c
  9042  00314A                     l5790:
  9043                           
  9044                           ;sdCard.c: 75: 
  9045  00314A  501B               	movf	SDCARD_WriteBlock@i^0,w,c
  9046  00314C  2419               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  9047  00314E  6ED9               	movwf	fsr2l,c
  9048  003150  501C               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  9049  003152  201A               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  9050  003154  6EDA               	movwf	fsr2h,c
  9051  003156  50DF               	movf	indf2,w,c
  9052  003158  ECBF  F01B         	call	_SPI2_ExchangeByte
  9053  00315C  4A1B               	infsnz	SDCARD_WriteBlock@i^0,f,c
  9054  00315E  2A1C               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  9055  003160  0E02               	movlw	2
  9056  003162  5C1C               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  9057  003164  A0D8               	btfss	status,0,c
  9058  003166  EFB7  F018         	goto	u5721
  9059  00316A  EFB9  F018         	goto	u5720
  9060  00316E                     u5721:
  9061  00316E  EFA5  F018         	goto	l5790
  9062  003172                     u5720:
  9063  003172  888A               	bsf	138,4,c	;volatile
  9064  003174  0012               	return		;funcret
  9065  003176                     __end_of_SDCARD_WriteBlock:
  9066                           	callstack 0
  9067                           
  9068 ;; *************** function _SDCARD_ReadBlock *****************
  9069 ;; Defined at:
  9070 ;;		line 13 in file "sdCard.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  addr            4   20[COMRAM] unsigned long 
  9073 ;;  sdCardBuffer    2   24[COMRAM] PTR unsigned char 
  9074 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  i               2   26[COMRAM] unsigned short 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9086 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9089 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9090 ;;Total ram usage:        8 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; Hardware stack levels required when called:    5
  9093 ;; This function calls:
  9094 ;;		_SPI2_ExchangeByte
  9095 ;; This function is called by:
  9096 ;;		_main
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text23
  9101  002FB8                     __ptext23:
  9102                           	callstack 0
  9103  002FB8                     _SDCARD_ReadBlock:
  9104                           	callstack 25
  9105  002FB8  988A               	bcf	138,4,c	;volatile
  9106  002FBA                     
  9107                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  9108  002FBA  0EFF               	movlw	255
  9109  002FBC  ECBF  F01B         	call	_SPI2_ExchangeByte
  9110  002FC0                     
  9111                           ;sdCard.c: 19: 
  9112  002FC0  0E51               	movlw	81
  9113  002FC2  ECBF  F01B         	call	_SPI2_ExchangeByte
  9114  002FC6                     
  9115                           ;sdCard.c: 20: 
  9116  002FC6  5018               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  9117  002FC8  ECBF  F01B         	call	_SPI2_ExchangeByte
  9118  002FCC                     
  9119                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9120  002FCC  5017               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  9121  002FCE  ECBF  F01B         	call	_SPI2_ExchangeByte
  9122  002FD2                     
  9123                           ;sdCard.c: 22: 
  9124  002FD2  5016               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  9125  002FD4  ECBF  F01B         	call	_SPI2_ExchangeByte
  9126  002FD8                     
  9127                           ;sdCard.c: 23: 
  9128  002FD8  5015               	movf	SDCARD_ReadBlock@addr^0,w,c
  9129  002FDA  ECBF  F01B         	call	_SPI2_ExchangeByte
  9130  002FDE                     
  9131                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9132  002FDE  0EFF               	movlw	255
  9133  002FE0  ECBF  F01B         	call	_SPI2_ExchangeByte
  9134  002FE4                     l5840:
  9135  002FE4  0EFF               	movlw	255
  9136  002FE6  ECBF  F01B         	call	_SPI2_ExchangeByte
  9137  002FEA  0AFF               	xorlw	255
  9138  002FEC  B4D8               	btfsc	status,2,c
  9139  002FEE  EFFB  F017         	goto	u5751
  9140  002FF2  EFFD  F017         	goto	u5750
  9141  002FF6                     u5751:
  9142  002FF6  EFF2  F017         	goto	l5840
  9143  002FFA                     u5750:
  9144  002FFA                     l5842:
  9145  002FFA  0EFF               	movlw	255
  9146  002FFC  ECBF  F01B         	call	_SPI2_ExchangeByte
  9147  003000  0AFF               	xorlw	255
  9148  003002  B4D8               	btfsc	status,2,c
  9149  003004  EF06  F018         	goto	u5761
  9150  003008  EF08  F018         	goto	u5760
  9151  00300C                     u5761:
  9152  00300C  EFFD  F017         	goto	l5842
  9153  003010                     u5760:
  9154  003010                     
  9155                           ;sdCard.c: 33: 
  9156  003010  0E00               	movlw	0
  9157  003012  6E1C               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  9158  003014  0E00               	movlw	0
  9159  003016  6E1B               	movwf	SDCARD_ReadBlock@i^0,c
  9160  003018                     l5850:
  9161                           
  9162                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  9163  003018  501B               	movf	SDCARD_ReadBlock@i^0,w,c
  9164  00301A  2419               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  9165  00301C  6ED9               	movwf	fsr2l,c
  9166  00301E  501C               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  9167  003020  201A               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  9168  003022  6EDA               	movwf	fsr2h,c
  9169  003024  0EFF               	movlw	255
  9170  003026  ECBF  F01B         	call	_SPI2_ExchangeByte
  9171  00302A  6EDF               	movwf	indf2,c
  9172  00302C  4A1B               	infsnz	SDCARD_ReadBlock@i^0,f,c
  9173  00302E  2A1C               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  9174  003030  0E02               	movlw	2
  9175  003032  5C1C               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  9176  003034  A0D8               	btfss	status,0,c
  9177  003036  EF1F  F018         	goto	u5771
  9178  00303A  EF21  F018         	goto	u5770
  9179  00303E                     u5771:
  9180  00303E  EF0C  F018         	goto	l5850
  9181  003042                     u5770:
  9182  003042                     
  9183                           ;sdCard.c: 37: 
  9184  003042  0EFF               	movlw	255
  9185  003044  ECBF  F01B         	call	_SPI2_ExchangeByte
  9186                           
  9187                           ;sdCard.c: 38: 
  9188  003048  0EFF               	movlw	255
  9189  00304A  ECBF  F01B         	call	_SPI2_ExchangeByte
  9190  00304E  888A               	bsf	138,4,c	;volatile
  9191  003050  0012               	return		;funcret
  9192  003052                     __end_of_SDCARD_ReadBlock:
  9193                           	callstack 0
  9194                           
  9195 ;; *************** function _SDCARD_PollWriteComplete *****************
  9196 ;; Defined at:
  9197 ;;		line 86 in file "sdCard.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;		None
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  status          1   20[COMRAM] unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;                  1    wreg      unsigned char 
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0, cstack
  9206 ;; Tracked objects:
  9207 ;;		On entry : 0/0
  9208 ;;		On exit  : 0/0
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9215 ;;Total ram usage:        1 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    5
  9218 ;; This function calls:
  9219 ;;		_SPI2_ExchangeByte
  9220 ;; This function is called by:
  9221 ;;		_main
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           	psect	text24
  9226  0034AA                     __ptext24:
  9227                           	callstack 0
  9228  0034AA                     _SDCARD_PollWriteComplete:
  9229                           	callstack 25
  9230  0034AA  988A               	bcf	138,4,c	;volatile
  9231  0034AC                     
  9232                           ;sdCard.c: 91: 
  9233  0034AC  0E0D               	movlw	13
  9234  0034AE  ECBF  F01B         	call	_SPI2_ExchangeByte
  9235  0034B2  6E15               	movwf	SDCARD_PollWriteComplete@status^0,c
  9236  0034B4  888A               	bsf	138,4,c	;volatile
  9237  0034B6                     
  9238                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  9239  0034B6  2815               	incf	SDCARD_PollWriteComplete@status^0,w,c
  9240  0034B8  A4D8               	btfss	status,2,c
  9241  0034BA  EF61  F01A         	goto	u5731
  9242  0034BE  EF63  F01A         	goto	u5730
  9243  0034C2                     u5731:
  9244  0034C2  EF66  F01A         	goto	l5808
  9245  0034C6                     u5730:
  9246  0034C6                     
  9247                           ;sdCard.c: 95:         return (status);
  9248  0034C6  0EFF               	movlw	255
  9249  0034C8  EF70  F01A         	goto	l680
  9250  0034CC                     l5808:
  9251                           
  9252                           ;sdCard.c: 98: }
  9253  0034CC  0EFF               	movlw	255
  9254  0034CE  ECBF  F01B         	call	_SPI2_ExchangeByte
  9255                           
  9256                           ;sdCard.c: 99: 
  9257  0034D2  0EFF               	movlw	255
  9258  0034D4  ECBF  F01B         	call	_SPI2_ExchangeByte
  9259                           
  9260                           ;sdCard.c: 100: 
  9261  0034D8  0EFF               	movlw	255
  9262  0034DA  ECBF  F01B         	call	_SPI2_ExchangeByte
  9263  0034DE                     
  9264                           ;sdCard.c: 101: 
  9265  0034DE  5015               	movf	SDCARD_PollWriteComplete@status^0,w,c
  9266  0034E0                     l680:
  9267  0034E0  0012               	return		;funcret
  9268  0034E2                     __end_of_SDCARD_PollWriteComplete:
  9269                           	callstack 0
  9270                           
  9271 ;; *************** function _SDCARD_Initialize *****************
  9272 ;; Defined at:
  9273 ;;		line 111 in file "sdCard.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  verbose         1    wreg     unsigned char 
  9276 ;; Auto vars:     Size  Location     Type
  9277 ;;  verbose         1   86[BANK0 ] unsigned char 
  9278 ;;  i               2   84[BANK0 ] int 
  9279 ;;  response        1   87[BANK0 ] unsigned char 
  9280 ;; Return value:  Size  Location     Type
  9281 ;;                  1    wreg      void 
  9282 ;; Registers used:
  9283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9284 ;; Tracked objects:
  9285 ;;		On entry : 0/0
  9286 ;;		On exit  : 0/0
  9287 ;;		Unchanged: 0/0
  9288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9290 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;Total ram usage:        4 bytes
  9294 ;; Hardware stack levels used:    1
  9295 ;; Hardware stack levels required when called:   13
  9296 ;; This function calls:
  9297 ;;		_SPI2_ExchangeByte
  9298 ;;		_printf
  9299 ;; This function is called by:
  9300 ;;		_main
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text25
  9305  0028DA                     __ptext25:
  9306                           	callstack 0
  9307  0028DA                     _SDCARD_Initialize:
  9308                           	callstack 17
  9309                           
  9310                           ;incstack = 0
  9311                           ;SDCARD_Initialize@verbose stored from wreg
  9312  0028DA  0100               	movlb	0	; () banked
  9313  0028DC  6FB6               	movwf	SDCARD_Initialize@verbose& (0+255),b
  9314  0028DE                     
  9315                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  9316  0028DE  0E00               	movlw	0
  9317  0028E0  0100               	movlb	0	; () banked
  9318  0028E2  6FB5               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  9319  0028E4  0E00               	movlw	0
  9320  0028E6  6FB4               	movwf	SDCARD_Initialize@i& (0+255),b
  9321  0028E8                     l5866:
  9322                           
  9323                           ; BSR set to: 0
  9324                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  9325  0028E8  0EFF               	movlw	255
  9326  0028EA  ECBF  F01B         	call	_SPI2_ExchangeByte
  9327  0028EE                     
  9328                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  9329  0028EE  0100               	movlb	0	; () banked
  9330  0028F0  4BB4               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  9331  0028F2  2BB5               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  9332  0028F4                     
  9333                           ; BSR set to: 0
  9334  0028F4  BFB5               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  9335  0028F6  EF86  F014         	goto	u5781
  9336  0028FA  51B5               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  9337  0028FC  E109               	bnz	u5780
  9338  0028FE  0E0A               	movlw	10
  9339  002900  5DB4               	subwf	SDCARD_Initialize@i& (0+255),w,b
  9340  002902  A0D8               	btfss	status,0,c
  9341  002904  EF86  F014         	goto	u5781
  9342  002908  EF88  F014         	goto	u5780
  9343  00290C                     u5781:
  9344  00290C  EF74  F014         	goto	l5866
  9345  002910                     u5780:
  9346  002910                     
  9347                           ; BSR set to: 0
  9348  002910  988A               	bcf	138,4,c	;volatile
  9349  002912                     
  9350                           ; BSR set to: 0
  9351                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  9352  002912  0EFF               	movlw	255
  9353  002914  ECBF  F01B         	call	_SPI2_ExchangeByte
  9354                           
  9355                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  9356  002918  0E40               	movlw	64
  9357  00291A  ECBF  F01B         	call	_SPI2_ExchangeByte
  9358                           
  9359                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  9360  00291E  0E00               	movlw	0
  9361  002920  ECBF  F01B         	call	_SPI2_ExchangeByte
  9362                           
  9363                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  9364  002924  0E00               	movlw	0
  9365  002926  ECBF  F01B         	call	_SPI2_ExchangeByte
  9366                           
  9367                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  9368  00292A  0E00               	movlw	0
  9369  00292C  ECBF  F01B         	call	_SPI2_ExchangeByte
  9370                           
  9371                           ;sdCard.c: 130: 
  9372  002930  0E00               	movlw	0
  9373  002932  ECBF  F01B         	call	_SPI2_ExchangeByte
  9374                           
  9375                           ;sdCard.c: 131: 
  9376  002936  0E95               	movlw	149
  9377  002938  ECBF  F01B         	call	_SPI2_ExchangeByte
  9378                           
  9379                           ;sdCard.c: 132: 
  9380  00293C  0EFF               	movlw	255
  9381  00293E  ECBF  F01B         	call	_SPI2_ExchangeByte
  9382                           
  9383                           ;sdCard.c: 133:     do {
  9384  002942  0EFF               	movlw	255
  9385  002944  ECBF  F01B         	call	_SPI2_ExchangeByte
  9386  002948  0100               	movlb	0	; () banked
  9387  00294A  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9388  00294C                     
  9389                           ; BSR set to: 0
  9390  00294C  888A               	bsf	138,4,c	;volatile
  9391  00294E                     
  9392                           ; BSR set to: 0
  9393                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  9394  00294E  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9395  002950  A4D8               	btfss	status,2,c
  9396  002952  EFAD  F014         	goto	u5791
  9397  002956  EFAF  F014         	goto	u5790
  9398  00295A                     u5791:
  9399  00295A  EFB8  F014         	goto	l5880
  9400  00295E                     u5790:
  9401  00295E                     
  9402                           ; BSR set to: 0
  9403  00295E  0E06               	movlw	low STR_118
  9404  002960  6FA6               	movwf	printf@fmt& (0+255),b
  9405  002962  0EFE               	movlw	high STR_118
  9406  002964  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9407  002966  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9408  00296A  6BA9               	clrf	(?_printf+3)& (0+255),b
  9409  00296C  EC44  F01B         	call	_printf	;wreg free
  9410  002970                     l5880:
  9411  002970  988A               	bcf	138,4,c	;volatile
  9412  002972                     
  9413                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  9414  002972  0EFF               	movlw	255
  9415  002974  ECBF  F01B         	call	_SPI2_ExchangeByte
  9416  002978                     
  9417                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  9418  002978  0E41               	movlw	65
  9419  00297A  ECBF  F01B         	call	_SPI2_ExchangeByte
  9420  00297E                     
  9421                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  9422  00297E  0E00               	movlw	0
  9423  002980  ECBF  F01B         	call	_SPI2_ExchangeByte
  9424  002984                     
  9425                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  9426  002984  0E00               	movlw	0
  9427  002986  ECBF  F01B         	call	_SPI2_ExchangeByte
  9428  00298A                     
  9429                           ;sdCard.c: 145:     } while (response != 0);
  9430  00298A  0E00               	movlw	0
  9431  00298C  ECBF  F01B         	call	_SPI2_ExchangeByte
  9432  002990                     
  9433                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  9434  002990  0E00               	movlw	0
  9435  002992  ECBF  F01B         	call	_SPI2_ExchangeByte
  9436  002996                     
  9437                           ;sdCard.c: 147: 
  9438  002996  0EFF               	movlw	255
  9439  002998  ECBF  F01B         	call	_SPI2_ExchangeByte
  9440  00299C                     
  9441                           ;sdCard.c: 148: 
  9442  00299C  0EFF               	movlw	255
  9443  00299E  ECBF  F01B         	call	_SPI2_ExchangeByte
  9444  0029A2                     
  9445                           ;sdCard.c: 149: 
  9446  0029A2  0EFF               	movlw	255
  9447  0029A4  ECBF  F01B         	call	_SPI2_ExchangeByte
  9448  0029A8  0100               	movlb	0	; () banked
  9449  0029AA  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9450  0029AC                     
  9451                           ; BSR set to: 0
  9452  0029AC  888A               	bsf	138,4,c	;volatile
  9453  0029AE                     
  9454                           ; BSR set to: 0
  9455                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  9456  0029AE  51B7               	movf	SDCARD_Initialize@response& (0+255),w,b
  9457  0029B0  A4D8               	btfss	status,2,c
  9458  0029B2  EFDD  F014         	goto	u5801
  9459  0029B6  EFDF  F014         	goto	u5800
  9460  0029BA                     u5801:
  9461  0029BA  EFB8  F014         	goto	l5880
  9462  0029BE                     u5800:
  9463  0029BE                     
  9464                           ; BSR set to: 0
  9465                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  9466  0029BE  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9467  0029C0  A4D8               	btfss	status,2,c
  9468  0029C2  EFE5  F014         	goto	u5811
  9469  0029C6  EFE7  F014         	goto	u5810
  9470  0029CA                     u5811:
  9471  0029CA  EFF0  F014         	goto	l5908
  9472  0029CE                     u5810:
  9473  0029CE                     
  9474                           ; BSR set to: 0
  9475  0029CE  0E3C               	movlw	low STR_119
  9476  0029D0  6FA6               	movwf	printf@fmt& (0+255),b
  9477  0029D2  0EFE               	movlw	high STR_119
  9478  0029D4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9479  0029D6  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9480  0029DA  6BA9               	clrf	(?_printf+3)& (0+255),b
  9481  0029DC  EC44  F01B         	call	_printf	;wreg free
  9482  0029E0                     l5908:
  9483  0029E0  988A               	bcf	138,4,c	;volatile
  9484  0029E2                     
  9485                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  9486  0029E2  0EFF               	movlw	255
  9487  0029E4  ECBF  F01B         	call	_SPI2_ExchangeByte
  9488  0029E8                     
  9489                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  9490  0029E8  0E50               	movlw	80
  9491  0029EA  ECBF  F01B         	call	_SPI2_ExchangeByte
  9492  0029EE                     
  9493                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  9494  0029EE  0E00               	movlw	0
  9495  0029F0  ECBF  F01B         	call	_SPI2_ExchangeByte
  9496  0029F4                     
  9497                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  9498  0029F4  0E00               	movlw	0
  9499  0029F6  ECBF  F01B         	call	_SPI2_ExchangeByte
  9500  0029FA                     
  9501                           ;sdCard.c: 162:     } while (response == 0xFF);
  9502  0029FA  0E02               	movlw	2
  9503  0029FC  ECBF  F01B         	call	_SPI2_ExchangeByte
  9504  002A00                     
  9505                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  9506  002A00  0E00               	movlw	0
  9507  002A02  ECBF  F01B         	call	_SPI2_ExchangeByte
  9508  002A06                     
  9509                           ;sdCard.c: 164: 
  9510  002A06  0EFF               	movlw	255
  9511  002A08  ECBF  F01B         	call	_SPI2_ExchangeByte
  9512  002A0C                     
  9513                           ;sdCard.c: 165: }
  9514  002A0C  0EFF               	movlw	255
  9515  002A0E  ECBF  F01B         	call	_SPI2_ExchangeByte
  9516  002A12                     
  9517                           ;sdCard.c: 166: 
  9518  002A12  0EFF               	movlw	255
  9519  002A14  ECBF  F01B         	call	_SPI2_ExchangeByte
  9520  002A18  0100               	movlb	0	; () banked
  9521  002A1A  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9522  002A1C                     
  9523                           ; BSR set to: 0
  9524  002A1C  888A               	bsf	138,4,c	;volatile
  9525  002A1E                     
  9526                           ; BSR set to: 0
  9527                           ;sdCard.c: 168: 
  9528  002A1E  29B7               	incf	SDCARD_Initialize@response& (0+255),w,b
  9529  002A20  B4D8               	btfsc	status,2,c
  9530  002A22  EF15  F015         	goto	u5821
  9531  002A26  EF17  F015         	goto	u5820
  9532  002A2A                     u5821:
  9533  002A2A  EFF0  F014         	goto	l5908
  9534  002A2E                     u5820:
  9535  002A2E                     
  9536                           ; BSR set to: 0
  9537                           ;sdCard.c: 169: 
  9538  002A2E  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9539  002A30  A4D8               	btfss	status,2,c
  9540  002A32  EF1D  F015         	goto	u5831
  9541  002A36  EF1F  F015         	goto	u5830
  9542  002A3A                     u5831:
  9543  002A3A  EF28  F015         	goto	l705
  9544  002A3E                     u5830:
  9545  002A3E                     
  9546                           ; BSR set to: 0
  9547  002A3E  0ECE               	movlw	low STR_120
  9548  002A40  6FA6               	movwf	printf@fmt& (0+255),b
  9549  002A42  0EFD               	movlw	high STR_120
  9550  002A44  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9551  002A46  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9552  002A4A  6BA9               	clrf	(?_printf+3)& (0+255),b
  9553  002A4C  EC44  F01B         	call	_printf	;wreg free
  9554  002A50                     l705:
  9555  002A50  0012               	return		;funcret
  9556  002A52                     __end_of_SDCARD_Initialize:
  9557                           	callstack 0
  9558                           
  9559 ;; *************** function _printf *****************
  9560 ;; Defined at:
  9561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\printf.c"
  9562 ;; Parameters:    Size  Location     Type
  9563 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  9564 ;;		 -> STR_131(3), STR_130(3), STR_129(2), STR_128(4), 
  9565 ;;		 -> STR_127(6), STR_126(3), STR_125(3), STR_124(2), 
  9566 ;;		 -> STR_123(3), STR_122(2), STR_121(4), STR_120(28), 
  9567 ;;		 -> STR_119(26), STR_118(27), STR_117(62), STR_116(62), 
  9568 ;;		 -> STR_115(62), STR_114(62), STR_113(62), STR_112(62), 
  9569 ;;		 -> STR_111(62), STR_110(62), STR_109(62), STR_108(62), 
  9570 ;;		 -> STR_107(62), STR_106(62), STR_105(62), STR_104(62), 
  9571 ;;		 -> STR_103(62), STR_102(62), STR_101(62), STR_100(62), 
  9572 ;;		 -> STR_99(62), STR_98(62), STR_97(62), STR_96(62), 
  9573 ;;		 -> STR_95(62), STR_94(62), STR_93(62), STR_92(62), 
  9574 ;;		 -> STR_91(62), STR_90(62), STR_89(62), STR_88(62), 
  9575 ;;		 -> STR_87(62), STR_86(62), STR_85(62), STR_84(62), 
  9576 ;;		 -> STR_83(62), STR_82(3), STR_81(5), STR_80(2), 
  9577 ;;		 -> STR_79(5), STR_78(17), STR_77(17), STR_76(15), 
  9578 ;;		 -> STR_75(3), STR_74(5), STR_73(2), STR_72(5), 
  9579 ;;		 -> STR_71(19), STR_70(20), STR_69(28), STR_68(20), 
  9580 ;;		 -> STR_67(30), STR_66(21), STR_65(37), STR_64(22), 
  9581 ;;		 -> STR_63(33), STR_62(58), STR_61(48), STR_60(35), 
  9582 ;;		 -> STR_59(5), STR_58(25), STR_57(20), STR_56(71), 
  9583 ;;		 -> STR_55(50), STR_54(22), STR_53(33), STR_52(58), 
  9584 ;;		 -> STR_51(3), STR_50(68), STR_49(58), STR_48(7), 
  9585 ;;		 -> STR_47(2), STR_46(5), STR_45(31), STR_44(27), 
  9586 ;;		 -> STR_43(3), STR_42(76), STR_41(23), STR_40(3), 
  9587 ;;		 -> STR_39(5), STR_38(2), STR_37(5), STR_36(17), 
  9588 ;;		 -> STR_35(30), STR_34(31), STR_33(2), STR_32(2), 
  9589 ;;		 -> STR_31(8), STR_30(52), STR_29(32), STR_28(44), 
  9590 ;;		 -> STR_27(49), STR_26(52), STR_25(55), STR_24(43), 
  9591 ;;		 -> STR_23(37), STR_22(52), STR_21(24), STR_20(52), 
  9592 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  9593 ;;		 -> STR_15(52), STR_14(21), STR_13(3), STR_12(5), 
  9594 ;;		 -> STR_11(2), STR_10(5), STR_9(17), STR_8(29), 
  9595 ;;		 -> STR_7(54), STR_6(5), STR_5(3), STR_4(40), 
  9596 ;;		 -> STR_3(9), STR_2(21), STR_1(9), 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  ap              2   82[BANK0 ] PTR void [1]
  9599 ;;		 -> ?_printf(2), 
  9600 ;;  ret             2    0        int 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  2   70[BANK0 ] int 
  9603 ;; Registers used:
  9604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9610 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9614 ;;Total ram usage:       14 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:   12
  9617 ;; This function calls:
  9618 ;;		_vfprintf
  9619 ;; This function is called by:
  9620 ;;		_main
  9621 ;;		_printAddress
  9622 ;;		_printAscii
  9623 ;;		_SDCARD_Initialize
  9624 ;;		_hexDumpBuffer
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text26
  9629  003688                     __ptext26:
  9630                           	callstack 0
  9631  003688                     _printf:
  9632                           	callstack 18
  9633  003688  0EA8               	movlw	low (?_printf+2)
  9634  00368A  0100               	movlb	0	; () banked
  9635  00368C  6FB2               	movwf	printf@ap& (0+255),b
  9636  00368E  0E00               	movlw	high (?_printf+2)
  9637  003690  6FB3               	movwf	(printf@ap+1)& (0+255),b
  9638  003692                     
  9639                           ; BSR set to: 0
  9640  003692  0E00               	movlw	0
  9641  003694  6F9E               	movwf	vfprintf@fp& (0+255),b
  9642  003696  0E00               	movlw	0
  9643  003698  6F9F               	movwf	(vfprintf@fp+1)& (0+255),b
  9644  00369A  C0A6  F0A0         	movff	printf@fmt,vfprintf@fmt
  9645  00369E  C0A7  F0A1         	movff	printf@fmt+1,vfprintf@fmt+1
  9646  0036A2  0EB2               	movlw	low printf@ap
  9647  0036A4  6FA2               	movwf	vfprintf@ap& (0+255),b
  9648  0036A6  0E00               	movlw	high printf@ap
  9649  0036A8  6FA3               	movwf	(vfprintf@ap+1)& (0+255),b
  9650  0036AA  EC2A  F019         	call	_vfprintf	;wreg free
  9651  0036AE  0012               	return		;funcret
  9652  0036B0                     __end_of_printf:
  9653                           	callstack 0
  9654                           
  9655 ;; *************** function _vfprintf *****************
  9656 ;; Defined at:
  9657 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9658 ;; Parameters:    Size  Location     Type
  9659 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  9660 ;;		 -> NULL(0), 
  9661 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  9662 ;;		 -> STR_131(3), STR_130(3), STR_129(2), STR_128(4), 
  9663 ;;		 -> STR_127(6), STR_126(3), STR_125(3), STR_124(2), 
  9664 ;;		 -> STR_123(3), STR_122(2), STR_121(4), STR_120(28), 
  9665 ;;		 -> STR_119(26), STR_118(27), STR_117(62), STR_116(62), 
  9666 ;;		 -> STR_115(62), STR_114(62), STR_113(62), STR_112(62), 
  9667 ;;		 -> STR_111(62), STR_110(62), STR_109(62), STR_108(62), 
  9668 ;;		 -> STR_107(62), STR_106(62), STR_105(62), STR_104(62), 
  9669 ;;		 -> STR_103(62), STR_102(62), STR_101(62), STR_100(62), 
  9670 ;;		 -> STR_99(62), STR_98(62), STR_97(62), STR_96(62), 
  9671 ;;		 -> STR_95(62), STR_94(62), STR_93(62), STR_92(62), 
  9672 ;;		 -> STR_91(62), STR_90(62), STR_89(62), STR_88(62), 
  9673 ;;		 -> STR_87(62), STR_86(62), STR_85(62), STR_84(62), 
  9674 ;;		 -> STR_83(62), STR_82(3), STR_81(5), STR_80(2), 
  9675 ;;		 -> STR_79(5), STR_78(17), STR_77(17), STR_76(15), 
  9676 ;;		 -> STR_75(3), STR_74(5), STR_73(2), STR_72(5), 
  9677 ;;		 -> STR_71(19), STR_70(20), STR_69(28), STR_68(20), 
  9678 ;;		 -> STR_67(30), STR_66(21), STR_65(37), STR_64(22), 
  9679 ;;		 -> STR_63(33), STR_62(58), STR_61(48), STR_60(35), 
  9680 ;;		 -> STR_59(5), STR_58(25), STR_57(20), STR_56(71), 
  9681 ;;		 -> STR_55(50), STR_54(22), STR_53(33), STR_52(58), 
  9682 ;;		 -> STR_51(3), STR_50(68), STR_49(58), STR_48(7), 
  9683 ;;		 -> STR_47(2), STR_46(5), STR_45(31), STR_44(27), 
  9684 ;;		 -> STR_43(3), STR_42(76), STR_41(23), STR_40(3), 
  9685 ;;		 -> STR_39(5), STR_38(2), STR_37(5), STR_36(17), 
  9686 ;;		 -> STR_35(30), STR_34(31), STR_33(2), STR_32(2), 
  9687 ;;		 -> STR_31(8), STR_30(52), STR_29(32), STR_28(44), 
  9688 ;;		 -> STR_27(49), STR_26(52), STR_25(55), STR_24(43), 
  9689 ;;		 -> STR_23(37), STR_22(52), STR_21(24), STR_20(52), 
  9690 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  9691 ;;		 -> STR_15(52), STR_14(21), STR_13(3), STR_12(5), 
  9692 ;;		 -> STR_11(2), STR_10(5), STR_9(17), STR_8(29), 
  9693 ;;		 -> STR_7(54), STR_6(5), STR_5(3), STR_4(40), 
  9694 ;;		 -> STR_3(9), STR_2(21), STR_1(9), 
  9695 ;;  ap              2   66[BANK0 ] PTR PTR void 
  9696 ;;		 -> printf@ap(2), 
  9697 ;; Auto vars:     Size  Location     Type
  9698 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  9699 ;;		 -> STR_131(3), STR_130(3), STR_129(2), STR_128(4), 
  9700 ;;		 -> STR_127(6), STR_126(3), STR_125(3), STR_124(2), 
  9701 ;;		 -> STR_123(3), STR_122(2), STR_121(4), STR_120(28), 
  9702 ;;		 -> STR_119(26), STR_118(27), STR_117(62), STR_116(62), 
  9703 ;;		 -> STR_115(62), STR_114(62), STR_113(62), STR_112(62), 
  9704 ;;		 -> STR_111(62), STR_110(62), STR_109(62), STR_108(62), 
  9705 ;;		 -> STR_107(62), STR_106(62), STR_105(62), STR_104(62), 
  9706 ;;		 -> STR_103(62), STR_102(62), STR_101(62), STR_100(62), 
  9707 ;;		 -> STR_99(62), STR_98(62), STR_97(62), STR_96(62), 
  9708 ;;		 -> STR_95(62), STR_94(62), STR_93(62), STR_92(62), 
  9709 ;;		 -> STR_91(62), STR_90(62), STR_89(62), STR_88(62), 
  9710 ;;		 -> STR_87(62), STR_86(62), STR_85(62), STR_84(62), 
  9711 ;;		 -> STR_83(62), STR_82(3), STR_81(5), STR_80(2), 
  9712 ;;		 -> STR_79(5), STR_78(17), STR_77(17), STR_76(15), 
  9713 ;;		 -> STR_75(3), STR_74(5), STR_73(2), STR_72(5), 
  9714 ;;		 -> STR_71(19), STR_70(20), STR_69(28), STR_68(20), 
  9715 ;;		 -> STR_67(30), STR_66(21), STR_65(37), STR_64(22), 
  9716 ;;		 -> STR_63(33), STR_62(58), STR_61(48), STR_60(35), 
  9717 ;;		 -> STR_59(5), STR_58(25), STR_57(20), STR_56(71), 
  9718 ;;		 -> STR_55(50), STR_54(22), STR_53(33), STR_52(58), 
  9719 ;;		 -> STR_51(3), STR_50(68), STR_49(58), STR_48(7), 
  9720 ;;		 -> STR_47(2), STR_46(5), STR_45(31), STR_44(27), 
  9721 ;;		 -> STR_43(3), STR_42(76), STR_41(23), STR_40(3), 
  9722 ;;		 -> STR_39(5), STR_38(2), STR_37(5), STR_36(17), 
  9723 ;;		 -> STR_35(30), STR_34(31), STR_33(2), STR_32(2), 
  9724 ;;		 -> STR_31(8), STR_30(52), STR_29(32), STR_28(44), 
  9725 ;;		 -> STR_27(49), STR_26(52), STR_25(55), STR_24(43), 
  9726 ;;		 -> STR_23(37), STR_22(52), STR_21(24), STR_20(52), 
  9727 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
  9728 ;;		 -> STR_15(52), STR_14(21), STR_13(3), STR_12(5), 
  9729 ;;		 -> STR_11(2), STR_10(5), STR_9(17), STR_8(29), 
  9730 ;;		 -> STR_7(54), STR_6(5), STR_5(3), STR_4(40), 
  9731 ;;		 -> STR_3(9), STR_2(21), STR_1(9), 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  2   62[BANK0 ] int 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9741 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9744 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9745 ;;Total ram usage:        8 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:   11
  9748 ;; This function calls:
  9749 ;;		_vfpfcnvrt
  9750 ;; This function is called by:
  9751 ;;		_printf
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           	psect	text27
  9756  003254                     __ptext27:
  9757                           	callstack 0
  9758  003254                     _vfprintf:
  9759                           	callstack 18
  9760  003254                     
  9761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  9762  003254  C0A0  F0A4         	movff	vfprintf@fmt,vfprintf@cfmt
  9763  003258  C0A1  F0A5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9764  00325C                     
  9765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  9766  00325C  0E00               	movlw	0
  9767  00325E  0100               	movlb	0	; () banked
  9768  003260  6FC3               	movwf	(_nout+1)& (0+255),b
  9769  003262  0E00               	movlw	0
  9770  003264  6FC2               	movwf	_nout& (0+255),b
  9771                           
  9772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9773  003266  EF48  F019         	goto	l5646
  9774  00326A                     l5644:
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9778  00326A  C09E  F07F         	movff	vfprintf@fp,vfpfcnvrt@fp
  9779  00326E  C09F  F080         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9780  003272  0EA4               	movlw	low vfprintf@cfmt
  9781  003274  6F81               	movwf	vfpfcnvrt@fmt& (0+255),b
  9782  003276  0E00               	movlw	high vfprintf@cfmt
  9783  003278  6F82               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9784  00327A  C0A2  F083         	movff	vfprintf@ap,vfpfcnvrt@ap
  9785  00327E  C0A3  F084         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9786  003282  EC43  F009         	call	_vfpfcnvrt	;wreg free
  9787  003286  0100               	movlb	0	; () banked
  9788  003288  517F               	movf	?_vfpfcnvrt& (0+255),w,b
  9789  00328A  27C2               	addwf	_nout& (0+255),f,b
  9790  00328C  5180               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9791  00328E  23C3               	addwfc	(_nout+1)& (0+255),f,b
  9792  003290                     l5646:
  9793                           
  9794                           ; BSR set to: 0
  9795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9796  003290  C0A4  FFF6         	movff	vfprintf@cfmt,tblptrl
  9797  003294  C0A5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9798  003298                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9799  003298  6AF8               	clrf	tblptru,c
  9800  00329A                     	endif
  9801  00329A                     	if	0	;tblptru may be non-zero
  9802  00329A                     	endif
  9803  00329A  0008               	tblrd		*
  9804  00329C  50F5               	movf	tablat,w,c
  9805  00329E  0900               	iorlw	0
  9806  0032A0  A4D8               	btfss	status,2,c
  9807  0032A2  EF55  F019         	goto	u5641
  9808  0032A6  EF57  F019         	goto	u5640
  9809  0032AA                     u5641:
  9810  0032AA  EF35  F019         	goto	l5644
  9811  0032AE                     u5640:
  9812  0032AE                     
  9813                           ; BSR set to: 0
  9814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  9815  0032AE  C0C2  F09E         	movff	_nout,?_vfprintf
  9816  0032B2  C0C3  F09F         	movff	_nout+1,?_vfprintf+1
  9817  0032B6                     
  9818                           ; BSR set to: 0
  9819  0032B6  0012               	return		;funcret
  9820  0032B8                     __end_of_vfprintf:
  9821                           	callstack 0
  9822                           
  9823 ;; *************** function _vfpfcnvrt *****************
  9824 ;; Defined at:
  9825 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9828 ;;		 -> NULL(0), 
  9829 ;;  fmt             2   33[BANK0 ] PTR PTR unsigned char 
  9830 ;;		 -> vfprintf@cfmt(2), 
  9831 ;;  ap              2   35[BANK0 ] PTR PTR void 
  9832 ;;		 -> printf@ap(2), 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  llu             8   53[BANK0 ] unsigned long long 
  9835 ;;  ll              8   41[BANK0 ] long long 
  9836 ;;  f               4    0        long long 
  9837 ;;  vp              3    0        PTR void 
  9838 ;;  ct              3    0        unsigned char [3]
  9839 ;;  cp              3    0        PTR unsigned char 
  9840 ;;  done            2   49[BANK0 ] int 
  9841 ;;  i               2    0        int 
  9842 ;;  c               1   61[BANK0 ] unsigned char 
  9843 ;; Return value:  Size  Location     Type
  9844 ;;                  2   31[BANK0 ] int 
  9845 ;; Registers used:
  9846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9847 ;; Tracked objects:
  9848 ;;		On entry : 0/0
  9849 ;;		On exit  : 0/0
  9850 ;;		Unchanged: 0/0
  9851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9852 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9853 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9854 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9855 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9856 ;;Total ram usage:       31 bytes
  9857 ;; Hardware stack levels used:    1
  9858 ;; Hardware stack levels required when called:   10
  9859 ;; This function calls:
  9860 ;;		_atoi
  9861 ;;		_ctoa
  9862 ;;		_dtoa
  9863 ;;		_fputc
  9864 ;;		_isdigit
  9865 ;;		_utoa
  9866 ;;		_xtoa
  9867 ;; This function is called by:
  9868 ;;		_vfprintf
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           	psect	text28
  9873  001286                     __ptext28:
  9874                           	callstack 0
  9875  001286                     _vfpfcnvrt:
  9876                           	callstack 18
  9877  001286                     
  9878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  9879  001286  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9880  00128A  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9881  00128E  CFDE FFF6          	movff	postinc2,tblptrl
  9882  001292  CFDD FFF7          	movff	postdec2,tblptrh
  9883  001296                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9884  001296  6AF8               	clrf	tblptru,c
  9885  001298                     	endif
  9886  001298                     	if	0	;tblptru may be non-zero
  9887  001298                     	endif
  9888  001298  0008               	tblrd		*
  9889  00129A  50F5               	movf	tablat,w,c
  9890  00129C  0A25               	xorlw	37
  9891  00129E  A4D8               	btfss	status,2,c
  9892  0012A0  EF54  F009         	goto	u5491
  9893  0012A4  EF56  F009         	goto	u5490
  9894  0012A8                     u5491:
  9895  0012A8  EFE8  F00B         	goto	l5616
  9896  0012AC                     u5490:
  9897  0012AC                     
  9898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  9899  0012AC  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9900  0012B0  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9901  0012B4  2ADE               	incf	postinc2,f,c
  9902  0012B6  0E00               	movlw	0
  9903  0012B8  22DD               	addwfc	postdec2,f,c
  9904  0012BA                     
  9905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  9906  0012BA  0E00               	movlw	0
  9907  0012BC  6E3A               	movwf	(_width+1)^0,c
  9908  0012BE  0E00               	movlw	0
  9909  0012C0  6E39               	movwf	_width^0,c
  9910  0012C2  C039  F03D         	movff	_width,_flags
  9911  0012C6  C03A  F03E         	movff	_width+1,_flags+1
  9912  0012CA                     
  9913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  9914  0012CA  683B               	setf	_prec^0,c
  9915  0012CC  683C               	setf	(_prec+1)^0,c
  9916  0012CE                     
  9917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  9918  0012CE  0E00               	movlw	0
  9919  0012D0  0100               	movlb	0	; () banked
  9920  0012D2  6F92               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9921  0012D4  0E00               	movlw	0
  9922  0012D6  6F91               	movwf	vfpfcnvrt@done& (0+255),b
  9923                           
  9924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  9925  0012D8  EFB5  F009         	goto	l5538
  9926  0012DC                     l5512:
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  9930  0012DC  803D               	bsf	_flags^0,0,c
  9931  0012DE                     l5514:
  9932                           
  9933                           ; BSR set to: 0
  9934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  9935  0012DE  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9936  0012E2  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9937  0012E6  2ADE               	incf	postinc2,f,c
  9938  0012E8  0E00               	movlw	0
  9939  0012EA  22DD               	addwfc	postdec2,f,c
  9940                           
  9941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  9942  0012EC  EFB5  F009         	goto	l5538
  9943  0012F0                     l5516:
  9944                           
  9945                           ; BSR set to: 0
  9946                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  9947  0012F0  823D               	bsf	_flags^0,1,c
  9948  0012F2  EF6F  F009         	goto	l5514
  9949  0012F6                     l5520:
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  9953  0012F6  843D               	bsf	_flags^0,2,c
  9954  0012F8  EF6F  F009         	goto	l5514
  9955  0012FC                     l5524:
  9956                           
  9957                           ; BSR set to: 0
  9958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  9959  0012FC  863D               	bsf	_flags^0,3,c
  9960  0012FE  EF6F  F009         	goto	l5514
  9961  001302                     l5528:
  9962                           
  9963                           ; BSR set to: 0
  9964                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  9965  001302  883D               	bsf	_flags^0,4,c
  9966  001304  EF6F  F009         	goto	l5514
  9967  001308                     l5532:
  9968                           
  9969                           ; BSR set to: 0
  9970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  9971  001308  0E00               	movlw	0
  9972  00130A  6F92               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9973  00130C  0E01               	movlw	1
  9974  00130E  6F91               	movwf	vfpfcnvrt@done& (0+255),b
  9975                           
  9976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  9977  001310  EFB5  F009         	goto	l5538
  9978  001314                     l5536:
  9979                           
  9980                           ; BSR set to: 0
  9981  001314  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9982  001318  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9983  00131C  CFDE FFF6          	movff	postinc2,tblptrl
  9984  001320  CFDD FFF7          	movff	postdec2,tblptrh
  9985  001324                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9986  001324  6AF8               	clrf	tblptru,c
  9987  001326                     	endif
  9988  001326                     	if	0	;tblptru may be non-zero
  9989  001326                     	endif
  9990  001326  0008               	tblrd		*
  9991  001328  50F5               	movf	tablat,w,c
  9992  00132A  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  9993  00132C  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9994                           
  9995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9996                           ; Switch size 1, requested type "simple"
  9997                           ; Number of cases is 1, Range of values is 0 to 0
  9998                           ; switch strategies available:
  9999                           ; Name         Instructions Cycles
 10000                           ; simple_byte            4     3 (average)
 10001                           ;	Chosen strategy is simple_byte
 10002  00132E  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10003  001330  0A00               	xorlw	0	; case 0
 10004  001332  B4D8               	btfsc	status,2,c
 10005  001334  EF9E  F009         	goto	l6540
 10006  001338  EF84  F009         	goto	l5532
 10007  00133C                     l6540:
 10008                           
 10009                           ; BSR set to: 0
 10010                           ; Switch size 1, requested type "simple"
 10011                           ; Number of cases is 5, Range of values is 32 to 48
 10012                           ; switch strategies available:
 10013                           ; Name         Instructions Cycles
 10014                           ; simple_byte           16     9 (average)
 10015                           ;	Chosen strategy is simple_byte
 10016  00133C  5185               	movf	??_vfpfcnvrt& (0+255),w,b
 10017  00133E  0A20               	xorlw	32	; case 32
 10018  001340  B4D8               	btfsc	status,2,c
 10019  001342  EF7E  F009         	goto	l5524
 10020  001346  0A03               	xorlw	3	; case 35
 10021  001348  B4D8               	btfsc	status,2,c
 10022  00134A  EF81  F009         	goto	l5528
 10023  00134E  0A08               	xorlw	8	; case 43
 10024  001350  B4D8               	btfsc	status,2,c
 10025  001352  EF7B  F009         	goto	l5520
 10026  001356  0A06               	xorlw	6	; case 45
 10027  001358  B4D8               	btfsc	status,2,c
 10028  00135A  EF6E  F009         	goto	l5512
 10029  00135E  0A1D               	xorlw	29	; case 48
 10030  001360  B4D8               	btfsc	status,2,c
 10031  001362  EF78  F009         	goto	l5516
 10032  001366  EF84  F009         	goto	l5532
 10033  00136A                     l5538:
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 10037  00136A  5191               	movf	vfpfcnvrt@done& (0+255),w,b
 10038  00136C  1192               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
 10039  00136E  B4D8               	btfsc	status,2,c
 10040  001370  EFBC  F009         	goto	u5501
 10041  001374  EFBE  F009         	goto	u5500
 10042  001378                     u5501:
 10043  001378  EF8A  F009         	goto	l5536
 10044  00137C                     u5500:
 10045  00137C                     
 10046                           ; BSR set to: 0
 10047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
 10048  00137C  A03D               	btfss	_flags^0,0,c
 10049  00137E  EFC3  F009         	goto	u5511
 10050  001382  EFC5  F009         	goto	u5510
 10051  001386                     u5511:
 10052  001386  EFC6  F009         	goto	l5542
 10053  00138A                     u5510:
 10054  00138A                     
 10055                           ; BSR set to: 0
 10056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
 10057  00138A  923D               	bcf	_flags^0,1,c
 10058  00138C                     l5542:
 10059                           
 10060                           ; BSR set to: 0
 10061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 10062  00138C  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10063  001390  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10064  001394  CFDE FFF6          	movff	postinc2,tblptrl
 10065  001398  CFDD FFF7          	movff	postdec2,tblptrh
 10066  00139C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10067  00139C  6AF8               	clrf	tblptru,c
 10068  00139E                     	endif
 10069  00139E                     	if	0	;tblptru may be non-zero
 10070  00139E                     	endif
 10071  00139E  0008               	tblrd		*
 10072  0013A0  50F5               	movf	tablat,w,c
 10073  0013A2  0A2A               	xorlw	42
 10074  0013A4  A4D8               	btfss	status,2,c
 10075  0013A6  EFD7  F009         	goto	u5521
 10076  0013AA  EFD9  F009         	goto	u5520
 10077  0013AE                     u5521:
 10078  0013AE  EF02  F00A         	goto	l5550
 10079  0013B2                     u5520:
 10080  0013B2                     
 10081                           ; BSR set to: 0
 10082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 10083  0013B2  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10084  0013B6  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10085  0013BA  2ADE               	incf	postinc2,f,c
 10086  0013BC  0E00               	movlw	0
 10087  0013BE  22DD               	addwfc	postdec2,f,c
 10088                           
 10089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10090  0013C0  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10091  0013C4  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10092  0013C8  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10093  0013CC  0E02               	movlw	2
 10094  0013CE  26DE               	addwf	postinc2,f,c
 10095  0013D0  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10096  0013D4  0E00               	movlw	0
 10097  0013D6  22DD               	addwfc	postdec2,f,c
 10098  0013D8  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10099  0013DC  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10100  0013E0  CFDE F039          	movff	postinc2,_width
 10101  0013E4  CFDD F03A          	movff	postdec2,_width+1
 10102  0013E8                     
 10103                           ; BSR set to: 0
 10104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 10105  0013E8  BE3A               	btfsc	(_width+1)^0,7,c
 10106  0013EA  EFFB  F009         	goto	u5530
 10107  0013EE  EFF9  F009         	goto	u5531
 10108  0013F2                     u5531:
 10109  0013F2  EF47  F00A         	goto	l5560
 10110  0013F6                     u5530:
 10111  0013F6                     
 10112                           ; BSR set to: 0
 10113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 10114  0013F6  803D               	bsf	_flags^0,0,c
 10115                           
 10116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 10117  0013F8  6C39               	negf	_width^0,c
 10118  0013FA  1E3A               	comf	(_width+1)^0,f,c
 10119  0013FC  B0D8               	btfsc	status,0,c
 10120  0013FE  2A3A               	incf	(_width+1)^0,f,c
 10121  001400  EF47  F00A         	goto	l5560
 10122  001404                     l5550:
 10123                           
 10124                           ; BSR set to: 0
 10125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 10126  001404  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10127  001408  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10128  00140C  CFDE F01B          	movff	postinc2,atoi@s
 10129  001410  CFDD F01C          	movff	postdec2,atoi@s+1
 10130  001414  ECDC  F012         	call	_atoi	;wreg free
 10131  001418  C01B  F039         	movff	?_atoi,_width
 10132  00141C  C01C  F03A         	movff	?_atoi+1,_width+1
 10133                           
 10134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10135  001420  EF19  F00A         	goto	l5554
 10136  001424                     l5552:
 10137                           
 10138                           ; BSR set to: 0
 10139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 10140  001424  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10141  001428  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10142  00142C  2ADE               	incf	postinc2,f,c
 10143  00142E  0E00               	movlw	0
 10144  001430  22DD               	addwfc	postdec2,f,c
 10145  001432                     l5554:
 10146  001432  0ED0               	movlw	208
 10147  001434  0100               	movlb	0	; () banked
 10148  001436  6F85               	movwf	??_vfpfcnvrt& (0+255),b
 10149  001438  0EFF               	movlw	255
 10150  00143A  6F86               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10151  00143C  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10152  001440  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10153  001444  CFDE FFF6          	movff	postinc2,tblptrl
 10154  001448  CFDD FFF7          	movff	postdec2,tblptrh
 10155  00144C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10156  00144C  6AF8               	clrf	tblptru,c
 10157  00144E                     	endif
 10158  00144E                     	if	0	;tblptru may be non-zero
 10159  00144E                     	endif
 10160  00144E  0008               	tblrd		*
 10161  001450  50F5               	movf	tablat,w,c
 10162  001452  6F87               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10163  001454  6B88               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10164  001456  5185               	movf	??_vfpfcnvrt& (0+255),w,b
 10165  001458  2787               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10166  00145A  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10167  00145C  2388               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10168  00145E  5188               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10169  001460  E10A               	bnz	u5540
 10170  001462  0E0A               	movlw	10
 10171  001464  5D87               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10172  001466  A0D8               	btfss	status,0,c
 10173  001468  EF38  F00A         	goto	u5541
 10174  00146C  EF3B  F00A         	goto	u5540
 10175  001470                     u5541:
 10176  001470  0E01               	movlw	1
 10177  001472  EF3C  F00A         	goto	u5550
 10178  001476                     u5540:
 10179  001476  0E00               	movlw	0
 10180  001478                     u5550:
 10181  001478  6F93               	movwf	_vfpfcnvrt$2019& (0+255),b
 10182  00147A  6B94               	clrf	(_vfpfcnvrt$2019+1)& (0+255),b
 10183  00147C                     
 10184                           ; BSR set to: 0
 10185  00147C  5193               	movf	_vfpfcnvrt$2019& (0+255),w,b
 10186  00147E  1194               	iorwf	(_vfpfcnvrt$2019+1)& (0+255),w,b
 10187  001480  A4D8               	btfss	status,2,c
 10188  001482  EF45  F00A         	goto	u5561
 10189  001486  EF47  F00A         	goto	u5560
 10190  00148A                     u5561:
 10191  00148A  EF12  F00A         	goto	l5552
 10192  00148E                     u5560:
 10193  00148E                     l5560:
 10194                           
 10195                           ; BSR set to: 0
 10196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
 10197  00148E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10198  001492  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10199  001496  CFDE FFF6          	movff	postinc2,tblptrl
 10200  00149A  CFDD FFF7          	movff	postdec2,tblptrh
 10201  00149E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10202  00149E  6AF8               	clrf	tblptru,c
 10203  0014A0                     	endif
 10204  0014A0                     	if	0	;tblptru may be non-zero
 10205  0014A0                     	endif
 10206  0014A0  0008               	tblrd		*
 10207  0014A2  50F5               	movf	tablat,w,c
 10208  0014A4  0A63               	xorlw	99
 10209  0014A6  A4D8               	btfss	status,2,c
 10210  0014A8  EF58  F00A         	goto	u5571
 10211  0014AC  EF5A  F00A         	goto	u5570
 10212  0014B0                     u5571:
 10213  0014B0  EF81  F00A         	goto	l5568
 10214  0014B4                     u5570:
 10215  0014B4                     
 10216                           ; BSR set to: 0
 10217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
 10218  0014B4  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10219  0014B8  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10220  0014BC  2ADE               	incf	postinc2,f,c
 10221  0014BE  0E00               	movlw	0
 10222  0014C0  22DD               	addwfc	postdec2,f,c
 10223                           
 10224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10225  0014C2  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10226  0014C6  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10227  0014CA  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10228  0014CE  0E02               	movlw	2
 10229  0014D0  26DE               	addwf	postinc2,f,c
 10230  0014D2  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10231  0014D6  0E00               	movlw	0
 10232  0014D8  22DD               	addwfc	postdec2,f,c
 10233  0014DA  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10234  0014DE  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10235  0014E2  50DF               	movf	indf2,w,c
 10236  0014E4  6F9D               	movwf	vfpfcnvrt@c& (0+255),b
 10237  0014E6                     
 10238                           ; BSR set to: 0
 10239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
 10240  0014E6  C07F  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
 10241  0014EA  C080  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10242  0014EE  C09D  F021         	movff	vfpfcnvrt@c,ctoa@c
 10243  0014F2  EC53  F016         	call	_ctoa	;wreg free
 10244  0014F6  C01F  F07F         	movff	?_ctoa,?_vfpfcnvrt
 10245  0014FA  C020  F080         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10246  0014FE  EF04  F00C         	goto	l1559
 10247  001502                     l5568:
 10248                           
 10249                           ; BSR set to: 0
 10250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10251  001502  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10252  001506  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10253  00150A  CFDE FFF6          	movff	postinc2,tblptrl
 10254  00150E  CFDD FFF7          	movff	postdec2,tblptrh
 10255  001512                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10256  001512  6AF8               	clrf	tblptru,c
 10257  001514                     	endif
 10258  001514                     	if	0	;tblptru may be non-zero
 10259  001514                     	endif
 10260  001514  0008               	tblrd		*
 10261  001516  50F5               	movf	tablat,w,c
 10262  001518  0A64               	xorlw	100
 10263  00151A  B4D8               	btfsc	status,2,c
 10264  00151C  EF92  F00A         	goto	u5581
 10265  001520  EF94  F00A         	goto	u5580
 10266  001524                     u5581:
 10267  001524  EFA7  F00A         	goto	l5572
 10268  001528                     u5580:
 10269  001528                     
 10270                           ; BSR set to: 0
 10271  001528  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10272  00152C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10273  001530  CFDE FFF6          	movff	postinc2,tblptrl
 10274  001534  CFDD FFF7          	movff	postdec2,tblptrh
 10275  001538                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10276  001538  6AF8               	clrf	tblptru,c
 10277  00153A                     	endif
 10278  00153A                     	if	0	;tblptru may be non-zero
 10279  00153A                     	endif
 10280  00153A  0008               	tblrd		*
 10281  00153C  50F5               	movf	tablat,w,c
 10282  00153E  0A69               	xorlw	105
 10283  001540  A4D8               	btfss	status,2,c
 10284  001542  EFA5  F00A         	goto	u5591
 10285  001546  EFA7  F00A         	goto	u5590
 10286  00154A                     u5591:
 10287  00154A  EFE7  F00A         	goto	l5578
 10288  00154E                     u5590:
 10289  00154E                     l5572:
 10290                           
 10291                           ; BSR set to: 0
 10292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 10293  00154E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10294  001552  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10295  001556  2ADE               	incf	postinc2,f,c
 10296  001558  0E00               	movlw	0
 10297  00155A  22DD               	addwfc	postdec2,f,c
 10298                           
 10299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10300  00155C  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10301  001560  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10302  001564  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10303  001568  0E02               	movlw	2
 10304  00156A  26DE               	addwf	postinc2,f,c
 10305  00156C  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10306  001570  0E00               	movlw	0
 10307  001572  22DD               	addwfc	postdec2,f,c
 10308  001574  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10309  001578  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10310  00157C  CFDE F089          	movff	postinc2,vfpfcnvrt@ll
 10311  001580  CFDD F08A          	movff	postdec2,vfpfcnvrt@ll+1
 10312  001584  0E00               	movlw	0
 10313  001586  BF8A               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10314  001588  0EFF               	movlw	-1
 10315  00158A  6F8B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10316  00158C  6F8C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10317  00158E  6F8D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10318  001590  6F8E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10319  001592  6F8F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10320  001594  6F90               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10321  001596                     
 10322                           ; BSR set to: 0
 10323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 10324  001596  C07F  F060         	movff	vfpfcnvrt@fp,dtoa@fp
 10325  00159A  C080  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10326  00159E  C089  F062         	movff	vfpfcnvrt@ll,dtoa@d
 10327  0015A2  C08A  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10328  0015A6  C08B  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10329  0015AA  C08C  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10330  0015AE  C08D  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10331  0015B2  C08E  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10332  0015B6  C08F  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10333  0015BA  C090  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10334  0015BE  EC05  F00C         	call	_dtoa	;wreg free
 10335  0015C2  C060  F07F         	movff	?_dtoa,?_vfpfcnvrt
 10336  0015C6  C061  F080         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10337  0015CA  EF04  F00C         	goto	l1559
 10338  0015CE                     l5578:
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 10342  0015CE  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10343  0015D2  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10344  0015D6  CFDE FFF6          	movff	postinc2,tblptrl
 10345  0015DA  CFDD FFF7          	movff	postdec2,tblptrh
 10346  0015DE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10347  0015DE  6AF8               	clrf	tblptru,c
 10348  0015E0                     	endif
 10349  0015E0                     	if	0	;tblptru may be non-zero
 10350  0015E0                     	endif
 10351  0015E0  0008               	tblrd		*
 10352  0015E2  50F5               	movf	tablat,w,c
 10353  0015E4  0A75               	xorlw	117
 10354  0015E6  A4D8               	btfss	status,2,c
 10355  0015E8  EFF8  F00A         	goto	u5601
 10356  0015EC  EFFA  F00A         	goto	u5600
 10357  0015F0                     u5601:
 10358  0015F0  EF3B  F00B         	goto	l5586
 10359  0015F4                     u5600:
 10360  0015F4                     
 10361                           ; BSR set to: 0
 10362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 10363  0015F4  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10364  0015F8  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10365  0015FC  2ADE               	incf	postinc2,f,c
 10366  0015FE  0E00               	movlw	0
 10367  001600  22DD               	addwfc	postdec2,f,c
 10368                           
 10369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10370  001602  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10371  001606  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10372  00160A  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10373  00160E  0E02               	movlw	2
 10374  001610  26DE               	addwf	postinc2,f,c
 10375  001612  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10376  001616  0E00               	movlw	0
 10377  001618  22DD               	addwfc	postdec2,f,c
 10378  00161A  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10379  00161E  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10380  001622  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
 10381  001626  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
 10382  00162A  C087  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10383  00162E  C088  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10384  001632  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10385  001634  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10386  001636  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10387  001638  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10388  00163A  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10389  00163C  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10390  00163E                     
 10391                           ; BSR set to: 0
 10392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 10393  00163E  C07F  F060         	movff	vfpfcnvrt@fp,utoa@fp
 10394  001642  C080  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10395  001646  C095  F062         	movff	vfpfcnvrt@llu,utoa@d
 10396  00164A  C096  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10397  00164E  C097  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10398  001652  C098  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10399  001656  C099  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10400  00165A  C09A  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10401  00165E  C09B  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10402  001662  C09C  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10403  001666  ECEC  F00F         	call	_utoa	;wreg free
 10404  00166A  C060  F07F         	movff	?_utoa,?_vfpfcnvrt
 10405  00166E  C061  F080         	movff	?_utoa+1,?_vfpfcnvrt+1
 10406  001672  EF04  F00C         	goto	l1559
 10407  001676                     l5586:
 10408                           
 10409                           ; BSR set to: 0
 10410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10411  001676  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10412  00167A  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10413  00167E  CFDE FFF6          	movff	postinc2,tblptrl
 10414  001682  CFDD FFF7          	movff	postdec2,tblptrh
 10415  001686                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10416  001686  6AF8               	clrf	tblptru,c
 10417  001688                     	endif
 10418  001688                     	if	0	;tblptru may be non-zero
 10419  001688                     	endif
 10420  001688  0008               	tblrd		*
 10421  00168A  50F5               	movf	tablat,w,c
 10422  00168C  0A78               	xorlw	120
 10423  00168E  B4D8               	btfsc	status,2,c
 10424  001690  EF4C  F00B         	goto	u5611
 10425  001694  EF4E  F00B         	goto	u5610
 10426  001698                     u5611:
 10427  001698  EF61  F00B         	goto	l5590
 10428  00169C                     u5610:
 10429  00169C                     
 10430                           ; BSR set to: 0
 10431  00169C  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10432  0016A0  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10433  0016A4  CFDE FFF6          	movff	postinc2,tblptrl
 10434  0016A8  CFDD FFF7          	movff	postdec2,tblptrh
 10435  0016AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10436  0016AC  6AF8               	clrf	tblptru,c
 10437  0016AE                     	endif
 10438  0016AE                     	if	0	;tblptru may be non-zero
 10439  0016AE                     	endif
 10440  0016AE  0008               	tblrd		*
 10441  0016B0  50F5               	movf	tablat,w,c
 10442  0016B2  0A58               	xorlw	88
 10443  0016B4  A4D8               	btfss	status,2,c
 10444  0016B6  EF5F  F00B         	goto	u5621
 10445  0016BA  EF61  F00B         	goto	u5620
 10446  0016BE                     u5621:
 10447  0016BE  EFB0  F00B         	goto	l5600
 10448  0016C2                     u5620:
 10449  0016C2                     l5590:
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
 10453  0016C2  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10454  0016C6  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10455  0016CA  CFDE FFF6          	movff	postinc2,tblptrl
 10456  0016CE  CFDD FFF7          	movff	postdec2,tblptrh
 10457  0016D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10458  0016D2  6AF8               	clrf	tblptru,c
 10459  0016D4                     	endif
 10460  0016D4                     	if	0	;tblptru may be non-zero
 10461  0016D4                     	endif
 10462  0016D4  0008               	tblrd		*
 10463  0016D6  CFF5 F09D          	movff	tablat,vfpfcnvrt@c
 10464  0016DA                     
 10465                           ; BSR set to: 0
 10466                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
 10467  0016DA  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10468  0016DE  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10469  0016E2  2ADE               	incf	postinc2,f,c
 10470  0016E4  0E00               	movlw	0
 10471  0016E6  22DD               	addwfc	postdec2,f,c
 10472  0016E8                     
 10473                           ; BSR set to: 0
 10474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10475  0016E8  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10476  0016EC  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10477  0016F0  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10478  0016F4  0E02               	movlw	2
 10479  0016F6  26DE               	addwf	postinc2,f,c
 10480  0016F8  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10481  0016FC  0E00               	movlw	0
 10482  0016FE  22DD               	addwfc	postdec2,f,c
 10483  001700  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10484  001704  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10485  001708  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
 10486  00170C  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
 10487  001710  C087  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10488  001714  C088  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10489  001718  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10490  00171A  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10491  00171C  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10492  00171E  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10493  001720  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10494  001722  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10495  001724                     
 10496                           ; BSR set to: 0
 10497                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
 10498  001724  C07F  F060         	movff	vfpfcnvrt@fp,xtoa@fp
 10499  001728  C080  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10500  00172C  C095  F062         	movff	vfpfcnvrt@llu,xtoa@d
 10501  001730  C096  F063         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10502  001734  C097  F064         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10503  001738  C098  F065         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10504  00173C  C099  F066         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10505  001740  C09A  F067         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10506  001744  C09B  F068         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10507  001748  C09C  F069         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10508  00174C  C09D  F06A         	movff	vfpfcnvrt@c,xtoa@x
 10509  001750  EC77  F00D         	call	_xtoa	;wreg free
 10510  001754  C060  F07F         	movff	?_xtoa,?_vfpfcnvrt
 10511  001758  C061  F080         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10512  00175C  EF04  F00C         	goto	l1559
 10513  001760                     l5600:
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 10517  001760  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10518  001764  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10519  001768  CFDE FFF6          	movff	postinc2,tblptrl
 10520  00176C  CFDD FFF7          	movff	postdec2,tblptrh
 10521  001770                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10522  001770  6AF8               	clrf	tblptru,c
 10523  001772                     	endif
 10524  001772                     	if	0	;tblptru may be non-zero
 10525  001772                     	endif
 10526  001772  0008               	tblrd		*
 10527  001774  50F5               	movf	tablat,w,c
 10528  001776  0A25               	xorlw	37
 10529  001778  A4D8               	btfss	status,2,c
 10530  00177A  EFC1  F00B         	goto	u5631
 10531  00177E  EFC3  F00B         	goto	u5630
 10532  001782                     u5631:
 10533  001782  EFDB  F00B         	goto	l5610
 10534  001786                     u5630:
 10535  001786                     
 10536                           ; BSR set to: 0
 10537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 10538  001786  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10539  00178A  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10540  00178E  2ADE               	incf	postinc2,f,c
 10541  001790  0E00               	movlw	0
 10542  001792  22DD               	addwfc	postdec2,f,c
 10543  001794                     
 10544                           ; BSR set to: 0
 10545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 10546  001794  0E00               	movlw	0
 10547  001796  6E17               	movwf	(fputc@c+1)^0,c
 10548  001798  0E25               	movlw	37
 10549  00179A  6E16               	movwf	fputc@c^0,c
 10550  00179C  C07F  F018         	movff	vfpfcnvrt@fp,fputc@fp
 10551  0017A0  C080  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10552  0017A4  EC29  F018         	call	_fputc	;wreg free
 10553  0017A8                     l5606:
 10554                           
 10555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 10556  0017A8  0E00               	movlw	0
 10557  0017AA  0100               	movlb	0	; () banked
 10558  0017AC  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10559  0017AE  0E01               	movlw	1
 10560  0017B0  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
 10561  0017B2  EF04  F00C         	goto	l1559
 10562  0017B6                     l5610:
 10563                           
 10564                           ; BSR set to: 0
 10565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 10566  0017B6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10567  0017BA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10568  0017BE  2ADE               	incf	postinc2,f,c
 10569  0017C0  0E00               	movlw	0
 10570  0017C2  22DD               	addwfc	postdec2,f,c
 10571  0017C4                     
 10572                           ; BSR set to: 0
 10573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 10574  0017C4  0E00               	movlw	0
 10575  0017C6  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10576  0017C8  0E00               	movlw	0
 10577  0017CA  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
 10578  0017CC  EF04  F00C         	goto	l1559
 10579  0017D0                     l5616:
 10580                           
 10581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 10582  0017D0  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10583  0017D4  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10584  0017D8  CFDE FFF6          	movff	postinc2,tblptrl
 10585  0017DC  CFDD FFF7          	movff	postdec2,tblptrh
 10586  0017E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10587  0017E0  6AF8               	clrf	tblptru,c
 10588  0017E2                     	endif
 10589  0017E2                     	if	0	;tblptru may be non-zero
 10590  0017E2                     	endif
 10591  0017E2  0008               	tblrd		*
 10592  0017E4  50F5               	movf	tablat,w,c
 10593  0017E6  6E16               	movwf	fputc@c^0,c
 10594  0017E8  6A17               	clrf	(fputc@c+1)^0,c
 10595  0017EA  C07F  F018         	movff	vfpfcnvrt@fp,fputc@fp
 10596  0017EE  C080  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10597  0017F2  EC29  F018         	call	_fputc	;wreg free
 10598  0017F6                     
 10599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 10600  0017F6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10601  0017FA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10602  0017FE  2ADE               	incf	postinc2,f,c
 10603  001800  0E00               	movlw	0
 10604  001802  22DD               	addwfc	postdec2,f,c
 10605  001804  EFD4  F00B         	goto	l5606
 10606  001808                     l1559:
 10607  001808  0012               	return		;funcret
 10608  00180A                     __end_of_vfpfcnvrt:
 10609                           	callstack 0
 10610                           
 10611 ;; *************** function _xtoa *****************
 10612 ;; Defined at:
 10613 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 10614 ;; Parameters:    Size  Location     Type
 10615 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 10616 ;;		 -> NULL(0), 
 10617 ;;  d               8    2[BANK0 ] unsigned long long 
 10618 ;;  x               1   10[BANK0 ] unsigned char 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  n               8   19[BANK0 ] unsigned long long 
 10621 ;;  c               2   29[BANK0 ] int 
 10622 ;;  i               2   27[BANK0 ] int 
 10623 ;;  w               2   17[BANK0 ] int 
 10624 ;;  p               2   15[BANK0 ] int 
 10625 ;; Return value:  Size  Location     Type
 10626 ;;                  2    0[BANK0 ] int 
 10627 ;; Registers used:
 10628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10629 ;; Tracked objects:
 10630 ;;		On entry : 0/0
 10631 ;;		On exit  : 0/0
 10632 ;;		Unchanged: 0/0
 10633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10634 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10635 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10636 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10637 ;;      Totals:         8      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10638 ;;Total ram usage:       39 bytes
 10639 ;; Hardware stack levels used:    1
 10640 ;; Hardware stack levels required when called:    9
 10641 ;; This function calls:
 10642 ;;		_isalpha
 10643 ;;		_isupper
 10644 ;;		_pad
 10645 ;;		_toupper
 10646 ;; This function is called by:
 10647 ;;		_vfpfcnvrt
 10648 ;; This function uses a non-reentrant model
 10649 ;;
 10650                           
 10651                           	psect	text29
 10652  001AEE                     __ptext29:
 10653                           	callstack 0
 10654  001AEE                     _xtoa:
 10655                           	callstack 18
 10656  001AEE                     
 10657                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
 10658  001AEE  BE3C               	btfsc	(_prec+1)^0,7,c
 10659  001AF0  EF7C  F00D         	goto	u5251
 10660  001AF4  EF7E  F00D         	goto	u5250
 10661  001AF8                     u5251:
 10662  001AF8  EF7F  F00D         	goto	l5398
 10663  001AFC                     u5250:
 10664  001AFC                     
 10665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
 10666  001AFC  923D               	bcf	_flags^0,1,c
 10667  001AFE                     l5398:
 10668                           
 10669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
 10670  001AFE  BE3C               	btfsc	(_prec+1)^0,7,c
 10671  001B00  EF8C  F00D         	goto	u5260
 10672  001B04  503C               	movf	(_prec+1)^0,w,c
 10673  001B06  E106               	bnz	u5261
 10674  001B08  043B               	decf	_prec^0,w,c
 10675  001B0A  B0D8               	btfsc	status,0,c
 10676  001B0C  EF8A  F00D         	goto	u5261
 10677  001B10  EF8C  F00D         	goto	u5260
 10678  001B14                     u5261:
 10679  001B14  EF93  F00D         	goto	l1507
 10680  001B18                     u5260:
 10681  001B18  0E00               	movlw	0
 10682  001B1A  0100               	movlb	0	; () banked
 10683  001B1C  6F70               	movwf	(xtoa@p+1)& (0+255),b
 10684  001B1E  0E01               	movlw	1
 10685  001B20  6F6F               	movwf	xtoa@p& (0+255),b
 10686  001B22  EF97  F00D         	goto	l1509
 10687  001B26                     l1507:
 10688  001B26  C03B  F06F         	movff	_prec,xtoa@p
 10689  001B2A  C03C  F070         	movff	_prec+1,xtoa@p+1
 10690  001B2E                     l1509:
 10691                           
 10692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
 10693  001B2E  C039  F071         	movff	_width,xtoa@w
 10694  001B32  C03A  F072         	movff	_width+1,xtoa@w+1
 10695                           
 10696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 10697  001B36  A83D               	btfss	_flags^0,4,c
 10698  001B38  EFA0  F00D         	goto	u5271
 10699  001B3C  EFA2  F00D         	goto	u5270
 10700  001B40                     u5271:
 10701  001B40  EFA7  F00D         	goto	l5404
 10702  001B44                     u5270:
 10703  001B44                     
 10704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
 10705  001B44  0100               	movlb	0	; () banked
 10706  001B46  0EFE               	movlw	254
 10707  001B48  2771               	addwf	xtoa@w& (0+255),f,b
 10708  001B4A  0EFF               	movlw	255
 10709  001B4C  2372               	addwfc	(xtoa@w+1)& (0+255),f,b
 10710  001B4E                     l5404:
 10711                           
 10712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 661:     n = d;
 10713  001B4E  C062  F073         	movff	xtoa@d,xtoa@n
 10714  001B52  C063  F074         	movff	xtoa@d+1,xtoa@n+1
 10715  001B56  C064  F075         	movff	xtoa@d+2,xtoa@n+2
 10716  001B5A  C065  F076         	movff	xtoa@d+3,xtoa@n+3
 10717  001B5E  C066  F077         	movff	xtoa@d+4,xtoa@n+4
 10718  001B62  C067  F078         	movff	xtoa@d+5,xtoa@n+5
 10719  001B66  C068  F079         	movff	xtoa@d+6,xtoa@n+6
 10720  001B6A  C069  F07A         	movff	xtoa@d+7,xtoa@n+7
 10721  001B6E                     
 10722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
 10723  001B6E  0E00               	movlw	0
 10724  001B70  0100               	movlb	0	; () banked
 10725  001B72  6F7C               	movwf	(xtoa@i+1)& (0+255),b
 10726  001B74  0E1F               	movlw	31
 10727  001B76  6F7B               	movwf	xtoa@i& (0+255),b
 10728  001B78                     
 10729                           ; BSR set to: 0
 10730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
 10731  001B78  0E00               	movlw	0
 10732  001B7A  0101               	movlb	1	; () banked
 10733  001B7C  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10734                           
 10735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10736  001B7E  EF75  F00E         	goto	l5440
 10737  001B82                     l5410:
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 665:         --i;
 10741  001B82  077B               	decf	xtoa@i& (0+255),f,b
 10742  001B84  A0D8               	btfss	status,0,c
 10743  001B86  077C               	decf	(xtoa@i+1)& (0+255),f,b
 10744  001B88                     
 10745                           ; BSR set to: 0
 10746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
 10747  001B88  0E0F               	movlw	15
 10748  001B8A  1573               	andwf	xtoa@n& (0+255),w,b
 10749  001B8C  6F7D               	movwf	xtoa@c& (0+255),b
 10750  001B8E  6B7E               	clrf	(xtoa@c+1)& (0+255),b
 10751  001B90                     
 10752                           ; BSR set to: 0
 10753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 10754  001B90  BF7E               	btfsc	(xtoa@c+1)& (0+255),7,b
 10755  001B92  EFD4  F00D         	goto	u5281
 10756  001B96  517E               	movf	(xtoa@c+1)& (0+255),w,b
 10757  001B98  E109               	bnz	u5280
 10758  001B9A  0E0A               	movlw	10
 10759  001B9C  5D7D               	subwf	xtoa@c& (0+255),w,b
 10760  001B9E  A0D8               	btfss	status,0,c
 10761  001BA0  EFD4  F00D         	goto	u5281
 10762  001BA4  EFD6  F00D         	goto	u5280
 10763  001BA8                     u5281:
 10764  001BA8  EFDE  F00D         	goto	l5418
 10765  001BAC                     u5280:
 10766  001BAC                     
 10767                           ; BSR set to: 0
 10768  001BAC  0E57               	movlw	87
 10769  001BAE  257D               	addwf	xtoa@c& (0+255),w,b
 10770  001BB0  6F7D               	movwf	xtoa@c& (0+255),b
 10771  001BB2  0E00               	movlw	0
 10772  001BB4  217E               	addwfc	(xtoa@c+1)& (0+255),w,b
 10773  001BB6  6F7E               	movwf	(xtoa@c+1)& (0+255),b
 10774  001BB8  EFE4  F00D         	goto	l1516
 10775  001BBC                     l5418:
 10776                           
 10777                           ; BSR set to: 0
 10778  001BBC  0E30               	movlw	48
 10779  001BBE  257D               	addwf	xtoa@c& (0+255),w,b
 10780  001BC0  6F7D               	movwf	xtoa@c& (0+255),b
 10781  001BC2  0E00               	movlw	0
 10782  001BC4  217E               	addwfc	(xtoa@c+1)& (0+255),w,b
 10783  001BC6  6F7E               	movwf	(xtoa@c+1)& (0+255),b
 10784  001BC8                     l1516:
 10785                           
 10786                           ; BSR set to: 0
 10787  001BC8  0EBF               	movlw	191
 10788  001BCA  6E31               	movwf	??_xtoa^0,c
 10789  001BCC  0EFF               	movlw	255
 10790  001BCE  6E32               	movwf	(??_xtoa+1)^0,c
 10791  001BD0  516A               	movf	xtoa@x& (0+255),w,b
 10792  001BD2  6E33               	movwf	(??_xtoa+2)^0,c
 10793  001BD4  6A34               	clrf	(??_xtoa+3)^0,c
 10794  001BD6  5031               	movf	??_xtoa^0,w,c
 10795  001BD8  2633               	addwf	(??_xtoa+2)^0,f,c
 10796  001BDA  5032               	movf	(??_xtoa+1)^0,w,c
 10797  001BDC  2234               	addwfc	(??_xtoa+3)^0,f,c
 10798  001BDE  5034               	movf	(??_xtoa+3)^0,w,c
 10799  001BE0  E10A               	bnz	u5290
 10800  001BE2  0E1A               	movlw	26
 10801  001BE4  5C33               	subwf	(??_xtoa+2)^0,w,c
 10802  001BE6  A0D8               	btfss	status,0,c
 10803  001BE8  EFF8  F00D         	goto	u5291
 10804  001BEC  EFFB  F00D         	goto	u5290
 10805  001BF0                     u5291:
 10806  001BF0  0E01               	movlw	1
 10807  001BF2  EFFC  F00D         	goto	u5300
 10808  001BF6                     u5290:
 10809  001BF6  0E00               	movlw	0
 10810  001BF8                     u5300:
 10811  001BF8  6F6B               	movwf	_xtoa$2004& (0+255),b
 10812  001BFA  6B6C               	clrf	(_xtoa$2004+1)& (0+255),b
 10813  001BFC                     
 10814                           ; BSR set to: 0
 10815  001BFC  516B               	movf	_xtoa$2004& (0+255),w,b
 10816  001BFE  116C               	iorwf	(_xtoa$2004+1)& (0+255),w,b
 10817  001C00  B4D8               	btfsc	status,2,c
 10818  001C02  EF05  F00E         	goto	u5311
 10819  001C06  EF07  F00E         	goto	u5310
 10820  001C0A                     u5311:
 10821  001C0A  EF37  F00E         	goto	l5432
 10822  001C0E                     u5310:
 10823  001C0E                     
 10824                           ; BSR set to: 0
 10825  001C0E  0E9F               	movlw	159
 10826  001C10  6E31               	movwf	??_xtoa^0,c
 10827  001C12  0EFF               	movlw	255
 10828  001C14  6E32               	movwf	(??_xtoa+1)^0,c
 10829  001C16  0E20               	movlw	32
 10830  001C18  117D               	iorwf	xtoa@c& (0+255),w,b
 10831  001C1A  6E33               	movwf	(??_xtoa+2)^0,c
 10832  001C1C  0E00               	movlw	0
 10833  001C1E  117E               	iorwf	(xtoa@c+1)& (0+255),w,b
 10834  001C20  6E34               	movwf	(??_xtoa+3)^0,c
 10835  001C22  5031               	movf	??_xtoa^0,w,c
 10836  001C24  2633               	addwf	(??_xtoa+2)^0,f,c
 10837  001C26  5032               	movf	(??_xtoa+1)^0,w,c
 10838  001C28  2234               	addwfc	(??_xtoa+3)^0,f,c
 10839  001C2A  5034               	movf	(??_xtoa+3)^0,w,c
 10840  001C2C  E10A               	bnz	u5320
 10841  001C2E  0E1A               	movlw	26
 10842  001C30  5C33               	subwf	(??_xtoa+2)^0,w,c
 10843  001C32  A0D8               	btfss	status,0,c
 10844  001C34  EF1E  F00E         	goto	u5321
 10845  001C38  EF21  F00E         	goto	u5320
 10846  001C3C                     u5321:
 10847  001C3C  0E01               	movlw	1
 10848  001C3E  EF22  F00E         	goto	u5330
 10849  001C42                     u5320:
 10850  001C42  0E00               	movlw	0
 10851  001C44                     u5330:
 10852  001C44  6F6D               	movwf	_xtoa$2005& (0+255),b
 10853  001C46  6B6E               	clrf	(_xtoa$2005+1)& (0+255),b
 10854  001C48                     
 10855                           ; BSR set to: 0
 10856  001C48  516D               	movf	_xtoa$2005& (0+255),w,b
 10857  001C4A  116E               	iorwf	(_xtoa$2005+1)& (0+255),w,b
 10858  001C4C  B4D8               	btfsc	status,2,c
 10859  001C4E  EF2B  F00E         	goto	u5341
 10860  001C52  EF2D  F00E         	goto	u5340
 10861  001C56                     u5341:
 10862  001C56  EF37  F00E         	goto	l5432
 10863  001C5A                     u5340:
 10864  001C5A                     
 10865                           ; BSR set to: 0
 10866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
 10867  001C5A  C07D  F01A         	movff	xtoa@c,toupper@c
 10868  001C5E  C07E  F01B         	movff	xtoa@c+1,toupper@c+1
 10869  001C62  EC5C  F019         	call	_toupper	;wreg free
 10870  001C66  C01A  F07D         	movff	?_toupper,xtoa@c
 10871  001C6A  C01B  F07E         	movff	?_toupper+1,xtoa@c+1
 10872  001C6E                     l5432:
 10873                           
 10874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
 10875  001C6E  0E80               	movlw	low _dbuf
 10876  001C70  0100               	movlb	0	; () banked
 10877  001C72  257B               	addwf	xtoa@i& (0+255),w,b
 10878  001C74  6ED9               	movwf	fsr2l,c
 10879  001C76  0E01               	movlw	high _dbuf
 10880  001C78  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10881  001C7A  6EDA               	movwf	fsr2h,c
 10882  001C7C  C07D  FFDF         	movff	xtoa@c,indf2
 10883  001C80                     
 10884                           ; BSR set to: 0
 10885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 672:         --p;
 10886  001C80  076F               	decf	xtoa@p& (0+255),f,b
 10887  001C82  A0D8               	btfss	status,0,c
 10888  001C84  0770               	decf	(xtoa@p+1)& (0+255),f,b
 10889  001C86                     
 10890                           ; BSR set to: 0
 10891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 673:         --w;
 10892  001C86  0771               	decf	xtoa@w& (0+255),f,b
 10893  001C88  A0D8               	btfss	status,0,c
 10894  001C8A  0772               	decf	(xtoa@w+1)& (0+255),f,b
 10895  001C8C                     
 10896                           ; BSR set to: 0
 10897                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
 10898  001C8C  C073  F031         	movff	xtoa@n,??_xtoa
 10899  001C90  C074  F032         	movff	xtoa@n+1,??_xtoa+1
 10900  001C94  C075  F033         	movff	xtoa@n+2,??_xtoa+2
 10901  001C98  C076  F034         	movff	xtoa@n+3,??_xtoa+3
 10902  001C9C  C077  F035         	movff	xtoa@n+4,??_xtoa+4
 10903  001CA0  C078  F036         	movff	xtoa@n+5,??_xtoa+5
 10904  001CA4  C079  F037         	movff	xtoa@n+6,??_xtoa+6
 10905  001CA8  C07A  F038         	movff	xtoa@n+7,??_xtoa+7
 10906  001CAC  0E05               	movlw	5
 10907  001CAE  EF62  F00E         	goto	u5350
 10908  001CB2                     u5355:
 10909  001CB2  90D8               	bcf	status,0,c
 10910  001CB4  3238               	rrcf	(??_xtoa+7)^0,f,c
 10911  001CB6  3237               	rrcf	(??_xtoa+6)^0,f,c
 10912  001CB8  3236               	rrcf	(??_xtoa+5)^0,f,c
 10913  001CBA  3235               	rrcf	(??_xtoa+4)^0,f,c
 10914  001CBC  3234               	rrcf	(??_xtoa+3)^0,f,c
 10915  001CBE  3233               	rrcf	(??_xtoa+2)^0,f,c
 10916  001CC0  3232               	rrcf	(??_xtoa+1)^0,f,c
 10917  001CC2  3231               	rrcf	??_xtoa^0,f,c
 10918  001CC4                     u5350:
 10919  001CC4  2EE8               	decfsz	wreg,f,c
 10920  001CC6  EF59  F00E         	goto	u5355
 10921  001CCA  C031  F073         	movff	??_xtoa,xtoa@n
 10922  001CCE  C032  F074         	movff	??_xtoa+1,xtoa@n+1
 10923  001CD2  C033  F075         	movff	??_xtoa+2,xtoa@n+2
 10924  001CD6  C034  F076         	movff	??_xtoa+3,xtoa@n+3
 10925  001CDA  C035  F077         	movff	??_xtoa+4,xtoa@n+4
 10926  001CDE  C036  F078         	movff	??_xtoa+5,xtoa@n+5
 10927  001CE2  C037  F079         	movff	??_xtoa+6,xtoa@n+6
 10928  001CE6  C038  F07A         	movff	??_xtoa+7,xtoa@n+7
 10929  001CEA                     l5440:
 10930                           
 10931                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10932  001CEA  0100               	movlb	0	; () banked
 10933  001CEC  BF7C               	btfsc	(xtoa@i+1)& (0+255),7,b
 10934  001CEE  EF82  F00E         	goto	u5361
 10935  001CF2  517C               	movf	(xtoa@i+1)& (0+255),w,b
 10936  001CF4  E109               	bnz	u5360
 10937  001CF6  0E02               	movlw	2
 10938  001CF8  5D7B               	subwf	xtoa@i& (0+255),w,b
 10939  001CFA  A0D8               	btfss	status,0,c
 10940  001CFC  EF82  F00E         	goto	u5361
 10941  001D00  EF84  F00E         	goto	u5360
 10942  001D04                     u5361:
 10943  001D04  EFB4  F00E         	goto	l1530
 10944  001D08                     u5360:
 10945  001D08                     
 10946                           ; BSR set to: 0
 10947  001D08  5173               	movf	xtoa@n& (0+255),w,b
 10948  001D0A  1174               	iorwf	(xtoa@n+1)& (0+255),w,b
 10949  001D0C  1175               	iorwf	(xtoa@n+2)& (0+255),w,b
 10950  001D0E  1176               	iorwf	(xtoa@n+3)& (0+255),w,b
 10951  001D10  1177               	iorwf	(xtoa@n+4)& (0+255),w,b
 10952  001D12  1178               	iorwf	(xtoa@n+5)& (0+255),w,b
 10953  001D14  1179               	iorwf	(xtoa@n+6)& (0+255),w,b
 10954  001D16  117A               	iorwf	(xtoa@n+7)& (0+255),w,b
 10955  001D18  A4D8               	btfss	status,2,c
 10956  001D1A  EF91  F00E         	goto	u5371
 10957  001D1E  EF93  F00E         	goto	u5370
 10958  001D22                     u5371:
 10959  001D22  EFC1  F00D         	goto	l5410
 10960  001D26                     u5370:
 10961  001D26                     
 10962                           ; BSR set to: 0
 10963  001D26  BF70               	btfsc	(xtoa@p+1)& (0+255),7,b
 10964  001D28  EFA0  F00E         	goto	u5380
 10965  001D2C  5170               	movf	(xtoa@p+1)& (0+255),w,b
 10966  001D2E  E106               	bnz	u5381
 10967  001D30  056F               	decf	xtoa@p& (0+255),w,b
 10968  001D32  B0D8               	btfsc	status,0,c
 10969  001D34  EF9E  F00E         	goto	u5381
 10970  001D38  EFA0  F00E         	goto	u5380
 10971  001D3C                     u5381:
 10972  001D3C  EFC1  F00D         	goto	l5410
 10973  001D40                     u5380:
 10974  001D40                     
 10975                           ; BSR set to: 0
 10976  001D40  BF72               	btfsc	(xtoa@w+1)& (0+255),7,b
 10977  001D42  EFAB  F00E         	goto	u5391
 10978  001D46  5172               	movf	(xtoa@w+1)& (0+255),w,b
 10979  001D48  E108               	bnz	u5390
 10980  001D4A  0571               	decf	xtoa@w& (0+255),w,b
 10981  001D4C  A0D8               	btfss	status,0,c
 10982  001D4E  EFAB  F00E         	goto	u5391
 10983  001D52  EFAD  F00E         	goto	u5390
 10984  001D56                     u5391:
 10985  001D56  EFB4  F00E         	goto	l1530
 10986  001D5A                     u5390:
 10987  001D5A                     
 10988                           ; BSR set to: 0
 10989  001D5A  B23D               	btfsc	_flags^0,1,c
 10990  001D5C  EFB2  F00E         	goto	u5401
 10991  001D60  EFB4  F00E         	goto	u5400
 10992  001D64                     u5401:
 10993  001D64  EFC1  F00D         	goto	l5410
 10994  001D68                     u5400:
 10995  001D68                     l1530:
 10996                           
 10997                           ; BSR set to: 0
 10998                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
 10999  001D68  A83D               	btfss	_flags^0,4,c
 11000  001D6A  EFB9  F00E         	goto	u5411
 11001  001D6E  EFBB  F00E         	goto	u5410
 11002  001D72                     u5411:
 11003  001D72  EFD1  F00E         	goto	l5456
 11004  001D76                     u5410:
 11005  001D76                     
 11006                           ; BSR set to: 0
 11007                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 679:         --i;
 11008  001D76  077B               	decf	xtoa@i& (0+255),f,b
 11009  001D78  A0D8               	btfss	status,0,c
 11010  001D7A  077C               	decf	(xtoa@i+1)& (0+255),f,b
 11011  001D7C                     
 11012                           ; BSR set to: 0
 11013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
 11014  001D7C  0E80               	movlw	low _dbuf
 11015  001D7E  257B               	addwf	xtoa@i& (0+255),w,b
 11016  001D80  6ED9               	movwf	fsr2l,c
 11017  001D82  0E01               	movlw	high _dbuf
 11018  001D84  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 11019  001D86  6EDA               	movwf	fsr2h,c
 11020  001D88  C06A  FFDF         	movff	xtoa@x,indf2
 11021  001D8C                     
 11022                           ; BSR set to: 0
 11023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 681:         --i;
 11024  001D8C  077B               	decf	xtoa@i& (0+255),f,b
 11025  001D8E  A0D8               	btfss	status,0,c
 11026  001D90  077C               	decf	(xtoa@i+1)& (0+255),f,b
 11027                           
 11028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
 11029  001D92  0E80               	movlw	low _dbuf
 11030  001D94  257B               	addwf	xtoa@i& (0+255),w,b
 11031  001D96  6ED9               	movwf	fsr2l,c
 11032  001D98  0E01               	movlw	high _dbuf
 11033  001D9A  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 11034  001D9C  6EDA               	movwf	fsr2h,c
 11035  001D9E  0E30               	movlw	48
 11036  001DA0  6EDF               	movwf	indf2,c
 11037  001DA2                     l5456:
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
 11041  001DA2  C060  F026         	movff	xtoa@fp,pad@fp
 11042  001DA6  C061  F027         	movff	xtoa@fp+1,pad@fp+1
 11043  001DAA  0E80               	movlw	low _dbuf
 11044  001DAC  257B               	addwf	xtoa@i& (0+255),w,b
 11045  001DAE  6E28               	movwf	pad@buf^0,c
 11046  001DB0  0E01               	movlw	high _dbuf
 11047  001DB2  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 11048  001DB4  6E29               	movwf	(pad@buf+1)^0,c
 11049  001DB6  C071  F02A         	movff	xtoa@w,pad@p
 11050  001DBA  C072  F02B         	movff	xtoa@w+1,pad@p+1
 11051  001DBE  EC25  F017         	call	_pad	;wreg free
 11052  001DC2  C026  F060         	movff	?_pad,?_xtoa
 11053  001DC6  C027  F061         	movff	?_pad+1,?_xtoa+1
 11054  001DCA  0012               	return		;funcret
 11055  001DCC                     __end_of_xtoa:
 11056                           	callstack 0
 11057                           
 11058 ;; *************** function _toupper *****************
 11059 ;; Defined at:
 11060 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\toupper.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  c               2   25[COMRAM] int 
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;		None
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  2   25[COMRAM] int 
 11067 ;; Registers used:
 11068 ;;		wreg, status,2, status,0
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11077 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11078 ;;Total ram usage:        8 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; Hardware stack levels required when called:    5
 11081 ;; This function calls:
 11082 ;;		_islower
 11083 ;; This function is called by:
 11084 ;;		_xtoa
 11085 ;; This function uses a non-reentrant model
 11086 ;;
 11087                           
 11088                           	psect	text30
 11089  0032B8                     __ptext30:
 11090                           	callstack 0
 11091  0032B8                     _toupper:
 11092                           	callstack 21
 11093  0032B8  0E9F               	movlw	159
 11094  0032BA  6E1C               	movwf	??_toupper^0,c
 11095  0032BC  0EFF               	movlw	255
 11096  0032BE  6E1D               	movwf	(??_toupper+1)^0,c
 11097  0032C0  C01A  F01E         	movff	toupper@c,??_toupper+2
 11098  0032C4  C01B  F01F         	movff	toupper@c+1,??_toupper+3
 11099  0032C8  501C               	movf	??_toupper^0,w,c
 11100  0032CA  261E               	addwf	(??_toupper+2)^0,f,c
 11101  0032CC  501D               	movf	(??_toupper+1)^0,w,c
 11102  0032CE  221F               	addwfc	(??_toupper+3)^0,f,c
 11103  0032D0  501F               	movf	(??_toupper+3)^0,w,c
 11104  0032D2  E10A               	bnz	u4910
 11105  0032D4  0E1A               	movlw	26
 11106  0032D6  5C1E               	subwf	(??_toupper+2)^0,w,c
 11107  0032D8  A0D8               	btfss	status,0,c
 11108  0032DA  EF71  F019         	goto	u4911
 11109  0032DE  EF74  F019         	goto	u4910
 11110  0032E2                     u4911:
 11111  0032E2  0E01               	movlw	1
 11112  0032E4  EF75  F019         	goto	u4920
 11113  0032E8                     u4910:
 11114  0032E8  0E00               	movlw	0
 11115  0032EA                     u4920:
 11116  0032EA  6E20               	movwf	_toupper$2118^0,c
 11117  0032EC  6A21               	clrf	(_toupper$2118+1)^0,c
 11118  0032EE  5020               	movf	_toupper$2118^0,w,c
 11119  0032F0  1021               	iorwf	(_toupper$2118+1)^0,w,c
 11120  0032F2  B4D8               	btfsc	status,2,c
 11121  0032F4  EF7E  F019         	goto	u4931
 11122  0032F8  EF80  F019         	goto	u4930
 11123  0032FC                     u4931:
 11124  0032FC  EF86  F019         	goto	l1668
 11125  003300                     u4930:
 11126  003300  0E5F               	movlw	95
 11127  003302  141A               	andwf	toupper@c^0,w,c
 11128  003304  6E1A               	movwf	?_toupper^0,c
 11129  003306  6A1B               	clrf	(?_toupper+1)^0,c
 11130  003308  EF8A  F019         	goto	l1673
 11131  00330C                     l1668:
 11132  00330C  C01A  F01A         	movff	toupper@c,?_toupper
 11133  003310  C01B  F01B         	movff	toupper@c+1,?_toupper+1
 11134  003314                     l1673:
 11135  003314  0012               	return		;funcret
 11136  003316                     __end_of_toupper:
 11137                           	callstack 0
 11138                           
 11139 ;; *************** function _islower *****************
 11140 ;; Defined at:
 11141 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\islower.c"
 11142 ;; Parameters:    Size  Location     Type
 11143 ;;  c               2   19[COMRAM] int 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;		None
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  2   19[COMRAM] int 
 11148 ;; Registers used:
 11149 ;;		wreg, status,2, status,0
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11159 ;;Total ram usage:        6 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:    4
 11162 ;; This function calls:
 11163 ;;		Nothing
 11164 ;; This function is called by:
 11165 ;;		_toupper
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text31
 11170  0034E2                     __ptext31:
 11171                           	callstack 0
 11172  0034E2                     _islower:
 11173                           	callstack 21
 11174  0034E2  0E9F               	movlw	159
 11175  0034E4  6E16               	movwf	??_islower^0,c
 11176  0034E6  0EFF               	movlw	255
 11177  0034E8  6E17               	movwf	(??_islower+1)^0,c
 11178  0034EA  C014  F018         	movff	islower@c,??_islower+2
 11179  0034EE  C015  F019         	movff	islower@c+1,??_islower+3
 11180  0034F2  5016               	movf	??_islower^0,w,c
 11181  0034F4  2618               	addwf	(??_islower+2)^0,f,c
 11182  0034F6  5017               	movf	(??_islower+1)^0,w,c
 11183  0034F8  2219               	addwfc	(??_islower+3)^0,f,c
 11184  0034FA  5019               	movf	(??_islower+3)^0,w,c
 11185  0034FC  E10A               	bnz	u4600
 11186  0034FE  0E1A               	movlw	26
 11187  003500  5C18               	subwf	(??_islower+2)^0,w,c
 11188  003502  A0D8               	btfss	status,0,c
 11189  003504  EF86  F01A         	goto	u4601
 11190  003508  EF89  F01A         	goto	u4600
 11191  00350C                     u4601:
 11192  00350C  0E01               	movlw	1
 11193  00350E  EF8A  F01A         	goto	u4610
 11194  003512                     u4600:
 11195  003512  0E00               	movlw	0
 11196  003514                     u4610:
 11197  003514  6E14               	movwf	?_islower^0,c
 11198  003516  6A15               	clrf	(?_islower+1)^0,c
 11199  003518  0012               	return		;funcret
 11200  00351A                     __end_of_islower:
 11201                           	callstack 0
 11202                           
 11203 ;; *************** function _isupper *****************
 11204 ;; Defined at:
 11205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isupper.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;  c               2   19[COMRAM] int 
 11208 ;; Auto vars:     Size  Location     Type
 11209 ;;		None
 11210 ;; Return value:  Size  Location     Type
 11211 ;;                  2   19[COMRAM] int 
 11212 ;; Registers used:
 11213 ;;		wreg, status,2, status,0
 11214 ;; Tracked objects:
 11215 ;;		On entry : 0/0
 11216 ;;		On exit  : 0/0
 11217 ;;		Unchanged: 0/0
 11218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11221 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;Total ram usage:        6 bytes
 11224 ;; Hardware stack levels used:    1
 11225 ;; Hardware stack levels required when called:    4
 11226 ;; This function calls:
 11227 ;;		Nothing
 11228 ;; This function is called by:
 11229 ;;		_xtoa
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           	psect	text32
 11234  00351A                     __ptext32:
 11235                           	callstack 0
 11236  00351A                     _isupper:
 11237                           	callstack 22
 11238  00351A  0EBF               	movlw	191
 11239  00351C  6E16               	movwf	??_isupper^0,c
 11240  00351E  0EFF               	movlw	255
 11241  003520  6E17               	movwf	(??_isupper+1)^0,c
 11242  003522  C014  F018         	movff	isupper@c,??_isupper+2
 11243  003526  C015  F019         	movff	isupper@c+1,??_isupper+3
 11244  00352A  5016               	movf	??_isupper^0,w,c
 11245  00352C  2618               	addwf	(??_isupper+2)^0,f,c
 11246  00352E  5017               	movf	(??_isupper+1)^0,w,c
 11247  003530  2219               	addwfc	(??_isupper+3)^0,f,c
 11248  003532  5019               	movf	(??_isupper+3)^0,w,c
 11249  003534  E10A               	bnz	u4870
 11250  003536  0E1A               	movlw	26
 11251  003538  5C18               	subwf	(??_isupper+2)^0,w,c
 11252  00353A  A0D8               	btfss	status,0,c
 11253  00353C  EFA2  F01A         	goto	u4871
 11254  003540  EFA5  F01A         	goto	u4870
 11255  003544                     u4871:
 11256  003544  0E01               	movlw	1
 11257  003546  EFA6  F01A         	goto	u4880
 11258  00354A                     u4870:
 11259  00354A  0E00               	movlw	0
 11260  00354C                     u4880:
 11261  00354C  6E14               	movwf	?_isupper^0,c
 11262  00354E  6A15               	clrf	(?_isupper+1)^0,c
 11263  003550  0012               	return		;funcret
 11264  003552                     __end_of_isupper:
 11265                           	callstack 0
 11266                           
 11267 ;; *************** function _isalpha *****************
 11268 ;; Defined at:
 11269 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isalpha.c"
 11270 ;; Parameters:    Size  Location     Type
 11271 ;;  c               2   19[COMRAM] int 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;		None
 11274 ;; Return value:  Size  Location     Type
 11275 ;;                  2   19[COMRAM] int 
 11276 ;; Registers used:
 11277 ;;		wreg, status,2, status,0
 11278 ;; Tracked objects:
 11279 ;;		On entry : 0/0
 11280 ;;		On exit  : 0/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11287 ;;Total ram usage:        6 bytes
 11288 ;; Hardware stack levels used:    1
 11289 ;; Hardware stack levels required when called:    4
 11290 ;; This function calls:
 11291 ;;		Nothing
 11292 ;; This function is called by:
 11293 ;;		_xtoa
 11294 ;; This function uses a non-reentrant model
 11295 ;;
 11296                           
 11297                           	psect	text33
 11298  00346E                     __ptext33:
 11299                           	callstack 0
 11300  00346E                     _isalpha:
 11301                           	callstack 22
 11302  00346E  0E9F               	movlw	159
 11303  003470  6E16               	movwf	??_isalpha^0,c
 11304  003472  0EFF               	movlw	255
 11305  003474  6E17               	movwf	(??_isalpha+1)^0,c
 11306  003476  0E20               	movlw	32
 11307  003478  1014               	iorwf	isalpha@c^0,w,c
 11308  00347A  6E18               	movwf	(??_isalpha+2)^0,c
 11309  00347C  0E00               	movlw	0
 11310  00347E  1015               	iorwf	(isalpha@c+1)^0,w,c
 11311  003480  6E19               	movwf	(??_isalpha+3)^0,c
 11312  003482  5016               	movf	??_isalpha^0,w,c
 11313  003484  2618               	addwf	(??_isalpha+2)^0,f,c
 11314  003486  5017               	movf	(??_isalpha+1)^0,w,c
 11315  003488  2219               	addwfc	(??_isalpha+3)^0,f,c
 11316  00348A  5019               	movf	(??_isalpha+3)^0,w,c
 11317  00348C  E10A               	bnz	u4890
 11318  00348E  0E1A               	movlw	26
 11319  003490  5C18               	subwf	(??_isalpha+2)^0,w,c
 11320  003492  A0D8               	btfss	status,0,c
 11321  003494  EF4E  F01A         	goto	u4891
 11322  003498  EF51  F01A         	goto	u4890
 11323  00349C                     u4891:
 11324  00349C  0E01               	movlw	1
 11325  00349E  EF52  F01A         	goto	u4900
 11326  0034A2                     u4890:
 11327  0034A2  0E00               	movlw	0
 11328  0034A4                     u4900:
 11329  0034A4  6E14               	movwf	?_isalpha^0,c
 11330  0034A6  6A15               	clrf	(?_isalpha+1)^0,c
 11331  0034A8  0012               	return		;funcret
 11332  0034AA                     __end_of_isalpha:
 11333                           	callstack 0
 11334                           
 11335 ;; *************** function _utoa *****************
 11336 ;; Defined at:
 11337 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11340 ;;		 -> NULL(0), 
 11341 ;;  d               8    2[BANK0 ] unsigned long long 
 11342 ;; Auto vars:     Size  Location     Type
 11343 ;;  n               8   14[BANK0 ] unsigned long long 
 11344 ;;  i               2   22[BANK0 ] int 
 11345 ;;  w               2   12[BANK0 ] int 
 11346 ;;  p               2   10[BANK0 ] int 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  2    0[BANK0 ] int 
 11349 ;; Registers used:
 11350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11356 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11357 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11358 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11359 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11360 ;;Total ram usage:       32 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:    9
 11363 ;; This function calls:
 11364 ;;		___lodiv
 11365 ;;		___lomod
 11366 ;;		_pad
 11367 ;; This function is called by:
 11368 ;;		_vfpfcnvrt
 11369 ;; This function uses a non-reentrant model
 11370 ;;
 11371                           
 11372                           	psect	text34
 11373  001FD8                     __ptext34:
 11374                           	callstack 0
 11375  001FD8                     _utoa:
 11376                           	callstack 18
 11377  001FD8                     
 11378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 11379  001FD8  BE3C               	btfsc	(_prec+1)^0,7,c
 11380  001FDA  EFF1  F00F         	goto	u5181
 11381  001FDE  EFF3  F00F         	goto	u5180
 11382  001FE2                     u5181:
 11383  001FE2  EFF4  F00F         	goto	l5362
 11384  001FE6                     u5180:
 11385  001FE6                     
 11386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 11387  001FE6  923D               	bcf	_flags^0,1,c
 11388  001FE8                     l5362:
 11389                           
 11390                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 11391  001FE8  BE3C               	btfsc	(_prec+1)^0,7,c
 11392  001FEA  EF01  F010         	goto	u5190
 11393  001FEE  503C               	movf	(_prec+1)^0,w,c
 11394  001FF0  E106               	bnz	u5191
 11395  001FF2  043B               	decf	_prec^0,w,c
 11396  001FF4  B0D8               	btfsc	status,0,c
 11397  001FF6  EFFF  F00F         	goto	u5191
 11398  001FFA  EF01  F010         	goto	u5190
 11399  001FFE                     u5191:
 11400  001FFE  EF08  F010         	goto	l1492
 11401  002002                     u5190:
 11402  002002  0E00               	movlw	0
 11403  002004  0100               	movlb	0	; () banked
 11404  002006  6F6B               	movwf	(utoa@p+1)& (0+255),b
 11405  002008  0E01               	movlw	1
 11406  00200A  6F6A               	movwf	utoa@p& (0+255),b
 11407  00200C  EF0C  F010         	goto	l1494
 11408  002010                     l1492:
 11409  002010  C03B  F06A         	movff	_prec,utoa@p
 11410  002014  C03C  F06B         	movff	_prec+1,utoa@p+1
 11411  002018                     l1494:
 11412                           
 11413                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 11414  002018  C039  F06C         	movff	_width,utoa@w
 11415  00201C  C03A  F06D         	movff	_width+1,utoa@w+1
 11416                           
 11417                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 628:     n = d;
 11418  002020  C062  F06E         	movff	utoa@d,utoa@n
 11419  002024  C063  F06F         	movff	utoa@d+1,utoa@n+1
 11420  002028  C064  F070         	movff	utoa@d+2,utoa@n+2
 11421  00202C  C065  F071         	movff	utoa@d+3,utoa@n+3
 11422  002030  C066  F072         	movff	utoa@d+4,utoa@n+4
 11423  002034  C067  F073         	movff	utoa@d+5,utoa@n+5
 11424  002038  C068  F074         	movff	utoa@d+6,utoa@n+6
 11425  00203C  C069  F075         	movff	utoa@d+7,utoa@n+7
 11426  002040                     
 11427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 11428  002040  0E00               	movlw	0
 11429  002042  0100               	movlb	0	; () banked
 11430  002044  6F77               	movwf	(utoa@i+1)& (0+255),b
 11431  002046  0E1F               	movlw	31
 11432  002048  6F76               	movwf	utoa@i& (0+255),b
 11433  00204A                     
 11434                           ; BSR set to: 0
 11435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 11436  00204A  0E00               	movlw	0
 11437  00204C  0101               	movlb	1	; () banked
 11438  00204E  6F9F               	movwf	(_dbuf+31)& (0+255),b
 11439                           
 11440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11441  002050  EFA1  F010         	goto	l5380
 11442  002054                     l5370:
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 632:         --i;
 11446  002054  0776               	decf	utoa@i& (0+255),f,b
 11447  002056  A0D8               	btfss	status,0,c
 11448  002058  0777               	decf	(utoa@i+1)& (0+255),f,b
 11449  00205A                     
 11450                           ; BSR set to: 0
 11451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 11452  00205A  0E80               	movlw	low _dbuf
 11453  00205C  2576               	addwf	utoa@i& (0+255),w,b
 11454  00205E  6ED9               	movwf	fsr2l,c
 11455  002060  0E01               	movlw	high _dbuf
 11456  002062  2177               	addwfc	(utoa@i+1)& (0+255),w,b
 11457  002064  6EDA               	movwf	fsr2h,c
 11458  002066  C06E  F014         	movff	utoa@n,___lomod@dividend
 11459  00206A  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
 11460  00206E  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
 11461  002072  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
 11462  002076  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
 11463  00207A  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
 11464  00207E  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
 11465  002082  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
 11466  002086  0E0A               	movlw	10
 11467  002088  6E1C               	movwf	___lomod@divisor^0,c
 11468  00208A  0E00               	movlw	0
 11469  00208C  6E1D               	movwf	(___lomod@divisor+1)^0,c
 11470  00208E  0E00               	movlw	0
 11471  002090  6E1E               	movwf	(___lomod@divisor+2)^0,c
 11472  002092  0E00               	movlw	0
 11473  002094  6E1F               	movwf	(___lomod@divisor+3)^0,c
 11474  002096  0E00               	movlw	0
 11475  002098  6E20               	movwf	(___lomod@divisor+4)^0,c
 11476  00209A  0E00               	movlw	0
 11477  00209C  6E21               	movwf	(___lomod@divisor+5)^0,c
 11478  00209E  0E00               	movlw	0
 11479  0020A0  6E22               	movwf	(___lomod@divisor+6)^0,c
 11480  0020A2  0E00               	movlw	0
 11481  0020A4  6E23               	movwf	(___lomod@divisor+7)^0,c
 11482  0020A6  ECBD  F016         	call	___lomod	;wreg free
 11483  0020AA  C014  F031         	movff	?___lomod,??_utoa
 11484  0020AE  C015  F032         	movff	?___lomod+1,??_utoa+1
 11485  0020B2  C016  F033         	movff	?___lomod+2,??_utoa+2
 11486  0020B6  C017  F034         	movff	?___lomod+3,??_utoa+3
 11487  0020BA  C018  F035         	movff	?___lomod+4,??_utoa+4
 11488  0020BE  C019  F036         	movff	?___lomod+5,??_utoa+5
 11489  0020C2  C01A  F037         	movff	?___lomod+6,??_utoa+6
 11490  0020C6  C01B  F038         	movff	?___lomod+7,??_utoa+7
 11491  0020CA  5031               	movf	??_utoa^0,w,c
 11492  0020CC  0F30               	addlw	48
 11493  0020CE  6EDF               	movwf	indf2,c
 11494  0020D0                     
 11495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 634:         --p;
 11496  0020D0  0100               	movlb	0	; () banked
 11497  0020D2  076A               	decf	utoa@p& (0+255),f,b
 11498  0020D4  A0D8               	btfss	status,0,c
 11499  0020D6  076B               	decf	(utoa@p+1)& (0+255),f,b
 11500  0020D8                     
 11501                           ; BSR set to: 0
 11502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 635:         --w;
 11503  0020D8  076C               	decf	utoa@w& (0+255),f,b
 11504  0020DA  A0D8               	btfss	status,0,c
 11505  0020DC  076D               	decf	(utoa@w+1)& (0+255),f,b
 11506  0020DE                     
 11507                           ; BSR set to: 0
 11508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 11509  0020DE  C06E  F014         	movff	utoa@n,___lodiv@dividend
 11510  0020E2  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
 11511  0020E6  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
 11512  0020EA  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
 11513  0020EE  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
 11514  0020F2  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
 11515  0020F6  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
 11516  0020FA  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
 11517  0020FE  0E0A               	movlw	10
 11518  002100  6E1C               	movwf	___lodiv@divisor^0,c
 11519  002102  0E00               	movlw	0
 11520  002104  6E1D               	movwf	(___lodiv@divisor+1)^0,c
 11521  002106  0E00               	movlw	0
 11522  002108  6E1E               	movwf	(___lodiv@divisor+2)^0,c
 11523  00210A  0E00               	movlw	0
 11524  00210C  6E1F               	movwf	(___lodiv@divisor+3)^0,c
 11525  00210E  0E00               	movlw	0
 11526  002110  6E20               	movwf	(___lodiv@divisor+4)^0,c
 11527  002112  0E00               	movlw	0
 11528  002114  6E21               	movwf	(___lodiv@divisor+5)^0,c
 11529  002116  0E00               	movlw	0
 11530  002118  6E22               	movwf	(___lodiv@divisor+6)^0,c
 11531  00211A  0E00               	movlw	0
 11532  00211C  6E23               	movwf	(___lodiv@divisor+7)^0,c
 11533  00211E  ECDB  F015         	call	___lodiv	;wreg free
 11534  002122  C014  F06E         	movff	?___lodiv,utoa@n
 11535  002126  C015  F06F         	movff	?___lodiv+1,utoa@n+1
 11536  00212A  C016  F070         	movff	?___lodiv+2,utoa@n+2
 11537  00212E  C017  F071         	movff	?___lodiv+3,utoa@n+3
 11538  002132  C018  F072         	movff	?___lodiv+4,utoa@n+4
 11539  002136  C019  F073         	movff	?___lodiv+5,utoa@n+5
 11540  00213A  C01A  F074         	movff	?___lodiv+6,utoa@n+6
 11541  00213E  C01B  F075         	movff	?___lodiv+7,utoa@n+7
 11542  002142                     l5380:
 11543                           
 11544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11545  002142  0100               	movlb	0	; () banked
 11546  002144  5176               	movf	utoa@i& (0+255),w,b
 11547  002146  1177               	iorwf	(utoa@i+1)& (0+255),w,b
 11548  002148  B4D8               	btfsc	status,2,c
 11549  00214A  EFA9  F010         	goto	u5201
 11550  00214E  EFAB  F010         	goto	u5200
 11551  002152                     u5201:
 11552  002152  EFDB  F010         	goto	l5390
 11553  002156                     u5200:
 11554  002156                     
 11555                           ; BSR set to: 0
 11556  002156  516E               	movf	utoa@n& (0+255),w,b
 11557  002158  116F               	iorwf	(utoa@n+1)& (0+255),w,b
 11558  00215A  1170               	iorwf	(utoa@n+2)& (0+255),w,b
 11559  00215C  1171               	iorwf	(utoa@n+3)& (0+255),w,b
 11560  00215E  1172               	iorwf	(utoa@n+4)& (0+255),w,b
 11561  002160  1173               	iorwf	(utoa@n+5)& (0+255),w,b
 11562  002162  1174               	iorwf	(utoa@n+6)& (0+255),w,b
 11563  002164  1175               	iorwf	(utoa@n+7)& (0+255),w,b
 11564  002166  A4D8               	btfss	status,2,c
 11565  002168  EFB8  F010         	goto	u5211
 11566  00216C  EFBA  F010         	goto	u5210
 11567  002170                     u5211:
 11568  002170  EF2A  F010         	goto	l5370
 11569  002174                     u5210:
 11570  002174                     
 11571                           ; BSR set to: 0
 11572  002174  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
 11573  002176  EFC7  F010         	goto	u5220
 11574  00217A  516B               	movf	(utoa@p+1)& (0+255),w,b
 11575  00217C  E106               	bnz	u5221
 11576  00217E  056A               	decf	utoa@p& (0+255),w,b
 11577  002180  B0D8               	btfsc	status,0,c
 11578  002182  EFC5  F010         	goto	u5221
 11579  002186  EFC7  F010         	goto	u5220
 11580  00218A                     u5221:
 11581  00218A  EF2A  F010         	goto	l5370
 11582  00218E                     u5220:
 11583  00218E                     
 11584                           ; BSR set to: 0
 11585  00218E  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
 11586  002190  EFD2  F010         	goto	u5231
 11587  002194  516D               	movf	(utoa@w+1)& (0+255),w,b
 11588  002196  E108               	bnz	u5230
 11589  002198  056C               	decf	utoa@w& (0+255),w,b
 11590  00219A  A0D8               	btfss	status,0,c
 11591  00219C  EFD2  F010         	goto	u5231
 11592  0021A0  EFD4  F010         	goto	u5230
 11593  0021A4                     u5231:
 11594  0021A4  EFDB  F010         	goto	l5390
 11595  0021A8                     u5230:
 11596  0021A8                     
 11597                           ; BSR set to: 0
 11598  0021A8  B23D               	btfsc	_flags^0,1,c
 11599  0021AA  EFD9  F010         	goto	u5241
 11600  0021AE  EFDB  F010         	goto	u5240
 11601  0021B2                     u5241:
 11602  0021B2  EF2A  F010         	goto	l5370
 11603  0021B6                     u5240:
 11604  0021B6                     l5390:
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 11608  0021B6  C060  F026         	movff	utoa@fp,pad@fp
 11609  0021BA  C061  F027         	movff	utoa@fp+1,pad@fp+1
 11610  0021BE  0E80               	movlw	low _dbuf
 11611  0021C0  2576               	addwf	utoa@i& (0+255),w,b
 11612  0021C2  6E28               	movwf	pad@buf^0,c
 11613  0021C4  0E01               	movlw	high _dbuf
 11614  0021C6  2177               	addwfc	(utoa@i+1)& (0+255),w,b
 11615  0021C8  6E29               	movwf	(pad@buf+1)^0,c
 11616  0021CA  C06C  F02A         	movff	utoa@w,pad@p
 11617  0021CE  C06D  F02B         	movff	utoa@w+1,pad@p+1
 11618  0021D2  EC25  F017         	call	_pad	;wreg free
 11619  0021D6  C026  F060         	movff	?_pad,?_utoa
 11620  0021DA  C027  F061         	movff	?_pad+1,?_utoa+1
 11621  0021DE  0012               	return		;funcret
 11622  0021E0                     __end_of_utoa:
 11623                           	callstack 0
 11624                           
 11625 ;; *************** function ___lomod *****************
 11626 ;; Defined at:
 11627 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lomod.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  dividend        8   19[COMRAM] unsigned long long 
 11630 ;;  divisor         8   27[COMRAM] unsigned long long 
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;  counter         1   35[COMRAM] unsigned char 
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  8   19[COMRAM] unsigned long long 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2, status,0
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11642 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11645 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11646 ;;Total ram usage:       17 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; Hardware stack levels required when called:    4
 11649 ;; This function calls:
 11650 ;;		Nothing
 11651 ;; This function is called by:
 11652 ;;		_utoa
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text35
 11657  002D7A                     __ptext35:
 11658                           	callstack 0
 11659  002D7A                     ___lomod:
 11660                           	callstack 22
 11661  002D7A  501C               	movf	___lomod@divisor^0,w,c
 11662  002D7C  101D               	iorwf	(___lomod@divisor+1)^0,w,c
 11663  002D7E  101E               	iorwf	(___lomod@divisor+2)^0,w,c
 11664  002D80  101F               	iorwf	(___lomod@divisor+3)^0,w,c
 11665  002D82  1020               	iorwf	(___lomod@divisor+4)^0,w,c
 11666  002D84  1021               	iorwf	(___lomod@divisor+5)^0,w,c
 11667  002D86  1022               	iorwf	(___lomod@divisor+6)^0,w,c
 11668  002D88  1023               	iorwf	(___lomod@divisor+7)^0,w,c
 11669  002D8A  B4D8               	btfsc	status,2,c
 11670  002D8C  EFCA  F016         	goto	u4791
 11671  002D90  EFCC  F016         	goto	u4790
 11672  002D94                     u4791:
 11673  002D94  EF14  F017         	goto	l1173
 11674  002D98                     u4790:
 11675  002D98  0E01               	movlw	1
 11676  002D9A  6E24               	movwf	___lomod@counter^0,c
 11677  002D9C  EFDA  F016         	goto	l5198
 11678  002DA0                     l5196:
 11679  002DA0  90D8               	bcf	status,0,c
 11680  002DA2  361C               	rlcf	___lomod@divisor^0,f,c
 11681  002DA4  361D               	rlcf	(___lomod@divisor+1)^0,f,c
 11682  002DA6  361E               	rlcf	(___lomod@divisor+2)^0,f,c
 11683  002DA8  361F               	rlcf	(___lomod@divisor+3)^0,f,c
 11684  002DAA  3620               	rlcf	(___lomod@divisor+4)^0,f,c
 11685  002DAC  3621               	rlcf	(___lomod@divisor+5)^0,f,c
 11686  002DAE  3622               	rlcf	(___lomod@divisor+6)^0,f,c
 11687  002DB0  3623               	rlcf	(___lomod@divisor+7)^0,f,c
 11688  002DB2  2A24               	incf	___lomod@counter^0,f,c
 11689  002DB4                     l5198:
 11690  002DB4  AE23               	btfss	(___lomod@divisor+7)^0,7,c
 11691  002DB6  EFDF  F016         	goto	u4801
 11692  002DBA  EFE1  F016         	goto	u4800
 11693  002DBE                     u4801:
 11694  002DBE  EFD0  F016         	goto	l5196
 11695  002DC2                     u4800:
 11696  002DC2                     l5200:
 11697  002DC2  501C               	movf	___lomod@divisor^0,w,c
 11698  002DC4  5C14               	subwf	___lomod@dividend^0,w,c
 11699  002DC6  501D               	movf	(___lomod@divisor+1)^0,w,c
 11700  002DC8  5815               	subwfb	(___lomod@dividend+1)^0,w,c
 11701  002DCA  501E               	movf	(___lomod@divisor+2)^0,w,c
 11702  002DCC  5816               	subwfb	(___lomod@dividend+2)^0,w,c
 11703  002DCE  501F               	movf	(___lomod@divisor+3)^0,w,c
 11704  002DD0  5817               	subwfb	(___lomod@dividend+3)^0,w,c
 11705  002DD2  5020               	movf	(___lomod@divisor+4)^0,w,c
 11706  002DD4  5818               	subwfb	(___lomod@dividend+4)^0,w,c
 11707  002DD6  5021               	movf	(___lomod@divisor+5)^0,w,c
 11708  002DD8  5819               	subwfb	(___lomod@dividend+5)^0,w,c
 11709  002DDA  5022               	movf	(___lomod@divisor+6)^0,w,c
 11710  002DDC  581A               	subwfb	(___lomod@dividend+6)^0,w,c
 11711  002DDE  5023               	movf	(___lomod@divisor+7)^0,w,c
 11712  002DE0  581B               	subwfb	(___lomod@dividend+7)^0,w,c
 11713  002DE2  A0D8               	btfss	status,0,c
 11714  002DE4  EFF6  F016         	goto	u4811
 11715  002DE8  EFF8  F016         	goto	u4810
 11716  002DEC                     u4811:
 11717  002DEC  EF08  F017         	goto	l5204
 11718  002DF0                     u4810:
 11719  002DF0  501C               	movf	___lomod@divisor^0,w,c
 11720  002DF2  5E14               	subwf	___lomod@dividend^0,f,c
 11721  002DF4  501D               	movf	(___lomod@divisor+1)^0,w,c
 11722  002DF6  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
 11723  002DF8  501E               	movf	(___lomod@divisor+2)^0,w,c
 11724  002DFA  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
 11725  002DFC  501F               	movf	(___lomod@divisor+3)^0,w,c
 11726  002DFE  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
 11727  002E00  5020               	movf	(___lomod@divisor+4)^0,w,c
 11728  002E02  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
 11729  002E04  5021               	movf	(___lomod@divisor+5)^0,w,c
 11730  002E06  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
 11731  002E08  5022               	movf	(___lomod@divisor+6)^0,w,c
 11732  002E0A  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
 11733  002E0C  5023               	movf	(___lomod@divisor+7)^0,w,c
 11734  002E0E  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
 11735  002E10                     l5204:
 11736  002E10  90D8               	bcf	status,0,c
 11737  002E12  3223               	rrcf	(___lomod@divisor+7)^0,f,c
 11738  002E14  3222               	rrcf	(___lomod@divisor+6)^0,f,c
 11739  002E16  3221               	rrcf	(___lomod@divisor+5)^0,f,c
 11740  002E18  3220               	rrcf	(___lomod@divisor+4)^0,f,c
 11741  002E1A  321F               	rrcf	(___lomod@divisor+3)^0,f,c
 11742  002E1C  321E               	rrcf	(___lomod@divisor+2)^0,f,c
 11743  002E1E  321D               	rrcf	(___lomod@divisor+1)^0,f,c
 11744  002E20  321C               	rrcf	___lomod@divisor^0,f,c
 11745  002E22  2E24               	decfsz	___lomod@counter^0,f,c
 11746  002E24  EFE1  F016         	goto	l5200
 11747  002E28                     l1173:
 11748  002E28  C014  F014         	movff	___lomod@dividend,?___lomod
 11749  002E2C  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
 11750  002E30  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
 11751  002E34  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
 11752  002E38  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
 11753  002E3C  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
 11754  002E40  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
 11755  002E44  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
 11756  002E48  0012               	return		;funcret
 11757  002E4A                     __end_of___lomod:
 11758                           	callstack 0
 11759                           
 11760 ;; *************** function ___lodiv *****************
 11761 ;; Defined at:
 11762 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lodiv.c"
 11763 ;; Parameters:    Size  Location     Type
 11764 ;;  dividend        8   19[COMRAM] unsigned long long 
 11765 ;;  divisor         8   27[COMRAM] unsigned long long 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  quotient        8   35[COMRAM] unsigned long long 
 11768 ;;  counter         1   43[COMRAM] unsigned char 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  8   19[COMRAM] unsigned long long 
 11771 ;; Registers used:
 11772 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11778 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11779 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11781 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;Total ram usage:       25 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    4
 11785 ;; This function calls:
 11786 ;;		Nothing
 11787 ;; This function is called by:
 11788 ;;		_utoa
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           	psect	text36
 11793  002BB6                     __ptext36:
 11794                           	callstack 0
 11795  002BB6                     ___lodiv:
 11796                           	callstack 22
 11797  002BB6  EE20  F024         	lfsr	2,___lodiv@quotient
 11798  002BBA  0E07               	movlw	7
 11799  002BBC                     u4751:
 11800  002BBC  6ADE               	clrf	postinc2,c
 11801  002BBE  06E8               	decf	wreg,f,c
 11802  002BC0  E2FD               	bc	u4751
 11803  002BC2  501C               	movf	___lodiv@divisor^0,w,c
 11804  002BC4  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
 11805  002BC6  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
 11806  002BC8  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
 11807  002BCA  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
 11808  002BCC  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
 11809  002BCE  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
 11810  002BD0  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
 11811  002BD2  B4D8               	btfsc	status,2,c
 11812  002BD4  EFEE  F015         	goto	u4761
 11813  002BD8  EFF0  F015         	goto	u4760
 11814  002BDC                     u4761:
 11815  002BDC  EF42  F016         	goto	l1163
 11816  002BE0                     u4760:
 11817  002BE0  0E01               	movlw	1
 11818  002BE2  6E2C               	movwf	___lodiv@counter^0,c
 11819  002BE4  EFFE  F015         	goto	l5178
 11820  002BE8                     l5176:
 11821  002BE8  90D8               	bcf	status,0,c
 11822  002BEA  361C               	rlcf	___lodiv@divisor^0,f,c
 11823  002BEC  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
 11824  002BEE  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
 11825  002BF0  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
 11826  002BF2  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
 11827  002BF4  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
 11828  002BF6  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
 11829  002BF8  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
 11830  002BFA  2A2C               	incf	___lodiv@counter^0,f,c
 11831  002BFC                     l5178:
 11832  002BFC  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
 11833  002BFE  EF03  F016         	goto	u4771
 11834  002C02  EF05  F016         	goto	u4770
 11835  002C06                     u4771:
 11836  002C06  EFF4  F015         	goto	l5176
 11837  002C0A                     u4770:
 11838  002C0A                     l5180:
 11839  002C0A  90D8               	bcf	status,0,c
 11840  002C0C  3624               	rlcf	___lodiv@quotient^0,f,c
 11841  002C0E  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
 11842  002C10  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
 11843  002C12  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
 11844  002C14  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
 11845  002C16  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
 11846  002C18  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
 11847  002C1A  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
 11848  002C1C  501C               	movf	___lodiv@divisor^0,w,c
 11849  002C1E  5C14               	subwf	___lodiv@dividend^0,w,c
 11850  002C20  501D               	movf	(___lodiv@divisor+1)^0,w,c
 11851  002C22  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
 11852  002C24  501E               	movf	(___lodiv@divisor+2)^0,w,c
 11853  002C26  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
 11854  002C28  501F               	movf	(___lodiv@divisor+3)^0,w,c
 11855  002C2A  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
 11856  002C2C  5020               	movf	(___lodiv@divisor+4)^0,w,c
 11857  002C2E  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
 11858  002C30  5021               	movf	(___lodiv@divisor+5)^0,w,c
 11859  002C32  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
 11860  002C34  5022               	movf	(___lodiv@divisor+6)^0,w,c
 11861  002C36  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
 11862  002C38  5023               	movf	(___lodiv@divisor+7)^0,w,c
 11863  002C3A  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
 11864  002C3C  A0D8               	btfss	status,0,c
 11865  002C3E  EF23  F016         	goto	u4781
 11866  002C42  EF25  F016         	goto	u4780
 11867  002C46                     u4781:
 11868  002C46  EF36  F016         	goto	l5188
 11869  002C4A                     u4780:
 11870  002C4A  501C               	movf	___lodiv@divisor^0,w,c
 11871  002C4C  5E14               	subwf	___lodiv@dividend^0,f,c
 11872  002C4E  501D               	movf	(___lodiv@divisor+1)^0,w,c
 11873  002C50  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
 11874  002C52  501E               	movf	(___lodiv@divisor+2)^0,w,c
 11875  002C54  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
 11876  002C56  501F               	movf	(___lodiv@divisor+3)^0,w,c
 11877  002C58  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
 11878  002C5A  5020               	movf	(___lodiv@divisor+4)^0,w,c
 11879  002C5C  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
 11880  002C5E  5021               	movf	(___lodiv@divisor+5)^0,w,c
 11881  002C60  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
 11882  002C62  5022               	movf	(___lodiv@divisor+6)^0,w,c
 11883  002C64  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
 11884  002C66  5023               	movf	(___lodiv@divisor+7)^0,w,c
 11885  002C68  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
 11886  002C6A  8024               	bsf	___lodiv@quotient^0,0,c
 11887  002C6C                     l5188:
 11888  002C6C  90D8               	bcf	status,0,c
 11889  002C6E  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
 11890  002C70  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
 11891  002C72  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
 11892  002C74  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
 11893  002C76  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
 11894  002C78  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
 11895  002C7A  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
 11896  002C7C  321C               	rrcf	___lodiv@divisor^0,f,c
 11897  002C7E  2E2C               	decfsz	___lodiv@counter^0,f,c
 11898  002C80  EF05  F016         	goto	l5180
 11899  002C84                     l1163:
 11900  002C84  C024  F014         	movff	___lodiv@quotient,?___lodiv
 11901  002C88  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
 11902  002C8C  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
 11903  002C90  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
 11904  002C94  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
 11905  002C98  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
 11906  002C9C  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
 11907  002CA0  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
 11908  002CA4  0012               	return		;funcret
 11909  002CA6                     __end_of___lodiv:
 11910                           	callstack 0
 11911                           
 11912 ;; *************** function _dtoa *****************
 11913 ;; Defined at:
 11914 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11917 ;;		 -> NULL(0), 
 11918 ;;  d               8    2[BANK0 ] long long 
 11919 ;; Auto vars:     Size  Location     Type
 11920 ;;  n               8   18[BANK0 ] long long 
 11921 ;;  i               2   26[BANK0 ] int 
 11922 ;;  s               2   16[BANK0 ] int 
 11923 ;;  w               2   14[BANK0 ] int 
 11924 ;;  p               2   12[BANK0 ] int 
 11925 ;; Return value:  Size  Location     Type
 11926 ;;                  2    0[BANK0 ] int 
 11927 ;; Registers used:
 11928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11929 ;; Tracked objects:
 11930 ;;		On entry : 0/0
 11931 ;;		On exit  : 0/0
 11932 ;;		Unchanged: 0/0
 11933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11934 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11935 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11936 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11937 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11938 ;;Total ram usage:       36 bytes
 11939 ;; Hardware stack levels used:    1
 11940 ;; Hardware stack levels required when called:    9
 11941 ;; This function calls:
 11942 ;;		___aodiv
 11943 ;;		___aomod
 11944 ;;		_abs
 11945 ;;		_pad
 11946 ;; This function is called by:
 11947 ;;		_vfpfcnvrt
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text37
 11952  00180A                     __ptext37:
 11953                           	callstack 0
 11954  00180A                     _dtoa:
 11955                           	callstack 18
 11956  00180A                     
 11957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 11958  00180A  C062  F072         	movff	dtoa@d,dtoa@n
 11959  00180E  C063  F073         	movff	dtoa@d+1,dtoa@n+1
 11960  001812  C064  F074         	movff	dtoa@d+2,dtoa@n+2
 11961  001816  C065  F075         	movff	dtoa@d+3,dtoa@n+3
 11962  00181A  C066  F076         	movff	dtoa@d+4,dtoa@n+4
 11963  00181E  C067  F077         	movff	dtoa@d+5,dtoa@n+5
 11964  001822  C068  F078         	movff	dtoa@d+6,dtoa@n+6
 11965  001826  C069  F079         	movff	dtoa@d+7,dtoa@n+7
 11966  00182A                     
 11967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 11968  00182A  0100               	movlb	0	; () banked
 11969  00182C  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
 11970  00182E  EF1B  F00C         	goto	u5031
 11971  001832  EF1E  F00C         	goto	u5030
 11972  001836                     u5031:
 11973  001836  0E01               	movlw	1
 11974  001838  EF1F  F00C         	goto	u5040
 11975  00183C                     u5030:
 11976  00183C  0E00               	movlw	0
 11977  00183E                     u5040:
 11978  00183E  6F70               	movwf	dtoa@s& (0+255),b
 11979  001840  6B71               	clrf	(dtoa@s+1)& (0+255),b
 11980                           
 11981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 11982  001842  5170               	movf	dtoa@s& (0+255),w,b
 11983  001844  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 11984  001846  B4D8               	btfsc	status,2,c
 11985  001848  EF28  F00C         	goto	u5051
 11986  00184C  EF2A  F00C         	goto	u5050
 11987  001850                     u5051:
 11988  001850  EF3A  F00C         	goto	l5302
 11989  001854                     u5050:
 11990  001854                     
 11991                           ; BSR set to: 0
 11992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 11993  001854  1F79               	comf	(dtoa@n+7)& (0+255),f,b
 11994  001856  1F78               	comf	(dtoa@n+6)& (0+255),f,b
 11995  001858  1F77               	comf	(dtoa@n+5)& (0+255),f,b
 11996  00185A  1F76               	comf	(dtoa@n+4)& (0+255),f,b
 11997  00185C  1F75               	comf	(dtoa@n+3)& (0+255),f,b
 11998  00185E  1F74               	comf	(dtoa@n+2)& (0+255),f,b
 11999  001860  1F73               	comf	(dtoa@n+1)& (0+255),f,b
 12000  001862  6D72               	negf	dtoa@n& (0+255),b
 12001  001864  0E00               	movlw	0
 12002  001866  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
 12003  001868  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
 12004  00186A  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
 12005  00186C  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
 12006  00186E  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
 12007  001870  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
 12008  001872  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
 12009  001874                     l5302:
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12013  001874  BE3C               	btfsc	(_prec+1)^0,7,c
 12014  001876  EF3F  F00C         	goto	u5061
 12015  00187A  EF41  F00C         	goto	u5060
 12016  00187E                     u5061:
 12017  00187E  EF42  F00C         	goto	l5306
 12018  001882                     u5060:
 12019  001882                     
 12020                           ; BSR set to: 0
 12021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12022  001882  923D               	bcf	_flags^0,1,c
 12023  001884                     l5306:
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12027  001884  BE3C               	btfsc	(_prec+1)^0,7,c
 12028  001886  EF4F  F00C         	goto	u5070
 12029  00188A  503C               	movf	(_prec+1)^0,w,c
 12030  00188C  E106               	bnz	u5071
 12031  00188E  043B               	decf	_prec^0,w,c
 12032  001890  B0D8               	btfsc	status,0,c
 12033  001892  EF4D  F00C         	goto	u5071
 12034  001896  EF4F  F00C         	goto	u5070
 12035  00189A                     u5071:
 12036  00189A  EF55  F00C         	goto	l1467
 12037  00189E                     u5070:
 12038  00189E                     
 12039                           ; BSR set to: 0
 12040  00189E  0E00               	movlw	0
 12041  0018A0  6F6D               	movwf	(dtoa@p+1)& (0+255),b
 12042  0018A2  0E01               	movlw	1
 12043  0018A4  6F6C               	movwf	dtoa@p& (0+255),b
 12044  0018A6  EF59  F00C         	goto	l1469
 12045  0018AA                     l1467:
 12046                           
 12047                           ; BSR set to: 0
 12048  0018AA  C03B  F06C         	movff	_prec,dtoa@p
 12049  0018AE  C03C  F06D         	movff	_prec+1,dtoa@p+1
 12050  0018B2                     l1469:
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12054  0018B2  C039  F06E         	movff	_width,dtoa@w
 12055  0018B6  C03A  F06F         	movff	_width+1,dtoa@w+1
 12056  0018BA                     
 12057                           ; BSR set to: 0
 12058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12059  0018BA  5170               	movf	dtoa@s& (0+255),w,b
 12060  0018BC  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12061  0018BE  A4D8               	btfss	status,2,c
 12062  0018C0  EF64  F00C         	goto	u5081
 12063  0018C4  EF66  F00C         	goto	u5080
 12064  0018C8                     u5081:
 12065  0018C8  EF6D  F00C         	goto	l5314
 12066  0018CC                     u5080:
 12067  0018CC                     
 12068                           ; BSR set to: 0
 12069  0018CC  A43D               	btfss	_flags^0,2,c
 12070  0018CE  EF6B  F00C         	goto	u5091
 12071  0018D2  EF6D  F00C         	goto	u5090
 12072  0018D6                     u5091:
 12073  0018D6  EF70  F00C         	goto	l5316
 12074  0018DA                     u5090:
 12075  0018DA                     l5314:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
 12079  0018DA  076E               	decf	dtoa@w& (0+255),f,b
 12080  0018DC  A0D8               	btfss	status,0,c
 12081  0018DE  076F               	decf	(dtoa@w+1)& (0+255),f,b
 12082  0018E0                     l5316:
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12086  0018E0  0E00               	movlw	0
 12087  0018E2  6F7B               	movwf	(dtoa@i+1)& (0+255),b
 12088  0018E4  0E1F               	movlw	31
 12089  0018E6  6F7A               	movwf	dtoa@i& (0+255),b
 12090  0018E8                     
 12091                           ; BSR set to: 0
 12092                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12093  0018E8  0E00               	movlw	0
 12094  0018EA  0101               	movlb	1	; () banked
 12095  0018EC  6F9F               	movwf	(_dbuf+31)& (0+255),b
 12096                           
 12097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12098  0018EE  EFF6  F00C         	goto	l5330
 12099  0018F2                     l5320:
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
 12103  0018F2  077A               	decf	dtoa@i& (0+255),f,b
 12104  0018F4  A0D8               	btfss	status,0,c
 12105  0018F6  077B               	decf	(dtoa@i+1)& (0+255),f,b
 12106  0018F8                     
 12107                           ; BSR set to: 0
 12108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12109  0018F8  0E80               	movlw	low _dbuf
 12110  0018FA  257A               	addwf	dtoa@i& (0+255),w,b
 12111  0018FC  6ED9               	movwf	fsr2l,c
 12112  0018FE  0E01               	movlw	high _dbuf
 12113  001900  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12114  001902  6EDA               	movwf	fsr2h,c
 12115  001904  C072  F014         	movff	dtoa@n,___aomod@dividend
 12116  001908  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
 12117  00190C  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
 12118  001910  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
 12119  001914  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
 12120  001918  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
 12121  00191C  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
 12122  001920  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
 12123  001924  0E0A               	movlw	10
 12124  001926  6E1C               	movwf	___aomod@divisor^0,c
 12125  001928  0E00               	movlw	0
 12126  00192A  6E1D               	movwf	(___aomod@divisor+1)^0,c
 12127  00192C  0E00               	movlw	0
 12128  00192E  6E1E               	movwf	(___aomod@divisor+2)^0,c
 12129  001930  0E00               	movlw	0
 12130  001932  6E1F               	movwf	(___aomod@divisor+3)^0,c
 12131  001934  0E00               	movlw	0
 12132  001936  6E20               	movwf	(___aomod@divisor+4)^0,c
 12133  001938  0E00               	movlw	0
 12134  00193A  6E21               	movwf	(___aomod@divisor+5)^0,c
 12135  00193C  0E00               	movlw	0
 12136  00193E  6E22               	movwf	(___aomod@divisor+6)^0,c
 12137  001940  0E00               	movlw	0
 12138  001942  6E23               	movwf	(___aomod@divisor+7)^0,c
 12139  001944  EC29  F015         	call	___aomod	;wreg free
 12140  001948  C014  F031         	movff	?___aomod,??_dtoa
 12141  00194C  C015  F032         	movff	?___aomod+1,??_dtoa+1
 12142  001950  C016  F033         	movff	?___aomod+2,??_dtoa+2
 12143  001954  C017  F034         	movff	?___aomod+3,??_dtoa+3
 12144  001958  C018  F035         	movff	?___aomod+4,??_dtoa+4
 12145  00195C  C019  F036         	movff	?___aomod+5,??_dtoa+5
 12146  001960  C01A  F037         	movff	?___aomod+6,??_dtoa+6
 12147  001964  C01B  F038         	movff	?___aomod+7,??_dtoa+7
 12148  001968  C031  F026         	movff	??_dtoa,abs@a
 12149  00196C  C033  F027         	movff	??_dtoa+2,abs@a+1
 12150  001970  ECF8  F019         	call	_abs	;wreg free
 12151  001974  5026               	movf	?_abs^0,w,c
 12152  001976  0F30               	addlw	48
 12153  001978  6EDF               	movwf	indf2,c
 12154  00197A                     
 12155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
 12156  00197A  0100               	movlb	0	; () banked
 12157  00197C  076C               	decf	dtoa@p& (0+255),f,b
 12158  00197E  A0D8               	btfss	status,0,c
 12159  001980  076D               	decf	(dtoa@p+1)& (0+255),f,b
 12160  001982                     
 12161                           ; BSR set to: 0
 12162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
 12163  001982  076E               	decf	dtoa@w& (0+255),f,b
 12164  001984  A0D8               	btfss	status,0,c
 12165  001986  076F               	decf	(dtoa@w+1)& (0+255),f,b
 12166  001988                     
 12167                           ; BSR set to: 0
 12168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12169  001988  C072  F014         	movff	dtoa@n,___aodiv@dividend
 12170  00198C  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
 12171  001990  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
 12172  001994  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
 12173  001998  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
 12174  00199C  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
 12175  0019A0  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
 12176  0019A4  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
 12177  0019A8  0E0A               	movlw	10
 12178  0019AA  6E1C               	movwf	___aodiv@divisor^0,c
 12179  0019AC  0E00               	movlw	0
 12180  0019AE  6E1D               	movwf	(___aodiv@divisor+1)^0,c
 12181  0019B0  0E00               	movlw	0
 12182  0019B2  6E1E               	movwf	(___aodiv@divisor+2)^0,c
 12183  0019B4  0E00               	movlw	0
 12184  0019B6  6E1F               	movwf	(___aodiv@divisor+3)^0,c
 12185  0019B8  0E00               	movlw	0
 12186  0019BA  6E20               	movwf	(___aodiv@divisor+4)^0,c
 12187  0019BC  0E00               	movlw	0
 12188  0019BE  6E21               	movwf	(___aodiv@divisor+5)^0,c
 12189  0019C0  0E00               	movlw	0
 12190  0019C2  6E22               	movwf	(___aodiv@divisor+6)^0,c
 12191  0019C4  0E00               	movlw	0
 12192  0019C6  6E23               	movwf	(___aodiv@divisor+7)^0,c
 12193  0019C8  ECA9  F013         	call	___aodiv	;wreg free
 12194  0019CC  C014  F072         	movff	?___aodiv,dtoa@n
 12195  0019D0  C015  F073         	movff	?___aodiv+1,dtoa@n+1
 12196  0019D4  C016  F074         	movff	?___aodiv+2,dtoa@n+2
 12197  0019D8  C017  F075         	movff	?___aodiv+3,dtoa@n+3
 12198  0019DC  C018  F076         	movff	?___aodiv+4,dtoa@n+4
 12199  0019E0  C019  F077         	movff	?___aodiv+5,dtoa@n+5
 12200  0019E4  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
 12201  0019E8  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
 12202  0019EC                     l5330:
 12203                           
 12204                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12205  0019EC  0100               	movlb	0	; () banked
 12206  0019EE  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
 12207  0019F0  EF02  F00D         	goto	u5101
 12208  0019F4  517B               	movf	(dtoa@i+1)& (0+255),w,b
 12209  0019F6  E108               	bnz	u5100
 12210  0019F8  057A               	decf	dtoa@i& (0+255),w,b
 12211  0019FA  A0D8               	btfss	status,0,c
 12212  0019FC  EF02  F00D         	goto	u5101
 12213  001A00  EF04  F00D         	goto	u5100
 12214  001A04                     u5101:
 12215  001A04  EF34  F00D         	goto	l5340
 12216  001A08                     u5100:
 12217  001A08                     
 12218                           ; BSR set to: 0
 12219  001A08  5172               	movf	dtoa@n& (0+255),w,b
 12220  001A0A  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
 12221  001A0C  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
 12222  001A0E  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
 12223  001A10  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
 12224  001A12  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
 12225  001A14  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
 12226  001A16  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
 12227  001A18  A4D8               	btfss	status,2,c
 12228  001A1A  EF11  F00D         	goto	u5111
 12229  001A1E  EF13  F00D         	goto	u5110
 12230  001A22                     u5111:
 12231  001A22  EF79  F00C         	goto	l5320
 12232  001A26                     u5110:
 12233  001A26                     
 12234                           ; BSR set to: 0
 12235  001A26  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
 12236  001A28  EF20  F00D         	goto	u5120
 12237  001A2C  516D               	movf	(dtoa@p+1)& (0+255),w,b
 12238  001A2E  E106               	bnz	u5121
 12239  001A30  056C               	decf	dtoa@p& (0+255),w,b
 12240  001A32  B0D8               	btfsc	status,0,c
 12241  001A34  EF1E  F00D         	goto	u5121
 12242  001A38  EF20  F00D         	goto	u5120
 12243  001A3C                     u5121:
 12244  001A3C  EF79  F00C         	goto	l5320
 12245  001A40                     u5120:
 12246  001A40                     
 12247                           ; BSR set to: 0
 12248  001A40  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
 12249  001A42  EF2B  F00D         	goto	u5131
 12250  001A46  516F               	movf	(dtoa@w+1)& (0+255),w,b
 12251  001A48  E108               	bnz	u5130
 12252  001A4A  056E               	decf	dtoa@w& (0+255),w,b
 12253  001A4C  A0D8               	btfss	status,0,c
 12254  001A4E  EF2B  F00D         	goto	u5131
 12255  001A52  EF2D  F00D         	goto	u5130
 12256  001A56                     u5131:
 12257  001A56  EF34  F00D         	goto	l5340
 12258  001A5A                     u5130:
 12259  001A5A                     
 12260                           ; BSR set to: 0
 12261  001A5A  B23D               	btfsc	_flags^0,1,c
 12262  001A5C  EF32  F00D         	goto	u5141
 12263  001A60  EF34  F00D         	goto	u5140
 12264  001A64                     u5141:
 12265  001A64  EF79  F00C         	goto	l5320
 12266  001A68                     u5140:
 12267  001A68                     l5340:
 12268                           
 12269                           ; BSR set to: 0
 12270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12271  001A68  5170               	movf	dtoa@s& (0+255),w,b
 12272  001A6A  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12273  001A6C  A4D8               	btfss	status,2,c
 12274  001A6E  EF3B  F00D         	goto	u5151
 12275  001A72  EF3D  F00D         	goto	u5150
 12276  001A76                     u5151:
 12277  001A76  EF44  F00D         	goto	l5344
 12278  001A7A                     u5150:
 12279  001A7A                     
 12280                           ; BSR set to: 0
 12281  001A7A  A43D               	btfss	_flags^0,2,c
 12282  001A7C  EF42  F00D         	goto	u5161
 12283  001A80  EF44  F00D         	goto	u5160
 12284  001A84                     u5161:
 12285  001A84  EF62  F00D         	goto	l5354
 12286  001A88                     u5160:
 12287  001A88                     l5344:
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
 12291  001A88  077A               	decf	dtoa@i& (0+255),f,b
 12292  001A8A  A0D8               	btfss	status,0,c
 12293  001A8C  077B               	decf	(dtoa@i+1)& (0+255),f,b
 12294  001A8E                     
 12295                           ; BSR set to: 0
 12296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12297  001A8E  5170               	movf	dtoa@s& (0+255),w,b
 12298  001A90  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12299  001A92  A4D8               	btfss	status,2,c
 12300  001A94  EF4E  F00D         	goto	u5171
 12301  001A98  EF50  F00D         	goto	u5170
 12302  001A9C                     u5171:
 12303  001A9C  EF56  F00D         	goto	l5350
 12304  001AA0                     u5170:
 12305  001AA0                     
 12306                           ; BSR set to: 0
 12307  001AA0  0E00               	movlw	0
 12308  001AA2  6F6B               	movwf	(_dtoa$1986+1)& (0+255),b
 12309  001AA4  0E2B               	movlw	43
 12310  001AA6  6F6A               	movwf	_dtoa$1986& (0+255),b
 12311  001AA8  EF5A  F00D         	goto	l5352
 12312  001AAC                     l5350:
 12313                           
 12314                           ; BSR set to: 0
 12315  001AAC  0E00               	movlw	0
 12316  001AAE  6F6B               	movwf	(_dtoa$1986+1)& (0+255),b
 12317  001AB0  0E2D               	movlw	45
 12318  001AB2  6F6A               	movwf	_dtoa$1986& (0+255),b
 12319  001AB4                     l5352:
 12320                           
 12321                           ; BSR set to: 0
 12322  001AB4  0E80               	movlw	low _dbuf
 12323  001AB6  257A               	addwf	dtoa@i& (0+255),w,b
 12324  001AB8  6ED9               	movwf	fsr2l,c
 12325  001ABA  0E01               	movlw	high _dbuf
 12326  001ABC  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12327  001ABE  6EDA               	movwf	fsr2h,c
 12328  001AC0  C06A  FFDF         	movff	_dtoa$1986,indf2
 12329  001AC4                     l5354:
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12333  001AC4  C060  F026         	movff	dtoa@fp,pad@fp
 12334  001AC8  C061  F027         	movff	dtoa@fp+1,pad@fp+1
 12335  001ACC  0E80               	movlw	low _dbuf
 12336  001ACE  257A               	addwf	dtoa@i& (0+255),w,b
 12337  001AD0  6E28               	movwf	pad@buf^0,c
 12338  001AD2  0E01               	movlw	high _dbuf
 12339  001AD4  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12340  001AD6  6E29               	movwf	(pad@buf+1)^0,c
 12341  001AD8  C06E  F02A         	movff	dtoa@w,pad@p
 12342  001ADC  C06F  F02B         	movff	dtoa@w+1,pad@p+1
 12343  001AE0  EC25  F017         	call	_pad	;wreg free
 12344  001AE4  C026  F060         	movff	?_pad,?_dtoa
 12345  001AE8  C027  F061         	movff	?_pad+1,?_dtoa+1
 12346  001AEC  0012               	return		;funcret
 12347  001AEE                     __end_of_dtoa:
 12348                           	callstack 0
 12349                           
 12350 ;; *************** function _pad *****************
 12351 ;; Defined at:
 12352 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 12353 ;; Parameters:    Size  Location     Type
 12354 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
 12355 ;;		 -> NULL(0), 
 12356 ;;  buf             2   39[COMRAM] PTR unsigned char 
 12357 ;;		 -> dbuf(32), 
 12358 ;;  p               2   41[COMRAM] int 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  w               2   46[COMRAM] int 
 12361 ;;  i               2   44[COMRAM] int 
 12362 ;; Return value:  Size  Location     Type
 12363 ;;                  2   37[COMRAM] int 
 12364 ;; Registers used:
 12365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12366 ;; Tracked objects:
 12367 ;;		On entry : 0/0
 12368 ;;		On exit  : 0/0
 12369 ;;		Unchanged: 0/0
 12370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12371 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12372 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12374 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12375 ;;Total ram usage:       11 bytes
 12376 ;; Hardware stack levels used:    1
 12377 ;; Hardware stack levels required when called:    8
 12378 ;; This function calls:
 12379 ;;		_fputc
 12380 ;;		_fputs
 12381 ;;		_strlen
 12382 ;; This function is called by:
 12383 ;;		_dtoa
 12384 ;;		_utoa
 12385 ;;		_xtoa
 12386 ;; This function uses a non-reentrant model
 12387 ;;
 12388                           
 12389                           	psect	text38
 12390  002E4A                     __ptext38:
 12391                           	callstack 0
 12392  002E4A                     _pad:
 12393                           	callstack 18
 12394  002E4A                     
 12395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12396  002E4A  A03D               	btfss	_flags^0,0,c
 12397  002E4C  EF2A  F017         	goto	u4821
 12398  002E50  EF2C  F017         	goto	u4820
 12399  002E54                     u4821:
 12400  002E54  EF36  F017         	goto	l5212
 12401  002E58                     u4820:
 12402  002E58                     
 12403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12404  002E58  C028  F01F         	movff	pad@buf,fputs@s
 12405  002E5C  C029  F020         	movff	pad@buf+1,fputs@s+1
 12406  002E60  C026  F021         	movff	pad@fp,fputs@fp
 12407  002E64  C027  F022         	movff	pad@fp+1,fputs@fp+1
 12408  002E68  ECD6  F019         	call	_fputs	;wreg free
 12409  002E6C                     l5212:
 12410                           
 12411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12412  002E6C  BE2B               	btfsc	(pad@p+1)^0,7,c
 12413  002E6E  EF3B  F017         	goto	u4831
 12414  002E72  EF3D  F017         	goto	u4830
 12415  002E76                     u4831:
 12416  002E76  EF43  F017         	goto	l5216
 12417  002E7A                     u4830:
 12418  002E7A  C02A  F02F         	movff	pad@p,pad@w
 12419  002E7E  C02B  F030         	movff	pad@p+1,pad@w+1
 12420  002E82  EF47  F017         	goto	l1440
 12421  002E86                     l5216:
 12422  002E86  0E00               	movlw	0
 12423  002E88  6E30               	movwf	(pad@w+1)^0,c
 12424  002E8A  0E00               	movlw	0
 12425  002E8C  6E2F               	movwf	pad@w^0,c
 12426  002E8E                     l1440:
 12427                           
 12428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12429  002E8E  0E00               	movlw	0
 12430  002E90  6E2E               	movwf	(pad@i+1)^0,c
 12431  002E92  0E00               	movlw	0
 12432  002E94  6E2D               	movwf	pad@i^0,c
 12433                           
 12434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12435  002E96  EF59  F017         	goto	l5222
 12436  002E9A                     l5218:
 12437                           
 12438                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12439  002E9A  0E00               	movlw	0
 12440  002E9C  6E17               	movwf	(fputc@c+1)^0,c
 12441  002E9E  0E20               	movlw	32
 12442  002EA0  6E16               	movwf	fputc@c^0,c
 12443  002EA2  C026  F018         	movff	pad@fp,fputc@fp
 12444  002EA6  C027  F019         	movff	pad@fp+1,fputc@fp+1
 12445  002EAA  EC29  F018         	call	_fputc	;wreg free
 12446  002EAE                     
 12447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12448  002EAE  4A2D               	infsnz	pad@i^0,f,c
 12449  002EB0  2A2E               	incf	(pad@i+1)^0,f,c
 12450  002EB2                     l5222:
 12451                           
 12452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12453  002EB2  502F               	movf	pad@w^0,w,c
 12454  002EB4  5C2D               	subwf	pad@i^0,w,c
 12455  002EB6  502E               	movf	(pad@i+1)^0,w,c
 12456  002EB8  0A80               	xorlw	128
 12457  002EBA  6E2C               	movwf	??_pad^0,c
 12458  002EBC  5030               	movf	(pad@w+1)^0,w,c
 12459  002EBE  0A80               	xorlw	128
 12460  002EC0  582C               	subwfb	??_pad^0,w,c
 12461  002EC2  A0D8               	btfss	status,0,c
 12462  002EC4  EF66  F017         	goto	u4841
 12463  002EC8  EF68  F017         	goto	u4840
 12464  002ECC                     u4841:
 12465  002ECC  EF4D  F017         	goto	l5218
 12466  002ED0                     u4840:
 12467  002ED0                     
 12468                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12469  002ED0  B03D               	btfsc	_flags^0,0,c
 12470  002ED2  EF6D  F017         	goto	u4851
 12471  002ED6  EF6F  F017         	goto	u4850
 12472  002EDA                     u4851:
 12473  002EDA  EF79  F017         	goto	l5226
 12474  002EDE                     u4850:
 12475  002EDE                     
 12476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12477  002EDE  C028  F01F         	movff	pad@buf,fputs@s
 12478  002EE2  C029  F020         	movff	pad@buf+1,fputs@s+1
 12479  002EE6  C026  F021         	movff	pad@fp,fputs@fp
 12480  002EEA  C027  F022         	movff	pad@fp+1,fputs@fp+1
 12481  002EEE  ECD6  F019         	call	_fputs	;wreg free
 12482  002EF2                     l5226:
 12483                           
 12484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12485  002EF2  C028  F014         	movff	pad@buf,strlen@s
 12486  002EF6  C029  F015         	movff	pad@buf+1,strlen@s+1
 12487  002EFA  ECE0  F01A         	call	_strlen	;wreg free
 12488  002EFE  502F               	movf	pad@w^0,w,c
 12489  002F00  2414               	addwf	?_strlen^0,w,c
 12490  002F02  6E26               	movwf	?_pad^0,c
 12491  002F04  5030               	movf	(pad@w+1)^0,w,c
 12492  002F06  2015               	addwfc	(?_strlen+1)^0,w,c
 12493  002F08  6E27               	movwf	(?_pad+1)^0,c
 12494  002F0A  0012               	return		;funcret
 12495  002F0C                     __end_of_pad:
 12496                           	callstack 0
 12497                           
 12498 ;; *************** function _strlen *****************
 12499 ;; Defined at:
 12500 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
 12501 ;; Parameters:    Size  Location     Type
 12502 ;;  s               2   19[COMRAM] PTR const unsigned char 
 12503 ;;		 -> dbuf(32), 
 12504 ;; Auto vars:     Size  Location     Type
 12505 ;;  a               2   21[COMRAM] PTR const unsigned char 
 12506 ;;		 -> dbuf(32), 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  2   19[COMRAM] unsigned int 
 12509 ;; Registers used:
 12510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12517 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12519 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12520 ;;Total ram usage:        4 bytes
 12521 ;; Hardware stack levels used:    1
 12522 ;; Hardware stack levels required when called:    4
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_pad
 12527 ;; This function uses a non-reentrant model
 12528 ;;
 12529                           
 12530                           	psect	text39
 12531  0035C0                     __ptext39:
 12532                           	callstack 0
 12533  0035C0                     _strlen:
 12534                           	callstack 21
 12535  0035C0  C014  F016         	movff	strlen@s,strlen@a
 12536  0035C4  C015  F017         	movff	strlen@s+1,strlen@a+1
 12537  0035C8  EFE8  F01A         	goto	l5074
 12538  0035CC                     l5072:
 12539  0035CC  4A14               	infsnz	strlen@s^0,f,c
 12540  0035CE  2A15               	incf	(strlen@s+1)^0,f,c
 12541  0035D0                     l5074:
 12542  0035D0  C014  FFD9         	movff	strlen@s,fsr2l
 12543  0035D4  C015  FFDA         	movff	strlen@s+1,fsr2h
 12544  0035D8  50DF               	movf	indf2,w,c
 12545  0035DA  A4D8               	btfss	status,2,c
 12546  0035DC  EFF2  F01A         	goto	u4591
 12547  0035E0  EFF4  F01A         	goto	u4590
 12548  0035E4                     u4591:
 12549  0035E4  EFE6  F01A         	goto	l5072
 12550  0035E8                     u4590:
 12551  0035E8  5016               	movf	strlen@a^0,w,c
 12552  0035EA  5C14               	subwf	strlen@s^0,w,c
 12553  0035EC  6E14               	movwf	?_strlen^0,c
 12554  0035EE  5017               	movf	(strlen@a+1)^0,w,c
 12555  0035F0  5815               	subwfb	(strlen@s+1)^0,w,c
 12556  0035F2  6E15               	movwf	(?_strlen+1)^0,c
 12557  0035F4  0012               	return		;funcret
 12558  0035F6                     __end_of_strlen:
 12559                           	callstack 0
 12560                           
 12561 ;; *************** function _fputs *****************
 12562 ;; Defined at:
 12563 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
 12564 ;; Parameters:    Size  Location     Type
 12565 ;;  s               2   30[COMRAM] PTR const unsigned char 
 12566 ;;		 -> dbuf(32), 
 12567 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 12568 ;;		 -> NULL(0), 
 12569 ;; Auto vars:     Size  Location     Type
 12570 ;;  i               2   35[COMRAM] int 
 12571 ;;  c               1   34[COMRAM] unsigned char 
 12572 ;; Return value:  Size  Location     Type
 12573 ;;                  2   30[COMRAM] int 
 12574 ;; Registers used:
 12575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12576 ;; Tracked objects:
 12577 ;;		On entry : 0/0
 12578 ;;		On exit  : 0/0
 12579 ;;		Unchanged: 0/0
 12580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12582 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;Total ram usage:        7 bytes
 12586 ;; Hardware stack levels used:    1
 12587 ;; Hardware stack levels required when called:    7
 12588 ;; This function calls:
 12589 ;;		_fputc
 12590 ;; This function is called by:
 12591 ;;		_pad
 12592 ;; This function uses a non-reentrant model
 12593 ;;
 12594                           
 12595                           	psect	text40
 12596  0033AC                     __ptext40:
 12597                           	callstack 0
 12598  0033AC                     _fputs:
 12599                           	callstack 18
 12600  0033AC  0E00               	movlw	0
 12601  0033AE  6E25               	movwf	(fputs@i+1)^0,c
 12602  0033B0  0E00               	movlw	0
 12603  0033B2  6E24               	movwf	fputs@i^0,c
 12604  0033B4  EFE7  F019         	goto	l5068
 12605  0033B8                     l5064:
 12606  0033B8  C023  F016         	movff	fputs@c,fputc@c
 12607  0033BC  6A17               	clrf	(fputc@c+1)^0,c
 12608  0033BE  C021  F018         	movff	fputs@fp,fputc@fp
 12609  0033C2  C022  F019         	movff	fputs@fp+1,fputc@fp+1
 12610  0033C6  EC29  F018         	call	_fputc	;wreg free
 12611  0033CA  4A24               	infsnz	fputs@i^0,f,c
 12612  0033CC  2A25               	incf	(fputs@i+1)^0,f,c
 12613  0033CE                     l5068:
 12614  0033CE  5024               	movf	fputs@i^0,w,c
 12615  0033D0  241F               	addwf	fputs@s^0,w,c
 12616  0033D2  6ED9               	movwf	fsr2l,c
 12617  0033D4  5025               	movf	(fputs@i+1)^0,w,c
 12618  0033D6  2020               	addwfc	(fputs@s+1)^0,w,c
 12619  0033D8  6EDA               	movwf	fsr2h,c
 12620  0033DA  50DF               	movf	indf2,w,c
 12621  0033DC  6E23               	movwf	fputs@c^0,c
 12622  0033DE  5023               	movf	fputs@c^0,w,c
 12623  0033E0  A4D8               	btfss	status,2,c
 12624  0033E2  EFF5  F019         	goto	u4581
 12625  0033E6  EFF7  F019         	goto	u4580
 12626  0033EA                     u4581:
 12627  0033EA  EFDC  F019         	goto	l5064
 12628  0033EE                     u4580:
 12629  0033EE  0012               	return		;funcret
 12630  0033F0                     __end_of_fputs:
 12631                           	callstack 0
 12632                           
 12633 ;; *************** function _abs *****************
 12634 ;; Defined at:
 12635 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
 12636 ;; Parameters:    Size  Location     Type
 12637 ;;  a               2   37[COMRAM] int 
 12638 ;; Auto vars:     Size  Location     Type
 12639 ;;		None
 12640 ;; Return value:  Size  Location     Type
 12641 ;;                  2   37[COMRAM] int 
 12642 ;; Registers used:
 12643 ;;		wreg, status,2, status,0
 12644 ;; Tracked objects:
 12645 ;;		On entry : 0/0
 12646 ;;		On exit  : 0/0
 12647 ;;		Unchanged: 0/0
 12648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12649 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12653 ;;Total ram usage:        4 bytes
 12654 ;; Hardware stack levels used:    1
 12655 ;; Hardware stack levels required when called:    4
 12656 ;; This function calls:
 12657 ;;		Nothing
 12658 ;; This function is called by:
 12659 ;;		_dtoa
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           	psect	text41
 12664  0033F0                     __ptext41:
 12665                           	callstack 0
 12666  0033F0                     _abs:
 12667                           	callstack 22
 12668  0033F0  BE27               	btfsc	(abs@a+1)^0,7,c
 12669  0033F2  EF05  F01A         	goto	u4860
 12670  0033F6  5027               	movf	(abs@a+1)^0,w,c
 12671  0033F8  E106               	bnz	u4861
 12672  0033FA  0426               	decf	abs@a^0,w,c
 12673  0033FC  B0D8               	btfsc	status,0,c
 12674  0033FE  EF03  F01A         	goto	u4861
 12675  003402  EF05  F01A         	goto	u4860
 12676  003406                     u4861:
 12677  003406  EF13  F01A         	goto	l1577
 12678  00340A                     u4860:
 12679  00340A  C026  F028         	movff	abs@a,??_abs
 12680  00340E  C027  F029         	movff	abs@a+1,??_abs+1
 12681  003412  1E28               	comf	??_abs^0,f,c
 12682  003414  1E29               	comf	(??_abs+1)^0,f,c
 12683  003416  4A28               	infsnz	??_abs^0,f,c
 12684  003418  2A29               	incf	(??_abs+1)^0,f,c
 12685  00341A  C028  F026         	movff	??_abs,?_abs
 12686  00341E  C029  F027         	movff	??_abs+1,?_abs+1
 12687  003422  EF17  F01A         	goto	l1580
 12688  003426                     l1577:
 12689  003426  C026  F026         	movff	abs@a,?_abs
 12690  00342A  C027  F027         	movff	abs@a+1,?_abs+1
 12691  00342E                     l1580:
 12692  00342E  0012               	return		;funcret
 12693  003430                     __end_of_abs:
 12694                           	callstack 0
 12695                           
 12696 ;; *************** function ___aomod *****************
 12697 ;; Defined at:
 12698 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
 12699 ;; Parameters:    Size  Location     Type
 12700 ;;  dividend        8   19[COMRAM] long long 
 12701 ;;  divisor         8   27[COMRAM] long long 
 12702 ;; Auto vars:     Size  Location     Type
 12703 ;;  sign            1   36[COMRAM] unsigned char 
 12704 ;;  counter         1   35[COMRAM] unsigned char 
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  8   19[COMRAM] long long 
 12707 ;; Registers used:
 12708 ;;		wreg, status,2, status,0
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12714 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12717 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12718 ;;Total ram usage:       18 bytes
 12719 ;; Hardware stack levels used:    1
 12720 ;; Hardware stack levels required when called:    4
 12721 ;; This function calls:
 12722 ;;		Nothing
 12723 ;; This function is called by:
 12724 ;;		_dtoa
 12725 ;; This function uses a non-reentrant model
 12726 ;;
 12727                           
 12728                           	psect	text42
 12729  002A52                     __ptext42:
 12730                           	callstack 0
 12731  002A52                     ___aomod:
 12732                           	callstack 22
 12733  002A52  0E00               	movlw	0
 12734  002A54  6E25               	movwf	___aomod@sign^0,c
 12735  002A56  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
 12736  002A58  EF32  F015         	goto	u4690
 12737  002A5C  EF30  F015         	goto	u4691
 12738  002A60                     u4691:
 12739  002A60  EF44  F015         	goto	l5142
 12740  002A64                     u4690:
 12741  002A64  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 12742  002A66  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 12743  002A68  1E19               	comf	(___aomod@dividend+5)^0,f,c
 12744  002A6A  1E18               	comf	(___aomod@dividend+4)^0,f,c
 12745  002A6C  1E17               	comf	(___aomod@dividend+3)^0,f,c
 12746  002A6E  1E16               	comf	(___aomod@dividend+2)^0,f,c
 12747  002A70  1E15               	comf	(___aomod@dividend+1)^0,f,c
 12748  002A72  6C14               	negf	___aomod@dividend^0,c
 12749  002A74  0E00               	movlw	0
 12750  002A76  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 12751  002A78  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 12752  002A7A  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 12753  002A7C  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 12754  002A7E  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 12755  002A80  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 12756  002A82  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 12757  002A84  0E01               	movlw	1
 12758  002A86  6E25               	movwf	___aomod@sign^0,c
 12759  002A88                     l5142:
 12760  002A88  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
 12761  002A8A  EF4B  F015         	goto	u4700
 12762  002A8E  EF49  F015         	goto	u4701
 12763  002A92                     u4701:
 12764  002A92  EF5B  F015         	goto	l5146
 12765  002A96                     u4700:
 12766  002A96  1E23               	comf	(___aomod@divisor+7)^0,f,c
 12767  002A98  1E22               	comf	(___aomod@divisor+6)^0,f,c
 12768  002A9A  1E21               	comf	(___aomod@divisor+5)^0,f,c
 12769  002A9C  1E20               	comf	(___aomod@divisor+4)^0,f,c
 12770  002A9E  1E1F               	comf	(___aomod@divisor+3)^0,f,c
 12771  002AA0  1E1E               	comf	(___aomod@divisor+2)^0,f,c
 12772  002AA2  1E1D               	comf	(___aomod@divisor+1)^0,f,c
 12773  002AA4  6C1C               	negf	___aomod@divisor^0,c
 12774  002AA6  0E00               	movlw	0
 12775  002AA8  221D               	addwfc	(___aomod@divisor+1)^0,f,c
 12776  002AAA  221E               	addwfc	(___aomod@divisor+2)^0,f,c
 12777  002AAC  221F               	addwfc	(___aomod@divisor+3)^0,f,c
 12778  002AAE  2220               	addwfc	(___aomod@divisor+4)^0,f,c
 12779  002AB0  2221               	addwfc	(___aomod@divisor+5)^0,f,c
 12780  002AB2  2222               	addwfc	(___aomod@divisor+6)^0,f,c
 12781  002AB4  2223               	addwfc	(___aomod@divisor+7)^0,f,c
 12782  002AB6                     l5146:
 12783  002AB6  501C               	movf	___aomod@divisor^0,w,c
 12784  002AB8  101D               	iorwf	(___aomod@divisor+1)^0,w,c
 12785  002ABA  101E               	iorwf	(___aomod@divisor+2)^0,w,c
 12786  002ABC  101F               	iorwf	(___aomod@divisor+3)^0,w,c
 12787  002ABE  1020               	iorwf	(___aomod@divisor+4)^0,w,c
 12788  002AC0  1021               	iorwf	(___aomod@divisor+5)^0,w,c
 12789  002AC2  1022               	iorwf	(___aomod@divisor+6)^0,w,c
 12790  002AC4  1023               	iorwf	(___aomod@divisor+7)^0,w,c
 12791  002AC6  B4D8               	btfsc	status,2,c
 12792  002AC8  EF68  F015         	goto	u4711
 12793  002ACC  EF6A  F015         	goto	u4710
 12794  002AD0                     u4711:
 12795  002AD0  EFB2  F015         	goto	l5162
 12796  002AD4                     u4710:
 12797  002AD4  0E01               	movlw	1
 12798  002AD6  6E24               	movwf	___aomod@counter^0,c
 12799  002AD8  EF78  F015         	goto	l5152
 12800  002ADC                     l5150:
 12801  002ADC  90D8               	bcf	status,0,c
 12802  002ADE  361C               	rlcf	___aomod@divisor^0,f,c
 12803  002AE0  361D               	rlcf	(___aomod@divisor+1)^0,f,c
 12804  002AE2  361E               	rlcf	(___aomod@divisor+2)^0,f,c
 12805  002AE4  361F               	rlcf	(___aomod@divisor+3)^0,f,c
 12806  002AE6  3620               	rlcf	(___aomod@divisor+4)^0,f,c
 12807  002AE8  3621               	rlcf	(___aomod@divisor+5)^0,f,c
 12808  002AEA  3622               	rlcf	(___aomod@divisor+6)^0,f,c
 12809  002AEC  3623               	rlcf	(___aomod@divisor+7)^0,f,c
 12810  002AEE  2A24               	incf	___aomod@counter^0,f,c
 12811  002AF0                     l5152:
 12812  002AF0  AE23               	btfss	(___aomod@divisor+7)^0,7,c
 12813  002AF2  EF7D  F015         	goto	u4721
 12814  002AF6  EF7F  F015         	goto	u4720
 12815  002AFA                     u4721:
 12816  002AFA  EF6E  F015         	goto	l5150
 12817  002AFE                     u4720:
 12818  002AFE                     l5154:
 12819  002AFE  501C               	movf	___aomod@divisor^0,w,c
 12820  002B00  5C14               	subwf	___aomod@dividend^0,w,c
 12821  002B02  501D               	movf	(___aomod@divisor+1)^0,w,c
 12822  002B04  5815               	subwfb	(___aomod@dividend+1)^0,w,c
 12823  002B06  501E               	movf	(___aomod@divisor+2)^0,w,c
 12824  002B08  5816               	subwfb	(___aomod@dividend+2)^0,w,c
 12825  002B0A  501F               	movf	(___aomod@divisor+3)^0,w,c
 12826  002B0C  5817               	subwfb	(___aomod@dividend+3)^0,w,c
 12827  002B0E  5020               	movf	(___aomod@divisor+4)^0,w,c
 12828  002B10  5818               	subwfb	(___aomod@dividend+4)^0,w,c
 12829  002B12  5021               	movf	(___aomod@divisor+5)^0,w,c
 12830  002B14  5819               	subwfb	(___aomod@dividend+5)^0,w,c
 12831  002B16  5022               	movf	(___aomod@divisor+6)^0,w,c
 12832  002B18  581A               	subwfb	(___aomod@dividend+6)^0,w,c
 12833  002B1A  5023               	movf	(___aomod@divisor+7)^0,w,c
 12834  002B1C  581B               	subwfb	(___aomod@dividend+7)^0,w,c
 12835  002B1E  A0D8               	btfss	status,0,c
 12836  002B20  EF94  F015         	goto	u4731
 12837  002B24  EF96  F015         	goto	u4730
 12838  002B28                     u4731:
 12839  002B28  EFA6  F015         	goto	l5158
 12840  002B2C                     u4730:
 12841  002B2C  501C               	movf	___aomod@divisor^0,w,c
 12842  002B2E  5E14               	subwf	___aomod@dividend^0,f,c
 12843  002B30  501D               	movf	(___aomod@divisor+1)^0,w,c
 12844  002B32  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
 12845  002B34  501E               	movf	(___aomod@divisor+2)^0,w,c
 12846  002B36  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
 12847  002B38  501F               	movf	(___aomod@divisor+3)^0,w,c
 12848  002B3A  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
 12849  002B3C  5020               	movf	(___aomod@divisor+4)^0,w,c
 12850  002B3E  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
 12851  002B40  5021               	movf	(___aomod@divisor+5)^0,w,c
 12852  002B42  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
 12853  002B44  5022               	movf	(___aomod@divisor+6)^0,w,c
 12854  002B46  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
 12855  002B48  5023               	movf	(___aomod@divisor+7)^0,w,c
 12856  002B4A  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
 12857  002B4C                     l5158:
 12858  002B4C  90D8               	bcf	status,0,c
 12859  002B4E  3223               	rrcf	(___aomod@divisor+7)^0,f,c
 12860  002B50  3222               	rrcf	(___aomod@divisor+6)^0,f,c
 12861  002B52  3221               	rrcf	(___aomod@divisor+5)^0,f,c
 12862  002B54  3220               	rrcf	(___aomod@divisor+4)^0,f,c
 12863  002B56  321F               	rrcf	(___aomod@divisor+3)^0,f,c
 12864  002B58  321E               	rrcf	(___aomod@divisor+2)^0,f,c
 12865  002B5A  321D               	rrcf	(___aomod@divisor+1)^0,f,c
 12866  002B5C  321C               	rrcf	___aomod@divisor^0,f,c
 12867  002B5E  2E24               	decfsz	___aomod@counter^0,f,c
 12868  002B60  EF7F  F015         	goto	l5154
 12869  002B64                     l5162:
 12870  002B64  5025               	movf	___aomod@sign^0,w,c
 12871  002B66  B4D8               	btfsc	status,2,c
 12872  002B68  EFB8  F015         	goto	u4741
 12873  002B6C  EFBA  F015         	goto	u4740
 12874  002B70                     u4741:
 12875  002B70  EFCA  F015         	goto	l5166
 12876  002B74                     u4740:
 12877  002B74  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 12878  002B76  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 12879  002B78  1E19               	comf	(___aomod@dividend+5)^0,f,c
 12880  002B7A  1E18               	comf	(___aomod@dividend+4)^0,f,c
 12881  002B7C  1E17               	comf	(___aomod@dividend+3)^0,f,c
 12882  002B7E  1E16               	comf	(___aomod@dividend+2)^0,f,c
 12883  002B80  1E15               	comf	(___aomod@dividend+1)^0,f,c
 12884  002B82  6C14               	negf	___aomod@dividend^0,c
 12885  002B84  0E00               	movlw	0
 12886  002B86  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 12887  002B88  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 12888  002B8A  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 12889  002B8C  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 12890  002B8E  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 12891  002B90  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 12892  002B92  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 12893  002B94                     l5166:
 12894  002B94  C014  F014         	movff	___aomod@dividend,?___aomod
 12895  002B98  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
 12896  002B9C  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
 12897  002BA0  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
 12898  002BA4  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
 12899  002BA8  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
 12900  002BAC  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
 12901  002BB0  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
 12902  002BB4  0012               	return		;funcret
 12903  002BB6                     __end_of___aomod:
 12904                           	callstack 0
 12905                           
 12906 ;; *************** function ___aodiv *****************
 12907 ;; Defined at:
 12908 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
 12909 ;; Parameters:    Size  Location     Type
 12910 ;;  dividend        8   19[COMRAM] long long 
 12911 ;;  divisor         8   27[COMRAM] long long 
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;  quotient        8   37[COMRAM] long long 
 12914 ;;  sign            1   36[COMRAM] unsigned char 
 12915 ;;  counter         1   35[COMRAM] unsigned char 
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  8   19[COMRAM] long long 
 12918 ;; Registers used:
 12919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/0
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12925 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12926 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12928 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12929 ;;Total ram usage:       26 bytes
 12930 ;; Hardware stack levels used:    1
 12931 ;; Hardware stack levels required when called:    4
 12932 ;; This function calls:
 12933 ;;		Nothing
 12934 ;; This function is called by:
 12935 ;;		_dtoa
 12936 ;; This function uses a non-reentrant model
 12937 ;;
 12938                           
 12939                           	psect	text43
 12940  002752                     __ptext43:
 12941                           	callstack 0
 12942  002752                     ___aodiv:
 12943                           	callstack 22
 12944  002752  0E00               	movlw	0
 12945  002754  6E25               	movwf	___aodiv@sign^0,c
 12946  002756  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
 12947  002758  EFB2  F013         	goto	u4620
 12948  00275C  EFB0  F013         	goto	u4621
 12949  002760                     u4621:
 12950  002760  EFC4  F013         	goto	l5098
 12951  002764                     u4620:
 12952  002764  1E23               	comf	(___aodiv@divisor+7)^0,f,c
 12953  002766  1E22               	comf	(___aodiv@divisor+6)^0,f,c
 12954  002768  1E21               	comf	(___aodiv@divisor+5)^0,f,c
 12955  00276A  1E20               	comf	(___aodiv@divisor+4)^0,f,c
 12956  00276C  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
 12957  00276E  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
 12958  002770  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
 12959  002772  6C1C               	negf	___aodiv@divisor^0,c
 12960  002774  0E00               	movlw	0
 12961  002776  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
 12962  002778  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
 12963  00277A  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
 12964  00277C  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
 12965  00277E  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
 12966  002780  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
 12967  002782  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
 12968  002784  0E01               	movlw	1
 12969  002786  6E25               	movwf	___aodiv@sign^0,c
 12970  002788                     l5098:
 12971  002788  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
 12972  00278A  EFCB  F013         	goto	u4630
 12973  00278E  EFC9  F013         	goto	u4631
 12974  002792                     u4631:
 12975  002792  EFDD  F013         	goto	l5104
 12976  002796                     u4630:
 12977  002796  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
 12978  002798  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
 12979  00279A  1E19               	comf	(___aodiv@dividend+5)^0,f,c
 12980  00279C  1E18               	comf	(___aodiv@dividend+4)^0,f,c
 12981  00279E  1E17               	comf	(___aodiv@dividend+3)^0,f,c
 12982  0027A0  1E16               	comf	(___aodiv@dividend+2)^0,f,c
 12983  0027A2  1E15               	comf	(___aodiv@dividend+1)^0,f,c
 12984  0027A4  6C14               	negf	___aodiv@dividend^0,c
 12985  0027A6  0E00               	movlw	0
 12986  0027A8  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
 12987  0027AA  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
 12988  0027AC  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
 12989  0027AE  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
 12990  0027B0  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
 12991  0027B2  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
 12992  0027B4  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
 12993  0027B6  0E01               	movlw	1
 12994  0027B8  1A25               	xorwf	___aodiv@sign^0,f,c
 12995  0027BA                     l5104:
 12996  0027BA  EE20  F026         	lfsr	2,___aodiv@quotient
 12997  0027BE  0E07               	movlw	7
 12998  0027C0                     u4641:
 12999  0027C0  6ADE               	clrf	postinc2,c
 13000  0027C2  06E8               	decf	wreg,f,c
 13001  0027C4  E2FD               	bc	u4641
 13002  0027C6  501C               	movf	___aodiv@divisor^0,w,c
 13003  0027C8  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
 13004  0027CA  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
 13005  0027CC  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
 13006  0027CE  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
 13007  0027D0  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
 13008  0027D2  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
 13009  0027D4  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
 13010  0027D6  B4D8               	btfsc	status,2,c
 13011  0027D8  EFF0  F013         	goto	u4651
 13012  0027DC  EFF2  F013         	goto	u4650
 13013  0027E0                     u4651:
 13014  0027E0  EF44  F014         	goto	l5126
 13015  0027E4                     u4650:
 13016  0027E4  0E01               	movlw	1
 13017  0027E6  6E24               	movwf	___aodiv@counter^0,c
 13018  0027E8  EF00  F014         	goto	l5112
 13019  0027EC                     l5110:
 13020  0027EC  90D8               	bcf	status,0,c
 13021  0027EE  361C               	rlcf	___aodiv@divisor^0,f,c
 13022  0027F0  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
 13023  0027F2  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
 13024  0027F4  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
 13025  0027F6  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
 13026  0027F8  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
 13027  0027FA  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
 13028  0027FC  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
 13029  0027FE  2A24               	incf	___aodiv@counter^0,f,c
 13030  002800                     l5112:
 13031  002800  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
 13032  002802  EF05  F014         	goto	u4661
 13033  002806  EF07  F014         	goto	u4660
 13034  00280A                     u4661:
 13035  00280A  EFF6  F013         	goto	l5110
 13036  00280E                     u4660:
 13037  00280E                     l5114:
 13038  00280E  90D8               	bcf	status,0,c
 13039  002810  3626               	rlcf	___aodiv@quotient^0,f,c
 13040  002812  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
 13041  002814  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
 13042  002816  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
 13043  002818  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
 13044  00281A  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
 13045  00281C  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
 13046  00281E  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
 13047  002820  501C               	movf	___aodiv@divisor^0,w,c
 13048  002822  5C14               	subwf	___aodiv@dividend^0,w,c
 13049  002824  501D               	movf	(___aodiv@divisor+1)^0,w,c
 13050  002826  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
 13051  002828  501E               	movf	(___aodiv@divisor+2)^0,w,c
 13052  00282A  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
 13053  00282C  501F               	movf	(___aodiv@divisor+3)^0,w,c
 13054  00282E  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
 13055  002830  5020               	movf	(___aodiv@divisor+4)^0,w,c
 13056  002832  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
 13057  002834  5021               	movf	(___aodiv@divisor+5)^0,w,c
 13058  002836  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
 13059  002838  5022               	movf	(___aodiv@divisor+6)^0,w,c
 13060  00283A  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
 13061  00283C  5023               	movf	(___aodiv@divisor+7)^0,w,c
 13062  00283E  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
 13063  002840  A0D8               	btfss	status,0,c
 13064  002842  EF25  F014         	goto	u4671
 13065  002846  EF27  F014         	goto	u4670
 13066  00284A                     u4671:
 13067  00284A  EF38  F014         	goto	l5122
 13068  00284E                     u4670:
 13069  00284E  501C               	movf	___aodiv@divisor^0,w,c
 13070  002850  5E14               	subwf	___aodiv@dividend^0,f,c
 13071  002852  501D               	movf	(___aodiv@divisor+1)^0,w,c
 13072  002854  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
 13073  002856  501E               	movf	(___aodiv@divisor+2)^0,w,c
 13074  002858  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
 13075  00285A  501F               	movf	(___aodiv@divisor+3)^0,w,c
 13076  00285C  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
 13077  00285E  5020               	movf	(___aodiv@divisor+4)^0,w,c
 13078  002860  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
 13079  002862  5021               	movf	(___aodiv@divisor+5)^0,w,c
 13080  002864  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
 13081  002866  5022               	movf	(___aodiv@divisor+6)^0,w,c
 13082  002868  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
 13083  00286A  5023               	movf	(___aodiv@divisor+7)^0,w,c
 13084  00286C  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
 13085  00286E  8026               	bsf	___aodiv@quotient^0,0,c
 13086  002870                     l5122:
 13087  002870  90D8               	bcf	status,0,c
 13088  002872  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
 13089  002874  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
 13090  002876  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
 13091  002878  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
 13092  00287A  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
 13093  00287C  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
 13094  00287E  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
 13095  002880  321C               	rrcf	___aodiv@divisor^0,f,c
 13096  002882  2E24               	decfsz	___aodiv@counter^0,f,c
 13097  002884  EF07  F014         	goto	l5114
 13098  002888                     l5126:
 13099  002888  5025               	movf	___aodiv@sign^0,w,c
 13100  00288A  B4D8               	btfsc	status,2,c
 13101  00288C  EF4A  F014         	goto	u4681
 13102  002890  EF4C  F014         	goto	u4680
 13103  002894                     u4681:
 13104  002894  EF5C  F014         	goto	l5130
 13105  002898                     u4680:
 13106  002898  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
 13107  00289A  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
 13108  00289C  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
 13109  00289E  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
 13110  0028A0  1E29               	comf	(___aodiv@quotient+3)^0,f,c
 13111  0028A2  1E28               	comf	(___aodiv@quotient+2)^0,f,c
 13112  0028A4  1E27               	comf	(___aodiv@quotient+1)^0,f,c
 13113  0028A6  6C26               	negf	___aodiv@quotient^0,c
 13114  0028A8  0E00               	movlw	0
 13115  0028AA  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
 13116  0028AC  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
 13117  0028AE  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
 13118  0028B0  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
 13119  0028B2  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
 13120  0028B4  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
 13121  0028B6  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
 13122  0028B8                     l5130:
 13123  0028B8  C026  F014         	movff	___aodiv@quotient,?___aodiv
 13124  0028BC  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
 13125  0028C0  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
 13126  0028C4  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
 13127  0028C8  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
 13128  0028CC  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
 13129  0028D0  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
 13130  0028D4  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
 13131  0028D8  0012               	return		;funcret
 13132  0028DA                     __end_of___aodiv:
 13133                           	callstack 0
 13134                           
 13135 ;; *************** function _ctoa *****************
 13136 ;; Defined at:
 13137 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 13140 ;;		 -> NULL(0), 
 13141 ;;  c               1   32[COMRAM] unsigned char 
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;  w               2   36[COMRAM] int 
 13144 ;;  l               2   34[COMRAM] int 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  2   30[COMRAM] int 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13154 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13155 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13157 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13158 ;;Total ram usage:        8 bytes
 13159 ;; Hardware stack levels used:    1
 13160 ;; Hardware stack levels required when called:    7
 13161 ;; This function calls:
 13162 ;;		_fputc
 13163 ;; This function is called by:
 13164 ;;		_vfpfcnvrt
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text44
 13169  002CA6                     __ptext44:
 13170                           	callstack 0
 13171  002CA6                     _ctoa:
 13172                           	callstack 20
 13173  002CA6                     
 13174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 13175  002CA6  5039               	movf	_width^0,w,c
 13176  002CA8  103A               	iorwf	(_width+1)^0,w,c
 13177  002CAA  A4D8               	btfss	status,2,c
 13178  002CAC  EF5A  F016         	goto	u4981
 13179  002CB0  EF5C  F016         	goto	u4980
 13180  002CB4                     u4981:
 13181  002CB4  EF62  F016         	goto	l5272
 13182  002CB8                     u4980:
 13183  002CB8  C039  F025         	movff	_width,ctoa@w
 13184  002CBC  C03A  F026         	movff	_width+1,ctoa@w+1
 13185  002CC0  EF68  F016         	goto	l5274
 13186  002CC4                     l5272:
 13187  002CC4  0EFF               	movlw	255
 13188  002CC6  2439               	addwf	_width^0,w,c
 13189  002CC8  6E25               	movwf	ctoa@w^0,c
 13190  002CCA  0EFF               	movlw	255
 13191  002CCC  203A               	addwfc	(_width+1)^0,w,c
 13192  002CCE  6E26               	movwf	(ctoa@w+1)^0,c
 13193  002CD0                     l5274:
 13194                           
 13195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 13196  002CD0  A03D               	btfss	_flags^0,0,c
 13197  002CD2  EF6D  F016         	goto	u4991
 13198  002CD6  EF6F  F016         	goto	u4990
 13199  002CDA                     u4991:
 13200  002CDA  EF78  F016         	goto	l5278
 13201  002CDE                     u4990:
 13202  002CDE                     
 13203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 13204  002CDE  C021  F016         	movff	ctoa@c,fputc@c
 13205  002CE2  6A17               	clrf	(fputc@c+1)^0,c
 13206  002CE4  C01F  F018         	movff	ctoa@fp,fputc@fp
 13207  002CE8  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
 13208  002CEC  EC29  F018         	call	_fputc	;wreg free
 13209  002CF0                     l5278:
 13210                           
 13211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 13212  002CF0  BE26               	btfsc	(ctoa@w+1)^0,7,c
 13213  002CF2  EF7D  F016         	goto	u5001
 13214  002CF6  EF7F  F016         	goto	u5000
 13215  002CFA                     u5001:
 13216  002CFA  EF81  F016         	goto	l5282
 13217  002CFE                     u5000:
 13218  002CFE  EF85  F016         	goto	l1456
 13219  002D02                     l5282:
 13220  002D02  0E00               	movlw	0
 13221  002D04  6E26               	movwf	(ctoa@w+1)^0,c
 13222  002D06  0E00               	movlw	0
 13223  002D08  6E25               	movwf	ctoa@w^0,c
 13224  002D0A                     l1456:
 13225                           
 13226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 13227  002D0A  0E00               	movlw	0
 13228  002D0C  6E24               	movwf	(ctoa@l+1)^0,c
 13229  002D0E  0E00               	movlw	0
 13230  002D10  6E23               	movwf	ctoa@l^0,c
 13231                           
 13232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13233  002D12  EF97  F016         	goto	l5288
 13234  002D16                     l5284:
 13235                           
 13236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 13237  002D16  0E00               	movlw	0
 13238  002D18  6E17               	movwf	(fputc@c+1)^0,c
 13239  002D1A  0E20               	movlw	32
 13240  002D1C  6E16               	movwf	fputc@c^0,c
 13241  002D1E  C01F  F018         	movff	ctoa@fp,fputc@fp
 13242  002D22  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
 13243  002D26  EC29  F018         	call	_fputc	;wreg free
 13244  002D2A                     
 13245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 275:         ++l;
 13246  002D2A  4A23               	infsnz	ctoa@l^0,f,c
 13247  002D2C  2A24               	incf	(ctoa@l+1)^0,f,c
 13248  002D2E                     l5288:
 13249                           
 13250                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13251  002D2E  5025               	movf	ctoa@w^0,w,c
 13252  002D30  5C23               	subwf	ctoa@l^0,w,c
 13253  002D32  5024               	movf	(ctoa@l+1)^0,w,c
 13254  002D34  0A80               	xorlw	128
 13255  002D36  6E22               	movwf	??_ctoa^0,c
 13256  002D38  5026               	movf	(ctoa@w+1)^0,w,c
 13257  002D3A  0A80               	xorlw	128
 13258  002D3C  5822               	subwfb	??_ctoa^0,w,c
 13259  002D3E  A0D8               	btfss	status,0,c
 13260  002D40  EFA4  F016         	goto	u5011
 13261  002D44  EFA6  F016         	goto	u5010
 13262  002D48                     u5011:
 13263  002D48  EF8B  F016         	goto	l5284
 13264  002D4C                     u5010:
 13265  002D4C                     
 13266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 13267  002D4C  B03D               	btfsc	_flags^0,0,c
 13268  002D4E  EFAB  F016         	goto	u5021
 13269  002D52  EFAD  F016         	goto	u5020
 13270  002D56                     u5021:
 13271  002D56  EFB6  F016         	goto	l5292
 13272  002D5A                     u5020:
 13273  002D5A                     
 13274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 13275  002D5A  C021  F016         	movff	ctoa@c,fputc@c
 13276  002D5E  6A17               	clrf	(fputc@c+1)^0,c
 13277  002D60  C01F  F018         	movff	ctoa@fp,fputc@fp
 13278  002D64  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
 13279  002D68  EC29  F018         	call	_fputc	;wreg free
 13280  002D6C                     l5292:
 13281                           
 13282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 13283  002D6C  0E01               	movlw	1
 13284  002D6E  2423               	addwf	ctoa@l^0,w,c
 13285  002D70  6E1F               	movwf	?_ctoa^0,c
 13286  002D72  0E00               	movlw	0
 13287  002D74  2024               	addwfc	(ctoa@l+1)^0,w,c
 13288  002D76  6E20               	movwf	(?_ctoa+1)^0,c
 13289  002D78  0012               	return		;funcret
 13290  002D7A                     __end_of_ctoa:
 13291                           	callstack 0
 13292                           
 13293 ;; *************** function _fputc *****************
 13294 ;; Defined at:
 13295 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
 13296 ;; Parameters:    Size  Location     Type
 13297 ;;  c               2   21[COMRAM] int 
 13298 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
 13299 ;;		 -> NULL(0), 
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;		None
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  2   21[COMRAM] int 
 13304 ;; Registers used:
 13305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13313 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13314 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13315 ;;Total ram usage:        9 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:    6
 13318 ;; This function calls:
 13319 ;;		_putch
 13320 ;; This function is called by:
 13321 ;;		_pad
 13322 ;;		_ctoa
 13323 ;;		_vfpfcnvrt
 13324 ;;		_fputs
 13325 ;; This function uses a non-reentrant model
 13326 ;;
 13327                           
 13328                           	psect	text45
 13329  003052                     __ptext45:
 13330                           	callstack 0
 13331  003052                     _fputc:
 13332                           	callstack 18
 13333  003052  5018               	movf	fputc@fp^0,w,c
 13334  003054  1019               	iorwf	(fputc@fp+1)^0,w,c
 13335  003056  B4D8               	btfsc	status,2,c
 13336  003058  EF30  F018         	goto	u4541
 13337  00305C  EF32  F018         	goto	u4540
 13338  003060                     u4541:
 13339  003060  EF3B  F018         	goto	l5052
 13340  003064                     u4540:
 13341  003064  5018               	movf	fputc@fp^0,w,c
 13342  003066  1019               	iorwf	(fputc@fp+1)^0,w,c
 13343  003068  A4D8               	btfss	status,2,c
 13344  00306A  EF39  F018         	goto	u4551
 13345  00306E  EF3B  F018         	goto	u4550
 13346  003072                     u4551:
 13347  003072  EF40  F018         	goto	l5054
 13348  003076                     u4550:
 13349  003076                     l5052:
 13350  003076  5016               	movf	fputc@c^0,w,c
 13351  003078  EC16  F01C         	call	_putch
 13352  00307C  EF73  F018         	goto	l1649
 13353  003080                     l5054:
 13354  003080  EE20 F004          	lfsr	2,4
 13355  003084  5018               	movf	fputc@fp^0,w,c
 13356  003086  26D9               	addwf	fsr2l,f,c
 13357  003088  5019               	movf	(fputc@fp+1)^0,w,c
 13358  00308A  22DA               	addwfc	fsr2h,f,c
 13359  00308C  50DE               	movf	postinc2,w,c
 13360  00308E  10DE               	iorwf	postinc2,w,c
 13361  003090  B4D8               	btfsc	status,2,c
 13362  003092  EF4D  F018         	goto	u4561
 13363  003096  EF4F  F018         	goto	u4560
 13364  00309A                     u4561:
 13365  00309A  EF6A  F018         	goto	l5058
 13366  00309E                     u4560:
 13367  00309E  EE20 F004          	lfsr	2,4
 13368  0030A2  5018               	movf	fputc@fp^0,w,c
 13369  0030A4  26D9               	addwf	fsr2l,f,c
 13370  0030A6  5019               	movf	(fputc@fp+1)^0,w,c
 13371  0030A8  22DA               	addwfc	fsr2h,f,c
 13372  0030AA  EE10 F002          	lfsr	1,2
 13373  0030AE  5018               	movf	fputc@fp^0,w,c
 13374  0030B0  26E1               	addwf	fsr1l,f,c
 13375  0030B2  5019               	movf	(fputc@fp+1)^0,w,c
 13376  0030B4  22E2               	addwfc	fsr1h,f,c
 13377  0030B6  50DE               	movf	postinc2,w,c
 13378  0030B8  5CE6               	subwf	postinc1,w,c
 13379  0030BA  50E6               	movf	postinc1,w,c
 13380  0030BC  0A80               	xorlw	128
 13381  0030BE  6E1E               	movwf	(??_fputc+4)^0,c
 13382  0030C0  50DE               	movf	postinc2,w,c
 13383  0030C2  0A80               	xorlw	128
 13384  0030C4  581E               	subwfb	(??_fputc+4)^0,w,c
 13385  0030C6  B0D8               	btfsc	status,0,c
 13386  0030C8  EF68  F018         	goto	u4571
 13387  0030CC  EF6A  F018         	goto	u4570
 13388  0030D0                     u4571:
 13389  0030D0  EF73  F018         	goto	l1649
 13390  0030D4                     u4570:
 13391  0030D4                     l5058:
 13392  0030D4  EE20 F002          	lfsr	2,2
 13393  0030D8  5018               	movf	fputc@fp^0,w,c
 13394  0030DA  26D9               	addwf	fsr2l,f,c
 13395  0030DC  5019               	movf	(fputc@fp+1)^0,w,c
 13396  0030DE  22DA               	addwfc	fsr2h,f,c
 13397  0030E0  2ADE               	incf	postinc2,f,c
 13398  0030E2  0E00               	movlw	0
 13399  0030E4  22DD               	addwfc	postdec2,f,c
 13400  0030E6                     l1649:
 13401  0030E6  0012               	return		;funcret
 13402  0030E8                     __end_of_fputc:
 13403                           	callstack 0
 13404                           
 13405 ;; *************** function _putch *****************
 13406 ;; Defined at:
 13407 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 13408 ;; Parameters:    Size  Location     Type
 13409 ;;  txData          1    wreg     unsigned char 
 13410 ;; Auto vars:     Size  Location     Type
 13411 ;;  txData          1   20[COMRAM] unsigned char 
 13412 ;; Return value:  Size  Location     Type
 13413 ;;                  1    wreg      void 
 13414 ;; Registers used:
 13415 ;;		wreg, status,2, cstack
 13416 ;; Tracked objects:
 13417 ;;		On entry : 0/0
 13418 ;;		On exit  : 0/0
 13419 ;;		Unchanged: 0/0
 13420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13425 ;;Total ram usage:        1 bytes
 13426 ;; Hardware stack levels used:    1
 13427 ;; Hardware stack levels required when called:    5
 13428 ;; This function calls:
 13429 ;;		_EUSART1_Write
 13430 ;; This function is called by:
 13431 ;;		_fputc
 13432 ;; This function uses a non-reentrant model
 13433 ;;
 13434                           
 13435                           	psect	text46
 13436  00382C                     __ptext46:
 13437                           	callstack 0
 13438  00382C                     _putch:
 13439                           	callstack 18
 13440                           
 13441                           ;incstack = 0
 13442                           ;putch@txData stored from wreg
 13443  00382C  6E15               	movwf	putch@txData^0,c
 13444  00382E                     
 13445                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 13446  00382E  5015               	movf	putch@txData^0,w,c
 13447  003830  ECD7  F01B         	call	_EUSART1_Write
 13448  003834  0012               	return		;funcret
 13449  003836                     __end_of_putch:
 13450                           	callstack 0
 13451                           
 13452 ;; *************** function _EUSART1_Write *****************
 13453 ;; Defined at:
 13454 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13455 ;; Parameters:    Size  Location     Type
 13456 ;;  txData          1    wreg     unsigned char 
 13457 ;; Auto vars:     Size  Location     Type
 13458 ;;  txData          1   19[COMRAM] unsigned char 
 13459 ;; Return value:  Size  Location     Type
 13460 ;;                  1    wreg      void 
 13461 ;; Registers used:
 13462 ;;		wreg
 13463 ;; Tracked objects:
 13464 ;;		On entry : 0/0
 13465 ;;		On exit  : 0/0
 13466 ;;		Unchanged: 0/0
 13467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13472 ;;Total ram usage:        1 bytes
 13473 ;; Hardware stack levels used:    1
 13474 ;; Hardware stack levels required when called:    4
 13475 ;; This function calls:
 13476 ;;		Nothing
 13477 ;; This function is called by:
 13478 ;;		_putch
 13479 ;; This function uses a non-reentrant model
 13480 ;;
 13481                           
 13482                           	psect	text47
 13483  0037AE                     __ptext47:
 13484                           	callstack 0
 13485  0037AE                     _EUSART1_Write:
 13486                           	callstack 18
 13487                           
 13488                           ;incstack = 0
 13489                           ;EUSART1_Write@txData stored from wreg
 13490  0037AE  6E14               	movwf	EUSART1_Write@txData^0,c
 13491  0037B0                     l103:
 13492                           
 13493                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 13494  0037B0  A89E               	btfss	158,4,c	;volatile
 13495  0037B2  EFDD  F01B         	goto	u4531
 13496  0037B6  EFDF  F01B         	goto	u4530
 13497  0037BA                     u4531:
 13498  0037BA  EFD8  F01B         	goto	l103
 13499  0037BE                     u4530:
 13500  0037BE                     
 13501                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 13502  0037BE  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 13503  0037C2  0012               	return		;funcret
 13504  0037C4                     __end_of_EUSART1_Write:
 13505                           	callstack 0
 13506                           
 13507 ;; *************** function _atoi *****************
 13508 ;; Defined at:
 13509 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\atoi.c"
 13510 ;; Parameters:    Size  Location     Type
 13511 ;;  s               2   26[COMRAM] PTR const unsigned char 
 13512 ;;		 -> STR_131(3), STR_130(3), STR_129(2), STR_128(4), 
 13513 ;;		 -> STR_127(6), STR_126(3), STR_125(3), STR_124(2), 
 13514 ;;		 -> STR_123(3), STR_122(2), STR_121(4), STR_120(28), 
 13515 ;;		 -> STR_119(26), STR_118(27), STR_117(62), STR_116(62), 
 13516 ;;		 -> STR_115(62), STR_114(62), STR_113(62), STR_112(62), 
 13517 ;;		 -> STR_111(62), STR_110(62), STR_109(62), STR_108(62), 
 13518 ;;		 -> STR_107(62), STR_106(62), STR_105(62), STR_104(62), 
 13519 ;;		 -> STR_103(62), STR_102(62), STR_101(62), STR_100(62), 
 13520 ;;		 -> STR_99(62), STR_98(62), STR_97(62), STR_96(62), 
 13521 ;;		 -> STR_95(62), STR_94(62), STR_93(62), STR_92(62), 
 13522 ;;		 -> STR_91(62), STR_90(62), STR_89(62), STR_88(62), 
 13523 ;;		 -> STR_87(62), STR_86(62), STR_85(62), STR_84(62), 
 13524 ;;		 -> STR_83(62), STR_82(3), STR_81(5), STR_80(2), 
 13525 ;;		 -> STR_79(5), STR_78(17), STR_77(17), STR_76(15), 
 13526 ;;		 -> STR_75(3), STR_74(5), STR_73(2), STR_72(5), 
 13527 ;;		 -> STR_71(19), STR_70(20), STR_69(28), STR_68(20), 
 13528 ;;		 -> STR_67(30), STR_66(21), STR_65(37), STR_64(22), 
 13529 ;;		 -> STR_63(33), STR_62(58), STR_61(48), STR_60(35), 
 13530 ;;		 -> STR_59(5), STR_58(25), STR_57(20), STR_56(71), 
 13531 ;;		 -> STR_55(50), STR_54(22), STR_53(33), STR_52(58), 
 13532 ;;		 -> STR_51(3), STR_50(68), STR_49(58), STR_48(7), 
 13533 ;;		 -> STR_47(2), STR_46(5), STR_45(31), STR_44(27), 
 13534 ;;		 -> STR_43(3), STR_42(76), STR_41(23), STR_40(3), 
 13535 ;;		 -> STR_39(5), STR_38(2), STR_37(5), STR_36(17), 
 13536 ;;		 -> STR_35(30), STR_34(31), STR_33(2), STR_32(2), 
 13537 ;;		 -> STR_31(8), STR_30(52), STR_29(32), STR_28(44), 
 13538 ;;		 -> STR_27(49), STR_26(52), STR_25(55), STR_24(43), 
 13539 ;;		 -> STR_23(37), STR_22(52), STR_21(24), STR_20(52), 
 13540 ;;		 -> STR_19(24), STR_18(21), STR_17(7), STR_16(15), 
 13541 ;;		 -> STR_15(52), STR_14(21), STR_13(3), STR_12(5), 
 13542 ;;		 -> STR_11(2), STR_10(5), STR_9(17), STR_8(29), 
 13543 ;;		 -> STR_7(54), STR_6(5), STR_5(3), STR_4(40), 
 13544 ;;		 -> STR_3(9), STR_2(21), STR_1(9), 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;  n               2   39[COMRAM] int 
 13547 ;;  neg             2   32[COMRAM] int 
 13548 ;; Return value:  Size  Location     Type
 13549 ;;                  2   26[COMRAM] int 
 13550 ;; Registers used:
 13551 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13552 ;; Tracked objects:
 13553 ;;		On entry : 0/0
 13554 ;;		On exit  : 0/0
 13555 ;;		Unchanged: 0/0
 13556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13558 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13559 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13560 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13561 ;;Total ram usage:       15 bytes
 13562 ;; Hardware stack levels used:    1
 13563 ;; Hardware stack levels required when called:    5
 13564 ;; This function calls:
 13565 ;;		___wmul
 13566 ;;		_isdigit
 13567 ;;		_isspace
 13568 ;; This function is called by:
 13569 ;;		_vfpfcnvrt
 13570 ;; This function uses a non-reentrant model
 13571 ;;
 13572                           
 13573                           	psect	text48
 13574  0025B8                     __ptext48:
 13575                           	callstack 0
 13576  0025B8                     _atoi:
 13577                           	callstack 22
 13578  0025B8  0E00               	movlw	0
 13579  0025BA  6E29               	movwf	(atoi@n+1)^0,c
 13580  0025BC  0E00               	movlw	0
 13581  0025BE  6E28               	movwf	atoi@n^0,c
 13582  0025C0  0E00               	movlw	0
 13583  0025C2  6E22               	movwf	(atoi@neg+1)^0,c
 13584  0025C4  0E00               	movlw	0
 13585  0025C6  6E21               	movwf	atoi@neg^0,c
 13586  0025C8  EFE8  F012         	goto	l5464
 13587  0025CC                     l5462:
 13588  0025CC  4A1B               	infsnz	atoi@s^0,f,c
 13589  0025CE  2A1C               	incf	(atoi@s+1)^0,f,c
 13590  0025D0                     l5464:
 13591  0025D0  0E01               	movlw	1
 13592  0025D2  6E27               	movwf	_atoi$2043^0,c
 13593  0025D4  C01B  FFF6         	movff	atoi@s,tblptrl
 13594  0025D8  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13595  0025DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13596  0025DC  6AF8               	clrf	tblptru,c
 13597  0025DE                     	endif
 13598  0025DE                     	if	0	;tblptru may be non-zero
 13599  0025DE                     	endif
 13600  0025DE  0008               	tblrd		*
 13601  0025E0  50F5               	movf	tablat,w,c
 13602  0025E2  0A20               	xorlw	32
 13603  0025E4  B4D8               	btfsc	status,2,c
 13604  0025E6  EFF7  F012         	goto	u5421
 13605  0025EA  EFF9  F012         	goto	u5420
 13606  0025EE                     u5421:
 13607  0025EE  EF17  F013         	goto	l5472
 13608  0025F2                     u5420:
 13609  0025F2  0EF7               	movlw	247
 13610  0025F4  6E1D               	movwf	??_atoi^0,c
 13611  0025F6  0EFF               	movlw	255
 13612  0025F8  6E1E               	movwf	(??_atoi+1)^0,c
 13613  0025FA  C01B  FFF6         	movff	atoi@s,tblptrl
 13614  0025FE  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13615  002602                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13616  002602  6AF8               	clrf	tblptru,c
 13617  002604                     	endif
 13618  002604                     	if	0	;tblptru may be non-zero
 13619  002604                     	endif
 13620  002604  0008               	tblrd		*
 13621  002606  50F5               	movf	tablat,w,c
 13622  002608  6E1F               	movwf	(??_atoi+2)^0,c
 13623  00260A  6A20               	clrf	(??_atoi+3)^0,c
 13624  00260C  501D               	movf	??_atoi^0,w,c
 13625  00260E  261F               	addwf	(??_atoi+2)^0,f,c
 13626  002610  501E               	movf	(??_atoi+1)^0,w,c
 13627  002612  2220               	addwfc	(??_atoi+3)^0,f,c
 13628  002614  5020               	movf	(??_atoi+3)^0,w,c
 13629  002616  E109               	bnz	u5430
 13630  002618  0E05               	movlw	5
 13631  00261A  5C1F               	subwf	(??_atoi+2)^0,w,c
 13632  00261C  A0D8               	btfss	status,0,c
 13633  00261E  EF13  F013         	goto	u5431
 13634  002622  EF15  F013         	goto	u5430
 13635  002626                     u5431:
 13636  002626  EF17  F013         	goto	l5472
 13637  00262A                     u5430:
 13638  00262A  0E00               	movlw	0
 13639  00262C  6E27               	movwf	_atoi$2043^0,c
 13640  00262E                     l5472:
 13641  00262E  C027  F023         	movff	_atoi$2043,_atoi$2042
 13642  002632  6A24               	clrf	(_atoi$2042+1)^0,c
 13643  002634  5023               	movf	_atoi$2042^0,w,c
 13644  002636  1024               	iorwf	(_atoi$2042+1)^0,w,c
 13645  002638  A4D8               	btfss	status,2,c
 13646  00263A  EF21  F013         	goto	u5441
 13647  00263E  EF23  F013         	goto	u5440
 13648  002642                     u5441:
 13649  002642  EFE6  F012         	goto	l5462
 13650  002646                     u5440:
 13651  002646  EF2D  F013         	goto	l5482
 13652  00264A                     l5478:
 13653  00264A  0E00               	movlw	0
 13654  00264C  6E22               	movwf	(atoi@neg+1)^0,c
 13655  00264E  0E01               	movlw	1
 13656  002650  6E21               	movwf	atoi@neg^0,c
 13657  002652                     l5480:
 13658  002652  4A1B               	infsnz	atoi@s^0,f,c
 13659  002654  2A1C               	incf	(atoi@s+1)^0,f,c
 13660  002656  EF64  F013         	goto	l5488
 13661  00265A                     l5482:
 13662  00265A  C01B  FFF6         	movff	atoi@s,tblptrl
 13663  00265E  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13664  002662                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13665  002662  6AF8               	clrf	tblptru,c
 13666  002664                     	endif
 13667  002664                     	if	0	;tblptru may be non-zero
 13668  002664                     	endif
 13669  002664  0008               	tblrd		*
 13670  002666  50F5               	movf	tablat,w,c
 13671  002668  6E1D               	movwf	??_atoi^0,c
 13672  00266A  6A1E               	clrf	(??_atoi+1)^0,c
 13673                           
 13674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13675                           ; Switch size 1, requested type "simple"
 13676                           ; Number of cases is 1, Range of values is 0 to 0
 13677                           ; switch strategies available:
 13678                           ; Name         Instructions Cycles
 13679                           ; simple_byte            4     3 (average)
 13680                           ;	Chosen strategy is simple_byte
 13681  00266C  501E               	movf	(??_atoi+1)^0,w,c
 13682  00266E  0A00               	xorlw	0	; case 0
 13683  002670  B4D8               	btfsc	status,2,c
 13684  002672  EF3D  F013         	goto	l6542
 13685  002676  EF64  F013         	goto	l5488
 13686  00267A                     l6542:
 13687                           
 13688                           ; Switch size 1, requested type "simple"
 13689                           ; Number of cases is 2, Range of values is 43 to 45
 13690                           ; switch strategies available:
 13691                           ; Name         Instructions Cycles
 13692                           ; simple_byte            7     4 (average)
 13693                           ;	Chosen strategy is simple_byte
 13694  00267A  501D               	movf	??_atoi^0,w,c
 13695  00267C  0A2B               	xorlw	43	; case 43
 13696  00267E  B4D8               	btfsc	status,2,c
 13697  002680  EF29  F013         	goto	l5480
 13698  002684  0A06               	xorlw	6	; case 45
 13699  002686  B4D8               	btfsc	status,2,c
 13700  002688  EF25  F013         	goto	l5478
 13701  00268C  EF64  F013         	goto	l5488
 13702  002690                     l5484:
 13703  002690  C028  F014         	movff	atoi@n,___wmul@multiplier
 13704  002694  C029  F015         	movff	atoi@n+1,___wmul@multiplier+1
 13705  002698  0E00               	movlw	0
 13706  00269A  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 13707  00269C  0E0A               	movlw	10
 13708  00269E  6E16               	movwf	___wmul@multiplicand^0,c
 13709  0026A0  EC7F  F01B         	call	___wmul	;wreg free
 13710  0026A4  C01B  FFF6         	movff	atoi@s,tblptrl
 13711  0026A8  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13712  0026AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13713  0026AC  6AF8               	clrf	tblptru,c
 13714  0026AE                     	endif
 13715  0026AE                     	if	0	;tblptru may be non-zero
 13716  0026AE                     	endif
 13717  0026AE  0008               	tblrd		*
 13718  0026B0  50F5               	movf	tablat,w,c
 13719  0026B2  5E14               	subwf	?___wmul^0,f,c
 13720  0026B4  0E00               	movlw	0
 13721  0026B6  5A15               	subwfb	(?___wmul+1)^0,f,c
 13722  0026B8  0E30               	movlw	48
 13723  0026BA  2414               	addwf	?___wmul^0,w,c
 13724  0026BC  6E28               	movwf	atoi@n^0,c
 13725  0026BE  0E00               	movlw	0
 13726  0026C0  2015               	addwfc	(?___wmul+1)^0,w,c
 13727  0026C2  6E29               	movwf	(atoi@n+1)^0,c
 13728  0026C4  EF29  F013         	goto	l5480
 13729  0026C8                     l5488:
 13730  0026C8  0ED0               	movlw	208
 13731  0026CA  6E1D               	movwf	??_atoi^0,c
 13732  0026CC  0EFF               	movlw	255
 13733  0026CE  6E1E               	movwf	(??_atoi+1)^0,c
 13734  0026D0  C01B  FFF6         	movff	atoi@s,tblptrl
 13735  0026D4  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13736  0026D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13737  0026D8  6AF8               	clrf	tblptru,c
 13738  0026DA                     	endif
 13739  0026DA                     	if	0	;tblptru may be non-zero
 13740  0026DA                     	endif
 13741  0026DA  0008               	tblrd		*
 13742  0026DC  50F5               	movf	tablat,w,c
 13743  0026DE  6E1F               	movwf	(??_atoi+2)^0,c
 13744  0026E0  6A20               	clrf	(??_atoi+3)^0,c
 13745  0026E2  501D               	movf	??_atoi^0,w,c
 13746  0026E4  261F               	addwf	(??_atoi+2)^0,f,c
 13747  0026E6  501E               	movf	(??_atoi+1)^0,w,c
 13748  0026E8  2220               	addwfc	(??_atoi+3)^0,f,c
 13749  0026EA  5020               	movf	(??_atoi+3)^0,w,c
 13750  0026EC  E10A               	bnz	u5450
 13751  0026EE  0E0A               	movlw	10
 13752  0026F0  5C1F               	subwf	(??_atoi+2)^0,w,c
 13753  0026F2  A0D8               	btfss	status,0,c
 13754  0026F4  EF7E  F013         	goto	u5451
 13755  0026F8  EF81  F013         	goto	u5450
 13756  0026FC                     u5451:
 13757  0026FC  0E01               	movlw	1
 13758  0026FE  EF82  F013         	goto	u5460
 13759  002702                     u5450:
 13760  002702  0E00               	movlw	0
 13761  002704                     u5460:
 13762  002704  6E25               	movwf	_atoi$2044^0,c
 13763  002706  6A26               	clrf	(_atoi$2044+1)^0,c
 13764  002708  5025               	movf	_atoi$2044^0,w,c
 13765  00270A  1026               	iorwf	(_atoi$2044+1)^0,w,c
 13766  00270C  A4D8               	btfss	status,2,c
 13767  00270E  EF8B  F013         	goto	u5471
 13768  002712  EF8D  F013         	goto	u5470
 13769  002716                     u5471:
 13770  002716  EF48  F013         	goto	l5484
 13771  00271A                     u5470:
 13772  00271A  5021               	movf	atoi@neg^0,w,c
 13773  00271C  1022               	iorwf	(atoi@neg+1)^0,w,c
 13774  00271E  A4D8               	btfss	status,2,c
 13775  002720  EF94  F013         	goto	u5481
 13776  002724  EF96  F013         	goto	u5480
 13777  002728                     u5481:
 13778  002728  EFA4  F013         	goto	l1608
 13779  00272C                     u5480:
 13780  00272C  C028  F01D         	movff	atoi@n,??_atoi
 13781  002730  C029  F01E         	movff	atoi@n+1,??_atoi+1
 13782  002734  1E1D               	comf	??_atoi^0,f,c
 13783  002736  1E1E               	comf	(??_atoi+1)^0,f,c
 13784  002738  4A1D               	infsnz	??_atoi^0,f,c
 13785  00273A  2A1E               	incf	(??_atoi+1)^0,f,c
 13786  00273C  C01D  F01B         	movff	??_atoi,?_atoi
 13787  002740  C01E  F01C         	movff	??_atoi+1,?_atoi+1
 13788  002744  EFA8  F013         	goto	l1611
 13789  002748                     l1608:
 13790  002748  C028  F01B         	movff	atoi@n,?_atoi
 13791  00274C  C029  F01C         	movff	atoi@n+1,?_atoi+1
 13792  002750                     l1611:
 13793  002750  0012               	return		;funcret
 13794  002752                     __end_of_atoi:
 13795                           	callstack 0
 13796                           
 13797 ;; *************** function _isspace *****************
 13798 ;; Defined at:
 13799 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isspace.c"
 13800 ;; Parameters:    Size  Location     Type
 13801 ;;  c               2   19[COMRAM] int 
 13802 ;; Auto vars:     Size  Location     Type
 13803 ;;		None
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  2   19[COMRAM] int 
 13806 ;; Registers used:
 13807 ;;		wreg, status,2, status,0
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;Total ram usage:        7 bytes
 13818 ;; Hardware stack levels used:    1
 13819 ;; Hardware stack levels required when called:    4
 13820 ;; This function calls:
 13821 ;;		Nothing
 13822 ;; This function is called by:
 13823 ;;		_atoi
 13824 ;; This function uses a non-reentrant model
 13825 ;;
 13826                           
 13827                           	psect	text49
 13828  003316                     __ptext49:
 13829                           	callstack 0
 13830  003316                     _isspace:
 13831                           	callstack 22
 13832  003316  0E01               	movlw	1
 13833  003318  6E1A               	movwf	_isspace$2069^0,c
 13834  00331A  0E20               	movlw	32
 13835  00331C  1814               	xorwf	isspace@c^0,w,c
 13836  00331E  1015               	iorwf	(isspace@c+1)^0,w,c
 13837  003320  B4D8               	btfsc	status,2,c
 13838  003322  EF95  F019         	goto	u4961
 13839  003326  EF97  F019         	goto	u4960
 13840  00332A                     u4961:
 13841  00332A  EFB0  F019         	goto	l5264
 13842  00332E                     u4960:
 13843  00332E  0EF7               	movlw	247
 13844  003330  6E16               	movwf	??_isspace^0,c
 13845  003332  0EFF               	movlw	255
 13846  003334  6E17               	movwf	(??_isspace+1)^0,c
 13847  003336  C014  F018         	movff	isspace@c,??_isspace+2
 13848  00333A  C015  F019         	movff	isspace@c+1,??_isspace+3
 13849  00333E  5016               	movf	??_isspace^0,w,c
 13850  003340  2618               	addwf	(??_isspace+2)^0,f,c
 13851  003342  5017               	movf	(??_isspace+1)^0,w,c
 13852  003344  2219               	addwfc	(??_isspace+3)^0,f,c
 13853  003346  5019               	movf	(??_isspace+3)^0,w,c
 13854  003348  E109               	bnz	u4970
 13855  00334A  0E05               	movlw	5
 13856  00334C  5C18               	subwf	(??_isspace+2)^0,w,c
 13857  00334E  A0D8               	btfss	status,0,c
 13858  003350  EFAC  F019         	goto	u4971
 13859  003354  EFAE  F019         	goto	u4970
 13860  003358                     u4971:
 13861  003358  EFB0  F019         	goto	l5264
 13862  00335C                     u4970:
 13863  00335C  0E00               	movlw	0
 13864  00335E  6E1A               	movwf	_isspace$2069^0,c
 13865  003360                     l5264:
 13866  003360  C01A  F014         	movff	_isspace$2069,?_isspace
 13867  003364  6A15               	clrf	(?_isspace+1)^0,c
 13868  003366  0012               	return		;funcret
 13869  003368                     __end_of_isspace:
 13870                           	callstack 0
 13871                           
 13872 ;; *************** function _isdigit *****************
 13873 ;; Defined at:
 13874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\isdigit.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;  c               2   19[COMRAM] int 
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;		None
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  2   19[COMRAM] int 
 13881 ;; Registers used:
 13882 ;;		wreg, status,2, status,0
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13891 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13892 ;;Total ram usage:        6 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:    4
 13895 ;; This function calls:
 13896 ;;		Nothing
 13897 ;; This function is called by:
 13898 ;;		_vfpfcnvrt
 13899 ;;		_atoi
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text50
 13904  003552                     __ptext50:
 13905                           	callstack 0
 13906  003552                     _isdigit:
 13907                           	callstack 23
 13908  003552  0ED0               	movlw	208
 13909  003554  6E16               	movwf	??_isdigit^0,c
 13910  003556  0EFF               	movlw	255
 13911  003558  6E17               	movwf	(??_isdigit+1)^0,c
 13912  00355A  C014  F018         	movff	isdigit@c,??_isdigit+2
 13913  00355E  C015  F019         	movff	isdigit@c+1,??_isdigit+3
 13914  003562  5016               	movf	??_isdigit^0,w,c
 13915  003564  2618               	addwf	(??_isdigit+2)^0,f,c
 13916  003566  5017               	movf	(??_isdigit+1)^0,w,c
 13917  003568  2219               	addwfc	(??_isdigit+3)^0,f,c
 13918  00356A  5019               	movf	(??_isdigit+3)^0,w,c
 13919  00356C  E10A               	bnz	u4940
 13920  00356E  0E0A               	movlw	10
 13921  003570  5C18               	subwf	(??_isdigit+2)^0,w,c
 13922  003572  A0D8               	btfss	status,0,c
 13923  003574  EFBE  F01A         	goto	u4941
 13924  003578  EFC1  F01A         	goto	u4940
 13925  00357C                     u4941:
 13926  00357C  0E01               	movlw	1
 13927  00357E  EFC2  F01A         	goto	u4950
 13928  003582                     u4940:
 13929  003582  0E00               	movlw	0
 13930  003584                     u4950:
 13931  003584  6E14               	movwf	?_isdigit^0,c
 13932  003586  6A15               	clrf	(?_isdigit+1)^0,c
 13933  003588  0012               	return		;funcret
 13934  00358A                     __end_of_isdigit:
 13935                           	callstack 0
 13936                           
 13937 ;; *************** function ___wmul *****************
 13938 ;; Defined at:
 13939 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
 13940 ;; Parameters:    Size  Location     Type
 13941 ;;  multiplier      2   19[COMRAM] unsigned int 
 13942 ;;  multiplicand    2   21[COMRAM] unsigned int 
 13943 ;; Auto vars:     Size  Location     Type
 13944 ;;  product         2   23[COMRAM] unsigned int 
 13945 ;; Return value:  Size  Location     Type
 13946 ;;                  2   19[COMRAM] unsigned int 
 13947 ;; Registers used:
 13948 ;;		wreg, status,2, status,0, prodl, prodh
 13949 ;; Tracked objects:
 13950 ;;		On entry : 0/0
 13951 ;;		On exit  : 0/0
 13952 ;;		Unchanged: 0/0
 13953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13958 ;;Total ram usage:        6 bytes
 13959 ;; Hardware stack levels used:    1
 13960 ;; Hardware stack levels required when called:    4
 13961 ;; This function calls:
 13962 ;;		Nothing
 13963 ;; This function is called by:
 13964 ;;		_atoi
 13965 ;; This function uses a non-reentrant model
 13966 ;;
 13967                           
 13968                           	psect	text51
 13969  0036FE                     __ptext51:
 13970                           	callstack 0
 13971  0036FE                     ___wmul:
 13972                           	callstack 22
 13973  0036FE  5014               	movf	___wmul@multiplier^0,w,c
 13974  003700  0216               	mulwf	___wmul@multiplicand^0,c
 13975  003702  CFF3 F018          	movff	prodl,___wmul@product
 13976  003706  CFF4 F019          	movff	prodh,___wmul@product+1
 13977  00370A  5014               	movf	___wmul@multiplier^0,w,c
 13978  00370C  0217               	mulwf	(___wmul@multiplicand+1)^0,c
 13979  00370E  50F3               	movf	243,w,c
 13980  003710  2619               	addwf	(___wmul@product+1)^0,f,c
 13981  003712  5015               	movf	(___wmul@multiplier+1)^0,w,c
 13982  003714  0216               	mulwf	___wmul@multiplicand^0,c
 13983  003716  50F3               	movf	243,w,c
 13984  003718  2619               	addwf	(___wmul@product+1)^0,f,c
 13985  00371A  C018  F014         	movff	___wmul@product,?___wmul
 13986  00371E  C019  F015         	movff	___wmul@product+1,?___wmul+1
 13987  003722  0012               	return		;funcret
 13988  003724                     __end_of___wmul:
 13989                           	callstack 0
 13990                           
 13991 ;; *************** function _SPI2_ExchangeByte *****************
 13992 ;; Defined at:
 13993 ;;		line 92 in file "mcc_generated_files/spi2.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;  data            1    wreg     unsigned char 
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;  data            1   19[COMRAM] unsigned char 
 13998 ;; Return value:  Size  Location     Type
 13999 ;;                  1    wreg      unsigned char 
 14000 ;; Registers used:
 14001 ;;		wreg, status,2
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14011 ;;Total ram usage:        1 bytes
 14012 ;; Hardware stack levels used:    1
 14013 ;; Hardware stack levels required when called:    4
 14014 ;; This function calls:
 14015 ;;		Nothing
 14016 ;; This function is called by:
 14017 ;;		_SDCARD_ReadBlock
 14018 ;;		_SDCARD_WriteBlock
 14019 ;;		_SDCARD_PollWriteComplete
 14020 ;;		_SDCARD_Initialize
 14021 ;;		_SPI2_WriteBlock
 14022 ;;		_SPI2_ReadBlock
 14023 ;; This function uses a non-reentrant model
 14024 ;;
 14025                           
 14026                           	psect	text52
 14027  00377E                     __ptext52:
 14028                           	callstack 0
 14029  00377E                     _SPI2_ExchangeByte:
 14030                           	callstack 25
 14031                           
 14032                           ;incstack = 0
 14033                           ;SPI2_ExchangeByte@data stored from wreg
 14034  00377E  6E14               	movwf	SPI2_ExchangeByte@data^0,c
 14035  003780                     
 14036                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 14037  003780  C014  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 14038  003784                     l344:
 14039  003784  AEA4               	btfss	164,7,c	;volatile
 14040  003786  EFC7  F01B         	goto	u5661
 14041  00378A  EFC9  F01B         	goto	u5660
 14042  00378E                     u5661:
 14043  00378E  EFC2  F01B         	goto	l344
 14044  003792                     u5660:
 14045  003792                     
 14046                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 14047  003792  9EA4               	bcf	164,7,c	;volatile
 14048                           
 14049                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 14050  003794  506F               	movf	111,w,c	;volatile
 14051  003796  0012               	return		;funcret
 14052  003798                     __end_of_SPI2_ExchangeByte:
 14053                           	callstack 0
 14054                           
 14055 ;; *************** function _EUSART1_is_rx_ready *****************
 14056 ;; Defined at:
 14057 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;		None
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;		None
 14062 ;; Return value:  Size  Location     Type
 14063 ;;                  1    wreg      _Bool 
 14064 ;; Registers used:
 14065 ;;		wreg
 14066 ;; Tracked objects:
 14067 ;;		On entry : 0/0
 14068 ;;		On exit  : 0/0
 14069 ;;		Unchanged: 0/0
 14070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;Total ram usage:        0 bytes
 14076 ;; Hardware stack levels used:    1
 14077 ;; Hardware stack levels required when called:    4
 14078 ;; This function calls:
 14079 ;;		Nothing
 14080 ;; This function is called by:
 14081 ;;		_main
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           	psect	text53
 14086  0037C4                     __ptext53:
 14087                           	callstack 0
 14088  0037C4                     _EUSART1_is_rx_ready:
 14089                           	callstack 26
 14090  0037C4                     
 14091                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 14092  0037C4  BA9E               	btfsc	158,5,c	;volatile
 14093  0037C6  EFE7  F01B         	goto	u5671
 14094  0037CA  EFEA  F01B         	goto	u5670
 14095  0037CE                     u5671:
 14096  0037CE  0E01               	movlw	1
 14097  0037D0  EFEB  F01B         	goto	u5676
 14098  0037D4                     u5670:
 14099  0037D4  0E00               	movlw	0
 14100  0037D6                     u5676:
 14101  0037D6  0012               	return		;funcret
 14102  0037D8                     __end_of_EUSART1_is_rx_ready:
 14103                           	callstack 0
 14104                           
 14105 ;; *************** function _EUSART1_Read *****************
 14106 ;; Defined at:
 14107 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 14108 ;; Parameters:    Size  Location     Type
 14109 ;;		None
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;		None
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      unsigned char 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14125 ;;Total ram usage:        0 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:    4
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_main
 14132 ;;		_getch
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           	psect	text54
 14137  0036B0                     __ptext54:
 14138                           	callstack 0
 14139  0036B0                     _EUSART1_Read:
 14140                           	callstack 26
 14141  0036B0                     l96:
 14142                           
 14143                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 14144  0036B0  AA9E               	btfss	158,5,c	;volatile
 14145  0036B2  EF5D  F01B         	goto	u5681
 14146  0036B6  EF5F  F01B         	goto	u5680
 14147  0036BA                     u5681:
 14148  0036BA  EF58  F01B         	goto	l96
 14149  0036BE                     u5680:
 14150  0036BE                     
 14151                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 14152  0036BE  0E00               	movlw	0
 14153  0036C0  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
 14154  0036C2                     
 14155                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 14156  0036C2  A2AB               	btfss	171,1,c	;volatile
 14157  0036C4  EF66  F01B         	goto	u5691
 14158  0036C8  EF68  F01B         	goto	u5690
 14159  0036CC                     u5691:
 14160  0036CC  EF6A  F01B         	goto	l5716
 14161  0036D0                     u5690:
 14162  0036D0                     
 14163                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 14164  0036D0  98AB               	bcf	171,4,c	;volatile
 14165                           
 14166                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 14167  0036D2  88AB               	bsf	171,4,c	;volatile
 14168  0036D4                     l5716:
 14169                           
 14170                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 14171  0036D4  50AE               	movf	174,w,c	;volatile
 14172  0036D6  0012               	return		;funcret
 14173  0036D8                     __end_of_EUSART1_Read:
 14174                           	callstack 0
 14175                           
 14176 ;; *************** function _INTERRUPT_InterruptManager *****************
 14177 ;; Defined at:
 14178 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14179 ;; Parameters:    Size  Location     Type
 14180 ;;		None
 14181 ;; Auto vars:     Size  Location     Type
 14182 ;;		None
 14183 ;; Return value:  Size  Location     Type
 14184 ;;                  1    wreg      void 
 14185 ;; Registers used:
 14186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14187 ;; Tracked objects:
 14188 ;;		On entry : 0/0
 14189 ;;		On exit  : 0/0
 14190 ;;		Unchanged: 0/0
 14191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14196 ;;Total ram usage:        4 bytes
 14197 ;; Hardware stack levels used:    1
 14198 ;; Hardware stack levels required when called:    3
 14199 ;; This function calls:
 14200 ;;		_TMR0_ISR
 14201 ;; This function is called by:
 14202 ;;		Interrupt level 2
 14203 ;; This function uses a non-reentrant model
 14204 ;;
 14205                           
 14206                           	psect	intcode
 14207  000008                     __pintcode:
 14208                           	callstack 0
 14209  000008                     _INTERRUPT_InterruptManager:
 14210                           	callstack 17
 14211                           
 14212                           ;incstack = 0
 14213  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14214  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
 14215  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14216  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 14217  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 14218  00001A                     
 14219                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 14220  00001A  AAF2               	btfss	242,5,c	;volatile
 14221  00001C  EF12  F000         	goto	i2u387_41
 14222  000020  EF14  F000         	goto	i2u387_40
 14223  000024                     i2u387_41:
 14224  000024  EF1D  F000         	goto	i2l36
 14225  000028                     i2u387_40:
 14226  000028  A4F2               	btfss	242,2,c	;volatile
 14227  00002A  EF19  F000         	goto	i2u388_41
 14228  00002E  EF1B  F000         	goto	i2u388_40
 14229  000032                     i2u388_41:
 14230  000032  EF1D  F000         	goto	i2l36
 14231  000036                     i2u388_40:
 14232  000036                     
 14233                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 14234  000036  ECFB  F01A         	call	_TMR0_ISR	;wreg free
 14235  00003A                     i2l36:
 14236  00003A  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14237  00003E  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14238  000042  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14239  000046  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14240  00004A  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14241  00004C  0011               	retfie		f
 14242  00004E                     __end_of_INTERRUPT_InterruptManager:
 14243                           	callstack 0
 14244                           
 14245 ;; *************** function _TMR0_ISR *****************
 14246 ;; Defined at:
 14247 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;		None
 14250 ;; Auto vars:     Size  Location     Type
 14251 ;;		None
 14252 ;; Return value:  Size  Location     Type
 14253 ;;                  1    wreg      void 
 14254 ;; Registers used:
 14255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14256 ;; Tracked objects:
 14257 ;;		On entry : 0/0
 14258 ;;		On exit  : 0/0
 14259 ;;		Unchanged: 0/0
 14260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14265 ;;Total ram usage:        0 bytes
 14266 ;; Hardware stack levels used:    1
 14267 ;; Hardware stack levels required when called:    2
 14268 ;; This function calls:
 14269 ;;		Absolute function
 14270 ;;		_TMR0_DefaultInterruptHandler
 14271 ;;		_myTMR0ISR
 14272 ;; This function is called by:
 14273 ;;		_INTERRUPT_InterruptManager
 14274 ;; This function uses a non-reentrant model
 14275 ;;
 14276                           
 14277                           	psect	text56
 14278  0035F6                     __ptext56:
 14279                           	callstack 0
 14280  0035F6                     _TMR0_ISR:
 14281                           	callstack 17
 14282  0035F6                     
 14283                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 14284  0035F6  94F2               	bcf	242,2,c	;volatile
 14285  0035F8                     
 14286                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 14287  0035F8  5042               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 14288  0035FA  6ED7               	movwf	215,c	;volatile
 14289  0035FC                     
 14290                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 14291  0035FC  C041  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 14292  003600                     
 14293                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 14294  003600  5043               	movf	_TMR0_InterruptHandler^0,w,c
 14295  003602  1044               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 14296  003604  B4D8               	btfsc	status,2,c
 14297  003606  EF07  F01B         	goto	i2u359_41
 14298  00360A  EF09  F01B         	goto	i2u359_40
 14299  00360E                     i2u359_41:
 14300  00360E  EF15  F01B         	goto	i2l170
 14301  003612                     i2u359_40:
 14302  003612                     
 14303                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 14304  003612  D802               	call	i2u360_48
 14305  003614  EF15  F01B         	goto	i2u360_49
 14306  003618                     i2u360_48:
 14307  003618  0005               	push	
 14308  00361A  6EFA               	movwf	pclath,c
 14309  00361C  5043               	movf	_TMR0_InterruptHandler^0,w,c
 14310  00361E  6EFD               	movwf	tosl,c
 14311  003620  5044               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 14312  003622  6EFE               	movwf	tosh,c
 14313  003624  6AFF               	clrf	tosu,c
 14314  003626  50FA               	movf	pclath,w,c
 14315  003628  0012               	return		;indir
 14316  00362A                     i2u360_49:
 14317  00362A                     i2l170:
 14318  00362A  0012               	return		;funcret
 14319  00362C                     __end_of_TMR0_ISR:
 14320                           	callstack 0
 14321                           
 14322 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14323 ;; Defined at:
 14324 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;		None
 14327 ;; Auto vars:     Size  Location     Type
 14328 ;;		None
 14329 ;; Return value:  Size  Location     Type
 14330 ;;                  1    wreg      void 
 14331 ;; Registers used:
 14332 ;;		None
 14333 ;; Tracked objects:
 14334 ;;		On entry : 0/0
 14335 ;;		On exit  : 0/0
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14342 ;;Total ram usage:        0 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; This function calls:
 14345 ;;		Nothing
 14346 ;; This function is called by:
 14347 ;;		_TMR0_Initialize
 14348 ;;		_TMR0_ISR
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text57
 14353  00384C                     __ptext57:
 14354                           	callstack 0
 14355  00384C                     _TMR0_DefaultInterruptHandler:
 14356                           	callstack 18
 14357  00384C  0012               	return		;funcret
 14358  00384E                     __end_of_TMR0_DefaultInterruptHandler:
 14359                           	callstack 0
 14360                           
 14361 ;; *************** function _myTMR0ISR *****************
 14362 ;; Defined at:
 14363 ;;		line 460 in file "main.c"
 14364 ;; Parameters:    Size  Location     Type
 14365 ;;		None
 14366 ;; Auto vars:     Size  Location     Type
 14367 ;;  mic             2   12[COMRAM] unsigned short 
 14368 ;;  useBuffer1      1   14[COMRAM] unsigned char 
 14369 ;; Return value:  Size  Location     Type
 14370 ;;                  1    wreg      void 
 14371 ;; Registers used:
 14372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14373 ;; Tracked objects:
 14374 ;;		On entry : 0/0
 14375 ;;		On exit  : 0/0
 14376 ;;		Unchanged: 0/0
 14377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14379 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14381 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14382 ;;Total ram usage:        5 bytes
 14383 ;; Hardware stack levels used:    1
 14384 ;; Hardware stack levels required when called:    1
 14385 ;; This function calls:
 14386 ;;		_EPWM1_LoadDutyValue
 14387 ;;		_TMR0_ReadTimer
 14388 ;;		i2_TMR0_WriteTimer
 14389 ;; This function is called by:
 14390 ;;		_main
 14391 ;;		_TMR0_ISR
 14392 ;; This function uses a non-reentrant model
 14393 ;;
 14394                           
 14395                           	psect	text58
 14396  001DCC                     __ptext58:
 14397                           	callstack 0
 14398  001DCC                     _myTMR0ISR:
 14399                           	callstack 17
 14400  001DCC                     
 14401                           ;main.c: 461:     ADCON0bits.GO_NOT_DONE = 1;
 14402  001DCC  82C2               	bsf	194,1,c	;volatile
 14403  001DCE                     
 14404                           ;main.c: 463:     TMR0_WriteTimer(0x10000 - (sampleRate - TMR0_ReadTimer()));
 14405  001DCE  ECA2  F01B         	call	_TMR0_ReadTimer	;wreg free
 14406  001DD2  0100               	movlb	0	; () banked
 14407  001DD4  51D1               	movf	_sampleRate& (0+255),w,b
 14408  001DD6  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 14409  001DD8  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 14410  001DDA  51D2               	movf	(_sampleRate+1)& (0+255),w,b
 14411  001DDC  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 14412  001DDE  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 14413  001DE0  EC1B  F01C         	call	i2_TMR0_WriteTimer	;wreg free
 14414  001DE4                     
 14415                           ;main.c: 464:     static uint16_t bufferIndex = 0;;main.c: 465:     static myTMR0states_
      +                          t state = IDLE;;main.c: 466:     static uint8_t *buffer = sdCardBuffer1;;main.c: 467:   
      +                            uint8_t useBuffer1 = 1;
 14416  001DE4  0E01               	movlw	1
 14417  001DE6  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14418  001DE8                     
 14419                           ;main.c: 469:     uint16_t mic = ADRESH;
 14420  001DE8  CFC4 F00D          	movff	4036,myTMR0ISR@mic	;volatile
 14421  001DEC  6A0E               	clrf	(myTMR0ISR@mic+1)^0,c
 14422                           
 14423                           ;main.c: 471:     switch(state) {
 14424  001DEE  EFCA  F00F         	goto	i2l4186
 14425  001DF2                     i2l4096:
 14426                           
 14427                           ;main.c: 473:             if (startCollect) {
 14428  001DF2  5048               	movf	_startCollect^0,w,c
 14429  001DF4  B4D8               	btfsc	status,2,c
 14430  001DF6  EFFF  F00E         	goto	i2u345_41
 14431  001DFA  EF01  F00F         	goto	i2u345_40
 14432  001DFE                     i2u345_41:
 14433  001DFE  EF14  F00F         	goto	i2l4106
 14434  001E02                     i2u345_40:
 14435  001E02                     
 14436                           ;main.c: 474:                 collecting = 1;
 14437  001E02  0E01               	movlw	1
 14438  001E04  0100               	movlb	0	; () banked
 14439  001E06  6FCE               	movwf	_collecting& (0+255),b
 14440                           
 14441                           ;main.c: 475:                 stopCollect = 0;
 14442  001E08  0E00               	movlw	0
 14443  001E0A  6E47               	movwf	_stopCollect^0,c
 14444                           
 14445                           ;main.c: 476:                 state = MIC_ACQUIRE;
 14446  001E0C  0E04               	movlw	4
 14447  001E0E  6E45               	movwf	myTMR0ISR@state^0,c
 14448                           
 14449                           ;main.c: 477:                 bufferIndex = 0;
 14450  001E10  0E00               	movlw	0
 14451  001E12  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14452  001E14  0E00               	movlw	0
 14453  001E16  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14454  001E18                     
 14455                           ; BSR set to: 0
 14456                           ;main.c: 478:                 buffer = sdCardBuffer1;
 14457  001E18  0EDE               	movlw	low _sdCardBuffer1
 14458  001E1A  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14459  001E1C  0E05               	movlw	high _sdCardBuffer1
 14460  001E1E  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14461  001E20                     
 14462                           ; BSR set to: 0
 14463                           ;main.c: 480:                 startCollect = 0;
 14464  001E20  0E00               	movlw	0
 14465  001E22  6E48               	movwf	_startCollect^0,c
 14466                           
 14467                           ;main.c: 481:             } else if (doPlayback) {
 14468  001E24  EFEB  F00F         	goto	i2l636
 14469  001E28                     i2l4106:
 14470  001E28  0100               	movlb	0	; () banked
 14471  001E2A  51CD               	movf	_doPlayback& (0+255),w,b
 14472  001E2C  B4D8               	btfsc	status,2,c
 14473  001E2E  EF1B  F00F         	goto	i2u346_41
 14474  001E32  EF1D  F00F         	goto	i2u346_40
 14475  001E36                     i2u346_41:
 14476  001E36  EFEB  F00F         	goto	i2l636
 14477  001E3A                     i2u346_40:
 14478  001E3A                     
 14479                           ; BSR set to: 0
 14480                           ;main.c: 483:                 stopPlayback = 0;
 14481  001E3A  0E00               	movlw	0
 14482  001E3C  6E46               	movwf	_stopPlayback^0,c
 14483  001E3E                     
 14484                           ; BSR set to: 0
 14485                           ;main.c: 484:                 buffer = sdCardBuffer1;
 14486  001E3E  0EDE               	movlw	low _sdCardBuffer1
 14487  001E40  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14488  001E42  0E05               	movlw	high _sdCardBuffer1
 14489  001E44  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14490  001E46                     
 14491                           ; BSR set to: 0
 14492                           ;main.c: 485:                 bufferIndex = 0;
 14493  001E46  0E00               	movlw	0
 14494  001E48  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14495  001E4A  0E00               	movlw	0
 14496  001E4C  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14497  001E4E                     
 14498                           ; BSR set to: 0
 14499                           ;main.c: 486:                 state = PLAYBACK;
 14500  001E4E  0E02               	movlw	2
 14501  001E50  6E45               	movwf	myTMR0ISR@state^0,c
 14502  001E52  EFEB  F00F         	goto	i2l636
 14503  001E56                     i2l4116:
 14504  001E56  0100               	movlb	0	; () banked
 14505  001E58  51D0               	movf	_buffer1Full& (0+255),w,b
 14506  001E5A  A4D8               	btfss	status,2,c
 14507  001E5C  EF32  F00F         	goto	i2u347_41
 14508  001E60  EF34  F00F         	goto	i2u347_40
 14509  001E64                     i2u347_41:
 14510  001E64  EFEB  F00F         	goto	i2l636
 14511  001E68                     i2u347_40:
 14512  001E68                     i2l4124:
 14513                           
 14514                           ;main.c: 496:             EPWM1_LoadDutyValue(buffer[bufferIndex++]);
 14515  001E68  503F               	movf	myTMR0ISR@bufferIndex^0,w,c
 14516  001E6A  244A               	addwf	myTMR0ISR@buffer^0,w,c
 14517  001E6C  6ED9               	movwf	fsr2l,c
 14518  001E6E  5040               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14519  001E70  204B               	addwfc	(myTMR0ISR@buffer+1)^0,w,c
 14520  001E72  6EDA               	movwf	fsr2h,c
 14521  001E74  50DF               	movf	indf2,w,c
 14522  001E76  6E0B               	movwf	??_myTMR0ISR^0,c
 14523  001E78  500B               	movf	??_myTMR0ISR^0,w,c
 14524  001E7A  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
 14525  001E7C  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
 14526  001E7E  EC16  F01B         	call	_EPWM1_LoadDutyValue	;wreg free
 14527  001E82  4A3F               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14528  001E84  2A40               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14529  001E86                     
 14530                           ;main.c: 498:             if(bufferIndex == 512) {
 14531  001E86  0E02               	movlw	2
 14532  001E88  1840               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14533  001E8A  103F               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14534  001E8C  A4D8               	btfss	status,2,c
 14535  001E8E  EF4B  F00F         	goto	i2u348_41
 14536  001E92  EF4D  F00F         	goto	i2u348_40
 14537  001E96                     i2u348_41:
 14538  001E96  EFEB  F00F         	goto	i2l636
 14539  001E9A                     i2u348_40:
 14540  001E9A                     
 14541                           ;main.c: 500:                     buffer1Full = 1;
 14542  001E9A  0E01               	movlw	1
 14543  001E9C  0100               	movlb	0	; () banked
 14544  001E9E  6FD0               	movwf	_buffer1Full& (0+255),b
 14545  001EA0                     
 14546                           ; BSR set to: 0
 14547                           ;main.c: 501:                     buffer = sdCardBuffer2;
 14548  001EA0  0EDE               	movlw	low _sdCardBuffer2
 14549  001EA2  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14550  001EA4  0E03               	movlw	high _sdCardBuffer2
 14551  001EA6  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14552  001EA8                     
 14553                           ; BSR set to: 0
 14554                           ;main.c: 502:                     if (buffer2Full)
 14555  001EA8  51CF               	movf	_buffer2Full& (0+255),w,b
 14556  001EAA  B4D8               	btfsc	status,2,c
 14557  001EAC  EF5A  F00F         	goto	i2u349_41
 14558  001EB0  EF5C  F00F         	goto	i2u349_40
 14559  001EB4                     i2u349_41:
 14560  001EB4  EF5E  F00F         	goto	i2l620
 14561  001EB8                     i2u349_40:
 14562  001EB8                     
 14563                           ; BSR set to: 0
 14564                           ;main.c: 503:                         state = MIC_AWAIT_BUFFER;
 14565  001EB8  0E03               	movlw	3
 14566  001EBA  6E45               	movwf	myTMR0ISR@state^0,c
 14567  001EBC                     i2l620:
 14568                           
 14569                           ; BSR set to: 0
 14570                           ;main.c: 510:                 useBuffer1 = !useBuffer1;
 14571  001EBC  500F               	movf	myTMR0ISR@useBuffer1^0,w,c
 14572  001EBE  B4D8               	btfsc	status,2,c
 14573  001EC0  EF64  F00F         	goto	i2u350_41
 14574  001EC4  EF67  F00F         	goto	i2u350_40
 14575  001EC8                     i2u350_41:
 14576  001EC8  0E01               	movlw	1
 14577  001ECA  EF68  F00F         	goto	i2u351_40
 14578  001ECE                     i2u350_40:
 14579  001ECE  0E00               	movlw	0
 14580  001ED0                     i2u351_40:
 14581  001ED0  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14582                           
 14583                           ;main.c: 511:                 bufferIndex = 0;
 14584  001ED2  0E00               	movlw	0
 14585  001ED4  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14586  001ED6  0E00               	movlw	0
 14587  001ED8  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14588                           
 14589                           ;main.c: 512:                 if (stopPlayback) {
 14590  001EDA  5046               	movf	_stopPlayback^0,w,c
 14591  001EDC  B4D8               	btfsc	status,2,c
 14592  001EDE  EF73  F00F         	goto	i2u352_41
 14593  001EE2  EF75  F00F         	goto	i2u352_40
 14594  001EE6                     i2u352_41:
 14595  001EE6  EFEB  F00F         	goto	i2l636
 14596  001EEA                     i2u352_40:
 14597  001EEA                     
 14598                           ; BSR set to: 0
 14599                           ;main.c: 513:                     stopPlayback = 0;
 14600  001EEA  0E00               	movlw	0
 14601  001EEC  6E46               	movwf	_stopPlayback^0,c
 14602                           
 14603                           ;main.c: 514:                     state = IDLE;
 14604  001EEE  0E00               	movlw	0
 14605  001EF0  6E45               	movwf	myTMR0ISR@state^0,c
 14606                           
 14607                           ;main.c: 515:                     doPlayback = 0;
 14608  001EF2  0E00               	movlw	0
 14609  001EF4  6FCD               	movwf	_doPlayback& (0+255),b
 14610  001EF6  EFEB  F00F         	goto	i2l636
 14611  001EFA                     i2l4150:
 14612  001EFA  0100               	movlb	0	; () banked
 14613  001EFC  51D0               	movf	_buffer1Full& (0+255),w,b
 14614  001EFE  A4D8               	btfss	status,2,c
 14615  001F00  EF84  F00F         	goto	i2u353_41
 14616  001F04  EF86  F00F         	goto	i2u353_40
 14617  001F08                     i2u353_41:
 14618  001F08  EFEB  F00F         	goto	i2l636
 14619  001F0C                     i2u353_40:
 14620  001F0C                     i2l4158:
 14621                           
 14622                           ;main.c: 528:             buffer[bufferIndex++] = mic;
 14623  001F0C  503F               	movf	myTMR0ISR@bufferIndex^0,w,c
 14624  001F0E  244A               	addwf	myTMR0ISR@buffer^0,w,c
 14625  001F10  6ED9               	movwf	fsr2l,c
 14626  001F12  5040               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14627  001F14  204B               	addwfc	(myTMR0ISR@buffer+1)^0,w,c
 14628  001F16  6EDA               	movwf	fsr2h,c
 14629  001F18  C00D  FFDF         	movff	myTMR0ISR@mic,indf2
 14630  001F1C  4A3F               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14631  001F1E  2A40               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14632  001F20                     
 14633                           ;main.c: 530:             if(bufferIndex == 512) {
 14634  001F20  0E02               	movlw	2
 14635  001F22  1840               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14636  001F24  103F               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14637  001F26  A4D8               	btfss	status,2,c
 14638  001F28  EF98  F00F         	goto	i2u354_41
 14639  001F2C  EF9A  F00F         	goto	i2u354_40
 14640  001F30                     i2u354_41:
 14641  001F30  EFEB  F00F         	goto	i2l636
 14642  001F34                     i2u354_40:
 14643  001F34                     
 14644                           ;main.c: 532:                     buffer1Full = 1;
 14645  001F34  0E01               	movlw	1
 14646  001F36  0100               	movlb	0	; () banked
 14647  001F38  6FD0               	movwf	_buffer1Full& (0+255),b
 14648  001F3A                     
 14649                           ; BSR set to: 0
 14650                           ;main.c: 533:                     buffer = sdCardBuffer2;
 14651  001F3A  0EDE               	movlw	low _sdCardBuffer2
 14652  001F3C  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14653  001F3E  0E03               	movlw	high _sdCardBuffer2
 14654  001F40  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14655  001F42                     
 14656                           ; BSR set to: 0
 14657                           ;main.c: 534:                     if (buffer2Full)
 14658  001F42  51CF               	movf	_buffer2Full& (0+255),w,b
 14659  001F44  B4D8               	btfsc	status,2,c
 14660  001F46  EFA7  F00F         	goto	i2u355_41
 14661  001F4A  EFA9  F00F         	goto	i2u355_40
 14662  001F4E                     i2u355_41:
 14663  001F4E  EFAB  F00F         	goto	i2l633
 14664  001F52                     i2u355_40:
 14665  001F52                     
 14666                           ; BSR set to: 0
 14667                           ;main.c: 535:                         state = MIC_AWAIT_BUFFER;
 14668  001F52  0E03               	movlw	3
 14669  001F54  6E45               	movwf	myTMR0ISR@state^0,c
 14670  001F56                     i2l633:
 14671                           
 14672                           ; BSR set to: 0
 14673                           ;main.c: 542:                 useBuffer1 = !useBuffer1;
 14674  001F56  500F               	movf	myTMR0ISR@useBuffer1^0,w,c
 14675  001F58  B4D8               	btfsc	status,2,c
 14676  001F5A  EFB1  F00F         	goto	i2u356_41
 14677  001F5E  EFB4  F00F         	goto	i2u356_40
 14678  001F62                     i2u356_41:
 14679  001F62  0E01               	movlw	1
 14680  001F64  EFB5  F00F         	goto	i2u357_40
 14681  001F68                     i2u356_40:
 14682  001F68  0E00               	movlw	0
 14683  001F6A                     i2u357_40:
 14684  001F6A  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14685                           
 14686                           ;main.c: 543:                 bufferIndex = 0;
 14687  001F6C  0E00               	movlw	0
 14688  001F6E  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14689  001F70  0E00               	movlw	0
 14690  001F72  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14691                           
 14692                           ;main.c: 544:                 if (stopCollect) {
 14693  001F74  5047               	movf	_stopCollect^0,w,c
 14694  001F76  B4D8               	btfsc	status,2,c
 14695  001F78  EFC0  F00F         	goto	i2u358_41
 14696  001F7C  EFC2  F00F         	goto	i2u358_40
 14697  001F80                     i2u358_41:
 14698  001F80  EFEB  F00F         	goto	i2l636
 14699  001F84                     i2u358_40:
 14700  001F84                     
 14701                           ; BSR set to: 0
 14702                           ;main.c: 545:                     stopCollect = 0;
 14703  001F84  0E00               	movlw	0
 14704  001F86  6E47               	movwf	_stopCollect^0,c
 14705                           
 14706                           ;main.c: 546:                     collecting = 0;
 14707  001F88  0E00               	movlw	0
 14708  001F8A  6FCE               	movwf	_collecting& (0+255),b
 14709                           
 14710                           ;main.c: 547:                     state = IDLE;
 14711  001F8C  0E00               	movlw	0
 14712  001F8E  6E45               	movwf	myTMR0ISR@state^0,c
 14713  001F90  EFEB  F00F         	goto	i2l636
 14714  001F94                     i2l4186:
 14715  001F94  5045               	movf	myTMR0ISR@state^0,w,c
 14716  001F96  6E0B               	movwf	??_myTMR0ISR^0,c
 14717  001F98  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 14718                           
 14719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14720                           ; Switch size 1, requested type "simple"
 14721                           ; Number of cases is 1, Range of values is 0 to 0
 14722                           ; switch strategies available:
 14723                           ; Name         Instructions Cycles
 14724                           ; simple_byte            4     3 (average)
 14725                           ;	Chosen strategy is simple_byte
 14726  001F9A  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 14727  001F9C  0A00               	xorlw	0	; case 0
 14728  001F9E  B4D8               	btfsc	status,2,c
 14729  001FA0  EFD4  F00F         	goto	i2l6544
 14730  001FA4  EFEB  F00F         	goto	i2l636
 14731  001FA8                     i2l6544:
 14732                           
 14733                           ; Switch size 1, requested type "simple"
 14734                           ; Number of cases is 5, Range of values is 0 to 4
 14735                           ; switch strategies available:
 14736                           ; Name         Instructions Cycles
 14737                           ; simple_byte           16     9 (average)
 14738                           ;	Chosen strategy is simple_byte
 14739  001FA8  500B               	movf	??_myTMR0ISR^0,w,c
 14740  001FAA  0A00               	xorlw	0	; case 0
 14741  001FAC  B4D8               	btfsc	status,2,c
 14742  001FAE  EFF9  F00E         	goto	i2l4096
 14743  001FB2  0A01               	xorlw	1	; case 1
 14744  001FB4  B4D8               	btfsc	status,2,c
 14745  001FB6  EF2B  F00F         	goto	i2l4116
 14746  001FBA  0A03               	xorlw	3	; case 2
 14747  001FBC  B4D8               	btfsc	status,2,c
 14748  001FBE  EF34  F00F         	goto	i2l4124
 14749  001FC2  0A01               	xorlw	1	; case 3
 14750  001FC4  B4D8               	btfsc	status,2,c
 14751  001FC6  EF7D  F00F         	goto	i2l4150
 14752  001FCA  0A07               	xorlw	7	; case 4
 14753  001FCC  B4D8               	btfsc	status,2,c
 14754  001FCE  EF86  F00F         	goto	i2l4158
 14755  001FD2  EFEB  F00F         	goto	i2l636
 14756  001FD6                     i2l636:
 14757  001FD6  0012               	return		;funcret
 14758  001FD8                     __end_of_myTMR0ISR:
 14759                           	callstack 0
 14760                           
 14761 ;; *************** function i2_TMR0_WriteTimer *****************
 14762 ;; Defined at:
 14763 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 14764 ;; Parameters:    Size  Location     Type
 14765 ;;  timerVal        2    8[COMRAM] unsigned short 
 14766 ;; Auto vars:     Size  Location     Type
 14767 ;;		None
 14768 ;; Return value:  Size  Location     Type
 14769 ;;                  1    wreg      void 
 14770 ;; Registers used:
 14771 ;;		wreg, status,2
 14772 ;; Tracked objects:
 14773 ;;		On entry : 0/0
 14774 ;;		On exit  : 0/0
 14775 ;;		Unchanged: 0/0
 14776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14780 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14781 ;;Total ram usage:        2 bytes
 14782 ;; Hardware stack levels used:    1
 14783 ;; This function calls:
 14784 ;;		Nothing
 14785 ;; This function is called by:
 14786 ;;		_myTMR0ISR
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790                           	psect	text59
 14791  003836                     __ptext59:
 14792                           	callstack 0
 14793  003836                     i2_TMR0_WriteTimer:
 14794                           	callstack 17
 14795  003836                     
 14796                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 14797  003836  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 14798  003838  6ED7               	movwf	215,c	;volatile
 14799  00383A                     
 14800                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 14801  00383A  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 14802  00383E  0012               	return		;funcret
 14803  003840                     __end_ofi2_TMR0_WriteTimer:
 14804                           	callstack 0
 14805                           
 14806 ;; *************** function _TMR0_ReadTimer *****************
 14807 ;; Defined at:
 14808 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;		None
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;  readVal         2    4[COMRAM] unsigned short 
 14813 ;;  readValHigh     1    7[COMRAM] unsigned char 
 14814 ;;  readValLow      1    6[COMRAM] unsigned char 
 14815 ;; Return value:  Size  Location     Type
 14816 ;;                  2    0[COMRAM] unsigned short 
 14817 ;; Registers used:
 14818 ;;		wreg, status,2
 14819 ;; Tracked objects:
 14820 ;;		On entry : 0/0
 14821 ;;		On exit  : 0/0
 14822 ;;		Unchanged: 0/0
 14823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14825 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14827 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14828 ;;Total ram usage:        8 bytes
 14829 ;; Hardware stack levels used:    1
 14830 ;; This function calls:
 14831 ;;		Nothing
 14832 ;; This function is called by:
 14833 ;;		_myTMR0ISR
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           	psect	text60
 14838  003744                     __ptext60:
 14839                           	callstack 0
 14840  003744                     _TMR0_ReadTimer:
 14841                           	callstack 17
 14842  003744                     
 14843                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 14844  003744  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 14845                           
 14846                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 14847  003748  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 14848  00374C                     
 14849                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 14850  00374C  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 14851  00374E  6E03               	movwf	??_TMR0_ReadTimer^0,c
 14852  003750  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 14853  003752  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 14854  003754  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 14855  003758                     
 14856                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 14857  003758  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 14858  00375C  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 14859  003760  0012               	return		;funcret
 14860  003762                     __end_of_TMR0_ReadTimer:
 14861                           	callstack 0
 14862                           
 14863 ;; *************** function _EPWM1_LoadDutyValue *****************
 14864 ;; Defined at:
 14865 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 14866 ;; Parameters:    Size  Location     Type
 14867 ;;  dutyValue       2    0[COMRAM] unsigned short 
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;		None
 14870 ;; Return value:  Size  Location     Type
 14871 ;;                  1    wreg      void 
 14872 ;; Registers used:
 14873 ;;		wreg, status,2, status,0
 14874 ;; Tracked objects:
 14875 ;;		On entry : 0/0
 14876 ;;		On exit  : 0/0
 14877 ;;		Unchanged: 0/0
 14878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14881 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14883 ;;Total ram usage:        4 bytes
 14884 ;; Hardware stack levels used:    1
 14885 ;; This function calls:
 14886 ;;		Nothing
 14887 ;; This function is called by:
 14888 ;;		_myTMR0ISR
 14889 ;; This function uses a non-reentrant model
 14890 ;;
 14891                           
 14892                           	psect	text61
 14893  00362C                     __ptext61:
 14894                           	callstack 0
 14895  00362C                     _EPWM1_LoadDutyValue:
 14896                           	callstack 17
 14897  00362C                     
 14898                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 14899  00362C  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14900  003630  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 14901  003634  90D8               	bcf	status,0,c
 14902  003636  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14903  003638  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14904  00363A  90D8               	bcf	status,0,c
 14905  00363C  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14906  00363E  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14907  003640  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
 14908  003642  6EBE               	movwf	190,c	;volatile
 14909                           
 14910                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 14911  003644  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14912  003648  0E03               	movlw	3
 14913  00364A  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14914  00364C  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
 14915  00364E  0EF0               	movlw	240
 14916  003650  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14917  003652  50BD               	movf	189,w,c	;volatile
 14918  003654  0BCF               	andlw	207
 14919  003656  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
 14920  003658  6EBD               	movwf	189,c	;volatile
 14921  00365A  0012               	return		;funcret
 14922  00365C                     __end_of_EPWM1_LoadDutyValue:
 14923                           	callstack 0
 14924                           
 14925                           	psect	text62
 14926  000000                     __ptext62:
 14927                           	callstack 0
 14928  000000                     
 14929                           	psect	rparam
 14930  0000                     
 14931                           	psect	temp
 14932  00004C                     btemp:
 14933                           	callstack 0
 14934  00004C                     	ds	1
 14935  0000                     int$flags	set	btemp
 14936  0000                     wtemp8	set	btemp+1
 14937  0000                     ttemp5	set	btemp+1
 14938  0000                     ttemp6	set	btemp+4
 14939  0000                     ttemp7	set	btemp+8
 14940                           
 14941                           	psect	idloc
 14942                           
 14943                           ;Config register IDLOC0 @ 0x200000
 14944                           ;	unspecified, using default values
 14945  200000                     	org	2097152
 14946  200000  FF                 	db	255
 14947                           
 14948                           ;Config register IDLOC1 @ 0x200001
 14949                           ;	unspecified, using default values
 14950  200001                     	org	2097153
 14951  200001  FF                 	db	255
 14952                           
 14953                           ;Config register IDLOC2 @ 0x200002
 14954                           ;	unspecified, using default values
 14955  200002                     	org	2097154
 14956  200002  FF                 	db	255
 14957                           
 14958                           ;Config register IDLOC3 @ 0x200003
 14959                           ;	unspecified, using default values
 14960  200003                     	org	2097155
 14961  200003  FF                 	db	255
 14962                           
 14963                           ;Config register IDLOC4 @ 0x200004
 14964                           ;	unspecified, using default values
 14965  200004                     	org	2097156
 14966  200004  FF                 	db	255
 14967                           
 14968                           ;Config register IDLOC5 @ 0x200005
 14969                           ;	unspecified, using default values
 14970  200005                     	org	2097157
 14971  200005  FF                 	db	255
 14972                           
 14973                           ;Config register IDLOC6 @ 0x200006
 14974                           ;	unspecified, using default values
 14975  200006                     	org	2097158
 14976  200006  FF                 	db	255
 14977                           
 14978                           ;Config register IDLOC7 @ 0x200007
 14979                           ;	unspecified, using default values
 14980  200007                     	org	2097159
 14981  200007  FF                 	db	255
 14982                           
 14983                           	psect	config
 14984                           
 14985                           ; Padding undefined space
 14986  300000                     	org	3145728
 14987  300000  FF                 	db	255
 14988                           
 14989                           ;Config register CONFIG1H @ 0x300001
 14990                           ;	Oscillator Selection bits
 14991                           ;	FOSC = INTIO67, Internal oscillator block
 14992                           ;	4X PLL Enable
 14993                           ;	PLLCFG = OFF, Oscillator used directly
 14994                           ;	Primary clock enable bit
 14995                           ;	PRICLKEN = ON, Primary clock enabled
 14996                           ;	Fail-Safe Clock Monitor Enable bit
 14997                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14998                           ;	Internal/External Oscillator Switchover bit
 14999                           ;	IESO = OFF, Oscillator Switchover mode disabled
 15000  300001                     	org	3145729
 15001  300001  28                 	db	40
 15002                           
 15003                           ;Config register CONFIG2L @ 0x300002
 15004                           ;	Power-up Timer Enable bit
 15005                           ;	PWRTEN = OFF, Power up timer disabled
 15006                           ;	Brown-out Reset Enable bits
 15007                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15008                           ;	Brown Out Reset Voltage bits
 15009                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15010  300002                     	org	3145730
 15011  300002  1F                 	db	31
 15012                           
 15013                           ;Config register CONFIG2H @ 0x300003
 15014                           ;	Watchdog Timer Enable bits
 15015                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15016                           ;	Watchdog Timer Postscale Select bits
 15017                           ;	WDTPS = 32768, 1:32768
 15018  300003                     	org	3145731
 15019  300003  3C                 	db	60
 15020                           
 15021                           ; Padding undefined space
 15022  300004                     	org	3145732
 15023  300004  FF                 	db	255
 15024                           
 15025                           ;Config register CONFIG3H @ 0x300005
 15026                           ;	CCP2 MUX bit
 15027                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15028                           ;	PORTB A/D Enable bit
 15029                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 15030                           ;	P3A/CCP3 Mux bit
 15031                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15032                           ;	HFINTOSC Fast Start-up
 15033                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15034                           ;	Timer3 Clock input mux bit
 15035                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15036                           ;	ECCP2 B output mux bit
 15037                           ;	P2BMX = PORTB5, P2B is on RB5
 15038                           ;	MCLR Pin Enable bit
 15039                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15040  300005                     	org	3145733
 15041  300005  BF                 	db	191
 15042                           
 15043                           ;Config register CONFIG4L @ 0x300006
 15044                           ;	Stack Full/Underflow Reset Enable bit
 15045                           ;	STVREN = ON, Stack full/underflow will cause Reset
 15046                           ;	Single-Supply ICSP Enable bit
 15047                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15048                           ;	Extended Instruction Set Enable bit
 15049                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15050                           ;	Background Debug
 15051                           ;	DEBUG = OFF, Disabled
 15052  300006                     	org	3145734
 15053  300006  85                 	db	133
 15054                           
 15055                           ; Padding undefined space
 15056  300007                     	org	3145735
 15057  300007  FF                 	db	255
 15058                           
 15059                           ;Config register CONFIG5L @ 0x300008
 15060                           ;	Code Protection Block 0
 15061                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 15062                           ;	Code Protection Block 1
 15063                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 15064                           ;	Code Protection Block 2
 15065                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 15066                           ;	Code Protection Block 3
 15067                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 15068  300008                     	org	3145736
 15069  300008  0F                 	db	15
 15070                           
 15071                           ;Config register CONFIG5H @ 0x300009
 15072                           ;	Boot Block Code Protection bit
 15073                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15074                           ;	Data EEPROM Code Protection bit
 15075                           ;	CPD = OFF, Data EEPROM not code-protected
 15076  300009                     	org	3145737
 15077  300009  C0                 	db	192
 15078                           
 15079                           ;Config register CONFIG6L @ 0x30000A
 15080                           ;	Write Protection Block 0
 15081                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 15082                           ;	Write Protection Block 1
 15083                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 15084                           ;	Write Protection Block 2
 15085                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 15086                           ;	Write Protection Block 3
 15087                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 15088  30000A                     	org	3145738
 15089  30000A  0F                 	db	15
 15090                           
 15091                           ;Config register CONFIG6H @ 0x30000B
 15092                           ;	Configuration Register Write Protection bit
 15093                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15094                           ;	Boot Block Write Protection bit
 15095                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15096                           ;	Data EEPROM Write Protection bit
 15097                           ;	WRTD = OFF, Data EEPROM not write-protected
 15098  30000B                     	org	3145739
 15099  30000B  E0                 	db	224
 15100                           
 15101                           ;Config register CONFIG7L @ 0x30000C
 15102                           ;	Table Read Protection Block 0
 15103                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 15104                           ;	Table Read Protection Block 1
 15105                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15106                           ;	Table Read Protection Block 2
 15107                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 15108                           ;	Table Read Protection Block 3
 15109                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 15110  30000C                     	org	3145740
 15111  30000C  0F                 	db	15
 15112                           
 15113                           ;Config register CONFIG7H @ 0x30000D
 15114                           ;	Boot Block Table Read Protection bit
 15115                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15116  30000D                     	org	3145741
 15117  30000D  40                 	db	64
 15118                           tosu	equ	0xFFF
 15119                           tosh	equ	0xFFE
 15120                           tosl	equ	0xFFD
 15121                           stkptr	equ	0xFFC
 15122                           pclatu	equ	0xFFB
 15123                           pclath	equ	0xFFA
 15124                           pcl	equ	0xFF9
 15125                           tblptru	equ	0xFF8
 15126                           tblptrh	equ	0xFF7
 15127                           tblptrl	equ	0xFF6
 15128                           tablat	equ	0xFF5
 15129                           prodh	equ	0xFF4
 15130                           prodl	equ	0xFF3
 15131                           indf0	equ	0xFEF
 15132                           postinc0	equ	0xFEE
 15133                           postdec0	equ	0xFED
 15134                           preinc0	equ	0xFEC
 15135                           plusw0	equ	0xFEB
 15136                           fsr0h	equ	0xFEA
 15137                           fsr0l	equ	0xFE9
 15138                           wreg	equ	0xFE8
 15139                           indf1	equ	0xFE7
 15140                           postinc1	equ	0xFE6
 15141                           postdec1	equ	0xFE5
 15142                           preinc1	equ	0xFE4
 15143                           plusw1	equ	0xFE3
 15144                           fsr1h	equ	0xFE2
 15145                           fsr1l	equ	0xFE1
 15146                           bsr	equ	0xFE0
 15147                           indf2	equ	0xFDF
 15148                           postinc2	equ	0xFDE
 15149                           postdec2	equ	0xFDD
 15150                           preinc2	equ	0xFDC
 15151                           plusw2	equ	0xFDB
 15152                           fsr2h	equ	0xFDA
 15153                           fsr2l	equ	0xFD9
 15154                           status	equ	0xFD8

Data Sizes:
    Strings     3274
    Constant    30
    Data        4
    BSS         2240
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      75
    BANK0           160     98     115
    BANK1           256     62     222
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1892_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_131(CODE[3]), STR_130(CODE[3]), STR_129(CODE[2]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), 
		 -> STR_123(CODE[3]), STR_122(CODE[2]), STR_121(CODE[4]), STR_120(CODE[28]), 
		 -> STR_119(CODE[26]), STR_118(CODE[27]), STR_117(CODE[62]), STR_116(CODE[62]), 
		 -> STR_115(CODE[62]), STR_114(CODE[62]), STR_113(CODE[62]), STR_112(CODE[62]), 
		 -> STR_111(CODE[62]), STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), 
		 -> STR_107(CODE[62]), STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), 
		 -> STR_103(CODE[62]), STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), 
		 -> STR_99(CODE[62]), STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), 
		 -> STR_95(CODE[62]), STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), 
		 -> STR_91(CODE[62]), STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), 
		 -> STR_87(CODE[62]), STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), 
		 -> STR_83(CODE[62]), STR_82(CODE[3]), STR_81(CODE[5]), STR_80(CODE[2]), 
		 -> STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[15]), 
		 -> STR_75(CODE[3]), STR_74(CODE[5]), STR_73(CODE[2]), STR_72(CODE[5]), 
		 -> STR_71(CODE[19]), STR_70(CODE[20]), STR_69(CODE[28]), STR_68(CODE[20]), 
		 -> STR_67(CODE[30]), STR_66(CODE[21]), STR_65(CODE[37]), STR_64(CODE[22]), 
		 -> STR_63(CODE[33]), STR_62(CODE[58]), STR_61(CODE[48]), STR_60(CODE[35]), 
		 -> STR_59(CODE[5]), STR_58(CODE[25]), STR_57(CODE[20]), STR_56(CODE[71]), 
		 -> STR_55(CODE[50]), STR_54(CODE[22]), STR_53(CODE[33]), STR_52(CODE[58]), 
		 -> STR_51(CODE[3]), STR_50(CODE[68]), STR_49(CODE[58]), STR_48(CODE[7]), 
		 -> STR_47(CODE[2]), STR_46(CODE[5]), STR_45(CODE[31]), STR_44(CODE[27]), 
		 -> STR_43(CODE[3]), STR_42(CODE[76]), STR_41(CODE[23]), STR_40(CODE[3]), 
		 -> STR_39(CODE[5]), STR_38(CODE[2]), STR_37(CODE[5]), STR_36(CODE[17]), 
		 -> STR_35(CODE[30]), STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), 
		 -> STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), 
		 -> STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), 
		 -> STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), 
		 -> STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), 
		 -> STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_131(CODE[3]), STR_130(CODE[3]), STR_129(CODE[2]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), 
		 -> STR_123(CODE[3]), STR_122(CODE[2]), STR_121(CODE[4]), STR_120(CODE[28]), 
		 -> STR_119(CODE[26]), STR_118(CODE[27]), STR_117(CODE[62]), STR_116(CODE[62]), 
		 -> STR_115(CODE[62]), STR_114(CODE[62]), STR_113(CODE[62]), STR_112(CODE[62]), 
		 -> STR_111(CODE[62]), STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), 
		 -> STR_107(CODE[62]), STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), 
		 -> STR_103(CODE[62]), STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), 
		 -> STR_99(CODE[62]), STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), 
		 -> STR_95(CODE[62]), STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), 
		 -> STR_91(CODE[62]), STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), 
		 -> STR_87(CODE[62]), STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), 
		 -> STR_83(CODE[62]), STR_82(CODE[3]), STR_81(CODE[5]), STR_80(CODE[2]), 
		 -> STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[15]), 
		 -> STR_75(CODE[3]), STR_74(CODE[5]), STR_73(CODE[2]), STR_72(CODE[5]), 
		 -> STR_71(CODE[19]), STR_70(CODE[20]), STR_69(CODE[28]), STR_68(CODE[20]), 
		 -> STR_67(CODE[30]), STR_66(CODE[21]), STR_65(CODE[37]), STR_64(CODE[22]), 
		 -> STR_63(CODE[33]), STR_62(CODE[58]), STR_61(CODE[48]), STR_60(CODE[35]), 
		 -> STR_59(CODE[5]), STR_58(CODE[25]), STR_57(CODE[20]), STR_56(CODE[71]), 
		 -> STR_55(CODE[50]), STR_54(CODE[22]), STR_53(CODE[33]), STR_52(CODE[58]), 
		 -> STR_51(CODE[3]), STR_50(CODE[68]), STR_49(CODE[58]), STR_48(CODE[7]), 
		 -> STR_47(CODE[2]), STR_46(CODE[5]), STR_45(CODE[31]), STR_44(CODE[27]), 
		 -> STR_43(CODE[3]), STR_42(CODE[76]), STR_41(CODE[23]), STR_40(CODE[3]), 
		 -> STR_39(CODE[5]), STR_38(CODE[2]), STR_37(CODE[5]), STR_36(CODE[17]), 
		 -> STR_35(CODE[30]), STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), 
		 -> STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), 
		 -> STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), 
		 -> STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), 
		 -> STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), 
		 -> STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 76
		 -> STR_131(CODE[3]), STR_130(CODE[3]), STR_129(CODE[2]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), 
		 -> STR_123(CODE[3]), STR_122(CODE[2]), STR_121(CODE[4]), STR_120(CODE[28]), 
		 -> STR_119(CODE[26]), STR_118(CODE[27]), STR_117(CODE[62]), STR_116(CODE[62]), 
		 -> STR_115(CODE[62]), STR_114(CODE[62]), STR_113(CODE[62]), STR_112(CODE[62]), 
		 -> STR_111(CODE[62]), STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), 
		 -> STR_107(CODE[62]), STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), 
		 -> STR_103(CODE[62]), STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), 
		 -> STR_99(CODE[62]), STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), 
		 -> STR_95(CODE[62]), STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), 
		 -> STR_91(CODE[62]), STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), 
		 -> STR_87(CODE[62]), STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), 
		 -> STR_83(CODE[62]), STR_82(CODE[3]), STR_81(CODE[5]), STR_80(CODE[2]), 
		 -> STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[15]), 
		 -> STR_75(CODE[3]), STR_74(CODE[5]), STR_73(CODE[2]), STR_72(CODE[5]), 
		 -> STR_71(CODE[19]), STR_70(CODE[20]), STR_69(CODE[28]), STR_68(CODE[20]), 
		 -> STR_67(CODE[30]), STR_66(CODE[21]), STR_65(CODE[37]), STR_64(CODE[22]), 
		 -> STR_63(CODE[33]), STR_62(CODE[58]), STR_61(CODE[48]), STR_60(CODE[35]), 
		 -> STR_59(CODE[5]), STR_58(CODE[25]), STR_57(CODE[20]), STR_56(CODE[71]), 
		 -> STR_55(CODE[50]), STR_54(CODE[22]), STR_53(CODE[33]), STR_52(CODE[58]), 
		 -> STR_51(CODE[3]), STR_50(CODE[68]), STR_49(CODE[58]), STR_48(CODE[7]), 
		 -> STR_47(CODE[2]), STR_46(CODE[5]), STR_45(CODE[31]), STR_44(CODE[27]), 
		 -> STR_43(CODE[3]), STR_42(CODE[76]), STR_41(CODE[23]), STR_40(CODE[3]), 
		 -> STR_39(CODE[5]), STR_38(CODE[2]), STR_37(CODE[5]), STR_36(CODE[17]), 
		 -> STR_35(CODE[30]), STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), 
		 -> STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), 
		 -> STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), 
		 -> STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), 
		 -> STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), 
		 -> STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_131(CODE[3]), STR_130(CODE[3]), STR_129(CODE[2]), STR_128(CODE[4]), 
		 -> STR_127(CODE[6]), STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), 
		 -> STR_123(CODE[3]), STR_122(CODE[2]), STR_121(CODE[4]), STR_120(CODE[28]), 
		 -> STR_119(CODE[26]), STR_118(CODE[27]), STR_117(CODE[62]), STR_116(CODE[62]), 
		 -> STR_115(CODE[62]), STR_114(CODE[62]), STR_113(CODE[62]), STR_112(CODE[62]), 
		 -> STR_111(CODE[62]), STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), 
		 -> STR_107(CODE[62]), STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), 
		 -> STR_103(CODE[62]), STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), 
		 -> STR_99(CODE[62]), STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), 
		 -> STR_95(CODE[62]), STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), 
		 -> STR_91(CODE[62]), STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), 
		 -> STR_87(CODE[62]), STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), 
		 -> STR_83(CODE[62]), STR_82(CODE[3]), STR_81(CODE[5]), STR_80(CODE[2]), 
		 -> STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[17]), STR_76(CODE[15]), 
		 -> STR_75(CODE[3]), STR_74(CODE[5]), STR_73(CODE[2]), STR_72(CODE[5]), 
		 -> STR_71(CODE[19]), STR_70(CODE[20]), STR_69(CODE[28]), STR_68(CODE[20]), 
		 -> STR_67(CODE[30]), STR_66(CODE[21]), STR_65(CODE[37]), STR_64(CODE[22]), 
		 -> STR_63(CODE[33]), STR_62(CODE[58]), STR_61(CODE[48]), STR_60(CODE[35]), 
		 -> STR_59(CODE[5]), STR_58(CODE[25]), STR_57(CODE[20]), STR_56(CODE[71]), 
		 -> STR_55(CODE[50]), STR_54(CODE[22]), STR_53(CODE[33]), STR_52(CODE[58]), 
		 -> STR_51(CODE[3]), STR_50(CODE[68]), STR_49(CODE[58]), STR_48(CODE[7]), 
		 -> STR_47(CODE[2]), STR_46(CODE[5]), STR_45(CODE[31]), STR_44(CODE[27]), 
		 -> STR_43(CODE[3]), STR_42(CODE[76]), STR_41(CODE[23]), STR_40(CODE[3]), 
		 -> STR_39(CODE[5]), STR_38(CODE[2]), STR_37(CODE[5]), STR_36(CODE[17]), 
		 -> STR_35(CODE[30]), STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), 
		 -> STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), 
		 -> STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), 
		 -> STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), 
		 -> STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), 
		 -> STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), 
		 -> STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), 
		 -> STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), 
		 -> STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    myTMR0ISR@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _printAscii->_printf
    _printAddress->_printf
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0  212485
                                             94 BANK0      4     4      0
                                              0 BANK1     62    62      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                   _incrementAddress
                       _printAddress
                         _printAscii
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAscii                                           0     0      0   40538
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAddress                                         4     0      4   40780
                                             84 BANK0      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _incrementAddress                                     4     0      4     788
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   41328
                                             84 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0     124
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6    1908
                                             20 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6    1008
                                             20 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      96
                                             20 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   40894
                                             84 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   40538
                                             70 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28643
                                             62 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   28080
                                             31 BANK0     31    25      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7005
                                             48 COMRAM     8     8      0
                                              0 BANK0     31    20     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             25 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6387
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7241
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4975
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             30 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1546
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             26 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             19 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     463
                                             15 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     463
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           5     5      0     463
                                             10 COMRAM     5     5      0
                _EPWM1_LoadDutyValue
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _EPWM1_LoadDutyValue                                 4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _incrementAddress
   _printAddress
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printAscii
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _EPWM1_LoadDutyValue
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3E      DE       7       86.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19C      12        0.0%
DATA                 0      0     99C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 04 16:33:42 2020

                                            l17 3742                                              l29 3842  
                                            l87 37D6                                              l79 346C  
                                            l96 36B0                            myTMR0ISR@bufferIndex 003F  
                          SDCARD_ReadBlock@addr 0015                             ___wmul@multiplicand 0016  
                               _timer0ReloadVal 0041                                  hexDumpBuffer@i 00BC  
                                hexDumpBuffer@j 00B8                                             l100 36D6  
                                           l103 37B0                                             l112 3834  
                                           l106 37C2                                             l130 382A  
                                           l124 3820                                             l127 3816  
                                           l151 35BE                                             l235 3686  
                                           l163 3802                                             l341 3846  
                                           l173 380C                                             l270 376E  
                                           l334 37E8                                             l344 3784  
                                           l273 377C                                             l346 3792  
                                           l338 2FB6                                             l347 3796  
                                           l267 36FC                                             l292 37AC  
                                           l189 37F8                                             l711 24E6  
                                           l455 0098                                             l472 03D0  
                                           l705 2A50                                             l722 25B6  
                                           l555 0C90                                             l660 3050  
                                           l468 038E                                             l725 3722  
                                           l493 0648                                             l670 3172  
                                           l639 23CA                                             l680 34E0  
                                           l672 3174                                             l578 1110  
                                           l675 34AA                                             l595 3252  
                                           l852 2BB4                                             l588 33AA  
                                           l686 2910                                             l839 28D8  
                                           _PR2 000FBB                                    _startCollect 0048  
                                           _abs 33F0                                             _pad 2E4A  
                              main@writeAddress 01CC                                             _sin F317  
                               _TMR2_Initialize 37EA                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                     main@address 01C1  
                                   _stopCollect 0047                                            ?_abs 0026  
                                          l1170 2CA4                                            l1163 2C84  
                                          l1403 36AE                                            l1180 2E48  
                                          l1173 2E28                                            l1502 21DE  
                                          l1440 2E8E                                            l1530 1D68  
                                          l1611 2750                                            l1443 2ED0  
                                          l1507 1B26                                            l1620 3588  
                                          l1532 1DCA                                            l1516 1BC8  
                                          l1461 2D78                                            l1445 2F0A  
                                          l1509 1B2E                                            l1614 34A8  
                                          l1608 2748                                            l1456 2D0A  
                                          l1634 3550                                            l1546 137C  
                                          l1459 2D4C                                            l1467 18AA  
                                          l1628 3366                                            l5100 2796  
                                          l1580 342E                                            l1492 2010  
                                          l1572 32AE                                            l1469 18B2  
                                          l1573 32B6                                            l5110 27EC  
                                          l5102 27B6                                            l1494 2018  
                                          l1663 35F4                                            l1487 1AEC  
                                          l1559 1808                                            l5120 286E  
                                          l5112 2800                                            l5104 27BA  
                                          l5200 2DC2                                            l1649 30E6  
                                          l1577 3426                                            l1657 33EE  
                                          l1673 3314                                            l5042 37B0  
                                          l5050 3064                                            l5130 28B8  
                                          l5122 2870                                            l5114 280E  
                                          l5106 27C6                                            l5210 2E58  
                                          l5202 2DF0                                            l6010 0052  
                                          l5044 37BE                                            l5052 3076  
                                          l5124 2882                                            l5116 2820  
                                          l5108 27E4                                            l5140 2A84  
                                          l5220 2EAE                                            l5212 2E6C  
                                          l5300 1854                                            l5204 2E10  
                                          l1668 330C                                            l6100 049C  
                                          l6020 00A6                                            l6012 0084  
                                          l5046 382E                                            l5054 3080  
                                          l5118 284E                                            l5126 2888  
                                          l5150 2ADC                                            l5142 2A88  
                                          l5134 2A52                                            l5230 33F0  
                                          l5062 33AC                                            l5070 35C0  
                                          l5222 2EB2                                            l5214 2E7A  
                                          l5310 18BA                                            l5302 1874  
                                          l5206 2E22                                            l6110 04FA  
                                          l6102 04AE                                            l6030 00C8  
                                          l6022 00B2                                            l6014 0088  
                                          l1679 3518                                            l5056 309E  
                                          l5048 3052                                            l5128 2898  
                                          l5160 2B5E                                            l5152 2AF0  
                                          l5144 2A96                                            l5136 2A56  
                                          l5232 340A                                            l5064 33B8  
                                          l5072 35CC                                            l5224 2EDE  
                                          l5216 2E86                                            l5208 2E4A  
                                          l5320 18F2                                            l5312 18CC  
                                          l5304 1882                                            l5080 34E2  
                                          l5400 1B18                                            l6200 0876  
                                          l6120 0556                                            l6112 050E  
                                          l6104 04D2                                            l6040 00FC  
                                          l6032 00D6                                            l6024 00B4  
                                          l6016 008A                                            l5058 30D4  
                                          l5090 2752                                            l5154 2AFE  
                                          l5162 2B64                                            l5146 2AB6  
                                          l5138 2A64                                            l5066 33CA  
                                          l5074 35D0                                            l5226 2EF2  
                                          l5218 2E9A                                            l5322 18F8  
                                          l5330 19EC                                            l5314 18DA  
                                          l5306 1884                                            l5170 2BB6  
                                          l5234 351A                                            l5242 32B8  
                                          l5410 1B82                                            l5402 1B44  
                                          l6210 08DA                                            l6202 088E  
                                          l6130 05B6                                            l6122 0562  
                                          l6114 0512                                            l6106 04D6  
                                          l6050 0342                                            l6042 010A  
                                          l6034 00E4                                            l6026 00B6  
                                          l6018 0096                                            l5084 36FE  
                                          l5252 3552                                            l5260 332E  
                                          l5092 2756                                            l5164 2B74  
                                          l5156 2B2C                                            l5148 2AD4  
                                          l5068 33CE                                            l5076 35E8  
                                          l5332 1A08                                            l5340 1A68  
                                          l5324 197A                                            l5316 18E0  
                                          l5308 189E                                            l5180 2C0A  
                                          l5172 2BC2                                            l5412 1B88  
                                          l5404 1B4E                                            l6300 0C5E  
                                          l6220 093E                                            l6212 08EA  
                                          l6204 0894                                            l6140 0638  
                                          l6132 05EC                                            l6124 0580  
                                          l6116 0522                                            l6108 04E6  
                                          l6060 0384                                            l6052 0352  
                                          l6044 011E                                            l6036 00F2  
                                          l6028 00BA                                            l5086 371A  
                                          l5262 335C                                            l5270 2CB8  
                                          l5094 2764                                            l5166 2B94  
                                          l5158 2B4C                                            l5350 1AAC  
                                          l5342 1A7A                                            l5334 1A26  
                                          l5326 1982                                            l5318 18E8  
                                          l5190 2C7E                                            l5182 2C1C  
                                          l5174 2BE0                                            l5238 346E  
                                          l5246 32EE                                            l5430 1C5A  
                                          l5422 1BFC                                            l5414 1B90  
                                          l5406 1B6E                                            l5510 12CE  
                                          l5502 1286                                            l6310 0CBE  
                                          l6302 0C70                                            l6230 09A4  
                                          l6222 0956                                            l6206 08AA  
                                          l6214 08EC                                            l6150 069C  
                                          l6142 0658                                            l6134 05FA  
                                          l6126 058E                                            l6118 053C  
                                          l6070 03B8                                            l6054 035C  
                                          l6046 0126                                            l6038 00F6  
                                          ?_pad 0026                                            l5264 3360  
                                          l5256 3316                                            l5272 2CC4  
                                          l5096 2784                                            l5352 1AB4  
                                          l5344 1A88                                            l5336 1A40  
                                          l5328 1988                                            l5184 2C4A  
                                          l5176 2BE8                                            l5192 2D7A  
                                          l5360 1FE6                                            l5248 3300  
                                          l5424 1C0E                                            l5432 1C6E  
                                          l5416 1BAC                                            l5440 1CEA  
                                          l5408 1B78                                            l5600 1760  
                                          l5520 12F6                                            l5512 12DC  
                                          l5504 12AC                                            l6400 10BC  
                                          l6320 0D38                                            l6312 0CCC  
                                          l6304 0C80                                            l6232 09BA  
                                          l6240 09FC                                            l6224 096A  
                                          l6208 08BA                                            l6216 0910  
                                          l6160 0718                                            l6152 06C0  
                                          l6144 0668                                            l6136 0612  
                                          l6128 05A8                                            l6080 03FE  
                                          l6072 03C6                                            l6064 0394  
                                          l6048 013E                                            l5258 331A  
                                          l5290 2D5A                                            l5282 2D02  
                                          l5274 2CD0                                            l5098 2788  
                                          l5346 1A8E                                            l5354 1AC4  
                                          l5338 1A5A                                            l5186 2C6A  
                                          l5178 2BFC                                            l5194 2D98  
                                          l5370 2054                                            l5362 1FE8  
                                          l5450 1D76                                            l5442 1D08  
                                          l5434 1C80                                            l5418 1BBC  
                                          l5602 1786                                            l5610 17B6  
                                          l5514 12DE                                            l5506 12BA  
                                          l6410 11AA                                            l6402 10DE  
                                          l6330 0E20                                            l6322 0D46  
                                          l6314 0CD6                                            l6306 0CA0  
                                          l6250 0A50                                            l6234 09CA  
                                          l6226 0986                                            l6218 0922  
                                          l6242 0A20                                            l6170 0780  
                                          l6162 071E                                            l6146 067A  
                                          l6138 0622                                            l6090 045A  
                                          l6082 0408                                            l6066 039E  
                                          l6058 0376                                            l5460 25B8  
                                          l5292 2D6C                                            l5284 2D16  
                                          l5276 2CDE                                            l5268 2CA6  
                                          l5348 1AA0                                            l5188 2C6C  
                                          l5196 2DA0                                            l5372 205A  
                                          l5380 2142                                            l5364 2002  
                                          l5452 1D7C                                            l5444 1D26  
                                          l5436 1C86                                            l5428 1C48  
                                          l5612 17C4                                            l5604 1794  
                                          l5540 138A                                            l5532 1308  
                                          l5524 12FC                                            l5516 12F0  
                                          l5508 12CA                                            l5700 3692  
                                          l6412 11B8                                            l6404 10EC  
                                          l6340 0EA6                                            l6332 0E34  
                                          l6324 0D7C                                            l6316 0CF6  
                                          l6308 0CAC                                            l6260 0ACC  
                                          l6252 0A6C                                            l6244 0A34  
                                          l6236 09EA                                            l6228 099E  
                                          l6180 07CE                                            l6172 0794  
                                          l6156 06EA                                            l6148 0696  
                                          l6164 0742                                            l6092 045E  
                                          l6076 03E0                                            l6420 11F4  
                                          l5710 36BE                                            l5470 262A  
                                          l5462 25CC                                            l5286 2D2A  
                                          l5278 2CF0                                            l5198 2DB4  
                                          l5382 2156                                            l5390 21B6  
                                          l5374 20D0                                            l5366 2040  
                                          l5358 1FD8                                            l5454 1D8C  
                                          l5446 1D40                                            l5438 1C8C  
                                          l5606 17A8                                            l5550 1404  
                                          l5542 138C                                            l6414 11CC  
                                          l6406 1102                                            l6342 0EBC  
                                          l6334 0E38                                            l6318 0D1E  
                                          l6326 0D80                                            l6270 0B28  
                                          l6262 0AD2                                            l6254 0A84  
                                          l6246 0A38                                            l6238 09FA  
                                          l6190 0800                                            l6182 07D2  
                                          l6174 0798                                            l6166 0756  
                                          l6158 06FC                                            l6086 041E  
                                          l6078 03F4                                            l5712 36C2  
                                          l5704 37C4                                            l5480 2652  
                                          l5472 262E                                            l5464 25D0  
                                          l5288 2D2E                                            l5296 180A  
                                          l5384 2174                                            l5376 20D8  
                                          l5368 204A                                            l5456 1DA2  
                                          l5448 1D5A                                            l5552 1424  
                                          l5560 148E                                            l5544 13B2  
                                          l5536 1314                                            l5528 1302  
                                          l5616 17D0                                            l5640 3254  
                                          l5800 34B6                                            l5632 3818  
                                          l5720 37FA                                            l6416 11DE  
                                          l6408 118E                                            l6360 0F58  
                                          l6352 0F1E                                            l6344 0ED8  
                                          l6336 0E48                                            l6328 0D96  
                                          l6280 0B94                                            l6264 0AE8  
                                          l6272 0B2A                                            l6256 0A98  
                                          l6248 0A40                                            l6192 0812  
                                          l6184 07E2                                            l6176 07AE  
                                          l6168 077C                                            l6088 0446  
                                          l6096 0468                                            l5714 36D0  
                                          l5482 265A                                            l5466 25D4  
                                          l5298 182A                                            l5386 218E  
                                          l5378 20DE                                            l5394 1AEE  
                                          l5618 17F6                                            l5570 1528  
                                          l5562 14B4                                            l5554 1432  
                                          l5546 13E8                                            l5538 136A  
                                          l5642 325C                                            l5810 34DE  
                                          l5802 34C6                                            l5634 380E  
                                          l5650 3840                                            l5730 36E4  
                                          l5722 37FE                                            l6370 0FB6  
                                          l6354 0F38                                            l6346 0EFC  
                                          l6362 0F64                                            l6338 0E58  
                                          l6290 0BF8                                            l6282 0BA8  
                                          l6266 0AF8                                            l6258 0AB4  
                                          l6274 0B4E                                            l6194 082E  
                                          l6186 07F2                                            l6178 07BA  
                                          l6098 0484                                            l5716 36D4  
                                          l5708 36B0                                            l5492 2708  
                                          l5484 2690                                            l5476 2634  
                                          l5468 25F2                                            l5388 21A8  
                                          l5396 1AFC                                            l5580 15F4  
                                          l5572 154E                                            l5564 14E6  
                                          l5548 13F6                                            l6540 133C  
                                          l5644 326A                                            l5900 29AC  
                                          l5636 3822                                            l5660 3468  
                                          l5652 3430                                            l5740 36F8  
                                          l5732 36E8                                            l5724 36D8  
                                          l6380 101C                                            l6372 0FE4  
                                          l6364 0F78                                            l6356 0F4E  
                                          l6348 0F06                                            l6292 0C08  
                                          l6284 0BC4                                            l6276 0B60  
                                          l6268 0B18                                            l6196 0846  
                                          l6188 07F8                                            l5494 271A  
                                          l6542 267A                                            l5478 264A  
                                          l5398 1AFE                                            l5590 16C2  
                                          l5582 163E                                            l5574 1596  
                                          l5558 147C                                            l5646 3290  
                                          l5910 29E2                                            l5902 29AE  
                                          l5830 2FC6                                            l5822 2FB8  
                                          l5750 2F84                                            l5742 2F0E  
                                          l5654 3444                                            l5638 3804  
                                          l5670 35AC                                            l5662 358A  
                                          l5734 36EC                                            l5726 36DC  
                                          l5814 3368                                            l6390 1050  
                                          l6382 102A                                            l6374 0FF2  
                                          l6366 0F9E                                            l6294 0C28  
                                          l6286 0BDC                                            l6278 0B7C  
                                          l6198 085A                                            l5496 272C  
                                          l5488 26C8                                            l5592 16DA  
                                          l5568 1502                                            l5920 2A00  
                                          l5912 29E8                                            l5904 29BE  
                                          l5808 34CC                                            l5840 2FE4  
                                          l5832 2FCC                                            l5824 2FB8  
                                          l5752 2FB4                                            l5744 2F1C  
                                          l5648 3724                                            l5656 3450  
                                          l5680 365C                                            l5672 35AE  
                                          l5664 358C                                            l5736 36F0  
                                          l5728 36E0                                            l5816 338A  
                                          l5760 31E8                                            l6392 1064  
                                          l6384 103C                                            l6376 1000  
                                          l6368 0FB2                                            l6296 0C38  
                                          l6288 0BE2                                            l5594 16E8  
                                          l5586 1676                                            l5578 15CE  
                                          l5930 2A1E                                            l5922 2A06  
                                          l5914 29EE                                            l5906 29CE  
                                          l5850 3018                                            l5842 2FFA  
                                          l5834 2FD2                                            l5826 2FBA  
                                          l5770 30F6                                            l5762 30E8  
                                          l5746 2F5C                                            l5658 345C  
                                          l5682 3668                                            l5690 37E6  
                                          l5674 35BA                                            l5666 3594  
                                          l5738 36F4                                            l5818 339A  
                                          l6538 120C                                            l6394 1086  
                                          l6386 1040                                            l6378 100E  
                                          l6298 0C3A                                            l5596 1724  
                                          l5588 169C                                            l5932 2A2E  
                                          l5924 2A0C                                            l5916 29F4  
                                          l5908 29E0                                            l5860 28DE  
                                          l5852 302C                                            l5844 3010  
                                          l5836 2FD8                                            l5828 2FC0  
                                          l5780 3114                                            l5772 30FC  
                                          l5764 30E8                                            l5756 3844  
                                          l5748 2F60                                            l5692 3762  
                                          l5684 3684                                            l5668 35AA  
                                          l5676 37EA                                            l6396 1094  
                                          l6388 1046                                            l5934 2A3E  
                                          l5926 2A12                                            l5918 29FA  
                                          l5870 28F4                                            l5854 3030  
                                          l5838 2FDE                                            l5790 314A  
                                          l5782 312A                                            l5774 3102  
                                          l5766 30EA                                            l5694 3798  
                                          l5686 37D8                                            l5678 37F2  
                                          l5950 2420                                            l5758 21E0  
                                          l6398 10AA                                            l5696 3780  
                                          l5928 2A1C                                            l5880 2970  
                                          l5872 2912                                            l5856 3042  
                                          l5792 315C                                            l5784 3142  
                                          l5776 3108                                            l5768 30F0  
                                          l5688 37E4                                            l5960 248C  
                                          l5952 2434                                            l5944 23E4  
                                          l5936 23CC                                            l5698 3688  
                                          l5890 298A                                            l5882 2972  
                                          l5874 294C                                            l5866 28E8  
                                          l5858 304E                                            l5794 3160  
                                          l5778 310E                                            l5970 250A  
                                          l5962 249C                                            l5954 2452  
                                          l5946 23F6                                            l5938 23DA  
                                          l5892 2990                                            l5884 2978  
                                          l5876 294E                                            l5868 28EE  
                                          l5796 34AC                                            l5980 255C  
                                          l5972 2510                                            l5964 24BE  
                                          l5956 245E                                            l5948 2414  
                                          l5894 2996                                            l5886 297E  
                                          l5878 295E                                            l5798 34B4  
                                          l5982 256C                                            l5974 2522  
                                          l5958 2470                                            l5966 24C4  
                                          l5896 299C                                            l5888 2984  
                                          l5984 258E                                            l5976 252E  
                                          l5968 24DA                                            l5898 29A2  
                                          l5978 2540                                            l5986 2594  
                                          l5988 25AA                                            STR_1 FFC0  
                                          STR_2 FEE1                                            STR_3 FFC9  
                                          STR_4 FC61                                            STR_5 FFFA  
                                          STR_6 FF7B                                            STR_7 FB41  
                                          STR_8 FDB1                                            STR_9 FF91  
                                          _LATA 000F89                                            _LATB 000F8A  
                                          _LATC 000F8B                                            u5000 2CFE  
                                          u5001 2CFA                                            u5010 2D4C  
                                          u5011 2D48                                            u5020 2D5A  
                                          u5100 1A08                                            u5021 2D56  
                                          u5101 1A04                                            u5110 1A26  
                                          u5030 183C                                            u5111 1A22  
                                          u5031 1836                                            u5120 1A40  
                                          u5040 183E                                            u5200 2156  
                                          u6000 03B4                                            u5121 1A3C  
                                          u5201 2152                                            u6001 03B0  
                                          u5130 1A5A                                            u5050 1854  
                                          u5210 2174                                            u6010 041A  
                                          u5131 1A56                                            u5051 1850  
                                          u5211 2170                                            u6011 0416  
                                          u5140 1A68                                            u5060 1882  
                                          u5220 218E                                            u5300 1BF8  
                                          u6100 067A                                            u6020 045A  
                                          u5141 1A64                                            u5061 187E  
                                          u5221 218A                                            u6101 0676  
                                          u6021 0456                                            u5150 1A7A  
                                          u5070 189E                                            u5230 21A8  
                                          u5310 1C0E                                            u6110 06E6  
                                          u6030 049C                                            u5151 1A76  
                                          u5071 189A                                            u5231 21A4  
                                          u5311 1C0A                                            u6111 06E2  
                                          u6031 0498                                            u5160 1A88  
                                          u5080 18CC                                            u5240 21B6  
                                          u4600 3512                                            u5400 1D68  
                                          u5320 1C42                                            u6200 085A  
                                          u6120 06FC                                            u6040 04AE  
                                          u5161 1A84                                            u5081 18C8  
                                          u5241 21B2                                            u4601 350C  
                                          u5401 1D64                                            u5321 1C3C  
                                          u6201 0856                                            u6121 06F8  
                                          u6041 04AA                                            u4530 37BE  
                                          u5170 1AA0                                            u5090 18DA  
                                          u4610 3514                                            u5410 1D76  
                                          u5330 1C44                                            u5250 1AFC  
                                          u6210 088E                                            u6130 0756  
                                          u6050 04E6                                            u4531 37BA  
                                          u5171 1A9C                                            u5091 18D6  
                                          u5411 1D72                                            u5251 1AF8  
                                          u6211 088A                                            u6131 0752  
                                          u6051 04E2                                            u5420 25F2  
                                          u4540 3064                                            u4620 2764  
                                          u4700 2A96                                            u5180 1FE6  
                                          u5340 1C5A                                            u5260 1B18  
                                          u5500 137C                                            u6300 0A34  
                                          u6220 08AA                                            u6140 077C  
                                          u6060 04FA                                            u5421 25EE  
                                          u4541 3060                                            u4621 2760  
                                          u4701 2A92                                            u5181 1FE2  
                                          u5341 1C56                                            u5261 1B14  
                                          u5501 1378                                            u6301 0A30  
                                          u6221 08A6                                            u6141 0778  
                                          u6061 04F6                                            u5430 262A  
                                          u4550 3076                                            u4630 2796  
                                          u4710 2AD4                                            u5190 2002  
                                          u5350 1CC4                                            u5270 1B44  
                                          u5510 138A                                            u6310 0A50  
                                          u6230 08BA                                            u6150 0794  
                                          u6070 050E                                            u5431 2626  
                                          u4551 3072                                            u4631 2792  
                                          u4711 2AD0                                            u5191 1FFE  
                                          u5271 1B40                                            u5511 1386  
                                          u6311 0A4C                                            u6231 08B6  
                                          u6151 0790                                            u6071 050A  
                                          u5440 2646                                            u4560 309E  
                                          u4720 2AFE                                            u4800 2DC2  
                                          u5360 1D08                                            u5280 1BAC  
                                          u5600 15F4                                            u5520 13B2  
                                          u6400 0BDC                                            u6320 0A84  
                                          u6240 0922                                            u6160 07AA  
                                          u5441 2642                                            u4561 309A  
                                          u4641 27C0                                            u4721 2AFA  
                                          u4801 2DBE                                            u5361 1D04  
                                          u5281 1BA8                                            u5601 15F0  
                                          u5521 13AE                                            u6401 0BD8  
                                          u6321 0A80                                            u6241 091E  
                                          u6161 07A6                                            u5450 2702  
                                          u4570 30D4                                            u4650 27E4  
                                          u4730 2B2C                                            u4810 2DF0  
                                          u5370 1D26                                            u5290 1BF6  
                                          u5610 169C                                            u5530 13F6  
                                          u6410 0BF8                                            u6330 0A98  
                                          u6250 0956                                            u6170 07CE  
                                          u6090 0638                                            u5451 26FC  
                                          u4571 30D0                                            u4651 27E0  
                                          u4731 2B28                                            u4811 2DEC  
                                          u5371 1D22                                            u5355 1CB2  
                                          u5291 1BF0                                            u5611 1698  
                                          u5531 13F2                                            u6411 0BF4  
                                          u6331 0A94                                            u6251 0952  
                                          u6171 07CA                                            u6091 0634  
                                          i2l20 365A                                            u5460 2704  
                                          u4660 280E                                            u4740 2B74  
                                          u4580 33EE                                            u4820 2E58  
                                          u4900 34A4                                            u5380 1D40  
                                          u5620 16C2                                            u5540 1476  
                                          u5700 2F1C                                            u6500 0F1A  
                                          u6420 0C08                                            u6340 0ACC  
                                          u6260 096A                                            u6180 0812  
                                          u4661 280A                                            u4741 2B70  
                                          u4581 33EA                                            u4821 2E54  
                                          u5381 1D3C                                            u5621 16BE  
                                          u5541 1470                                            u5701 2F18  
                                          u6501 0F16                                            u6421 0C04  
                                          u6341 0AC8                                            u6261 0966  
                                          u6181 080E                                            u6085 0542  
                                          u5470 271A                                            u4670 284E  
                                          u4590 35E8                                            u4830 2E7A  
                                          u4910 32E8                                            u5390 1D5A  
                                          u5630 1786                                            u5550 1478  
                                          u5710 312A                                            u6510 0F78  
                                          u6430 0C70                                            u6350 0AE8  
                                          u6270 099E                                            u6190 0846  
                                          u5471 2716                                            u4671 284A  
                                          u4591 35E4                                            u4831 2E76  
                                          u4751 2BBC                                            u4911 32E2  
                                          u5391 1D56                                            u5631 1782  
                                          u5711 3126                                            u6511 0F74  
                                          u6431 0C6C                                            u6351 0AE4  
                                          u6271 099A                                            u6191 0842  
                                          u5480 272C                                            u4680 2898  
                                          u4840 2ED0                                            u4760 2BE0  
                                          u4920 32EA                                            u5560 148E  
                                          u5640 32AE                                            u5800 29BE  
                                          u5720 3172                                            u6520 0F9E  
                                          u6440 0C80                                            u6360 0AF8  
                                          u6280 09BA                                            u5481 2728  
                                          u4681 2894                                            u4841 2ECC  
                                          u4761 2BDC                                            u5561 148A  
                                          u5641 32AA                                            u5801 29BA  
                                          u5721 316E                                            u6521 0F9A  
                                          u6441 0C7C                                            u6361 0AF4  
                                          u6281 09B6                                            u4690 2A64  
                                          u4850 2EDE                                            u4770 2C0A  
                                          u4930 3300                                            u5570 14B4  
                                          u5490 12AC                                            u5810 29CE  
                                          u5730 34C6                                            u5650 377C  
                                          u6530 0FB2                                            u6450 0C90  
                                          u6370 0B60                                            u6290 09CA  
                                          u4691 2A60                                            u4851 2EDA  
                                          u4771 2C06                                            u4931 32FC  
                                          u5571 14B0                                            u5491 12A8  
                                          u5811 29CA                                            u5731 34C2  
                                          u5651 3778                                            u6531 0FAE  
                                          u6451 0C8C                                            u6371 0B5C  
                                          u6291 09C6                                            i2l36 003A  
                                          u5660 3792                                            u4940 3582  
                                          u4860 340A                                            u4780 2C4A  
                                          u5580 1528                                            u5820 2A2E  
                                          u5900 2522                                            u5740 338A  
                                          u6540 1064                                            u6460 0CBE  
                                          u6380 0B94                                            u5661 378E  
                                          u4941 357C                                            u4861 3406  
                                          u4781 2C46                                            u5581 1524  
                                          u5821 2A2A                                            u5901 251E  
                                          u5741 3386                                            u6541 1060  
                                          u6461 0CBA                                            u6381 0B90  
                                          u5670 37D4                                            u4950 3584  
                                          u4790 2D98                                            u4870 354A  
                                          u5590 154E                                            u5830 2A3E  
                                          u5750 2FFA                                            u5910 255C  
                                          u6550 1086                                            u6470 0D92  
                                          u6390 0BA8                                            u5671 37CE  
                                          u4791 2D94                                            u4871 3544  
                                          u5591 154A                                            u5831 2A3A  
                                          u5751 2FF6                                            u5911 2558  
                                          u6551 1082                                            u6471 0D8E  
                                          u6391 0BA4                                            u5680 36BE  
                                          u4960 332E                                            u4880 354C  
                                          u5760 3010                                            u5920 25AA  
                                          u5840 23F6                                            u6560 10DE  
                                          u6480 0E34                                            u5681 36BA  
                                          u4961 332A                                            u5761 300C  
                                          u5921 25A6                                            u5841 23F2  
                                          u6561 10DA                                            u6481 0E30  
                                          u5690 36D0                                            u4970 335C  
                                          u4890 34A2                                            u5770 3042  
                                          u5850 2414                                            u6490 0E90  
                                          u5691 36CC                                            u4971 3358  
                                          u4891 349C                                            u5771 303E  
                                          u5851 2410                                            u5676 37D6  
                                          u4980 2CB8                                            u5780 2910  
                                          u5860 2434                                            u4981 2CB4  
                                          u5781 290C                                            u5861 2430  
                                          u4990 2CDE                                            u5790 295E  
                                          u5870 2452                                            u5950 00A6  
                                          u4991 2CDA                                            u5791 295A  
                                          u5871 244E                                            u6495 0E86  
                                          u5951 00A2                                            u5880 248C  
                                          u5960 011E                                            u5881 2488  
                                          u5961 011A                                            u5890 24DA  
                                          u5970 018C                                            u5891 24D6  
                                          u5990 0372                                            u5991 036E  
                                          u5975 0182                                            u5985 0236  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 37AE                                            abs@a 0026  
                                          _dbuf 0180                                            _atoi 25B8  
                                          _ctoa 2CA6                                            _main 0052  
                                          _dtoa 180A                                   ?_EUSART1_Read 0001  
                                          _prec 003B                                            _nout 00C2  
                                          pad@i 002D                                            pad@p 002A  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002F                                            fsr2l 000FD9  
                                          btemp 004C                                            _utoa 1FD8  
                                          _xtoa 1AEE                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00B6  
                                          start 004E                           ??_EPWM1_LoadDutyValue 0003  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0028                                           ??_pad 002C  
                       __end_of_TMR0_Initialize 35C0                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 377E  
                               __end_of___aodiv 28DA                                           ?_atoi 001B  
                                   ?_SPI2_Close 0001                                           ?_ctoa 001F  
                                         ?_main 0001                                           ?_dtoa 0060  
                               __end_of___aomod 2BB6                                           STR_10 FFEE  
                                         STR_11 FFFD                                           STR_20 FB43  
                                         STR_12 FFEE                                           STR_13 FFAE  
                                         STR_21 FE6F                                           STR_30 FB43  
                                         STR_22 FB43                                           STR_14 FF0B  
                                         STR_15 FB43                                           STR_31 FFD2  
                                         STR_23 FCAE                                           STR_32 FFF5  
                                         STR_40 FFAE                                           STR_16 FFB1  
                                         STR_24 FC36                                           STR_33 FFF5  
                                         STR_17 FFDA                                           STR_41 FE9F  
                                         STR_25 FB0A                                           STR_26 FB43  
                                         STR_18 FEF6                                           STR_34 FD37  
                                         STR_50 F3C8                                           STR_42 F335  
                                         STR_51 FFAE                                           STR_43 FFAE  
                                         STR_19 FE87                                           STR_35 FD75  
                                         STR_27 FBA9                                           STR_36 FF80  
                                         STR_44 FE21                                           STR_60 FCD3  
                                         STR_28 FC0A                                           STR_52 FAD0  
                                         STR_37 FFEE                                           STR_45 FD56  
                                         STR_29 FD17                                           STR_53 FCF6  
                                         STR_61 FBDA                                           STR_62 FAD0  
                                         STR_38 FFFD                                           STR_46 FFEE  
                                         STR_70 FF34                                           STR_54 FEB6  
                                         STR_63 FCF6                                           STR_47 FFFD  
                                         STR_39 FFEE                                           STR_71 FF5C  
                                         STR_55 FB77                                           STR_64 FEB6  
                                         STR_80 FFFD                                           STR_72 FFEE  
                                         STR_48 FFE1                                           STR_56 F381  
                                         STR_73 FFFD                                           STR_81 FFEE  
                                         STR_57 FF48                                           STR_65 FC89  
                                         STR_49 FA96                                           STR_82 FFAE  
                                         STR_74 FFEE                                           STR_66 FECC  
                                         STR_58 FE56                                           STR_90 F5FC  
                                         STR_75 FFAE                                           STR_59 FD8E  
                                         STR_67 FD93                                           STR_91 F678  
                                         STR_83 F40C                                           STR_76 FFA2  
                                         STR_68 FF20                                           STR_92 F6F4  
                                         STR_84 F44A                                           STR_77 FF6F  
                                         STR_69 FDEA                                           STR_93 F732  
                                         STR_85 F488                                           STR_78 FF80  
                                         STR_94 F7AE                                           STR_86 F4C6  
                                         STR_79 FFEE                                           STR_95 F868  
                                         STR_87 F504                                           STR_96 F8A6  
                                         STR_88 F542                                           STR_97 F960  
                                         STR_89 F580                                           STR_98 F99E  
                                         STR_99 F9DC                       TMR0_ReadTimer@readValHigh 0008  
                                         ?_utoa 0060                                           _T0CON 000FD5  
                               __end_of___lodiv 2CA6                                           ?_xtoa 0060  
                                         _T2CON 000FBA                                 __end_of___lomod 2E4A  
                                         i2l160 3760                                           i2l170 362A  
                                         i2l163 383E                                 _TMR0_WriteTimer 37FA  
                                         i2l176 384C                                           i2l620 1EBC  
                                         i2l633 1F56                                           i2l636 1FD6  
                                  vfpfcnvrt@fmt 0081                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 0095                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    _stopPlayback 0046  
             __size_of_TMR0_SetInterruptHandler 000A                              __size_of_SPI2_Open 00AC  
                     ?_TMR0_SetInterruptHandler 0014                                __end_of_TMR0_ISR 362C  
                                  main@sinIndex 00CC                                           _flags 003D  
                                         _fputc 3052                                 __end_of_isalpha 34AA  
                                         _fputs 33AC                                 __end_of_isdigit 358A  
                                         atoi@n 0028                                           pad@fp 0026  
                                         atoi@s 001B                                           _width 0039  
                                         ctoa@c 0021                                           _putch 382C  
                                         ctoa@l 0023                                           ctoa@w 0025  
                                         main@i 01CA                                           main@j 01AF  
                                         dtoa@d 0062                                           dtoa@i 007A  
                                         dtoa@n 0072                                           dtoa@p 006C  
                                         dtoa@s 0070                                           dtoa@w 006E  
                               __end_of_islower 351A                                 __end_of_isspace 3368  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 3552  
                                         pclath 000FFA                                    main@printVal 01A5  
                                         tablat 000FF5                                  ??_EUSART1_Read 0014  
                                         ttemp5 004D                                           ttemp6 0050  
                                         ttemp7 0054                                           utoa@d 0062  
                                         utoa@i 0076                                           utoa@n 006E  
                                         utoa@p 006A                                           utoa@w 006C  
                                         status 000FD8                                           wtemp8 004D  
                                         xtoa@c 007D                                           xtoa@d 0062  
                                         xtoa@i 007B                                           xtoa@n 0073  
                                         xtoa@p 006F                                           xtoa@w 0071  
                                         xtoa@x 006A                                 __end_of_toupper 3316  
                              ___lodiv@dividend 0014              _EUSART1_DefaultFramingErrorHandler 000000  
                           myTMR0ISR@useBuffer1 000F                                    _toupper$2118 0020  
                               __initialization 3176                    SDCARD_ReadBlock@sdCardBuffer 0019  
                                  __end_of_atoi 2752                                    __end_of_ctoa 2D7A  
                    __end_of_EUSART1_Initialize 346E                                    __end_of_main 1286  
                                  __end_of_dtoa 1AEE                                    __end_of_utoa 21E0  
                             _SPI2_ExchangeByte 377E                                    __end_of_xtoa 1DCC  
             __size_of_SDCARD_PollWriteComplete 0038                       ?_SDCARD_PollWriteComplete 0001  
                       __end_of_TMR2_Initialize 37FA                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                                          ??_atoi 001D  
                                        ??_ctoa 0022                                          ??_main 00BE  
                                        ??_dtoa 0031                                          ??_utoa 0031  
                                        ??_xtoa 0031                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 0012                                ___lodiv@quotient 0024  
                           ??_SPI2_ExchangeByte 0014                                    myTMR0ISR@mic 000D  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0016  
                                        STR_100 FA1A                                          STR_101 FA58  
                                        STR_102 F922                                          STR_110 F5BE  
                                        ?_fputs 001F                                          STR_111 F580  
                                        STR_103 F922                                          STR_112 F542  
                                        STR_120 FDCE                                          STR_104 F8E4  
                                        STR_113 F504                                          STR_121 FFF3  
                                        STR_105 F7EC                                          STR_114 F4C6  
                                        STR_122 FF8F                                          STR_130 FFF7  
                                        STR_106 F82A                                          _ADRESH 000FC4  
                                        STR_131 FFAE                                          STR_115 F488  
                                        STR_123 FF8E                                          STR_107 F770  
                                        STR_116 F44A                                          STR_124 F37F  
                                        STR_108 F6B6                                          STR_117 F40C  
                                        STR_125 FFF7                                          STR_109 F63A  
                                        STR_126 FFAE                                          STR_118 FE06  
                                        _ADRESL 000FC3                                          STR_127 FFE8  
                                        STR_119 FE3C                                          STR_128 FF8D  
                                        STR_129 F37F                                          _CCPR1H 000FBF  
                                        _CCPR1L 000FBE                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l4002 362C                                          i2l4012 3744  
                                        i2l4100 1E18                                          i2l4014 374C  
                                        i2l4030 383A                                          i2l4110 1E3E  
                                        i2l4102 1E20                                          i2l4016 3758  
                                        i2l4112 1E46                                          i2l4104 1E20  
                                        i2l4200 3612                                          i2l4130 1E9A  
                                        i2l4114 1E4E                                          i2l4106 1E28  
                                        i2l4028 3836                                          i2l4132 1E9A  
                                        i2l4124 1E68                                          i2l4116 1E56  
                                        i2l4108 1E3A                                          i2l4150 1EFA  
                                        i2l4134 1EA0                                          i2l4126 1E82  
                                        i2l4118 1E56                                          i2l4160 1F1C  
                                        i2l4152 1EFA                                          i2l4136 1EA8  
                                        i2l4128 1E86                                          i2l4170 1F42  
                                        i2l4162 1F20                                          i2l4138 1EB8  
                                        i2l4090 1DCE                                          i2l4172 1F52  
                                        i2l4164 1F34                                          i2l4148 1EEA  
                                        i2l4092 1DE4                                          i2l4182 1F84  
                                        i2l4166 1F34                                          i2l4158 1F0C  
                                        i2l4094 1DE8                                          i2l4168 1F3A  
                                        i2l4096 1DF2                                          i2l4088 1DCC  
                                        i2l4192 35F6                                          i2l4098 1E02  
                                        i2l4186 1F94                                          i2l4194 35F8  
                                        i2l4196 35FC                                          i2l4198 3600  
                                        i2l4490 0028                                          i2l4492 0036  
                                        i2l4488 001A                                          i2l6544 1FA8  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0091                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                               __end_of_SPI2_Open 2FB8  
                     __end_of_SPI2_ExchangeByte 3798                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 00A4                                       ??___aodiv 0024  
                                     ??___aomod 0024                                          ___wmul 36FE  
                 incrementAddress@sdCardAddress 0014                                   main@numBlocks 01A1  
                       __end_of_TMR0_WriteTimer 3804                                main@failureIndex 01D8  
                                     ??___lodiv 0024                                       ??___lomod 0024  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 0014  
                              ?_TMR0_Initialize 0001                                          clear_0 31AE  
                                        clear_1 31C0                                          clear_2 31CC  
                                        clear_3 31D8                                          _printf 3688  
                                        pad@buf 0028                ??_EUSART1_SetOverrunErrorHandler 0016  
               ?_EUSART1_SetOverrunErrorHandler 0014                                          ctoa@fp 001F  
                                        dtoa@fp 0060                                          _strlen 35C0  
                                        fputc@c 0016                               ?_incrementAddress 0014  
                                        fputs@c 0023                                          fputs@i 0024  
                                  __pdataCOMRAM 004A                                          fputs@s 001F  
                                     ??_isalpha 0016                                       ??_isdigit 0016  
                                     ??_islower 0016                                    __mediumconst F316  
                                     ??_isspace 0016                                          tblptrh 000FF7  
                                     ??_isupper 0016                                          tblptrl 000FF6  
                                        tblptru 000FF8                              ??_incrementAddress 0018  
                           main@writeEndAddress 01C6                                __end_of_vfprintf 32B8  
                               ??_EUSART1_Write 0014                                          utoa@fp 0060  
      TMR0_SetInterruptHandler@InterruptHandler 0014                                          xtoa@fp 0060  
                                     ??_toupper 001C                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 36D8                                      __accesstop 0060  
                       __end_of__initialization 31DE                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                _SDCARD_ReadBlock 2FB8  
                             ?_EPWM1_Initialize 0001                      __end_of_spi2_configuration F335  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 384A  
                           ??_SYSTEM_Initialize 0018                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 0014                                   __end_of_fputc 30E8  
                                 __end_of_fputs 33F0                                   __end_of_putch 3836  
                       __size_of_TMR0_ReadTimer 001E                                ?_TMR2_Initialize 0001  
                                main@endAddress 01B4                            __end_of_EUSART1_Read 36D8  
                                       ??_fputc 001A                       __end_of_SYSTEM_Initialize 36FE  
                                       ??_fputs 0023                              __size_of_myTMR0ISR 020C  
                                       ??_putch 0015                              SDCARD_WriteBlock@i 001B  
                             ??_SPI2_Initialize 0014                                      __pbssBANK0 00C2  
                                    __pbssBANK1 0100                                 myTMR0ISR@buffer 004A  
                                    _doPlayback 00CD                               _writeFailureTable 01DE  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 382C  
              __end_of_TMR0_SetInterruptHandler 380E                                         ?___wmul 0014  
                                    ??_TMR0_ISR 0010                                ?_TMR0_WriteTimer 0014  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                       ?_printf 00A6                                    ??_SPI2_Close 0014  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0014  
        __end_of_EUSART1_SetFramingErrorHandler 3822         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 3818                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0584                                      _collecting 00CE  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                                ___lomod@dividend 0014  
                             SDCARD_ReadBlock@i 001B                     __end_of_EPWM1_LoadDutyValue 365C  
              __end_of_SDCARD_PollWriteComplete 34E2                              __end_of_SPI2_Close 3848  
                          _ADC_InterruptHandler 00C4                                         __Hparam 0000  
                                       __Lparam 0000                           __end_of_hexDumpBuffer 25B8  
                     SDCARD_Initialize@response 00B7                                         ___aodiv 2752  
                                       ___aomod 2A52                                 __size_of___wmul 0026  
                                       ___lodiv 2BB6                                         ___lomod 2D7A  
                             __end_of_myTMR0ISR 1FD8                                       ?_vfprintf 009E  
                           _EUSART1_is_rx_ready 37C4                                         __pcinit 3176  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 21E0                                         __ptext2 31E8  
                                       __ptext3 3368                                         __ptext4 23CC  
                                       __ptext5 37FA                                         __ptext6 36D8  
                                       __ptext7 37EA                                         __ptext8 358A  
                                       __ptext9 3804                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 3762                                       _T2CONbits 000FBA  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 346E                                         _isdigit 3552  
                            _EUSART1_Initialize 3430                                         _islower 34E2  
                      ??_PIN_MANAGER_Initialize 0014                                         _isspace 3316  
                                       _isupper 351A                                    _sdCardBuffer 07DE  
                                       atoi@neg 0021                                         main@cmd 01C5  
                    __size_of_SYSTEM_Initialize 0026                                         _toupper 32B8  
                          end_of_initialization 31DE                            ?_EUSART1_is_rx_ready 0001  
                           ?_EUSART1_Initialize 0001                                      _sampleRate 00D1  
                                       fputc@fp 0018                     _EUSART1_OverrunErrorHandler 00C8  
                                       fputs@fp 0021                                   ?_printAddress 00B4  
                 SDCARD_WriteBlock@sdCardBuffer 0019                               __end_of_vfpfcnvrt 180A  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 0039  
                                     _SPI2_Open 2F0C                                  _TMR0_ReadTimer 3744  
                          ??_EUSART1_Initialize 0016                           SDCARD_WriteBlock@addr 0015  
                                       strlen@a 0016                                         strlen@s 0014  
                                    _printAscii 21E0                        _TMR0_SetInterruptHandler 3804  
                      __end_of_SDCARD_ReadBlock 3052                                       _TRISBbits 000F93  
                                    main@i_1316 01BE                                      main@i_1280 01BC  
                                    main@i_1296 01C0                __size_of_EUSART1_SetErrorHandler 000A  
                SDCARD_PollWriteComplete@status 0015                             EUSART1_Write@txData 0014  
                         ??_EUSART1_is_rx_ready 0014                             printAddress@address 00B4  
                                  _EUSART1_Read 36B0                       __size_of_incrementAddress 0044  
                                ??_printAddress 0039                                      main@status 01D9  
                      _SDCARD_PollWriteComplete 34AA                          __end_of_TMR0_ReadTimer 3762  
                  __end_of_INTERRUPT_Initialize 3844                               _SDCARD_Initialize 28DA  
                                    ?_SPI2_Open 0001                                     vfpfcnvrt@ap 0083  
                                   vfpfcnvrt@fp 007F                                     vfpfcnvrt@ll 0089  
                                __end_of___wmul 3724                                   __pidataCOMRAM 3848  
                             __size_of_TMR0_ISR 0036                              ?_SDCARD_Initialize 0001  
                                _ADC_Initialize 3798                          ?_OSCILLATOR_Initialize 0001  
                               _SPI2_Initialize 37D8                                  __end_of_printf 36B0  
                                __end_of_strlen 35F6                              _spi2_configuration F331  
                           start_initialization 3176                                 ___lodiv@divisor 001C  
                     __size_of_EPWM1_Initialize 0020                                 ___lodiv@counter 002C  
                           ??_SDCARD_Initialize 0039                        __size_of_TMR0_Initialize 0036  
               __size_of_PIN_MANAGER_Initialize 002C                                     __end_of_abs 3430  
                                   __end_of_pad 2F0C                                     __end_of_sin F331  
                                   putch@txData 0015                    EPWM1_LoadDutyValue@dutyValue 0001  
                         __end_of_EUSART1_Write 37C4                               main@sdCardAddress 01D4  
                     __end_of_SDCARD_Initialize 2A52                                     vfprintf@fmt 00A0  
                               ?_TMR0_ReadTimer 0001                                        ??___wmul 0018  
                        __end_of_ADC_Initialize 37AE                                     __pdataBANK0 00D1  
                                   ?_printAscii 0001                                        ??_printf 0039  
                         SPI2_ExchangeByte@data 0014                                        ??_strlen 0016  
                                   __pbssBIGRAM 01DE                                     __pbssCOMRAM 0039  
                                 __pcstackBANK0 0060                                   __pcstackBANK1 01A0  
                           hexDumpBuffer@j_1447 00BA                                ___aodiv@dividend 0014  
                      __size_of_TMR2_Initialize 0010                ??_EUSART1_SetFramingErrorHandler 0016  
               ?_EUSART1_SetFramingErrorHandler 0014                               main@printedBlocks 01AB  
                            _writeFailureStatus 0100                                       _atoi$2042 0023  
                                     _atoi$2043 0027                                       _atoi$2044 0025  
                         _TMR0_InterruptHandler 0043                                  myTMR0ISR@state 0045  
                        _PIN_MANAGER_Initialize 365C                                       _dtoa$1986 006A  
                             _SDCARD_WriteBlock 30E8                                       __pintcode 0008  
                                 __pmediumconst F316                         __end_of_SPI2_Initialize 37EA  
                                      ?___aodiv 0014                                        ?___aomod 0014  
                              ___aodiv@quotient 0026                              ?_SDCARD_WriteBlock 0015  
                                      ?___lodiv 0014                                        ?___lomod 0014  
                               ?_ADC_Initialize 0001                                     ??_SPI2_Open 0014  
              SPI2_Open@spi2UniqueConfiguration 0015                    ??_INTERRUPT_InterruptManager 0010  
                             __size_of_vfprintf 0064                                       _myTMR0ISR 1DCC  
                               ___lomod@divisor 001C                             ??_SDCARD_WriteBlock 001B  
                               ___lomod@counter 0024                                        _BAUDCON1 000FB8  
            _EUSART1_DefaultOverrunErrorHandler 000000                                        ?_isalpha 0014  
                                      ?_isdigit 0014                           main@writeStartAddress 01B8  
                          __end_of_printAddress 3254                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00C6                                        ?_islower 0014  
                                      ?_isspace 0014                                        ?_isupper 0014  
                       _EUSART1_SetErrorHandler 3822                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 001A  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 3840  
                                   _buffer1Full 00D0                                     _buffer2Full 00CF  
                             ??_TMR0_Initialize 0016                                  ___wmul@product 0018  
       EUSART1_SetErrorHandler@interruptHandler 0014                                        _LATBbits 000F8A  
                           __size_of_printAscii 01EC                                _incrementAddress 3368  
                     __end_of_SDCARD_WriteBlock 3176             __size_of_INTERRUPT_InterruptManager 0046  
                    ??_TMR0_SetInterruptHandler 0016                                        i2u350_40 1ECE  
                                      i2u350_41 1EC8                                        i2u351_40 1ED0  
                                      i2u352_40 1EEA                                        i2u352_41 1EE6  
                                      i2u353_40 1F0C                                        i2u345_40 1E02  
                                      i2u360_48 3618                                        i2u353_41 1F08  
                                      i2u345_41 1DFE                                        i2u360_49 362A  
                                      _PIR1bits 000F9E                                        i2u354_40 1F34  
                                      i2u346_40 1E3A                                        i2u354_41 1F30  
                                      i2u346_41 1E36                                        i2u355_40 1F52  
                                      i2u347_40 1E68                                        i2u355_41 1F4E  
                                      i2u347_41 1E64                                        i2u356_40 1F68  
                                      i2u348_40 1E9A                                        i2u356_41 1F62  
                                      i2u348_41 1E96                                        i2u357_40 1F6A  
                                      i2u349_40 1EB8                                        i2u349_41 1EB4  
                                      _PIR3bits 000FA4                                        i2u358_40 1F84  
                                      i2u358_41 1F80                                        i2u359_40 3612  
                                      i2u359_41 360E                                 main@readAddress 01D0  
                                      i2u387_40 0028                                        i2u387_41 0024  
                                      i2u388_40 0036                                        i2u388_41 0032  
                  __size_of_EPWM1_LoadDutyValue 0030                      __size_of_SDCARD_Initialize 0178  
                                      _RCONbits 000FD0                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 35F6  
                                      _PSTR1CON 000FB9                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 1286                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$2004 006B                                       _xtoa$2005 006D  
                                    _ADCON0bits 000FC2                               ___wmul@multiplier 0014  
                                    ?_myTMR0ISR 0001                                _EPWM1_Initialize 3724  
                             i2_TMR0_WriteTimer 3836                               ?_SDCARD_ReadBlock 0015  
                                  _isspace$2069 001A                          __size_of_hexDumpBuffer 01EC  
                                    vfpfcnvrt@c 009D                              ?i2_TMR0_WriteTimer 0009  
                                   _INTCON2bits 000FF1                           ?_INTERRUPT_Initialize 0001  
                            ??_SDCARD_ReadBlock 001B                      ??_SDCARD_PollWriteComplete 0015  
                             ??_TMR2_Initialize 0014                             ??i2_TMR0_WriteTimer 000B  
                                      __Hrparam 0000                                      vfprintf@ap 00A2  
                                      __Lrparam 0000                                      vfprintf@fp 009E  
                              ?_SPI2_Initialize 0001                         ??_OSCILLATOR_Initialize 0014  
                              __size_of___aodiv 0188                              SDCARD_Initialize@i 00B4  
                              __size_of___aomod 0164                                __size_of___lodiv 00F0  
                              __size_of___lomod 00D0                     __size_of_EUSART1_Initialize 003E  
                                    ?_vfpfcnvrt 007F                                 ___aodiv@divisor 001C  
                               ___aodiv@counter 0024                       __end_ofi2_TMR0_WriteTimer 3840  
                     ??_EUSART1_SetErrorHandler 0016                     _EUSART1_DefaultErrorHandler 000000  
                   __end_of_EUSART1_is_rx_ready 37D8                                __size_of_isalpha 003C  
                              __size_of_isdigit 0038                                __size_of_islower 0038  
                              __size_of_isspace 0052                                        __ptext10 37D8  
                                      __ptext11 365C                                        __ptext20 2F0C  
                                      __ptext12 3762                                        __ptext21 3844  
                                      __ptext13 3840                                        __ptext30 32B8  
                                      __ptext22 30E8                                        __ptext14 3430  
                                      __ptext31 34E2                                        __ptext23 2FB8  
                                      __ptext15 380E                                        __ptext40 33AC  
                                      __ptext32 351A                                        __ptext24 34AA  
                                      __ptext16 3818                                        __ptext41 33F0  
                                      __ptext33 346E                                        __ptext25 28DA  
                                      __ptext17 3822                                        __ptext50 3552  
                                      __ptext42 2A52                                        __ptext34 1FD8  
                                      __ptext26 3688                                        __ptext18 3724  
                                      __ptext51 36FE                                        __ptext43 2752  
                                      __ptext35 2D7A                                        __ptext27 3254  
                                      __ptext19 3798                                        __ptext60 3744  
                                      __ptext52 377E                                        __ptext44 2CA6  
                                      __ptext36 2BB6                                        __ptext28 1286  
                                      __ptext61 362C                                        __ptext53 37C4  
                                      __ptext45 3052                                        __ptext37 180A  
                                      __ptext29 1AEE                                        __ptext62 0000  
                                      __ptext54 36B0                                        __ptext46 382C  
                                      __ptext38 2E4A                                        __ptext47 37AE  
                                      __ptext39 35C0                                        __ptext56 35F6  
                                      __ptext48 25B8                                        __ptext57 384C  
                                      __ptext49 3316                                        __ptext58 1DCC  
                                      __ptext59 3836                                __size_of_isupper 0038  
                                  _SSP2CON1bits 000F6C                         TMR0_WriteTimer@timerVal 0014  
                             ??_TMR0_WriteTimer 0016                                __size_of_toupper 005E  
                                 __size_of_atoi 019A                           main@writeAddress_1292 01DA  
                                 __size_of_ctoa 00D4                                   __size_of_main 1234  
                                 __size_of_dtoa 02E4                                   __size_of_utoa 0208  
                              ??_TMR0_ReadTimer 0003                                   __size_of_xtoa 02DE  
                    __size_of_SDCARD_WriteBlock 008E            __end_of_TMR0_DefaultInterruptHandler 384E  
         __size_of_TMR0_DefaultInterruptHandler 0002                    _TMR0_DefaultInterruptHandler 384C  
EUSART1_SetOverrunErrorHandler@interruptHandler 0014                                   _hexDumpBuffer 23CC  
                                 _sdCardBuffer1 05DE                                   _sdCardBuffer2 03DE  
                                      int$flags 004C                                        _vfprintf 3254  
            __end_of_INTERRUPT_InterruptManager 004E                      _INTERRUPT_InterruptManager 0008  
                                      main@addr 01B0                                       printf@fmt 00A6  
                         __size_of_printAddress 006C                                    ??_printAscii 0039  
                   _EUSART1_FramingErrorHandler 00CA                                ___aomod@dividend 0014  
                                   ??_myTMR0ISR 000B                                  _vfpfcnvrt$2019 0093  
                                    _INTCONbits 000FF2                                        isalpha@c 0014  
                                      isdigit@c 0014                          ??_INTERRUPT_Initialize 0014  
                      SDCARD_Initialize@verbose 00B6                                        intlevel2 0000  
                                      islower@c 0014                                        isspace@c 0014  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 3818  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 380E  
                                    _RCSTA1bits 000FAB                              __end_of_printAscii 23CC  
                                      isupper@c 0014                                ??_ADC_Initialize 0014  
                                  _printAddress 31E8                 fp__TMR0_DefaultInterruptHandler 0000  
                 ?_TMR0_DefaultInterruptHandler 0001                                  ?_hexDumpBuffer 00B4  
                                      printf@ap 00B2  EUSART1_SetFramingErrorHandler@interruptHandler 0014  
                               ___aomod@divisor 001C                                     ??_vfpfcnvrt 0085  
                               ___aomod@counter 0024                          __size_of_EUSART1_Write 0016  
                            _eusart1RxLastError 0049                                      _SPI2_Close 3844  
                      __end_of_incrementAddress 33AC                      __size_ofi2_TMR0_WriteTimer 000A  
                               _TMR0_Initialize 358A                                        toupper@c 001A  
                           _EPWM1_LoadDutyValue 362C                                    ___aodiv@sign 0025  
                __end_of_PIN_MANAGER_Initialize 3688                               main@storedCounter 01A7  
                     hexDumpBuffer@sdCardBuffer 00B4                                    ___aomod@sign 0025  
                                  fp__myTMR0ISR 0000                        __end_of_EPWM1_Initialize 3744  
                          ?_EPWM1_LoadDutyValue 0001  
