

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Nov 04 17:14:08 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    83                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 05/05/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC18F26K22 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     
   122 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   123  0000                     
   124 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   125  0000                     
   126 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   127  0000                     
   128                           	psect	idataCOMRAM
   129  003718                     __pidataCOMRAM:
   130                           	callstack 0
   131                           
   132                           ;initializer for myTMR0ISR@buffer
   133  003718  D5                 	db	low _sdCardBuffer1
   134  003719  05                 	db	high _sdCardBuffer1
   135                           
   136                           	psect	idataBANK0
   137  00371A                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _sampleRate
   141  00371A  0640               	dw	1600
   142                           
   143                           	psect	mediumconst
   144  00F316                     __pmediumconst:
   145                           	callstack 0
   146  00F316  00                 	db	0
   147  00F317                     _sin:
   148                           	callstack 0
   149  00F317  80                 	db	128
   150  00F318  9F                 	db	159
   151  00F319  BB                 	db	187
   152  00F31A  D5                 	db	213
   153  00F31B  E9                 	db	233
   154  00F31C  F8                 	db	248
   155  00F31D  FF                 	db	255
   156  00F31E  FF                 	db	255
   157  00F31F  F8                 	db	248
   158  00F320  E9                 	db	233
   159  00F321  D5                 	db	213
   160  00F322  BB                 	db	187
   161  00F323  9F                 	db	159
   162  00F324  80                 	db	128
   163  00F325  61                 	db	97
   164  00F326  45                 	db	69
   165  00F327  2B                 	db	43
   166  00F328  17                 	db	23
   167  00F329  08                 	db	8
   168  00F32A  01                 	db	1
   169  00F32B  01                 	db	1
   170  00F32C  08                 	db	8
   171  00F32D  17                 	db	23
   172  00F32E  2B                 	db	43
   173  00F32F  45                 	db	69
   174  00F330  61                 	db	97
   175  00F331                     __end_of_sin:
   176                           	callstack 0
   177  00F331                     _spi2_configuration:
   178                           	callstack 0
   179  00F331  01                 	db	1
   180  00F332  40                 	db	64
   181  00F333  01                 	db	1
   182  00F334  00                 	db	0
   183  00F335                     __end_of_spi2_configuration:
   184                           	callstack 0
   185  0000                     _ANSELA	set	3896
   186  0000                     _ANSELB	set	3897
   187  0000                     _ANSELC	set	3898
   188  0000                     _CCPTMRS0bits	set	3913
   189  0000                     _LATBbits	set	3978
   190  0000                     _PIR3bits	set	4004
   191  0000                     _SSP2BUF	set	3951
   192  0000                     _SSP2CON2	set	3947
   193  0000                     _SSP2CON1bits	set	3948
   194  0000                     _TRISBbits	set	3987
   195  0000                     _SSP2ADD	set	3950
   196  0000                     _SSP2CON1	set	3948
   197  0000                     _SSP2STAT	set	3949
   198  0000                     _ADCON0bits	set	4034
   199  0000                     _ADCON0	set	4034
   200  0000                     _ADRESH	set	4036
   201  0000                     _ADRESL	set	4035
   202  0000                     _ADCON2	set	4032
   203  0000                     _ADCON1	set	4033
   204  0000                     _OSCTUNE	set	3995
   205  0000                     _OSCCON2	set	4050
   206  0000                     _OSCCON	set	4051
   207  0000                     _INTCON2bits	set	4081
   208  0000                     _WPUB	set	3937
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISA	set	3986
   212  0000                     _LATC	set	3979
   213  0000                     _LATB	set	3978
   214  0000                     _LATA	set	3977
   215  0000                     _T2CONbits	set	4026
   216  0000                     _T2CON	set	4026
   217  0000                     _TMR2	set	4028
   218  0000                     _PR2	set	4027
   219  0000                     _T0CON	set	4053
   220  0000                     _TMR0L	set	4054
   221  0000                     _TMR0H	set	4055
   222  0000                     _T0CONbits	set	4053
   223  0000                     _TXREG1	set	4013
   224  0000                     _RCREG1	set	4014
   225  0000                     _RCSTA1bits	set	4011
   226  0000                     _TXSTA1bits	set	4012
   227  0000                     _PIR1bits	set	3998
   228  0000                     _SPBRGH1	set	4016
   229  0000                     _SPBRG1	set	4015
   230  0000                     _TXSTA1	set	4012
   231  0000                     _RCSTA1	set	4011
   232  0000                     _BAUDCON1	set	4024
   233  0000                     _INTCONbits	set	4082
   234  0000                     _RCONbits	set	4048
   235  0000                     _CCPR1L	set	4030
   236  0000                     _CCPR1H	set	4031
   237  0000                     _PSTR1CON	set	4025
   238  0000                     _PWM1CON	set	4023
   239  0000                     _ECCP1AS	set	4022
   240  0000                     _CCP1CON	set	4029
   241  0000                     _PLLRDY	set	32407
   242  00F335                     STR_37:
   243  00F335  50                 	db	80	;'P'
   244  00F336  72                 	db	114	;'r'
   245  00F337  65                 	db	101	;'e'
   246  00F338  73                 	db	115	;'s'
   247  00F339  73                 	db	115	;'s'
   248  00F33A  20                 	db	32
   249  00F33B  61                 	db	97	;'a'
   250  00F33C  6E                 	db	110	;'n'
   251  00F33D  79                 	db	121	;'y'
   252  00F33E  20                 	db	32
   253  00F33F  6B                 	db	107	;'k'
   254  00F340  65                 	db	101	;'e'
   255  00F341  79                 	db	121	;'y'
   256  00F342  20                 	db	32
   257  00F343  74                 	db	116	;'t'
   258  00F344  6F                 	db	111	;'o'
   259  00F345  20                 	db	32
   260  00F346  73                 	db	115	;'s'
   261  00F347  74                 	db	116	;'t'
   262  00F348  61                 	db	97	;'a'
   263  00F349  72                 	db	114	;'r'
   264  00F34A  74                 	db	116	;'t'
   265  00F34B  20                 	db	32
   266  00F34C  72                 	db	114	;'r'
   267  00F34D  65                 	db	101	;'e'
   268  00F34E  63                 	db	99	;'c'
   269  00F34F  6F                 	db	111	;'o'
   270  00F350  72                 	db	114	;'r'
   271  00F351  64                 	db	100	;'d'
   272  00F352  69                 	db	105	;'i'
   273  00F353  6E                 	db	110	;'n'
   274  00F354  67                 	db	103	;'g'
   275  00F355  20                 	db	32
   276  00F356  61                 	db	97	;'a'
   277  00F357  75                 	db	117	;'u'
   278  00F358  64                 	db	100	;'d'
   279  00F359  69                 	db	105	;'i'
   280  00F35A  6F                 	db	111	;'o'
   281  00F35B  20                 	db	32
   282  00F35C  61                 	db	97	;'a'
   283  00F35D  6E                 	db	110	;'n'
   284  00F35E  64                 	db	100	;'d'
   285  00F35F  20                 	db	32
   286  00F360  70                 	db	112	;'p'
   287  00F361  72                 	db	114	;'r'
   288  00F362  65                 	db	101	;'e'
   289  00F363  73                 	db	115	;'s'
   290  00F364  73                 	db	115	;'s'
   291  00F365  20                 	db	32
   292  00F366  61                 	db	97	;'a'
   293  00F367  6E                 	db	110	;'n'
   294  00F368  79                 	db	121	;'y'
   295  00F369  20                 	db	32
   296  00F36A  6B                 	db	107	;'k'
   297  00F36B  65                 	db	101	;'e'
   298  00F36C  79                 	db	121	;'y'
   299  00F36D  20                 	db	32
   300  00F36E  74                 	db	116	;'t'
   301  00F36F  6F                 	db	111	;'o'
   302  00F370  20                 	db	32
   303  00F371  73                 	db	115	;'s'
   304  00F372  74                 	db	116	;'t'
   305  00F373  6F                 	db	111	;'o'
   306  00F374  70                 	db	112	;'p'
   307  00F375  20                 	db	32
   308  00F376  72                 	db	114	;'r'
   309  00F377  65                 	db	101	;'e'
   310  00F378  63                 	db	99	;'c'
   311  00F379  6F                 	db	111	;'o'
   312  00F37A  72                 	db	114	;'r'
   313  00F37B  64                 	db	100	;'d'
   314  00F37C  69                 	db	105	;'i'
   315  00F37D  6E                 	db	110	;'n'
   316  00F37E  67                 	db	103	;'g'
   317  00F37F  2E                 	db	46
   318  00F380  00                 	db	0
   319  00F381                     STR_51:
   320  00F381  4C                 	db	76	;'L'
   321  00F382  6F                 	db	111	;'o'
   322  00F383  67                 	db	103	;'g'
   323  00F384  20                 	db	32
   324  00F385  66                 	db	102	;'f'
   325  00F386  69                 	db	105	;'i'
   326  00F387  6C                 	db	108	;'l'
   327  00F388  65                 	db	101	;'e'
   328  00F389  20                 	db	32
   329  00F38A  6E                 	db	110	;'n'
   330  00F38B  61                 	db	97	;'a'
   331  00F38C  6D                 	db	109	;'m'
   332  00F38D  65                 	db	101	;'e'
   333  00F38E  3A                 	db	58	;':'
   334  00F38F  20                 	db	32
   335  00F390  42                 	db	66	;'B'
   336  00F391  72                 	db	114	;'r'
   337  00F392  6F                 	db	111	;'o'
   338  00F393  77                 	db	119	;'w'
   339  00F394  73                 	db	115	;'s'
   340  00F395  65                 	db	101	;'e'
   341  00F396  20                 	db	32
   342  00F397  61                 	db	97	;'a'
   343  00F398  6E                 	db	110	;'n'
   344  00F399  64                 	db	100	;'d'
   345  00F39A  20                 	db	32
   346  00F39B  70                 	db	112	;'p'
   347  00F39C  72                 	db	114	;'r'
   348  00F39D  6F                 	db	111	;'o'
   349  00F39E  76                 	db	118	;'v'
   350  00F39F  69                 	db	105	;'i'
   351  00F3A0  64                 	db	100	;'d'
   352  00F3A1  65                 	db	101	;'e'
   353  00F3A2  20                 	db	32
   354  00F3A3  61                 	db	97	;'a'
   355  00F3A4  20                 	db	32
   356  00F3A5  2E                 	db	46
   357  00F3A6  63                 	db	99	;'c'
   358  00F3A7  73                 	db	115	;'s'
   359  00F3A8  76                 	db	118	;'v'
   360  00F3A9  20                 	db	32
   361  00F3AA  65                 	db	101	;'e'
   362  00F3AB  78                 	db	120	;'x'
   363  00F3AC  74                 	db	116	;'t'
   364  00F3AD  65                 	db	101	;'e'
   365  00F3AE  6E                 	db	110	;'n'
   366  00F3AF  73                 	db	115	;'s'
   367  00F3B0  69                 	db	105	;'i'
   368  00F3B1  6F                 	db	111	;'o'
   369  00F3B2  6E                 	db	110	;'n'
   370  00F3B3  20                 	db	32
   371  00F3B4  74                 	db	116	;'t'
   372  00F3B5  6F                 	db	111	;'o'
   373  00F3B6  20                 	db	32
   374  00F3B7  79                 	db	121	;'y'
   375  00F3B8  6F                 	db	111	;'o'
   376  00F3B9  75                 	db	117	;'u'
   377  00F3BA  72                 	db	114	;'r'
   378  00F3BB  20                 	db	32
   379  00F3BC  66                 	db	102	;'f'
   380  00F3BD  69                 	db	105	;'i'
   381  00F3BE  6C                 	db	108	;'l'
   382  00F3BF  65                 	db	101	;'e'
   383  00F3C0  20                 	db	32
   384  00F3C1  6E                 	db	110	;'n'
   385  00F3C2  61                 	db	97	;'a'
   386  00F3C3  6D                 	db	109	;'m'
   387  00F3C4  65                 	db	101	;'e'
   388  00F3C5  0D                 	db	13
   389  00F3C6  0A                 	db	10
   390  00F3C7  00                 	db	0
   391  00F3C8                     STR_45:
   392  00F3C8  54                 	db	84	;'T'
   393  00F3C9  6F                 	db	111	;'o'
   394  00F3CA  20                 	db	32
   395  00F3CB  73                 	db	115	;'s'
   396  00F3CC  70                 	db	112	;'p'
   397  00F3CD  6F                 	db	111	;'o'
   398  00F3CE  6F                 	db	111	;'o'
   399  00F3CF  6C                 	db	108	;'l'
   400  00F3D0  20                 	db	32
   401  00F3D1  74                 	db	116	;'t'
   402  00F3D2  65                 	db	101	;'e'
   403  00F3D3  72                 	db	114	;'r'
   404  00F3D4  6D                 	db	109	;'m'
   405  00F3D5  69                 	db	105	;'i'
   406  00F3D6  6E                 	db	110	;'n'
   407  00F3D7  61                 	db	97	;'a'
   408  00F3D8  6C                 	db	108	;'l'
   409  00F3D9  20                 	db	32
   410  00F3DA  63                 	db	99	;'c'
   411  00F3DB  6F                 	db	111	;'o'
   412  00F3DC  6E                 	db	110	;'n'
   413  00F3DD  74                 	db	116	;'t'
   414  00F3DE  65                 	db	101	;'e'
   415  00F3DF  6E                 	db	110	;'n'
   416  00F3E0  74                 	db	116	;'t'
   417  00F3E1  73                 	db	115	;'s'
   418  00F3E2  20                 	db	32
   419  00F3E3  69                 	db	105	;'i'
   420  00F3E4  6E                 	db	110	;'n'
   421  00F3E5  74                 	db	116	;'t'
   422  00F3E6  6F                 	db	111	;'o'
   423  00F3E7  20                 	db	32
   424  00F3E8  61                 	db	97	;'a'
   425  00F3E9  20                 	db	32
   426  00F3EA  66                 	db	102	;'f'
   427  00F3EB  69                 	db	105	;'i'
   428  00F3EC  6C                 	db	108	;'l'
   429  00F3ED  65                 	db	101	;'e'
   430  00F3EE  20                 	db	32
   431  00F3EF  66                 	db	102	;'f'
   432  00F3F0  6F                 	db	111	;'o'
   433  00F3F1  6C                 	db	108	;'l'
   434  00F3F2  6C                 	db	108	;'l'
   435  00F3F3  6F                 	db	111	;'o'
   436  00F3F4  77                 	db	119	;'w'
   437  00F3F5  20                 	db	32
   438  00F3F6  74                 	db	116	;'t'
   439  00F3F7  68                 	db	104	;'h'
   440  00F3F8  65                 	db	101	;'e'
   441  00F3F9  73                 	db	115	;'s'
   442  00F3FA  65                 	db	101	;'e'
   443  00F3FB  20                 	db	32
   444  00F3FC  69                 	db	105	;'i'
   445  00F3FD  6E                 	db	110	;'n'
   446  00F3FE  73                 	db	115	;'s'
   447  00F3FF  74                 	db	116	;'t'
   448  00F400  72                 	db	114	;'r'
   449  00F401  75                 	db	117	;'u'
   450  00F402  63                 	db	99	;'c'
   451  00F403  74                 	db	116	;'t'
   452  00F404  69                 	db	105	;'i'
   453  00F405  6F                 	db	111	;'o'
   454  00F406  6E                 	db	110	;'n'
   455  00F407  73                 	db	115	;'s'
   456  00F408  3A                 	db	58	;':'
   457  00F409  0D                 	db	13
   458  00F40A  0A                 	db	10
   459  00F40B  00                 	db	0
   460  00F40C                     STR_78:
   461  00F40C  2E                 	db	46
   462  00F40D  2E                 	db	46
   463  00F40E  2E                 	db	46
   464  00F40F  2E                 	db	46
   465  00F410  2E                 	db	46
   466  00F411  2E                 	db	46
   467  00F412  2E                 	db	46
   468  00F413  2E                 	db	46
   469  00F414  2E                 	db	46
   470  00F415  2E                 	db	46
   471  00F416  2E                 	db	46
   472  00F417  2E                 	db	46
   473  00F418  2E                 	db	46
   474  00F419  2E                 	db	46
   475  00F41A  2E                 	db	46
   476  00F41B  2E                 	db	46
   477  00F41C  2E                 	db	46
   478  00F41D  2E                 	db	46
   479  00F41E  2E                 	db	46
   480  00F41F  2E                 	db	46
   481  00F420  2E                 	db	46
   482  00F421  2E                 	db	46
   483  00F422  2E                 	db	46
   484  00F423  2E                 	db	46
   485  00F424  2E                 	db	46
   486  00F425  2E                 	db	46
   487  00F426  2E                 	db	46
   488  00F427  2E                 	db	46
   489  00F428  2E                 	db	46
   490  00F429  2E                 	db	46
   491  00F42A  2E                 	db	46
   492  00F42B  2E                 	db	46
   493  00F42C  2E                 	db	46
   494  00F42D  2E                 	db	46
   495  00F42E  2E                 	db	46
   496  00F42F  2E                 	db	46
   497  00F430  2E                 	db	46
   498  00F431  2E                 	db	46
   499  00F432  2E                 	db	46
   500  00F433  2E                 	db	46
   501  00F434  2E                 	db	46
   502  00F435  2E                 	db	46
   503  00F436  2E                 	db	46
   504  00F437  2E                 	db	46
   505  00F438  2E                 	db	46
   506  00F439  2E                 	db	46
   507  00F43A  2E                 	db	46
   508  00F43B  2E                 	db	46
   509  00F43C  2E                 	db	46
   510  00F43D  2E                 	db	46
   511  00F43E  2E                 	db	46
   512  00F43F  2E                 	db	46
   513  00F440  2E                 	db	46
   514  00F441  2E                 	db	46
   515  00F442  2E                 	db	46
   516  00F443  2E                 	db	46
   517  00F444  2E                 	db	46
   518  00F445  2E                 	db	46
   519  00F446  2E                 	db	46
   520  00F447  0D                 	db	13
   521  00F448  0A                 	db	10
   522  00F449  00                 	db	0
   523  00F44A                     STR_79:
   524  00F44A  2E                 	db	46
   525  00F44B  2E                 	db	46
   526  00F44C  2E                 	db	46
   527  00F44D  2E                 	db	46
   528  00F44E  2E                 	db	46
   529  00F44F  2E                 	db	46
   530  00F450  2E                 	db	46
   531  00F451  2E                 	db	46
   532  00F452  2E                 	db	46
   533  00F453  2E                 	db	46
   534  00F454  2E                 	db	46
   535  00F455  2E                 	db	46
   536  00F456  2E                 	db	46
   537  00F457  2E                 	db	46
   538  00F458  2E                 	db	46
   539  00F459  2E                 	db	46
   540  00F45A  2E                 	db	46
   541  00F45B  2E                 	db	46
   542  00F45C  2E                 	db	46
   543  00F45D  2E                 	db	46
   544  00F45E  2E                 	db	46
   545  00F45F  3F                 	db	63	;'?'
   546  00F460  3F                 	db	63	;'?'
   547  00F461  3F                 	db	63	;'?'
   548  00F462  3F                 	db	63	;'?'
   549  00F463  3F                 	db	63	;'?'
   550  00F464  3F                 	db	63	;'?'
   551  00F465  3F                 	db	63	;'?'
   552  00F466  3F                 	db	63	;'?'
   553  00F467  3F                 	db	63	;'?'
   554  00F468  3F                 	db	63	;'?'
   555  00F469  3F                 	db	63	;'?'
   556  00F46A  3F                 	db	63	;'?'
   557  00F46B  3F                 	db	63	;'?'
   558  00F46C  3F                 	db	63	;'?'
   559  00F46D  3F                 	db	63	;'?'
   560  00F46E  3F                 	db	63	;'?'
   561  00F46F  3F                 	db	63	;'?'
   562  00F470  2E                 	db	46
   563  00F471  2E                 	db	46
   564  00F472  2E                 	db	46
   565  00F473  2E                 	db	46
   566  00F474  2E                 	db	46
   567  00F475  2E                 	db	46
   568  00F476  2E                 	db	46
   569  00F477  2E                 	db	46
   570  00F478  2E                 	db	46
   571  00F479  2E                 	db	46
   572  00F47A  2E                 	db	46
   573  00F47B  2E                 	db	46
   574  00F47C  2E                 	db	46
   575  00F47D  2E                 	db	46
   576  00F47E  2E                 	db	46
   577  00F47F  2E                 	db	46
   578  00F480  2E                 	db	46
   579  00F481  2E                 	db	46
   580  00F482  2E                 	db	46
   581  00F483  2E                 	db	46
   582  00F484  2E                 	db	46
   583  00F485  0D                 	db	13
   584  00F486  0A                 	db	10
   585  00F487  00                 	db	0
   586  00F488                     STR_80:
   587  00F488  2E                 	db	46
   588  00F489  2E                 	db	46
   589  00F48A  2E                 	db	46
   590  00F48B  2E                 	db	46
   591  00F48C  2E                 	db	46
   592  00F48D  2E                 	db	46
   593  00F48E  2E                 	db	46
   594  00F48F  2E                 	db	46
   595  00F490  2E                 	db	46
   596  00F491  2E                 	db	46
   597  00F492  2E                 	db	46
   598  00F493  2E                 	db	46
   599  00F494  2E                 	db	46
   600  00F495  2E                 	db	46
   601  00F496  2E                 	db	46
   602  00F497  2E                 	db	46
   603  00F498  2E                 	db	46
   604  00F499  3F                 	db	63	;'?'
   605  00F49A  3F                 	db	63	;'?'
   606  00F49B  3F                 	db	63	;'?'
   607  00F49C  3F                 	db	63	;'?'
   608  00F49D  3F                 	db	63	;'?'
   609  00F49E  3F                 	db	63	;'?'
   610  00F49F  3F                 	db	63	;'?'
   611  00F4A0  3F                 	db	63	;'?'
   612  00F4A1  3F                 	db	63	;'?'
   613  00F4A2  3F                 	db	63	;'?'
   614  00F4A3  3F                 	db	63	;'?'
   615  00F4A4  3F                 	db	63	;'?'
   616  00F4A5  3F                 	db	63	;'?'
   617  00F4A6  3F                 	db	63	;'?'
   618  00F4A7  3F                 	db	63	;'?'
   619  00F4A8  3F                 	db	63	;'?'
   620  00F4A9  3F                 	db	63	;'?'
   621  00F4AA  3F                 	db	63	;'?'
   622  00F4AB  3F                 	db	63	;'?'
   623  00F4AC  3F                 	db	63	;'?'
   624  00F4AD  3F                 	db	63	;'?'
   625  00F4AE  3F                 	db	63	;'?'
   626  00F4AF  3F                 	db	63	;'?'
   627  00F4B0  3F                 	db	63	;'?'
   628  00F4B1  3F                 	db	63	;'?'
   629  00F4B2  2E                 	db	46
   630  00F4B3  2E                 	db	46
   631  00F4B4  2E                 	db	46
   632  00F4B5  2E                 	db	46
   633  00F4B6  2E                 	db	46
   634  00F4B7  2E                 	db	46
   635  00F4B8  2E                 	db	46
   636  00F4B9  2E                 	db	46
   637  00F4BA  2E                 	db	46
   638  00F4BB  2E                 	db	46
   639  00F4BC  2E                 	db	46
   640  00F4BD  2E                 	db	46
   641  00F4BE  2E                 	db	46
   642  00F4BF  2E                 	db	46
   643  00F4C0  2E                 	db	46
   644  00F4C1  2E                 	db	46
   645  00F4C2  2E                 	db	46
   646  00F4C3  0D                 	db	13
   647  00F4C4  0A                 	db	10
   648  00F4C5  00                 	db	0
   649  00F4C6                     STR_81:
   650  00F4C6  2E                 	db	46
   651  00F4C7  2E                 	db	46
   652  00F4C8  2E                 	db	46
   653  00F4C9  2E                 	db	46
   654  00F4CA  2E                 	db	46
   655  00F4CB  2E                 	db	46
   656  00F4CC  2E                 	db	46
   657  00F4CD  2E                 	db	46
   658  00F4CE  2E                 	db	46
   659  00F4CF  2E                 	db	46
   660  00F4D0  2E                 	db	46
   661  00F4D1  2E                 	db	46
   662  00F4D2  2E                 	db	46
   663  00F4D3  2E                 	db	46
   664  00F4D4  3F                 	db	63	;'?'
   665  00F4D5  3F                 	db	63	;'?'
   666  00F4D6  3F                 	db	63	;'?'
   667  00F4D7  3F                 	db	63	;'?'
   668  00F4D8  3F                 	db	63	;'?'
   669  00F4D9  3F                 	db	63	;'?'
   670  00F4DA  3F                 	db	63	;'?'
   671  00F4DB  3F                 	db	63	;'?'
   672  00F4DC  3F                 	db	63	;'?'
   673  00F4DD  3F                 	db	63	;'?'
   674  00F4DE  3F                 	db	63	;'?'
   675  00F4DF  3F                 	db	63	;'?'
   676  00F4E0  3F                 	db	63	;'?'
   677  00F4E1  3F                 	db	63	;'?'
   678  00F4E2  3F                 	db	63	;'?'
   679  00F4E3  3F                 	db	63	;'?'
   680  00F4E4  3F                 	db	63	;'?'
   681  00F4E5  3F                 	db	63	;'?'
   682  00F4E6  3F                 	db	63	;'?'
   683  00F4E7  3F                 	db	63	;'?'
   684  00F4E8  3F                 	db	63	;'?'
   685  00F4E9  3F                 	db	63	;'?'
   686  00F4EA  3F                 	db	63	;'?'
   687  00F4EB  3F                 	db	63	;'?'
   688  00F4EC  3F                 	db	63	;'?'
   689  00F4ED  3F                 	db	63	;'?'
   690  00F4EE  3F                 	db	63	;'?'
   691  00F4EF  3F                 	db	63	;'?'
   692  00F4F0  3F                 	db	63	;'?'
   693  00F4F1  3F                 	db	63	;'?'
   694  00F4F2  3F                 	db	63	;'?'
   695  00F4F3  2E                 	db	46
   696  00F4F4  2E                 	db	46
   697  00F4F5  2E                 	db	46
   698  00F4F6  2E                 	db	46
   699  00F4F7  2E                 	db	46
   700  00F4F8  2E                 	db	46
   701  00F4F9  2E                 	db	46
   702  00F4FA  2E                 	db	46
   703  00F4FB  2E                 	db	46
   704  00F4FC  2E                 	db	46
   705  00F4FD  2E                 	db	46
   706  00F4FE  2E                 	db	46
   707  00F4FF  2E                 	db	46
   708  00F500  2E                 	db	46
   709  00F501  0D                 	db	13
   710  00F502  0A                 	db	10
   711  00F503  00                 	db	0
   712  00F504                     STR_82:
   713  00F504  2E                 	db	46
   714  00F505  2E                 	db	46
   715  00F506  2E                 	db	46
   716  00F507  2E                 	db	46
   717  00F508  2E                 	db	46
   718  00F509  2E                 	db	46
   719  00F50A  2E                 	db	46
   720  00F50B  2E                 	db	46
   721  00F50C  2E                 	db	46
   722  00F50D  2E                 	db	46
   723  00F50E  2E                 	db	46
   724  00F50F  2E                 	db	46
   725  00F510  3F                 	db	63	;'?'
   726  00F511  3F                 	db	63	;'?'
   727  00F512  3F                 	db	63	;'?'
   728  00F513  3F                 	db	63	;'?'
   729  00F514  3F                 	db	63	;'?'
   730  00F515  3F                 	db	63	;'?'
   731  00F516  3F                 	db	63	;'?'
   732  00F517  3F                 	db	63	;'?'
   733  00F518  3F                 	db	63	;'?'
   734  00F519  3F                 	db	63	;'?'
   735  00F51A  3F                 	db	63	;'?'
   736  00F51B  3F                 	db	63	;'?'
   737  00F51C  3F                 	db	63	;'?'
   738  00F51D  3F                 	db	63	;'?'
   739  00F51E  3F                 	db	63	;'?'
   740  00F51F  3F                 	db	63	;'?'
   741  00F520  3F                 	db	63	;'?'
   742  00F521  3F                 	db	63	;'?'
   743  00F522  3F                 	db	63	;'?'
   744  00F523  3F                 	db	63	;'?'
   745  00F524  3F                 	db	63	;'?'
   746  00F525  3F                 	db	63	;'?'
   747  00F526  3F                 	db	63	;'?'
   748  00F527  3F                 	db	63	;'?'
   749  00F528  3F                 	db	63	;'?'
   750  00F529  3F                 	db	63	;'?'
   751  00F52A  3F                 	db	63	;'?'
   752  00F52B  3F                 	db	63	;'?'
   753  00F52C  3F                 	db	63	;'?'
   754  00F52D  3F                 	db	63	;'?'
   755  00F52E  3F                 	db	63	;'?'
   756  00F52F  3F                 	db	63	;'?'
   757  00F530  3F                 	db	63	;'?'
   758  00F531  3F                 	db	63	;'?'
   759  00F532  3F                 	db	63	;'?'
   760  00F533  2E                 	db	46
   761  00F534  2E                 	db	46
   762  00F535  2E                 	db	46
   763  00F536  2E                 	db	46
   764  00F537  2E                 	db	46
   765  00F538  2E                 	db	46
   766  00F539  2E                 	db	46
   767  00F53A  2E                 	db	46
   768  00F53B  2E                 	db	46
   769  00F53C  2E                 	db	46
   770  00F53D  2E                 	db	46
   771  00F53E  2E                 	db	46
   772  00F53F  0D                 	db	13
   773  00F540  0A                 	db	10
   774  00F541  00                 	db	0
   775  00F542                     STR_83:
   776  00F542  2E                 	db	46
   777  00F543  2E                 	db	46
   778  00F544  2E                 	db	46
   779  00F545  2E                 	db	46
   780  00F546  2E                 	db	46
   781  00F547  2E                 	db	46
   782  00F548  2E                 	db	46
   783  00F549  2E                 	db	46
   784  00F54A  2E                 	db	46
   785  00F54B  2E                 	db	46
   786  00F54C  3F                 	db	63	;'?'
   787  00F54D  3F                 	db	63	;'?'
   788  00F54E  3F                 	db	63	;'?'
   789  00F54F  3F                 	db	63	;'?'
   790  00F550  3F                 	db	63	;'?'
   791  00F551  3F                 	db	63	;'?'
   792  00F552  3F                 	db	63	;'?'
   793  00F553  3F                 	db	63	;'?'
   794  00F554  3F                 	db	63	;'?'
   795  00F555  3F                 	db	63	;'?'
   796  00F556  3F                 	db	63	;'?'
   797  00F557  3F                 	db	63	;'?'
   798  00F558  3F                 	db	63	;'?'
   799  00F559  3F                 	db	63	;'?'
   800  00F55A  3F                 	db	63	;'?'
   801  00F55B  3F                 	db	63	;'?'
   802  00F55C  3F                 	db	63	;'?'
   803  00F55D  3F                 	db	63	;'?'
   804  00F55E  3F                 	db	63	;'?'
   805  00F55F  3F                 	db	63	;'?'
   806  00F560  3F                 	db	63	;'?'
   807  00F561  3F                 	db	63	;'?'
   808  00F562  3F                 	db	63	;'?'
   809  00F563  3F                 	db	63	;'?'
   810  00F564  3F                 	db	63	;'?'
   811  00F565  3F                 	db	63	;'?'
   812  00F566  3F                 	db	63	;'?'
   813  00F567  3F                 	db	63	;'?'
   814  00F568  3F                 	db	63	;'?'
   815  00F569  3F                 	db	63	;'?'
   816  00F56A  3F                 	db	63	;'?'
   817  00F56B  3F                 	db	63	;'?'
   818  00F56C  3F                 	db	63	;'?'
   819  00F56D  3F                 	db	63	;'?'
   820  00F56E  3F                 	db	63	;'?'
   821  00F56F  3F                 	db	63	;'?'
   822  00F570  3F                 	db	63	;'?'
   823  00F571  3F                 	db	63	;'?'
   824  00F572  3F                 	db	63	;'?'
   825  00F573  2E                 	db	46
   826  00F574  2E                 	db	46
   827  00F575  2E                 	db	46
   828  00F576  2E                 	db	46
   829  00F577  2E                 	db	46
   830  00F578  2E                 	db	46
   831  00F579  2E                 	db	46
   832  00F57A  2E                 	db	46
   833  00F57B  2E                 	db	46
   834  00F57C  2E                 	db	46
   835  00F57D  0D                 	db	13
   836  00F57E  0A                 	db	10
   837  00F57F  00                 	db	0
   838  00F580                     STR_84:
   839  00F580  2E                 	db	46
   840  00F581  2E                 	db	46
   841  00F582  2E                 	db	46
   842  00F583  2E                 	db	46
   843  00F584  2E                 	db	46
   844  00F585  2E                 	db	46
   845  00F586  2E                 	db	46
   846  00F587  2E                 	db	46
   847  00F588  2E                 	db	46
   848  00F589  3F                 	db	63	;'?'
   849  00F58A  3F                 	db	63	;'?'
   850  00F58B  3F                 	db	63	;'?'
   851  00F58C  3F                 	db	63	;'?'
   852  00F58D  3F                 	db	63	;'?'
   853  00F58E  3F                 	db	63	;'?'
   854  00F58F  3F                 	db	63	;'?'
   855  00F590  3F                 	db	63	;'?'
   856  00F591  3F                 	db	63	;'?'
   857  00F592  3F                 	db	63	;'?'
   858  00F593  3F                 	db	63	;'?'
   859  00F594  3F                 	db	63	;'?'
   860  00F595  3F                 	db	63	;'?'
   861  00F596  3F                 	db	63	;'?'
   862  00F597  3F                 	db	63	;'?'
   863  00F598  3F                 	db	63	;'?'
   864  00F599  3F                 	db	63	;'?'
   865  00F59A  3F                 	db	63	;'?'
   866  00F59B  3F                 	db	63	;'?'
   867  00F59C  3F                 	db	63	;'?'
   868  00F59D  3F                 	db	63	;'?'
   869  00F59E  3F                 	db	63	;'?'
   870  00F59F  3F                 	db	63	;'?'
   871  00F5A0  3F                 	db	63	;'?'
   872  00F5A1  3F                 	db	63	;'?'
   873  00F5A2  3F                 	db	63	;'?'
   874  00F5A3  3F                 	db	63	;'?'
   875  00F5A4  3F                 	db	63	;'?'
   876  00F5A5  3F                 	db	63	;'?'
   877  00F5A6  3F                 	db	63	;'?'
   878  00F5A7  3F                 	db	63	;'?'
   879  00F5A8  3F                 	db	63	;'?'
   880  00F5A9  3F                 	db	63	;'?'
   881  00F5AA  3F                 	db	63	;'?'
   882  00F5AB  3F                 	db	63	;'?'
   883  00F5AC  3F                 	db	63	;'?'
   884  00F5AD  3F                 	db	63	;'?'
   885  00F5AE  3F                 	db	63	;'?'
   886  00F5AF  3F                 	db	63	;'?'
   887  00F5B0  3F                 	db	63	;'?'
   888  00F5B1  3F                 	db	63	;'?'
   889  00F5B2  2E                 	db	46
   890  00F5B3  2E                 	db	46
   891  00F5B4  2E                 	db	46
   892  00F5B5  2E                 	db	46
   893  00F5B6  2E                 	db	46
   894  00F5B7  2E                 	db	46
   895  00F5B8  2E                 	db	46
   896  00F5B9  2E                 	db	46
   897  00F5BA  2E                 	db	46
   898  00F5BB  0D                 	db	13
   899  00F5BC  0A                 	db	10
   900  00F5BD  00                 	db	0
   901  00F5BE                     STR_105:
   902  00F5BE  2E                 	db	46
   903  00F5BF  2E                 	db	46
   904  00F5C0  2E                 	db	46
   905  00F5C1  2E                 	db	46
   906  00F5C2  2E                 	db	46
   907  00F5C3  2E                 	db	46
   908  00F5C4  2E                 	db	46
   909  00F5C5  3F                 	db	63	;'?'
   910  00F5C6  3F                 	db	63	;'?'
   911  00F5C7  3F                 	db	63	;'?'
   912  00F5C8  3F                 	db	63	;'?'
   913  00F5C9  3F                 	db	63	;'?'
   914  00F5CA  3F                 	db	63	;'?'
   915  00F5CB  3F                 	db	63	;'?'
   916  00F5CC  3F                 	db	63	;'?'
   917  00F5CD  3F                 	db	63	;'?'
   918  00F5CE  3F                 	db	63	;'?'
   919  00F5CF  3F                 	db	63	;'?'
   920  00F5D0  3F                 	db	63	;'?'
   921  00F5D1  3F                 	db	63	;'?'
   922  00F5D2  3F                 	db	63	;'?'
   923  00F5D3  3F                 	db	63	;'?'
   924  00F5D4  3F                 	db	63	;'?'
   925  00F5D5  3F                 	db	63	;'?'
   926  00F5D6  3A                 	db	58	;':'
   927  00F5D7  3A                 	db	58	;':'
   928  00F5D8  3A                 	db	58	;':'
   929  00F5D9  3A                 	db	58	;':'
   930  00F5DA  3A                 	db	58	;':'
   931  00F5DB  3A                 	db	58	;':'
   932  00F5DC  3A                 	db	58	;':'
   933  00F5DD  3A                 	db	58	;':'
   934  00F5DE  3A                 	db	58	;':'
   935  00F5DF  3A                 	db	58	;':'
   936  00F5E0  3A                 	db	58	;':'
   937  00F5E1  3F                 	db	63	;'?'
   938  00F5E2  3F                 	db	63	;'?'
   939  00F5E3  3F                 	db	63	;'?'
   940  00F5E4  3F                 	db	63	;'?'
   941  00F5E5  3F                 	db	63	;'?'
   942  00F5E6  3F                 	db	63	;'?'
   943  00F5E7  3F                 	db	63	;'?'
   944  00F5E8  3F                 	db	63	;'?'
   945  00F5E9  3F                 	db	63	;'?'
   946  00F5EA  3F                 	db	63	;'?'
   947  00F5EB  3F                 	db	63	;'?'
   948  00F5EC  3F                 	db	63	;'?'
   949  00F5ED  3F                 	db	63	;'?'
   950  00F5EE  3F                 	db	63	;'?'
   951  00F5EF  3F                 	db	63	;'?'
   952  00F5F0  3F                 	db	63	;'?'
   953  00F5F1  3F                 	db	63	;'?'
   954  00F5F2  2E                 	db	46
   955  00F5F3  2E                 	db	46
   956  00F5F4  2E                 	db	46
   957  00F5F5  2E                 	db	46
   958  00F5F6  2E                 	db	46
   959  00F5F7  2E                 	db	46
   960  00F5F8  2E                 	db	46
   961  00F5F9  0D                 	db	13
   962  00F5FA  0A                 	db	10
   963  00F5FB  00                 	db	0
   964  00F5FC                     STR_85:
   965  00F5FC  2E                 	db	46
   966  00F5FD  2E                 	db	46
   967  00F5FE  2E                 	db	46
   968  00F5FF  2E                 	db	46
   969  00F600  2E                 	db	46
   970  00F601  2E                 	db	46
   971  00F602  2E                 	db	46
   972  00F603  3F                 	db	63	;'?'
   973  00F604  3F                 	db	63	;'?'
   974  00F605  3F                 	db	63	;'?'
   975  00F606  3F                 	db	63	;'?'
   976  00F607  3F                 	db	63	;'?'
   977  00F608  3F                 	db	63	;'?'
   978  00F609  3F                 	db	63	;'?'
   979  00F60A  3F                 	db	63	;'?'
   980  00F60B  3F                 	db	63	;'?'
   981  00F60C  3F                 	db	63	;'?'
   982  00F60D  3F                 	db	63	;'?'
   983  00F60E  3F                 	db	63	;'?'
   984  00F60F  3F                 	db	63	;'?'
   985  00F610  3F                 	db	63	;'?'
   986  00F611  3F                 	db	63	;'?'
   987  00F612  3F                 	db	63	;'?'
   988  00F613  3F                 	db	63	;'?'
   989  00F614  3F                 	db	63	;'?'
   990  00F615  3F                 	db	63	;'?'
   991  00F616  3F                 	db	63	;'?'
   992  00F617  3F                 	db	63	;'?'
   993  00F618  3F                 	db	63	;'?'
   994  00F619  3F                 	db	63	;'?'
   995  00F61A  3F                 	db	63	;'?'
   996  00F61B  3F                 	db	63	;'?'
   997  00F61C  3F                 	db	63	;'?'
   998  00F61D  3F                 	db	63	;'?'
   999  00F61E  3F                 	db	63	;'?'
  1000  00F61F  3F                 	db	63	;'?'
  1001  00F620  3F                 	db	63	;'?'
  1002  00F621  3F                 	db	63	;'?'
  1003  00F622  3F                 	db	63	;'?'
  1004  00F623  3F                 	db	63	;'?'
  1005  00F624  3F                 	db	63	;'?'
  1006  00F625  3F                 	db	63	;'?'
  1007  00F626  3F                 	db	63	;'?'
  1008  00F627  3F                 	db	63	;'?'
  1009  00F628  3F                 	db	63	;'?'
  1010  00F629  3F                 	db	63	;'?'
  1011  00F62A  3F                 	db	63	;'?'
  1012  00F62B  3F                 	db	63	;'?'
  1013  00F62C  3F                 	db	63	;'?'
  1014  00F62D  3F                 	db	63	;'?'
  1015  00F62E  3F                 	db	63	;'?'
  1016  00F62F  3F                 	db	63	;'?'
  1017  00F630  2E                 	db	46
  1018  00F631  2E                 	db	46
  1019  00F632  2E                 	db	46
  1020  00F633  2E                 	db	46
  1021  00F634  2E                 	db	46
  1022  00F635  2E                 	db	46
  1023  00F636  2E                 	db	46
  1024  00F637  0D                 	db	13
  1025  00F638  0A                 	db	10
  1026  00F639  00                 	db	0
  1027  00F63A                     STR_104:
  1028  00F63A  2E                 	db	46
  1029  00F63B  2E                 	db	46
  1030  00F63C  2E                 	db	46
  1031  00F63D  2E                 	db	46
  1032  00F63E  2E                 	db	46
  1033  00F63F  2E                 	db	46
  1034  00F640  3F                 	db	63	;'?'
  1035  00F641  3F                 	db	63	;'?'
  1036  00F642  3F                 	db	63	;'?'
  1037  00F643  3F                 	db	63	;'?'
  1038  00F644  3F                 	db	63	;'?'
  1039  00F645  3F                 	db	63	;'?'
  1040  00F646  3F                 	db	63	;'?'
  1041  00F647  3F                 	db	63	;'?'
  1042  00F648  3F                 	db	63	;'?'
  1043  00F649  3F                 	db	63	;'?'
  1044  00F64A  3F                 	db	63	;'?'
  1045  00F64B  3F                 	db	63	;'?'
  1046  00F64C  3F                 	db	63	;'?'
  1047  00F64D  3F                 	db	63	;'?'
  1048  00F64E  3F                 	db	63	;'?'
  1049  00F64F  3A                 	db	58	;':'
  1050  00F650  3A                 	db	58	;':'
  1051  00F651  3A                 	db	58	;':'
  1052  00F652  3A                 	db	58	;':'
  1053  00F653  3A                 	db	58	;':'
  1054  00F654  3F                 	db	63	;'?'
  1055  00F655  3F                 	db	63	;'?'
  1056  00F656  3F                 	db	63	;'?'
  1057  00F657  3F                 	db	63	;'?'
  1058  00F658  3F                 	db	63	;'?'
  1059  00F659  3F                 	db	63	;'?'
  1060  00F65A  3F                 	db	63	;'?'
  1061  00F65B  3A                 	db	58	;':'
  1062  00F65C  3A                 	db	58	;':'
  1063  00F65D  3A                 	db	58	;':'
  1064  00F65E  3A                 	db	58	;':'
  1065  00F65F  3A                 	db	58	;':'
  1066  00F660  3F                 	db	63	;'?'
  1067  00F661  3F                 	db	63	;'?'
  1068  00F662  3F                 	db	63	;'?'
  1069  00F663  3F                 	db	63	;'?'
  1070  00F664  3F                 	db	63	;'?'
  1071  00F665  3F                 	db	63	;'?'
  1072  00F666  3F                 	db	63	;'?'
  1073  00F667  3F                 	db	63	;'?'
  1074  00F668  3F                 	db	63	;'?'
  1075  00F669  3F                 	db	63	;'?'
  1076  00F66A  3F                 	db	63	;'?'
  1077  00F66B  3F                 	db	63	;'?'
  1078  00F66C  3F                 	db	63	;'?'
  1079  00F66D  3F                 	db	63	;'?'
  1080  00F66E  3F                 	db	63	;'?'
  1081  00F66F  2E                 	db	46
  1082  00F670  2E                 	db	46
  1083  00F671  2E                 	db	46
  1084  00F672  2E                 	db	46
  1085  00F673  2E                 	db	46
  1086  00F674  2E                 	db	46
  1087  00F675  0D                 	db	13
  1088  00F676  0A                 	db	10
  1089  00F677  00                 	db	0
  1090  00F678                     STR_86:
  1091  00F678  2E                 	db	46
  1092  00F679  2E                 	db	46
  1093  00F67A  2E                 	db	46
  1094  00F67B  2E                 	db	46
  1095  00F67C  2E                 	db	46
  1096  00F67D  2E                 	db	46
  1097  00F67E  3F                 	db	63	;'?'
  1098  00F67F  3F                 	db	63	;'?'
  1099  00F680  3F                 	db	63	;'?'
  1100  00F681  3F                 	db	63	;'?'
  1101  00F682  3F                 	db	63	;'?'
  1102  00F683  3F                 	db	63	;'?'
  1103  00F684  3F                 	db	63	;'?'
  1104  00F685  3F                 	db	63	;'?'
  1105  00F686  3F                 	db	63	;'?'
  1106  00F687  3F                 	db	63	;'?'
  1107  00F688  3F                 	db	63	;'?'
  1108  00F689  3F                 	db	63	;'?'
  1109  00F68A  3F                 	db	63	;'?'
  1110  00F68B  3F                 	db	63	;'?'
  1111  00F68C  3F                 	db	63	;'?'
  1112  00F68D  3F                 	db	63	;'?'
  1113  00F68E  3F                 	db	63	;'?'
  1114  00F68F  3F                 	db	63	;'?'
  1115  00F690  3F                 	db	63	;'?'
  1116  00F691  3F                 	db	63	;'?'
  1117  00F692  3F                 	db	63	;'?'
  1118  00F693  3F                 	db	63	;'?'
  1119  00F694  3F                 	db	63	;'?'
  1120  00F695  3F                 	db	63	;'?'
  1121  00F696  3F                 	db	63	;'?'
  1122  00F697  3F                 	db	63	;'?'
  1123  00F698  3F                 	db	63	;'?'
  1124  00F699  3F                 	db	63	;'?'
  1125  00F69A  3F                 	db	63	;'?'
  1126  00F69B  3F                 	db	63	;'?'
  1127  00F69C  3F                 	db	63	;'?'
  1128  00F69D  3F                 	db	63	;'?'
  1129  00F69E  3F                 	db	63	;'?'
  1130  00F69F  3F                 	db	63	;'?'
  1131  00F6A0  3F                 	db	63	;'?'
  1132  00F6A1  3F                 	db	63	;'?'
  1133  00F6A2  3F                 	db	63	;'?'
  1134  00F6A3  3F                 	db	63	;'?'
  1135  00F6A4  3F                 	db	63	;'?'
  1136  00F6A5  3F                 	db	63	;'?'
  1137  00F6A6  3F                 	db	63	;'?'
  1138  00F6A7  3F                 	db	63	;'?'
  1139  00F6A8  3F                 	db	63	;'?'
  1140  00F6A9  3F                 	db	63	;'?'
  1141  00F6AA  3F                 	db	63	;'?'
  1142  00F6AB  3F                 	db	63	;'?'
  1143  00F6AC  3F                 	db	63	;'?'
  1144  00F6AD  2E                 	db	46
  1145  00F6AE  2E                 	db	46
  1146  00F6AF  2E                 	db	46
  1147  00F6B0  2E                 	db	46
  1148  00F6B1  2E                 	db	46
  1149  00F6B2  2E                 	db	46
  1150  00F6B3  0D                 	db	13
  1151  00F6B4  0A                 	db	10
  1152  00F6B5  00                 	db	0
  1153  00F6B6                     STR_103:
  1154  00F6B6  2E                 	db	46
  1155  00F6B7  2E                 	db	46
  1156  00F6B8  2E                 	db	46
  1157  00F6B9  2E                 	db	46
  1158  00F6BA  2E                 	db	46
  1159  00F6BB  3F                 	db	63	;'?'
  1160  00F6BC  3F                 	db	63	;'?'
  1161  00F6BD  3F                 	db	63	;'?'
  1162  00F6BE  3F                 	db	63	;'?'
  1163  00F6BF  3F                 	db	63	;'?'
  1164  00F6C0  3F                 	db	63	;'?'
  1165  00F6C1  3F                 	db	63	;'?'
  1166  00F6C2  3F                 	db	63	;'?'
  1167  00F6C3  3F                 	db	63	;'?'
  1168  00F6C4  3F                 	db	63	;'?'
  1169  00F6C5  3F                 	db	63	;'?'
  1170  00F6C6  3F                 	db	63	;'?'
  1171  00F6C7  3F                 	db	63	;'?'
  1172  00F6C8  3F                 	db	63	;'?'
  1173  00F6C9  3A                 	db	58	;':'
  1174  00F6CA  3A                 	db	58	;':'
  1175  00F6CB  3A                 	db	58	;':'
  1176  00F6CC  3A                 	db	58	;':'
  1177  00F6CD  3F                 	db	63	;'?'
  1178  00F6CE  3F                 	db	63	;'?'
  1179  00F6CF  3F                 	db	63	;'?'
  1180  00F6D0  3F                 	db	63	;'?'
  1181  00F6D1  3F                 	db	63	;'?'
  1182  00F6D2  3F                 	db	63	;'?'
  1183  00F6D3  3F                 	db	63	;'?'
  1184  00F6D4  3F                 	db	63	;'?'
  1185  00F6D5  3F                 	db	63	;'?'
  1186  00F6D6  3F                 	db	63	;'?'
  1187  00F6D7  3F                 	db	63	;'?'
  1188  00F6D8  3F                 	db	63	;'?'
  1189  00F6D9  3F                 	db	63	;'?'
  1190  00F6DA  3A                 	db	58	;':'
  1191  00F6DB  3A                 	db	58	;':'
  1192  00F6DC  3A                 	db	58	;':'
  1193  00F6DD  3A                 	db	58	;':'
  1194  00F6DE  3F                 	db	63	;'?'
  1195  00F6DF  3F                 	db	63	;'?'
  1196  00F6E0  3F                 	db	63	;'?'
  1197  00F6E1  3F                 	db	63	;'?'
  1198  00F6E2  3F                 	db	63	;'?'
  1199  00F6E3  3F                 	db	63	;'?'
  1200  00F6E4  3F                 	db	63	;'?'
  1201  00F6E5  3F                 	db	63	;'?'
  1202  00F6E6  3F                 	db	63	;'?'
  1203  00F6E7  3F                 	db	63	;'?'
  1204  00F6E8  3F                 	db	63	;'?'
  1205  00F6E9  3F                 	db	63	;'?'
  1206  00F6EA  3F                 	db	63	;'?'
  1207  00F6EB  3F                 	db	63	;'?'
  1208  00F6EC  2E                 	db	46
  1209  00F6ED  2E                 	db	46
  1210  00F6EE  2E                 	db	46
  1211  00F6EF  2E                 	db	46
  1212  00F6F0  2E                 	db	46
  1213  00F6F1  0D                 	db	13
  1214  00F6F2  0A                 	db	10
  1215  00F6F3  00                 	db	0
  1216  00F6F4                     STR_87:
  1217  00F6F4  2E                 	db	46
  1218  00F6F5  2E                 	db	46
  1219  00F6F6  2E                 	db	46
  1220  00F6F7  2E                 	db	46
  1221  00F6F8  2E                 	db	46
  1222  00F6F9  3F                 	db	63	;'?'
  1223  00F6FA  3F                 	db	63	;'?'
  1224  00F6FB  3F                 	db	63	;'?'
  1225  00F6FC  3F                 	db	63	;'?'
  1226  00F6FD  3F                 	db	63	;'?'
  1227  00F6FE  3F                 	db	63	;'?'
  1228  00F6FF  3F                 	db	63	;'?'
  1229  00F700  3F                 	db	63	;'?'
  1230  00F701  3F                 	db	63	;'?'
  1231  00F702  3F                 	db	63	;'?'
  1232  00F703  3F                 	db	63	;'?'
  1233  00F704  3F                 	db	63	;'?'
  1234  00F705  3F                 	db	63	;'?'
  1235  00F706  3F                 	db	63	;'?'
  1236  00F707  3F                 	db	63	;'?'
  1237  00F708  3F                 	db	63	;'?'
  1238  00F709  3F                 	db	63	;'?'
  1239  00F70A  3F                 	db	63	;'?'
  1240  00F70B  3F                 	db	63	;'?'
  1241  00F70C  3F                 	db	63	;'?'
  1242  00F70D  3F                 	db	63	;'?'
  1243  00F70E  3F                 	db	63	;'?'
  1244  00F70F  3F                 	db	63	;'?'
  1245  00F710  3F                 	db	63	;'?'
  1246  00F711  3F                 	db	63	;'?'
  1247  00F712  3F                 	db	63	;'?'
  1248  00F713  3F                 	db	63	;'?'
  1249  00F714  3F                 	db	63	;'?'
  1250  00F715  3F                 	db	63	;'?'
  1251  00F716  3F                 	db	63	;'?'
  1252  00F717  3F                 	db	63	;'?'
  1253  00F718  3F                 	db	63	;'?'
  1254  00F719  3F                 	db	63	;'?'
  1255  00F71A  3F                 	db	63	;'?'
  1256  00F71B  3F                 	db	63	;'?'
  1257  00F71C  3F                 	db	63	;'?'
  1258  00F71D  3F                 	db	63	;'?'
  1259  00F71E  3F                 	db	63	;'?'
  1260  00F71F  3F                 	db	63	;'?'
  1261  00F720  3F                 	db	63	;'?'
  1262  00F721  3F                 	db	63	;'?'
  1263  00F722  3F                 	db	63	;'?'
  1264  00F723  3F                 	db	63	;'?'
  1265  00F724  3F                 	db	63	;'?'
  1266  00F725  3F                 	db	63	;'?'
  1267  00F726  3F                 	db	63	;'?'
  1268  00F727  3F                 	db	63	;'?'
  1269  00F728  3F                 	db	63	;'?'
  1270  00F729  3F                 	db	63	;'?'
  1271  00F72A  2E                 	db	46
  1272  00F72B  2E                 	db	46
  1273  00F72C  2E                 	db	46
  1274  00F72D  2E                 	db	46
  1275  00F72E  2E                 	db	46
  1276  00F72F  0D                 	db	13
  1277  00F730  0A                 	db	10
  1278  00F731  00                 	db	0
  1279  00F732                     STR_88:
  1280  00F732  2E                 	db	46
  1281  00F733  2E                 	db	46
  1282  00F734  2E                 	db	46
  1283  00F735  2E                 	db	46
  1284  00F736  3F                 	db	63	;'?'
  1285  00F737  3F                 	db	63	;'?'
  1286  00F738  3F                 	db	63	;'?'
  1287  00F739  3F                 	db	63	;'?'
  1288  00F73A  3A                 	db	58	;':'
  1289  00F73B  3A                 	db	58	;':'
  1290  00F73C  3A                 	db	58	;':'
  1291  00F73D  3A                 	db	58	;':'
  1292  00F73E  3A                 	db	58	;':'
  1293  00F73F  3A                 	db	58	;':'
  1294  00F740  3A                 	db	58	;':'
  1295  00F741  3A                 	db	58	;':'
  1296  00F742  3A                 	db	58	;':'
  1297  00F743  3A                 	db	58	;':'
  1298  00F744  3A                 	db	58	;':'
  1299  00F745  3F                 	db	63	;'?'
  1300  00F746  3F                 	db	63	;'?'
  1301  00F747  3F                 	db	63	;'?'
  1302  00F748  3F                 	db	63	;'?'
  1303  00F749  3F                 	db	63	;'?'
  1304  00F74A  3F                 	db	63	;'?'
  1305  00F74B  3F                 	db	63	;'?'
  1306  00F74C  3F                 	db	63	;'?'
  1307  00F74D  3F                 	db	63	;'?'
  1308  00F74E  3F                 	db	63	;'?'
  1309  00F74F  3F                 	db	63	;'?'
  1310  00F750  3F                 	db	63	;'?'
  1311  00F751  3F                 	db	63	;'?'
  1312  00F752  3F                 	db	63	;'?'
  1313  00F753  3F                 	db	63	;'?'
  1314  00F754  3F                 	db	63	;'?'
  1315  00F755  3F                 	db	63	;'?'
  1316  00F756  3F                 	db	63	;'?'
  1317  00F757  3F                 	db	63	;'?'
  1318  00F758  3F                 	db	63	;'?'
  1319  00F759  3F                 	db	63	;'?'
  1320  00F75A  3A                 	db	58	;':'
  1321  00F75B  3A                 	db	58	;':'
  1322  00F75C  3A                 	db	58	;':'
  1323  00F75D  3A                 	db	58	;':'
  1324  00F75E  3A                 	db	58	;':'
  1325  00F75F  3A                 	db	58	;':'
  1326  00F760  3A                 	db	58	;':'
  1327  00F761  3A                 	db	58	;':'
  1328  00F762  3A                 	db	58	;':'
  1329  00F763  3A                 	db	58	;':'
  1330  00F764  3A                 	db	58	;':'
  1331  00F765  3F                 	db	63	;'?'
  1332  00F766  3F                 	db	63	;'?'
  1333  00F767  3F                 	db	63	;'?'
  1334  00F768  3F                 	db	63	;'?'
  1335  00F769  2E                 	db	46
  1336  00F76A  2E                 	db	46
  1337  00F76B  2E                 	db	46
  1338  00F76C  2E                 	db	46
  1339  00F76D  0D                 	db	13
  1340  00F76E  0A                 	db	10
  1341  00F76F  00                 	db	0
  1342  00F770                     STR_102:
  1343  00F770  2E                 	db	46
  1344  00F771  2E                 	db	46
  1345  00F772  2E                 	db	46
  1346  00F773  2E                 	db	46
  1347  00F774  3F                 	db	63	;'?'
  1348  00F775  3F                 	db	63	;'?'
  1349  00F776  3F                 	db	63	;'?'
  1350  00F777  3F                 	db	63	;'?'
  1351  00F778  3F                 	db	63	;'?'
  1352  00F779  3F                 	db	63	;'?'
  1353  00F77A  3F                 	db	63	;'?'
  1354  00F77B  3F                 	db	63	;'?'
  1355  00F77C  3F                 	db	63	;'?'
  1356  00F77D  3F                 	db	63	;'?'
  1357  00F77E  3F                 	db	63	;'?'
  1358  00F77F  3F                 	db	63	;'?'
  1359  00F780  3F                 	db	63	;'?'
  1360  00F781  3F                 	db	63	;'?'
  1361  00F782  3A                 	db	58	;':'
  1362  00F783  3A                 	db	58	;':'
  1363  00F784  3A                 	db	58	;':'
  1364  00F785  3F                 	db	63	;'?'
  1365  00F786  3F                 	db	63	;'?'
  1366  00F787  3F                 	db	63	;'?'
  1367  00F788  3F                 	db	63	;'?'
  1368  00F789  3F                 	db	63	;'?'
  1369  00F78A  3F                 	db	63	;'?'
  1370  00F78B  3F                 	db	63	;'?'
  1371  00F78C  3F                 	db	63	;'?'
  1372  00F78D  3F                 	db	63	;'?'
  1373  00F78E  3F                 	db	63	;'?'
  1374  00F78F  3F                 	db	63	;'?'
  1375  00F790  3F                 	db	63	;'?'
  1376  00F791  3F                 	db	63	;'?'
  1377  00F792  3F                 	db	63	;'?'
  1378  00F793  3F                 	db	63	;'?'
  1379  00F794  3F                 	db	63	;'?'
  1380  00F795  3F                 	db	63	;'?'
  1381  00F796  3A                 	db	58	;':'
  1382  00F797  3A                 	db	58	;':'
  1383  00F798  3A                 	db	58	;':'
  1384  00F799  3F                 	db	63	;'?'
  1385  00F79A  3F                 	db	63	;'?'
  1386  00F79B  3F                 	db	63	;'?'
  1387  00F79C  3F                 	db	63	;'?'
  1388  00F79D  3F                 	db	63	;'?'
  1389  00F79E  3F                 	db	63	;'?'
  1390  00F79F  3F                 	db	63	;'?'
  1391  00F7A0  3F                 	db	63	;'?'
  1392  00F7A1  3F                 	db	63	;'?'
  1393  00F7A2  3F                 	db	63	;'?'
  1394  00F7A3  3F                 	db	63	;'?'
  1395  00F7A4  3F                 	db	63	;'?'
  1396  00F7A5  3F                 	db	63	;'?'
  1397  00F7A6  3F                 	db	63	;'?'
  1398  00F7A7  2E                 	db	46
  1399  00F7A8  2E                 	db	46
  1400  00F7A9  2E                 	db	46
  1401  00F7AA  2E                 	db	46
  1402  00F7AB  0D                 	db	13
  1403  00F7AC  0A                 	db	10
  1404  00F7AD  00                 	db	0
  1405  00F7AE                     STR_89:
  1406  00F7AE  2E                 	db	46
  1407  00F7AF  2E                 	db	46
  1408  00F7B0  2E                 	db	46
  1409  00F7B1  3F                 	db	63	;'?'
  1410  00F7B2  3F                 	db	63	;'?'
  1411  00F7B3  3A                 	db	58	;':'
  1412  00F7B4  3A                 	db	58	;':'
  1413  00F7B5  3A                 	db	58	;':'
  1414  00F7B6  3A                 	db	58	;':'
  1415  00F7B7  3A                 	db	58	;':'
  1416  00F7B8  3A                 	db	58	;':'
  1417  00F7B9  3A                 	db	58	;':'
  1418  00F7BA  3A                 	db	58	;':'
  1419  00F7BB  3A                 	db	58	;':'
  1420  00F7BC  3A                 	db	58	;':'
  1421  00F7BD  3A                 	db	58	;':'
  1422  00F7BE  3A                 	db	58	;':'
  1423  00F7BF  3A                 	db	58	;':'
  1424  00F7C0  3A                 	db	58	;':'
  1425  00F7C1  3A                 	db	58	;':'
  1426  00F7C2  3A                 	db	58	;':'
  1427  00F7C3  3A                 	db	58	;':'
  1428  00F7C4  3A                 	db	58	;':'
  1429  00F7C5  3A                 	db	58	;':'
  1430  00F7C6  3A                 	db	58	;':'
  1431  00F7C7  3F                 	db	63	;'?'
  1432  00F7C8  3F                 	db	63	;'?'
  1433  00F7C9  3F                 	db	63	;'?'
  1434  00F7CA  3F                 	db	63	;'?'
  1435  00F7CB  3F                 	db	63	;'?'
  1436  00F7CC  3F                 	db	63	;'?'
  1437  00F7CD  3F                 	db	63	;'?'
  1438  00F7CE  3F                 	db	63	;'?'
  1439  00F7CF  3F                 	db	63	;'?'
  1440  00F7D0  3A                 	db	58	;':'
  1441  00F7D1  3A                 	db	58	;':'
  1442  00F7D2  3A                 	db	58	;':'
  1443  00F7D3  3A                 	db	58	;':'
  1444  00F7D4  3A                 	db	58	;':'
  1445  00F7D5  3A                 	db	58	;':'
  1446  00F7D6  3A                 	db	58	;':'
  1447  00F7D7  3A                 	db	58	;':'
  1448  00F7D8  3A                 	db	58	;':'
  1449  00F7D9  3A                 	db	58	;':'
  1450  00F7DA  3A                 	db	58	;':'
  1451  00F7DB  3A                 	db	58	;':'
  1452  00F7DC  3A                 	db	58	;':'
  1453  00F7DD  3A                 	db	58	;':'
  1454  00F7DE  3A                 	db	58	;':'
  1455  00F7DF  3A                 	db	58	;':'
  1456  00F7E0  3A                 	db	58	;':'
  1457  00F7E1  3A                 	db	58	;':'
  1458  00F7E2  3A                 	db	58	;':'
  1459  00F7E3  3A                 	db	58	;':'
  1460  00F7E4  3F                 	db	63	;'?'
  1461  00F7E5  3F                 	db	63	;'?'
  1462  00F7E6  2E                 	db	46
  1463  00F7E7  2E                 	db	46
  1464  00F7E8  2E                 	db	46
  1465  00F7E9  0D                 	db	13
  1466  00F7EA  0A                 	db	10
  1467  00F7EB  00                 	db	0
  1468  00F7EC                     STR_100:
  1469  00F7EC  2E                 	db	46
  1470  00F7ED  2E                 	db	46
  1471  00F7EE  2E                 	db	46
  1472  00F7EF  3F                 	db	63	;'?'
  1473  00F7F0  3F                 	db	63	;'?'
  1474  00F7F1  3F                 	db	63	;'?'
  1475  00F7F2  3F                 	db	63	;'?'
  1476  00F7F3  3F                 	db	63	;'?'
  1477  00F7F4  3F                 	db	63	;'?'
  1478  00F7F5  3F                 	db	63	;'?'
  1479  00F7F6  3F                 	db	63	;'?'
  1480  00F7F7  3F                 	db	63	;'?'
  1481  00F7F8  3F                 	db	63	;'?'
  1482  00F7F9  3F                 	db	63	;'?'
  1483  00F7FA  3F                 	db	63	;'?'
  1484  00F7FB  3F                 	db	63	;'?'
  1485  00F7FC  3A                 	db	58	;':'
  1486  00F7FD  3A                 	db	58	;':'
  1487  00F7FE  3A                 	db	58	;':'
  1488  00F7FF  3F                 	db	63	;'?'
  1489  00F800  3F                 	db	63	;'?'
  1490  00F801  3F                 	db	63	;'?'
  1491  00F802  3F                 	db	63	;'?'
  1492  00F803  3F                 	db	63	;'?'
  1493  00F804  3F                 	db	63	;'?'
  1494  00F805  3F                 	db	63	;'?'
  1495  00F806  3F                 	db	63	;'?'
  1496  00F807  3F                 	db	63	;'?'
  1497  00F808  3F                 	db	63	;'?'
  1498  00F809  3F                 	db	63	;'?'
  1499  00F80A  3F                 	db	63	;'?'
  1500  00F80B  3F                 	db	63	;'?'
  1501  00F80C  3F                 	db	63	;'?'
  1502  00F80D  3F                 	db	63	;'?'
  1503  00F80E  3F                 	db	63	;'?'
  1504  00F80F  3F                 	db	63	;'?'
  1505  00F810  3F                 	db	63	;'?'
  1506  00F811  3F                 	db	63	;'?'
  1507  00F812  3F                 	db	63	;'?'
  1508  00F813  3F                 	db	63	;'?'
  1509  00F814  3A                 	db	58	;':'
  1510  00F815  3A                 	db	58	;':'
  1511  00F816  3A                 	db	58	;':'
  1512  00F817  3F                 	db	63	;'?'
  1513  00F818  3F                 	db	63	;'?'
  1514  00F819  3F                 	db	63	;'?'
  1515  00F81A  3F                 	db	63	;'?'
  1516  00F81B  3F                 	db	63	;'?'
  1517  00F81C  3F                 	db	63	;'?'
  1518  00F81D  3F                 	db	63	;'?'
  1519  00F81E  3F                 	db	63	;'?'
  1520  00F81F  3F                 	db	63	;'?'
  1521  00F820  3F                 	db	63	;'?'
  1522  00F821  3F                 	db	63	;'?'
  1523  00F822  3F                 	db	63	;'?'
  1524  00F823  3F                 	db	63	;'?'
  1525  00F824  2E                 	db	46
  1526  00F825  2E                 	db	46
  1527  00F826  2E                 	db	46
  1528  00F827  0D                 	db	13
  1529  00F828  0A                 	db	10
  1530  00F829  00                 	db	0
  1531  00F82A                     STR_101:
  1532  00F82A  2E                 	db	46
  1533  00F82B  2E                 	db	46
  1534  00F82C  2E                 	db	46
  1535  00F82D  2E                 	db	46
  1536  00F82E  3F                 	db	63	;'?'
  1537  00F82F  3F                 	db	63	;'?'
  1538  00F830  3F                 	db	63	;'?'
  1539  00F831  3F                 	db	63	;'?'
  1540  00F832  3F                 	db	63	;'?'
  1541  00F833  3F                 	db	63	;'?'
  1542  00F834  3F                 	db	63	;'?'
  1543  00F835  3F                 	db	63	;'?'
  1544  00F836  3F                 	db	63	;'?'
  1545  00F837  3F                 	db	63	;'?'
  1546  00F838  3F                 	db	63	;'?'
  1547  00F839  3F                 	db	63	;'?'
  1548  00F83A  3F                 	db	63	;'?'
  1549  00F83B  3A                 	db	58	;':'
  1550  00F83C  3A                 	db	58	;':'
  1551  00F83D  3A                 	db	58	;':'
  1552  00F83E  3F                 	db	63	;'?'
  1553  00F83F  3F                 	db	63	;'?'
  1554  00F840  3F                 	db	63	;'?'
  1555  00F841  3F                 	db	63	;'?'
  1556  00F842  3F                 	db	63	;'?'
  1557  00F843  3F                 	db	63	;'?'
  1558  00F844  3F                 	db	63	;'?'
  1559  00F845  3F                 	db	63	;'?'
  1560  00F846  3F                 	db	63	;'?'
  1561  00F847  3F                 	db	63	;'?'
  1562  00F848  3F                 	db	63	;'?'
  1563  00F849  3F                 	db	63	;'?'
  1564  00F84A  3F                 	db	63	;'?'
  1565  00F84B  3F                 	db	63	;'?'
  1566  00F84C  3F                 	db	63	;'?'
  1567  00F84D  3F                 	db	63	;'?'
  1568  00F84E  3F                 	db	63	;'?'
  1569  00F84F  3F                 	db	63	;'?'
  1570  00F850  3F                 	db	63	;'?'
  1571  00F851  3A                 	db	58	;':'
  1572  00F852  3A                 	db	58	;':'
  1573  00F853  3A                 	db	58	;':'
  1574  00F854  3F                 	db	63	;'?'
  1575  00F855  3F                 	db	63	;'?'
  1576  00F856  3F                 	db	63	;'?'
  1577  00F857  3F                 	db	63	;'?'
  1578  00F858  3F                 	db	63	;'?'
  1579  00F859  3F                 	db	63	;'?'
  1580  00F85A  3F                 	db	63	;'?'
  1581  00F85B  3F                 	db	63	;'?'
  1582  00F85C  3F                 	db	63	;'?'
  1583  00F85D  3F                 	db	63	;'?'
  1584  00F85E  3F                 	db	63	;'?'
  1585  00F85F  3F                 	db	63	;'?'
  1586  00F860  3F                 	db	63	;'?'
  1587  00F861  3F                 	db	63	;'?'
  1588  00F862  2E                 	db	46
  1589  00F863  2E                 	db	46
  1590  00F864  2E                 	db	46
  1591  00F865  0D                 	db	13
  1592  00F866  0A                 	db	10
  1593  00F867  00                 	db	0
  1594  00F868                     STR_90:
  1595  00F868  2E                 	db	46
  1596  00F869  2E                 	db	46
  1597  00F86A  3F                 	db	63	;'?'
  1598  00F86B  3F                 	db	63	;'?'
  1599  00F86C  3F                 	db	63	;'?'
  1600  00F86D  3A                 	db	58	;':'
  1601  00F86E  3A                 	db	58	;':'
  1602  00F86F  3A                 	db	58	;':'
  1603  00F870  3A                 	db	58	;':'
  1604  00F871  3A                 	db	58	;':'
  1605  00F872  3A                 	db	58	;':'
  1606  00F873  3A                 	db	58	;':'
  1607  00F874  3A                 	db	58	;':'
  1608  00F875  3A                 	db	58	;':'
  1609  00F876  3A                 	db	58	;':'
  1610  00F877  3A                 	db	58	;':'
  1611  00F878  3A                 	db	58	;':'
  1612  00F879  3A                 	db	58	;':'
  1613  00F87A  3A                 	db	58	;':'
  1614  00F87B  3A                 	db	58	;':'
  1615  00F87C  3A                 	db	58	;':'
  1616  00F87D  3A                 	db	58	;':'
  1617  00F87E  3A                 	db	58	;':'
  1618  00F87F  3A                 	db	58	;':'
  1619  00F880  3A                 	db	58	;':'
  1620  00F881  3A                 	db	58	;':'
  1621  00F882  3A                 	db	58	;':'
  1622  00F883  3A                 	db	58	;':'
  1623  00F884  3A                 	db	58	;':'
  1624  00F885  3A                 	db	58	;':'
  1625  00F886  3A                 	db	58	;':'
  1626  00F887  3A                 	db	58	;':'
  1627  00F888  3A                 	db	58	;':'
  1628  00F889  3A                 	db	58	;':'
  1629  00F88A  3A                 	db	58	;':'
  1630  00F88B  3A                 	db	58	;':'
  1631  00F88C  3A                 	db	58	;':'
  1632  00F88D  3A                 	db	58	;':'
  1633  00F88E  3A                 	db	58	;':'
  1634  00F88F  3A                 	db	58	;':'
  1635  00F890  3A                 	db	58	;':'
  1636  00F891  3A                 	db	58	;':'
  1637  00F892  3A                 	db	58	;':'
  1638  00F893  3A                 	db	58	;':'
  1639  00F894  3A                 	db	58	;':'
  1640  00F895  3A                 	db	58	;':'
  1641  00F896  3A                 	db	58	;':'
  1642  00F897  3A                 	db	58	;':'
  1643  00F898  3A                 	db	58	;':'
  1644  00F899  3A                 	db	58	;':'
  1645  00F89A  3A                 	db	58	;':'
  1646  00F89B  3A                 	db	58	;':'
  1647  00F89C  3A                 	db	58	;':'
  1648  00F89D  3A                 	db	58	;':'
  1649  00F89E  3F                 	db	63	;'?'
  1650  00F89F  3F                 	db	63	;'?'
  1651  00F8A0  3F                 	db	63	;'?'
  1652  00F8A1  2E                 	db	46
  1653  00F8A2  2E                 	db	46
  1654  00F8A3  0D                 	db	13
  1655  00F8A4  0A                 	db	10
  1656  00F8A5  00                 	db	0
  1657  00F8A6                     STR_91:
  1658  00F8A6  2E                 	db	46
  1659  00F8A7  2E                 	db	46
  1660  00F8A8  3F                 	db	63	;'?'
  1661  00F8A9  3F                 	db	63	;'?'
  1662  00F8AA  3F                 	db	63	;'?'
  1663  00F8AB  3F                 	db	63	;'?'
  1664  00F8AC  3A                 	db	58	;':'
  1665  00F8AD  3A                 	db	58	;':'
  1666  00F8AE  3A                 	db	58	;':'
  1667  00F8AF  3A                 	db	58	;':'
  1668  00F8B0  3A                 	db	58	;':'
  1669  00F8B1  3A                 	db	58	;':'
  1670  00F8B2  3A                 	db	58	;':'
  1671  00F8B3  3A                 	db	58	;':'
  1672  00F8B4  3A                 	db	58	;':'
  1673  00F8B5  3A                 	db	58	;':'
  1674  00F8B6  3A                 	db	58	;':'
  1675  00F8B7  3A                 	db	58	;':'
  1676  00F8B8  3A                 	db	58	;':'
  1677  00F8B9  3A                 	db	58	;':'
  1678  00F8BA  3A                 	db	58	;':'
  1679  00F8BB  3A                 	db	58	;':'
  1680  00F8BC  3A                 	db	58	;':'
  1681  00F8BD  3A                 	db	58	;':'
  1682  00F8BE  3A                 	db	58	;':'
  1683  00F8BF  3A                 	db	58	;':'
  1684  00F8C0  3A                 	db	58	;':'
  1685  00F8C1  3A                 	db	58	;':'
  1686  00F8C2  3F                 	db	63	;'?'
  1687  00F8C3  3F                 	db	63	;'?'
  1688  00F8C4  3F                 	db	63	;'?'
  1689  00F8C5  3A                 	db	58	;':'
  1690  00F8C6  3A                 	db	58	;':'
  1691  00F8C7  3A                 	db	58	;':'
  1692  00F8C8  3A                 	db	58	;':'
  1693  00F8C9  3A                 	db	58	;':'
  1694  00F8CA  3A                 	db	58	;':'
  1695  00F8CB  3A                 	db	58	;':'
  1696  00F8CC  3A                 	db	58	;':'
  1697  00F8CD  3A                 	db	58	;':'
  1698  00F8CE  3A                 	db	58	;':'
  1699  00F8CF  3A                 	db	58	;':'
  1700  00F8D0  3A                 	db	58	;':'
  1701  00F8D1  3A                 	db	58	;':'
  1702  00F8D2  3A                 	db	58	;':'
  1703  00F8D3  3A                 	db	58	;':'
  1704  00F8D4  3A                 	db	58	;':'
  1705  00F8D5  3A                 	db	58	;':'
  1706  00F8D6  3A                 	db	58	;':'
  1707  00F8D7  3A                 	db	58	;':'
  1708  00F8D8  3A                 	db	58	;':'
  1709  00F8D9  3A                 	db	58	;':'
  1710  00F8DA  3A                 	db	58	;':'
  1711  00F8DB  3F                 	db	63	;'?'
  1712  00F8DC  3F                 	db	63	;'?'
  1713  00F8DD  3F                 	db	63	;'?'
  1714  00F8DE  3F                 	db	63	;'?'
  1715  00F8DF  2E                 	db	46
  1716  00F8E0  2E                 	db	46
  1717  00F8E1  0D                 	db	13
  1718  00F8E2  0A                 	db	10
  1719  00F8E3  00                 	db	0
  1720  00F8E4                     STR_99:
  1721  00F8E4  2E                 	db	46
  1722  00F8E5  2E                 	db	46
  1723  00F8E6  2E                 	db	46
  1724  00F8E7  3F                 	db	63	;'?'
  1725  00F8E8  3F                 	db	63	;'?'
  1726  00F8E9  3F                 	db	63	;'?'
  1727  00F8EA  3F                 	db	63	;'?'
  1728  00F8EB  3F                 	db	63	;'?'
  1729  00F8EC  3F                 	db	63	;'?'
  1730  00F8ED  3F                 	db	63	;'?'
  1731  00F8EE  3F                 	db	63	;'?'
  1732  00F8EF  3F                 	db	63	;'?'
  1733  00F8F0  3F                 	db	63	;'?'
  1734  00F8F1  3F                 	db	63	;'?'
  1735  00F8F2  3F                 	db	63	;'?'
  1736  00F8F3  3F                 	db	63	;'?'
  1737  00F8F4  3F                 	db	63	;'?'
  1738  00F8F5  3F                 	db	63	;'?'
  1739  00F8F6  3F                 	db	63	;'?'
  1740  00F8F7  3F                 	db	63	;'?'
  1741  00F8F8  3F                 	db	63	;'?'
  1742  00F8F9  3F                 	db	63	;'?'
  1743  00F8FA  3F                 	db	63	;'?'
  1744  00F8FB  3F                 	db	63	;'?'
  1745  00F8FC  3F                 	db	63	;'?'
  1746  00F8FD  3F                 	db	63	;'?'
  1747  00F8FE  3F                 	db	63	;'?'
  1748  00F8FF  3F                 	db	63	;'?'
  1749  00F900  3F                 	db	63	;'?'
  1750  00F901  3F                 	db	63	;'?'
  1751  00F902  3F                 	db	63	;'?'
  1752  00F903  3F                 	db	63	;'?'
  1753  00F904  3F                 	db	63	;'?'
  1754  00F905  3F                 	db	63	;'?'
  1755  00F906  3F                 	db	63	;'?'
  1756  00F907  3F                 	db	63	;'?'
  1757  00F908  3F                 	db	63	;'?'
  1758  00F909  3F                 	db	63	;'?'
  1759  00F90A  3F                 	db	63	;'?'
  1760  00F90B  3F                 	db	63	;'?'
  1761  00F90C  3F                 	db	63	;'?'
  1762  00F90D  3F                 	db	63	;'?'
  1763  00F90E  3F                 	db	63	;'?'
  1764  00F90F  3F                 	db	63	;'?'
  1765  00F910  3F                 	db	63	;'?'
  1766  00F911  3F                 	db	63	;'?'
  1767  00F912  3F                 	db	63	;'?'
  1768  00F913  3F                 	db	63	;'?'
  1769  00F914  3F                 	db	63	;'?'
  1770  00F915  3F                 	db	63	;'?'
  1771  00F916  3F                 	db	63	;'?'
  1772  00F917  3F                 	db	63	;'?'
  1773  00F918  3F                 	db	63	;'?'
  1774  00F919  3F                 	db	63	;'?'
  1775  00F91A  3F                 	db	63	;'?'
  1776  00F91B  3F                 	db	63	;'?'
  1777  00F91C  3F                 	db	63	;'?'
  1778  00F91D  2E                 	db	46
  1779  00F91E  2E                 	db	46
  1780  00F91F  0D                 	db	13
  1781  00F920  0A                 	db	10
  1782  00F921  00                 	db	0
  1783  00F922                     STR_97:
  1784  00F922  2E                 	db	46
  1785  00F923  2E                 	db	46
  1786  00F924  3F                 	db	63	;'?'
  1787  00F925  3F                 	db	63	;'?'
  1788  00F926  3F                 	db	63	;'?'
  1789  00F927  3F                 	db	63	;'?'
  1790  00F928  3F                 	db	63	;'?'
  1791  00F929  3F                 	db	63	;'?'
  1792  00F92A  3F                 	db	63	;'?'
  1793  00F92B  3F                 	db	63	;'?'
  1794  00F92C  3F                 	db	63	;'?'
  1795  00F92D  3F                 	db	63	;'?'
  1796  00F92E  3F                 	db	63	;'?'
  1797  00F92F  3F                 	db	63	;'?'
  1798  00F930  3F                 	db	63	;'?'
  1799  00F931  3F                 	db	63	;'?'
  1800  00F932  3F                 	db	63	;'?'
  1801  00F933  3F                 	db	63	;'?'
  1802  00F934  3F                 	db	63	;'?'
  1803  00F935  3F                 	db	63	;'?'
  1804  00F936  3F                 	db	63	;'?'
  1805  00F937  3F                 	db	63	;'?'
  1806  00F938  3F                 	db	63	;'?'
  1807  00F939  3F                 	db	63	;'?'
  1808  00F93A  3F                 	db	63	;'?'
  1809  00F93B  3F                 	db	63	;'?'
  1810  00F93C  3F                 	db	63	;'?'
  1811  00F93D  3F                 	db	63	;'?'
  1812  00F93E  3F                 	db	63	;'?'
  1813  00F93F  3F                 	db	63	;'?'
  1814  00F940  3F                 	db	63	;'?'
  1815  00F941  3F                 	db	63	;'?'
  1816  00F942  3F                 	db	63	;'?'
  1817  00F943  3F                 	db	63	;'?'
  1818  00F944  3F                 	db	63	;'?'
  1819  00F945  3F                 	db	63	;'?'
  1820  00F946  3F                 	db	63	;'?'
  1821  00F947  3F                 	db	63	;'?'
  1822  00F948  3F                 	db	63	;'?'
  1823  00F949  3F                 	db	63	;'?'
  1824  00F94A  3F                 	db	63	;'?'
  1825  00F94B  3F                 	db	63	;'?'
  1826  00F94C  3F                 	db	63	;'?'
  1827  00F94D  3F                 	db	63	;'?'
  1828  00F94E  3F                 	db	63	;'?'
  1829  00F94F  3F                 	db	63	;'?'
  1830  00F950  3F                 	db	63	;'?'
  1831  00F951  3F                 	db	63	;'?'
  1832  00F952  3F                 	db	63	;'?'
  1833  00F953  3F                 	db	63	;'?'
  1834  00F954  3F                 	db	63	;'?'
  1835  00F955  3F                 	db	63	;'?'
  1836  00F956  3F                 	db	63	;'?'
  1837  00F957  3F                 	db	63	;'?'
  1838  00F958  3F                 	db	63	;'?'
  1839  00F959  3F                 	db	63	;'?'
  1840  00F95A  3F                 	db	63	;'?'
  1841  00F95B  2E                 	db	46
  1842  00F95C  2E                 	db	46
  1843  00F95D  0D                 	db	13
  1844  00F95E  0A                 	db	10
  1845  00F95F  00                 	db	0
  1846  00F960                     STR_92:
  1847  00F960  2E                 	db	46
  1848  00F961  3F                 	db	63	;'?'
  1849  00F962  3F                 	db	63	;'?'
  1850  00F963  3F                 	db	63	;'?'
  1851  00F964  3F                 	db	63	;'?'
  1852  00F965  3F                 	db	63	;'?'
  1853  00F966  3F                 	db	63	;'?'
  1854  00F967  3A                 	db	58	;':'
  1855  00F968  3A                 	db	58	;':'
  1856  00F969  3A                 	db	58	;':'
  1857  00F96A  3A                 	db	58	;':'
  1858  00F96B  3A                 	db	58	;':'
  1859  00F96C  3A                 	db	58	;':'
  1860  00F96D  3A                 	db	58	;':'
  1861  00F96E  3A                 	db	58	;':'
  1862  00F96F  3A                 	db	58	;':'
  1863  00F970  3A                 	db	58	;':'
  1864  00F971  3A                 	db	58	;':'
  1865  00F972  3A                 	db	58	;':'
  1866  00F973  3A                 	db	58	;':'
  1867  00F974  3A                 	db	58	;':'
  1868  00F975  3A                 	db	58	;':'
  1869  00F976  3A                 	db	58	;':'
  1870  00F977  3A                 	db	58	;':'
  1871  00F978  3A                 	db	58	;':'
  1872  00F979  3A                 	db	58	;':'
  1873  00F97A  3A                 	db	58	;':'
  1874  00F97B  3F                 	db	63	;'?'
  1875  00F97C  3F                 	db	63	;'?'
  1876  00F97D  3F                 	db	63	;'?'
  1877  00F97E  3F                 	db	63	;'?'
  1878  00F97F  3F                 	db	63	;'?'
  1879  00F980  3A                 	db	58	;':'
  1880  00F981  3A                 	db	58	;':'
  1881  00F982  3A                 	db	58	;':'
  1882  00F983  3A                 	db	58	;':'
  1883  00F984  3A                 	db	58	;':'
  1884  00F985  3A                 	db	58	;':'
  1885  00F986  3A                 	db	58	;':'
  1886  00F987  3A                 	db	58	;':'
  1887  00F988  3A                 	db	58	;':'
  1888  00F989  3A                 	db	58	;':'
  1889  00F98A  3A                 	db	58	;':'
  1890  00F98B  3A                 	db	58	;':'
  1891  00F98C  3A                 	db	58	;':'
  1892  00F98D  3A                 	db	58	;':'
  1893  00F98E  3A                 	db	58	;':'
  1894  00F98F  3A                 	db	58	;':'
  1895  00F990  3A                 	db	58	;':'
  1896  00F991  3A                 	db	58	;':'
  1897  00F992  3A                 	db	58	;':'
  1898  00F993  3A                 	db	58	;':'
  1899  00F994  3A                 	db	58	;':'
  1900  00F995  3F                 	db	63	;'?'
  1901  00F996  3F                 	db	63	;'?'
  1902  00F997  3F                 	db	63	;'?'
  1903  00F998  3F                 	db	63	;'?'
  1904  00F999  3F                 	db	63	;'?'
  1905  00F99A  2E                 	db	46
  1906  00F99B  0D                 	db	13
  1907  00F99C  0A                 	db	10
  1908  00F99D  00                 	db	0
  1909  00F99E                     STR_93:
  1910  00F99E  2E                 	db	46
  1911  00F99F  3F                 	db	63	;'?'
  1912  00F9A0  3F                 	db	63	;'?'
  1913  00F9A1  3F                 	db	63	;'?'
  1914  00F9A2  3F                 	db	63	;'?'
  1915  00F9A3  3F                 	db	63	;'?'
  1916  00F9A4  3F                 	db	63	;'?'
  1917  00F9A5  3F                 	db	63	;'?'
  1918  00F9A6  3A                 	db	58	;':'
  1919  00F9A7  3A                 	db	58	;':'
  1920  00F9A8  3A                 	db	58	;':'
  1921  00F9A9  3A                 	db	58	;':'
  1922  00F9AA  3A                 	db	58	;':'
  1923  00F9AB  3A                 	db	58	;':'
  1924  00F9AC  3A                 	db	58	;':'
  1925  00F9AD  3A                 	db	58	;':'
  1926  00F9AE  3A                 	db	58	;':'
  1927  00F9AF  3A                 	db	58	;':'
  1928  00F9B0  3A                 	db	58	;':'
  1929  00F9B1  3A                 	db	58	;':'
  1930  00F9B2  3A                 	db	58	;':'
  1931  00F9B3  3A                 	db	58	;':'
  1932  00F9B4  3A                 	db	58	;':'
  1933  00F9B5  3A                 	db	58	;':'
  1934  00F9B6  3A                 	db	58	;':'
  1935  00F9B7  3A                 	db	58	;':'
  1936  00F9B8  3F                 	db	63	;'?'
  1937  00F9B9  3F                 	db	63	;'?'
  1938  00F9BA  3F                 	db	63	;'?'
  1939  00F9BB  3F                 	db	63	;'?'
  1940  00F9BC  3F                 	db	63	;'?'
  1941  00F9BD  3F                 	db	63	;'?'
  1942  00F9BE  3F                 	db	63	;'?'
  1943  00F9BF  3A                 	db	58	;':'
  1944  00F9C0  3A                 	db	58	;':'
  1945  00F9C1  3A                 	db	58	;':'
  1946  00F9C2  3A                 	db	58	;':'
  1947  00F9C3  3A                 	db	58	;':'
  1948  00F9C4  3A                 	db	58	;':'
  1949  00F9C5  3A                 	db	58	;':'
  1950  00F9C6  3A                 	db	58	;':'
  1951  00F9C7  3A                 	db	58	;':'
  1952  00F9C8  3A                 	db	58	;':'
  1953  00F9C9  3A                 	db	58	;':'
  1954  00F9CA  3A                 	db	58	;':'
  1955  00F9CB  3A                 	db	58	;':'
  1956  00F9CC  3A                 	db	58	;':'
  1957  00F9CD  3A                 	db	58	;':'
  1958  00F9CE  3A                 	db	58	;':'
  1959  00F9CF  3A                 	db	58	;':'
  1960  00F9D0  3A                 	db	58	;':'
  1961  00F9D1  3A                 	db	58	;':'
  1962  00F9D2  3F                 	db	63	;'?'
  1963  00F9D3  3F                 	db	63	;'?'
  1964  00F9D4  3F                 	db	63	;'?'
  1965  00F9D5  3F                 	db	63	;'?'
  1966  00F9D6  3F                 	db	63	;'?'
  1967  00F9D7  3F                 	db	63	;'?'
  1968  00F9D8  2E                 	db	46
  1969  00F9D9  0D                 	db	13
  1970  00F9DA  0A                 	db	10
  1971  00F9DB  00                 	db	0
  1972  00F9DC                     STR_94:
  1973  00F9DC  2E                 	db	46
  1974  00F9DD  3F                 	db	63	;'?'
  1975  00F9DE  3F                 	db	63	;'?'
  1976  00F9DF  3F                 	db	63	;'?'
  1977  00F9E0  3F                 	db	63	;'?'
  1978  00F9E1  3F                 	db	63	;'?'
  1979  00F9E2  3F                 	db	63	;'?'
  1980  00F9E3  3F                 	db	63	;'?'
  1981  00F9E4  3A                 	db	58	;':'
  1982  00F9E5  3A                 	db	58	;':'
  1983  00F9E6  3A                 	db	58	;':'
  1984  00F9E7  3A                 	db	58	;':'
  1985  00F9E8  3A                 	db	58	;':'
  1986  00F9E9  3A                 	db	58	;':'
  1987  00F9EA  3A                 	db	58	;':'
  1988  00F9EB  3A                 	db	58	;':'
  1989  00F9EC  3A                 	db	58	;':'
  1990  00F9ED  3A                 	db	58	;':'
  1991  00F9EE  3A                 	db	58	;':'
  1992  00F9EF  3A                 	db	58	;':'
  1993  00F9F0  3A                 	db	58	;':'
  1994  00F9F1  3A                 	db	58	;':'
  1995  00F9F2  3A                 	db	58	;':'
  1996  00F9F3  3A                 	db	58	;':'
  1997  00F9F4  3A                 	db	58	;':'
  1998  00F9F5  3F                 	db	63	;'?'
  1999  00F9F6  3F                 	db	63	;'?'
  2000  00F9F7  3F                 	db	63	;'?'
  2001  00F9F8  3F                 	db	63	;'?'
  2002  00F9F9  3F                 	db	63	;'?'
  2003  00F9FA  3F                 	db	63	;'?'
  2004  00F9FB  3F                 	db	63	;'?'
  2005  00F9FC  3F                 	db	63	;'?'
  2006  00F9FD  3F                 	db	63	;'?'
  2007  00F9FE  3A                 	db	58	;':'
  2008  00F9FF  3A                 	db	58	;':'
  2009  00FA00  3A                 	db	58	;':'
  2010  00FA01  3A                 	db	58	;':'
  2011  00FA02  3A                 	db	58	;':'
  2012  00FA03  3A                 	db	58	;':'
  2013  00FA04  3A                 	db	58	;':'
  2014  00FA05  3A                 	db	58	;':'
  2015  00FA06  3A                 	db	58	;':'
  2016  00FA07  3A                 	db	58	;':'
  2017  00FA08  3A                 	db	58	;':'
  2018  00FA09  3A                 	db	58	;':'
  2019  00FA0A  3A                 	db	58	;':'
  2020  00FA0B  3A                 	db	58	;':'
  2021  00FA0C  3A                 	db	58	;':'
  2022  00FA0D  3A                 	db	58	;':'
  2023  00FA0E  3A                 	db	58	;':'
  2024  00FA0F  3A                 	db	58	;':'
  2025  00FA10  3F                 	db	63	;'?'
  2026  00FA11  3F                 	db	63	;'?'
  2027  00FA12  3F                 	db	63	;'?'
  2028  00FA13  3F                 	db	63	;'?'
  2029  00FA14  3F                 	db	63	;'?'
  2030  00FA15  3F                 	db	63	;'?'
  2031  00FA16  2E                 	db	46
  2032  00FA17  0D                 	db	13
  2033  00FA18  0A                 	db	10
  2034  00FA19  00                 	db	0
  2035  00FA1A                     STR_95:
  2036  00FA1A  2E                 	db	46
  2037  00FA1B  3F                 	db	63	;'?'
  2038  00FA1C  3F                 	db	63	;'?'
  2039  00FA1D  3F                 	db	63	;'?'
  2040  00FA1E  3F                 	db	63	;'?'
  2041  00FA1F  3F                 	db	63	;'?'
  2042  00FA20  3F                 	db	63	;'?'
  2043  00FA21  3F                 	db	63	;'?'
  2044  00FA22  3F                 	db	63	;'?'
  2045  00FA23  3A                 	db	58	;':'
  2046  00FA24  3A                 	db	58	;':'
  2047  00FA25  3A                 	db	58	;':'
  2048  00FA26  3A                 	db	58	;':'
  2049  00FA27  3A                 	db	58	;':'
  2050  00FA28  3A                 	db	58	;':'
  2051  00FA29  3A                 	db	58	;':'
  2052  00FA2A  3A                 	db	58	;':'
  2053  00FA2B  3A                 	db	58	;':'
  2054  00FA2C  3A                 	db	58	;':'
  2055  00FA2D  3A                 	db	58	;':'
  2056  00FA2E  3A                 	db	58	;':'
  2057  00FA2F  3A                 	db	58	;':'
  2058  00FA30  3A                 	db	58	;':'
  2059  00FA31  3A                 	db	58	;':'
  2060  00FA32  3F                 	db	63	;'?'
  2061  00FA33  3F                 	db	63	;'?'
  2062  00FA34  3F                 	db	63	;'?'
  2063  00FA35  3F                 	db	63	;'?'
  2064  00FA36  3F                 	db	63	;'?'
  2065  00FA37  3F                 	db	63	;'?'
  2066  00FA38  3F                 	db	63	;'?'
  2067  00FA39  3F                 	db	63	;'?'
  2068  00FA3A  3F                 	db	63	;'?'
  2069  00FA3B  3F                 	db	63	;'?'
  2070  00FA3C  3F                 	db	63	;'?'
  2071  00FA3D  3A                 	db	58	;':'
  2072  00FA3E  3A                 	db	58	;':'
  2073  00FA3F  3A                 	db	58	;':'
  2074  00FA40  3A                 	db	58	;':'
  2075  00FA41  3A                 	db	58	;':'
  2076  00FA42  3A                 	db	58	;':'
  2077  00FA43  3A                 	db	58	;':'
  2078  00FA44  3A                 	db	58	;':'
  2079  00FA45  3A                 	db	58	;':'
  2080  00FA46  3A                 	db	58	;':'
  2081  00FA47  3A                 	db	58	;':'
  2082  00FA48  3A                 	db	58	;':'
  2083  00FA49  3A                 	db	58	;':'
  2084  00FA4A  3A                 	db	58	;':'
  2085  00FA4B  3A                 	db	58	;':'
  2086  00FA4C  3F                 	db	63	;'?'
  2087  00FA4D  3F                 	db	63	;'?'
  2088  00FA4E  3F                 	db	63	;'?'
  2089  00FA4F  3F                 	db	63	;'?'
  2090  00FA50  3F                 	db	63	;'?'
  2091  00FA51  3F                 	db	63	;'?'
  2092  00FA52  3F                 	db	63	;'?'
  2093  00FA53  3F                 	db	63	;'?'
  2094  00FA54  2E                 	db	46
  2095  00FA55  0D                 	db	13
  2096  00FA56  0A                 	db	10
  2097  00FA57  00                 	db	0
  2098  00FA58                     STR_96:
  2099  00FA58  2E                 	db	46
  2100  00FA59  3F                 	db	63	;'?'
  2101  00FA5A  3F                 	db	63	;'?'
  2102  00FA5B  3F                 	db	63	;'?'
  2103  00FA5C  3F                 	db	63	;'?'
  2104  00FA5D  3F                 	db	63	;'?'
  2105  00FA5E  3F                 	db	63	;'?'
  2106  00FA5F  3F                 	db	63	;'?'
  2107  00FA60  3F                 	db	63	;'?'
  2108  00FA61  3F                 	db	63	;'?'
  2109  00FA62  3F                 	db	63	;'?'
  2110  00FA63  3A                 	db	58	;':'
  2111  00FA64  3A                 	db	58	;':'
  2112  00FA65  3A                 	db	58	;':'
  2113  00FA66  3A                 	db	58	;':'
  2114  00FA67  3A                 	db	58	;':'
  2115  00FA68  3A                 	db	58	;':'
  2116  00FA69  3A                 	db	58	;':'
  2117  00FA6A  3A                 	db	58	;':'
  2118  00FA6B  3A                 	db	58	;':'
  2119  00FA6C  3A                 	db	58	;':'
  2120  00FA6D  3F                 	db	63	;'?'
  2121  00FA6E  3F                 	db	63	;'?'
  2122  00FA6F  3F                 	db	63	;'?'
  2123  00FA70  3F                 	db	63	;'?'
  2124  00FA71  3F                 	db	63	;'?'
  2125  00FA72  3F                 	db	63	;'?'
  2126  00FA73  3F                 	db	63	;'?'
  2127  00FA74  3F                 	db	63	;'?'
  2128  00FA75  3F                 	db	63	;'?'
  2129  00FA76  3F                 	db	63	;'?'
  2130  00FA77  3F                 	db	63	;'?'
  2131  00FA78  3F                 	db	63	;'?'
  2132  00FA79  3F                 	db	63	;'?'
  2133  00FA7A  3F                 	db	63	;'?'
  2134  00FA7B  3F                 	db	63	;'?'
  2135  00FA7C  3F                 	db	63	;'?'
  2136  00FA7D  3F                 	db	63	;'?'
  2137  00FA7E  3A                 	db	58	;':'
  2138  00FA7F  3A                 	db	58	;':'
  2139  00FA80  3A                 	db	58	;':'
  2140  00FA81  3A                 	db	58	;':'
  2141  00FA82  3A                 	db	58	;':'
  2142  00FA83  3A                 	db	58	;':'
  2143  00FA84  3A                 	db	58	;':'
  2144  00FA85  3A                 	db	58	;':'
  2145  00FA86  3A                 	db	58	;':'
  2146  00FA87  3A                 	db	58	;':'
  2147  00FA88  3F                 	db	63	;'?'
  2148  00FA89  3F                 	db	63	;'?'
  2149  00FA8A  3F                 	db	63	;'?'
  2150  00FA8B  3F                 	db	63	;'?'
  2151  00FA8C  3F                 	db	63	;'?'
  2152  00FA8D  3F                 	db	63	;'?'
  2153  00FA8E  3F                 	db	63	;'?'
  2154  00FA8F  3F                 	db	63	;'?'
  2155  00FA90  3F                 	db	63	;'?'
  2156  00FA91  3F                 	db	63	;'?'
  2157  00FA92  2E                 	db	46
  2158  00FA93  0D                 	db	13
  2159  00FA94  0A                 	db	10
  2160  00FA95  00                 	db	0
  2161  00FA96                     STR_44:
  2162  00FA96  59                 	db	89	;'Y'
  2163  00FA97  6F                 	db	111	;'o'
  2164  00FA98  75                 	db	117	;'u'
  2165  00FA99  20                 	db	32
  2166  00FA9A  6D                 	db	109	;'m'
  2167  00FA9B  61                 	db	97	;'a'
  2168  00FA9C  79                 	db	121	;'y'
  2169  00FA9D  20                 	db	32
  2170  00FA9E  74                 	db	116	;'t'
  2171  00FA9F  65                 	db	101	;'e'
  2172  00FAA0  72                 	db	114	;'r'
  2173  00FAA1  6D                 	db	109	;'m'
  2174  00FAA2  69                 	db	105	;'i'
  2175  00FAA3  6E                 	db	110	;'n'
  2176  00FAA4  61                 	db	97	;'a'
  2177  00FAA5  74                 	db	116	;'t'
  2178  00FAA6  65                 	db	101	;'e'
  2179  00FAA7  20                 	db	32
  2180  00FAA8  73                 	db	115	;'s'
  2181  00FAA9  70                 	db	112	;'p'
  2182  00FAAA  6F                 	db	111	;'o'
  2183  00FAAB  6F                 	db	111	;'o'
  2184  00FAAC  6C                 	db	108	;'l'
  2185  00FAAD  69                 	db	105	;'i'
  2186  00FAAE  6E                 	db	110	;'n'
  2187  00FAAF  67                 	db	103	;'g'
  2188  00FAB0  20                 	db	32
  2189  00FAB1  61                 	db	97	;'a'
  2190  00FAB2  74                 	db	116	;'t'
  2191  00FAB3  20                 	db	32
  2192  00FAB4  61                 	db	97	;'a'
  2193  00FAB5  6E                 	db	110	;'n'
  2194  00FAB6  79                 	db	121	;'y'
  2195  00FAB7  74                 	db	116	;'t'
  2196  00FAB8  69                 	db	105	;'i'
  2197  00FAB9  6D                 	db	109	;'m'
  2198  00FABA  65                 	db	101	;'e'
  2199  00FABB  20                 	db	32
  2200  00FABC  77                 	db	119	;'w'
  2201  00FABD  69                 	db	105	;'i'
  2202  00FABE  74                 	db	116	;'t'
  2203  00FABF  68                 	db	104	;'h'
  2204  00FAC0  20                 	db	32
  2205  00FAC1  61                 	db	97	;'a'
  2206  00FAC2  20                 	db	32
  2207  00FAC3  6B                 	db	107	;'k'
  2208  00FAC4  65                 	db	101	;'e'
  2209  00FAC5  79                 	db	121	;'y'
  2210  00FAC6  20                 	db	32
  2211  00FAC7  70                 	db	112	;'p'
  2212  00FAC8  72                 	db	114	;'r'
  2213  00FAC9  65                 	db	101	;'e'
  2214  00FACA  73                 	db	115	;'s'
  2215  00FACB  73                 	db	115	;'s'
  2216  00FACC  2E                 	db	46
  2217  00FACD  0D                 	db	13
  2218  00FACE  0A                 	db	10
  2219  00FACF  00                 	db	0
  2220  00FAD0                     STR_47:
  2221  00FAD0  52                 	db	82	;'R'
  2222  00FAD1  69                 	db	105	;'i'
  2223  00FAD2  67                 	db	103	;'g'
  2224  00FAD3  68                 	db	104	;'h'
  2225  00FAD4  74                 	db	116	;'t'
  2226  00FAD5  20                 	db	32
  2227  00FAD6  6D                 	db	109	;'m'
  2228  00FAD7  6F                 	db	111	;'o'
  2229  00FAD8  75                 	db	117	;'u'
  2230  00FAD9  73                 	db	115	;'s'
  2231  00FADA  65                 	db	101	;'e'
  2232  00FADB  20                 	db	32
  2233  00FADC  63                 	db	99	;'c'
  2234  00FADD  6C                 	db	108	;'l'
  2235  00FADE  69                 	db	105	;'i'
  2236  00FADF  63                 	db	99	;'c'
  2237  00FAE0  6B                 	db	107	;'k'
  2238  00FAE1  20                 	db	32
  2239  00FAE2  6F                 	db	111	;'o'
  2240  00FAE3  6E                 	db	110	;'n'
  2241  00FAE4  20                 	db	32
  2242  00FAE5  74                 	db	116	;'t'
  2243  00FAE6  68                 	db	104	;'h'
  2244  00FAE7  65                 	db	101	;'e'
  2245  00FAE8  20                 	db	32
  2246  00FAE9  75                 	db	117	;'u'
  2247  00FAEA  70                 	db	112	;'p'
  2248  00FAEB  70                 	db	112	;'p'
  2249  00FAEC  65                 	db	101	;'e'
  2250  00FAED  72                 	db	114	;'r'
  2251  00FAEE  20                 	db	32
  2252  00FAEF  6C                 	db	108	;'l'
  2253  00FAF0  65                 	db	101	;'e'
  2254  00FAF1  66                 	db	102	;'f'
  2255  00FAF2  74                 	db	116	;'t'
  2256  00FAF3  20                 	db	32
  2257  00FAF4  6F                 	db	111	;'o'
  2258  00FAF5  66                 	db	102	;'f'
  2259  00FAF6  20                 	db	32
  2260  00FAF7  74                 	db	116	;'t'
  2261  00FAF8  68                 	db	104	;'h'
  2262  00FAF9  65                 	db	101	;'e'
  2263  00FAFA  20                 	db	32
  2264  00FAFB  50                 	db	80	;'P'
  2265  00FAFC  75                 	db	117	;'u'
  2266  00FAFD  54                 	db	84	;'T'
  2267  00FAFE  54                 	db	84	;'T'
  2268  00FAFF  59                 	db	89	;'Y'
  2269  00FB00  20                 	db	32
  2270  00FB01  77                 	db	119	;'w'
  2271  00FB02  69                 	db	105	;'i'
  2272  00FB03  6E                 	db	110	;'n'
  2273  00FB04  64                 	db	100	;'d'
  2274  00FB05  6F                 	db	111	;'o'
  2275  00FB06  77                 	db	119	;'w'
  2276  00FB07  0D                 	db	13
  2277  00FB08  0A                 	db	10
  2278  00FB09  00                 	db	0
  2279  00FB0A                     STR_25:
  2280  00FB0A  31                 	db	49	;'1'
  2281  00FB0B  3A                 	db	58	;':'
  2282  00FB0C  20                 	db	32
  2283  00FB0D  77                 	db	119	;'w'
  2284  00FB0E  72                 	db	114	;'r'
  2285  00FB0F  69                 	db	105	;'i'
  2286  00FB10  74                 	db	116	;'t'
  2287  00FB11  65                 	db	101	;'e'
  2288  00FB12  20                 	db	32
  2289  00FB13  61                 	db	97	;'a'
  2290  00FB14  20                 	db	32
  2291  00FB15  70                 	db	112	;'p'
  2292  00FB16  65                 	db	101	;'e'
  2293  00FB17  72                 	db	114	;'r'
  2294  00FB18  66                 	db	102	;'f'
  2295  00FB19  65                 	db	101	;'e'
  2296  00FB1A  63                 	db	99	;'c'
  2297  00FB1B  74                 	db	116	;'t'
  2298  00FB1C  20                 	db	32
  2299  00FB1D  32                 	db	50	;'2'
  2300  00FB1E  36                 	db	54	;'6'
  2301  00FB1F  20                 	db	32
  2302  00FB20  76                 	db	118	;'v'
  2303  00FB21  61                 	db	97	;'a'
  2304  00FB22  6C                 	db	108	;'l'
  2305  00FB23  75                 	db	117	;'u'
  2306  00FB24  65                 	db	101	;'e'
  2307  00FB25  20                 	db	32
  2308  00FB26  73                 	db	115	;'s'
  2309  00FB27  69                 	db	105	;'i'
  2310  00FB28  6E                 	db	110	;'n'
  2311  00FB29  65                 	db	101	;'e'
  2312  00FB2A  20                 	db	32
  2313  00FB2B  77                 	db	119	;'w'
  2314  00FB2C  61                 	db	97	;'a'
  2315  00FB2D  76                 	db	118	;'v'
  2316  00FB2E  65                 	db	101	;'e'
  2317  00FB2F  20                 	db	32
  2318  00FB30  74                 	db	116	;'t'
  2319  00FB31  6F                 	db	111	;'o'
  2320  00FB32  20                 	db	32
  2321  00FB33  74                 	db	116	;'t'
  2322  00FB34  68                 	db	104	;'h'
  2323  00FB35  65                 	db	101	;'e'
  2324  00FB36  20                 	db	32
  2325  00FB37  53                 	db	83	;'S'
  2326  00FB38  44                 	db	68	;'D'
  2327  00FB39  20                 	db	32
  2328  00FB3A  63                 	db	99	;'c'
  2329  00FB3B  61                 	db	97	;'a'
  2330  00FB3C  72                 	db	114	;'r'
  2331  00FB3D  64                 	db	100	;'d'
  2332  00FB3E  0D                 	db	13
  2333  00FB3F  0A                 	db	10
  2334  00FB40  00                 	db	0
  2335  00FB41                     STR_7:
  2336  00FB41  0D                 	db	13
  2337  00FB42  0A                 	db	10
  2338  00FB43  2D                 	db	45
  2339  00FB44  2D                 	db	45
  2340  00FB45  2D                 	db	45
  2341  00FB46  2D                 	db	45
  2342  00FB47  2D                 	db	45
  2343  00FB48  2D                 	db	45
  2344  00FB49  2D                 	db	45
  2345  00FB4A  2D                 	db	45
  2346  00FB4B  2D                 	db	45
  2347  00FB4C  2D                 	db	45
  2348  00FB4D  2D                 	db	45
  2349  00FB4E  2D                 	db	45
  2350  00FB4F  2D                 	db	45
  2351  00FB50  2D                 	db	45
  2352  00FB51  2D                 	db	45
  2353  00FB52  2D                 	db	45
  2354  00FB53  2D                 	db	45
  2355  00FB54  2D                 	db	45
  2356  00FB55  2D                 	db	45
  2357  00FB56  2D                 	db	45
  2358  00FB57  2D                 	db	45
  2359  00FB58  2D                 	db	45
  2360  00FB59  2D                 	db	45
  2361  00FB5A  2D                 	db	45
  2362  00FB5B  2D                 	db	45
  2363  00FB5C  2D                 	db	45
  2364  00FB5D  2D                 	db	45
  2365  00FB5E  2D                 	db	45
  2366  00FB5F  2D                 	db	45
  2367  00FB60  2D                 	db	45
  2368  00FB61  2D                 	db	45
  2369  00FB62  2D                 	db	45
  2370  00FB63  2D                 	db	45
  2371  00FB64  2D                 	db	45
  2372  00FB65  2D                 	db	45
  2373  00FB66  2D                 	db	45
  2374  00FB67  2D                 	db	45
  2375  00FB68  2D                 	db	45
  2376  00FB69  2D                 	db	45
  2377  00FB6A  2D                 	db	45
  2378  00FB6B  2D                 	db	45
  2379  00FB6C  2D                 	db	45
  2380  00FB6D  2D                 	db	45
  2381  00FB6E  2D                 	db	45
  2382  00FB6F  2D                 	db	45
  2383  00FB70  2D                 	db	45
  2384  00FB71  2D                 	db	45
  2385  00FB72  2D                 	db	45
  2386  00FB73  2D                 	db	45
  2387  00FB74  0D                 	db	13
  2388  00FB75  0A                 	db	10
  2389  00FB76  00                 	db	0
  2390  00FB77                     STR_50:
  2391  00FB77  53                 	db	83	;'S'
  2392  00FB78  65                 	db	101	;'e'
  2393  00FB79  6C                 	db	108	;'l'
  2394  00FB7A  65                 	db	101	;'e'
  2395  00FB7B  63                 	db	99	;'c'
  2396  00FB7C  74                 	db	116	;'t'
  2397  00FB7D  3A                 	db	58	;':'
  2398  00FB7E  20                 	db	32
  2399  00FB7F  20                 	db	32
  2400  00FB80  20                 	db	32
  2401  00FB81  20                 	db	32
  2402  00FB82  20                 	db	32
  2403  00FB83  53                 	db	83	;'S'
  2404  00FB84  65                 	db	101	;'e'
  2405  00FB85  73                 	db	115	;'s'
  2406  00FB86  73                 	db	115	;'s'
  2407  00FB87  69                 	db	105	;'i'
  2408  00FB88  6F                 	db	111	;'o'
  2409  00FB89  6E                 	db	110	;'n'
  2410  00FB8A  20                 	db	32
  2411  00FB8B  6C                 	db	108	;'l'
  2412  00FB8C  6F                 	db	111	;'o'
  2413  00FB8D  67                 	db	103	;'g'
  2414  00FB8E  67                 	db	103	;'g'
  2415  00FB8F  69                 	db	105	;'i'
  2416  00FB90  6E                 	db	110	;'n'
  2417  00FB91  67                 	db	103	;'g'
  2418  00FB92  3A                 	db	58	;':'
  2419  00FB93  20                 	db	32
  2420  00FB94  41                 	db	65	;'A'
  2421  00FB95  6C                 	db	108	;'l'
  2422  00FB96  6C                 	db	108	;'l'
  2423  00FB97  20                 	db	32
  2424  00FB98  73                 	db	115	;'s'
  2425  00FB99  65                 	db	101	;'e'
  2426  00FB9A  73                 	db	115	;'s'
  2427  00FB9B  73                 	db	115	;'s'
  2428  00FB9C  69                 	db	105	;'i'
  2429  00FB9D  6F                 	db	111	;'o'
  2430  00FB9E  6E                 	db	110	;'n'
  2431  00FB9F  20                 	db	32
  2432  00FBA0  6F                 	db	111	;'o'
  2433  00FBA1  75                 	db	117	;'u'
  2434  00FBA2  74                 	db	116	;'t'
  2435  00FBA3  70                 	db	112	;'p'
  2436  00FBA4  75                 	db	117	;'u'
  2437  00FBA5  74                 	db	116	;'t'
  2438  00FBA6  0D                 	db	13
  2439  00FBA7  0A                 	db	10
  2440  00FBA8  00                 	db	0
  2441  00FBA9                     STR_27:
  2442  00FBA9  2B                 	db	43
  2443  00FBAA  2F                 	db	47
  2444  00FBAB  2D                 	db	45
  2445  00FBAC  20                 	db	32
  2446  00FBAD  49                 	db	73	;'I'
  2447  00FBAE  6E                 	db	110	;'n'
  2448  00FBAF  63                 	db	99	;'c'
  2449  00FBB0  72                 	db	114	;'r'
  2450  00FBB1  65                 	db	101	;'e'
  2451  00FBB2  61                 	db	97	;'a'
  2452  00FBB3  73                 	db	115	;'s'
  2453  00FBB4  65                 	db	101	;'e'
  2454  00FBB5  2F                 	db	47
  2455  00FBB6  44                 	db	68	;'D'
  2456  00FBB7  65                 	db	101	;'e'
  2457  00FBB8  63                 	db	99	;'c'
  2458  00FBB9  72                 	db	114	;'r'
  2459  00FBBA  65                 	db	101	;'e'
  2460  00FBBB  61                 	db	97	;'a'
  2461  00FBBC  73                 	db	115	;'s'
  2462  00FBBD  65                 	db	101	;'e'
  2463  00FBBE  20                 	db	32
  2464  00FBBF  74                 	db	116	;'t'
  2465  00FBC0  68                 	db	104	;'h'
  2466  00FBC1  65                 	db	101	;'e'
  2467  00FBC2  20                 	db	32
  2468  00FBC3  73                 	db	115	;'s'
  2469  00FBC4  61                 	db	97	;'a'
  2470  00FBC5  6D                 	db	109	;'m'
  2471  00FBC6  70                 	db	112	;'p'
  2472  00FBC7  6C                 	db	108	;'l'
  2473  00FBC8  65                 	db	101	;'e'
  2474  00FBC9  20                 	db	32
  2475  00FBCA  72                 	db	114	;'r'
  2476  00FBCB  61                 	db	97	;'a'
  2477  00FBCC  74                 	db	116	;'t'
  2478  00FBCD  65                 	db	101	;'e'
  2479  00FBCE  20                 	db	32
  2480  00FBCF  62                 	db	98	;'b'
  2481  00FBD0  79                 	db	121	;'y'
  2482  00FBD1  20                 	db	32
  2483  00FBD2  31                 	db	49	;'1'
  2484  00FBD3  30                 	db	48	;'0'
  2485  00FBD4  20                 	db	32
  2486  00FBD5  75                 	db	117	;'u'
  2487  00FBD6  73                 	db	115	;'s'
  2488  00FBD7  0D                 	db	13
  2489  00FBD8  0A                 	db	10
  2490  00FBD9  00                 	db	0
  2491  00FBDA                     STR_56:
  2492  00FBDA  54                 	db	84	;'T'
  2493  00FBDB  6F                 	db	111	;'o'
  2494  00FBDC  20                 	db	32
  2495  00FBDD  63                 	db	99	;'c'
  2496  00FBDE  6C                 	db	108	;'l'
  2497  00FBDF  6F                 	db	111	;'o'
  2498  00FBE0  73                 	db	115	;'s'
  2499  00FBE1  65                 	db	101	;'e'
  2500  00FBE2  20                 	db	32
  2501  00FBE3  74                 	db	116	;'t'
  2502  00FBE4  68                 	db	104	;'h'
  2503  00FBE5  65                 	db	101	;'e'
  2504  00FBE6  20                 	db	32
  2505  00FBE7  66                 	db	102	;'f'
  2506  00FBE8  69                 	db	105	;'i'
  2507  00FBE9  6C                 	db	108	;'l'
  2508  00FBEA  65                 	db	101	;'e'
  2509  00FBEB  20                 	db	32
  2510  00FBEC  66                 	db	102	;'f'
  2511  00FBED  6F                 	db	111	;'o'
  2512  00FBEE  6C                 	db	108	;'l'
  2513  00FBEF  6C                 	db	108	;'l'
  2514  00FBF0  6F                 	db	111	;'o'
  2515  00FBF1  77                 	db	119	;'w'
  2516  00FBF2  20                 	db	32
  2517  00FBF3  74                 	db	116	;'t'
  2518  00FBF4  68                 	db	104	;'h'
  2519  00FBF5  65                 	db	101	;'e'
  2520  00FBF6  73                 	db	115	;'s'
  2521  00FBF7  65                 	db	101	;'e'
  2522  00FBF8  20                 	db	32
  2523  00FBF9  69                 	db	105	;'i'
  2524  00FBFA  6E                 	db	110	;'n'
  2525  00FBFB  73                 	db	115	;'s'
  2526  00FBFC  74                 	db	116	;'t'
  2527  00FBFD  72                 	db	114	;'r'
  2528  00FBFE  75                 	db	117	;'u'
  2529  00FBFF  63                 	db	99	;'c'
  2530  00FC00  74                 	db	116	;'t'
  2531  00FC01  69                 	db	105	;'i'
  2532  00FC02  6F                 	db	111	;'o'
  2533  00FC03  6E                 	db	110	;'n'
  2534  00FC04  73                 	db	115	;'s'
  2535  00FC05  3A                 	db	58	;':'
  2536  00FC06  20                 	db	32
  2537  00FC07  0D                 	db	13
  2538  00FC08  0A                 	db	10
  2539  00FC09  00                 	db	0
  2540  00FC0A                     STR_28:
  2541  00FC0A  57                 	db	87	;'W'
  2542  00FC0B  3A                 	db	58	;':'
  2543  00FC0C  20                 	db	32
  2544  00FC0D  57                 	db	87	;'W'
  2545  00FC0E  72                 	db	114	;'r'
  2546  00FC0F  69                 	db	105	;'i'
  2547  00FC10  74                 	db	116	;'t'
  2548  00FC11  65                 	db	101	;'e'
  2549  00FC12  20                 	db	32
  2550  00FC13  6D                 	db	109	;'m'
  2551  00FC14  69                 	db	105	;'i'
  2552  00FC15  63                 	db	99	;'c'
  2553  00FC16  72                 	db	114	;'r'
  2554  00FC17  6F                 	db	111	;'o'
  2555  00FC18  70                 	db	112	;'p'
  2556  00FC19  68                 	db	104	;'h'
  2557  00FC1A  6F                 	db	111	;'o'
  2558  00FC1B  6E                 	db	110	;'n'
  2559  00FC1C  65                 	db	101	;'e'
  2560  00FC1D  20                 	db	32
  2561  00FC1E  3D                 	db	61	;'='
  2562  00FC1F  3E                 	db	62	;'>'
  2563  00FC20  20                 	db	32
  2564  00FC21  53                 	db	83	;'S'
  2565  00FC22  44                 	db	68	;'D'
  2566  00FC23  20                 	db	32
  2567  00FC24  63                 	db	99	;'c'
  2568  00FC25  61                 	db	97	;'a'
  2569  00FC26  72                 	db	114	;'r'
  2570  00FC27  64                 	db	100	;'d'
  2571  00FC28  20                 	db	32
  2572  00FC29  61                 	db	97	;'a'
  2573  00FC2A  74                 	db	116	;'t'
  2574  00FC2B  20                 	db	32
  2575  00FC2C  31                 	db	49	;'1'
  2576  00FC2D  36                 	db	54	;'6'
  2577  00FC2E  30                 	db	48	;'0'
  2578  00FC2F  30                 	db	48	;'0'
  2579  00FC30  20                 	db	32
  2580  00FC31  75                 	db	117	;'u'
  2581  00FC32  73                 	db	115	;'s'
  2582  00FC33  0D                 	db	13
  2583  00FC34  0A                 	db	10
  2584  00FC35  00                 	db	0
  2585  00FC36                     STR_24:
  2586  00FC36  72                 	db	114	;'r'
  2587  00FC37  3A                 	db	58	;':'
  2588  00FC38  20                 	db	32
  2589  00FC39  72                 	db	114	;'r'
  2590  00FC3A  65                 	db	101	;'e'
  2591  00FC3B  61                 	db	97	;'a'
  2592  00FC3C  64                 	db	100	;'d'
  2593  00FC3D  20                 	db	32
  2594  00FC3E  61                 	db	97	;'a'
  2595  00FC3F  20                 	db	32
  2596  00FC40  62                 	db	98	;'b'
  2597  00FC41  6C                 	db	108	;'l'
  2598  00FC42  6F                 	db	111	;'o'
  2599  00FC43  63                 	db	99	;'c'
  2600  00FC44  6B                 	db	107	;'k'
  2601  00FC45  20                 	db	32
  2602  00FC46  6F                 	db	111	;'o'
  2603  00FC47  66                 	db	102	;'f'
  2604  00FC48  20                 	db	32
  2605  00FC49  25                 	db	37
  2606  00FC4A  64                 	db	100	;'d'
  2607  00FC4B  20                 	db	32
  2608  00FC4C  62                 	db	98	;'b'
  2609  00FC4D  79                 	db	121	;'y'
  2610  00FC4E  74                 	db	116	;'t'
  2611  00FC4F  65                 	db	101	;'e'
  2612  00FC50  73                 	db	115	;'s'
  2613  00FC51  20                 	db	32
  2614  00FC52  66                 	db	102	;'f'
  2615  00FC53  72                 	db	114	;'r'
  2616  00FC54  6F                 	db	111	;'o'
  2617  00FC55  6D                 	db	109	;'m'
  2618  00FC56  20                 	db	32
  2619  00FC57  53                 	db	83	;'S'
  2620  00FC58  44                 	db	68	;'D'
  2621  00FC59  20                 	db	32
  2622  00FC5A  63                 	db	99	;'c'
  2623  00FC5B  61                 	db	97	;'a'
  2624  00FC5C  72                 	db	114	;'r'
  2625  00FC5D  64                 	db	100	;'d'
  2626  00FC5E  0D                 	db	13
  2627  00FC5F  0A                 	db	10
  2628  00FC60  00                 	db	0
  2629  00FC61                     STR_4:
  2630  00FC61  4E                 	db	78	;'N'
  2631  00FC62  6F                 	db	111	;'o'
  2632  00FC63  20                 	db	32
  2633  00FC64  63                 	db	99	;'c'
  2634  00FC65  6F                 	db	111	;'o'
  2635  00FC66  6E                 	db	110	;'n'
  2636  00FC67  66                 	db	102	;'f'
  2637  00FC68  69                 	db	105	;'i'
  2638  00FC69  67                 	db	103	;'g'
  2639  00FC6A  75                 	db	117	;'u'
  2640  00FC6B  72                 	db	114	;'r'
  2641  00FC6C  61                 	db	97	;'a'
  2642  00FC6D  74                 	db	116	;'t'
  2643  00FC6E  69                 	db	105	;'i'
  2644  00FC6F  6F                 	db	111	;'o'
  2645  00FC70  6E                 	db	110	;'n'
  2646  00FC71  20                 	db	32
  2647  00FC72  6F                 	db	111	;'o'
  2648  00FC73  66                 	db	102	;'f'
  2649  00FC74  20                 	db	32
  2650  00FC75  64                 	db	100	;'d'
  2651  00FC76  65                 	db	101	;'e'
  2652  00FC77  76                 	db	118	;'v'
  2653  00FC78  65                 	db	101	;'e'
  2654  00FC79  6C                 	db	108	;'l'
  2655  00FC7A  6F                 	db	111	;'o'
  2656  00FC7B  70                 	db	112	;'p'
  2657  00FC7C  6D                 	db	109	;'m'
  2658  00FC7D  65                 	db	101	;'e'
  2659  00FC7E  6E                 	db	110	;'n'
  2660  00FC7F  74                 	db	116	;'t'
  2661  00FC80  20                 	db	32
  2662  00FC81  62                 	db	98	;'b'
  2663  00FC82  6F                 	db	111	;'o'
  2664  00FC83  61                 	db	97	;'a'
  2665  00FC84  72                 	db	114	;'r'
  2666  00FC85  64                 	db	100	;'d'
  2667  00FC86  0D                 	db	13
  2668  00FC87  0A                 	db	10
  2669  00FC88  00                 	db	0
  2670  00FC89                     STR_60:
  2671  00FC89  53                 	db	83	;'S'
  2672  00FC8A  65                 	db	101	;'e'
  2673  00FC8B  6C                 	db	108	;'l'
  2674  00FC8C  65                 	db	101	;'e'
  2675  00FC8D  63                 	db	99	;'c'
  2676  00FC8E  74                 	db	116	;'t'
  2677  00FC8F  3A                 	db	58	;':'
  2678  00FC90  20                 	db	32
  2679  00FC91  20                 	db	32
  2680  00FC92  20                 	db	32
  2681  00FC93  20                 	db	32
  2682  00FC94  20                 	db	32
  2683  00FC95  53                 	db	83	;'S'
  2684  00FC96  65                 	db	101	;'e'
  2685  00FC97  73                 	db	115	;'s'
  2686  00FC98  73                 	db	115	;'s'
  2687  00FC99  69                 	db	105	;'i'
  2688  00FC9A  6F                 	db	111	;'o'
  2689  00FC9B  6E                 	db	110	;'n'
  2690  00FC9C  20                 	db	32
  2691  00FC9D  20                 	db	32
  2692  00FC9E  6C                 	db	108	;'l'
  2693  00FC9F  6F                 	db	111	;'o'
  2694  00FCA0  67                 	db	103	;'g'
  2695  00FCA1  67                 	db	103	;'g'
  2696  00FCA2  69                 	db	105	;'i'
  2697  00FCA3  6E                 	db	110	;'n'
  2698  00FCA4  67                 	db	103	;'g'
  2699  00FCA5  3A                 	db	58	;':'
  2700  00FCA6  20                 	db	32
  2701  00FCA7  4E                 	db	78	;'N'
  2702  00FCA8  6F                 	db	111	;'o'
  2703  00FCA9  6E                 	db	110	;'n'
  2704  00FCAA  65                 	db	101	;'e'
  2705  00FCAB  0D                 	db	13
  2706  00FCAC  0A                 	db	10
  2707  00FCAD  00                 	db	0
  2708  00FCAE                     STR_23:
  2709  00FCAE  61                 	db	97	;'a'
  2710  00FCAF  2F                 	db	47
  2711  00FCB0  41                 	db	65	;'A'
  2712  00FCB1  20                 	db	32
  2713  00FCB2  64                 	db	100	;'d'
  2714  00FCB3  65                 	db	101	;'e'
  2715  00FCB4  63                 	db	99	;'c'
  2716  00FCB5  72                 	db	114	;'r'
  2717  00FCB6  65                 	db	101	;'e'
  2718  00FCB7  61                 	db	97	;'a'
  2719  00FCB8  73                 	db	115	;'s'
  2720  00FCB9  65                 	db	101	;'e'
  2721  00FCBA  2F                 	db	47
  2722  00FCBB  69                 	db	105	;'i'
  2723  00FCBC  6E                 	db	110	;'n'
  2724  00FCBD  63                 	db	99	;'c'
  2725  00FCBE  72                 	db	114	;'r'
  2726  00FCBF  65                 	db	101	;'e'
  2727  00FCC0  61                 	db	97	;'a'
  2728  00FCC1  73                 	db	115	;'s'
  2729  00FCC2  65                 	db	101	;'e'
  2730  00FCC3  20                 	db	32
  2731  00FCC4  72                 	db	114	;'r'
  2732  00FCC5  65                 	db	101	;'e'
  2733  00FCC6  61                 	db	97	;'a'
  2734  00FCC7  64                 	db	100	;'d'
  2735  00FCC8  20                 	db	32
  2736  00FCC9  61                 	db	97	;'a'
  2737  00FCCA  64                 	db	100	;'d'
  2738  00FCCB  64                 	db	100	;'d'
  2739  00FCCC  72                 	db	114	;'r'
  2740  00FCCD  65                 	db	101	;'e'
  2741  00FCCE  73                 	db	115	;'s'
  2742  00FCCF  73                 	db	115	;'s'
  2743  00FCD0  0D                 	db	13
  2744  00FCD1  0A                 	db	10
  2745  00FCD2  00                 	db	0
  2746  00FCD3                     STR_55:
  2747  00FCD3  53                 	db	83	;'S'
  2748  00FCD4  70                 	db	112	;'p'
  2749  00FCD5  6F                 	db	111	;'o'
  2750  00FCD6  6F                 	db	111	;'o'
  2751  00FCD7  6C                 	db	108	;'l'
  2752  00FCD8  65                 	db	101	;'e'
  2753  00FCD9  64                 	db	100	;'d'
  2754  00FCDA  20                 	db	32
  2755  00FCDB  25                 	db	37
  2756  00FCDC  75                 	db	117	;'u'
  2757  00FCDD  20                 	db	32
  2758  00FCDE  6F                 	db	111	;'o'
  2759  00FCDF  75                 	db	117	;'u'
  2760  00FCE0  74                 	db	116	;'t'
  2761  00FCE1  20                 	db	32
  2762  00FCE2  6F                 	db	111	;'o'
  2763  00FCE3  66                 	db	102	;'f'
  2764  00FCE4  20                 	db	32
  2765  00FCE5  74                 	db	116	;'t'
  2766  00FCE6  68                 	db	104	;'h'
  2767  00FCE7  65                 	db	101	;'e'
  2768  00FCE8  20                 	db	32
  2769  00FCE9  25                 	db	37
  2770  00FCEA  75                 	db	117	;'u'
  2771  00FCEB  20                 	db	32
  2772  00FCEC  62                 	db	98	;'b'
  2773  00FCED  6C                 	db	108	;'l'
  2774  00FCEE  6F                 	db	111	;'o'
  2775  00FCEF  63                 	db	99	;'c'
  2776  00FCF0  6B                 	db	107	;'k'
  2777  00FCF1  73                 	db	115	;'s'
  2778  00FCF2  2E                 	db	46
  2779  00FCF3  0D                 	db	13
  2780  00FCF4  0A                 	db	10
  2781  00FCF5  00                 	db	0
  2782  00FCF6                     STR_48:
  2783  00FCF6  53                 	db	83	;'S'
  2784  00FCF7  65                 	db	101	;'e'
  2785  00FCF8  6C                 	db	108	;'l'
  2786  00FCF9  65                 	db	101	;'e'
  2787  00FCFA  63                 	db	99	;'c'
  2788  00FCFB  74                 	db	116	;'t'
  2789  00FCFC  3A                 	db	58	;':'
  2790  00FCFD  20                 	db	32
  2791  00FCFE  20                 	db	32
  2792  00FCFF  20                 	db	32
  2793  00FD00  20                 	db	32
  2794  00FD01  20                 	db	32
  2795  00FD02  43                 	db	67	;'C'
  2796  00FD03  68                 	db	104	;'h'
  2797  00FD04  61                 	db	97	;'a'
  2798  00FD05  6E                 	db	110	;'n'
  2799  00FD06  67                 	db	103	;'g'
  2800  00FD07  65                 	db	101	;'e'
  2801  00FD08  20                 	db	32
  2802  00FD09  73                 	db	115	;'s'
  2803  00FD0A  65                 	db	101	;'e'
  2804  00FD0B  74                 	db	116	;'t'
  2805  00FD0C  74                 	db	116	;'t'
  2806  00FD0D  69                 	db	105	;'i'
  2807  00FD0E  6E                 	db	110	;'n'
  2808  00FD0F  67                 	db	103	;'g'
  2809  00FD10  73                 	db	115	;'s'
  2810  00FD11  2E                 	db	46
  2811  00FD12  2E                 	db	46
  2812  00FD13  2E                 	db	46
  2813  00FD14  0D                 	db	13
  2814  00FD15  0A                 	db	10
  2815  00FD16  00                 	db	0
  2816  00FD17                     STR_29:
  2817  00FD17  73                 	db	115	;'s'
  2818  00FD18  3A                 	db	58	;':'
  2819  00FD19  20                 	db	32
  2820  00FD1A  73                 	db	115	;'s'
  2821  00FD1B  70                 	db	112	;'p'
  2822  00FD1C  6F                 	db	111	;'o'
  2823  00FD1D  6F                 	db	111	;'o'
  2824  00FD1E  6C                 	db	108	;'l'
  2825  00FD1F  20                 	db	32
  2826  00FD20  6D                 	db	109	;'m'
  2827  00FD21  65                 	db	101	;'e'
  2828  00FD22  6D                 	db	109	;'m'
  2829  00FD23  6F                 	db	111	;'o'
  2830  00FD24  72                 	db	114	;'r'
  2831  00FD25  79                 	db	121	;'y'
  2832  00FD26  20                 	db	32
  2833  00FD27  74                 	db	116	;'t'
  2834  00FD28  6F                 	db	111	;'o'
  2835  00FD29  20                 	db	32
  2836  00FD2A  61                 	db	97	;'a'
  2837  00FD2B  20                 	db	32
  2838  00FD2C  63                 	db	99	;'c'
  2839  00FD2D  73                 	db	115	;'s'
  2840  00FD2E  76                 	db	118	;'v'
  2841  00FD2F  20                 	db	32
  2842  00FD30  66                 	db	102	;'f'
  2843  00FD31  69                 	db	105	;'i'
  2844  00FD32  6C                 	db	108	;'l'
  2845  00FD33  65                 	db	101	;'e'
  2846  00FD34  0D                 	db	13
  2847  00FD35  0A                 	db	10
  2848  00FD36  00                 	db	0
  2849  00FD37                     STR_34:
  2850  00FD37  57                 	db	87	;'W'
  2851  00FD38  72                 	db	114	;'r'
  2852  00FD39  69                 	db	105	;'i'
  2853  00FD3A  74                 	db	116	;'t'
  2854  00FD3B  65                 	db	101	;'e'
  2855  00FD3C  20                 	db	32
  2856  00FD3D  62                 	db	98	;'b'
  2857  00FD3E  6C                 	db	108	;'l'
  2858  00FD3F  6F                 	db	111	;'o'
  2859  00FD40  63                 	db	99	;'c'
  2860  00FD41  6B                 	db	107	;'k'
  2861  00FD42  20                 	db	32
  2862  00FD43  73                 	db	115	;'s'
  2863  00FD44  69                 	db	105	;'i'
  2864  00FD45  6E                 	db	110	;'n'
  2865  00FD46  20                 	db	32
  2866  00FD47  77                 	db	119	;'w'
  2867  00FD48  61                 	db	97	;'a'
  2868  00FD49  76                 	db	118	;'v'
  2869  00FD4A  65                 	db	101	;'e'
  2870  00FD4B  20                 	db	32
  2871  00FD4C  76                 	db	118	;'v'
  2872  00FD4D  61                 	db	97	;'a'
  2873  00FD4E  6C                 	db	108	;'l'
  2874  00FD4F  75                 	db	117	;'u'
  2875  00FD50  65                 	db	101	;'e'
  2876  00FD51  73                 	db	115	;'s'
  2877  00FD52  3A                 	db	58	;':'
  2878  00FD53  0D                 	db	13
  2879  00FD54  0A                 	db	10
  2880  00FD55  00                 	db	0
  2881  00FD56                     STR_40:
  2882  00FD56  53                 	db	83	;'S'
  2883  00FD57  74                 	db	116	;'t'
  2884  00FD58  61                 	db	97	;'a'
  2885  00FD59  74                 	db	116	;'t'
  2886  00FD5A  75                 	db	117	;'u'
  2887  00FD5B  73                 	db	115	;'s'
  2888  00FD5C  20                 	db	32
  2889  00FD5D  63                 	db	99	;'c'
  2890  00FD5E  6F                 	db	111	;'o'
  2891  00FD5F  64                 	db	100	;'d'
  2892  00FD60  65                 	db	101	;'e'
  2893  00FD61  3A                 	db	58	;':'
  2894  00FD62  20                 	db	32
  2895  00FD63  25                 	db	37
  2896  00FD64  64                 	db	100	;'d'
  2897  00FD65  20                 	db	32
  2898  00FD66  2D                 	db	45
  2899  00FD67  2D                 	db	45
  2900  00FD68  2D                 	db	45
  2901  00FD69  2D                 	db	45
  2902  00FD6A  20                 	db	32
  2903  00FD6B  41                 	db	65	;'A'
  2904  00FD6C  64                 	db	100	;'d'
  2905  00FD6D  64                 	db	100	;'d'
  2906  00FD6E  72                 	db	114	;'r'
  2907  00FD6F  65                 	db	101	;'e'
  2908  00FD70  73                 	db	115	;'s'
  2909  00FD71  73                 	db	115	;'s'
  2910  00FD72  3A                 	db	58	;':'
  2911  00FD73  20                 	db	32
  2912  00FD74  00                 	db	0
  2913  00FD75                     STR_35:
  2914  00FD75  41                 	db	65	;'A'
  2915  00FD76  6D                 	db	109	;'m'
  2916  00FD77  6F                 	db	111	;'o'
  2917  00FD78  75                 	db	117	;'u'
  2918  00FD79  6E                 	db	110	;'n'
  2919  00FD7A  74                 	db	116	;'t'
  2920  00FD7B  20                 	db	32
  2921  00FD7C  6F                 	db	111	;'o'
  2922  00FD7D  66                 	db	102	;'f'
  2923  00FD7E  20                 	db	32
  2924  00FD7F  62                 	db	98	;'b'
  2925  00FD80  6C                 	db	108	;'l'
  2926  00FD81  6F                 	db	111	;'o'
  2927  00FD82  63                 	db	99	;'c'
  2928  00FD83  6B                 	db	107	;'k'
  2929  00FD84  73                 	db	115	;'s'
  2930  00FD85  20                 	db	32
  2931  00FD86  73                 	db	115	;'s'
  2932  00FD87  74                 	db	116	;'t'
  2933  00FD88  6F                 	db	111	;'o'
  2934  00FD89  72                 	db	114	;'r'
  2935  00FD8A  65                 	db	101	;'e'
  2936  00FD8B  64                 	db	100	;'d'
  2937  00FD8C  3A                 	db	58	;':'
  2938  00FD8D  20                 	db	32
  2939  00FD8E  25                 	db	37
  2940  00FD8F  64                 	db	100	;'d'
  2941  00FD90  0D                 	db	13
  2942  00FD91  0A                 	db	10
  2943  00FD92  00                 	db	0
  2944  00FD93                     STR_62:
  2945  00FD93  55                 	db	85	;'U'
  2946  00FD94  6E                 	db	110	;'n'
  2947  00FD95  64                 	db	100	;'d'
  2948  00FD96  65                 	db	101	;'e'
  2949  00FD97  72                 	db	114	;'r'
  2950  00FD98  66                 	db	102	;'f'
  2951  00FD99  6C                 	db	108	;'l'
  2952  00FD9A  6F                 	db	111	;'o'
  2953  00FD9B  77                 	db	119	;'w'
  2954  00FD9C  65                 	db	101	;'e'
  2955  00FD9D  64                 	db	100	;'d'
  2956  00FD9E  20                 	db	32
  2957  00FD9F  74                 	db	116	;'t'
  2958  00FDA0  6F                 	db	111	;'o'
  2959  00FDA1  20                 	db	32
  2960  00FDA2  68                 	db	104	;'h'
  2961  00FDA3  69                 	db	105	;'i'
  2962  00FDA4  67                 	db	103	;'g'
  2963  00FDA5  68                 	db	104	;'h'
  2964  00FDA6  20                 	db	32
  2965  00FDA7  61                 	db	97	;'a'
  2966  00FDA8  64                 	db	100	;'d'
  2967  00FDA9  64                 	db	100	;'d'
  2968  00FDAA  72                 	db	114	;'r'
  2969  00FDAB  65                 	db	101	;'e'
  2970  00FDAC  73                 	db	115	;'s'
  2971  00FDAD  73                 	db	115	;'s'
  2972  00FDAE  0D                 	db	13
  2973  00FDAF  0A                 	db	10
  2974  00FDB0  00                 	db	0
  2975  00FDB1                     STR_8:
  2976  00FDB1  09                 	db	9
  2977  00FDB2  50                 	db	80	;'P'
  2978  00FDB3  6C                 	db	108	;'l'
  2979  00FDB4  61                 	db	97	;'a'
  2980  00FDB5  79                 	db	121	;'y'
  2981  00FDB6  20                 	db	32
  2982  00FDB7  6C                 	db	108	;'l'
  2983  00FDB8  65                 	db	101	;'e'
  2984  00FDB9  6E                 	db	110	;'n'
  2985  00FDBA  67                 	db	103	;'g'
  2986  00FDBB  74                 	db	116	;'t'
  2987  00FDBC  68                 	db	104	;'h'
  2988  00FDBD  20                 	db	32
  2989  00FDBE  69                 	db	105	;'i'
  2990  00FDBF  6E                 	db	110	;'n'
  2991  00FDC0  20                 	db	32
  2992  00FDC1  62                 	db	98	;'b'
  2993  00FDC2  6C                 	db	108	;'l'
  2994  00FDC3  6F                 	db	111	;'o'
  2995  00FDC4  63                 	db	99	;'c'
  2996  00FDC5  6B                 	db	107	;'k'
  2997  00FDC6  73                 	db	115	;'s'
  2998  00FDC7  3A                 	db	58	;':'
  2999  00FDC8  20                 	db	32
  3000  00FDC9  25                 	db	37
  3001  00FDCA  64                 	db	100	;'d'
  3002  00FDCB  0D                 	db	13
  3003  00FDCC  0A                 	db	10
  3004  00FDCD  00                 	db	0
  3005  00FDCE                     STR_115:
  3006  00FDCE  42                 	db	66	;'B'
  3007  00FDCF  6C                 	db	108	;'l'
  3008  00FDD0  6F                 	db	111	;'o'
  3009  00FDD1  63                 	db	99	;'c'
  3010  00FDD2  6B                 	db	107	;'k'
  3011  00FDD3  20                 	db	32
  3012  00FDD4  4C                 	db	76	;'L'
  3013  00FDD5  65                 	db	101	;'e'
  3014  00FDD6  6E                 	db	110	;'n'
  3015  00FDD7  67                 	db	103	;'g'
  3016  00FDD8  74                 	db	116	;'t'
  3017  00FDD9  68                 	db	104	;'h'
  3018  00FDDA  20                 	db	32
  3019  00FDDB  52                 	db	82	;'R'
  3020  00FDDC  65                 	db	101	;'e'
  3021  00FDDD  73                 	db	115	;'s'
  3022  00FDDE  70                 	db	112	;'p'
  3023  00FDDF  6F                 	db	111	;'o'
  3024  00FDE0  6E                 	db	110	;'n'
  3025  00FDE1  73                 	db	115	;'s'
  3026  00FDE2  65                 	db	101	;'e'
  3027  00FDE3  3A                 	db	58	;':'
  3028  00FDE4  20                 	db	32
  3029  00FDE5  25                 	db	37
  3030  00FDE6  78                 	db	120	;'x'
  3031  00FDE7  0D                 	db	13
  3032  00FDE8  0A                 	db	10
  3033  00FDE9  00                 	db	0
  3034  00FDEA                     STR_64:
  3035  00FDEA  4F                 	db	79	;'O'
  3036  00FDEB  76                 	db	118	;'v'
  3037  00FDEC  65                 	db	101	;'e'
  3038  00FDED  72                 	db	114	;'r'
  3039  00FDEE  66                 	db	102	;'f'
  3040  00FDEF  6C                 	db	108	;'l'
  3041  00FDF0  6F                 	db	111	;'o'
  3042  00FDF1  77                 	db	119	;'w'
  3043  00FDF2  65                 	db	101	;'e'
  3044  00FDF3  64                 	db	100	;'d'
  3045  00FDF4  20                 	db	32
  3046  00FDF5  74                 	db	116	;'t'
  3047  00FDF6  6F                 	db	111	;'o'
  3048  00FDF7  20                 	db	32
  3049  00FDF8  6C                 	db	108	;'l'
  3050  00FDF9  6F                 	db	111	;'o'
  3051  00FDFA  77                 	db	119	;'w'
  3052  00FDFB  20                 	db	32
  3053  00FDFC  61                 	db	97	;'a'
  3054  00FDFD  64                 	db	100	;'d'
  3055  00FDFE  64                 	db	100	;'d'
  3056  00FDFF  72                 	db	114	;'r'
  3057  00FE00  65                 	db	101	;'e'
  3058  00FE01  73                 	db	115	;'s'
  3059  00FE02  73                 	db	115	;'s'
  3060  00FE03  0D                 	db	13
  3061  00FE04  0A                 	db	10
  3062  00FE05  00                 	db	0
  3063  00FE06                     STR_113:
  3064  00FE06  43                 	db	67	;'C'
  3065  00FE07  4D                 	db	77	;'M'
  3066  00FE08  44                 	db	68	;'D'
  3067  00FE09  30                 	db	48	;'0'
  3068  00FE0A  2C                 	db	44
  3069  00FE0B  20                 	db	32
  3070  00FE0C  52                 	db	82	;'R'
  3071  00FE0D  65                 	db	101	;'e'
  3072  00FE0E  73                 	db	115	;'s'
  3073  00FE0F  65                 	db	101	;'e'
  3074  00FE10  74                 	db	116	;'t'
  3075  00FE11  20                 	db	32
  3076  00FE12  52                 	db	82	;'R'
  3077  00FE13  65                 	db	101	;'e'
  3078  00FE14  73                 	db	115	;'s'
  3079  00FE15  70                 	db	112	;'p'
  3080  00FE16  6F                 	db	111	;'o'
  3081  00FE17  6E                 	db	110	;'n'
  3082  00FE18  73                 	db	115	;'s'
  3083  00FE19  65                 	db	101	;'e'
  3084  00FE1A  3A                 	db	58	;':'
  3085  00FE1B  20                 	db	32
  3086  00FE1C  25                 	db	37
  3087  00FE1D  78                 	db	120	;'x'
  3088  00FE1E  0D                 	db	13
  3089  00FE1F  0A                 	db	10
  3090  00FE20  00                 	db	0
  3091  00FE21                     STR_39:
  3092  00FE21  4C                 	db	76	;'L'
  3093  00FE22  69                 	db	105	;'i'
  3094  00FE23  73                 	db	115	;'s'
  3095  00FE24  74                 	db	116	;'t'
  3096  00FE25  69                 	db	105	;'i'
  3097  00FE26  6E                 	db	110	;'n'
  3098  00FE27  67                 	db	103	;'g'
  3099  00FE28  20                 	db	32
  3100  00FE29  77                 	db	119	;'w'
  3101  00FE2A  72                 	db	114	;'r'
  3102  00FE2B  69                 	db	105	;'i'
  3103  00FE2C  74                 	db	116	;'t'
  3104  00FE2D  65                 	db	101	;'e'
  3105  00FE2E  20                 	db	32
  3106  00FE2F  66                 	db	102	;'f'
  3107  00FE30  61                 	db	97	;'a'
  3108  00FE31  69                 	db	105	;'i'
  3109  00FE32  6C                 	db	108	;'l'
  3110  00FE33  75                 	db	117	;'u'
  3111  00FE34  72                 	db	114	;'r'
  3112  00FE35  65                 	db	101	;'e'
  3113  00FE36  73                 	db	115	;'s'
  3114  00FE37  3A                 	db	58	;':'
  3115  00FE38  20                 	db	32
  3116  00FE39  0D                 	db	13
  3117  00FE3A  0A                 	db	10
  3118  00FE3B  00                 	db	0
  3119  00FE3C                     STR_114:
  3120  00FE3C  43                 	db	67	;'C'
  3121  00FE3D  4D                 	db	77	;'M'
  3122  00FE3E  44                 	db	68	;'D'
  3123  00FE3F  31                 	db	49	;'1'
  3124  00FE40  2C                 	db	44
  3125  00FE41  20                 	db	32
  3126  00FE42  49                 	db	73	;'I'
  3127  00FE43  6E                 	db	110	;'n'
  3128  00FE44  69                 	db	105	;'i'
  3129  00FE45  74                 	db	116	;'t'
  3130  00FE46  20                 	db	32
  3131  00FE47  52                 	db	82	;'R'
  3132  00FE48  65                 	db	101	;'e'
  3133  00FE49  73                 	db	115	;'s'
  3134  00FE4A  70                 	db	112	;'p'
  3135  00FE4B  6F                 	db	111	;'o'
  3136  00FE4C  6E                 	db	110	;'n'
  3137  00FE4D  73                 	db	115	;'s'
  3138  00FE4E  65                 	db	101	;'e'
  3139  00FE4F  3A                 	db	58	;':'
  3140  00FE50  20                 	db	32
  3141  00FE51  25                 	db	37
  3142  00FE52  78                 	db	120	;'x'
  3143  00FE53  0D                 	db	13
  3144  00FE54  0A                 	db	10
  3145  00FE55  00                 	db	0
  3146  00FE56                     STR_53:
  3147  00FE56  50                 	db	80	;'P'
  3148  00FE57  72                 	db	114	;'r'
  3149  00FE58  65                 	db	101	;'e'
  3150  00FE59  73                 	db	115	;'s'
  3151  00FE5A  73                 	db	115	;'s'
  3152  00FE5B  20                 	db	32
  3153  00FE5C  61                 	db	97	;'a'
  3154  00FE5D  6E                 	db	110	;'n'
  3155  00FE5E  79                 	db	121	;'y'
  3156  00FE5F  20                 	db	32
  3157  00FE60  6B                 	db	107	;'k'
  3158  00FE61  65                 	db	101	;'e'
  3159  00FE62  79                 	db	121	;'y'
  3160  00FE63  20                 	db	32
  3161  00FE64  74                 	db	116	;'t'
  3162  00FE65  6F                 	db	111	;'o'
  3163  00FE66  20                 	db	32
  3164  00FE67  73                 	db	115	;'s'
  3165  00FE68  74                 	db	116	;'t'
  3166  00FE69  61                 	db	97	;'a'
  3167  00FE6A  72                 	db	114	;'r'
  3168  00FE6B  74                 	db	116	;'t'
  3169  00FE6C  0D                 	db	13
  3170  00FE6D  0A                 	db	10
  3171  00FE6E  00                 	db	0
  3172  00FE6F                     STR_21:
  3173  00FE6F  69                 	db	105	;'i'
  3174  00FE70  3A                 	db	58	;':'
  3175  00FE71  20                 	db	32
  3176  00FE72  49                 	db	73	;'I'
  3177  00FE73  6E                 	db	110	;'n'
  3178  00FE74  69                 	db	105	;'i'
  3179  00FE75  74                 	db	116	;'t'
  3180  00FE76  69                 	db	105	;'i'
  3181  00FE77  61                 	db	97	;'a'
  3182  00FE78  6C                 	db	108	;'l'
  3183  00FE79  69                 	db	105	;'i'
  3184  00FE7A  7A                 	db	122	;'z'
  3185  00FE7B  65                 	db	101	;'e'
  3186  00FE7C  20                 	db	32
  3187  00FE7D  53                 	db	83	;'S'
  3188  00FE7E  44                 	db	68	;'D'
  3189  00FE7F  20                 	db	32
  3190  00FE80  63                 	db	99	;'c'
  3191  00FE81  61                 	db	97	;'a'
  3192  00FE82  72                 	db	114	;'r'
  3193  00FE83  64                 	db	100	;'d'
  3194  00FE84  0D                 	db	13
  3195  00FE85  0A                 	db	10
  3196  00FE86  00                 	db	0
  3197  00FE87                     STR_19:
  3198  00FE87  7A                 	db	122	;'z'
  3199  00FE88  3A                 	db	58	;':'
  3200  00FE89  20                 	db	32
  3201  00FE8A  43                 	db	67	;'C'
  3202  00FE8B  6C                 	db	108	;'l'
  3203  00FE8C  65                 	db	101	;'e'
  3204  00FE8D  61                 	db	97	;'a'
  3205  00FE8E  72                 	db	114	;'r'
  3206  00FE8F  20                 	db	32
  3207  00FE90  74                 	db	116	;'t'
  3208  00FE91  68                 	db	104	;'h'
  3209  00FE92  65                 	db	101	;'e'
  3210  00FE93  20                 	db	32
  3211  00FE94  74                 	db	116	;'t'
  3212  00FE95  65                 	db	101	;'e'
  3213  00FE96  72                 	db	114	;'r'
  3214  00FE97  6D                 	db	109	;'m'
  3215  00FE98  69                 	db	105	;'i'
  3216  00FE99  6E                 	db	110	;'n'
  3217  00FE9A  61                 	db	97	;'a'
  3218  00FE9B  6C                 	db	108	;'l'
  3219  00FE9C  0D                 	db	13
  3220  00FE9D  0A                 	db	10
  3221  00FE9E  00                 	db	0
  3222  00FE9F                     STR_36:
  3223  00FE9F  20                 	db	32
  3224  00FEA0  20                 	db	32
  3225  00FEA1  20                 	db	32
  3226  00FEA2  20                 	db	32
  3227  00FEA3  53                 	db	83	;'S'
  3228  00FEA4  74                 	db	116	;'t'
  3229  00FEA5  61                 	db	97	;'a'
  3230  00FEA6  74                 	db	116	;'t'
  3231  00FEA7  75                 	db	117	;'u'
  3232  00FEA8  73                 	db	115	;'s'
  3233  00FEA9  3A                 	db	58	;':'
  3234  00FEAA  20                 	db	32
  3235  00FEAB  20                 	db	32
  3236  00FEAC  20                 	db	32
  3237  00FEAD  20                 	db	32
  3238  00FEAE  20                 	db	32
  3239  00FEAF  25                 	db	37
  3240  00FEB0  30                 	db	48	;'0'
  3241  00FEB1  32                 	db	50	;'2'
  3242  00FEB2  78                 	db	120	;'x'
  3243  00FEB3  0D                 	db	13
  3244  00FEB4  0A                 	db	10
  3245  00FEB5  00                 	db	0
  3246  00FEB6                     STR_49:
  3247  00FEB6  53                 	db	83	;'S'
  3248  00FEB7  65                 	db	101	;'e'
  3249  00FEB8  6C                 	db	108	;'l'
  3250  00FEB9  65                 	db	101	;'e'
  3251  00FEBA  63                 	db	99	;'c'
  3252  00FEBB  74                 	db	116	;'t'
  3253  00FEBC  3A                 	db	58	;':'
  3254  00FEBD  20                 	db	32
  3255  00FEBE  20                 	db	32
  3256  00FEBF  20                 	db	32
  3257  00FEC0  20                 	db	32
  3258  00FEC1  20                 	db	32
  3259  00FEC2  4C                 	db	76	;'L'
  3260  00FEC3  6F                 	db	111	;'o'
  3261  00FEC4  67                 	db	103	;'g'
  3262  00FEC5  67                 	db	103	;'g'
  3263  00FEC6  69                 	db	105	;'i'
  3264  00FEC7  6E                 	db	110	;'n'
  3265  00FEC8  67                 	db	103	;'g'
  3266  00FEC9  0D                 	db	13
  3267  00FECA  0A                 	db	10
  3268  00FECB  00                 	db	0
  3269  00FECC                     STR_61:
  3270  00FECC  53                 	db	83	;'S'
  3271  00FECD  65                 	db	101	;'e'
  3272  00FECE  6C                 	db	108	;'l'
  3273  00FECF  65                 	db	101	;'e'
  3274  00FED0  63                 	db	99	;'c'
  3275  00FED1  74                 	db	116	;'t'
  3276  00FED2  3A                 	db	58	;':'
  3277  00FED3  20                 	db	32
  3278  00FED4  20                 	db	32
  3279  00FED5  20                 	db	32
  3280  00FED6  20                 	db	32
  3281  00FED7  20                 	db	32
  3282  00FED8  41                 	db	65	;'A'
  3283  00FED9  70                 	db	112	;'p'
  3284  00FEDA  70                 	db	112	;'p'
  3285  00FEDB  6C                 	db	108	;'l'
  3286  00FEDC  79                 	db	121	;'y'
  3287  00FEDD  20                 	db	32
  3288  00FEDE  0D                 	db	13
  3289  00FEDF  0A                 	db	10
  3290  00FEE0  00                 	db	0
  3291  00FEE1                     STR_2:
  3292  00FEE1  53                 	db	83	;'S'
  3293  00FEE2  44                 	db	68	;'D'
  3294  00FEE3  20                 	db	32
  3295  00FEE4  63                 	db	99	;'c'
  3296  00FEE5  61                 	db	97	;'a'
  3297  00FEE6  72                 	db	114	;'r'
  3298  00FEE7  64                 	db	100	;'d'
  3299  00FEE8  20                 	db	32
  3300  00FEE9  2B                 	db	43
  3301  00FEEA  20                 	db	32
  3302  00FEEB  70                 	db	112	;'p'
  3303  00FEEC  6C                 	db	108	;'l'
  3304  00FEED  61                 	db	97	;'a'
  3305  00FEEE  79                 	db	121	;'y'
  3306  00FEEF  62                 	db	98	;'b'
  3307  00FEF0  61                 	db	97	;'a'
  3308  00FEF1  63                 	db	99	;'c'
  3309  00FEF2  6B                 	db	107	;'k'
  3310  00FEF3  0D                 	db	13
  3311  00FEF4  0A                 	db	10
  3312  00FEF5  00                 	db	0
  3313  00FEF6                     STR_18:
  3314  00FEF6  5A                 	db	90	;'Z'
  3315  00FEF7  3A                 	db	58	;':'
  3316  00FEF8  20                 	db	32
  3317  00FEF9  52                 	db	82	;'R'
  3318  00FEFA  65                 	db	101	;'e'
  3319  00FEFB  73                 	db	115	;'s'
  3320  00FEFC  65                 	db	101	;'e'
  3321  00FEFD  74                 	db	116	;'t'
  3322  00FEFE  20                 	db	32
  3323  00FEFF  70                 	db	112	;'p'
  3324  00FF00  72                 	db	114	;'r'
  3325  00FF01  6F                 	db	111	;'o'
  3326  00FF02  63                 	db	99	;'c'
  3327  00FF03  65                 	db	101	;'e'
  3328  00FF04  73                 	db	115	;'s'
  3329  00FF05  73                 	db	115	;'s'
  3330  00FF06  6F                 	db	111	;'o'
  3331  00FF07  72                 	db	114	;'r'
  3332  00FF08  0D                 	db	13
  3333  00FF09  0A                 	db	10
  3334  00FF0A  00                 	db	0
  3335  00FF0B                     STR_14:
  3336  00FF0B  09                 	db	9
  3337  00FF0C  73                 	db	115	;'s'
  3338  00FF0D  61                 	db	97	;'a'
  3339  00FF0E  6D                 	db	109	;'m'
  3340  00FF0F  70                 	db	112	;'p'
  3341  00FF10  6C                 	db	108	;'l'
  3342  00FF11  65                 	db	101	;'e'
  3343  00FF12  20                 	db	32
  3344  00FF13  72                 	db	114	;'r'
  3345  00FF14  61                 	db	97	;'a'
  3346  00FF15  74                 	db	116	;'t'
  3347  00FF16  65                 	db	101	;'e'
  3348  00FF17  3A                 	db	58	;':'
  3349  00FF18  20                 	db	32
  3350  00FF19  25                 	db	37
  3351  00FF1A  64                 	db	100	;'d'
  3352  00FF1B  75                 	db	117	;'u'
  3353  00FF1C  73                 	db	115	;'s'
  3354  00FF1D  0D                 	db	13
  3355  00FF1E  0A                 	db	10
  3356  00FF1F  00                 	db	0
  3357  00FF20                     STR_63:
  3358  00FF20  44                 	db	68	;'D'
  3359  00FF21  65                 	db	101	;'e'
  3360  00FF22  63                 	db	99	;'c'
  3361  00FF23  72                 	db	114	;'r'
  3362  00FF24  65                 	db	101	;'e'
  3363  00FF25  61                 	db	97	;'a'
  3364  00FF26  73                 	db	115	;'s'
  3365  00FF27  65                 	db	101	;'e'
  3366  00FF28  64                 	db	100	;'d'
  3367  00FF29  20                 	db	32
  3368  00FF2A  61                 	db	97	;'a'
  3369  00FF2B  64                 	db	100	;'d'
  3370  00FF2C  64                 	db	100	;'d'
  3371  00FF2D  72                 	db	114	;'r'
  3372  00FF2E  65                 	db	101	;'e'
  3373  00FF2F  73                 	db	115	;'s'
  3374  00FF30  73                 	db	115	;'s'
  3375  00FF31  0D                 	db	13
  3376  00FF32  0A                 	db	10
  3377  00FF33  00                 	db	0
  3378  00FF34                     STR_65:
  3379  00FF34  49                 	db	73	;'I'
  3380  00FF35  6E                 	db	110	;'n'
  3381  00FF36  63                 	db	99	;'c'
  3382  00FF37  72                 	db	114	;'r'
  3383  00FF38  65                 	db	101	;'e'
  3384  00FF39  61                 	db	97	;'a'
  3385  00FF3A  73                 	db	115	;'s'
  3386  00FF3B  65                 	db	101	;'e'
  3387  00FF3C  64                 	db	100	;'d'
  3388  00FF3D  20                 	db	32
  3389  00FF3E  61                 	db	97	;'a'
  3390  00FF3F  64                 	db	100	;'d'
  3391  00FF40  64                 	db	100	;'d'
  3392  00FF41  72                 	db	114	;'r'
  3393  00FF42  65                 	db	101	;'e'
  3394  00FF43  73                 	db	115	;'s'
  3395  00FF44  73                 	db	115	;'s'
  3396  00FF45  0D                 	db	13
  3397  00FF46  0A                 	db	10
  3398  00FF47  00                 	db	0
  3399  00FF48                     STR_52:
  3400  00FF48  53                 	db	83	;'S'
  3401  00FF49  65                 	db	101	;'e'
  3402  00FF4A  6C                 	db	108	;'l'
  3403  00FF4B  65                 	db	101	;'e'
  3404  00FF4C  63                 	db	99	;'c'
  3405  00FF4D  74                 	db	116	;'t'
  3406  00FF4E  3A                 	db	58	;':'
  3407  00FF4F  20                 	db	32
  3408  00FF50  20                 	db	32
  3409  00FF51  20                 	db	32
  3410  00FF52  20                 	db	32
  3411  00FF53  20                 	db	32
  3412  00FF54  41                 	db	65	;'A'
  3413  00FF55  70                 	db	112	;'p'
  3414  00FF56  70                 	db	112	;'p'
  3415  00FF57  6C                 	db	108	;'l'
  3416  00FF58  79                 	db	121	;'y'
  3417  00FF59  0D                 	db	13
  3418  00FF5A  0A                 	db	10
  3419  00FF5B  00                 	db	0
  3420  00FF5C                     STR_66:
  3421  00FF5C  53                 	db	83	;'S'
  3422  00FF5D  44                 	db	68	;'D'
  3423  00FF5E  20                 	db	32
  3424  00FF5F  63                 	db	99	;'c'
  3425  00FF60  61                 	db	97	;'a'
  3426  00FF61  72                 	db	114	;'r'
  3427  00FF62  64                 	db	100	;'d'
  3428  00FF63  20                 	db	32
  3429  00FF64  61                 	db	97	;'a'
  3430  00FF65  64                 	db	100	;'d'
  3431  00FF66  64                 	db	100	;'d'
  3432  00FF67  72                 	db	114	;'r'
  3433  00FF68  65                 	db	101	;'e'
  3434  00FF69  73                 	db	115	;'s'
  3435  00FF6A  73                 	db	115	;'s'
  3436  00FF6B  3A                 	db	58	;':'
  3437  00FF6C  20                 	db	32
  3438  00FF6D  20                 	db	32
  3439  00FF6E  00                 	db	0
  3440  00FF6F                     STR_72:
  3441  00FF6F  55                 	db	85	;'U'
  3442  00FF70  6E                 	db	110	;'n'
  3443  00FF71  6B                 	db	107	;'k'
  3444  00FF72  6E                 	db	110	;'n'
  3445  00FF73  6F                 	db	111	;'o'
  3446  00FF74  77                 	db	119	;'w'
  3447  00FF75  6E                 	db	110	;'n'
  3448  00FF76  20                 	db	32
  3449  00FF77  6B                 	db	107	;'k'
  3450  00FF78  65                 	db	101	;'e'
  3451  00FF79  79                 	db	121	;'y'
  3452  00FF7A  20                 	db	32
  3453  00FF7B  25                 	db	37
  3454  00FF7C  63                 	db	99	;'c'
  3455  00FF7D  0D                 	db	13
  3456  00FF7E  0A                 	db	10
  3457  00FF7F  00                 	db	0
  3458  00FF80                     STR_73:
  3459  00FF80  20                 	db	32
  3460  00FF81  20                 	db	32
  3461  00FF82  20                 	db	32
  3462  00FF83  20                 	db	32
  3463  00FF84  41                 	db	65	;'A'
  3464  00FF85  64                 	db	100	;'d'
  3465  00FF86  64                 	db	100	;'d'
  3466  00FF87  72                 	db	114	;'r'
  3467  00FF88  65                 	db	101	;'e'
  3468  00FF89  73                 	db	115	;'s'
  3469  00FF8A  73                 	db	115	;'s'
  3470  00FF8B  3A                 	db	58	;':'
  3471  00FF8C  20                 	db	32
  3472  00FF8D  20                 	db	32
  3473  00FF8E  20                 	db	32
  3474  00FF8F  20                 	db	32
  3475  00FF90  00                 	db	0
  3476  00FF91                     STR_9:
  3477  00FF91  09                 	db	9
  3478  00FF92  73                 	db	115	;'s'
  3479  00FF93  64                 	db	100	;'d'
  3480  00FF94  43                 	db	67	;'C'
  3481  00FF95  61                 	db	97	;'a'
  3482  00FF96  72                 	db	114	;'r'
  3483  00FF97  64                 	db	100	;'d'
  3484  00FF98  41                 	db	65	;'A'
  3485  00FF99  64                 	db	100	;'d'
  3486  00FF9A  64                 	db	100	;'d'
  3487  00FF9B  72                 	db	114	;'r'
  3488  00FF9C  65                 	db	101	;'e'
  3489  00FF9D  73                 	db	115	;'s'
  3490  00FF9E  73                 	db	115	;'s'
  3491  00FF9F  3A                 	db	58	;':'
  3492  00FFA0  20                 	db	32
  3493  00FFA1  00                 	db	0
  3494  00FFA2                     STR_71:
  3495  00FFA2  52                 	db	82	;'R'
  3496  00FFA3  65                 	db	101	;'e'
  3497  00FFA4  61                 	db	97	;'a'
  3498  00FFA5  64                 	db	100	;'d'
  3499  00FFA6  20                 	db	32
  3500  00FFA7  62                 	db	98	;'b'
  3501  00FFA8  6C                 	db	108	;'l'
  3502  00FFA9  6F                 	db	111	;'o'
  3503  00FFAA  63                 	db	99	;'c'
  3504  00FFAB  6B                 	db	107	;'k'
  3505  00FFAC  3A                 	db	58	;':'
  3506  00FFAD  20                 	db	32
  3507  00FFAE  0D                 	db	13
  3508  00FFAF  0A                 	db	10
  3509  00FFB0  00                 	db	0
  3510  00FFB1                     STR_16:
  3511  00FFB1  3F                 	db	63	;'?'
  3512  00FFB2  3A                 	db	58	;':'
  3513  00FFB3  20                 	db	32
  3514  00FFB4  68                 	db	104	;'h'
  3515  00FFB5  65                 	db	101	;'e'
  3516  00FFB6  6C                 	db	108	;'l'
  3517  00FFB7  70                 	db	112	;'p'
  3518  00FFB8  20                 	db	32
  3519  00FFB9  6D                 	db	109	;'m'
  3520  00FFBA  65                 	db	101	;'e'
  3521  00FFBB  6E                 	db	110	;'n'
  3522  00FFBC  75                 	db	117	;'u'
  3523  00FFBD  0D                 	db	13
  3524  00FFBE  0A                 	db	10
  3525  00FFBF  00                 	db	0
  3526  00FFC0                     STR_1:
  3527  00FFC0  4C                 	db	76	;'L'
  3528  00FFC1  61                 	db	97	;'a'
  3529  00FFC2  62                 	db	98	;'b'
  3530  00FFC3  20                 	db	32
  3531  00FFC4  31                 	db	49	;'1'
  3532  00FFC5  30                 	db	48	;'0'
  3533  00FFC6  0D                 	db	13
  3534  00FFC7  0A                 	db	10
  3535  00FFC8  00                 	db	0
  3536  00FFC9                     STR_3:
  3537  00FFC9  44                 	db	68	;'D'
  3538  00FFCA  65                 	db	101	;'e'
  3539  00FFCB  76                 	db	118	;'v'
  3540  00FFCC  27                 	db	39
  3541  00FFCD  32                 	db	50	;'2'
  3542  00FFCE  31                 	db	49	;'1'
  3543  00FFCF  0D                 	db	13
  3544  00FFD0  0A                 	db	10
  3545  00FFD1  00                 	db	0
  3546  00FFD2                     STR_31:
  3547  00FFD2  6F                 	db	111	;'o'
  3548  00FFD3  3A                 	db	58	;':'
  3549  00FFD4  09                 	db	9
  3550  00FFD5  6F                 	db	111	;'o'
  3551  00FFD6  6B                 	db	107	;'k'
  3552  00FFD7  0D                 	db	13
  3553  00FFD8  0A                 	db	10
  3554  00FFD9  00                 	db	0
  3555  00FFDA                     STR_17:
  3556  00FFDA  6F                 	db	111	;'o'
  3557  00FFDB  3A                 	db	58	;':'
  3558  00FFDC  20                 	db	32
  3559  00FFDD  6B                 	db	107	;'k'
  3560  00FFDE  0D                 	db	13
  3561  00FFDF  0A                 	db	10
  3562  00FFE0  00                 	db	0
  3563  00FFE1                     STR_43:
  3564  00FFE1  25                 	db	37
  3565  00FFE2  30                 	db	48	;'0'
  3566  00FFE3  34                 	db	52	;'4'
  3567  00FFE4  78                 	db	120	;'x'
  3568  00FFE5  0D                 	db	13
  3569  00FFE6  0A                 	db	10
  3570  00FFE7  00                 	db	0
  3571  00FFE8                     STR_122:
  3572  00FFE8  25                 	db	37
  3573  00FFE9  30                 	db	48	;'0'
  3574  00FFEA  32                 	db	50	;'2'
  3575  00FFEB  78                 	db	120	;'x'
  3576  00FFEC  20                 	db	32
  3577  00FFED  00                 	db	0
  3578  00FFEE                     STR_10:
  3579  00FFEE  25                 	db	37
  3580  00FFEF  30                 	db	48	;'0'
  3581  00FFF0  34                 	db	52	;'4'
  3582  00FFF1  78                 	db	120	;'x'
  3583  00FFF2  00                 	db	0
  3584  00FFF3                     STR_116:
  3585  00FFF3  0D                 	db	13
  3586  00FFF4  0A                 	db	10
  3587  00FFF5  0A                 	db	10
  3588  00FFF6  00                 	db	0
  3589  00FFF7                     STR_120:
  3590  00FFF7  25                 	db	37
  3591  00FFF8  63                 	db	99	;'c'
  3592  00FFF9  00                 	db	0
  3593  00FFFA                     STR_5:
  3594  00FFFA  3E                 	db	62	;'>'
  3595  00FFFB  20                 	db	32
  3596  00FFFC  00                 	db	0
  3597  00FFFD                     STR_11:
  3598  00FFFD  3A                 	db	58	;':'
  3599  00FFFE  00                 	db	0
  3600  00FFFF  00                 	db	0	; dummy byte at the end
  3601  0000                     
  3602                           ; #config settings
  3603                           
  3604                           	psect	cinit
  3605  002FEC                     __pcinit:
  3606                           	callstack 0
  3607  002FEC                     start_initialization:
  3608                           	callstack 0
  3609  002FEC                     __initialization:
  3610                           	callstack 0
  3611                           
  3612                           ; Initialize objects allocated to BANK0 (2 bytes)
  3613                           ; load TBLPTR registers with __pidataBANK0
  3614  002FEC  0E1A               	movlw	low __pidataBANK0
  3615  002FEE  6EF6               	movwf	tblptrl,c
  3616  002FF0  0E37               	movlw	high __pidataBANK0
  3617  002FF2  6EF7               	movwf	tblptrh,c
  3618  002FF4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3619  002FF6  6EF8               	movwf	tblptru,c
  3620  002FF8  0009               	tblrd		*+	;fetch initializer
  3621  002FFA  CFF5 F0D5          	movff	tablat,__pdataBANK0
  3622  002FFE  0009               	tblrd		*+	;fetch initializer
  3623  003000  CFF5 F0D6          	movff	tablat,__pdataBANK0+1
  3624                           
  3625                           ; Initialize objects allocated to COMRAM (2 bytes)
  3626                           ; load TBLPTR registers with __pidataCOMRAM
  3627  003004  0E18               	movlw	low __pidataCOMRAM
  3628  003006  6EF6               	movwf	tblptrl,c
  3629  003008  0E37               	movlw	high __pidataCOMRAM
  3630  00300A  6EF7               	movwf	tblptrh,c
  3631  00300C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3632  00300E  6EF8               	movwf	tblptru,c
  3633  003010  0009               	tblrd		*+	;fetch initializer
  3634  003012  CFF5 F04A          	movff	tablat,__pdataCOMRAM
  3635  003016  0009               	tblrd		*+	;fetch initializer
  3636  003018  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
  3637                           
  3638                           ; Clear objects allocated to BIGRAM (2048 bytes)
  3639  00301C  EE01  F0D5         	lfsr	0,__pbssBIGRAM
  3640  003020  EE18 F000          	lfsr	1,2048
  3641  003024                     clear_0:
  3642  003024  6AEE               	clrf	postinc0,c
  3643  003026  50E5               	movf	postdec1,w,c
  3644  003028  50E1               	movf	fsr1l,w,c
  3645  00302A  E1FC               	bnz	clear_0
  3646  00302C  50E2               	movf	fsr1h,w,c
  3647  00302E  E1FA               	bnz	clear_0
  3648                           
  3649                           ; Clear objects allocated to BANK1 (160 bytes)
  3650  003030  EE01  F000         	lfsr	0,__pbssBANK1
  3651  003034  0EA0               	movlw	160
  3652  003036                     clear_1:
  3653  003036  6AEE               	clrf	postinc0,c
  3654  003038  06E8               	decf	wreg,f,c
  3655  00303A  E1FD               	bnz	clear_1
  3656                           
  3657                           ; Clear objects allocated to BANK0 (19 bytes)
  3658  00303C  EE00  F0C2         	lfsr	0,__pbssBANK0
  3659  003040  0E13               	movlw	19
  3660  003042                     clear_2:
  3661  003042  6AEE               	clrf	postinc0,c
  3662  003044  06E8               	decf	wreg,f,c
  3663  003046  E1FD               	bnz	clear_2
  3664                           
  3665                           ; Clear objects allocated to COMRAM (17 bytes)
  3666  003048  EE00  F039         	lfsr	0,__pbssCOMRAM
  3667  00304C  0E11               	movlw	17
  3668  00304E                     clear_3:
  3669  00304E  6AEE               	clrf	postinc0,c
  3670  003050  06E8               	decf	wreg,f,c
  3671  003052  E1FD               	bnz	clear_3
  3672  003054                     end_of_initialization:
  3673                           	callstack 0
  3674  003054                     __end_of__initialization:
  3675                           	callstack 0
  3676  003054  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3677  003056  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3678  003058  0100               	movlb	0
  3679  00305A  EF29  F000         	goto	_main	;jump to C main() function
  3680                           
  3681                           	psect	bssCOMRAM
  3682  000039                     __pbssCOMRAM:
  3683                           	callstack 0
  3684  000039                     _width:
  3685                           	callstack 0
  3686  000039                     	ds	2
  3687  00003B                     _prec:
  3688                           	callstack 0
  3689  00003B                     	ds	2
  3690  00003D                     _flags:
  3691                           	callstack 0
  3692  00003D                     	ds	2
  3693  00003F                     myTMR0ISR@bufferIndex:
  3694                           	callstack 0
  3695  00003F                     	ds	2
  3696  000041                     _timer0ReloadVal:
  3697                           	callstack 0
  3698  000041                     	ds	2
  3699  000043                     _TMR0_InterruptHandler:
  3700                           	callstack 0
  3701  000043                     	ds	2
  3702  000045                     myTMR0ISR@state:
  3703                           	callstack 0
  3704  000045                     	ds	1
  3705  000046                     _stopPlayback:
  3706                           	callstack 0
  3707  000046                     	ds	1
  3708  000047                     _stopCollect:
  3709                           	callstack 0
  3710  000047                     	ds	1
  3711  000048                     _startCollect:
  3712                           	callstack 0
  3713  000048                     	ds	1
  3714  000049                     _eusart1RxLastError:
  3715                           	callstack 0
  3716  000049                     	ds	1
  3717                           
  3718                           	psect	dataCOMRAM
  3719  00004A                     __pdataCOMRAM:
  3720                           	callstack 0
  3721  00004A                     myTMR0ISR@buffer:
  3722                           	callstack 0
  3723  00004A                     	ds	2
  3724                           
  3725                           	psect	bssBANK0
  3726  0000C2                     __pbssBANK0:
  3727                           	callstack 0
  3728  0000C2                     main@writeAddress:
  3729                           	callstack 0
  3730  0000C2                     	ds	4
  3731  0000C6                     _nout:
  3732                           	callstack 0
  3733  0000C6                     	ds	2
  3734  0000C8                     _ADC_InterruptHandler:
  3735                           	callstack 0
  3736  0000C8                     	ds	2
  3737  0000CA                     _EUSART1_ErrorHandler:
  3738                           	callstack 0
  3739  0000CA                     	ds	2
  3740  0000CC                     _EUSART1_OverrunErrorHandler:
  3741                           	callstack 0
  3742  0000CC                     	ds	2
  3743  0000CE                     _EUSART1_FramingErrorHandler:
  3744                           	callstack 0
  3745  0000CE                     	ds	2
  3746  0000D0                     main@sinIndex:
  3747                           	callstack 0
  3748  0000D0                     	ds	1
  3749  0000D1                     _doPlayback:
  3750                           	callstack 0
  3751  0000D1                     	ds	1
  3752  0000D2                     _collecting:
  3753                           	callstack 0
  3754  0000D2                     	ds	1
  3755  0000D3                     _buffer2Full:
  3756                           	callstack 0
  3757  0000D3                     	ds	1
  3758  0000D4                     _buffer1Full:
  3759                           	callstack 0
  3760  0000D4                     	ds	1
  3761                           
  3762                           	psect	dataBANK0
  3763  0000D5                     __pdataBANK0:
  3764                           	callstack 0
  3765  0000D5                     _sampleRate:
  3766                           	callstack 0
  3767  0000D5                     	ds	2
  3768                           
  3769                           	psect	bssBANK1
  3770  000100                     __pbssBANK1:
  3771                           	callstack 0
  3772  000100                     _writeFailureStatus:
  3773                           	callstack 0
  3774  000100                     	ds	128
  3775  000180                     _dbuf:
  3776                           	callstack 0
  3777  000180                     	ds	32
  3778                           
  3779                           	psect	bssBIGRAM
  3780  0001D5                     __pbssBIGRAM:
  3781                           	callstack 0
  3782  0001D5                     _writeFailureTable:
  3783                           	callstack 0
  3784  0001D5                     	ds	512
  3785  0003D5                     _sdCardBuffer2:
  3786                           	callstack 0
  3787  0003D5                     	ds	512
  3788  0005D5                     _sdCardBuffer1:
  3789                           	callstack 0
  3790  0005D5                     	ds	512
  3791  0007D5                     _sdCardBuffer:
  3792                           	callstack 0
  3793  0007D5                     	ds	512
  3794                           
  3795                           	psect	cstackBANK1
  3796  0001A0                     __pcstackBANK1:
  3797                           	callstack 0
  3798  0001A0                     	ds	1
  3799  0001A1                     main@numBlocks:
  3800                           	callstack 0
  3801                           
  3802                           ; 4 bytes @ 0x1
  3803  0001A1                     	ds	4
  3804  0001A5                     main@printVal:
  3805                           	callstack 0
  3806                           
  3807                           ; 2 bytes @ 0x5
  3808  0001A5                     	ds	2
  3809  0001A7                     main@printedBlocks:
  3810                           	callstack 0
  3811                           
  3812                           ; 4 bytes @ 0x7
  3813  0001A7                     	ds	4
  3814  0001AB                     main@addr:
  3815                           	callstack 0
  3816                           
  3817                           ; 4 bytes @ 0xB
  3818  0001AB                     	ds	4
  3819  0001AF                     main@endAddress:
  3820                           	callstack 0
  3821                           
  3822                           ; 4 bytes @ 0xF
  3823  0001AF                     	ds	4
  3824  0001B3                     main@i_1279:
  3825                           	callstack 0
  3826                           
  3827                           ; 2 bytes @ 0x13
  3828  0001B3                     	ds	2
  3829  0001B5                     main@i_1309:
  3830                           	callstack 0
  3831                           
  3832                           ; 2 bytes @ 0x15
  3833  0001B5                     	ds	2
  3834  0001B7                     main@i_1289:
  3835                           	callstack 0
  3836                           
  3837                           ; 1 bytes @ 0x17
  3838  0001B7                     	ds	1
  3839  0001B8                     main@address:
  3840                           	callstack 0
  3841                           
  3842                           ; 4 bytes @ 0x18
  3843  0001B8                     	ds	4
  3844  0001BC                     main@cmd:
  3845                           	callstack 0
  3846                           
  3847                           ; 1 bytes @ 0x1C
  3848  0001BC                     	ds	1
  3849  0001BD                     main@i:
  3850                           	callstack 0
  3851                           
  3852                           ; 2 bytes @ 0x1D
  3853  0001BD                     	ds	2
  3854  0001BF                     main@writeStartAddress:
  3855                           	callstack 0
  3856                           
  3857                           ; 4 bytes @ 0x1F
  3858  0001BF                     	ds	4
  3859  0001C3                     main@writeEndAddress:
  3860                           	callstack 0
  3861                           
  3862                           ; 4 bytes @ 0x23
  3863  0001C3                     	ds	4
  3864  0001C7                     main@readAddress:
  3865                           	callstack 0
  3866                           
  3867                           ; 4 bytes @ 0x27
  3868  0001C7                     	ds	4
  3869  0001CB                     main@sdCardAddress:
  3870                           	callstack 0
  3871                           
  3872                           ; 4 bytes @ 0x2B
  3873  0001CB                     	ds	4
  3874  0001CF                     main@failureIndex:
  3875                           	callstack 0
  3876                           
  3877                           ; 1 bytes @ 0x2F
  3878  0001CF                     	ds	1
  3879  0001D0                     main@status:
  3880                           	callstack 0
  3881                           
  3882                           ; 1 bytes @ 0x30
  3883  0001D0                     	ds	1
  3884  0001D1                     main@writeAddress_1285:
  3885                           	callstack 0
  3886                           
  3887                           ; 4 bytes @ 0x31
  3888  0001D1                     	ds	4
  3889                           
  3890                           	psect	cstackBANK0
  3891  000060                     __pcstackBANK0:
  3892                           	callstack 0
  3893  000060                     ?_dtoa:
  3894                           	callstack 0
  3895  000060                     ?_utoa:
  3896                           	callstack 0
  3897  000060                     ?_xtoa:
  3898                           	callstack 0
  3899  000060                     dtoa@fp:
  3900                           	callstack 0
  3901  000060                     utoa@fp:
  3902                           	callstack 0
  3903  000060                     xtoa@fp:
  3904                           	callstack 0
  3905                           
  3906                           ; 2 bytes @ 0x0
  3907  000060                     	ds	2
  3908  000062                     dtoa@d:
  3909                           	callstack 0
  3910  000062                     utoa@d:
  3911                           	callstack 0
  3912  000062                     xtoa@d:
  3913                           	callstack 0
  3914                           
  3915                           ; 8 bytes @ 0x2
  3916  000062                     	ds	8
  3917  00006A                     xtoa@x:
  3918                           	callstack 0
  3919  00006A                     _dtoa$1980:
  3920                           	callstack 0
  3921  00006A                     utoa@p:
  3922                           	callstack 0
  3923                           
  3924                           ; 2 bytes @ 0xA
  3925  00006A                     	ds	1
  3926  00006B                     _xtoa$1997:
  3927                           	callstack 0
  3928                           
  3929                           ; 2 bytes @ 0xB
  3930  00006B                     	ds	1
  3931  00006C                     dtoa@p:
  3932                           	callstack 0
  3933  00006C                     utoa@w:
  3934                           	callstack 0
  3935                           
  3936                           ; 2 bytes @ 0xC
  3937  00006C                     	ds	1
  3938  00006D                     _xtoa$1998:
  3939                           	callstack 0
  3940                           
  3941                           ; 2 bytes @ 0xD
  3942  00006D                     	ds	1
  3943  00006E                     dtoa@w:
  3944                           	callstack 0
  3945  00006E                     utoa@n:
  3946                           	callstack 0
  3947                           
  3948                           ; 8 bytes @ 0xE
  3949  00006E                     	ds	1
  3950  00006F                     xtoa@p:
  3951                           	callstack 0
  3952                           
  3953                           ; 2 bytes @ 0xF
  3954  00006F                     	ds	1
  3955  000070                     dtoa@s:
  3956                           	callstack 0
  3957                           
  3958                           ; 2 bytes @ 0x10
  3959  000070                     	ds	1
  3960  000071                     xtoa@w:
  3961                           	callstack 0
  3962                           
  3963                           ; 2 bytes @ 0x11
  3964  000071                     	ds	1
  3965  000072                     dtoa@n:
  3966                           	callstack 0
  3967                           
  3968                           ; 8 bytes @ 0x12
  3969  000072                     	ds	1
  3970  000073                     xtoa@n:
  3971                           	callstack 0
  3972                           
  3973                           ; 8 bytes @ 0x13
  3974  000073                     	ds	3
  3975  000076                     utoa@i:
  3976                           	callstack 0
  3977                           
  3978                           ; 2 bytes @ 0x16
  3979  000076                     	ds	4
  3980  00007A                     dtoa@i:
  3981                           	callstack 0
  3982                           
  3983                           ; 2 bytes @ 0x1A
  3984  00007A                     	ds	1
  3985  00007B                     xtoa@i:
  3986                           	callstack 0
  3987                           
  3988                           ; 2 bytes @ 0x1B
  3989  00007B                     	ds	2
  3990  00007D                     xtoa@c:
  3991                           	callstack 0
  3992                           
  3993                           ; 2 bytes @ 0x1D
  3994  00007D                     	ds	2
  3995  00007F                     ?_vfpfcnvrt:
  3996                           	callstack 0
  3997  00007F                     vfpfcnvrt@fp:
  3998                           	callstack 0
  3999                           
  4000                           ; 2 bytes @ 0x1F
  4001  00007F                     	ds	2
  4002  000081                     vfpfcnvrt@fmt:
  4003                           	callstack 0
  4004                           
  4005                           ; 2 bytes @ 0x21
  4006  000081                     	ds	2
  4007  000083                     vfpfcnvrt@ap:
  4008                           	callstack 0
  4009                           
  4010                           ; 2 bytes @ 0x23
  4011  000083                     	ds	2
  4012  000085                     ??_vfpfcnvrt:
  4013                           
  4014                           ; 1 bytes @ 0x25
  4015  000085                     	ds	4
  4016  000089                     vfpfcnvrt@ll:
  4017                           	callstack 0
  4018                           
  4019                           ; 8 bytes @ 0x29
  4020  000089                     	ds	8
  4021  000091                     vfpfcnvrt@done:
  4022                           	callstack 0
  4023                           
  4024                           ; 2 bytes @ 0x31
  4025  000091                     	ds	2
  4026  000093                     _vfpfcnvrt$2012:
  4027                           	callstack 0
  4028                           
  4029                           ; 2 bytes @ 0x33
  4030  000093                     	ds	2
  4031  000095                     vfpfcnvrt@llu:
  4032                           	callstack 0
  4033                           
  4034                           ; 8 bytes @ 0x35
  4035  000095                     	ds	8
  4036  00009D                     vfpfcnvrt@c:
  4037                           	callstack 0
  4038                           
  4039                           ; 1 bytes @ 0x3D
  4040  00009D                     	ds	1
  4041  00009E                     ?_vfprintf:
  4042                           	callstack 0
  4043  00009E                     vfprintf@fp:
  4044                           	callstack 0
  4045                           
  4046                           ; 2 bytes @ 0x3E
  4047  00009E                     	ds	2
  4048  0000A0                     vfprintf@fmt:
  4049                           	callstack 0
  4050                           
  4051                           ; 2 bytes @ 0x40
  4052  0000A0                     	ds	2
  4053  0000A2                     vfprintf@ap:
  4054                           	callstack 0
  4055                           
  4056                           ; 2 bytes @ 0x42
  4057  0000A2                     	ds	2
  4058  0000A4                     vfprintf@cfmt:
  4059                           	callstack 0
  4060                           
  4061                           ; 2 bytes @ 0x44
  4062  0000A4                     	ds	2
  4063  0000A6                     ?_printf:
  4064                           	callstack 0
  4065  0000A6                     printf@fmt:
  4066                           	callstack 0
  4067                           
  4068                           ; 2 bytes @ 0x46
  4069  0000A6                     	ds	12
  4070  0000B2                     printf@ap:
  4071                           	callstack 0
  4072                           
  4073                           ; 2 bytes @ 0x52
  4074  0000B2                     	ds	2
  4075  0000B4                     SDCARD_Initialize@i:
  4076                           	callstack 0
  4077  0000B4                     hexDumpBuffer@sdCardBuffer:
  4078                           	callstack 0
  4079  0000B4                     printAddress@address:
  4080                           	callstack 0
  4081                           
  4082                           ; 4 bytes @ 0x54
  4083  0000B4                     	ds	2
  4084  0000B6                     ??_hexDumpBuffer:
  4085  0000B6                     SDCARD_Initialize@verbose:
  4086                           	callstack 0
  4087                           
  4088                           ; 1 bytes @ 0x56
  4089  0000B6                     	ds	1
  4090  0000B7                     SDCARD_Initialize@response:
  4091                           	callstack 0
  4092                           
  4093                           ; 1 bytes @ 0x57
  4094  0000B7                     	ds	1
  4095  0000B8                     hexDumpBuffer@j:
  4096                           	callstack 0
  4097                           
  4098                           ; 2 bytes @ 0x58
  4099  0000B8                     	ds	2
  4100  0000BA                     hexDumpBuffer@j_1440:
  4101                           	callstack 0
  4102                           
  4103                           ; 2 bytes @ 0x5A
  4104  0000BA                     	ds	2
  4105  0000BC                     hexDumpBuffer@i:
  4106                           	callstack 0
  4107                           
  4108                           ; 2 bytes @ 0x5C
  4109  0000BC                     	ds	2
  4110  0000BE                     ??_main:
  4111                           
  4112                           ; 1 bytes @ 0x5E
  4113  0000BE                     	ds	4
  4114                           
  4115                           	psect	cstackCOMRAM
  4116  000001                     __pcstackCOMRAM:
  4117                           	callstack 0
  4118  000001                     ?_TMR0_ReadTimer:
  4119                           	callstack 0
  4120  000001                     EPWM1_LoadDutyValue@dutyValue:
  4121                           	callstack 0
  4122                           
  4123                           ; 2 bytes @ 0x0
  4124  000001                     	ds	2
  4125  000003                     ??_EPWM1_LoadDutyValue:
  4126  000003                     ??_TMR0_ReadTimer:
  4127                           
  4128                           ; 1 bytes @ 0x2
  4129  000003                     	ds	2
  4130  000005                     TMR0_ReadTimer@readVal:
  4131                           	callstack 0
  4132                           
  4133                           ; 2 bytes @ 0x4
  4134  000005                     	ds	2
  4135  000007                     TMR0_ReadTimer@readValLow:
  4136                           	callstack 0
  4137                           
  4138                           ; 1 bytes @ 0x6
  4139  000007                     	ds	1
  4140  000008                     TMR0_ReadTimer@readValHigh:
  4141                           	callstack 0
  4142                           
  4143                           ; 1 bytes @ 0x7
  4144  000008                     	ds	1
  4145  000009                     i2TMR0_WriteTimer@timerVal:
  4146                           	callstack 0
  4147                           
  4148                           ; 2 bytes @ 0x8
  4149  000009                     	ds	2
  4150  00000B                     ??_myTMR0ISR:
  4151  00000B                     
  4152                           ; 1 bytes @ 0xA
  4153  00000B                     	ds	2
  4154  00000D                     myTMR0ISR@mic:
  4155                           	callstack 0
  4156                           
  4157                           ; 2 bytes @ 0xC
  4158  00000D                     	ds	2
  4159  00000F                     myTMR0ISR@useBuffer1:
  4160                           	callstack 0
  4161                           
  4162                           ; 1 bytes @ 0xE
  4163  00000F                     	ds	1
  4164  000010                     ??_INTERRUPT_InterruptManager:
  4165                           
  4166                           ; 1 bytes @ 0xF
  4167  000010                     	ds	4
  4168  000014                     ??_SPI2_Open:
  4169  000014                     ?_strlen:
  4170                           	callstack 0
  4171  000014                     ?_isupper:
  4172                           	callstack 0
  4173  000014                     ?_isalpha:
  4174                           	callstack 0
  4175  000014                     ?_isdigit:
  4176                           	callstack 0
  4177  000014                     ?_isspace:
  4178                           	callstack 0
  4179  000014                     ?_islower:
  4180                           	callstack 0
  4181  000014                     ?___wmul:
  4182                           	callstack 0
  4183  000014                     ?_incrementAddress:
  4184                           	callstack 0
  4185  000014                     ?___aodiv:
  4186                           	callstack 0
  4187  000014                     ?___aomod:
  4188                           	callstack 0
  4189  000014                     ?___lodiv:
  4190                           	callstack 0
  4191  000014                     ?___lomod:
  4192                           	callstack 0
  4193  000014                     EUSART1_Write@txData:
  4194                           	callstack 0
  4195  000014                     SPI2_ExchangeByte@data:
  4196                           	callstack 0
  4197  000014                     EUSART1_SetFramingErrorHandler@interruptHandler:
  4198                           	callstack 0
  4199  000014                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  4200                           	callstack 0
  4201  000014                     EUSART1_SetErrorHandler@interruptHandler:
  4202                           	callstack 0
  4203  000014                     TMR0_WriteTimer@timerVal:
  4204                           	callstack 0
  4205  000014                     TMR0_SetInterruptHandler@InterruptHandler:
  4206                           	callstack 0
  4207  000014                     ___wmul@multiplier:
  4208                           	callstack 0
  4209  000014                     isalpha@c:
  4210                           	callstack 0
  4211  000014                     isdigit@c:
  4212                           	callstack 0
  4213  000014                     isspace@c:
  4214                           	callstack 0
  4215  000014                     isupper@c:
  4216                           	callstack 0
  4217  000014                     strlen@s:
  4218                           	callstack 0
  4219  000014                     islower@c:
  4220                           	callstack 0
  4221  000014                     incrementAddress@sdCardAddress:
  4222                           	callstack 0
  4223  000014                     ___aodiv@dividend:
  4224                           	callstack 0
  4225  000014                     ___aomod@dividend:
  4226                           	callstack 0
  4227  000014                     ___lodiv@dividend:
  4228                           	callstack 0
  4229  000014                     ___lomod@dividend:
  4230                           	callstack 0
  4231                           
  4232                           ; 8 bytes @ 0x13
  4233  000014                     	ds	1
  4234  000015                     putch@txData:
  4235                           	callstack 0
  4236  000015                     SPI2_Open@spi2UniqueConfiguration:
  4237                           	callstack 0
  4238  000015                     SDCARD_PollWriteComplete@status:
  4239                           	callstack 0
  4240  000015                     SDCARD_ReadBlock@addr:
  4241                           	callstack 0
  4242  000015                     SDCARD_WriteBlock@addr:
  4243                           	callstack 0
  4244                           
  4245                           ; 4 bytes @ 0x14
  4246  000015                     	ds	1
  4247  000016                     ??_isupper:
  4248  000016                     ??_isalpha:
  4249  000016                     ??_isdigit:
  4250  000016                     ??_isspace:
  4251  000016                     ??_islower:
  4252  000016                     ??_TMR0_Initialize:
  4253  000016                     ___wmul@multiplicand:
  4254                           	callstack 0
  4255  000016                     fputc@c:
  4256                           	callstack 0
  4257  000016                     strlen@a:
  4258                           	callstack 0
  4259                           
  4260                           ; 2 bytes @ 0x15
  4261  000016                     	ds	2
  4262  000018                     ___wmul@product:
  4263                           	callstack 0
  4264  000018                     fputc@fp:
  4265                           	callstack 0
  4266                           
  4267                           ; 2 bytes @ 0x17
  4268  000018                     	ds	1
  4269  000019                     SDCARD_ReadBlock@sdCardBuffer:
  4270                           	callstack 0
  4271  000019                     SDCARD_WriteBlock@sdCardBuffer:
  4272                           	callstack 0
  4273                           
  4274                           ; 2 bytes @ 0x18
  4275  000019                     	ds	1
  4276  00001A                     ??_fputc:
  4277  00001A                     ?_toupper:
  4278                           	callstack 0
  4279  00001A                     _isspace$2062:
  4280                           	callstack 0
  4281  00001A                     toupper@c:
  4282                           	callstack 0
  4283                           
  4284                           ; 2 bytes @ 0x19
  4285  00001A                     	ds	1
  4286  00001B                     ?_atoi:
  4287                           	callstack 0
  4288  00001B                     SDCARD_ReadBlock@i:
  4289                           	callstack 0
  4290  00001B                     SDCARD_WriteBlock@i:
  4291                           	callstack 0
  4292  00001B                     atoi@s:
  4293                           	callstack 0
  4294                           
  4295                           ; 2 bytes @ 0x1A
  4296  00001B                     	ds	1
  4297  00001C                     ??_toupper:
  4298  00001C                     ___aodiv@divisor:
  4299                           	callstack 0
  4300  00001C                     ___aomod@divisor:
  4301                           	callstack 0
  4302  00001C                     ___lodiv@divisor:
  4303                           	callstack 0
  4304  00001C                     ___lomod@divisor:
  4305                           	callstack 0
  4306                           
  4307                           ; 8 bytes @ 0x1B
  4308  00001C                     	ds	1
  4309  00001D                     ??_atoi:
  4310                           
  4311                           ; 1 bytes @ 0x1C
  4312  00001D                     	ds	2
  4313  00001F                     fputs@s:
  4314                           	callstack 0
  4315                           
  4316                           ; 2 bytes @ 0x1E
  4317  00001F                     	ds	1
  4318  000020                     _toupper$2111:
  4319                           	callstack 0
  4320                           
  4321                           ; 2 bytes @ 0x1F
  4322  000020                     	ds	1
  4323  000021                     atoi@neg:
  4324                           	callstack 0
  4325  000021                     fputs@fp:
  4326                           	callstack 0
  4327                           
  4328                           ; 2 bytes @ 0x20
  4329  000021                     	ds	2
  4330  000023                     fputs@c:
  4331                           	callstack 0
  4332  000023                     _atoi$2035:
  4333                           	callstack 0
  4334                           
  4335                           ; 2 bytes @ 0x22
  4336  000023                     	ds	1
  4337  000024                     ___aodiv@counter:
  4338                           	callstack 0
  4339  000024                     ___aomod@counter:
  4340                           	callstack 0
  4341  000024                     ___lomod@counter:
  4342                           	callstack 0
  4343  000024                     fputs@i:
  4344                           	callstack 0
  4345  000024                     ___lodiv@quotient:
  4346                           	callstack 0
  4347                           
  4348                           ; 8 bytes @ 0x23
  4349  000024                     	ds	1
  4350  000025                     ___aodiv@sign:
  4351                           	callstack 0
  4352  000025                     ___aomod@sign:
  4353                           	callstack 0
  4354  000025                     _atoi$2037:
  4355                           	callstack 0
  4356                           
  4357                           ; 2 bytes @ 0x24
  4358  000025                     	ds	1
  4359  000026                     ?_abs:
  4360                           	callstack 0
  4361  000026                     ?_pad:
  4362                           	callstack 0
  4363  000026                     pad@fp:
  4364                           	callstack 0
  4365  000026                     abs@a:
  4366                           	callstack 0
  4367  000026                     ___aodiv@quotient:
  4368                           	callstack 0
  4369                           
  4370                           ; 8 bytes @ 0x25
  4371  000026                     	ds	1
  4372  000027                     _atoi$2036:
  4373                           	callstack 0
  4374                           
  4375                           ; 1 bytes @ 0x26
  4376  000027                     	ds	1
  4377  000028                     ??_abs:
  4378  000028                     pad@buf:
  4379                           	callstack 0
  4380  000028                     atoi@n:
  4381                           	callstack 0
  4382                           
  4383                           ; 2 bytes @ 0x27
  4384  000028                     	ds	2
  4385  00002A                     pad@p:
  4386                           	callstack 0
  4387                           
  4388                           ; 2 bytes @ 0x29
  4389  00002A                     	ds	2
  4390  00002C                     ??_pad:
  4391  00002C                     ___lodiv@counter:
  4392                           	callstack 0
  4393                           
  4394                           ; 1 bytes @ 0x2B
  4395  00002C                     	ds	1
  4396  00002D                     pad@i:
  4397                           	callstack 0
  4398                           
  4399                           ; 2 bytes @ 0x2C
  4400  00002D                     	ds	2
  4401  00002F                     pad@w:
  4402                           	callstack 0
  4403                           
  4404                           ; 2 bytes @ 0x2E
  4405  00002F                     	ds	2
  4406  000031                     ??_dtoa:
  4407  000031                     ??_utoa:
  4408  000031                     ??_xtoa:
  4409  000031                     ?_ctoa:
  4410                           	callstack 0
  4411  000031                     ctoa@fp:
  4412                           	callstack 0
  4413                           
  4414                           ; 2 bytes @ 0x30
  4415  000031                     	ds	2
  4416  000033                     ctoa@c:
  4417                           	callstack 0
  4418                           
  4419                           ; 1 bytes @ 0x32
  4420  000033                     	ds	1
  4421  000034                     ctoa@w:
  4422                           	callstack 0
  4423                           
  4424                           ; 2 bytes @ 0x33
  4425  000034                     	ds	5
  4426  000039                     
  4427                           ; 1 bytes @ 0x38
  4428 ;;
  4429 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4430 ;;
  4431 ;; *************** function _main *****************
  4432 ;; Defined at:
  4433 ;;		line 60 in file "main.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;		None
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  addr            4   11[BANK1 ] unsigned long 
  4438 ;;  printVal        2    5[BANK1 ] unsigned short 
  4439 ;;  i               1   23[BANK1 ] unsigned char 
  4440 ;;  i               2   21[BANK1 ] unsigned short 
  4441 ;;  i               2   19[BANK1 ] unsigned short 
  4442 ;;  writeAddress    4   49[BANK1 ] unsigned long 
  4443 ;;  failureIndex    1   47[BANK1 ] unsigned char 
  4444 ;;  readAddress     4   39[BANK1 ] unsigned long 
  4445 ;;  address         4   24[BANK1 ] unsigned long 
  4446 ;;  endAddress      4   15[BANK1 ] unsigned long 
  4447 ;;  printedBlock    4    7[BANK1 ] unsigned long 
  4448 ;;  numBlocks       4    1[BANK1 ] unsigned long 
  4449 ;;  sdCardAddres    4   43[BANK1 ] unsigned long 
  4450 ;;  writeEndAddr    4   35[BANK1 ] unsigned long 
  4451 ;;  writeStartAd    4   31[BANK1 ] unsigned long 
  4452 ;;  i               2   29[BANK1 ] unsigned short 
  4453 ;;  status          1   48[BANK1 ] unsigned char 
  4454 ;;  cmd             1   28[BANK1 ] unsigned char 
  4455 ;;  letter          1    0        unsigned char 
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Locals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Totals:         0       4      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;Total ram usage:       57 bytes
  4470 ;; Hardware stack levels required when called:   14
  4471 ;; This function calls:
  4472 ;;		_EUSART1_Read
  4473 ;;		_EUSART1_is_rx_ready
  4474 ;;		_SDCARD_Initialize
  4475 ;;		_SDCARD_PollWriteComplete
  4476 ;;		_SDCARD_ReadBlock
  4477 ;;		_SDCARD_WriteBlock
  4478 ;;		_SPI2_Close
  4479 ;;		_SPI2_Open
  4480 ;;		_SYSTEM_Initialize
  4481 ;;		_TMR0_SetInterruptHandler
  4482 ;;		_TMR0_WriteTimer
  4483 ;;		_hexDumpBuffer
  4484 ;;		_incrementAddress
  4485 ;;		_printAddress
  4486 ;;		_printAscii
  4487 ;;		_printf
  4488 ;; This function is called by:
  4489 ;;		Startup code after reset
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text0
  4494  000052                     __ptext0:
  4495                           	callstack 0
  4496  000052                     _main:
  4497                           	callstack 17
  4498  000052                     
  4499                           ;main.c: 62:     uint8_t status;;main.c: 63:     uint16_t i;;main.c: 64:     uint32_t sd
      +                          CardAddress = 0x00000000;
  4500  000052  0E00               	movlw	0
  4501  000054  0101               	movlb	1	; () banked
  4502  000056  6FCB               	movwf	main@sdCardAddress& (0+255),b
  4503  000058  0E00               	movlw	0
  4504  00005A  6FCC               	movwf	(main@sdCardAddress+1)& (0+255),b
  4505  00005C  0E00               	movlw	0
  4506  00005E  6FCD               	movwf	(main@sdCardAddress+2)& (0+255),b
  4507  000060  0E00               	movlw	0
  4508  000062  6FCE               	movwf	(main@sdCardAddress+3)& (0+255),b
  4509                           
  4510                           ;main.c: 65:     uint32_t writeStartAddress = 0x00000000;
  4511  000064  0E00               	movlw	0
  4512  000066  6FBF               	movwf	main@writeStartAddress& (0+255),b
  4513  000068  0E00               	movlw	0
  4514  00006A  6FC0               	movwf	(main@writeStartAddress+1)& (0+255),b
  4515  00006C  0E00               	movlw	0
  4516  00006E  6FC1               	movwf	(main@writeStartAddress+2)& (0+255),b
  4517  000070  0E00               	movlw	0
  4518  000072  6FC2               	movwf	(main@writeStartAddress+3)& (0+255),b
  4519                           
  4520                           ;main.c: 66:     uint32_t writeEndAddress = 0x00000000;
  4521  000074  0E00               	movlw	0
  4522  000076  6FC3               	movwf	main@writeEndAddress& (0+255),b
  4523  000078  0E00               	movlw	0
  4524  00007A  6FC4               	movwf	(main@writeEndAddress+1)& (0+255),b
  4525  00007C  0E00               	movlw	0
  4526  00007E  6FC5               	movwf	(main@writeEndAddress+2)& (0+255),b
  4527  000080  0E00               	movlw	0
  4528  000082  6FC6               	movwf	(main@writeEndAddress+3)& (0+255),b
  4529  000084                     
  4530                           ; BSR set to: 1
  4531                           ;main.c: 71:     SYSTEM_Initialize();
  4532  000084  ECD4  F01A         	call	_SYSTEM_Initialize	;wreg free
  4533  000088  888A               	bsf	138,4,c	;volatile
  4534  00008A                     
  4535                           ;main.c: 75:     TMR0_WriteTimer(0x0000);
  4536  00008A  0E00               	movlw	0
  4537  00008C  6E15               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4538  00008E  0E00               	movlw	0
  4539  000090  6E14               	movwf	TMR0_WriteTimer@timerVal^0,c
  4540  000092  EC65  F01B         	call	_TMR0_WriteTimer	;wreg free
  4541  000096                     
  4542                           ;main.c: 76:     INTCONbits.TMR0IF = 0;
  4543  000096  94F2               	bcf	242,2,c	;volatile
  4544  000098                     l455:
  4545  000098  A4F2               	btfss	242,2,c	;volatile
  4546  00009A  EF51  F000         	goto	u5751
  4547  00009E  EF53  F000         	goto	u5750
  4548  0000A2                     u5751:
  4549  0000A2  EF4C  F000         	goto	l455
  4550  0000A6                     u5750:
  4551  0000A6                     
  4552                           ;main.c: 79:     TMR0_SetInterruptHandler(myTMR0ISR);
  4553  0000A6  0E16               	movlw	low _myTMR0ISR
  4554  0000A8  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4555  0000AA  0E1D               	movlw	high _myTMR0ISR
  4556  0000AC  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4557  0000AE  EC6A  F01B         	call	_TMR0_SetInterruptHandler	;wreg free
  4558  0000B2                     
  4559                           ;main.c: 81:     (INTCONbits.GIE = 1);
  4560  0000B2  8EF2               	bsf	242,7,c	;volatile
  4561  0000B4                     
  4562                           ;main.c: 82:     (INTCONbits.PEIE = 1);
  4563  0000B4  8CF2               	bsf	242,6,c	;volatile
  4564  0000B6                     
  4565                           ;main.c: 84:     printAscii();
  4566  0000B6  EC95  F010         	call	_printAscii	;wreg free
  4567  0000BA                     
  4568                           ;main.c: 86:     printf("Lab 10\r\n");
  4569  0000BA  0EC0               	movlw	low STR_1
  4570  0000BC  0100               	movlb	0	; () banked
  4571  0000BE  6FA6               	movwf	printf@fmt& (0+255),b
  4572  0000C0  0EFF               	movlw	high STR_1
  4573  0000C2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4574  0000C4  ECAC  F01A         	call	_printf	;wreg free
  4575  0000C8                     
  4576                           ;main.c: 87:     printf("SD card + playback\r\n");
  4577  0000C8  0EE1               	movlw	low STR_2
  4578  0000CA  0100               	movlb	0	; () banked
  4579  0000CC  6FA6               	movwf	printf@fmt& (0+255),b
  4580  0000CE  0EFE               	movlw	high STR_2
  4581  0000D0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4582  0000D2  ECAC  F01A         	call	_printf	;wreg free
  4583  0000D6                     
  4584                           ;main.c: 88:     printf("Dev'21\r\n");
  4585  0000D6  0EC9               	movlw	low STR_3
  4586  0000D8  0100               	movlb	0	; () banked
  4587  0000DA  6FA6               	movwf	printf@fmt& (0+255),b
  4588  0000DC  0EFF               	movlw	high STR_3
  4589  0000DE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4590  0000E0  ECAC  F01A         	call	_printf	;wreg free
  4591  0000E4                     
  4592                           ;main.c: 89:     printf("No configuration of development board\r\n");
  4593  0000E4  0E61               	movlw	low STR_4
  4594  0000E6  0100               	movlb	0	; () banked
  4595  0000E8  6FA6               	movwf	printf@fmt& (0+255),b
  4596  0000EA  0EFC               	movlw	high STR_4
  4597  0000EC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4598  0000EE  ECAC  F01A         	call	_printf	;wreg free
  4599  0000F2                     
  4600                           ;main.c: 91:     SPI2_Close();
  4601  0000F2  EC8A  F01B         	call	_SPI2_Close	;wreg free
  4602  0000F6                     
  4603                           ;main.c: 92:     SPI2_Open(SPI2_DEFAULT);
  4604  0000F6  0E00               	movlw	0
  4605  0000F8  ECC1  F016         	call	_SPI2_Open
  4606  0000FC                     l5931:
  4607                           
  4608                           ;main.c: 95:         printf("> ");
  4609  0000FC  0EFA               	movlw	low STR_5
  4610  0000FE  0100               	movlb	0	; () banked
  4611  000100  6FA6               	movwf	printf@fmt& (0+255),b
  4612  000102  0EFF               	movlw	high STR_5
  4613  000104  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4614  000106  ECAC  F01A         	call	_printf	;wreg free
  4615  00010A                     l5933:
  4616  00010A  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  4617  00010E  0900               	iorlw	0
  4618  000110  B4D8               	btfsc	status,2,c
  4619  000112  EF8D  F000         	goto	u5761
  4620  000116  EF8F  F000         	goto	u5760
  4621  00011A                     u5761:
  4622  00011A  EF85  F000         	goto	l5933
  4623  00011E                     u5760:
  4624  00011E                     
  4625                           ;main.c: 97:         cmd = EUSART1_Read();
  4626  00011E  ECC0  F01A         	call	_EUSART1_Read	;wreg free
  4627  000122  0101               	movlb	1	; () banked
  4628  000124  6FBC               	movwf	main@cmd& (0+255),b
  4629  000126                     
  4630                           ; BSR set to: 1
  4631                           ;main.c: 98:         printf("%c\r\n", cmd);
  4632  000126  0E7B               	movlw	low (STR_72+12)
  4633  000128  0100               	movlb	0	; () banked
  4634  00012A  6FA6               	movwf	printf@fmt& (0+255),b
  4635  00012C  0EFF               	movlw	high (STR_72+12)
  4636  00012E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4637  000130  C1BC  F0A8         	movff	main@cmd,?_printf+2
  4638  000134  6BA9               	clrf	(?_printf+3)& (0+255),b
  4639  000136  ECAC  F01A         	call	_printf	;wreg free
  4640                           
  4641                           ;main.c: 99:         switch (cmd) {
  4642  00013A  EF9F  F008         	goto	l6285
  4643  00013E                     l5939:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;main.c: 105:                 printf("\r\n----------------------------------------------
      +                          ---\r\n");
  4647  00013E  0E41               	movlw	low STR_7
  4648  000140  6FA6               	movwf	printf@fmt& (0+255),b
  4649  000142  0EFB               	movlw	high STR_7
  4650  000144  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4651  000146  ECAC  F01A         	call	_printf	;wreg free
  4652                           
  4653                           ;main.c: 106:                 printf("\tPlay length in blocks: %d\r\n", (writeEndAddress
      +                          -writeStartAddress)>>9);
  4654  00014A  0EB1               	movlw	low STR_8
  4655  00014C  0100               	movlb	0	; () banked
  4656  00014E  6FA6               	movwf	printf@fmt& (0+255),b
  4657  000150  0EFD               	movlw	high STR_8
  4658  000152  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4659  000154  0101               	movlb	1	; () banked
  4660  000156  51BF               	movf	main@writeStartAddress& (0+255),w,b
  4661  000158  5DC3               	subwf	main@writeEndAddress& (0+255),w,b
  4662  00015A  0100               	movlb	0	; () banked
  4663  00015C  6FBE               	movwf	??_main& (0+255),b
  4664  00015E  0101               	movlb	1	; () banked
  4665  000160  51C0               	movf	(main@writeStartAddress+1)& (0+255),w,b
  4666  000162  59C4               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  4667  000164  0100               	movlb	0	; () banked
  4668  000166  6FBF               	movwf	(??_main+1)& (0+255),b
  4669  000168  0101               	movlb	1	; () banked
  4670  00016A  51C1               	movf	(main@writeStartAddress+2)& (0+255),w,b
  4671  00016C  59C5               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  4672  00016E  0100               	movlb	0	; () banked
  4673  000170  6FC0               	movwf	(??_main+2)& (0+255),b
  4674  000172  0101               	movlb	1	; () banked
  4675  000174  51C2               	movf	(main@writeStartAddress+3)& (0+255),w,b
  4676  000176  59C6               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  4677  000178  0100               	movlb	0	; () banked
  4678  00017A  6FC1               	movwf	(??_main+3)& (0+255),b
  4679  00017C  0E0A               	movlw	10
  4680  00017E  EFC6  F000         	goto	u5770
  4681  000182                     u5775:
  4682  000182  90D8               	bcf	status,0,c
  4683  000184  33C1               	rrcf	(??_main+3)& (0+255),f,b
  4684  000186  33C0               	rrcf	(??_main+2)& (0+255),f,b
  4685  000188  33BF               	rrcf	(??_main+1)& (0+255),f,b
  4686  00018A  33BE               	rrcf	??_main& (0+255),f,b
  4687  00018C                     u5770:
  4688  00018C  2EE8               	decfsz	wreg,f,c
  4689  00018E  EFC1  F000         	goto	u5775
  4690  000192  C0BE  F0A8         	movff	??_main,?_printf+2
  4691  000196  C0BF  F0A9         	movff	??_main+1,?_printf+3
  4692  00019A  C0C0  F0AA         	movff	??_main+2,?_printf+4
  4693  00019E  C0C1  F0AB         	movff	??_main+3,?_printf+5
  4694  0001A2  ECAC  F01A         	call	_printf	;wreg free
  4695                           
  4696                           ;main.c: 107:                 printf("\tsdCardAddress: ");
  4697  0001A6  0E91               	movlw	low STR_9
  4698  0001A8  0100               	movlb	0	; () banked
  4699  0001AA  6FA6               	movwf	printf@fmt& (0+255),b
  4700  0001AC  0EFF               	movlw	high STR_9
  4701  0001AE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4702  0001B0  ECAC  F01A         	call	_printf	;wreg free
  4703                           
  4704                           ;main.c: 108:                 printf("%04x", sdCardAddress >> 16);
  4705  0001B4  0EEE               	movlw	low STR_10
  4706  0001B6  0100               	movlb	0	; () banked
  4707  0001B8  6FA6               	movwf	printf@fmt& (0+255),b
  4708  0001BA  0EFF               	movlw	high STR_10
  4709  0001BC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4710  0001BE  C1CD  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  4711  0001C2  C1CE  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  4712  0001C6  6BAA               	clrf	(?_printf+4)& (0+255),b
  4713  0001C8  6BAB               	clrf	(?_printf+5)& (0+255),b
  4714  0001CA  ECAC  F01A         	call	_printf	;wreg free
  4715                           
  4716                           ;main.c: 109:                 printf(":");
  4717  0001CE  0EFD               	movlw	low STR_11
  4718  0001D0  0100               	movlb	0	; () banked
  4719  0001D2  6FA6               	movwf	printf@fmt& (0+255),b
  4720  0001D4  0EFF               	movlw	high STR_11
  4721  0001D6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4722  0001D8  ECAC  F01A         	call	_printf	;wreg free
  4723                           
  4724                           ;main.c: 110:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  4725  0001DC  0EEE               	movlw	low STR_10
  4726  0001DE  0100               	movlb	0	; () banked
  4727  0001E0  6FA6               	movwf	printf@fmt& (0+255),b
  4728  0001E2  0EFF               	movlw	high STR_10
  4729  0001E4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4730  0001E6  0EFF               	movlw	255
  4731  0001E8  0101               	movlb	1	; () banked
  4732  0001EA  15CB               	andwf	main@sdCardAddress& (0+255),w,b
  4733  0001EC  0100               	movlb	0	; () banked
  4734  0001EE  6FA8               	movwf	(?_printf+2)& (0+255),b
  4735  0001F0  0EFF               	movlw	255
  4736  0001F2  0101               	movlb	1	; () banked
  4737  0001F4  15CC               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  4738  0001F6  0100               	movlb	0	; () banked
  4739  0001F8  6FA9               	movwf	(?_printf+3)& (0+255),b
  4740  0001FA  0E00               	movlw	0
  4741  0001FC  0101               	movlb	1	; () banked
  4742  0001FE  15CD               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  4743  000200  0100               	movlb	0	; () banked
  4744  000202  6FAA               	movwf	(?_printf+4)& (0+255),b
  4745  000204  0E00               	movlw	0
  4746  000206  0101               	movlb	1	; () banked
  4747  000208  15CE               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  4748  00020A  0100               	movlb	0	; () banked
  4749  00020C  6FAB               	movwf	(?_printf+5)& (0+255),b
  4750  00020E  ECAC  F01A         	call	_printf	;wreg free
  4751                           
  4752                           ;main.c: 111:                 printf("\r\n");
  4753  000212  0EAE               	movlw	low (STR_71+12)
  4754  000214  0100               	movlb	0	; () banked
  4755  000216  6FA6               	movwf	printf@fmt& (0+255),b
  4756  000218  0EFF               	movlw	high (STR_71+12)
  4757  00021A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4758  00021C  ECAC  F01A         	call	_printf	;wreg free
  4759                           
  4760                           ;main.c: 112:                 printf("\tsample rate: %dus\r\n", sampleRate / 16);
  4761  000220  0E0B               	movlw	low STR_14
  4762  000222  0100               	movlb	0	; () banked
  4763  000224  6FA6               	movwf	printf@fmt& (0+255),b
  4764  000226  0EFF               	movlw	high STR_14
  4765  000228  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4766  00022A  C0D5  F0BE         	movff	_sampleRate,??_main
  4767  00022E  C0D6  F0BF         	movff	_sampleRate+1,??_main+1
  4768  000232  0E04               	movlw	4
  4769  000234  6FC0               	movwf	(??_main+2)& (0+255),b
  4770  000236                     u5785:
  4771  000236  90D8               	bcf	status,0,c
  4772  000238  33BF               	rrcf	(??_main+1)& (0+255),f,b
  4773  00023A  33BE               	rrcf	??_main& (0+255),f,b
  4774  00023C  2FC0               	decfsz	(??_main+2)& (0+255),f,b
  4775  00023E  EF1B  F001         	goto	u5785
  4776  000242  C0BE  F0A8         	movff	??_main,?_printf+2
  4777  000246  C0BF  F0A9         	movff	??_main+1,?_printf+3
  4778  00024A  ECAC  F01A         	call	_printf	;wreg free
  4779                           
  4780                           ;main.c: 113:                 printf("-------------------------------------------------\
      +                          r\n");
  4781  00024E  0E43               	movlw	low (STR_7+2)
  4782  000250  0100               	movlb	0	; () banked
  4783  000252  6FA6               	movwf	printf@fmt& (0+255),b
  4784  000254  0EFB               	movlw	high (STR_7+2)
  4785  000256  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4786  000258  ECAC  F01A         	call	_printf	;wreg free
  4787                           
  4788                           ;main.c: 114:                 printf("?: help menu\r\n");
  4789  00025C  0EB1               	movlw	low STR_16
  4790  00025E  0100               	movlb	0	; () banked
  4791  000260  6FA6               	movwf	printf@fmt& (0+255),b
  4792  000262  0EFF               	movlw	high STR_16
  4793  000264  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4794  000266  ECAC  F01A         	call	_printf	;wreg free
  4795                           
  4796                           ;main.c: 115:                 printf("o: k\r\n");
  4797  00026A  0EDA               	movlw	low STR_17
  4798  00026C  0100               	movlb	0	; () banked
  4799  00026E  6FA6               	movwf	printf@fmt& (0+255),b
  4800  000270  0EFF               	movlw	high STR_17
  4801  000272  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4802  000274  ECAC  F01A         	call	_printf	;wreg free
  4803                           
  4804                           ;main.c: 116:                 printf("Z: Reset processor\r\n");
  4805  000278  0EF6               	movlw	low STR_18
  4806  00027A  0100               	movlb	0	; () banked
  4807  00027C  6FA6               	movwf	printf@fmt& (0+255),b
  4808  00027E  0EFE               	movlw	high STR_18
  4809  000280  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4810  000282  ECAC  F01A         	call	_printf	;wreg free
  4811                           
  4812                           ;main.c: 117:                 printf("z: Clear the terminal\r\n");
  4813  000286  0E87               	movlw	low STR_19
  4814  000288  0100               	movlb	0	; () banked
  4815  00028A  6FA6               	movwf	printf@fmt& (0+255),b
  4816  00028C  0EFE               	movlw	high STR_19
  4817  00028E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4818  000290  ECAC  F01A         	call	_printf	;wreg free
  4819                           
  4820                           ;main.c: 118:                 printf("-------------------------------------------------\
      +                          r\n");
  4821  000294  0E43               	movlw	low (STR_7+2)
  4822  000296  0100               	movlb	0	; () banked
  4823  000298  6FA6               	movwf	printf@fmt& (0+255),b
  4824  00029A  0EFB               	movlw	high (STR_7+2)
  4825  00029C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4826  00029E  ECAC  F01A         	call	_printf	;wreg free
  4827                           
  4828                           ;main.c: 119:                 printf("i: Initialize SD card\r\n");
  4829  0002A2  0E6F               	movlw	low STR_21
  4830  0002A4  0100               	movlb	0	; () banked
  4831  0002A6  6FA6               	movwf	printf@fmt& (0+255),b
  4832  0002A8  0EFE               	movlw	high STR_21
  4833  0002AA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4834  0002AC  ECAC  F01A         	call	_printf	;wreg free
  4835                           
  4836                           ;main.c: 120:                 printf("-------------------------------------------------\
      +                          r\n");
  4837  0002B0  0E43               	movlw	low (STR_7+2)
  4838  0002B2  0100               	movlb	0	; () banked
  4839  0002B4  6FA6               	movwf	printf@fmt& (0+255),b
  4840  0002B6  0EFB               	movlw	high (STR_7+2)
  4841  0002B8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4842  0002BA  ECAC  F01A         	call	_printf	;wreg free
  4843                           
  4844                           ;main.c: 121:                 printf("a/A decrease/increase read address\r\n");
  4845  0002BE  0EAE               	movlw	low STR_23
  4846  0002C0  0100               	movlb	0	; () banked
  4847  0002C2  6FA6               	movwf	printf@fmt& (0+255),b
  4848  0002C4  0EFC               	movlw	high STR_23
  4849  0002C6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4850  0002C8  ECAC  F01A         	call	_printf	;wreg free
  4851                           
  4852                           ;main.c: 122:                 printf("r: read a block of %d bytes from SD card\r\n", 512
      +                          );
  4853  0002CC  0E36               	movlw	low STR_24
  4854  0002CE  0100               	movlb	0	; () banked
  4855  0002D0  6FA6               	movwf	printf@fmt& (0+255),b
  4856  0002D2  0EFC               	movlw	high STR_24
  4857  0002D4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4858  0002D6  0E02               	movlw	2
  4859  0002D8  6FA9               	movwf	(?_printf+3)& (0+255),b
  4860  0002DA  0E00               	movlw	0
  4861  0002DC  6FA8               	movwf	(?_printf+2)& (0+255),b
  4862  0002DE  ECAC  F01A         	call	_printf	;wreg free
  4863                           
  4864                           ;main.c: 123:                 printf("1: write a perfect 26 value sine wave to the SD ca
      +                          rd\r\n", 512);
  4865  0002E2  0E0A               	movlw	low STR_25
  4866  0002E4  0100               	movlb	0	; () banked
  4867  0002E6  6FA6               	movwf	printf@fmt& (0+255),b
  4868  0002E8  0EFB               	movlw	high STR_25
  4869  0002EA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4870  0002EC  0E02               	movlw	2
  4871  0002EE  6FA9               	movwf	(?_printf+3)& (0+255),b
  4872  0002F0  0E00               	movlw	0
  4873  0002F2  6FA8               	movwf	(?_printf+2)& (0+255),b
  4874  0002F4  ECAC  F01A         	call	_printf	;wreg free
  4875                           
  4876                           ;main.c: 124:                 printf("-------------------------------------------------\
      +                          r\n");
  4877  0002F8  0E43               	movlw	low (STR_7+2)
  4878  0002FA  0100               	movlb	0	; () banked
  4879  0002FC  6FA6               	movwf	printf@fmt& (0+255),b
  4880  0002FE  0EFB               	movlw	high (STR_7+2)
  4881  000300  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4882  000302  ECAC  F01A         	call	_printf	;wreg free
  4883                           
  4884                           ;main.c: 125:                 printf("+/- Increase/Decrease the sample rate by 10 us\r\n
      +                          ");
  4885  000306  0EA9               	movlw	low STR_27
  4886  000308  0100               	movlb	0	; () banked
  4887  00030A  6FA6               	movwf	printf@fmt& (0+255),b
  4888  00030C  0EFB               	movlw	high STR_27
  4889  00030E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4890  000310  ECAC  F01A         	call	_printf	;wreg free
  4891                           
  4892                           ;main.c: 126:                 printf("W: Write microphone => SD card at 1600 us\r\n");
  4893  000314  0E0A               	movlw	low STR_28
  4894  000316  0100               	movlb	0	; () banked
  4895  000318  6FA6               	movwf	printf@fmt& (0+255),b
  4896  00031A  0EFC               	movlw	high STR_28
  4897  00031C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4898  00031E  ECAC  F01A         	call	_printf	;wreg free
  4899                           
  4900                           ;main.c: 127:                 printf("s: spool memory to a csv file\r\n");
  4901  000322  0E17               	movlw	low STR_29
  4902  000324  0100               	movlb	0	; () banked
  4903  000326  6FA6               	movwf	printf@fmt& (0+255),b
  4904  000328  0EFD               	movlw	high STR_29
  4905  00032A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4906  00032C  ECAC  F01A         	call	_printf	;wreg free
  4907                           
  4908                           ;main.c: 128:                 printf("-------------------------------------------------\
      +                          r\n");
  4909  000330  0E43               	movlw	low (STR_7+2)
  4910  000332  0100               	movlb	0	; () banked
  4911  000334  6FA6               	movwf	printf@fmt& (0+255),b
  4912  000336  0EFB               	movlw	high (STR_7+2)
  4913  000338  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4914  00033A  ECAC  F01A         	call	_printf	;wreg free
  4915                           
  4916                           ;main.c: 129:                 break;
  4917  00033E  EF7E  F000         	goto	l5931
  4918  000342                     l5941:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;main.c: 135:                 printf("o:	ok\r\n");
  4922  000342  0ED2               	movlw	low STR_31
  4923  000344  6FA6               	movwf	printf@fmt& (0+255),b
  4924  000346  0EFF               	movlw	high STR_31
  4925  000348  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4926  00034A  ECAC  F01A         	call	_printf	;wreg free
  4927                           
  4928                           ;main.c: 136:                 break;
  4929  00034E  EF7E  F000         	goto	l5931
  4930  000352                     l5943:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;main.c: 142:                 for (i = 0; i < 40; i++) printf("\n");
  4934  000352  0E00               	movlw	0
  4935  000354  0101               	movlb	1	; () banked
  4936  000356  6FBE               	movwf	(main@i+1)& (0+255),b
  4937  000358  0E00               	movlw	0
  4938  00035A  6FBD               	movwf	main@i& (0+255),b
  4939  00035C                     l5945:
  4940                           
  4941                           ; BSR set to: 1
  4942  00035C  51BE               	movf	(main@i+1)& (0+255),w,b
  4943  00035E  E109               	bnz	u5790
  4944  000360  0E28               	movlw	40
  4945  000362  5DBD               	subwf	main@i& (0+255),w,b
  4946  000364  A0D8               	btfss	status,0,c
  4947  000366  EFB7  F001         	goto	u5791
  4948  00036A  EFB9  F001         	goto	u5790
  4949  00036E                     u5791:
  4950  00036E  EFBB  F001         	goto	l5949
  4951  000372                     u5790:
  4952  000372  EFC7  F001         	goto	l468
  4953  000376                     l5949:
  4954                           
  4955                           ; BSR set to: 1
  4956  000376  0EF5               	movlw	low (STR_116+2)
  4957  000378  0100               	movlb	0	; () banked
  4958  00037A  6FA6               	movwf	printf@fmt& (0+255),b
  4959  00037C  0EFF               	movlw	high (STR_116+2)
  4960  00037E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4961  000380  ECAC  F01A         	call	_printf	;wreg free
  4962  000384  0101               	movlb	1	; () banked
  4963  000386  4BBD               	infsnz	main@i& (0+255),f,b
  4964  000388  2BBE               	incf	(main@i+1)& (0+255),f,b
  4965  00038A  EFAE  F001         	goto	l5945
  4966  00038E                     l468:
  4967                           
  4968                           ; BSR set to: 1
  4969  00038E  00FF               	reset		;# 
  4970                           
  4971                           ;main.c: 144:                 break;
  4972  000390  EF7E  F000         	goto	l5931
  4973  000394                     l5955:
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;main.c: 150:                 for (i = 0; i < 40; i++) printf("\n");
  4977  000394  0E00               	movlw	0
  4978  000396  0101               	movlb	1	; () banked
  4979  000398  6FBE               	movwf	(main@i+1)& (0+255),b
  4980  00039A  0E00               	movlw	0
  4981  00039C  6FBD               	movwf	main@i& (0+255),b
  4982  00039E                     l5957:
  4983                           
  4984                           ; BSR set to: 1
  4985  00039E  51BE               	movf	(main@i+1)& (0+255),w,b
  4986  0003A0  E109               	bnz	u5800
  4987  0003A2  0E28               	movlw	40
  4988  0003A4  5DBD               	subwf	main@i& (0+255),w,b
  4989  0003A6  A0D8               	btfss	status,0,c
  4990  0003A8  EFD8  F001         	goto	u5801
  4991  0003AC  EFDA  F001         	goto	u5800
  4992  0003B0                     u5801:
  4993  0003B0  EFDC  F001         	goto	l5961
  4994  0003B4                     u5800:
  4995  0003B4  EF7E  F000         	goto	l5931
  4996  0003B8                     l5961:
  4997                           
  4998                           ; BSR set to: 1
  4999  0003B8  0EF5               	movlw	low (STR_116+2)
  5000  0003BA  0100               	movlb	0	; () banked
  5001  0003BC  6FA6               	movwf	printf@fmt& (0+255),b
  5002  0003BE  0EFF               	movlw	high (STR_116+2)
  5003  0003C0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5004  0003C2  ECAC  F01A         	call	_printf	;wreg free
  5005  0003C6  0101               	movlb	1	; () banked
  5006  0003C8  4BBD               	infsnz	main@i& (0+255),f,b
  5007  0003CA  2BBE               	incf	(main@i+1)& (0+255),f,b
  5008  0003CC  EFCF  F001         	goto	l5957
  5009  0003D0                     l472:
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;main.c: 154:                 static uint8_t sinIndex = 0;;main.c: 155:                 
      +                          static uint32_t writeAddress = 0x00000000;;main.c: 156:                 writeStartAddres
      +                          s = sdCardAddress;
  5013  0003D0  C1CB  F1BF         	movff	main@sdCardAddress,main@writeStartAddress
  5014  0003D4  C1CC  F1C0         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5015  0003D8  C1CD  F1C1         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5016  0003DC  C1CE  F1C2         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5017  0003E0                     
  5018                           ; BSR set to: 0
  5019                           ;main.c: 161:                     for (uint16_t i = 0; i < 512; i++) {
  5020  0003E0  0E00               	movlw	0
  5021  0003E2  0101               	movlb	1	; () banked
  5022  0003E4  6FB4               	movwf	(main@i_1279+1)& (0+255),b
  5023  0003E6  0E00               	movlw	0
  5024  0003E8  6FB3               	movwf	main@i_1279& (0+255),b
  5025  0003EA                     l5969:
  5026                           
  5027                           ; BSR set to: 1
  5028  0003EA  0E02               	movlw	2
  5029  0003EC  5DB4               	subwf	(main@i_1279+1)& (0+255),w,b
  5030  0003EE  A0D8               	btfss	status,0,c
  5031  0003F0  EFFC  F001         	goto	u5811
  5032  0003F4  EFFE  F001         	goto	u5810
  5033  0003F8                     u5811:
  5034  0003F8  EF00  F002         	goto	l5973
  5035  0003FC                     u5810:
  5036  0003FC  EF25  F002         	goto	l5983
  5037  000400                     l5973:
  5038                           
  5039                           ; BSR set to: 1
  5040                           ;main.c: 162:                         sdCardBuffer[i] = sin[sinIndex];
  5041  000400  0E17               	movlw	low _sin
  5042  000402  0100               	movlb	0	; () banked
  5043  000404  25D0               	addwf	main@sinIndex& (0+255),w,b
  5044  000406  6EF6               	movwf	tblptrl,c
  5045  000408  6AF7               	clrf	tblptrh,c
  5046  00040A  0EF3               	movlw	high _sin
  5047  00040C  22F7               	addwfc	tblptrh,f,c
  5048  00040E                     	if	1	;There are 3 active tblptr bytes
  5049  00040E  6AF8               	clrf	tblptru,c
  5050  000410  0E00               	movlw	low (__mediumconst shr (0+16))
  5051  000412  22F8               	addwfc	tblptru,f,c
  5052  000414                     	endif
  5053  000414  0ED5               	movlw	low _sdCardBuffer
  5054  000416  0101               	movlb	1	; () banked
  5055  000418  25B3               	addwf	main@i_1279& (0+255),w,b
  5056  00041A  6ED9               	movwf	fsr2l,c
  5057  00041C  0E07               	movlw	high _sdCardBuffer
  5058  00041E  21B4               	addwfc	(main@i_1279+1)& (0+255),w,b
  5059  000420  6EDA               	movwf	fsr2h,c
  5060  000422  0008               	tblrd		*
  5061  000424  CFF5 FFDF          	movff	tablat,indf2
  5062  000428                     
  5063                           ; BSR set to: 1
  5064                           ;main.c: 163:                         if (++sinIndex >= sizeof(sin))
  5065  000428  0100               	movlb	0	; () banked
  5066  00042A  2BD0               	incf	main@sinIndex& (0+255),f,b
  5067  00042C  0E19               	movlw	25
  5068  00042E  65D0               	cpfsgt	main@sinIndex& (0+255),b
  5069  000430  EF1C  F002         	goto	u5821
  5070  000434  EF1E  F002         	goto	u5820
  5071  000438                     u5821:
  5072  000438  EF20  F002         	goto	l5979
  5073  00043C                     u5820:
  5074  00043C                     
  5075                           ; BSR set to: 0
  5076                           ;main.c: 164:                             sinIndex = 0;
  5077  00043C  0E00               	movlw	0
  5078  00043E  6FD0               	movwf	main@sinIndex& (0+255),b
  5079  000440                     l5979:
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;main.c: 165:                     }
  5083  000440  0101               	movlb	1	; () banked
  5084  000442  4BB3               	infsnz	main@i_1279& (0+255),f,b
  5085  000444  2BB4               	incf	(main@i_1279+1)& (0+255),f,b
  5086  000446  EFF5  F001         	goto	l5969
  5087  00044A                     l5983:
  5088                           
  5089                           ; BSR set to: 1
  5090                           ;main.c: 167:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer);
  5091  00044A  C0C2  F015         	movff	main@writeAddress,SDCARD_WriteBlock@addr
  5092  00044E  C0C3  F016         	movff	main@writeAddress+1,SDCARD_WriteBlock@addr+1
  5093  000452  C0C4  F017         	movff	main@writeAddress+2,SDCARD_WriteBlock@addr+2
  5094  000456  C0C5  F018         	movff	main@writeAddress+3,SDCARD_WriteBlock@addr+3
  5095  00045A  0ED5               	movlw	low _sdCardBuffer
  5096  00045C  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5097  00045E  0E07               	movlw	high _sdCardBuffer
  5098  000460  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5099  000462  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5100  000466                     l5985:
  5101  000466  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5102  00046A  0101               	movlb	1	; () banked
  5103  00046C  6FD0               	movwf	main@status& (0+255),b
  5104  00046E  29D0               	incf	main@status& (0+255),w,b
  5105  000470  B4D8               	btfsc	status,2,c
  5106  000472  EF3D  F002         	goto	u5831
  5107  000476  EF3F  F002         	goto	u5830
  5108  00047A                     u5831:
  5109  00047A  EF33  F002         	goto	l5985
  5110  00047E                     u5830:
  5111  00047E                     
  5112                           ; BSR set to: 1
  5113                           ;main.c: 171:                     writeAddress = incrementAddress(writeAddress);
  5114  00047E  C0C2  F014         	movff	main@writeAddress,incrementAddress@sdCardAddress
  5115  000482  C0C3  F015         	movff	main@writeAddress+1,incrementAddress@sdCardAddress+1
  5116  000486  C0C4  F016         	movff	main@writeAddress+2,incrementAddress@sdCardAddress+2
  5117  00048A  C0C5  F017         	movff	main@writeAddress+3,incrementAddress@sdCardAddress+3
  5118  00048E  EC1C  F019         	call	_incrementAddress	;wreg free
  5119  000492  C014  F0C2         	movff	?_incrementAddress,main@writeAddress
  5120  000496  C015  F0C3         	movff	?_incrementAddress+1,main@writeAddress+1
  5121  00049A  C016  F0C4         	movff	?_incrementAddress+2,main@writeAddress+2
  5122  00049E  C017  F0C5         	movff	?_incrementAddress+3,main@writeAddress+3
  5123  0004A2                     
  5124                           ;main.c: 176:                 writeEndAddress = writeAddress;
  5125  0004A2  C0C2  F1C3         	movff	main@writeAddress,main@writeEndAddress
  5126  0004A6  C0C3  F1C4         	movff	main@writeAddress+1,main@writeEndAddress+1
  5127  0004AA  C0C4  F1C5         	movff	main@writeAddress+2,main@writeEndAddress+2
  5128  0004AE  C0C5  F1C6         	movff	main@writeAddress+3,main@writeEndAddress+3
  5129  0004B2                     
  5130                           ;main.c: 178:                 printf("Write block sin wave values:\r\n");
  5131  0004B2  0E37               	movlw	low STR_34
  5132  0004B4  0100               	movlb	0	; () banked
  5133  0004B6  6FA6               	movwf	printf@fmt& (0+255),b
  5134  0004B8  0EFD               	movlw	high STR_34
  5135  0004BA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5136  0004BC  ECAC  F01A         	call	_printf	;wreg free
  5137  0004C0                     
  5138                           ;main.c: 179:                 printf("Amount of blocks stored: %d\r\n", (writeEndAddress
      +                           - writeStartAddress)>>9);
  5139  0004C0  0E75               	movlw	low STR_35
  5140  0004C2  0100               	movlb	0	; () banked
  5141  0004C4  6FA6               	movwf	printf@fmt& (0+255),b
  5142  0004C6  0EFD               	movlw	high STR_35
  5143  0004C8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5144  0004CA  0101               	movlb	1	; () banked
  5145  0004CC  51BF               	movf	main@writeStartAddress& (0+255),w,b
  5146  0004CE  5DC3               	subwf	main@writeEndAddress& (0+255),w,b
  5147  0004D0  0100               	movlb	0	; () banked
  5148  0004D2  6FBE               	movwf	??_main& (0+255),b
  5149  0004D4  0101               	movlb	1	; () banked
  5150  0004D6  51C0               	movf	(main@writeStartAddress+1)& (0+255),w,b
  5151  0004D8  59C4               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  5152  0004DA  0100               	movlb	0	; () banked
  5153  0004DC  6FBF               	movwf	(??_main+1)& (0+255),b
  5154  0004DE  0101               	movlb	1	; () banked
  5155  0004E0  51C1               	movf	(main@writeStartAddress+2)& (0+255),w,b
  5156  0004E2  59C5               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  5157  0004E4  0100               	movlb	0	; () banked
  5158  0004E6  6FC0               	movwf	(??_main+2)& (0+255),b
  5159  0004E8  0101               	movlb	1	; () banked
  5160  0004EA  51C2               	movf	(main@writeStartAddress+3)& (0+255),w,b
  5161  0004EC  59C6               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  5162  0004EE  0100               	movlb	0	; () banked
  5163  0004F0  6FC1               	movwf	(??_main+3)& (0+255),b
  5164  0004F2  0E0A               	movlw	10
  5165  0004F4  EF81  F002         	goto	u5840
  5166  0004F8                     u5845:
  5167  0004F8  90D8               	bcf	status,0,c
  5168  0004FA  33C1               	rrcf	(??_main+3)& (0+255),f,b
  5169  0004FC  33C0               	rrcf	(??_main+2)& (0+255),f,b
  5170  0004FE  33BF               	rrcf	(??_main+1)& (0+255),f,b
  5171  000500  33BE               	rrcf	??_main& (0+255),f,b
  5172  000502                     u5840:
  5173  000502  2EE8               	decfsz	wreg,f,c
  5174  000504  EF7C  F002         	goto	u5845
  5175  000508  C0BE  F0A8         	movff	??_main,?_printf+2
  5176  00050C  C0BF  F0A9         	movff	??_main+1,?_printf+3
  5177  000510  C0C0  F0AA         	movff	??_main+2,?_printf+4
  5178  000514  C0C1  F0AB         	movff	??_main+3,?_printf+5
  5179  000518  ECAC  F01A         	call	_printf	;wreg free
  5180  00051C                     
  5181                           ;main.c: 180:                 printAddress(writeStartAddress);
  5182  00051C  C1BF  F0B4         	movff	main@writeStartAddress,printAddress@address
  5183  000520  C1C0  F0B5         	movff	main@writeStartAddress+1,printAddress@address+1
  5184  000524  C1C1  F0B6         	movff	main@writeStartAddress+2,printAddress@address+2
  5185  000528  C1C2  F0B7         	movff	main@writeStartAddress+3,printAddress@address+3
  5186  00052C  EC2F  F018         	call	_printAddress	;wreg free
  5187  000530                     
  5188                           ;main.c: 181:                 printAddress(writeEndAddress);
  5189  000530  C1C3  F0B4         	movff	main@writeEndAddress,printAddress@address
  5190  000534  C1C4  F0B5         	movff	main@writeEndAddress+1,printAddress@address+1
  5191  000538  C1C5  F0B6         	movff	main@writeEndAddress+2,printAddress@address+2
  5192  00053C  C1C6  F0B7         	movff	main@writeEndAddress+3,printAddress@address+3
  5193  000540  EC2F  F018         	call	_printAddress	;wreg free
  5194  000544                     
  5195                           ;main.c: 182:                 printf("    Status:     %02x\r\n", status);
  5196  000544  0E9F               	movlw	low STR_36
  5197  000546  0100               	movlb	0	; () banked
  5198  000548  6FA6               	movwf	printf@fmt& (0+255),b
  5199  00054A  0EFE               	movlw	high STR_36
  5200  00054C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5201  00054E  C1D0  F0A8         	movff	main@status,?_printf+2
  5202  000552  6BA9               	clrf	(?_printf+3)& (0+255),b
  5203  000554  ECAC  F01A         	call	_printf	;wreg free
  5204                           
  5205                           ;main.c: 183:             };main.c: 184:                 break;
  5206  000558  EF7E  F000         	goto	l5931
  5207  00055C                     l6001:
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;main.c: 187:                 sampleRate = sampleRate + 160;
  5211  00055C  0EA0               	movlw	160
  5212  00055E  25D5               	addwf	_sampleRate& (0+255),w,b
  5213  000560  6FD5               	movwf	_sampleRate& (0+255),b
  5214  000562  0E00               	movlw	0
  5215  000564  21D6               	addwfc	(_sampleRate+1)& (0+255),w,b
  5216  000566  6FD6               	movwf	(_sampleRate+1)& (0+255),b
  5217                           
  5218                           ;main.c: 188:                 break;
  5219  000568  EF7E  F000         	goto	l5931
  5220  00056C                     l6003:
  5221                           
  5222                           ; BSR set to: 0
  5223                           ;main.c: 191:                 if (sampleRate > 320 ) {
  5224  00056C  0E41               	movlw	65
  5225  00056E  5DD5               	subwf	_sampleRate& (0+255),w,b
  5226  000570  0E01               	movlw	1
  5227  000572  59D6               	subwfb	(_sampleRate+1)& (0+255),w,b
  5228  000574  A0D8               	btfss	status,0,c
  5229  000576  EFBF  F002         	goto	u5851
  5230  00057A  EFC1  F002         	goto	u5850
  5231  00057E                     u5851:
  5232  00057E  EF7E  F000         	goto	l5931
  5233  000582                     u5850:
  5234  000582                     
  5235                           ; BSR set to: 0
  5236                           ;main.c: 192:                     sampleRate = sampleRate - 160;
  5237  000582  0E60               	movlw	96
  5238  000584  25D5               	addwf	_sampleRate& (0+255),w,b
  5239  000586  6FD5               	movwf	_sampleRate& (0+255),b
  5240  000588  0EFF               	movlw	255
  5241  00058A  21D6               	addwfc	(_sampleRate+1)& (0+255),w,b
  5242  00058C  6FD6               	movwf	(_sampleRate+1)& (0+255),b
  5243                           
  5244                           ;main.c: 193:                 } else {
  5245  00058E  EF7E  F000         	goto	l5931
  5246  000592                     l487:
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;main.c: 199:                 uint32_t readAddress = writeStartAddress;
  5250  000592  C1BF  F1C7         	movff	main@writeStartAddress,main@readAddress
  5251  000596  C1C0  F1C8         	movff	main@writeStartAddress+1,main@readAddress+1
  5252  00059A  C1C1  F1C9         	movff	main@writeStartAddress+2,main@readAddress+2
  5253  00059E  C1C2  F1CA         	movff	main@writeStartAddress+3,main@readAddress+3
  5254  0005A2                     
  5255                           ; BSR set to: 0
  5256                           ;main.c: 200:                 buffer1Full = 0;
  5257  0005A2  0E00               	movlw	0
  5258  0005A4  6FD4               	movwf	_buffer1Full& (0+255),b
  5259                           
  5260                           ;main.c: 201:                 buffer2Full = 0;
  5261  0005A6  0E00               	movlw	0
  5262  0005A8  6FD3               	movwf	_buffer2Full& (0+255),b
  5263                           
  5264                           ;main.c: 202:                 doPlayback = 1;
  5265  0005AA  0E01               	movlw	1
  5266  0005AC  6FD1               	movwf	_doPlayback& (0+255),b
  5267                           
  5268                           ;main.c: 203:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5269  0005AE  EF46  F003         	goto	l6029
  5270  0005B2                     l6009:
  5271  0005B2  0100               	movlb	0	; () banked
  5272  0005B4  51D4               	movf	_buffer1Full& (0+255),w,b
  5273  0005B6  A4D8               	btfss	status,2,c
  5274  0005B8  EFE0  F002         	goto	u5861
  5275  0005BC  EFE2  F002         	goto	u5860
  5276  0005C0                     u5861:
  5277  0005C0  EFD9  F002         	goto	l6009
  5278  0005C4                     u5860:
  5279  0005C4                     
  5280                           ; BSR set to: 0
  5281                           ;main.c: 205:                     SDCARD_ReadBlock(readAddress, sdCardBuffer1);
  5282  0005C4  C1C7  F015         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5283  0005C8  C1C8  F016         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5284  0005CC  C1C9  F017         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5285  0005D0  C1CA  F018         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5286  0005D4  0ED5               	movlw	low _sdCardBuffer1
  5287  0005D6  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5288  0005D8  0E05               	movlw	high _sdCardBuffer1
  5289  0005DA  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5290  0005DC  EC17  F017         	call	_SDCARD_ReadBlock	;wreg free
  5291  0005E0                     
  5292                           ;main.c: 206:                     buffer1Full = 1;
  5293  0005E0  0E01               	movlw	1
  5294  0005E2  0100               	movlb	0	; () banked
  5295  0005E4  6FD4               	movwf	_buffer1Full& (0+255),b
  5296  0005E6                     
  5297                           ; BSR set to: 0
  5298                           ;main.c: 207:                     readAddress = incrementAddress(readAddress);
  5299  0005E6  C1C7  F014         	movff	main@readAddress,incrementAddress@sdCardAddress
  5300  0005EA  C1C8  F015         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5301  0005EE  C1C9  F016         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5302  0005F2  C1CA  F017         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5303  0005F6  EC1C  F019         	call	_incrementAddress	;wreg free
  5304  0005FA  C014  F1C7         	movff	?_incrementAddress,main@readAddress
  5305  0005FE  C015  F1C8         	movff	?_incrementAddress+1,main@readAddress+1
  5306  000602  C016  F1C9         	movff	?_incrementAddress+2,main@readAddress+2
  5307  000606  C017  F1CA         	movff	?_incrementAddress+3,main@readAddress+3
  5308  00060A                     
  5309                           ;main.c: 208:                     if (readAddress == writeEndAddress)
  5310  00060A  0101               	movlb	1	; () banked
  5311  00060C  51C3               	movf	main@writeEndAddress& (0+255),w,b
  5312  00060E  19C7               	xorwf	main@readAddress& (0+255),w,b
  5313  000610  E10D               	bnz	u5871
  5314  000612  51C4               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5315  000614  19C8               	xorwf	(main@readAddress+1)& (0+255),w,b
  5316  000616  E10A               	bnz	u5871
  5317  000618  51C5               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5318  00061A  19C9               	xorwf	(main@readAddress+2)& (0+255),w,b
  5319  00061C  E107               	bnz	u5871
  5320  00061E  51C6               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5321  000620  19CA               	xorwf	(main@readAddress+3)& (0+255),w,b
  5322  000622  A4D8               	btfss	status,2,c
  5323  000624  EF16  F003         	goto	u5871
  5324  000628  EF18  F003         	goto	u5870
  5325  00062C                     u5871:
  5326  00062C  EF1A  F003         	goto	l6021
  5327  000630                     u5870:
  5328  000630  EF63  F003         	goto	l6033
  5329  000634                     l6021:
  5330  000634  0100               	movlb	0	; () banked
  5331  000636  51D3               	movf	_buffer2Full& (0+255),w,b
  5332  000638  A4D8               	btfss	status,2,c
  5333  00063A  EF21  F003         	goto	u5881
  5334  00063E  EF23  F003         	goto	u5880
  5335  000642                     u5881:
  5336  000642  EF1A  F003         	goto	l6021
  5337  000646                     u5880:
  5338  000646                     
  5339                           ; BSR set to: 0
  5340                           ;main.c: 211:                     SDCARD_ReadBlock(readAddress, sdCardBuffer2);
  5341  000646  C1C7  F015         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5342  00064A  C1C8  F016         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5343  00064E  C1C9  F017         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5344  000652  C1CA  F018         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5345  000656  0ED5               	movlw	low _sdCardBuffer2
  5346  000658  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5347  00065A  0E03               	movlw	high _sdCardBuffer2
  5348  00065C  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5349  00065E  EC17  F017         	call	_SDCARD_ReadBlock	;wreg free
  5350  000662                     
  5351                           ;main.c: 212:                     buffer2Full = 1;
  5352  000662  0E01               	movlw	1
  5353  000664  0100               	movlb	0	; () banked
  5354  000666  6FD3               	movwf	_buffer2Full& (0+255),b
  5355  000668                     
  5356                           ; BSR set to: 0
  5357                           ;main.c: 213:                     readAddress = incrementAddress(readAddress);
  5358  000668  C1C7  F014         	movff	main@readAddress,incrementAddress@sdCardAddress
  5359  00066C  C1C8  F015         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5360  000670  C1C9  F016         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5361  000674  C1CA  F017         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5362  000678  EC1C  F019         	call	_incrementAddress	;wreg free
  5363  00067C  C014  F1C7         	movff	?_incrementAddress,main@readAddress
  5364  000680  C015  F1C8         	movff	?_incrementAddress+1,main@readAddress+1
  5365  000684  C016  F1C9         	movff	?_incrementAddress+2,main@readAddress+2
  5366  000688  C017  F1CA         	movff	?_incrementAddress+3,main@readAddress+3
  5367  00068C                     l6029:
  5368                           
  5369                           ;main.c: 203:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5370  00068C  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5371  000690  0900               	iorlw	0
  5372  000692  A4D8               	btfss	status,2,c
  5373  000694  EF4E  F003         	goto	u5891
  5374  000698  EF50  F003         	goto	u5890
  5375  00069C                     u5891:
  5376  00069C  EF63  F003         	goto	l6033
  5377  0006A0                     u5890:
  5378  0006A0  0101               	movlb	1	; () banked
  5379  0006A2  51C3               	movf	main@writeEndAddress& (0+255),w,b
  5380  0006A4  19C7               	xorwf	main@readAddress& (0+255),w,b
  5381  0006A6  E10D               	bnz	u5901
  5382  0006A8  51C4               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5383  0006AA  19C8               	xorwf	(main@readAddress+1)& (0+255),w,b
  5384  0006AC  E10A               	bnz	u5901
  5385  0006AE  51C5               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5386  0006B0  19C9               	xorwf	(main@readAddress+2)& (0+255),w,b
  5387  0006B2  E107               	bnz	u5901
  5388  0006B4  51C6               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5389  0006B6  19CA               	xorwf	(main@readAddress+3)& (0+255),w,b
  5390  0006B8  A4D8               	btfss	status,2,c
  5391  0006BA  EF61  F003         	goto	u5901
  5392  0006BE  EF63  F003         	goto	u5900
  5393  0006C2                     u5901:
  5394  0006C2  EFD9  F002         	goto	l6009
  5395  0006C6                     u5900:
  5396  0006C6                     l6033:
  5397                           
  5398                           ;main.c: 215:                 stopPlayback = 1;
  5399  0006C6  0E01               	movlw	1
  5400  0006C8  6E46               	movwf	_stopPlayback^0,c
  5401  0006CA                     
  5402                           ;main.c: 216:                 if ((EUSART1_is_rx_ready())) {
  5403  0006CA  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5404  0006CE  0900               	iorlw	0
  5405  0006D0  B4D8               	btfsc	status,2,c
  5406  0006D2  EF6D  F003         	goto	u5911
  5407  0006D6  EF6F  F003         	goto	u5910
  5408  0006DA                     u5911:
  5409  0006DA  EF71  F003         	goto	l6039
  5410  0006DE                     u5910:
  5411  0006DE                     
  5412                           ;main.c: 217:                     EUSART1_Read();
  5413  0006DE  ECC0  F01A         	call	_EUSART1_Read	;wreg free
  5414  0006E2                     l6039:
  5415  0006E2  0100               	movlb	0	; () banked
  5416  0006E4  51D1               	movf	_doPlayback& (0+255),w,b
  5417  0006E6  A4D8               	btfss	status,2,c
  5418  0006E8  EF78  F003         	goto	u5921
  5419  0006EC  EF7A  F003         	goto	u5920
  5420  0006F0                     u5921:
  5421  0006F0  EF71  F003         	goto	l6039
  5422  0006F4                     u5920:
  5423  0006F4  EF7E  F000         	goto	l5931
  5424  0006F8                     l6041:
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;main.c: 224:                 printf("Press any key to start recording audio and press a
      +                          ny key to stop recording.");
  5428  0006F8  0E35               	movlw	low STR_37
  5429  0006FA  6FA6               	movwf	printf@fmt& (0+255),b
  5430  0006FC  0EF3               	movlw	high STR_37
  5431  0006FE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5432  000700  ECAC  F01A         	call	_printf	;wreg free
  5433  000704                     l6043:
  5434  000704  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5435  000708  0900               	iorlw	0
  5436  00070A  B4D8               	btfsc	status,2,c
  5437  00070C  EF8A  F003         	goto	u5931
  5438  000710  EF8C  F003         	goto	u5930
  5439  000714                     u5931:
  5440  000714  EF82  F003         	goto	l6043
  5441  000718                     u5930:
  5442  000718                     
  5443                           ;main.c: 226:                 EUSART1_Read();
  5444  000718  ECC0  F01A         	call	_EUSART1_Read	;wreg free
  5445  00071C                     
  5446                           ;main.c: 227:                 writeStartAddress = sdCardAddress;
  5447  00071C  C1CB  F1BF         	movff	main@sdCardAddress,main@writeStartAddress
  5448  000720  C1CC  F1C0         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5449  000724  C1CD  F1C1         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5450  000728  C1CE  F1C2         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5451  00072C                     
  5452                           ;main.c: 228:                 uint32_t writeAddress = sdCardAddress;
  5453  00072C  C1CB  F1D1         	movff	main@sdCardAddress,main@writeAddress_1285
  5454  000730  C1CC  F1D2         	movff	main@sdCardAddress+1,main@writeAddress_1285+1
  5455  000734  C1CD  F1D3         	movff	main@sdCardAddress+2,main@writeAddress_1285+2
  5456  000738  C1CE  F1D4         	movff	main@sdCardAddress+3,main@writeAddress_1285+3
  5457  00073C                     
  5458                           ;main.c: 229:                 uint8_t failureIndex = 0;
  5459  00073C  0E00               	movlw	0
  5460  00073E  0101               	movlb	1	; () banked
  5461  000740  6FCF               	movwf	main@failureIndex& (0+255),b
  5462  000742                     
  5463                           ; BSR set to: 1
  5464                           ;main.c: 230:                 startCollect = 1;
  5465  000742  0E01               	movlw	1
  5466  000744  6E48               	movwf	_startCollect^0,c
  5467                           
  5468                           ;main.c: 232:                 while (!(EUSART1_is_rx_ready())) {
  5469  000746  EFB5  F004         	goto	l6107
  5470  00074A                     l6055:
  5471                           
  5472                           ;main.c: 233:                     if (buffer1Full) {
  5473  00074A  0100               	movlb	0	; () banked
  5474  00074C  51D4               	movf	_buffer1Full& (0+255),w,b
  5475  00074E  B4D8               	btfsc	status,2,c
  5476  000750  EFAC  F003         	goto	u5941
  5477  000754  EFAE  F003         	goto	u5940
  5478  000758                     u5941:
  5479  000758  EF2D  F004         	goto	l6081
  5480  00075C                     u5940:
  5481  00075C                     
  5482                           ; BSR set to: 0
  5483                           ;main.c: 234:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5484  00075C  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5485  000760  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5486  000764  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5487  000768  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5488  00076C  0ED5               	movlw	low _sdCardBuffer1
  5489  00076E  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5490  000770  0E05               	movlw	high _sdCardBuffer1
  5491  000772  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5492  000774  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5493  000778                     l6059:
  5494  000778  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5495  00077C  0101               	movlb	1	; () banked
  5496  00077E  6FD0               	movwf	main@status& (0+255),b
  5497  000780  29D0               	incf	main@status& (0+255),w,b
  5498  000782  B4D8               	btfsc	status,2,c
  5499  000784  EFC6  F003         	goto	u5951
  5500  000788  EFC8  F003         	goto	u5950
  5501  00078C                     u5951:
  5502  00078C  EFBC  F003         	goto	l6059
  5503  000790                     u5950:
  5504  000790                     
  5505                           ; BSR set to: 1
  5506                           ;main.c: 236:                         if ((status & 0x1F) != 0x5) {
  5507  000790  51D0               	movf	main@status& (0+255),w,b
  5508  000792  0B1F               	andlw	31
  5509  000794  0A05               	xorlw	5
  5510  000796  B4D8               	btfsc	status,2,c
  5511  000798  EFD0  F003         	goto	u5961
  5512  00079C  EFD2  F003         	goto	u5960
  5513  0007A0                     u5961:
  5514  0007A0  EFEC  F003         	goto	l6067
  5515  0007A4                     u5960:
  5516  0007A4                     
  5517                           ; BSR set to: 1
  5518                           ;main.c: 237:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5519  0007A4  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5520  0007A8  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5521  0007AC  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5522  0007B0  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5523  0007B4  0ED5               	movlw	low _sdCardBuffer1
  5524  0007B6  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5525  0007B8  0E05               	movlw	high _sdCardBuffer1
  5526  0007BA  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5527  0007BC  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5528  0007C0                     l6065:
  5529  0007C0  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5530  0007C4  0101               	movlb	1	; () banked
  5531  0007C6  6FD0               	movwf	main@status& (0+255),b
  5532  0007C8  29D0               	incf	main@status& (0+255),w,b
  5533  0007CA  B4D8               	btfsc	status,2,c
  5534  0007CC  EFEA  F003         	goto	u5971
  5535  0007D0  EFEC  F003         	goto	u5970
  5536  0007D4                     u5971:
  5537  0007D4  EFE0  F003         	goto	l6065
  5538  0007D8                     u5970:
  5539  0007D8                     l6067:
  5540                           
  5541                           ; BSR set to: 1
  5542                           ;main.c: 240:                         buffer1Full = 0;
  5543  0007D8  0E00               	movlw	0
  5544  0007DA  0100               	movlb	0	; () banked
  5545  0007DC  6FD4               	movwf	_buffer1Full& (0+255),b
  5546  0007DE                     
  5547                           ; BSR set to: 0
  5548                           ;main.c: 241:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5549  0007DE  0101               	movlb	1	; () banked
  5550  0007E0  51D0               	movf	main@status& (0+255),w,b
  5551  0007E2  0B1F               	andlw	31
  5552  0007E4  0A05               	xorlw	5
  5553  0007E6  B4D8               	btfsc	status,2,c
  5554  0007E8  EFF8  F003         	goto	u5981
  5555  0007EC  EFFA  F003         	goto	u5980
  5556  0007F0                     u5981:
  5557  0007F0  EF1B  F004         	goto	l6079
  5558  0007F4                     u5980:
  5559  0007F4                     
  5560                           ; BSR set to: 1
  5561  0007F4  0E80               	movlw	128
  5562  0007F6  61CF               	cpfslt	main@failureIndex& (0+255),b
  5563  0007F8  EF00  F004         	goto	u5991
  5564  0007FC  EF02  F004         	goto	u5990
  5565  000800                     u5991:
  5566  000800  EF1B  F004         	goto	l6079
  5567  000804                     u5990:
  5568  000804                     
  5569                           ; BSR set to: 1
  5570                           ;main.c: 242:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5571  000804  51CF               	movf	main@failureIndex& (0+255),w,b
  5572  000806  0D04               	mullw	4
  5573  000808  0ED5               	movlw	low _writeFailureTable
  5574  00080A  24F3               	addwf	243,w,c
  5575  00080C  6ED9               	movwf	fsr2l,c
  5576  00080E  0E01               	movlw	high _writeFailureTable
  5577  000810  20F4               	addwfc	prodh,w,c
  5578  000812  6EDA               	movwf	fsr2h,c
  5579  000814  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  5580  000818  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  5581  00081C  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  5582  000820  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  5583  000824                     
  5584                           ; BSR set to: 1
  5585                           ;main.c: 243:                             writeFailureStatus[failureIndex] = status;
  5586  000824  0E00               	movlw	low _writeFailureStatus
  5587  000826  25CF               	addwf	main@failureIndex& (0+255),w,b
  5588  000828  6ED9               	movwf	fsr2l,c
  5589  00082A  6ADA               	clrf	fsr2h,c
  5590  00082C  0E01               	movlw	high _writeFailureStatus
  5591  00082E  22DA               	addwfc	fsr2h,f,c
  5592  000830  C1D0  FFDF         	movff	main@status,indf2
  5593  000834                     
  5594                           ; BSR set to: 1
  5595                           ;main.c: 244:                             failureIndex++;
  5596  000834  2BCF               	incf	main@failureIndex& (0+255),f,b
  5597  000836                     l6079:
  5598                           
  5599                           ; BSR set to: 1
  5600                           ;main.c: 246:                         writeAddress = incrementAddress(writeAddress);
  5601  000836  C1D1  F014         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  5602  00083A  C1D2  F015         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  5603  00083E  C1D3  F016         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  5604  000842  C1D4  F017         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  5605  000846  EC1C  F019         	call	_incrementAddress	;wreg free
  5606  00084A  C014  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  5607  00084E  C015  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  5608  000852  C016  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  5609  000856  C017  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  5610  00085A                     l6081:
  5611                           
  5612                           ;main.c: 248:                     if (buffer2Full) {
  5613  00085A  0100               	movlb	0	; () banked
  5614  00085C  51D3               	movf	_buffer2Full& (0+255),w,b
  5615  00085E  B4D8               	btfsc	status,2,c
  5616  000860  EF34  F004         	goto	u6001
  5617  000864  EF36  F004         	goto	u6000
  5618  000868                     u6001:
  5619  000868  EFB5  F004         	goto	l6107
  5620  00086C                     u6000:
  5621  00086C                     
  5622                           ; BSR set to: 0
  5623                           ;main.c: 249:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  5624  00086C  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5625  000870  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5626  000874  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5627  000878  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5628  00087C  0ED5               	movlw	low _sdCardBuffer2
  5629  00087E  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5630  000880  0E03               	movlw	high _sdCardBuffer2
  5631  000882  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5632  000884  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5633  000888                     l6085:
  5634  000888  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5635  00088C  0101               	movlb	1	; () banked
  5636  00088E  6FD0               	movwf	main@status& (0+255),b
  5637  000890  29D0               	incf	main@status& (0+255),w,b
  5638  000892  B4D8               	btfsc	status,2,c
  5639  000894  EF4E  F004         	goto	u6011
  5640  000898  EF50  F004         	goto	u6010
  5641  00089C                     u6011:
  5642  00089C  EF44  F004         	goto	l6085
  5643  0008A0                     u6010:
  5644  0008A0                     
  5645                           ; BSR set to: 1
  5646                           ;main.c: 251:                         if ((status & 0x1F) != 0x5) {
  5647  0008A0  51D0               	movf	main@status& (0+255),w,b
  5648  0008A2  0B1F               	andlw	31
  5649  0008A4  0A05               	xorlw	5
  5650  0008A6  B4D8               	btfsc	status,2,c
  5651  0008A8  EF58  F004         	goto	u6021
  5652  0008AC  EF5A  F004         	goto	u6020
  5653  0008B0                     u6021:
  5654  0008B0  EF74  F004         	goto	l6093
  5655  0008B4                     u6020:
  5656  0008B4                     
  5657                           ; BSR set to: 1
  5658                           ;main.c: 252:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  5659  0008B4  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5660  0008B8  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5661  0008BC  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5662  0008C0  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5663  0008C4  0ED5               	movlw	low _sdCardBuffer2
  5664  0008C6  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5665  0008C8  0E03               	movlw	high _sdCardBuffer2
  5666  0008CA  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5667  0008CC  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5668  0008D0                     l6091:
  5669  0008D0  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5670  0008D4  0101               	movlb	1	; () banked
  5671  0008D6  6FD0               	movwf	main@status& (0+255),b
  5672  0008D8  29D0               	incf	main@status& (0+255),w,b
  5673  0008DA  B4D8               	btfsc	status,2,c
  5674  0008DC  EF72  F004         	goto	u6031
  5675  0008E0  EF74  F004         	goto	u6030
  5676  0008E4                     u6031:
  5677  0008E4  EF68  F004         	goto	l6091
  5678  0008E8                     u6030:
  5679  0008E8                     l6093:
  5680                           
  5681                           ; BSR set to: 1
  5682                           ;main.c: 255:                         buffer2Full = 0;
  5683  0008E8  0E00               	movlw	0
  5684  0008EA  0100               	movlb	0	; () banked
  5685  0008EC  6FD3               	movwf	_buffer2Full& (0+255),b
  5686  0008EE                     
  5687                           ; BSR set to: 0
  5688                           ;main.c: 256:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5689  0008EE  0101               	movlb	1	; () banked
  5690  0008F0  51D0               	movf	main@status& (0+255),w,b
  5691  0008F2  0B1F               	andlw	31
  5692  0008F4  0A05               	xorlw	5
  5693  0008F6  B4D8               	btfsc	status,2,c
  5694  0008F8  EF80  F004         	goto	u6041
  5695  0008FC  EF82  F004         	goto	u6040
  5696  000900                     u6041:
  5697  000900  EFA3  F004         	goto	l6105
  5698  000904                     u6040:
  5699  000904                     
  5700                           ; BSR set to: 1
  5701  000904  0E80               	movlw	128
  5702  000906  61CF               	cpfslt	main@failureIndex& (0+255),b
  5703  000908  EF88  F004         	goto	u6051
  5704  00090C  EF8A  F004         	goto	u6050
  5705  000910                     u6051:
  5706  000910  EFA3  F004         	goto	l6105
  5707  000914                     u6050:
  5708  000914                     
  5709                           ; BSR set to: 1
  5710                           ;main.c: 257:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5711  000914  51CF               	movf	main@failureIndex& (0+255),w,b
  5712  000916  0D04               	mullw	4
  5713  000918  0ED5               	movlw	low _writeFailureTable
  5714  00091A  24F3               	addwf	243,w,c
  5715  00091C  6ED9               	movwf	fsr2l,c
  5716  00091E  0E01               	movlw	high _writeFailureTable
  5717  000920  20F4               	addwfc	prodh,w,c
  5718  000922  6EDA               	movwf	fsr2h,c
  5719  000924  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  5720  000928  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  5721  00092C  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  5722  000930  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  5723  000934                     
  5724                           ; BSR set to: 1
  5725                           ;main.c: 258:                             writeFailureStatus[failureIndex] = status;
  5726  000934  0E00               	movlw	low _writeFailureStatus
  5727  000936  25CF               	addwf	main@failureIndex& (0+255),w,b
  5728  000938  6ED9               	movwf	fsr2l,c
  5729  00093A  6ADA               	clrf	fsr2h,c
  5730  00093C  0E01               	movlw	high _writeFailureStatus
  5731  00093E  22DA               	addwfc	fsr2h,f,c
  5732  000940  C1D0  FFDF         	movff	main@status,indf2
  5733  000944                     
  5734                           ; BSR set to: 1
  5735                           ;main.c: 259:                             failureIndex++;
  5736  000944  2BCF               	incf	main@failureIndex& (0+255),f,b
  5737  000946                     l6105:
  5738                           
  5739                           ; BSR set to: 1
  5740                           ;main.c: 261:                         writeAddress = incrementAddress(writeAddress);
  5741  000946  C1D1  F014         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  5742  00094A  C1D2  F015         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  5743  00094E  C1D3  F016         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  5744  000952  C1D4  F017         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  5745  000956  EC1C  F019         	call	_incrementAddress	;wreg free
  5746  00095A  C014  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  5747  00095E  C015  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  5748  000962  C016  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  5749  000966  C017  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  5750  00096A                     l6107:
  5751                           
  5752                           ;main.c: 232:                 while (!(EUSART1_is_rx_ready())) {
  5753  00096A  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5754  00096E  0900               	iorlw	0
  5755  000970  B4D8               	btfsc	status,2,c
  5756  000972  EFBD  F004         	goto	u6061
  5757  000976  EFBF  F004         	goto	u6060
  5758  00097A                     u6061:
  5759  00097A  EFA5  F003         	goto	l6055
  5760  00097E                     u6060:
  5761  00097E                     
  5762                           ;main.c: 264:                 EUSART1_Read();
  5763  00097E  ECC0  F01A         	call	_EUSART1_Read	;wreg free
  5764  000982                     
  5765                           ;main.c: 265:                 stopCollect = 1;
  5766  000982  0E01               	movlw	1
  5767  000984  6E47               	movwf	_stopCollect^0,c
  5768                           
  5769                           ;main.c: 267:                 while (buffer1Full || buffer2Full || collecting) {
  5770  000986  EFD4  F005         	goto	l6165
  5771  00098A                     l6113:
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;main.c: 268:                     if (buffer1Full) {
  5775  00098A  51D4               	movf	_buffer1Full& (0+255),w,b
  5776  00098C  B4D8               	btfsc	status,2,c
  5777  00098E  EFCB  F004         	goto	u6071
  5778  000992  EFCD  F004         	goto	u6070
  5779  000996                     u6071:
  5780  000996  EF4C  F005         	goto	l6139
  5781  00099A                     u6070:
  5782  00099A                     
  5783                           ; BSR set to: 0
  5784                           ;main.c: 269:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5785  00099A  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5786  00099E  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5787  0009A2  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5788  0009A6  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5789  0009AA  0ED5               	movlw	low _sdCardBuffer1
  5790  0009AC  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5791  0009AE  0E05               	movlw	high _sdCardBuffer1
  5792  0009B0  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5793  0009B2  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5794  0009B6                     l6117:
  5795  0009B6  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5796  0009BA  0101               	movlb	1	; () banked
  5797  0009BC  6FD0               	movwf	main@status& (0+255),b
  5798  0009BE  29D0               	incf	main@status& (0+255),w,b
  5799  0009C0  B4D8               	btfsc	status,2,c
  5800  0009C2  EFE5  F004         	goto	u6081
  5801  0009C6  EFE7  F004         	goto	u6080
  5802  0009CA                     u6081:
  5803  0009CA  EFDB  F004         	goto	l6117
  5804  0009CE                     u6080:
  5805  0009CE                     
  5806                           ; BSR set to: 1
  5807                           ;main.c: 271:                         if ((status & 0x1F) != 0x5) {
  5808  0009CE  51D0               	movf	main@status& (0+255),w,b
  5809  0009D0  0B1F               	andlw	31
  5810  0009D2  0A05               	xorlw	5
  5811  0009D4  B4D8               	btfsc	status,2,c
  5812  0009D6  EFEF  F004         	goto	u6091
  5813  0009DA  EFF1  F004         	goto	u6090
  5814  0009DE                     u6091:
  5815  0009DE  EF0B  F005         	goto	l6125
  5816  0009E2                     u6090:
  5817  0009E2                     
  5818                           ; BSR set to: 1
  5819                           ;main.c: 272:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5820  0009E2  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5821  0009E6  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5822  0009EA  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5823  0009EE  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5824  0009F2  0ED5               	movlw	low _sdCardBuffer1
  5825  0009F4  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5826  0009F6  0E05               	movlw	high _sdCardBuffer1
  5827  0009F8  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5828  0009FA  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5829  0009FE                     l6123:
  5830  0009FE  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5831  000A02  0101               	movlb	1	; () banked
  5832  000A04  6FD0               	movwf	main@status& (0+255),b
  5833  000A06  29D0               	incf	main@status& (0+255),w,b
  5834  000A08  B4D8               	btfsc	status,2,c
  5835  000A0A  EF09  F005         	goto	u6101
  5836  000A0E  EF0B  F005         	goto	u6100
  5837  000A12                     u6101:
  5838  000A12  EFFF  F004         	goto	l6123
  5839  000A16                     u6100:
  5840  000A16                     l6125:
  5841                           
  5842                           ; BSR set to: 1
  5843                           ;main.c: 275:                         buffer1Full = 0;
  5844  000A16  0E00               	movlw	0
  5845  000A18  0100               	movlb	0	; () banked
  5846  000A1A  6FD4               	movwf	_buffer1Full& (0+255),b
  5847  000A1C                     
  5848                           ; BSR set to: 0
  5849                           ;main.c: 276:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5850  000A1C  0101               	movlb	1	; () banked
  5851  000A1E  51D0               	movf	main@status& (0+255),w,b
  5852  000A20  0B1F               	andlw	31
  5853  000A22  0A05               	xorlw	5
  5854  000A24  B4D8               	btfsc	status,2,c
  5855  000A26  EF17  F005         	goto	u6111
  5856  000A2A  EF19  F005         	goto	u6110
  5857  000A2E                     u6111:
  5858  000A2E  EF3A  F005         	goto	l6137
  5859  000A32                     u6110:
  5860  000A32                     
  5861                           ; BSR set to: 1
  5862  000A32  0E80               	movlw	128
  5863  000A34  61CF               	cpfslt	main@failureIndex& (0+255),b
  5864  000A36  EF1F  F005         	goto	u6121
  5865  000A3A  EF21  F005         	goto	u6120
  5866  000A3E                     u6121:
  5867  000A3E  EF3A  F005         	goto	l6137
  5868  000A42                     u6120:
  5869  000A42                     
  5870                           ; BSR set to: 1
  5871                           ;main.c: 277:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5872  000A42  51CF               	movf	main@failureIndex& (0+255),w,b
  5873  000A44  0D04               	mullw	4
  5874  000A46  0ED5               	movlw	low _writeFailureTable
  5875  000A48  24F3               	addwf	243,w,c
  5876  000A4A  6ED9               	movwf	fsr2l,c
  5877  000A4C  0E01               	movlw	high _writeFailureTable
  5878  000A4E  20F4               	addwfc	prodh,w,c
  5879  000A50  6EDA               	movwf	fsr2h,c
  5880  000A52  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  5881  000A56  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  5882  000A5A  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  5883  000A5E  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  5884  000A62                     
  5885                           ; BSR set to: 1
  5886                           ;main.c: 278:                             writeFailureStatus[failureIndex] = status;
  5887  000A62  0E00               	movlw	low _writeFailureStatus
  5888  000A64  25CF               	addwf	main@failureIndex& (0+255),w,b
  5889  000A66  6ED9               	movwf	fsr2l,c
  5890  000A68  6ADA               	clrf	fsr2h,c
  5891  000A6A  0E01               	movlw	high _writeFailureStatus
  5892  000A6C  22DA               	addwfc	fsr2h,f,c
  5893  000A6E  C1D0  FFDF         	movff	main@status,indf2
  5894  000A72                     
  5895                           ; BSR set to: 1
  5896                           ;main.c: 279:                             failureIndex++;
  5897  000A72  2BCF               	incf	main@failureIndex& (0+255),f,b
  5898  000A74                     l6137:
  5899                           
  5900                           ; BSR set to: 1
  5901                           ;main.c: 281:                         writeAddress = incrementAddress(writeAddress);
  5902  000A74  C1D1  F014         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  5903  000A78  C1D2  F015         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  5904  000A7C  C1D3  F016         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  5905  000A80  C1D4  F017         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  5906  000A84  EC1C  F019         	call	_incrementAddress	;wreg free
  5907  000A88  C014  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  5908  000A8C  C015  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  5909  000A90  C016  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  5910  000A94  C017  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  5911  000A98                     l6139:
  5912                           
  5913                           ;main.c: 283:                     if (buffer2Full) {
  5914  000A98  0100               	movlb	0	; () banked
  5915  000A9A  51D3               	movf	_buffer2Full& (0+255),w,b
  5916  000A9C  B4D8               	btfsc	status,2,c
  5917  000A9E  EF53  F005         	goto	u6131
  5918  000AA2  EF55  F005         	goto	u6130
  5919  000AA6                     u6131:
  5920  000AA6  EFD4  F005         	goto	l6165
  5921  000AAA                     u6130:
  5922  000AAA                     
  5923                           ; BSR set to: 0
  5924                           ;main.c: 284:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  5925  000AAA  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5926  000AAE  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5927  000AB2  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5928  000AB6  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5929  000ABA  0ED5               	movlw	low _sdCardBuffer2
  5930  000ABC  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5931  000ABE  0E03               	movlw	high _sdCardBuffer2
  5932  000AC0  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5933  000AC2  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5934  000AC6                     l6143:
  5935  000AC6  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5936  000ACA  0101               	movlb	1	; () banked
  5937  000ACC  6FD0               	movwf	main@status& (0+255),b
  5938  000ACE  29D0               	incf	main@status& (0+255),w,b
  5939  000AD0  B4D8               	btfsc	status,2,c
  5940  000AD2  EF6D  F005         	goto	u6141
  5941  000AD6  EF6F  F005         	goto	u6140
  5942  000ADA                     u6141:
  5943  000ADA  EF63  F005         	goto	l6143
  5944  000ADE                     u6140:
  5945  000ADE                     
  5946                           ; BSR set to: 1
  5947                           ;main.c: 286:                         if ((status & 0x1F) != 0x5) {
  5948  000ADE  51D0               	movf	main@status& (0+255),w,b
  5949  000AE0  0B1F               	andlw	31
  5950  000AE2  0A05               	xorlw	5
  5951  000AE4  B4D8               	btfsc	status,2,c
  5952  000AE6  EF77  F005         	goto	u6151
  5953  000AEA  EF79  F005         	goto	u6150
  5954  000AEE                     u6151:
  5955  000AEE  EF93  F005         	goto	l6151
  5956  000AF2                     u6150:
  5957  000AF2                     
  5958                           ; BSR set to: 1
  5959                           ;main.c: 287:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  5960  000AF2  C1D1  F015         	movff	main@writeAddress_1285,SDCARD_WriteBlock@addr
  5961  000AF6  C1D2  F016         	movff	main@writeAddress_1285+1,SDCARD_WriteBlock@addr+1
  5962  000AFA  C1D3  F017         	movff	main@writeAddress_1285+2,SDCARD_WriteBlock@addr+2
  5963  000AFE  C1D4  F018         	movff	main@writeAddress_1285+3,SDCARD_WriteBlock@addr+3
  5964  000B02  0ED5               	movlw	low _sdCardBuffer2
  5965  000B04  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5966  000B06  0E03               	movlw	high _sdCardBuffer2
  5967  000B08  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5968  000B0A  ECAF  F017         	call	_SDCARD_WriteBlock	;wreg free
  5969  000B0E                     l6149:
  5970  000B0E  ECBD  F019         	call	_SDCARD_PollWriteComplete	;wreg free
  5971  000B12  0101               	movlb	1	; () banked
  5972  000B14  6FD0               	movwf	main@status& (0+255),b
  5973  000B16  29D0               	incf	main@status& (0+255),w,b
  5974  000B18  B4D8               	btfsc	status,2,c
  5975  000B1A  EF91  F005         	goto	u6161
  5976  000B1E  EF93  F005         	goto	u6160
  5977  000B22                     u6161:
  5978  000B22  EF87  F005         	goto	l6149
  5979  000B26                     u6160:
  5980  000B26                     l6151:
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;main.c: 290:                         buffer2Full = 0;
  5984  000B26  0E00               	movlw	0
  5985  000B28  0100               	movlb	0	; () banked
  5986  000B2A  6FD3               	movwf	_buffer2Full& (0+255),b
  5987  000B2C                     
  5988                           ; BSR set to: 0
  5989                           ;main.c: 291:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5990  000B2C  0101               	movlb	1	; () banked
  5991  000B2E  51D0               	movf	main@status& (0+255),w,b
  5992  000B30  0B1F               	andlw	31
  5993  000B32  0A05               	xorlw	5
  5994  000B34  B4D8               	btfsc	status,2,c
  5995  000B36  EF9F  F005         	goto	u6171
  5996  000B3A  EFA1  F005         	goto	u6170
  5997  000B3E                     u6171:
  5998  000B3E  EFC2  F005         	goto	l6163
  5999  000B42                     u6170:
  6000  000B42                     
  6001                           ; BSR set to: 1
  6002  000B42  0E80               	movlw	128
  6003  000B44  61CF               	cpfslt	main@failureIndex& (0+255),b
  6004  000B46  EFA7  F005         	goto	u6181
  6005  000B4A  EFA9  F005         	goto	u6180
  6006  000B4E                     u6181:
  6007  000B4E  EFC2  F005         	goto	l6163
  6008  000B52                     u6180:
  6009  000B52                     
  6010                           ; BSR set to: 1
  6011                           ;main.c: 292:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  6012  000B52  51CF               	movf	main@failureIndex& (0+255),w,b
  6013  000B54  0D04               	mullw	4
  6014  000B56  0ED5               	movlw	low _writeFailureTable
  6015  000B58  24F3               	addwf	243,w,c
  6016  000B5A  6ED9               	movwf	fsr2l,c
  6017  000B5C  0E01               	movlw	high _writeFailureTable
  6018  000B5E  20F4               	addwfc	prodh,w,c
  6019  000B60  6EDA               	movwf	fsr2h,c
  6020  000B62  C1D1  FFDE         	movff	main@writeAddress_1285,postinc2
  6021  000B66  C1D2  FFDE         	movff	main@writeAddress_1285+1,postinc2
  6022  000B6A  C1D3  FFDE         	movff	main@writeAddress_1285+2,postinc2
  6023  000B6E  C1D4  FFDE         	movff	main@writeAddress_1285+3,postinc2
  6024  000B72                     
  6025                           ; BSR set to: 1
  6026                           ;main.c: 293:                             writeFailureStatus[failureIndex] = status;
  6027  000B72  0E00               	movlw	low _writeFailureStatus
  6028  000B74  25CF               	addwf	main@failureIndex& (0+255),w,b
  6029  000B76  6ED9               	movwf	fsr2l,c
  6030  000B78  6ADA               	clrf	fsr2h,c
  6031  000B7A  0E01               	movlw	high _writeFailureStatus
  6032  000B7C  22DA               	addwfc	fsr2h,f,c
  6033  000B7E  C1D0  FFDF         	movff	main@status,indf2
  6034  000B82                     
  6035                           ; BSR set to: 1
  6036                           ;main.c: 294:                             failureIndex++;
  6037  000B82  2BCF               	incf	main@failureIndex& (0+255),f,b
  6038  000B84                     l6163:
  6039                           
  6040                           ; BSR set to: 1
  6041                           ;main.c: 296:                         writeAddress = incrementAddress(writeAddress);
  6042  000B84  C1D1  F014         	movff	main@writeAddress_1285,incrementAddress@sdCardAddress
  6043  000B88  C1D2  F015         	movff	main@writeAddress_1285+1,incrementAddress@sdCardAddress+1
  6044  000B8C  C1D3  F016         	movff	main@writeAddress_1285+2,incrementAddress@sdCardAddress+2
  6045  000B90  C1D4  F017         	movff	main@writeAddress_1285+3,incrementAddress@sdCardAddress+3
  6046  000B94  EC1C  F019         	call	_incrementAddress	;wreg free
  6047  000B98  C014  F1D1         	movff	?_incrementAddress,main@writeAddress_1285
  6048  000B9C  C015  F1D2         	movff	?_incrementAddress+1,main@writeAddress_1285+1
  6049  000BA0  C016  F1D3         	movff	?_incrementAddress+2,main@writeAddress_1285+2
  6050  000BA4  C017  F1D4         	movff	?_incrementAddress+3,main@writeAddress_1285+3
  6051  000BA8                     l6165:
  6052                           
  6053                           ;main.c: 267:                 while (buffer1Full || buffer2Full || collecting) {
  6054  000BA8  0100               	movlb	0	; () banked
  6055  000BAA  51D4               	movf	_buffer1Full& (0+255),w,b
  6056  000BAC  A4D8               	btfss	status,2,c
  6057  000BAE  EFDB  F005         	goto	u6191
  6058  000BB2  EFDD  F005         	goto	u6190
  6059  000BB6                     u6191:
  6060  000BB6  EFC5  F004         	goto	l6113
  6061  000BBA                     u6190:
  6062  000BBA                     
  6063                           ; BSR set to: 0
  6064  000BBA  51D3               	movf	_buffer2Full& (0+255),w,b
  6065  000BBC  A4D8               	btfss	status,2,c
  6066  000BBE  EFE3  F005         	goto	u6201
  6067  000BC2  EFE5  F005         	goto	u6200
  6068  000BC6                     u6201:
  6069  000BC6  EFC5  F004         	goto	l6113
  6070  000BCA                     u6200:
  6071  000BCA                     
  6072                           ; BSR set to: 0
  6073  000BCA  51D2               	movf	_collecting& (0+255),w,b
  6074  000BCC  A4D8               	btfss	status,2,c
  6075  000BCE  EFEB  F005         	goto	u6211
  6076  000BD2  EFED  F005         	goto	u6210
  6077  000BD6                     u6211:
  6078  000BD6  EFC5  F004         	goto	l6113
  6079  000BDA                     u6210:
  6080  000BDA                     
  6081                           ; BSR set to: 0
  6082                           ;main.c: 299:                 writeEndAddress = writeAddress;
  6083  000BDA  C1D1  F1C3         	movff	main@writeAddress_1285,main@writeEndAddress
  6084  000BDE  C1D2  F1C4         	movff	main@writeAddress_1285+1,main@writeEndAddress+1
  6085  000BE2  C1D3  F1C5         	movff	main@writeAddress_1285+2,main@writeEndAddress+2
  6086  000BE6  C1D4  F1C6         	movff	main@writeAddress_1285+3,main@writeEndAddress+3
  6087  000BEA                     
  6088                           ; BSR set to: 0
  6089                           ;main.c: 300:                 printf ("\r\n");
  6090  000BEA  0EAE               	movlw	low (STR_71+12)
  6091  000BEC  6FA6               	movwf	printf@fmt& (0+255),b
  6092  000BEE  0EFF               	movlw	high (STR_71+12)
  6093  000BF0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6094  000BF2  ECAC  F01A         	call	_printf	;wreg free
  6095  000BF6                     
  6096                           ;main.c: 301:                 if (failureIndex > 0) {
  6097  000BF6  0101               	movlb	1	; () banked
  6098  000BF8  51CF               	movf	main@failureIndex& (0+255),w,b
  6099  000BFA  B4D8               	btfsc	status,2,c
  6100  000BFC  EF02  F006         	goto	u6221
  6101  000C00  EF04  F006         	goto	u6220
  6102  000C04                     u6221:
  6103  000C04  EF7E  F000         	goto	l5931
  6104  000C08                     u6220:
  6105  000C08                     
  6106                           ; BSR set to: 1
  6107                           ;main.c: 302:                     printf ("Listing write failures: \r\n");
  6108  000C08  0E21               	movlw	low STR_39
  6109  000C0A  0100               	movlb	0	; () banked
  6110  000C0C  6FA6               	movwf	printf@fmt& (0+255),b
  6111  000C0E  0EFE               	movlw	high STR_39
  6112  000C10  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6113  000C12  ECAC  F01A         	call	_printf	;wreg free
  6114  000C16                     
  6115                           ;main.c: 303:                     for (uint8_t i = 0; i < failureIndex; i++) {
  6116  000C16  0E00               	movlw	0
  6117  000C18  0101               	movlb	1	; () banked
  6118  000C1A  6FB7               	movwf	main@i_1289& (0+255),b
  6119  000C1C  EF65  F006         	goto	l6191
  6120  000C20                     l6179:
  6121                           
  6122                           ; BSR set to: 1
  6123                           ;main.c: 304:                         uint32_t addr = writeFailureTable[i];
  6124  000C20  51B7               	movf	main@i_1289& (0+255),w,b
  6125  000C22  0D04               	mullw	4
  6126  000C24  0ED5               	movlw	low _writeFailureTable
  6127  000C26  24F3               	addwf	243,w,c
  6128  000C28  6ED9               	movwf	fsr2l,c
  6129  000C2A  0E01               	movlw	high _writeFailureTable
  6130  000C2C  20F4               	addwfc	prodh,w,c
  6131  000C2E  6EDA               	movwf	fsr2h,c
  6132  000C30  CFDE F1AB          	movff	postinc2,main@addr
  6133  000C34  CFDE F1AC          	movff	postinc2,main@addr+1
  6134  000C38  CFDE F1AD          	movff	postinc2,main@addr+2
  6135  000C3C  CFDE F1AE          	movff	postinc2,main@addr+3
  6136  000C40                     
  6137                           ; BSR set to: 1
  6138                           ;main.c: 305:                         printf("Status code: %d ---- Address: ", writeFail
      +                          ureStatus[i]);
  6139  000C40  0E56               	movlw	low STR_40
  6140  000C42  0100               	movlb	0	; () banked
  6141  000C44  6FA6               	movwf	printf@fmt& (0+255),b
  6142  000C46  0EFD               	movlw	high STR_40
  6143  000C48  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6144  000C4A  0E00               	movlw	low _writeFailureStatus
  6145  000C4C  0101               	movlb	1	; () banked
  6146  000C4E  25B7               	addwf	main@i_1289& (0+255),w,b
  6147  000C50  6ED9               	movwf	fsr2l,c
  6148  000C52  6ADA               	clrf	fsr2h,c
  6149  000C54  0E01               	movlw	high _writeFailureStatus
  6150  000C56  22DA               	addwfc	fsr2h,f,c
  6151  000C58  50DF               	movf	indf2,w,c
  6152  000C5A  0100               	movlb	0	; () banked
  6153  000C5C  6FBE               	movwf	??_main& (0+255),b
  6154  000C5E  51BE               	movf	??_main& (0+255),w,b
  6155  000C60  6FA8               	movwf	(?_printf+2)& (0+255),b
  6156  000C62  6BA9               	clrf	(?_printf+3)& (0+255),b
  6157  000C64  ECAC  F01A         	call	_printf	;wreg free
  6158  000C68                     
  6159                           ;main.c: 306:                         printf("%04x", addr >> 16);
  6160  000C68  0EEE               	movlw	low STR_10
  6161  000C6A  0100               	movlb	0	; () banked
  6162  000C6C  6FA6               	movwf	printf@fmt& (0+255),b
  6163  000C6E  0EFF               	movlw	high STR_10
  6164  000C70  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6165  000C72  C1AD  F0A8         	movff	main@addr+2,?_printf+2
  6166  000C76  C1AE  F0A9         	movff	main@addr+3,?_printf+3
  6167  000C7A  6BAA               	clrf	(?_printf+4)& (0+255),b
  6168  000C7C  6BAB               	clrf	(?_printf+5)& (0+255),b
  6169  000C7E  ECAC  F01A         	call	_printf	;wreg free
  6170  000C82                     
  6171                           ;main.c: 307:                         printf(":");
  6172  000C82  0EFD               	movlw	low STR_11
  6173  000C84  0100               	movlb	0	; () banked
  6174  000C86  6FA6               	movwf	printf@fmt& (0+255),b
  6175  000C88  0EFF               	movlw	high STR_11
  6176  000C8A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6177  000C8C  ECAC  F01A         	call	_printf	;wreg free
  6178  000C90                     
  6179                           ;main.c: 308:                         printf("%04x\r\n", addr & 0X0000FFFF);
  6180  000C90  0EE1               	movlw	low STR_43
  6181  000C92  0100               	movlb	0	; () banked
  6182  000C94  6FA6               	movwf	printf@fmt& (0+255),b
  6183  000C96  0EFF               	movlw	high STR_43
  6184  000C98  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6185  000C9A  0EFF               	movlw	255
  6186  000C9C  0101               	movlb	1	; () banked
  6187  000C9E  15AB               	andwf	main@addr& (0+255),w,b
  6188  000CA0  0100               	movlb	0	; () banked
  6189  000CA2  6FA8               	movwf	(?_printf+2)& (0+255),b
  6190  000CA4  0EFF               	movlw	255
  6191  000CA6  0101               	movlb	1	; () banked
  6192  000CA8  15AC               	andwf	(main@addr+1)& (0+255),w,b
  6193  000CAA  0100               	movlb	0	; () banked
  6194  000CAC  6FA9               	movwf	(?_printf+3)& (0+255),b
  6195  000CAE  0E00               	movlw	0
  6196  000CB0  0101               	movlb	1	; () banked
  6197  000CB2  15AD               	andwf	(main@addr+2)& (0+255),w,b
  6198  000CB4  0100               	movlb	0	; () banked
  6199  000CB6  6FAA               	movwf	(?_printf+4)& (0+255),b
  6200  000CB8  0E00               	movlw	0
  6201  000CBA  0101               	movlb	1	; () banked
  6202  000CBC  15AE               	andwf	(main@addr+3)& (0+255),w,b
  6203  000CBE  0100               	movlb	0	; () banked
  6204  000CC0  6FAB               	movwf	(?_printf+5)& (0+255),b
  6205  000CC2  ECAC  F01A         	call	_printf	;wreg free
  6206  000CC6                     
  6207                           ;main.c: 309:                     }
  6208  000CC6  0101               	movlb	1	; () banked
  6209  000CC8  2BB7               	incf	main@i_1289& (0+255),f,b
  6210  000CCA                     l6191:
  6211                           
  6212                           ; BSR set to: 1
  6213  000CCA  51CF               	movf	main@failureIndex& (0+255),w,b
  6214  000CCC  5DB7               	subwf	main@i_1289& (0+255),w,b
  6215  000CCE  A0D8               	btfss	status,0,c
  6216  000CD0  EF6C  F006         	goto	u6231
  6217  000CD4  EF6E  F006         	goto	u6230
  6218  000CD8                     u6231:
  6219  000CD8  EF10  F006         	goto	l6179
  6220  000CDC                     u6230:
  6221  000CDC  EF7E  F000         	goto	l5931
  6222  000CE0                     l6193:
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;main.c: 316:                 printf("You may terminate spooling at anytime with a key p
      +                          ress.\r\n");
  6226  000CE0  0E96               	movlw	low STR_44
  6227  000CE2  6FA6               	movwf	printf@fmt& (0+255),b
  6228  000CE4  0EFA               	movlw	high STR_44
  6229  000CE6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6230  000CE8  ECAC  F01A         	call	_printf	;wreg free
  6231                           
  6232                           ;main.c: 317:                 printf("To spool terminal contents into a file follow thes
      +                          e instructions:\r\n");
  6233  000CEC  0EC8               	movlw	low STR_45
  6234  000CEE  0100               	movlb	0	; () banked
  6235  000CF0  6FA6               	movwf	printf@fmt& (0+255),b
  6236  000CF2  0EF3               	movlw	high STR_45
  6237  000CF4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6238  000CF6  ECAC  F01A         	call	_printf	;wreg free
  6239                           
  6240                           ;main.c: 318:                 printf("\r\n");
  6241  000CFA  0EAE               	movlw	low (STR_71+12)
  6242  000CFC  0100               	movlb	0	; () banked
  6243  000CFE  6FA6               	movwf	printf@fmt& (0+255),b
  6244  000D00  0EFF               	movlw	high (STR_71+12)
  6245  000D02  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6246  000D04  ECAC  F01A         	call	_printf	;wreg free
  6247                           
  6248                           ;main.c: 319:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6249  000D08  0ED0               	movlw	low STR_47
  6250  000D0A  0100               	movlb	0	; () banked
  6251  000D0C  6FA6               	movwf	printf@fmt& (0+255),b
  6252  000D0E  0EFA               	movlw	high STR_47
  6253  000D10  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6254  000D12  ECAC  F01A         	call	_printf	;wreg free
  6255                           
  6256                           ;main.c: 320:                 printf("Select:     Change settings...\r\n");
  6257  000D16  0EF6               	movlw	low STR_48
  6258  000D18  0100               	movlb	0	; () banked
  6259  000D1A  6FA6               	movwf	printf@fmt& (0+255),b
  6260  000D1C  0EFC               	movlw	high STR_48
  6261  000D1E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6262  000D20  ECAC  F01A         	call	_printf	;wreg free
  6263                           
  6264                           ;main.c: 321:                 printf("Select:     Logging\r\n");
  6265  000D24  0EB6               	movlw	low STR_49
  6266  000D26  0100               	movlb	0	; () banked
  6267  000D28  6FA6               	movwf	printf@fmt& (0+255),b
  6268  000D2A  0EFE               	movlw	high STR_49
  6269  000D2C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6270  000D2E  ECAC  F01A         	call	_printf	;wreg free
  6271                           
  6272                           ;main.c: 322:                 printf("Select:     Session logging: All session output\r\
      +                          n");
  6273  000D32  0E77               	movlw	low STR_50
  6274  000D34  0100               	movlb	0	; () banked
  6275  000D36  6FA6               	movwf	printf@fmt& (0+255),b
  6276  000D38  0EFB               	movlw	high STR_50
  6277  000D3A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6278  000D3C  ECAC  F01A         	call	_printf	;wreg free
  6279                           
  6280                           ;main.c: 323:                 printf("Log file name: Browse and provide a .csv extension
      +                           to your file name\r\n");
  6281  000D40  0E81               	movlw	low STR_51
  6282  000D42  0100               	movlb	0	; () banked
  6283  000D44  6FA6               	movwf	printf@fmt& (0+255),b
  6284  000D46  0EF3               	movlw	high STR_51
  6285  000D48  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6286  000D4A  ECAC  F01A         	call	_printf	;wreg free
  6287                           
  6288                           ;main.c: 324:                 printf("Select:     Apply\r\n");
  6289  000D4E  0E48               	movlw	low STR_52
  6290  000D50  0100               	movlb	0	; () banked
  6291  000D52  6FA6               	movwf	printf@fmt& (0+255),b
  6292  000D54  0EFF               	movlw	high STR_52
  6293  000D56  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6294  000D58  ECAC  F01A         	call	_printf	;wreg free
  6295                           
  6296                           ;main.c: 325:                 printf("Press any key to start\r\n");
  6297  000D5C  0E56               	movlw	low STR_53
  6298  000D5E  0100               	movlb	0	; () banked
  6299  000D60  6FA6               	movwf	printf@fmt& (0+255),b
  6300  000D62  0EFE               	movlw	high STR_53
  6301  000D64  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6302  000D66  ECAC  F01A         	call	_printf	;wreg free
  6303  000D6A                     l6195:
  6304  000D6A  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6305  000D6E  0900               	iorlw	0
  6306  000D70  B4D8               	btfsc	status,2,c
  6307  000D72  EFBD  F006         	goto	u6241
  6308  000D76  EFBF  F006         	goto	u6240
  6309  000D7A                     u6241:
  6310  000D7A  EFB5  F006         	goto	l6195
  6311  000D7E                     u6240:
  6312  000D7E                     
  6313                           ;main.c: 328:                 EUSART1_Read();
  6314  000D7E  ECC0  F01A         	call	_EUSART1_Read	;wreg free
  6315  000D82                     
  6316                           ;main.c: 330:                 uint32_t address = writeStartAddress;
  6317  000D82  C1BF  F1B8         	movff	main@writeStartAddress,main@address
  6318  000D86  C1C0  F1B9         	movff	main@writeStartAddress+1,main@address+1
  6319  000D8A  C1C1  F1BA         	movff	main@writeStartAddress+2,main@address+2
  6320  000D8E  C1C2  F1BB         	movff	main@writeStartAddress+3,main@address+3
  6321  000D92                     
  6322                           ;main.c: 331:                 uint32_t endAddress = writeEndAddress;
  6323  000D92  C1C3  F1AF         	movff	main@writeEndAddress,main@endAddress
  6324  000D96  C1C4  F1B0         	movff	main@writeEndAddress+1,main@endAddress+1
  6325  000D9A  C1C5  F1B1         	movff	main@writeEndAddress+2,main@endAddress+2
  6326  000D9E  C1C6  F1B2         	movff	main@writeEndAddress+3,main@endAddress+3
  6327  000DA2                     
  6328                           ;main.c: 332:                 uint32_t numBlocks = (endAddress - address) >> 9;
  6329  000DA2  0101               	movlb	1	; () banked
  6330  000DA4  51B8               	movf	main@address& (0+255),w,b
  6331  000DA6  5DAF               	subwf	main@endAddress& (0+255),w,b
  6332  000DA8  0100               	movlb	0	; () banked
  6333  000DAA  6FBE               	movwf	??_main& (0+255),b
  6334  000DAC  0101               	movlb	1	; () banked
  6335  000DAE  51B9               	movf	(main@address+1)& (0+255),w,b
  6336  000DB0  59B0               	subwfb	(main@endAddress+1)& (0+255),w,b
  6337  000DB2  0100               	movlb	0	; () banked
  6338  000DB4  6FBF               	movwf	(??_main+1)& (0+255),b
  6339  000DB6  0101               	movlb	1	; () banked
  6340  000DB8  51BA               	movf	(main@address+2)& (0+255),w,b
  6341  000DBA  59B1               	subwfb	(main@endAddress+2)& (0+255),w,b
  6342  000DBC  0100               	movlb	0	; () banked
  6343  000DBE  6FC0               	movwf	(??_main+2)& (0+255),b
  6344  000DC0  0101               	movlb	1	; () banked
  6345  000DC2  51BB               	movf	(main@address+3)& (0+255),w,b
  6346  000DC4  59B2               	subwfb	(main@endAddress+3)& (0+255),w,b
  6347  000DC6  0100               	movlb	0	; () banked
  6348  000DC8  6FC1               	movwf	(??_main+3)& (0+255),b
  6349  000DCA  0E0A               	movlw	10
  6350  000DCC  EFED  F006         	goto	u6250
  6351  000DD0                     u6255:
  6352  000DD0  90D8               	bcf	status,0,c
  6353  000DD2  33C1               	rrcf	(??_main+3)& (0+255),f,b
  6354  000DD4  33C0               	rrcf	(??_main+2)& (0+255),f,b
  6355  000DD6  33BF               	rrcf	(??_main+1)& (0+255),f,b
  6356  000DD8  33BE               	rrcf	??_main& (0+255),f,b
  6357  000DDA                     u6250:
  6358  000DDA  2EE8               	decfsz	wreg,f,c
  6359  000DDC  EFE8  F006         	goto	u6255
  6360  000DE0  C0BE  F1A1         	movff	??_main,main@numBlocks
  6361  000DE4  C0BF  F1A2         	movff	??_main+1,main@numBlocks+1
  6362  000DE8  C0C0  F1A3         	movff	??_main+2,main@numBlocks+2
  6363  000DEC  C0C1  F1A4         	movff	??_main+3,main@numBlocks+3
  6364  000DF0                     
  6365                           ; BSR set to: 0
  6366                           ;main.c: 333:                 uint32_t printedBlocks = 0;
  6367  000DF0  0E00               	movlw	0
  6368  000DF2  0101               	movlb	1	; () banked
  6369  000DF4  6FA7               	movwf	main@printedBlocks& (0+255),b
  6370  000DF6  0E00               	movlw	0
  6371  000DF8  6FA8               	movwf	(main@printedBlocks+1)& (0+255),b
  6372  000DFA  0E00               	movlw	0
  6373  000DFC  6FA9               	movwf	(main@printedBlocks+2)& (0+255),b
  6374  000DFE  0E00               	movlw	0
  6375  000E00  6FAA               	movwf	(main@printedBlocks+3)& (0+255),b
  6376                           
  6377                           ;main.c: 335:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6378  000E02  EF57  F007         	goto	l6227
  6379  000E06                     l6207:
  6380                           
  6381                           ; BSR set to: 1
  6382                           ;main.c: 336:                     SDCARD_ReadBlock(address, sdCardBuffer);
  6383  000E06  C1B8  F015         	movff	main@address,SDCARD_ReadBlock@addr
  6384  000E0A  C1B9  F016         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  6385  000E0E  C1BA  F017         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  6386  000E12  C1BB  F018         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  6387  000E16  0ED5               	movlw	low _sdCardBuffer
  6388  000E18  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6389  000E1A  0E07               	movlw	high _sdCardBuffer
  6390  000E1C  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6391  000E1E  EC17  F017         	call	_SDCARD_ReadBlock	;wreg free
  6392  000E22                     
  6393                           ;main.c: 337:                     address = incrementAddress(address);
  6394  000E22  C1B8  F014         	movff	main@address,incrementAddress@sdCardAddress
  6395  000E26  C1B9  F015         	movff	main@address+1,incrementAddress@sdCardAddress+1
  6396  000E2A  C1BA  F016         	movff	main@address+2,incrementAddress@sdCardAddress+2
  6397  000E2E  C1BB  F017         	movff	main@address+3,incrementAddress@sdCardAddress+3
  6398  000E32  EC1C  F019         	call	_incrementAddress	;wreg free
  6399  000E36  C014  F1B8         	movff	?_incrementAddress,main@address
  6400  000E3A  C015  F1B9         	movff	?_incrementAddress+1,main@address+1
  6401  000E3E  C016  F1BA         	movff	?_incrementAddress+2,main@address+2
  6402  000E42  C017  F1BB         	movff	?_incrementAddress+3,main@address+3
  6403  000E46                     
  6404                           ;main.c: 339:                     for (uint16_t i = 0; i != 512; i++) {
  6405  000E46  0E00               	movlw	0
  6406  000E48  0101               	movlb	1	; () banked
  6407  000E4A  6FB6               	movwf	(main@i_1309+1)& (0+255),b
  6408  000E4C  0E00               	movlw	0
  6409  000E4E  6FB5               	movwf	main@i_1309& (0+255),b
  6410  000E50                     l6213:
  6411                           
  6412                           ; BSR set to: 1
  6413  000E50  0E02               	movlw	2
  6414  000E52  19B6               	xorwf	(main@i_1309+1)& (0+255),w,b
  6415  000E54  11B5               	iorwf	main@i_1309& (0+255),w,b
  6416  000E56  A4D8               	btfss	status,2,c
  6417  000E58  EF30  F007         	goto	u6261
  6418  000E5C  EF32  F007         	goto	u6260
  6419  000E60                     u6261:
  6420  000E60  EF34  F007         	goto	l6217
  6421  000E64                     u6260:
  6422  000E64  EF51  F007         	goto	l6225
  6423  000E68                     l6217:
  6424                           
  6425                           ; BSR set to: 1
  6426                           ;main.c: 340:                         uint16_t printVal = sdCardBuffer[i];
  6427  000E68  0ED5               	movlw	low _sdCardBuffer
  6428  000E6A  25B5               	addwf	main@i_1309& (0+255),w,b
  6429  000E6C  6ED9               	movwf	fsr2l,c
  6430  000E6E  0E07               	movlw	high _sdCardBuffer
  6431  000E70  21B6               	addwfc	(main@i_1309+1)& (0+255),w,b
  6432  000E72  6EDA               	movwf	fsr2h,c
  6433  000E74  50DF               	movf	indf2,w,c
  6434  000E76  0100               	movlb	0	; () banked
  6435  000E78  6FBE               	movwf	??_main& (0+255),b
  6436  000E7A  51BE               	movf	??_main& (0+255),w,b
  6437  000E7C  0101               	movlb	1	; () banked
  6438  000E7E  6FA5               	movwf	main@printVal& (0+255),b
  6439  000E80  6BA6               	clrf	(main@printVal+1)& (0+255),b
  6440  000E82                     
  6441                           ; BSR set to: 1
  6442                           ;main.c: 341:                         printf("%d\r\n", printVal);
  6443  000E82  0E8E               	movlw	low (STR_35+25)
  6444  000E84  0100               	movlb	0	; () banked
  6445  000E86  6FA6               	movwf	printf@fmt& (0+255),b
  6446  000E88  0EFD               	movlw	high (STR_35+25)
  6447  000E8A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6448  000E8C  C1A5  F0A8         	movff	main@printVal,?_printf+2
  6449  000E90  C1A6  F0A9         	movff	main@printVal+1,?_printf+3
  6450  000E94  ECAC  F01A         	call	_printf	;wreg free
  6451  000E98                     
  6452                           ;main.c: 342:                     }
  6453  000E98  0101               	movlb	1	; () banked
  6454  000E9A  4BB5               	infsnz	main@i_1309& (0+255),f,b
  6455  000E9C  2BB6               	incf	(main@i_1309+1)& (0+255),f,b
  6456  000E9E  EF28  F007         	goto	l6213
  6457  000EA2                     l6225:
  6458                           
  6459                           ; BSR set to: 1
  6460                           ;main.c: 343:                     printedBlocks++;
  6461  000EA2  0E01               	movlw	1
  6462  000EA4  27A7               	addwf	main@printedBlocks& (0+255),f,b
  6463  000EA6  0E00               	movlw	0
  6464  000EA8  23A8               	addwfc	(main@printedBlocks+1)& (0+255),f,b
  6465  000EAA  23A9               	addwfc	(main@printedBlocks+2)& (0+255),f,b
  6466  000EAC  23AA               	addwfc	(main@printedBlocks+3)& (0+255),f,b
  6467  000EAE                     l6227:
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;main.c: 335:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6471  000EAE  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6472  000EB2  0900               	iorlw	0
  6473  000EB4  A4D8               	btfss	status,2,c
  6474  000EB6  EF5F  F007         	goto	u6271
  6475  000EBA  EF61  F007         	goto	u6270
  6476  000EBE                     u6271:
  6477  000EBE  EF74  F007         	goto	l6231
  6478  000EC2                     u6270:
  6479  000EC2  0101               	movlb	1	; () banked
  6480  000EC4  51AF               	movf	main@endAddress& (0+255),w,b
  6481  000EC6  19B8               	xorwf	main@address& (0+255),w,b
  6482  000EC8  E10D               	bnz	u6281
  6483  000ECA  51B0               	movf	(main@endAddress+1)& (0+255),w,b
  6484  000ECC  19B9               	xorwf	(main@address+1)& (0+255),w,b
  6485  000ECE  E10A               	bnz	u6281
  6486  000ED0  51B1               	movf	(main@endAddress+2)& (0+255),w,b
  6487  000ED2  19BA               	xorwf	(main@address+2)& (0+255),w,b
  6488  000ED4  E107               	bnz	u6281
  6489  000ED6  51B2               	movf	(main@endAddress+3)& (0+255),w,b
  6490  000ED8  19BB               	xorwf	(main@address+3)& (0+255),w,b
  6491  000EDA  A4D8               	btfss	status,2,c
  6492  000EDC  EF72  F007         	goto	u6281
  6493  000EE0  EF74  F007         	goto	u6280
  6494  000EE4                     u6281:
  6495  000EE4  EF03  F007         	goto	l6207
  6496  000EE8                     u6280:
  6497  000EE8                     l6231:
  6498                           
  6499                           ;main.c: 345:                 if ((EUSART1_is_rx_ready()))
  6500  000EE8  EC4A  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6501  000EEC  0900               	iorlw	0
  6502  000EEE  B4D8               	btfsc	status,2,c
  6503  000EF0  EF7C  F007         	goto	u6291
  6504  000EF4  EF7E  F007         	goto	u6290
  6505  000EF8                     u6291:
  6506  000EF8  EF80  F007         	goto	l6235
  6507  000EFC                     u6290:
  6508  000EFC                     
  6509                           ;main.c: 346:                     EUSART1_Read();
  6510  000EFC  ECC0  F01A         	call	_EUSART1_Read	;wreg free
  6511  000F00                     l6235:
  6512                           
  6513                           ;main.c: 348:                 printf("Spooled %u out of the %u blocks.\r\n", printedBloc
      +                          ks, numBlocks);
  6514  000F00  0ED3               	movlw	low STR_55
  6515  000F02  0100               	movlb	0	; () banked
  6516  000F04  6FA6               	movwf	printf@fmt& (0+255),b
  6517  000F06  0EFC               	movlw	high STR_55
  6518  000F08  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6519  000F0A  C1A7  F0A8         	movff	main@printedBlocks,?_printf+2
  6520  000F0E  C1A8  F0A9         	movff	main@printedBlocks+1,?_printf+3
  6521  000F12  C1A9  F0AA         	movff	main@printedBlocks+2,?_printf+4
  6522  000F16  C1AA  F0AB         	movff	main@printedBlocks+3,?_printf+5
  6523  000F1A  C1A1  F0AC         	movff	main@numBlocks,?_printf+6
  6524  000F1E  C1A2  F0AD         	movff	main@numBlocks+1,?_printf+7
  6525  000F22  C1A3  F0AE         	movff	main@numBlocks+2,?_printf+8
  6526  000F26  C1A4  F0AF         	movff	main@numBlocks+3,?_printf+9
  6527  000F2A  ECAC  F01A         	call	_printf	;wreg free
  6528  000F2E                     
  6529                           ;main.c: 349:                 printf("To close the file follow these instructions: \r\n"
      +                          );
  6530  000F2E  0EDA               	movlw	low STR_56
  6531  000F30  0100               	movlb	0	; () banked
  6532  000F32  6FA6               	movwf	printf@fmt& (0+255),b
  6533  000F34  0EFB               	movlw	high STR_56
  6534  000F36  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6535  000F38  ECAC  F01A         	call	_printf	;wreg free
  6536  000F3C                     
  6537                           ;main.c: 350:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6538  000F3C  0ED0               	movlw	low STR_47
  6539  000F3E  0100               	movlb	0	; () banked
  6540  000F40  6FA6               	movwf	printf@fmt& (0+255),b
  6541  000F42  0EFA               	movlw	high STR_47
  6542  000F44  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6543  000F46  ECAC  F01A         	call	_printf	;wreg free
  6544  000F4A                     
  6545                           ;main.c: 351:                 printf("Select:     Change settings...\r\n");
  6546  000F4A  0EF6               	movlw	low STR_48
  6547  000F4C  0100               	movlb	0	; () banked
  6548  000F4E  6FA6               	movwf	printf@fmt& (0+255),b
  6549  000F50  0EFC               	movlw	high STR_48
  6550  000F52  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6551  000F54  ECAC  F01A         	call	_printf	;wreg free
  6552  000F58                     
  6553                           ;main.c: 352:                 printf("Select:     Logging\r\n");
  6554  000F58  0EB6               	movlw	low STR_49
  6555  000F5A  0100               	movlb	0	; () banked
  6556  000F5C  6FA6               	movwf	printf@fmt& (0+255),b
  6557  000F5E  0EFE               	movlw	high STR_49
  6558  000F60  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6559  000F62  ECAC  F01A         	call	_printf	;wreg free
  6560  000F66                     
  6561                           ;main.c: 353:                 printf("Select:     Session  logging: None\r\n");
  6562  000F66  0E89               	movlw	low STR_60
  6563  000F68  0100               	movlb	0	; () banked
  6564  000F6A  6FA6               	movwf	printf@fmt& (0+255),b
  6565  000F6C  0EFC               	movlw	high STR_60
  6566  000F6E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6567  000F70  ECAC  F01A         	call	_printf	;wreg free
  6568  000F74                     
  6569                           ;main.c: 354:                 printf("Select:     Apply \r\n");
  6570  000F74  0ECC               	movlw	low STR_61
  6571  000F76  0100               	movlb	0	; () banked
  6572  000F78  6FA6               	movwf	printf@fmt& (0+255),b
  6573  000F7A  0EFE               	movlw	high STR_61
  6574  000F7C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6575  000F7E  ECAC  F01A         	call	_printf	;wreg free
  6576                           
  6577                           ;main.c: 356:                 break;
  6578  000F82  EF7E  F000         	goto	l5931
  6579  000F86                     l6249:
  6580                           
  6581                           ; BSR set to: 0
  6582                           ;main.c: 364:                 SPI2_Close();
  6583  000F86  EC8A  F01B         	call	_SPI2_Close	;wreg free
  6584  000F8A                     
  6585                           ;main.c: 365:                 SPI2_Open(SPI2_DEFAULT);
  6586  000F8A  0E00               	movlw	0
  6587  000F8C  ECC1  F016         	call	_SPI2_Open
  6588  000F90                     
  6589                           ;main.c: 366:                 SDCARD_Initialize(1);
  6590  000F90  0E01               	movlw	1
  6591  000F92  EC12  F014         	call	_SDCARD_Initialize
  6592                           
  6593                           ;main.c: 367:                 break;
  6594  000F96  EF7E  F000         	goto	l5931
  6595  000F9A                     l6255:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;main.c: 374:                 if (cmd == 'a') {
  6599  000F9A  0E61               	movlw	97
  6600  000F9C  0101               	movlb	1	; () banked
  6601  000F9E  19BC               	xorwf	main@cmd& (0+255),w,b
  6602  000FA0  A4D8               	btfss	status,2,c
  6603  000FA2  EFD5  F007         	goto	u6301
  6604  000FA6  EFD7  F007         	goto	u6300
  6605  000FAA                     u6301:
  6606  000FAA  EF03  F008         	goto	l6265
  6607  000FAE                     u6300:
  6608  000FAE                     
  6609                           ; BSR set to: 1
  6610                           ;main.c: 375:                     sdCardAddress -= 512;
  6611  000FAE  0E00               	movlw	0
  6612  000FB0  5FCB               	subwf	main@sdCardAddress& (0+255),f,b
  6613  000FB2  0E02               	movlw	2
  6614  000FB4  5BCC               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  6615  000FB6  0E00               	movlw	0
  6616  000FB8  5BCD               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  6617  000FBA  0E00               	movlw	0
  6618  000FBC  5BCE               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  6619                           
  6620                           ;main.c: 376:                     if (sdCardAddress >= 0x04000000) {
  6621  000FBE  0E04               	movlw	4
  6622  000FC0  5DCE               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6623  000FC2  A0D8               	btfss	status,0,c
  6624  000FC4  EFE6  F007         	goto	u6311
  6625  000FC8  EFE8  F007         	goto	u6310
  6626  000FCC                     u6311:
  6627  000FCC  EFFA  F007         	goto	l6263
  6628  000FD0                     u6310:
  6629  000FD0                     
  6630                           ; BSR set to: 1
  6631                           ;main.c: 377:                         printf("Underflowed to high address\r\n");
  6632  000FD0  0E93               	movlw	low STR_62
  6633  000FD2  0100               	movlb	0	; () banked
  6634  000FD4  6FA6               	movwf	printf@fmt& (0+255),b
  6635  000FD6  0EFD               	movlw	high STR_62
  6636  000FD8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6637  000FDA  ECAC  F01A         	call	_printf	;wreg free
  6638  000FDE                     
  6639                           ;main.c: 378:                         sdCardAddress = 0x04000000 - 512;
  6640  000FDE  0E00               	movlw	0
  6641  000FE0  0101               	movlb	1	; () banked
  6642  000FE2  6FCB               	movwf	main@sdCardAddress& (0+255),b
  6643  000FE4  0EFE               	movlw	254
  6644  000FE6  6FCC               	movwf	(main@sdCardAddress+1)& (0+255),b
  6645  000FE8  0EFF               	movlw	255
  6646  000FEA  6FCD               	movwf	(main@sdCardAddress+2)& (0+255),b
  6647  000FEC  0E03               	movlw	3
  6648  000FEE  6FCE               	movwf	(main@sdCardAddress+3)& (0+255),b
  6649                           
  6650                           ;main.c: 379:                     } else {
  6651  000FF0  EF2D  F008         	goto	l572
  6652  000FF4                     l6263:
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;main.c: 380:                         printf("Decreased address\r\n");
  6656  000FF4  0E20               	movlw	low STR_63
  6657  000FF6  0100               	movlb	0	; () banked
  6658  000FF8  6FA6               	movwf	printf@fmt& (0+255),b
  6659  000FFA  0EFF               	movlw	high STR_63
  6660  000FFC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6661  000FFE  ECAC  F01A         	call	_printf	;wreg free
  6662  001002  EF2D  F008         	goto	l572
  6663  001006                     l6265:
  6664                           
  6665                           ; BSR set to: 1
  6666                           ;main.c: 383:                     sdCardAddress += 512;
  6667  001006  0E00               	movlw	0
  6668  001008  27CB               	addwf	main@sdCardAddress& (0+255),f,b
  6669  00100A  0E02               	movlw	2
  6670  00100C  23CC               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  6671  00100E  0E00               	movlw	0
  6672  001010  23CD               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  6673  001012  0E00               	movlw	0
  6674  001014  23CE               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  6675                           
  6676                           ;main.c: 384:                     if (sdCardAddress >= 0x04000000) {
  6677  001016  0E04               	movlw	4
  6678  001018  5DCE               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6679  00101A  A0D8               	btfss	status,0,c
  6680  00101C  EF12  F008         	goto	u6321
  6681  001020  EF14  F008         	goto	u6320
  6682  001024                     u6321:
  6683  001024  EF26  F008         	goto	l6271
  6684  001028                     u6320:
  6685  001028                     
  6686                           ; BSR set to: 1
  6687                           ;main.c: 385:                         printf("Overflowed to low address\r\n");
  6688  001028  0EEA               	movlw	low STR_64
  6689  00102A  0100               	movlb	0	; () banked
  6690  00102C  6FA6               	movwf	printf@fmt& (0+255),b
  6691  00102E  0EFD               	movlw	high STR_64
  6692  001030  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6693  001032  ECAC  F01A         	call	_printf	;wreg free
  6694  001036                     
  6695                           ;main.c: 386:                         sdCardAddress = 0x00000000;
  6696  001036  0E00               	movlw	0
  6697  001038  0101               	movlb	1	; () banked
  6698  00103A  6FCB               	movwf	main@sdCardAddress& (0+255),b
  6699  00103C  0E00               	movlw	0
  6700  00103E  6FCC               	movwf	(main@sdCardAddress+1)& (0+255),b
  6701  001040  0E00               	movlw	0
  6702  001042  6FCD               	movwf	(main@sdCardAddress+2)& (0+255),b
  6703  001044  0E00               	movlw	0
  6704  001046  6FCE               	movwf	(main@sdCardAddress+3)& (0+255),b
  6705                           
  6706                           ;main.c: 387:                     } else {
  6707  001048  EF2D  F008         	goto	l572
  6708  00104C                     l6271:
  6709                           
  6710                           ; BSR set to: 1
  6711                           ;main.c: 388:                         printf("Increased address\r\n");
  6712  00104C  0E34               	movlw	low STR_65
  6713  00104E  0100               	movlb	0	; () banked
  6714  001050  6FA6               	movwf	printf@fmt& (0+255),b
  6715  001052  0EFF               	movlw	high STR_65
  6716  001054  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6717  001056  ECAC  F01A         	call	_printf	;wreg free
  6718  00105A                     l572:
  6719                           
  6720                           ;main.c: 393:                 printf("SD card address:  ");
  6721  00105A  0E5C               	movlw	low STR_66
  6722  00105C  0100               	movlb	0	; () banked
  6723  00105E  6FA6               	movwf	printf@fmt& (0+255),b
  6724  001060  0EFF               	movlw	high STR_66
  6725  001062  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6726  001064  ECAC  F01A         	call	_printf	;wreg free
  6727                           
  6728                           ;main.c: 394:                 printf("%04x", sdCardAddress >> 16);
  6729  001068  0EEE               	movlw	low STR_10
  6730  00106A  0100               	movlb	0	; () banked
  6731  00106C  6FA6               	movwf	printf@fmt& (0+255),b
  6732  00106E  0EFF               	movlw	high STR_10
  6733  001070  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6734  001072  C1CD  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  6735  001076  C1CE  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  6736  00107A  6BAA               	clrf	(?_printf+4)& (0+255),b
  6737  00107C  6BAB               	clrf	(?_printf+5)& (0+255),b
  6738  00107E  ECAC  F01A         	call	_printf	;wreg free
  6739                           
  6740                           ;main.c: 395:                 printf(":");
  6741  001082  0EFD               	movlw	low STR_11
  6742  001084  0100               	movlb	0	; () banked
  6743  001086  6FA6               	movwf	printf@fmt& (0+255),b
  6744  001088  0EFF               	movlw	high STR_11
  6745  00108A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6746  00108C  ECAC  F01A         	call	_printf	;wreg free
  6747                           
  6748                           ;main.c: 396:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  6749  001090  0EEE               	movlw	low STR_10
  6750  001092  0100               	movlb	0	; () banked
  6751  001094  6FA6               	movwf	printf@fmt& (0+255),b
  6752  001096  0EFF               	movlw	high STR_10
  6753  001098  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6754  00109A  0EFF               	movlw	255
  6755  00109C  0101               	movlb	1	; () banked
  6756  00109E  15CB               	andwf	main@sdCardAddress& (0+255),w,b
  6757  0010A0  0100               	movlb	0	; () banked
  6758  0010A2  6FA8               	movwf	(?_printf+2)& (0+255),b
  6759  0010A4  0EFF               	movlw	255
  6760  0010A6  0101               	movlb	1	; () banked
  6761  0010A8  15CC               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  6762  0010AA  0100               	movlb	0	; () banked
  6763  0010AC  6FA9               	movwf	(?_printf+3)& (0+255),b
  6764  0010AE  0E00               	movlw	0
  6765  0010B0  0101               	movlb	1	; () banked
  6766  0010B2  15CD               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  6767  0010B4  0100               	movlb	0	; () banked
  6768  0010B6  6FAA               	movwf	(?_printf+4)& (0+255),b
  6769  0010B8  0E00               	movlw	0
  6770  0010BA  0101               	movlb	1	; () banked
  6771  0010BC  15CE               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  6772  0010BE  0100               	movlb	0	; () banked
  6773  0010C0  6FAB               	movwf	(?_printf+5)& (0+255),b
  6774  0010C2  ECAC  F01A         	call	_printf	;wreg free
  6775                           
  6776                           ;main.c: 397:                 printf("\r\n");
  6777  0010C6  0EAE               	movlw	low (STR_71+12)
  6778  0010C8  0100               	movlb	0	; () banked
  6779  0010CA  6FA6               	movwf	printf@fmt& (0+255),b
  6780  0010CC  0EFF               	movlw	high (STR_71+12)
  6781  0010CE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6782  0010D0  ECAC  F01A         	call	_printf	;wreg free
  6783                           
  6784                           ;main.c: 398:                 break;
  6785  0010D4  EF7E  F000         	goto	l5931
  6786  0010D8                     l6273:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;main.c: 404:                 SDCARD_ReadBlock(sdCardAddress, sdCardBuffer);
  6790  0010D8  C1CB  F015         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  6791  0010DC  C1CC  F016         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  6792  0010E0  C1CD  F017         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  6793  0010E4  C1CE  F018         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  6794  0010E8  0ED5               	movlw	low _sdCardBuffer
  6795  0010EA  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6796  0010EC  0E07               	movlw	high _sdCardBuffer
  6797  0010EE  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6798  0010F0  EC17  F017         	call	_SDCARD_ReadBlock	;wreg free
  6799  0010F4                     
  6800                           ;main.c: 405:                 printf("Read block: \r\n");
  6801  0010F4  0EA2               	movlw	low STR_71
  6802  0010F6  0100               	movlb	0	; () banked
  6803  0010F8  6FA6               	movwf	printf@fmt& (0+255),b
  6804  0010FA  0EFF               	movlw	high STR_71
  6805  0010FC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6806  0010FE  ECAC  F01A         	call	_printf	;wreg free
  6807  001102                     
  6808                           ;main.c: 406:                 printAddress(sdCardAddress);
  6809  001102  C1CB  F0B4         	movff	main@sdCardAddress,printAddress@address
  6810  001106  C1CC  F0B5         	movff	main@sdCardAddress+1,printAddress@address+1
  6811  00110A  C1CD  F0B6         	movff	main@sdCardAddress+2,printAddress@address+2
  6812  00110E  C1CE  F0B7         	movff	main@sdCardAddress+3,printAddress@address+3
  6813  001112  EC2F  F018         	call	_printAddress	;wreg free
  6814  001116                     
  6815                           ;main.c: 407:                 hexDumpBuffer(sdCardBuffer);
  6816  001116  0ED5               	movlw	low _sdCardBuffer
  6817  001118  0100               	movlb	0	; () banked
  6818  00111A  6FB4               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  6819  00111C  0E07               	movlw	high _sdCardBuffer
  6820  00111E  6FB5               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  6821  001120  EC8B  F011         	call	_hexDumpBuffer	;wreg free
  6822                           
  6823                           ;main.c: 408:                 break;
  6824  001124  EF7E  F000         	goto	l5931
  6825  001128                     l6281:
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;main.c: 414:                 printf("Unknown key %c\r\n", cmd);
  6829  001128  0E6F               	movlw	low STR_72
  6830  00112A  6FA6               	movwf	printf@fmt& (0+255),b
  6831  00112C  0EFF               	movlw	high STR_72
  6832  00112E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6833  001130  C1BC  F0A8         	movff	main@cmd,?_printf+2
  6834  001134  6BA9               	clrf	(?_printf+3)& (0+255),b
  6835  001136  ECAC  F01A         	call	_printf	;wreg free
  6836                           
  6837                           ;main.c: 415:                 break;
  6838  00113A  EF7E  F000         	goto	l5931
  6839  00113E                     l6285:
  6840  00113E  0101               	movlb	1	; () banked
  6841  001140  51BC               	movf	main@cmd& (0+255),w,b
  6842  001142  0100               	movlb	0	; () banked
  6843  001144  6FBE               	movwf	??_main& (0+255),b
  6844  001146  6BBF               	clrf	(??_main+1)& (0+255),b
  6845                           
  6846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6847                           ; Switch size 1, requested type "simple"
  6848                           ; Number of cases is 1, Range of values is 0 to 0
  6849                           ; switch strategies available:
  6850                           ; Name         Instructions Cycles
  6851                           ; simple_byte            4     3 (average)
  6852                           ;	Chosen strategy is simple_byte
  6853  001148  51BF               	movf	(??_main+1)& (0+255),w,b
  6854  00114A  0A00               	xorlw	0	; case 0
  6855  00114C  B4D8               	btfsc	status,2,c
  6856  00114E  EFAB  F008         	goto	l6403
  6857  001152  EF94  F008         	goto	l6281
  6858  001156                     l6403:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ; Switch size 1, requested type "simple"
  6862                           ; Number of cases is 14, Range of values is 43 to 122
  6863                           ; switch strategies available:
  6864                           ; Name         Instructions Cycles
  6865                           ; simple_byte           43    22 (average)
  6866                           ;	Chosen strategy is simple_byte
  6867  001156  51BE               	movf	??_main& (0+255),w,b
  6868  001158  0A2B               	xorlw	43	; case 43
  6869  00115A  B4D8               	btfsc	status,2,c
  6870  00115C  EFAE  F002         	goto	l6001
  6871  001160  0A06               	xorlw	6	; case 45
  6872  001162  B4D8               	btfsc	status,2,c
  6873  001164  EFB6  F002         	goto	l6003
  6874  001168  0A1C               	xorlw	28	; case 49
  6875  00116A  B4D8               	btfsc	status,2,c
  6876  00116C  EFE8  F001         	goto	l472
  6877  001170  0A0E               	xorlw	14	; case 63
  6878  001172  B4D8               	btfsc	status,2,c
  6879  001174  EF9F  F000         	goto	l5939
  6880  001178  0A7E               	xorlw	126	; case 65
  6881  00117A  B4D8               	btfsc	status,2,c
  6882  00117C  EFCD  F007         	goto	l6255
  6883  001180  0A11               	xorlw	17	; case 80
  6884  001182  B4D8               	btfsc	status,2,c
  6885  001184  EFC9  F002         	goto	l487
  6886  001188  0A07               	xorlw	7	; case 87
  6887  00118A  B4D8               	btfsc	status,2,c
  6888  00118C  EF7C  F003         	goto	l6041
  6889  001190  0A0D               	xorlw	13	; case 90
  6890  001192  B4D8               	btfsc	status,2,c
  6891  001194  EFA9  F001         	goto	l5943
  6892  001198  0A3B               	xorlw	59	; case 97
  6893  00119A  B4D8               	btfsc	status,2,c
  6894  00119C  EFCD  F007         	goto	l6255
  6895  0011A0  0A08               	xorlw	8	; case 105
  6896  0011A2  B4D8               	btfsc	status,2,c
  6897  0011A4  EFC3  F007         	goto	l6249
  6898  0011A8  0A06               	xorlw	6	; case 111
  6899  0011AA  B4D8               	btfsc	status,2,c
  6900  0011AC  EFA1  F001         	goto	l5941
  6901  0011B0  0A1D               	xorlw	29	; case 114
  6902  0011B2  B4D8               	btfsc	status,2,c
  6903  0011B4  EF6C  F008         	goto	l6273
  6904  0011B8  0A01               	xorlw	1	; case 115
  6905  0011BA  B4D8               	btfsc	status,2,c
  6906  0011BC  EF70  F006         	goto	l6193
  6907  0011C0  0A09               	xorlw	9	; case 122
  6908  0011C2  B4D8               	btfsc	status,2,c
  6909  0011C4  EFCA  F001         	goto	l5955
  6910  0011C8  EF94  F008         	goto	l6281
  6911  0011CC  EF27  F000         	goto	start
  6912  0011D0                     __end_of_main:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _printAscii *****************
  6916 ;; Defined at:
  6917 ;;		line 551 in file "main.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 0/0
  6928 ;;		On exit  : 0/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6935 ;;Total ram usage:        0 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:   13
  6938 ;; This function calls:
  6939 ;;		_printf
  6940 ;; This function is called by:
  6941 ;;		_main
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text1
  6946  00212A                     __ptext1:
  6947                           	callstack 0
  6948  00212A                     _printAscii:
  6949                           	callstack 17
  6950  00212A                     
  6951                           ;main.c: 552:     printf("...........................................................\r\
      +                          n");
  6952  00212A  0E0C               	movlw	low STR_78
  6953  00212C  0100               	movlb	0	; () banked
  6954  00212E  6FA6               	movwf	printf@fmt& (0+255),b
  6955  002130  0EF4               	movlw	high STR_78
  6956  002132  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6957  002134  ECAC  F01A         	call	_printf	;wreg free
  6958                           
  6959                           ;main.c: 553:     printf(".....................?????????????????.....................\r\
      +                          n");
  6960  002138  0E4A               	movlw	low STR_79
  6961  00213A  0100               	movlb	0	; () banked
  6962  00213C  6FA6               	movwf	printf@fmt& (0+255),b
  6963  00213E  0EF4               	movlw	high STR_79
  6964  002140  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6965  002142  ECAC  F01A         	call	_printf	;wreg free
  6966                           
  6967                           ;main.c: 554:     printf(".................?????????????????????????.................\r\
      +                          n");
  6968  002146  0E88               	movlw	low STR_80
  6969  002148  0100               	movlb	0	; () banked
  6970  00214A  6FA6               	movwf	printf@fmt& (0+255),b
  6971  00214C  0EF4               	movlw	high STR_80
  6972  00214E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6973  002150  ECAC  F01A         	call	_printf	;wreg free
  6974                           
  6975                           ;main.c: 555:     printf("..............???????????????????????????????..............\r\
      +                          n");
  6976  002154  0EC6               	movlw	low STR_81
  6977  002156  0100               	movlb	0	; () banked
  6978  002158  6FA6               	movwf	printf@fmt& (0+255),b
  6979  00215A  0EF4               	movlw	high STR_81
  6980  00215C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6981  00215E  ECAC  F01A         	call	_printf	;wreg free
  6982                           
  6983                           ;main.c: 556:     printf("............???????????????????????????????????............\r\
      +                          n");
  6984  002162  0E04               	movlw	low STR_82
  6985  002164  0100               	movlb	0	; () banked
  6986  002166  6FA6               	movwf	printf@fmt& (0+255),b
  6987  002168  0EF5               	movlw	high STR_82
  6988  00216A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6989  00216C  ECAC  F01A         	call	_printf	;wreg free
  6990                           
  6991                           ;main.c: 557:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  6992  002170  0E42               	movlw	low STR_83
  6993  002172  0100               	movlb	0	; () banked
  6994  002174  6FA6               	movwf	printf@fmt& (0+255),b
  6995  002176  0EF5               	movlw	high STR_83
  6996  002178  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6997  00217A  ECAC  F01A         	call	_printf	;wreg free
  6998                           
  6999                           ;main.c: 558:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  7000  00217E  0E80               	movlw	low STR_84
  7001  002180  0100               	movlb	0	; () banked
  7002  002182  6FA6               	movwf	printf@fmt& (0+255),b
  7003  002184  0EF5               	movlw	high STR_84
  7004  002186  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7005  002188  ECAC  F01A         	call	_printf	;wreg free
  7006                           
  7007                           ;main.c: 559:     printf(".......?????????????????????????????????????????????.......\r\
      +                          n");
  7008  00218C  0EFC               	movlw	low STR_85
  7009  00218E  0100               	movlb	0	; () banked
  7010  002190  6FA6               	movwf	printf@fmt& (0+255),b
  7011  002192  0EF5               	movlw	high STR_85
  7012  002194  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7013  002196  ECAC  F01A         	call	_printf	;wreg free
  7014                           
  7015                           ;main.c: 560:     printf("......???????????????????????????????????????????????......\r\
      +                          n");
  7016  00219A  0E78               	movlw	low STR_86
  7017  00219C  0100               	movlb	0	; () banked
  7018  00219E  6FA6               	movwf	printf@fmt& (0+255),b
  7019  0021A0  0EF6               	movlw	high STR_86
  7020  0021A2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7021  0021A4  ECAC  F01A         	call	_printf	;wreg free
  7022                           
  7023                           ;main.c: 561:     printf(".....?????????????????????????????????????????????????.....\r\
      +                          n");
  7024  0021A8  0EF4               	movlw	low STR_87
  7025  0021AA  0100               	movlb	0	; () banked
  7026  0021AC  6FA6               	movwf	printf@fmt& (0+255),b
  7027  0021AE  0EF6               	movlw	high STR_87
  7028  0021B0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7029  0021B2  ECAC  F01A         	call	_printf	;wreg free
  7030                           
  7031                           ;main.c: 562:     printf("....????:::::::::::?????????????????????:::::::::::????....\r\
      +                          n");
  7032  0021B6  0E32               	movlw	low STR_88
  7033  0021B8  0100               	movlb	0	; () banked
  7034  0021BA  6FA6               	movwf	printf@fmt& (0+255),b
  7035  0021BC  0EF7               	movlw	high STR_88
  7036  0021BE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7037  0021C0  ECAC  F01A         	call	_printf	;wreg free
  7038                           
  7039                           ;main.c: 563:     printf("...??::::::::::::::::::::?????????::::::::::::::::::::??...\r\
      +                          n");
  7040  0021C4  0EAE               	movlw	low STR_89
  7041  0021C6  0100               	movlb	0	; () banked
  7042  0021C8  6FA6               	movwf	printf@fmt& (0+255),b
  7043  0021CA  0EF7               	movlw	high STR_89
  7044  0021CC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7045  0021CE  ECAC  F01A         	call	_printf	;wreg free
  7046                           
  7047                           ;main.c: 564:     printf("..???:::::::::::::::::::::::::::::::::::::::::::::::::???..\r\
      +                          n");
  7048  0021D2  0E68               	movlw	low STR_90
  7049  0021D4  0100               	movlb	0	; () banked
  7050  0021D6  6FA6               	movwf	printf@fmt& (0+255),b
  7051  0021D8  0EF8               	movlw	high STR_90
  7052  0021DA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7053  0021DC  ECAC  F01A         	call	_printf	;wreg free
  7054                           
  7055                           ;main.c: 565:     printf("..????::::::::::::::::::::::???::::::::::::::::::::::????..\r\
      +                          n");
  7056  0021E0  0EA6               	movlw	low STR_91
  7057  0021E2  0100               	movlb	0	; () banked
  7058  0021E4  6FA6               	movwf	printf@fmt& (0+255),b
  7059  0021E6  0EF8               	movlw	high STR_91
  7060  0021E8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7061  0021EA  ECAC  F01A         	call	_printf	;wreg free
  7062                           
  7063                           ;main.c: 566:     printf(".??????::::::::::::::::::::?????:::::::::::::::::::::?????.\r\
      +                          n");
  7064  0021EE  0E60               	movlw	low STR_92
  7065  0021F0  0100               	movlb	0	; () banked
  7066  0021F2  6FA6               	movwf	printf@fmt& (0+255),b
  7067  0021F4  0EF9               	movlw	high STR_92
  7068  0021F6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7069  0021F8  ECAC  F01A         	call	_printf	;wreg free
  7070                           
  7071                           ;main.c: 567:     printf(".???????::::::::::::::::::???????:::::::::::::::::::??????.\r\
      +                          n");
  7072  0021FC  0E9E               	movlw	low STR_93
  7073  0021FE  0100               	movlb	0	; () banked
  7074  002200  6FA6               	movwf	printf@fmt& (0+255),b
  7075  002202  0EF9               	movlw	high STR_93
  7076  002204  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7077  002206  ECAC  F01A         	call	_printf	;wreg free
  7078                           
  7079                           ;main.c: 568:     printf(".???????:::::::::::::::::?????????::::::::::::::::::??????.\r\
      +                          n");
  7080  00220A  0EDC               	movlw	low STR_94
  7081  00220C  0100               	movlb	0	; () banked
  7082  00220E  6FA6               	movwf	printf@fmt& (0+255),b
  7083  002210  0EF9               	movlw	high STR_94
  7084  002212  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7085  002214  ECAC  F01A         	call	_printf	;wreg free
  7086                           
  7087                           ;main.c: 569:     printf(".????????:::::::::::::::???????????:::::::::::::::????????.\r\
      +                          n");
  7088  002218  0E1A               	movlw	low STR_95
  7089  00221A  0100               	movlb	0	; () banked
  7090  00221C  6FA6               	movwf	printf@fmt& (0+255),b
  7091  00221E  0EFA               	movlw	high STR_95
  7092  002220  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7093  002222  ECAC  F01A         	call	_printf	;wreg free
  7094                           
  7095                           ;main.c: 570:     printf(".??????????::::::::::?????????????????::::::::::??????????.\r\
      +                          n");
  7096  002226  0E58               	movlw	low STR_96
  7097  002228  0100               	movlb	0	; () banked
  7098  00222A  6FA6               	movwf	printf@fmt& (0+255),b
  7099  00222C  0EFA               	movlw	high STR_96
  7100  00222E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7101  002230  ECAC  F01A         	call	_printf	;wreg free
  7102                           
  7103                           ;main.c: 571:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7104  002234  0E22               	movlw	low STR_97
  7105  002236  0100               	movlb	0	; () banked
  7106  002238  6FA6               	movwf	printf@fmt& (0+255),b
  7107  00223A  0EF9               	movlw	high STR_97
  7108  00223C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7109  00223E  ECAC  F01A         	call	_printf	;wreg free
  7110                           
  7111                           ;main.c: 572:     printf("..???????????????????????????????????????????????????????..\r\
      +                          n");
  7112  002242  0E22               	movlw	low STR_97
  7113  002244  0100               	movlb	0	; () banked
  7114  002246  6FA6               	movwf	printf@fmt& (0+255),b
  7115  002248  0EF9               	movlw	high STR_97
  7116  00224A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7117  00224C  ECAC  F01A         	call	_printf	;wreg free
  7118                           
  7119                           ;main.c: 573:     printf("...??????????????????????????????????????????????????????..\r\
      +                          n");
  7120  002250  0EE4               	movlw	low STR_99
  7121  002252  0100               	movlb	0	; () banked
  7122  002254  6FA6               	movwf	printf@fmt& (0+255),b
  7123  002256  0EF8               	movlw	high STR_99
  7124  002258  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7125  00225A  ECAC  F01A         	call	_printf	;wreg free
  7126                           
  7127                           ;main.c: 574:     printf("...?????????????:::?????????????????????:::?????????????...\r\
      +                          n");
  7128  00225E  0EEC               	movlw	low STR_100
  7129  002260  0100               	movlb	0	; () banked
  7130  002262  6FA6               	movwf	printf@fmt& (0+255),b
  7131  002264  0EF7               	movlw	high STR_100
  7132  002266  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7133  002268  ECAC  F01A         	call	_printf	;wreg free
  7134                           
  7135                           ;main.c: 575:     printf("....?????????????:::???????????????????:::??????????????...\r\
      +                          n");
  7136  00226C  0E2A               	movlw	low STR_101
  7137  00226E  0100               	movlb	0	; () banked
  7138  002270  6FA6               	movwf	printf@fmt& (0+255),b
  7139  002272  0EF8               	movlw	high STR_101
  7140  002274  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7141  002276  ECAC  F01A         	call	_printf	;wreg free
  7142                           
  7143                           ;main.c: 576:     printf("....??????????????:::?????????????????:::??????????????....\r\
      +                          n");
  7144  00227A  0E70               	movlw	low STR_102
  7145  00227C  0100               	movlb	0	; () banked
  7146  00227E  6FA6               	movwf	printf@fmt& (0+255),b
  7147  002280  0EF7               	movlw	high STR_102
  7148  002282  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7149  002284  ECAC  F01A         	call	_printf	;wreg free
  7150                           
  7151                           ;main.c: 577:     printf(".....??????????????::::?????????????::::??????????????.....\r\
      +                          n");
  7152  002288  0EB6               	movlw	low STR_103
  7153  00228A  0100               	movlb	0	; () banked
  7154  00228C  6FA6               	movwf	printf@fmt& (0+255),b
  7155  00228E  0EF6               	movlw	high STR_103
  7156  002290  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7157  002292  ECAC  F01A         	call	_printf	;wreg free
  7158                           
  7159                           ;main.c: 578:     printf("......???????????????:::::???????:::::???????????????......\r\
      +                          n");
  7160  002296  0E3A               	movlw	low STR_104
  7161  002298  0100               	movlb	0	; () banked
  7162  00229A  6FA6               	movwf	printf@fmt& (0+255),b
  7163  00229C  0EF6               	movlw	high STR_104
  7164  00229E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7165  0022A0  ECAC  F01A         	call	_printf	;wreg free
  7166                           
  7167                           ;main.c: 579:     printf(".......?????????????????:::::::::::?????????????????.......\r\
      +                          n");
  7168  0022A4  0EBE               	movlw	low STR_105
  7169  0022A6  0100               	movlb	0	; () banked
  7170  0022A8  6FA6               	movwf	printf@fmt& (0+255),b
  7171  0022AA  0EF5               	movlw	high STR_105
  7172  0022AC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7173  0022AE  ECAC  F01A         	call	_printf	;wreg free
  7174                           
  7175                           ;main.c: 580:     printf(".........?????????????????????????????????????????.........\r\
      +                          n");
  7176  0022B2  0E80               	movlw	low STR_84
  7177  0022B4  0100               	movlb	0	; () banked
  7178  0022B6  6FA6               	movwf	printf@fmt& (0+255),b
  7179  0022B8  0EF5               	movlw	high STR_84
  7180  0022BA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7181  0022BC  ECAC  F01A         	call	_printf	;wreg free
  7182                           
  7183                           ;main.c: 581:     printf("..........???????????????????????????????????????..........\r\
      +                          n");
  7184  0022C0  0E42               	movlw	low STR_83
  7185  0022C2  0100               	movlb	0	; () banked
  7186  0022C4  6FA6               	movwf	printf@fmt& (0+255),b
  7187  0022C6  0EF5               	movlw	high STR_83
  7188  0022C8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7189  0022CA  ECAC  F01A         	call	_printf	;wreg free
  7190                           
  7191                           ;main.c: 582:     printf("............???????????????????????????????????............\r\
      +                          n");
  7192  0022CE  0E04               	movlw	low STR_82
  7193  0022D0  0100               	movlb	0	; () banked
  7194  0022D2  6FA6               	movwf	printf@fmt& (0+255),b
  7195  0022D4  0EF5               	movlw	high STR_82
  7196  0022D6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7197  0022D8  ECAC  F01A         	call	_printf	;wreg free
  7198                           
  7199                           ;main.c: 583:     printf("..............???????????????????????????????..............\r\
      +                          n");
  7200  0022DC  0EC6               	movlw	low STR_81
  7201  0022DE  0100               	movlb	0	; () banked
  7202  0022E0  6FA6               	movwf	printf@fmt& (0+255),b
  7203  0022E2  0EF4               	movlw	high STR_81
  7204  0022E4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7205  0022E6  ECAC  F01A         	call	_printf	;wreg free
  7206                           
  7207                           ;main.c: 584:     printf(".................?????????????????????????.................\r\
      +                          n");
  7208  0022EA  0E88               	movlw	low STR_80
  7209  0022EC  0100               	movlb	0	; () banked
  7210  0022EE  6FA6               	movwf	printf@fmt& (0+255),b
  7211  0022F0  0EF4               	movlw	high STR_80
  7212  0022F2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7213  0022F4  ECAC  F01A         	call	_printf	;wreg free
  7214                           
  7215                           ;main.c: 585:     printf(".....................?????????????????.....................\r\
      +                          n");
  7216  0022F8  0E4A               	movlw	low STR_79
  7217  0022FA  0100               	movlb	0	; () banked
  7218  0022FC  6FA6               	movwf	printf@fmt& (0+255),b
  7219  0022FE  0EF4               	movlw	high STR_79
  7220  002300  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7221  002302  ECAC  F01A         	call	_printf	;wreg free
  7222                           
  7223                           ;main.c: 586:     printf("...........................................................\r\
      +                          n");
  7224  002306  0E0C               	movlw	low STR_78
  7225  002308  0100               	movlb	0	; () banked
  7226  00230A  6FA6               	movwf	printf@fmt& (0+255),b
  7227  00230C  0EF4               	movlw	high STR_78
  7228  00230E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7229  002310  ECAC  F01A         	call	_printf	;wreg free
  7230  002314  0012               	return		;funcret
  7231  002316                     __end_of_printAscii:
  7232                           	callstack 0
  7233                           
  7234 ;; *************** function _printAddress *****************
  7235 ;; Defined at:
  7236 ;;		line 435 in file "main.c"
  7237 ;; Parameters:    Size  Location     Type
  7238 ;;  address         4   84[BANK0 ] unsigned long 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;		None
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7254 ;;Total ram usage:        4 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:   13
  7257 ;; This function calls:
  7258 ;;		_printf
  7259 ;; This function is called by:
  7260 ;;		_main
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text2
  7265  00305E                     __ptext2:
  7266                           	callstack 0
  7267  00305E                     _printAddress:
  7268                           	callstack 17
  7269  00305E                     
  7270                           ;main.c: 435: void printAddress(uint32_t address);main.c: 436: {;main.c: 437:     printf
      +                          ("    Address:    ");
  7271  00305E  0E80               	movlw	low STR_73
  7272  003060  0100               	movlb	0	; () banked
  7273  003062  6FA6               	movwf	printf@fmt& (0+255),b
  7274  003064  0EFF               	movlw	high STR_73
  7275  003066  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7276  003068  ECAC  F01A         	call	_printf	;wreg free
  7277                           
  7278                           ;main.c: 438:     printf("%04x", address >> 16);
  7279  00306C  0EEE               	movlw	low STR_10
  7280  00306E  0100               	movlb	0	; () banked
  7281  003070  6FA6               	movwf	printf@fmt& (0+255),b
  7282  003072  0EFF               	movlw	high STR_10
  7283  003074  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7284  003076  C0B6  F0A8         	movff	printAddress@address+2,?_printf+2
  7285  00307A  C0B7  F0A9         	movff	printAddress@address+3,?_printf+3
  7286  00307E  6BAA               	clrf	(?_printf+4)& (0+255),b
  7287  003080  6BAB               	clrf	(?_printf+5)& (0+255),b
  7288  003082  ECAC  F01A         	call	_printf	;wreg free
  7289                           
  7290                           ;main.c: 439:     printf(":");
  7291  003086  0EFD               	movlw	low STR_11
  7292  003088  0100               	movlb	0	; () banked
  7293  00308A  6FA6               	movwf	printf@fmt& (0+255),b
  7294  00308C  0EFF               	movlw	high STR_11
  7295  00308E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7296  003090  ECAC  F01A         	call	_printf	;wreg free
  7297                           
  7298                           ;main.c: 440:     printf("%04x", address & 0X0000FFFF);
  7299  003094  0EEE               	movlw	low STR_10
  7300  003096  0100               	movlb	0	; () banked
  7301  003098  6FA6               	movwf	printf@fmt& (0+255),b
  7302  00309A  0EFF               	movlw	high STR_10
  7303  00309C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7304  00309E  0EFF               	movlw	255
  7305  0030A0  15B4               	andwf	printAddress@address& (0+255),w,b
  7306  0030A2  6FA8               	movwf	(?_printf+2)& (0+255),b
  7307  0030A4  0EFF               	movlw	255
  7308  0030A6  15B5               	andwf	(printAddress@address+1)& (0+255),w,b
  7309  0030A8  6FA9               	movwf	(?_printf+3)& (0+255),b
  7310  0030AA  0E00               	movlw	0
  7311  0030AC  15B6               	andwf	(printAddress@address+2)& (0+255),w,b
  7312  0030AE  6FAA               	movwf	(?_printf+4)& (0+255),b
  7313  0030B0  0E00               	movlw	0
  7314  0030B2  15B7               	andwf	(printAddress@address+3)& (0+255),w,b
  7315  0030B4  6FAB               	movwf	(?_printf+5)& (0+255),b
  7316  0030B6  ECAC  F01A         	call	_printf	;wreg free
  7317                           
  7318                           ;main.c: 441:     printf("\r\n");
  7319  0030BA  0EAE               	movlw	low (STR_71+12)
  7320  0030BC  0100               	movlb	0	; () banked
  7321  0030BE  6FA6               	movwf	printf@fmt& (0+255),b
  7322  0030C0  0EFF               	movlw	high (STR_71+12)
  7323  0030C2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7324  0030C4  ECAC  F01A         	call	_printf	;wreg free
  7325  0030C8  0012               	return		;funcret
  7326  0030CA                     __end_of_printAddress:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function _incrementAddress *****************
  7330 ;; Defined at:
  7331 ;;		line 420 in file "main.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  sdCardAddres    4   19[COMRAM] unsigned long 
  7334 ;; Auto vars:     Size  Location     Type
  7335 ;;		None
  7336 ;; Return value:  Size  Location     Type
  7337 ;;                  4   19[COMRAM] unsigned long 
  7338 ;; Registers used:
  7339 ;;		wreg, status,2, status,0
  7340 ;; Tracked objects:
  7341 ;;		On entry : 0/0
  7342 ;;		On exit  : 0/0
  7343 ;;		Unchanged: 0/0
  7344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;Total ram usage:        4 bytes
  7350 ;; Hardware stack levels used:    1
  7351 ;; Hardware stack levels required when called:    4
  7352 ;; This function calls:
  7353 ;;		Nothing
  7354 ;; This function is called by:
  7355 ;;		_main
  7356 ;; This function uses a non-reentrant model
  7357 ;;
  7358                           
  7359                           	psect	text3
  7360  003238                     __ptext3:
  7361                           	callstack 0
  7362  003238                     _incrementAddress:
  7363                           	callstack 26
  7364  003238                     
  7365                           ;main.c: 420: uint32_t incrementAddress(uint32_t sdCardAddress);main.c: 421: {;main.c: 4
      +                          22:     sdCardAddress += 512;
  7366  003238  0E00               	movlw	0
  7367  00323A  2614               	addwf	incrementAddress@sdCardAddress^0,f,c
  7368  00323C  0E02               	movlw	2
  7369  00323E  2215               	addwfc	(incrementAddress@sdCardAddress+1)^0,f,c
  7370  003240  0E00               	movlw	0
  7371  003242  2216               	addwfc	(incrementAddress@sdCardAddress+2)^0,f,c
  7372  003244  0E00               	movlw	0
  7373  003246  2217               	addwfc	(incrementAddress@sdCardAddress+3)^0,f,c
  7374                           
  7375                           ;main.c: 423:     if (sdCardAddress >= 0x04000000)
  7376  003248  0E04               	movlw	4
  7377  00324A  5C17               	subwf	(incrementAddress@sdCardAddress+3)^0,w,c
  7378  00324C  A0D8               	btfss	status,0,c
  7379  00324E  EF2B  F019         	goto	u5541
  7380  003252  EF2D  F019         	goto	u5540
  7381  003256                     u5541:
  7382  003256  EF35  F019         	goto	l5707
  7383  00325A                     u5540:
  7384  00325A                     
  7385                           ;main.c: 424:         sdCardAddress = 0x00000000;
  7386  00325A  0E00               	movlw	0
  7387  00325C  6E14               	movwf	incrementAddress@sdCardAddress^0,c
  7388  00325E  0E00               	movlw	0
  7389  003260  6E15               	movwf	(incrementAddress@sdCardAddress+1)^0,c
  7390  003262  0E00               	movlw	0
  7391  003264  6E16               	movwf	(incrementAddress@sdCardAddress+2)^0,c
  7392  003266  0E00               	movlw	0
  7393  003268  6E17               	movwf	(incrementAddress@sdCardAddress+3)^0,c
  7394  00326A                     l5707:
  7395                           
  7396                           ;main.c: 425:     return sdCardAddress;
  7397  00326A  C014  F014         	movff	incrementAddress@sdCardAddress,?_incrementAddress
  7398  00326E  C015  F015         	movff	incrementAddress@sdCardAddress+1,?_incrementAddress+1
  7399  003272  C016  F016         	movff	incrementAddress@sdCardAddress+2,?_incrementAddress+2
  7400  003276  C017  F017         	movff	incrementAddress@sdCardAddress+3,?_incrementAddress+3
  7401  00327A  0012               	return		;funcret
  7402  00327C                     __end_of_incrementAddress:
  7403                           	callstack 0
  7404                           
  7405 ;; *************** function _hexDumpBuffer *****************
  7406 ;; Defined at:
  7407 ;;		line 179 in file "sdCard.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  sdCardBuffer    2   84[BANK0 ] PTR unsigned char 
  7410 ;;		 -> sdCardBuffer(512), 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  j               2   88[BANK0 ] int 
  7413 ;;  j               2   90[BANK0 ] int 
  7414 ;;  i               2   92[BANK0 ] unsigned short 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  1    wreg      void 
  7417 ;; Registers used:
  7418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;Total ram usage:       10 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:   13
  7431 ;; This function calls:
  7432 ;;		_printf
  7433 ;; This function is called by:
  7434 ;;		_main
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	text4
  7439  002316                     __ptext4:
  7440                           	callstack 0
  7441  002316                     _hexDumpBuffer:
  7442                           	callstack 17
  7443  002316                     
  7444                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  7445  002316  0EF3               	movlw	low STR_116
  7446  002318  0100               	movlb	0	; () banked
  7447  00231A  6FA6               	movwf	printf@fmt& (0+255),b
  7448  00231C  0EFF               	movlw	high STR_116
  7449  00231E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7450  002320  ECAC  F01A         	call	_printf	;wreg free
  7451  002324                     
  7452                           ;sdCard.c: 185:                     printf(".");
  7453  002324  0E00               	movlw	0
  7454  002326  0100               	movlb	0	; () banked
  7455  002328  6FBD               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  7456  00232A  0E00               	movlw	0
  7457  00232C  6FBC               	movwf	hexDumpBuffer@i& (0+255),b
  7458  00232E                     l5835:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;sdCard.c: 186:                 } else {
  7462  00232E  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7463  002330  11BD               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7464  002332  B4D8               	btfsc	status,2,c
  7465  002334  EF9E  F011         	goto	u5641
  7466  002338  EFA0  F011         	goto	u5640
  7467  00233C                     u5641:
  7468  00233C  EFB5  F011         	goto	l5841
  7469  002340                     u5640:
  7470  002340                     
  7471                           ; BSR set to: 0
  7472  002340  0E07               	movlw	7
  7473  002342  15BC               	andwf	hexDumpBuffer@i& (0+255),w,b
  7474  002344  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7475  002346  0E00               	movlw	0
  7476  002348  15BD               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7477  00234A  6FB7               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7478  00234C  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7479  00234E  11B7               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7480  002350  A4D8               	btfss	status,2,c
  7481  002352  EFAD  F011         	goto	u5651
  7482  002356  EFAF  F011         	goto	u5650
  7483  00235A                     u5651:
  7484  00235A  EFB5  F011         	goto	l5841
  7485  00235E                     u5650:
  7486  00235E                     
  7487                           ; BSR set to: 0
  7488  00235E  0E8F               	movlw	low (STR_73+15)
  7489  002360  6FA6               	movwf	printf@fmt& (0+255),b
  7490  002362  0EFF               	movlw	high (STR_73+15)
  7491  002364  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7492  002366  ECAC  F01A         	call	_printf	;wreg free
  7493  00236A                     l5841:
  7494                           
  7495                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  7496  00236A  0100               	movlb	0	; () banked
  7497  00236C  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7498  00236E  11BD               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7499  002370  B4D8               	btfsc	status,2,c
  7500  002372  EFBD  F011         	goto	u5661
  7501  002376  EFBF  F011         	goto	u5660
  7502  00237A                     u5661:
  7503  00237A  EF18  F012         	goto	l705
  7504  00237E                     u5660:
  7505  00237E                     
  7506                           ; BSR set to: 0
  7507  00237E  0E0F               	movlw	15
  7508  002380  15BC               	andwf	hexDumpBuffer@i& (0+255),w,b
  7509  002382  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7510  002384  0E00               	movlw	0
  7511  002386  15BD               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7512  002388  6FB7               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7513  00238A  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7514  00238C  11B7               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7515  00238E  A4D8               	btfss	status,2,c
  7516  002390  EFCC  F011         	goto	u5671
  7517  002394  EFCE  F011         	goto	u5670
  7518  002398                     u5671:
  7519  002398  EF18  F012         	goto	l705
  7520  00239C                     u5670:
  7521  00239C                     
  7522                           ; BSR set to: 0
  7523                           ;sdCard.c: 188:                 }
  7524  00239C  0E8E               	movlw	low (STR_73+14)
  7525  00239E  6FA6               	movwf	printf@fmt& (0+255),b
  7526  0023A0  0EFF               	movlw	high (STR_73+14)
  7527  0023A2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7528  0023A4  ECAC  F01A         	call	_printf	;wreg free
  7529  0023A8                     
  7530                           ;sdCard.c: 189:             }
  7531  0023A8  0EF0               	movlw	240
  7532  0023AA  0100               	movlb	0	; () banked
  7533  0023AC  25BC               	addwf	hexDumpBuffer@i& (0+255),w,b
  7534  0023AE  6FB8               	movwf	hexDumpBuffer@j& (0+255),b
  7535  0023B0  0EFF               	movlw	255
  7536  0023B2  21BD               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7537  0023B4  6FB9               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  7538  0023B6  EF07  F012         	goto	l5857
  7539  0023BA                     l5849:
  7540                           
  7541                           ; BSR set to: 0
  7542                           ;sdCard.c: 190:             printf("\r\n");
  7543  0023BA  51B8               	movf	hexDumpBuffer@j& (0+255),w,b
  7544  0023BC  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7545  0023BE  6ED9               	movwf	fsr2l,c
  7546  0023C0  51B9               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7547  0023C2  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7548  0023C4  6EDA               	movwf	fsr2h,c
  7549  0023C6  0E20               	movlw	32
  7550  0023C8  60DF               	cpfslt	indf2,c
  7551  0023CA  EFE9  F011         	goto	u5681
  7552  0023CE  EFEB  F011         	goto	u5680
  7553  0023D2                     u5681:
  7554  0023D2  EFF3  F011         	goto	l5853
  7555  0023D6                     u5680:
  7556  0023D6                     
  7557                           ; BSR set to: 0
  7558                           ;sdCard.c: 191:         }
  7559  0023D6  0E7F               	movlw	low (STR_37+74)
  7560  0023D8  6FA6               	movwf	printf@fmt& (0+255),b
  7561  0023DA  0EF3               	movlw	high (STR_37+74)
  7562  0023DC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7563  0023DE  ECAC  F01A         	call	_printf	;wreg free
  7564                           
  7565                           ;sdCard.c: 192: 
  7566  0023E2  EF04  F012         	goto	l5855
  7567  0023E6                     l5853:
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  7571  0023E6  0EF7               	movlw	low STR_120
  7572  0023E8  6FA6               	movwf	printf@fmt& (0+255),b
  7573  0023EA  0EFF               	movlw	high STR_120
  7574  0023EC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7575  0023EE  51B8               	movf	hexDumpBuffer@j& (0+255),w,b
  7576  0023F0  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7577  0023F2  6ED9               	movwf	fsr2l,c
  7578  0023F4  51B9               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7579  0023F6  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7580  0023F8  6EDA               	movwf	fsr2h,c
  7581  0023FA  50DF               	movf	indf2,w,c
  7582  0023FC  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7583  0023FE  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7584  002400  6FA8               	movwf	(?_printf+2)& (0+255),b
  7585  002402  6BA9               	clrf	(?_printf+3)& (0+255),b
  7586  002404  ECAC  F01A         	call	_printf	;wreg free
  7587  002408                     l5855:
  7588                           
  7589                           ;sdCard.c: 195: 
  7590  002408  0100               	movlb	0	; () banked
  7591  00240A  4BB8               	infsnz	hexDumpBuffer@j& (0+255),f,b
  7592  00240C  2BB9               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  7593  00240E                     l5857:
  7594                           
  7595                           ; BSR set to: 0
  7596  00240E  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7597  002410  5DB8               	subwf	hexDumpBuffer@j& (0+255),w,b
  7598  002412  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7599  002414  59B9               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  7600  002416  A0D8               	btfss	status,0,c
  7601  002418  EF10  F012         	goto	u5691
  7602  00241C  EF12  F012         	goto	u5690
  7603  002420                     u5691:
  7604  002420  EFDD  F011         	goto	l5849
  7605  002424                     u5690:
  7606  002424                     
  7607                           ; BSR set to: 0
  7608                           ;sdCard.c: 196:     printf("   ");
  7609  002424  0EAE               	movlw	low (STR_71+12)
  7610  002426  6FA6               	movwf	printf@fmt& (0+255),b
  7611  002428  0EFF               	movlw	high (STR_71+12)
  7612  00242A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7613  00242C  ECAC  F01A         	call	_printf	;wreg free
  7614  002430                     l705:
  7615                           
  7616                           ;sdCard.c: 199:             printf(".");
  7617  002430  0EE8               	movlw	low STR_122
  7618  002432  0100               	movlb	0	; () banked
  7619  002434  6FA6               	movwf	printf@fmt& (0+255),b
  7620  002436  0EFF               	movlw	high STR_122
  7621  002438  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7622  00243A  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7623  00243C  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7624  00243E  6ED9               	movwf	fsr2l,c
  7625  002440  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7626  002442  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7627  002444  6EDA               	movwf	fsr2h,c
  7628  002446  50DF               	movf	indf2,w,c
  7629  002448  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7630  00244A  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7631  00244C  6FA8               	movwf	(?_printf+2)& (0+255),b
  7632  00244E  6BA9               	clrf	(?_printf+3)& (0+255),b
  7633  002450  ECAC  F01A         	call	_printf	;wreg free
  7634  002454                     
  7635                           ;sdCard.c: 200:         } else {
  7636  002454  0100               	movlb	0	; () banked
  7637  002456  4BBC               	infsnz	hexDumpBuffer@i& (0+255),f,b
  7638  002458  2BBD               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  7639  00245A                     
  7640                           ; BSR set to: 0
  7641  00245A  0E02               	movlw	2
  7642  00245C  5DBD               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7643  00245E  A0D8               	btfss	status,0,c
  7644  002460  EF34  F012         	goto	u5701
  7645  002464  EF36  F012         	goto	u5700
  7646  002468                     u5701:
  7647  002468  EF97  F011         	goto	l5835
  7648  00246C                     u5700:
  7649  00246C                     
  7650                           ; BSR set to: 0
  7651                           ;sdCard.c: 202:         }
  7652  00246C  0E8D               	movlw	low (STR_73+13)
  7653  00246E  6FA6               	movwf	printf@fmt& (0+255),b
  7654  002470  0EFF               	movlw	high (STR_73+13)
  7655  002472  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7656  002474  ECAC  F01A         	call	_printf	;wreg free
  7657  002478                     
  7658                           ;sdCard.c: 203:     }
  7659  002478  0EF0               	movlw	240
  7660  00247A  0100               	movlb	0	; () banked
  7661  00247C  25BC               	addwf	hexDumpBuffer@i& (0+255),w,b
  7662  00247E  6FBA               	movwf	hexDumpBuffer@j_1440& (0+255),b
  7663  002480  0EFF               	movlw	255
  7664  002482  21BD               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7665  002484  6FBB               	movwf	(hexDumpBuffer@j_1440+1)& (0+255),b
  7666  002486  EF6F  F012         	goto	l5877
  7667  00248A                     l5869:
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;sdCard.c: 204:     printf("\r\n");
  7671  00248A  51BA               	movf	hexDumpBuffer@j_1440& (0+255),w,b
  7672  00248C  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7673  00248E  6ED9               	movwf	fsr2l,c
  7674  002490  51BB               	movf	(hexDumpBuffer@j_1440+1)& (0+255),w,b
  7675  002492  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7676  002494  6EDA               	movwf	fsr2h,c
  7677  002496  0E20               	movlw	32
  7678  002498  60DF               	cpfslt	indf2,c
  7679  00249A  EF51  F012         	goto	u5711
  7680  00249E  EF53  F012         	goto	u5710
  7681  0024A2                     u5711:
  7682  0024A2  EF5B  F012         	goto	l5873
  7683  0024A6                     u5710:
  7684  0024A6                     
  7685                           ; BSR set to: 0
  7686                           ;sdCard.c: 205: }
  7687  0024A6  0E7F               	movlw	low (STR_37+74)
  7688  0024A8  6FA6               	movwf	printf@fmt& (0+255),b
  7689  0024AA  0EF3               	movlw	high (STR_37+74)
  7690  0024AC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7691  0024AE  ECAC  F01A         	call	_printf	;wreg free
  7692  0024B2  EF6C  F012         	goto	l5875
  7693  0024B6                     l5873:
  7694                           
  7695                           ; BSR set to: 0
  7696  0024B6  0EF7               	movlw	low STR_120
  7697  0024B8  6FA6               	movwf	printf@fmt& (0+255),b
  7698  0024BA  0EFF               	movlw	high STR_120
  7699  0024BC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7700  0024BE  51BA               	movf	hexDumpBuffer@j_1440& (0+255),w,b
  7701  0024C0  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7702  0024C2  6ED9               	movwf	fsr2l,c
  7703  0024C4  51BB               	movf	(hexDumpBuffer@j_1440+1)& (0+255),w,b
  7704  0024C6  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7705  0024C8  6EDA               	movwf	fsr2h,c
  7706  0024CA  50DF               	movf	indf2,w,c
  7707  0024CC  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7708  0024CE  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7709  0024D0  6FA8               	movwf	(?_printf+2)& (0+255),b
  7710  0024D2  6BA9               	clrf	(?_printf+3)& (0+255),b
  7711  0024D4  ECAC  F01A         	call	_printf	;wreg free
  7712  0024D8                     l5875:
  7713  0024D8  0100               	movlb	0	; () banked
  7714  0024DA  4BBA               	infsnz	hexDumpBuffer@j_1440& (0+255),f,b
  7715  0024DC  2BBB               	incf	(hexDumpBuffer@j_1440+1)& (0+255),f,b
  7716  0024DE                     l5877:
  7717                           
  7718                           ; BSR set to: 0
  7719  0024DE  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7720  0024E0  5DBA               	subwf	hexDumpBuffer@j_1440& (0+255),w,b
  7721  0024E2  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7722  0024E4  59BB               	subwfb	(hexDumpBuffer@j_1440+1)& (0+255),w,b
  7723  0024E6  A0D8               	btfss	status,0,c
  7724  0024E8  EF78  F012         	goto	u5721
  7725  0024EC  EF7A  F012         	goto	u5720
  7726  0024F0                     u5721:
  7727  0024F0  EF45  F012         	goto	l5869
  7728  0024F4                     u5720:
  7729  0024F4                     
  7730                           ; BSR set to: 0
  7731  0024F4  0EAE               	movlw	low (STR_71+12)
  7732  0024F6  6FA6               	movwf	printf@fmt& (0+255),b
  7733  0024F8  0EFF               	movlw	high (STR_71+12)
  7734  0024FA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7735  0024FC  ECAC  F01A         	call	_printf	;wreg free
  7736  002500  0012               	return		;funcret
  7737  002502                     __end_of_hexDumpBuffer:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function _TMR0_WriteTimer *****************
  7741 ;; Defined at:
  7742 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  timerVal        2   19[COMRAM] unsigned short 
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;Total ram usage:        2 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:    4
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		_main
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text5
  7771  0036CA                     __ptext5:
  7772                           	callstack 0
  7773  0036CA                     _TMR0_WriteTimer:
  7774                           	callstack 26
  7775  0036CA                     
  7776                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  7777  0036CA  5015               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  7778  0036CC  6ED7               	movwf	215,c	;volatile
  7779  0036CE                     
  7780                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  7781  0036CE  C014  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  7782  0036D2  0012               	return		;funcret
  7783  0036D4                     __end_of_TMR0_WriteTimer:
  7784                           	callstack 0
  7785                           
  7786 ;; *************** function _SYSTEM_Initialize *****************
  7787 ;; Defined at:
  7788 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;		None
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      void 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;Total ram usage:        0 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    6
  7809 ;; This function calls:
  7810 ;;		_ADC_Initialize
  7811 ;;		_EPWM1_Initialize
  7812 ;;		_EUSART1_Initialize
  7813 ;;		_INTERRUPT_Initialize
  7814 ;;		_OSCILLATOR_Initialize
  7815 ;;		_PIN_MANAGER_Initialize
  7816 ;;		_SPI2_Initialize
  7817 ;;		_TMR0_Initialize
  7818 ;;		_TMR2_Initialize
  7819 ;; This function is called by:
  7820 ;;		_main
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text6
  7825  0035A8                     __ptext6:
  7826                           	callstack 0
  7827  0035A8                     _SYSTEM_Initialize:
  7828                           	callstack 24
  7829  0035A8                     
  7830                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7831  0035A8  EC88  F01B         	call	_INTERRUPT_Initialize	;wreg free
  7832  0035AC                     
  7833                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  7834  0035AC  EC54  F01B         	call	_SPI2_Initialize	;wreg free
  7835  0035B0                     
  7836                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7837  0035B0  EC96  F01A         	call	_PIN_MANAGER_Initialize	;wreg free
  7838  0035B4                     
  7839                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7840  0035B4  EC19  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  7841  0035B8                     
  7842                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  7843  0035B8  EC34  F01B         	call	_ADC_Initialize	;wreg free
  7844  0035BC                     
  7845                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  7846  0035BC  ECFA  F01A         	call	_EPWM1_Initialize	;wreg free
  7847  0035C0                     
  7848                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7849  0035C0  EC5D  F01B         	call	_TMR2_Initialize	;wreg free
  7850  0035C4                     
  7851                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7852  0035C4  EC2D  F01A         	call	_TMR0_Initialize	;wreg free
  7853  0035C8                     
  7854                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  7855  0035C8  EC80  F019         	call	_EUSART1_Initialize	;wreg free
  7856  0035CC  0012               	return		;funcret
  7857  0035CE                     __end_of_SYSTEM_Initialize:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _TMR2_Initialize *****************
  7861 ;; Defined at:
  7862 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7880 ;;Total ram usage:        0 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    4
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_SYSTEM_Initialize
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text7
  7891  0036BA                     __ptext7:
  7892                           	callstack 0
  7893  0036BA                     _TMR2_Initialize:
  7894                           	callstack 25
  7895  0036BA                     
  7896                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  7897  0036BA  0E3F               	movlw	63
  7898  0036BC  6EBB               	movwf	187,c	;volatile
  7899                           
  7900                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7901  0036BE  0E00               	movlw	0
  7902  0036C0  6EBC               	movwf	188,c	;volatile
  7903  0036C2                     
  7904                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7905  0036C2  929E               	bcf	158,1,c	;volatile
  7906                           
  7907                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x1C;
  7908  0036C4  0E1C               	movlw	28
  7909  0036C6  6EBA               	movwf	186,c	;volatile
  7910  0036C8  0012               	return		;funcret
  7911  0036CA                     __end_of_TMR2_Initialize:
  7912                           	callstack 0
  7913                           
  7914 ;; *************** function _TMR0_Initialize *****************
  7915 ;; Defined at:
  7916 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;		None
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, status,2, status,0, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;Total ram usage:        2 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    5
  7937 ;; This function calls:
  7938 ;;		_TMR0_SetInterruptHandler
  7939 ;; This function is called by:
  7940 ;;		_SYSTEM_Initialize
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text8
  7945  00345A                     __ptext8:
  7946                           	callstack 0
  7947  00345A                     _TMR0_Initialize:
  7948                           	callstack 24
  7949  00345A                     
  7950                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  7951  00345A  9CD5               	bcf	213,6,c	;volatile
  7952  00345C                     
  7953                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  7954  00345C  0E00               	movlw	0
  7955  00345E  6ED7               	movwf	215,c	;volatile
  7956                           
  7957                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  7958  003460  0E00               	movlw	0
  7959  003462  6ED6               	movwf	214,c	;volatile
  7960  003464                     
  7961                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  7962  003464  50D6               	movf	214,w,c	;volatile
  7963  003466  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  7964  00346A  6A17               	clrf	(??_TMR0_Initialize+1)^0,c
  7965  00346C  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  7966  003470  6A16               	clrf	??_TMR0_Initialize^0,c
  7967  003472  1016               	iorwf	??_TMR0_Initialize^0,w,c
  7968  003474  6E41               	movwf	_timer0ReloadVal^0,c	;volatile
  7969  003476  5017               	movf	(??_TMR0_Initialize+1)^0,w,c
  7970  003478  6E42               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  7971  00347A                     
  7972                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  7973  00347A  94F2               	bcf	242,2,c	;volatile
  7974  00347C                     
  7975                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  7976  00347C  8AF2               	bsf	242,5,c	;volatile
  7977  00347E                     
  7978                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7979  00347E  0E1C               	movlw	low _TMR0_DefaultInterruptHandler
  7980  003480  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  7981  003482  0E37               	movlw	high _TMR0_DefaultInterruptHandler
  7982  003484  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  7983  003486  EC6A  F01B         	call	_TMR0_SetInterruptHandler	;wreg free
  7984  00348A                     
  7985                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  7986  00348A  0E9F               	movlw	159
  7987  00348C  6ED5               	movwf	213,c	;volatile
  7988  00348E  0012               	return		;funcret
  7989  003490                     __end_of_TMR0_Initialize:
  7990                           	callstack 0
  7991                           
  7992 ;; *************** function _TMR0_SetInterruptHandler *****************
  7993 ;; Defined at:
  7994 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  7997 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;		None
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  1    wreg      void 
  8002 ;; Registers used:
  8003 ;;		wreg, status,2, status,0
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;Total ram usage:        2 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:    4
  8016 ;; This function calls:
  8017 ;;		Nothing
  8018 ;; This function is called by:
  8019 ;;		_TMR0_Initialize
  8020 ;;		_main
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           	psect	text9
  8025  0036D4                     __ptext9:
  8026                           	callstack 0
  8027  0036D4                     _TMR0_SetInterruptHandler:
  8028                           	callstack 26
  8029  0036D4                     
  8030                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  8031  0036D4  C014  F043         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8032  0036D8  C015  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8033  0036DC  0012               	return		;funcret
  8034  0036DE                     __end_of_TMR0_SetInterruptHandler:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function _SPI2_Initialize *****************
  8038 ;; Defined at:
  8039 ;;		line 62 in file "mcc_generated_files/spi2.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8057 ;;Total ram usage:        0 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    4
  8060 ;; This function calls:
  8061 ;;		Nothing
  8062 ;; This function is called by:
  8063 ;;		_SYSTEM_Initialize
  8064 ;; This function uses a non-reentrant model
  8065 ;;
  8066                           
  8067                           	psect	text10
  8068  0036A8                     __ptext10:
  8069                           	callstack 0
  8070  0036A8                     _SPI2_Initialize:
  8071                           	callstack 25
  8072  0036A8                     
  8073                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  8074  0036A8  0E40               	movlw	64
  8075  0036AA  6E6D               	movwf	109,c	;volatile
  8076                           
  8077                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  8078  0036AC  0E01               	movlw	1
  8079  0036AE  6E6C               	movwf	108,c	;volatile
  8080                           
  8081                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  8082  0036B0  0E01               	movlw	1
  8083  0036B2  6E6E               	movwf	110,c	;volatile
  8084  0036B4                     
  8085                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  8086  0036B4  9293               	bcf	147,1,c	;volatile
  8087  0036B6                     
  8088                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  8089  0036B6  9A6C               	bcf	108,5,c	;volatile
  8090  0036B8  0012               	return		;funcret
  8091  0036BA                     __end_of_SPI2_Initialize:
  8092                           	callstack 0
  8093                           
  8094 ;; *************** function _PIN_MANAGER_Initialize *****************
  8095 ;; Defined at:
  8096 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;		None
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;		None
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg, status,2
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8114 ;;Total ram usage:        0 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    4
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_SYSTEM_Initialize
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text11
  8125  00352C                     __ptext11:
  8126                           	callstack 0
  8127  00352C                     _PIN_MANAGER_Initialize:
  8128                           	callstack 25
  8129  00352C                     
  8130                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8131  00352C  0E00               	movlw	0
  8132  00352E  6E89               	movwf	137,c	;volatile
  8133                           
  8134                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8135  003530  0E00               	movlw	0
  8136  003532  6E8A               	movwf	138,c	;volatile
  8137                           
  8138                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8139  003534  0E00               	movlw	0
  8140  003536  6E8B               	movwf	139,c	;volatile
  8141  003538                     
  8142                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  8143  003538  6892               	setf	146,c	;volatile
  8144                           
  8145                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  8146  00353A  0EE5               	movlw	229
  8147  00353C  6E93               	movwf	147,c	;volatile
  8148                           
  8149                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  8150  00353E  0EBB               	movlw	187
  8151  003540  6E94               	movwf	148,c	;volatile
  8152                           
  8153                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  8154  003542  0E3C               	movlw	60
  8155  003544  010F               	movlb	15	; () banked
  8156  003546  6F3A               	movwf	58,b	;volatile
  8157                           
  8158                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  8159  003548  0E31               	movlw	49
  8160  00354A  6F39               	movwf	57,b	;volatile
  8161                           
  8162                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  8163  00354C  0E2F               	movlw	47
  8164  00354E  6F38               	movwf	56,b	;volatile
  8165                           
  8166                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8167  003550  0E00               	movlw	0
  8168  003552  6E61               	movwf	97,c	;volatile
  8169  003554                     
  8170                           ; BSR set to: 15
  8171                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8172  003554  8EF1               	bsf	241,7,c	;volatile
  8173  003556                     
  8174                           ; BSR set to: 15
  8175  003556  0012               	return		;funcret
  8176  003558                     __end_of_PIN_MANAGER_Initialize:
  8177                           	callstack 0
  8178                           
  8179 ;; *************** function _OSCILLATOR_Initialize *****************
  8180 ;; Defined at:
  8181 ;;		line 64 in file "mcc_generated_files/mcc.c"
  8182 ;; Parameters:    Size  Location     Type
  8183 ;;		None
  8184 ;; Auto vars:     Size  Location     Type
  8185 ;;		None
  8186 ;; Return value:  Size  Location     Type
  8187 ;;                  1    wreg      void 
  8188 ;; Registers used:
  8189 ;;		wreg, status,2
  8190 ;; Tracked objects:
  8191 ;;		On entry : 0/0
  8192 ;;		On exit  : 0/0
  8193 ;;		Unchanged: 0/0
  8194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;Total ram usage:        0 bytes
  8200 ;; Hardware stack levels used:    1
  8201 ;; Hardware stack levels required when called:    4
  8202 ;; This function calls:
  8203 ;;		Nothing
  8204 ;; This function is called by:
  8205 ;;		_SYSTEM_Initialize
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text12
  8210  003632                     __ptext12:
  8211                           	callstack 0
  8212  003632                     _OSCILLATOR_Initialize:
  8213                           	callstack 25
  8214  003632                     
  8215                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  8216  003632  0E70               	movlw	112
  8217  003634  6ED3               	movwf	211,c	;volatile
  8218                           
  8219                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  8220  003636  0E04               	movlw	4
  8221  003638  6ED2               	movwf	210,c	;volatile
  8222                           
  8223                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  8224  00363A  0E40               	movlw	64
  8225  00363C  6E9B               	movwf	155,c	;volatile
  8226  00363E                     l270:
  8227                           
  8228                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  8229  00363E  AED2               	btfss	4050,7,c	;volatile
  8230  003640  EF24  F01B         	goto	u5451
  8231  003644  EF26  F01B         	goto	u5450
  8232  003648                     u5451:
  8233  003648  EF1F  F01B         	goto	l270
  8234  00364C                     u5450:
  8235  00364C  0012               	return		;funcret
  8236  00364E                     __end_of_OSCILLATOR_Initialize:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function _INTERRUPT_Initialize *****************
  8240 ;; Defined at:
  8241 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;		None
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		None
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;Total ram usage:        0 bytes
  8260 ;; Hardware stack levels used:    1
  8261 ;; Hardware stack levels required when called:    4
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		_SYSTEM_Initialize
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text13
  8270  003710                     __ptext13:
  8271                           	callstack 0
  8272  003710                     _INTERRUPT_Initialize:
  8273                           	callstack 25
  8274  003710                     
  8275                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8276  003710  9ED0               	bcf	208,7,c	;volatile
  8277  003712  0012               	return		;funcret
  8278  003714                     __end_of_INTERRUPT_Initialize:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function _EUSART1_Initialize *****************
  8282 ;; Defined at:
  8283 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;Total ram usage:        0 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    5
  8304 ;; This function calls:
  8305 ;;		_EUSART1_SetErrorHandler
  8306 ;;		_EUSART1_SetFramingErrorHandler
  8307 ;;		_EUSART1_SetOverrunErrorHandler
  8308 ;; This function is called by:
  8309 ;;		_SYSTEM_Initialize
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text14
  8314  003300                     __ptext14:
  8315                           	callstack 0
  8316  003300                     _EUSART1_Initialize:
  8317                           	callstack 24
  8318  003300                     
  8319                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8320  003300  0E08               	movlw	8
  8321  003302  6EB8               	movwf	184,c	;volatile
  8322                           
  8323                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8324  003304  0E90               	movlw	144
  8325  003306  6EAB               	movwf	171,c	;volatile
  8326                           
  8327                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8328  003308  0E24               	movlw	36
  8329  00330A  6EAC               	movwf	172,c	;volatile
  8330                           
  8331                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  8332  00330C  0E82               	movlw	130
  8333  00330E  6EAF               	movwf	175,c	;volatile
  8334                           
  8335                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  8336  003310  0E06               	movlw	6
  8337  003312  6EB0               	movwf	176,c	;volatile
  8338  003314                     
  8339                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8340  003314  0E00               	movlw	0
  8341  003316  6E14               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8342  003318  0E00               	movlw	0
  8343  00331A  6E15               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8344  00331C  EC74  F01B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8345  003320                     
  8346                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8347  003320  0E00               	movlw	0
  8348  003322  6E14               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8349  003324  0E00               	movlw	0
  8350  003326  6E15               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8351  003328  EC6F  F01B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8352  00332C                     
  8353                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8354  00332C  0E00               	movlw	0
  8355  00332E  6E14               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8356  003330  0E00               	movlw	0
  8357  003332  6E15               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8358  003334  EC79  F01B         	call	_EUSART1_SetErrorHandler	;wreg free
  8359  003338                     
  8360                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8361  003338  0E00               	movlw	0
  8362  00333A  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
  8363  00333C  0012               	return		;funcret
  8364  00333E                     __end_of_EUSART1_Initialize:
  8365                           	callstack 0
  8366                           
  8367 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8368 ;; Defined at:
  8369 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8372 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  1    wreg      void 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8388 ;;Total ram usage:        2 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; Hardware stack levels required when called:    4
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_EUSART1_Initialize
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text15
  8399  0036DE                     __ptext15:
  8400                           	callstack 0
  8401  0036DE                     _EUSART1_SetOverrunErrorHandler:
  8402                           	callstack 24
  8403  0036DE                     
  8404                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8405  0036DE  C014  F0CC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8406  0036E2  C015  F0CD         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8407  0036E6  0012               	return		;funcret
  8408  0036E8                     __end_of_EUSART1_SetOverrunErrorHandler:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8412 ;; Defined at:
  8413 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8416 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;		None
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg, status,2, status,0
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;Total ram usage:        2 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    4
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_EUSART1_Initialize
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text16
  8443  0036E8                     __ptext16:
  8444                           	callstack 0
  8445  0036E8                     _EUSART1_SetFramingErrorHandler:
  8446                           	callstack 24
  8447  0036E8                     
  8448                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8449  0036E8  C014  F0CE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8450  0036EC  C015  F0CF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8451  0036F0  0012               	return		;funcret
  8452  0036F2                     __end_of_EUSART1_SetFramingErrorHandler:
  8453                           	callstack 0
  8454                           
  8455 ;; *************** function _EUSART1_SetErrorHandler *****************
  8456 ;; Defined at:
  8457 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8460 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;                  1    wreg      void 
  8465 ;; Registers used:
  8466 ;;		wreg, status,2, status,0
  8467 ;; Tracked objects:
  8468 ;;		On entry : 0/0
  8469 ;;		On exit  : 0/0
  8470 ;;		Unchanged: 0/0
  8471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8476 ;;Total ram usage:        2 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:    4
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_EUSART1_Initialize
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text17
  8487  0036F2                     __ptext17:
  8488                           	callstack 0
  8489  0036F2                     _EUSART1_SetErrorHandler:
  8490                           	callstack 24
  8491  0036F2                     
  8492                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8493  0036F2  C014  F0CA         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8494  0036F6  C015  F0CB         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8495  0036FA  0012               	return		;funcret
  8496  0036FC                     __end_of_EUSART1_SetErrorHandler:
  8497                           	callstack 0
  8498                           
  8499 ;; *************** function _EPWM1_Initialize *****************
  8500 ;; Defined at:
  8501 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, status,2
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8519 ;;Total ram usage:        0 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    4
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_SYSTEM_Initialize
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text18
  8530  0035F4                     __ptext18:
  8531                           	callstack 0
  8532  0035F4                     _EPWM1_Initialize:
  8533                           	callstack 25
  8534  0035F4                     
  8535                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  8536  0035F4  0E3C               	movlw	60
  8537  0035F6  6EBD               	movwf	189,c	;volatile
  8538                           
  8539                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8540  0035F8  0E00               	movlw	0
  8541  0035FA  6EB6               	movwf	182,c	;volatile
  8542                           
  8543                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  8544  0035FC  0E80               	movlw	128
  8545  0035FE  6EB7               	movwf	183,c	;volatile
  8546                           
  8547                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  8548  003600  0E01               	movlw	1
  8549  003602  6EB9               	movwf	185,c	;volatile
  8550                           
  8551                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8552  003604  0E00               	movlw	0
  8553  003606  6EBF               	movwf	191,c	;volatile
  8554                           
  8555                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  8556  003608  0E1F               	movlw	31
  8557  00360A  6EBE               	movwf	190,c	;volatile
  8558                           
  8559                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  8560  00360C  0EFC               	movlw	-4
  8561  00360E  010F               	movlb	15	; () banked
  8562  003610  1749               	andwf	73,f,b	;volatile
  8563  003612                     
  8564                           ; BSR set to: 15
  8565  003612  0012               	return		;funcret
  8566  003614                     __end_of_EPWM1_Initialize:
  8567                           	callstack 0
  8568                           
  8569 ;; *************** function _ADC_Initialize *****************
  8570 ;; Defined at:
  8571 ;;		line 62 in file "mcc_generated_files/adc.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;		None
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, status,2
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8589 ;;Total ram usage:        0 bytes
  8590 ;; Hardware stack levels used:    1
  8591 ;; Hardware stack levels required when called:    4
  8592 ;; This function calls:
  8593 ;;		Nothing
  8594 ;; This function is called by:
  8595 ;;		_SYSTEM_Initialize
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           
  8599                           	psect	text19
  8600  003668                     __ptext19:
  8601                           	callstack 0
  8602  003668                     _ADC_Initialize:
  8603                           	callstack 25
  8604  003668                     
  8605                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  8606  003668  0E00               	movlw	0
  8607  00366A  6EC1               	movwf	193,c	;volatile
  8608                           
  8609                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  8610  00366C  0E26               	movlw	38
  8611  00366E  6EC0               	movwf	192,c	;volatile
  8612                           
  8613                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  8614  003670  0E00               	movlw	0
  8615  003672  6EC3               	movwf	195,c	;volatile
  8616                           
  8617                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  8618  003674  0E00               	movlw	0
  8619  003676  6EC4               	movwf	196,c	;volatile
  8620                           
  8621                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  8622  003678  0E11               	movlw	17
  8623  00367A  6EC2               	movwf	194,c	;volatile
  8624  00367C  0012               	return		;funcret
  8625  00367E                     __end_of_ADC_Initialize:
  8626                           	callstack 0
  8627                           
  8628 ;; *************** function _SPI2_Open *****************
  8629 ;; Defined at:
  8630 ;;		line 72 in file "mcc_generated_files/spi2.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  spi2UniqueCo    1    wreg     enum E353
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;  spi2UniqueCo    1   20[COMRAM] enum E353
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      _Bool 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8648 ;;Total ram usage:        2 bytes
  8649 ;; Hardware stack levels used:    1
  8650 ;; Hardware stack levels required when called:    4
  8651 ;; This function calls:
  8652 ;;		Nothing
  8653 ;; This function is called by:
  8654 ;;		_main
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text20
  8659  002D82                     __ptext20:
  8660                           	callstack 0
  8661  002D82                     _SPI2_Open:
  8662                           	callstack 26
  8663                           
  8664                           ;incstack = 0
  8665                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  8666  002D82  6E15               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  8667  002D84                     
  8668                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  8669  002D84  BA6C               	btfsc	108,5,c	;volatile
  8670  002D86  EFC7  F016         	goto	u5501
  8671  002D8A  EFC9  F016         	goto	u5500
  8672  002D8E                     u5501:
  8673  002D8E  EF16  F017         	goto	l338
  8674  002D92                     u5500:
  8675  002D92                     
  8676                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  8677  002D92  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8678  002D94  0D04               	mullw	4
  8679  002D96  0E01               	movlw	1
  8680  002D98  26F3               	addwf	243,f,c
  8681  002D9A  0E00               	movlw	0
  8682  002D9C  22F4               	addwfc	244,f,c
  8683  002D9E  0E31               	movlw	low _spi2_configuration
  8684  002DA0  24F3               	addwf	243,w,c
  8685  002DA2  6EF6               	movwf	tblptrl,c
  8686  002DA4  0EF3               	movlw	high _spi2_configuration
  8687  002DA6  20F4               	addwfc	244,w,c
  8688  002DA8  6EF7               	movwf	tblptrh,c
  8689  002DAA                     	if	1	;There are 3 active tblptr bytes
  8690  002DAA  6AF8               	clrf	tblptru,c
  8691  002DAC  0E00               	movlw	low (__mediumconst shr (0+16))
  8692  002DAE  22F8               	addwfc	tblptru,f,c
  8693  002DB0                     	endif
  8694  002DB0  0008               	tblrd		*
  8695  002DB2  CFF5 FF6D          	movff	tablat,3949	;volatile
  8696                           
  8697                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  8698  002DB6  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8699  002DB8  0D04               	mullw	4
  8700  002DBA  0E31               	movlw	low _spi2_configuration
  8701  002DBC  24F3               	addwf	243,w,c
  8702  002DBE  6EF6               	movwf	tblptrl,c
  8703  002DC0  0EF3               	movlw	high _spi2_configuration
  8704  002DC2  20F4               	addwfc	244,w,c
  8705  002DC4  6EF7               	movwf	tblptrh,c
  8706  002DC6                     	if	1	;There are 3 active tblptr bytes
  8707  002DC6  6AF8               	clrf	tblptru,c
  8708  002DC8  0E00               	movlw	low (__mediumconst shr (0+16))
  8709  002DCA  22F8               	addwfc	tblptru,f,c
  8710  002DCC                     	endif
  8711  002DCC  0008               	tblrd		*
  8712  002DCE  CFF5 FF6C          	movff	tablat,3948	;volatile
  8713  002DD2                     
  8714                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  8715  002DD2  0E00               	movlw	0
  8716  002DD4  6E6B               	movwf	107,c	;volatile
  8717  002DD6                     
  8718                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  8719  002DD6  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8720  002DD8  0D04               	mullw	4
  8721  002DDA  0E02               	movlw	2
  8722  002DDC  26F3               	addwf	243,f,c
  8723  002DDE  0E00               	movlw	0
  8724  002DE0  22F4               	addwfc	244,f,c
  8725  002DE2  0E31               	movlw	low _spi2_configuration
  8726  002DE4  24F3               	addwf	243,w,c
  8727  002DE6  6EF6               	movwf	tblptrl,c
  8728  002DE8  0EF3               	movlw	high _spi2_configuration
  8729  002DEA  20F4               	addwfc	244,w,c
  8730  002DEC  6EF7               	movwf	tblptrh,c
  8731  002DEE                     	if	1	;There are 3 active tblptr bytes
  8732  002DEE  6AF8               	clrf	tblptru,c
  8733  002DF0  0E00               	movlw	low (__mediumconst shr (0+16))
  8734  002DF2  22F8               	addwfc	tblptru,f,c
  8735  002DF4                     	endif
  8736  002DF4  0008               	tblrd		*
  8737  002DF6  CFF5 FF6E          	movff	tablat,3950	;volatile
  8738  002DFA                     
  8739                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  8740  002DFA  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8741  002DFC  0D04               	mullw	4
  8742  002DFE  0E03               	movlw	3
  8743  002E00  26F3               	addwf	243,f,c
  8744  002E02  0E00               	movlw	0
  8745  002E04  22F4               	addwfc	244,f,c
  8746  002E06  0E31               	movlw	low _spi2_configuration
  8747  002E08  24F3               	addwf	243,w,c
  8748  002E0A  6EF6               	movwf	tblptrl,c
  8749  002E0C  0EF3               	movlw	high _spi2_configuration
  8750  002E0E  20F4               	addwfc	244,w,c
  8751  002E10  6EF7               	movwf	tblptrh,c
  8752  002E12                     	if	1	;There are 3 active tblptr bytes
  8753  002E12  6AF8               	clrf	tblptru,c
  8754  002E14  0E00               	movlw	low (__mediumconst shr (0+16))
  8755  002E16  22F8               	addwfc	tblptru,f,c
  8756  002E18                     	endif
  8757  002E18  0008               	tblrd		*
  8758  002E1A  CFF5 F014          	movff	tablat,??_SPI2_Open
  8759  002E1E  4614               	rlncf	??_SPI2_Open^0,f,c
  8760  002E20  5093               	movf	147,w,c	;volatile
  8761  002E22  1814               	xorwf	??_SPI2_Open^0,w,c
  8762  002E24  0BFD               	andlw	-3
  8763  002E26  1814               	xorwf	??_SPI2_Open^0,w,c
  8764  002E28  6E93               	movwf	147,c	;volatile
  8765  002E2A                     
  8766                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  8767  002E2A  8A6C               	bsf	108,5,c	;volatile
  8768  002E2C                     l338:
  8769  002E2C  0012               	return		;funcret
  8770  002E2E                     __end_of_SPI2_Open:
  8771                           	callstack 0
  8772                           
  8773 ;; *************** function _SPI2_Close *****************
  8774 ;; Defined at:
  8775 ;;		line 87 in file "mcc_generated_files/spi2.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		None
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;Total ram usage:        0 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    4
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_main
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text21
  8804  003714                     __ptext21:
  8805                           	callstack 0
  8806  003714                     _SPI2_Close:
  8807                           	callstack 26
  8808  003714                     
  8809                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  8810  003714  9A6C               	bcf	108,5,c	;volatile
  8811  003716  0012               	return		;funcret
  8812  003718                     __end_of_SPI2_Close:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function _SDCARD_WriteBlock *****************
  8816 ;; Defined at:
  8817 ;;		line 48 in file "sdCard.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;  addr            4   20[COMRAM] unsigned long 
  8820 ;;  sdCardBuffer    2   24[COMRAM] PTR unsigned char 
  8821 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;  i               2   26[COMRAM] unsigned short 
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8833 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8836 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8837 ;;Total ram usage:        8 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:    5
  8840 ;; This function calls:
  8841 ;;		_SPI2_ExchangeByte
  8842 ;; This function is called by:
  8843 ;;		_main
  8844 ;; This function uses a non-reentrant model
  8845 ;;
  8846                           
  8847                           	psect	text22
  8848  002F5E                     __ptext22:
  8849                           	callstack 0
  8850  002F5E                     _SDCARD_WriteBlock:
  8851                           	callstack 25
  8852  002F5E  988A               	bcf	138,4,c	;volatile
  8853  002F60                     
  8854                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  8855  002F60  0EFF               	movlw	255
  8856  002F62  EC27  F01B         	call	_SPI2_ExchangeByte
  8857  002F66                     
  8858                           ;sdCard.c: 55: 
  8859  002F66  0E58               	movlw	88
  8860  002F68  EC27  F01B         	call	_SPI2_ExchangeByte
  8861  002F6C                     
  8862                           ;sdCard.c: 56: 
  8863  002F6C  5018               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  8864  002F6E  EC27  F01B         	call	_SPI2_ExchangeByte
  8865  002F72                     
  8866                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  8867  002F72  5017               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  8868  002F74  EC27  F01B         	call	_SPI2_ExchangeByte
  8869  002F78                     
  8870                           ;sdCard.c: 58: 
  8871  002F78  5016               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  8872  002F7A  EC27  F01B         	call	_SPI2_ExchangeByte
  8873  002F7E                     
  8874                           ;sdCard.c: 59: 
  8875  002F7E  5015               	movf	SDCARD_WriteBlock@addr^0,w,c
  8876  002F80  EC27  F01B         	call	_SPI2_ExchangeByte
  8877  002F84                     
  8878                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  8879  002F84  0EFF               	movlw	255
  8880  002F86  EC27  F01B         	call	_SPI2_ExchangeByte
  8881  002F8A                     l5669:
  8882  002F8A  0EFF               	movlw	255
  8883  002F8C  EC27  F01B         	call	_SPI2_ExchangeByte
  8884  002F90  0AFF               	xorlw	255
  8885  002F92  B4D8               	btfsc	status,2,c
  8886  002F94  EFCE  F017         	goto	u5511
  8887  002F98  EFD0  F017         	goto	u5510
  8888  002F9C                     u5511:
  8889  002F9C  EFC5  F017         	goto	l5669
  8890  002FA0                     u5510:
  8891  002FA0                     
  8892                           ;sdCard.c: 66: 
  8893  002FA0  0EFF               	movlw	255
  8894  002FA2  EC27  F01B         	call	_SPI2_ExchangeByte
  8895                           
  8896                           ;sdCard.c: 67: 
  8897  002FA6  0EFF               	movlw	255
  8898  002FA8  EC27  F01B         	call	_SPI2_ExchangeByte
  8899                           
  8900                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  8901  002FAC  0EFF               	movlw	255
  8902  002FAE  EC27  F01B         	call	_SPI2_ExchangeByte
  8903                           
  8904                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  8905  002FB2  0EFE               	movlw	254
  8906  002FB4  EC27  F01B         	call	_SPI2_ExchangeByte
  8907  002FB8                     
  8908                           ;sdCard.c: 74: 
  8909  002FB8  0E00               	movlw	0
  8910  002FBA  6E1C               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  8911  002FBC  0E00               	movlw	0
  8912  002FBE  6E1B               	movwf	SDCARD_WriteBlock@i^0,c
  8913  002FC0                     l5679:
  8914                           
  8915                           ;sdCard.c: 75: 
  8916  002FC0  501B               	movf	SDCARD_WriteBlock@i^0,w,c
  8917  002FC2  2419               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  8918  002FC4  6ED9               	movwf	fsr2l,c
  8919  002FC6  501C               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  8920  002FC8  201A               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  8921  002FCA  6EDA               	movwf	fsr2h,c
  8922  002FCC  50DF               	movf	indf2,w,c
  8923  002FCE  EC27  F01B         	call	_SPI2_ExchangeByte
  8924  002FD2  4A1B               	infsnz	SDCARD_WriteBlock@i^0,f,c
  8925  002FD4  2A1C               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  8926  002FD6  0E02               	movlw	2
  8927  002FD8  5C1C               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  8928  002FDA  A0D8               	btfss	status,0,c
  8929  002FDC  EFF2  F017         	goto	u5521
  8930  002FE0  EFF4  F017         	goto	u5520
  8931  002FE4                     u5521:
  8932  002FE4  EFE0  F017         	goto	l5679
  8933  002FE8                     u5520:
  8934  002FE8  888A               	bsf	138,4,c	;volatile
  8935  002FEA  0012               	return		;funcret
  8936  002FEC                     __end_of_SDCARD_WriteBlock:
  8937                           	callstack 0
  8938                           
  8939 ;; *************** function _SDCARD_ReadBlock *****************
  8940 ;; Defined at:
  8941 ;;		line 13 in file "sdCard.c"
  8942 ;; Parameters:    Size  Location     Type
  8943 ;;  addr            4   20[COMRAM] unsigned long 
  8944 ;;  sdCardBuffer    2   24[COMRAM] PTR unsigned char 
  8945 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  i               2   26[COMRAM] unsigned short 
  8948 ;; Return value:  Size  Location     Type
  8949 ;;                  1    wreg      void 
  8950 ;; Registers used:
  8951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8952 ;; Tracked objects:
  8953 ;;		On entry : 0/0
  8954 ;;		On exit  : 0/0
  8955 ;;		Unchanged: 0/0
  8956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8957 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8958 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8960 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;Total ram usage:        8 bytes
  8962 ;; Hardware stack levels used:    1
  8963 ;; Hardware stack levels required when called:    5
  8964 ;; This function calls:
  8965 ;;		_SPI2_ExchangeByte
  8966 ;; This function is called by:
  8967 ;;		_main
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	text23
  8972  002E2E                     __ptext23:
  8973                           	callstack 0
  8974  002E2E                     _SDCARD_ReadBlock:
  8975                           	callstack 25
  8976  002E2E  988A               	bcf	138,4,c	;volatile
  8977  002E30                     
  8978                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  8979  002E30  0EFF               	movlw	255
  8980  002E32  EC27  F01B         	call	_SPI2_ExchangeByte
  8981  002E36                     
  8982                           ;sdCard.c: 19: 
  8983  002E36  0E51               	movlw	81
  8984  002E38  EC27  F01B         	call	_SPI2_ExchangeByte
  8985  002E3C                     
  8986                           ;sdCard.c: 20: 
  8987  002E3C  5018               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  8988  002E3E  EC27  F01B         	call	_SPI2_ExchangeByte
  8989  002E42                     
  8990                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  8991  002E42  5017               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  8992  002E44  EC27  F01B         	call	_SPI2_ExchangeByte
  8993  002E48                     
  8994                           ;sdCard.c: 22: 
  8995  002E48  5016               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  8996  002E4A  EC27  F01B         	call	_SPI2_ExchangeByte
  8997  002E4E                     
  8998                           ;sdCard.c: 23: 
  8999  002E4E  5015               	movf	SDCARD_ReadBlock@addr^0,w,c
  9000  002E50  EC27  F01B         	call	_SPI2_ExchangeByte
  9001  002E54                     
  9002                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9003  002E54  0EFF               	movlw	255
  9004  002E56  EC27  F01B         	call	_SPI2_ExchangeByte
  9005  002E5A                     l5731:
  9006  002E5A  0EFF               	movlw	255
  9007  002E5C  EC27  F01B         	call	_SPI2_ExchangeByte
  9008  002E60  0AFF               	xorlw	255
  9009  002E62  B4D8               	btfsc	status,2,c
  9010  002E64  EF36  F017         	goto	u5551
  9011  002E68  EF38  F017         	goto	u5550
  9012  002E6C                     u5551:
  9013  002E6C  EF2D  F017         	goto	l5731
  9014  002E70                     u5550:
  9015  002E70                     l5733:
  9016  002E70  0EFF               	movlw	255
  9017  002E72  EC27  F01B         	call	_SPI2_ExchangeByte
  9018  002E76  0AFF               	xorlw	255
  9019  002E78  B4D8               	btfsc	status,2,c
  9020  002E7A  EF41  F017         	goto	u5561
  9021  002E7E  EF43  F017         	goto	u5560
  9022  002E82                     u5561:
  9023  002E82  EF38  F017         	goto	l5733
  9024  002E86                     u5560:
  9025  002E86                     
  9026                           ;sdCard.c: 33: 
  9027  002E86  0E00               	movlw	0
  9028  002E88  6E1C               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  9029  002E8A  0E00               	movlw	0
  9030  002E8C  6E1B               	movwf	SDCARD_ReadBlock@i^0,c
  9031  002E8E                     l5741:
  9032                           
  9033                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  9034  002E8E  501B               	movf	SDCARD_ReadBlock@i^0,w,c
  9035  002E90  2419               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  9036  002E92  6ED9               	movwf	fsr2l,c
  9037  002E94  501C               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  9038  002E96  201A               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  9039  002E98  6EDA               	movwf	fsr2h,c
  9040  002E9A  0EFF               	movlw	255
  9041  002E9C  EC27  F01B         	call	_SPI2_ExchangeByte
  9042  002EA0  6EDF               	movwf	indf2,c
  9043  002EA2  4A1B               	infsnz	SDCARD_ReadBlock@i^0,f,c
  9044  002EA4  2A1C               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  9045  002EA6  0E02               	movlw	2
  9046  002EA8  5C1C               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  9047  002EAA  A0D8               	btfss	status,0,c
  9048  002EAC  EF5A  F017         	goto	u5571
  9049  002EB0  EF5C  F017         	goto	u5570
  9050  002EB4                     u5571:
  9051  002EB4  EF47  F017         	goto	l5741
  9052  002EB8                     u5570:
  9053  002EB8                     
  9054                           ;sdCard.c: 37: 
  9055  002EB8  0EFF               	movlw	255
  9056  002EBA  EC27  F01B         	call	_SPI2_ExchangeByte
  9057                           
  9058                           ;sdCard.c: 38: 
  9059  002EBE  0EFF               	movlw	255
  9060  002EC0  EC27  F01B         	call	_SPI2_ExchangeByte
  9061  002EC4  888A               	bsf	138,4,c	;volatile
  9062  002EC6  0012               	return		;funcret
  9063  002EC8                     __end_of_SDCARD_ReadBlock:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function _SDCARD_PollWriteComplete *****************
  9067 ;; Defined at:
  9068 ;;		line 86 in file "sdCard.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;		None
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  status          1   20[COMRAM] unsigned char 
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  1    wreg      unsigned char 
  9075 ;; Registers used:
  9076 ;;		wreg, status,2, status,0, cstack
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;Total ram usage:        1 bytes
  9087 ;; Hardware stack levels used:    1
  9088 ;; Hardware stack levels required when called:    5
  9089 ;; This function calls:
  9090 ;;		_SPI2_ExchangeByte
  9091 ;; This function is called by:
  9092 ;;		_main
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text24
  9097  00337A                     __ptext24:
  9098                           	callstack 0
  9099  00337A                     _SDCARD_PollWriteComplete:
  9100                           	callstack 25
  9101  00337A  988A               	bcf	138,4,c	;volatile
  9102  00337C                     
  9103                           ;sdCard.c: 91: 
  9104  00337C  0E0D               	movlw	13
  9105  00337E  EC27  F01B         	call	_SPI2_ExchangeByte
  9106  003382  6E15               	movwf	SDCARD_PollWriteComplete@status^0,c
  9107  003384  888A               	bsf	138,4,c	;volatile
  9108  003386                     
  9109                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  9110  003386  2815               	incf	SDCARD_PollWriteComplete@status^0,w,c
  9111  003388  A4D8               	btfss	status,2,c
  9112  00338A  EFC9  F019         	goto	u5531
  9113  00338E  EFCB  F019         	goto	u5530
  9114  003392                     u5531:
  9115  003392  EFCE  F019         	goto	l5697
  9116  003396                     u5530:
  9117  003396                     
  9118                           ;sdCard.c: 95:         return (status);
  9119  003396  0EFF               	movlw	255
  9120  003398  EFD8  F019         	goto	l674
  9121  00339C                     l5697:
  9122                           
  9123                           ;sdCard.c: 98: }
  9124  00339C  0EFF               	movlw	255
  9125  00339E  EC27  F01B         	call	_SPI2_ExchangeByte
  9126                           
  9127                           ;sdCard.c: 99: 
  9128  0033A2  0EFF               	movlw	255
  9129  0033A4  EC27  F01B         	call	_SPI2_ExchangeByte
  9130                           
  9131                           ;sdCard.c: 100: 
  9132  0033A8  0EFF               	movlw	255
  9133  0033AA  EC27  F01B         	call	_SPI2_ExchangeByte
  9134  0033AE                     
  9135                           ;sdCard.c: 101: 
  9136  0033AE  5015               	movf	SDCARD_PollWriteComplete@status^0,w,c
  9137  0033B0                     l674:
  9138  0033B0  0012               	return		;funcret
  9139  0033B2                     __end_of_SDCARD_PollWriteComplete:
  9140                           	callstack 0
  9141                           
  9142 ;; *************** function _SDCARD_Initialize *****************
  9143 ;; Defined at:
  9144 ;;		line 111 in file "sdCard.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  verbose         1    wreg     unsigned char 
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  verbose         1   86[BANK0 ] unsigned char 
  9149 ;;  i               2   84[BANK0 ] int 
  9150 ;;  response        1   87[BANK0 ] unsigned char 
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;Total ram usage:        4 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; Hardware stack levels required when called:   13
  9167 ;; This function calls:
  9168 ;;		_SPI2_ExchangeByte
  9169 ;;		_printf
  9170 ;; This function is called by:
  9171 ;;		_main
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           	psect	text25
  9176  002824                     __ptext25:
  9177                           	callstack 0
  9178  002824                     _SDCARD_Initialize:
  9179                           	callstack 17
  9180                           
  9181                           ;incstack = 0
  9182                           ;SDCARD_Initialize@verbose stored from wreg
  9183  002824  0100               	movlb	0	; () banked
  9184  002826  6FB6               	movwf	SDCARD_Initialize@verbose& (0+255),b
  9185  002828                     
  9186                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  9187  002828  0E00               	movlw	0
  9188  00282A  0100               	movlb	0	; () banked
  9189  00282C  6FB5               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  9190  00282E  0E00               	movlw	0
  9191  002830  6FB4               	movwf	SDCARD_Initialize@i& (0+255),b
  9192  002832                     l5757:
  9193                           
  9194                           ; BSR set to: 0
  9195                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  9196  002832  0EFF               	movlw	255
  9197  002834  EC27  F01B         	call	_SPI2_ExchangeByte
  9198  002838                     
  9199                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  9200  002838  0100               	movlb	0	; () banked
  9201  00283A  4BB4               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  9202  00283C  2BB5               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  9203  00283E                     
  9204                           ; BSR set to: 0
  9205  00283E  BFB5               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  9206  002840  EF2B  F014         	goto	u5581
  9207  002844  51B5               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  9208  002846  E109               	bnz	u5580
  9209  002848  0E0A               	movlw	10
  9210  00284A  5DB4               	subwf	SDCARD_Initialize@i& (0+255),w,b
  9211  00284C  A0D8               	btfss	status,0,c
  9212  00284E  EF2B  F014         	goto	u5581
  9213  002852  EF2D  F014         	goto	u5580
  9214  002856                     u5581:
  9215  002856  EF19  F014         	goto	l5757
  9216  00285A                     u5580:
  9217  00285A                     
  9218                           ; BSR set to: 0
  9219  00285A  988A               	bcf	138,4,c	;volatile
  9220  00285C                     
  9221                           ; BSR set to: 0
  9222                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  9223  00285C  0EFF               	movlw	255
  9224  00285E  EC27  F01B         	call	_SPI2_ExchangeByte
  9225                           
  9226                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  9227  002862  0E40               	movlw	64
  9228  002864  EC27  F01B         	call	_SPI2_ExchangeByte
  9229                           
  9230                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  9231  002868  0E00               	movlw	0
  9232  00286A  EC27  F01B         	call	_SPI2_ExchangeByte
  9233                           
  9234                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  9235  00286E  0E00               	movlw	0
  9236  002870  EC27  F01B         	call	_SPI2_ExchangeByte
  9237                           
  9238                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  9239  002874  0E00               	movlw	0
  9240  002876  EC27  F01B         	call	_SPI2_ExchangeByte
  9241                           
  9242                           ;sdCard.c: 130: 
  9243  00287A  0E00               	movlw	0
  9244  00287C  EC27  F01B         	call	_SPI2_ExchangeByte
  9245                           
  9246                           ;sdCard.c: 131: 
  9247  002880  0E95               	movlw	149
  9248  002882  EC27  F01B         	call	_SPI2_ExchangeByte
  9249                           
  9250                           ;sdCard.c: 132: 
  9251  002886  0EFF               	movlw	255
  9252  002888  EC27  F01B         	call	_SPI2_ExchangeByte
  9253                           
  9254                           ;sdCard.c: 133:     do {
  9255  00288C  0EFF               	movlw	255
  9256  00288E  EC27  F01B         	call	_SPI2_ExchangeByte
  9257  002892  0100               	movlb	0	; () banked
  9258  002894  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9259  002896                     
  9260                           ; BSR set to: 0
  9261  002896  888A               	bsf	138,4,c	;volatile
  9262  002898                     
  9263                           ; BSR set to: 0
  9264                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  9265  002898  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9266  00289A  A4D8               	btfss	status,2,c
  9267  00289C  EF52  F014         	goto	u5591
  9268  0028A0  EF54  F014         	goto	u5590
  9269  0028A4                     u5591:
  9270  0028A4  EF5D  F014         	goto	l5771
  9271  0028A8                     u5590:
  9272  0028A8                     
  9273                           ; BSR set to: 0
  9274  0028A8  0E06               	movlw	low STR_113
  9275  0028AA  6FA6               	movwf	printf@fmt& (0+255),b
  9276  0028AC  0EFE               	movlw	high STR_113
  9277  0028AE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9278  0028B0  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9279  0028B4  6BA9               	clrf	(?_printf+3)& (0+255),b
  9280  0028B6  ECAC  F01A         	call	_printf	;wreg free
  9281  0028BA                     l5771:
  9282  0028BA  988A               	bcf	138,4,c	;volatile
  9283  0028BC                     
  9284                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  9285  0028BC  0EFF               	movlw	255
  9286  0028BE  EC27  F01B         	call	_SPI2_ExchangeByte
  9287  0028C2                     
  9288                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  9289  0028C2  0E41               	movlw	65
  9290  0028C4  EC27  F01B         	call	_SPI2_ExchangeByte
  9291  0028C8                     
  9292                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  9293  0028C8  0E00               	movlw	0
  9294  0028CA  EC27  F01B         	call	_SPI2_ExchangeByte
  9295  0028CE                     
  9296                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  9297  0028CE  0E00               	movlw	0
  9298  0028D0  EC27  F01B         	call	_SPI2_ExchangeByte
  9299  0028D4                     
  9300                           ;sdCard.c: 145:     } while (response != 0);
  9301  0028D4  0E00               	movlw	0
  9302  0028D6  EC27  F01B         	call	_SPI2_ExchangeByte
  9303  0028DA                     
  9304                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  9305  0028DA  0E00               	movlw	0
  9306  0028DC  EC27  F01B         	call	_SPI2_ExchangeByte
  9307  0028E0                     
  9308                           ;sdCard.c: 147: 
  9309  0028E0  0EFF               	movlw	255
  9310  0028E2  EC27  F01B         	call	_SPI2_ExchangeByte
  9311  0028E6                     
  9312                           ;sdCard.c: 148: 
  9313  0028E6  0EFF               	movlw	255
  9314  0028E8  EC27  F01B         	call	_SPI2_ExchangeByte
  9315  0028EC                     
  9316                           ;sdCard.c: 149: 
  9317  0028EC  0EFF               	movlw	255
  9318  0028EE  EC27  F01B         	call	_SPI2_ExchangeByte
  9319  0028F2  0100               	movlb	0	; () banked
  9320  0028F4  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9321  0028F6                     
  9322                           ; BSR set to: 0
  9323  0028F6  888A               	bsf	138,4,c	;volatile
  9324  0028F8                     
  9325                           ; BSR set to: 0
  9326                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  9327  0028F8  51B7               	movf	SDCARD_Initialize@response& (0+255),w,b
  9328  0028FA  A4D8               	btfss	status,2,c
  9329  0028FC  EF82  F014         	goto	u5601
  9330  002900  EF84  F014         	goto	u5600
  9331  002904                     u5601:
  9332  002904  EF5D  F014         	goto	l5771
  9333  002908                     u5600:
  9334  002908                     
  9335                           ; BSR set to: 0
  9336                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  9337  002908  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9338  00290A  A4D8               	btfss	status,2,c
  9339  00290C  EF8A  F014         	goto	u5611
  9340  002910  EF8C  F014         	goto	u5610
  9341  002914                     u5611:
  9342  002914  EF95  F014         	goto	l5799
  9343  002918                     u5610:
  9344  002918                     
  9345                           ; BSR set to: 0
  9346  002918  0E3C               	movlw	low STR_114
  9347  00291A  6FA6               	movwf	printf@fmt& (0+255),b
  9348  00291C  0EFE               	movlw	high STR_114
  9349  00291E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9350  002920  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9351  002924  6BA9               	clrf	(?_printf+3)& (0+255),b
  9352  002926  ECAC  F01A         	call	_printf	;wreg free
  9353  00292A                     l5799:
  9354  00292A  988A               	bcf	138,4,c	;volatile
  9355  00292C                     
  9356                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  9357  00292C  0EFF               	movlw	255
  9358  00292E  EC27  F01B         	call	_SPI2_ExchangeByte
  9359  002932                     
  9360                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  9361  002932  0E50               	movlw	80
  9362  002934  EC27  F01B         	call	_SPI2_ExchangeByte
  9363  002938                     
  9364                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  9365  002938  0E00               	movlw	0
  9366  00293A  EC27  F01B         	call	_SPI2_ExchangeByte
  9367  00293E                     
  9368                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  9369  00293E  0E00               	movlw	0
  9370  002940  EC27  F01B         	call	_SPI2_ExchangeByte
  9371  002944                     
  9372                           ;sdCard.c: 162:     } while (response == 0xFF);
  9373  002944  0E02               	movlw	2
  9374  002946  EC27  F01B         	call	_SPI2_ExchangeByte
  9375  00294A                     
  9376                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  9377  00294A  0E00               	movlw	0
  9378  00294C  EC27  F01B         	call	_SPI2_ExchangeByte
  9379  002950                     
  9380                           ;sdCard.c: 164: 
  9381  002950  0EFF               	movlw	255
  9382  002952  EC27  F01B         	call	_SPI2_ExchangeByte
  9383  002956                     
  9384                           ;sdCard.c: 165: }
  9385  002956  0EFF               	movlw	255
  9386  002958  EC27  F01B         	call	_SPI2_ExchangeByte
  9387  00295C                     
  9388                           ;sdCard.c: 166: 
  9389  00295C  0EFF               	movlw	255
  9390  00295E  EC27  F01B         	call	_SPI2_ExchangeByte
  9391  002962  0100               	movlb	0	; () banked
  9392  002964  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9393  002966                     
  9394                           ; BSR set to: 0
  9395  002966  888A               	bsf	138,4,c	;volatile
  9396  002968                     
  9397                           ; BSR set to: 0
  9398                           ;sdCard.c: 168: 
  9399  002968  29B7               	incf	SDCARD_Initialize@response& (0+255),w,b
  9400  00296A  B4D8               	btfsc	status,2,c
  9401  00296C  EFBA  F014         	goto	u5621
  9402  002970  EFBC  F014         	goto	u5620
  9403  002974                     u5621:
  9404  002974  EF95  F014         	goto	l5799
  9405  002978                     u5620:
  9406  002978                     
  9407                           ; BSR set to: 0
  9408                           ;sdCard.c: 169: 
  9409  002978  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9410  00297A  A4D8               	btfss	status,2,c
  9411  00297C  EFC2  F014         	goto	u5631
  9412  002980  EFC4  F014         	goto	u5630
  9413  002984                     u5631:
  9414  002984  EFCD  F014         	goto	l699
  9415  002988                     u5630:
  9416  002988                     
  9417                           ; BSR set to: 0
  9418  002988  0ECE               	movlw	low STR_115
  9419  00298A  6FA6               	movwf	printf@fmt& (0+255),b
  9420  00298C  0EFD               	movlw	high STR_115
  9421  00298E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9422  002990  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9423  002994  6BA9               	clrf	(?_printf+3)& (0+255),b
  9424  002996  ECAC  F01A         	call	_printf	;wreg free
  9425  00299A                     l699:
  9426  00299A  0012               	return		;funcret
  9427  00299C                     __end_of_SDCARD_Initialize:
  9428                           	callstack 0
  9429                           
  9430 ;; *************** function _printf *****************
  9431 ;; Defined at:
  9432 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  9435 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9436 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9437 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9438 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9439 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9440 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9441 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9442 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9443 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9444 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9445 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9446 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9447 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9448 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9449 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9450 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9451 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9452 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
  9453 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
  9454 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
  9455 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
  9456 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
  9457 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
  9458 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
  9459 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9460 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9461 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9462 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9463 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9464 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9465 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9466 ;;		 -> STR_2(21), STR_1(9), 
  9467 ;; Auto vars:     Size  Location     Type
  9468 ;;  ap              2   82[BANK0 ] PTR void [1]
  9469 ;;		 -> ?_printf(2), 
  9470 ;;  ret             2    0        int 
  9471 ;; Return value:  Size  Location     Type
  9472 ;;                  2   70[BANK0 ] int 
  9473 ;; Registers used:
  9474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9475 ;; Tracked objects:
  9476 ;;		On entry : 0/0
  9477 ;;		On exit  : 0/0
  9478 ;;		Unchanged: 0/0
  9479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9480 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9481 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;Total ram usage:       14 bytes
  9485 ;; Hardware stack levels used:    1
  9486 ;; Hardware stack levels required when called:   12
  9487 ;; This function calls:
  9488 ;;		_vfprintf
  9489 ;; This function is called by:
  9490 ;;		_main
  9491 ;;		_printAddress
  9492 ;;		_printAscii
  9493 ;;		_SDCARD_Initialize
  9494 ;;		_hexDumpBuffer
  9495 ;; This function uses a non-reentrant model
  9496 ;;
  9497                           
  9498                           	psect	text26
  9499  003558                     __ptext26:
  9500                           	callstack 0
  9501  003558                     _printf:
  9502                           	callstack 18
  9503  003558  0EA8               	movlw	low (?_printf+2)
  9504  00355A  0100               	movlb	0	; () banked
  9505  00355C  6FB2               	movwf	printf@ap& (0+255),b
  9506  00355E  0E00               	movlw	high (?_printf+2)
  9507  003560  6FB3               	movwf	(printf@ap+1)& (0+255),b
  9508  003562                     
  9509                           ; BSR set to: 0
  9510  003562  0E00               	movlw	0
  9511  003564  6F9E               	movwf	vfprintf@fp& (0+255),b
  9512  003566  0E00               	movlw	0
  9513  003568  6F9F               	movwf	(vfprintf@fp+1)& (0+255),b
  9514  00356A  C0A6  F0A0         	movff	printf@fmt,vfprintf@fmt
  9515  00356E  C0A7  F0A1         	movff	printf@fmt+1,vfprintf@fmt+1
  9516  003572  0EB2               	movlw	low printf@ap
  9517  003574  6FA2               	movwf	vfprintf@ap& (0+255),b
  9518  003576  0E00               	movlw	high printf@ap
  9519  003578  6FA3               	movwf	(vfprintf@ap+1)& (0+255),b
  9520  00357A  EC65  F018         	call	_vfprintf	;wreg free
  9521  00357E  0012               	return		;funcret
  9522  003580                     __end_of_printf:
  9523                           	callstack 0
  9524                           
  9525 ;; *************** function _vfprintf *****************
  9526 ;; Defined at:
  9527 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  9530 ;;		 -> NULL(0), 
  9531 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  9532 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9533 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9534 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9535 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9536 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9537 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9538 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9539 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9540 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9541 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9542 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9543 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9544 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9545 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9546 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9547 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9548 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9549 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
  9550 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
  9551 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
  9552 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
  9553 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
  9554 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
  9555 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
  9556 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9557 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9558 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9559 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9560 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9561 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9562 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9563 ;;		 -> STR_2(21), STR_1(9), 
  9564 ;;  ap              2   66[BANK0 ] PTR PTR void 
  9565 ;;		 -> printf@ap(2), 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  9568 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
  9569 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
  9570 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
  9571 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
  9572 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
  9573 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
  9574 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
  9575 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
  9576 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
  9577 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
  9578 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
  9579 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
  9580 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
  9581 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
  9582 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
  9583 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
  9584 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
  9585 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
  9586 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
  9587 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
  9588 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
  9589 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
  9590 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
  9591 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
  9592 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
  9593 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
  9594 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
  9595 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
  9596 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
  9597 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
  9598 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
  9599 ;;		 -> STR_2(21), STR_1(9), 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  2   62[BANK0 ] int 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9609 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;Total ram usage:        8 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:   11
  9616 ;; This function calls:
  9617 ;;		_vfpfcnvrt
  9618 ;; This function is called by:
  9619 ;;		_printf
  9620 ;; This function uses a non-reentrant model
  9621 ;;
  9622                           
  9623                           	psect	text27
  9624  0030CA                     __ptext27:
  9625                           	callstack 0
  9626  0030CA                     _vfprintf:
  9627                           	callstack 18
  9628  0030CA                     
  9629                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  9630  0030CA  C0A0  F0A4         	movff	vfprintf@fmt,vfprintf@cfmt
  9631  0030CE  C0A1  F0A5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9632  0030D2                     
  9633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  9634  0030D2  0E00               	movlw	0
  9635  0030D4  0100               	movlb	0	; () banked
  9636  0030D6  6FC7               	movwf	(_nout+1)& (0+255),b
  9637  0030D8  0E00               	movlw	0
  9638  0030DA  6FC6               	movwf	_nout& (0+255),b
  9639                           
  9640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  9641  0030DC  EF83  F018         	goto	l5537
  9642  0030E0                     l5535:
  9643                           
  9644                           ; BSR set to: 0
  9645                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9646  0030E0  C09E  F07F         	movff	vfprintf@fp,vfpfcnvrt@fp
  9647  0030E4  C09F  F080         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9648  0030E8  0EA4               	movlw	low vfprintf@cfmt
  9649  0030EA  6F81               	movwf	vfpfcnvrt@fmt& (0+255),b
  9650  0030EC  0E00               	movlw	high vfprintf@cfmt
  9651  0030EE  6F82               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9652  0030F0  C0A2  F083         	movff	vfprintf@ap,vfpfcnvrt@ap
  9653  0030F4  C0A3  F084         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9654  0030F8  ECE8  F008         	call	_vfpfcnvrt	;wreg free
  9655  0030FC  0100               	movlb	0	; () banked
  9656  0030FE  517F               	movf	?_vfpfcnvrt& (0+255),w,b
  9657  003100  27C6               	addwf	_nout& (0+255),f,b
  9658  003102  5180               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9659  003104  23C7               	addwfc	(_nout+1)& (0+255),f,b
  9660  003106                     l5537:
  9661                           
  9662                           ; BSR set to: 0
  9663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  9664  003106  C0A4  FFF6         	movff	vfprintf@cfmt,tblptrl
  9665  00310A  C0A5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9666  00310E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9667  00310E  6AF8               	clrf	tblptru,c
  9668  003110                     	endif
  9669  003110                     	if	0	;tblptru may be non-zero
  9670  003110                     	endif
  9671  003110  0008               	tblrd		*
  9672  003112  50F5               	movf	tablat,w,c
  9673  003114  0900               	iorlw	0
  9674  003116  A4D8               	btfss	status,2,c
  9675  003118  EF90  F018         	goto	u5441
  9676  00311C  EF92  F018         	goto	u5440
  9677  003120                     u5441:
  9678  003120  EF70  F018         	goto	l5535
  9679  003124                     u5440:
  9680  003124                     
  9681                           ; BSR set to: 0
  9682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  9683  003124  C0C6  F09E         	movff	_nout,?_vfprintf
  9684  003128  C0C7  F09F         	movff	_nout+1,?_vfprintf+1
  9685  00312C                     
  9686                           ; BSR set to: 0
  9687  00312C  0012               	return		;funcret
  9688  00312E                     __end_of_vfprintf:
  9689                           	callstack 0
  9690                           
  9691 ;; *************** function _vfpfcnvrt *****************
  9692 ;; Defined at:
  9693 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9696 ;;		 -> NULL(0), 
  9697 ;;  fmt             2   33[BANK0 ] PTR PTR unsigned char 
  9698 ;;		 -> vfprintf@cfmt(2), 
  9699 ;;  ap              2   35[BANK0 ] PTR PTR void 
  9700 ;;		 -> printf@ap(2), 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  llu             8   53[BANK0 ] unsigned long long 
  9703 ;;  ll              8   41[BANK0 ] long long 
  9704 ;;  f               4    0        long long 
  9705 ;;  vp              3    0        PTR void 
  9706 ;;  ct              3    0        unsigned char [3]
  9707 ;;  cp              3    0        PTR unsigned char 
  9708 ;;  done            2   49[BANK0 ] int 
  9709 ;;  i               2    0        int 
  9710 ;;  c               1   61[BANK0 ] unsigned char 
  9711 ;; Return value:  Size  Location     Type
  9712 ;;                  2   31[BANK0 ] int 
  9713 ;; Registers used:
  9714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9715 ;; Tracked objects:
  9716 ;;		On entry : 0/0
  9717 ;;		On exit  : 0/0
  9718 ;;		Unchanged: 0/0
  9719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9720 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9721 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9722 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9723 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9724 ;;Total ram usage:       31 bytes
  9725 ;; Hardware stack levels used:    1
  9726 ;; Hardware stack levels required when called:   10
  9727 ;; This function calls:
  9728 ;;		_atoi
  9729 ;;		_ctoa
  9730 ;;		_dtoa
  9731 ;;		_fputc
  9732 ;;		_isdigit
  9733 ;;		_utoa
  9734 ;;		_xtoa
  9735 ;; This function is called by:
  9736 ;;		_vfprintf
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text28
  9741  0011D0                     __ptext28:
  9742                           	callstack 0
  9743  0011D0                     _vfpfcnvrt:
  9744                           	callstack 18
  9745  0011D0                     
  9746                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  9747  0011D0  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9748  0011D4  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9749  0011D8  CFDE FFF6          	movff	postinc2,tblptrl
  9750  0011DC  CFDD FFF7          	movff	postdec2,tblptrh
  9751  0011E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9752  0011E0  6AF8               	clrf	tblptru,c
  9753  0011E2                     	endif
  9754  0011E2                     	if	0	;tblptru may be non-zero
  9755  0011E2                     	endif
  9756  0011E2  0008               	tblrd		*
  9757  0011E4  50F5               	movf	tablat,w,c
  9758  0011E6  0A25               	xorlw	37
  9759  0011E8  A4D8               	btfss	status,2,c
  9760  0011EA  EFF9  F008         	goto	u5291
  9761  0011EE  EFFB  F008         	goto	u5290
  9762  0011F2                     u5291:
  9763  0011F2  EF8D  F00B         	goto	l5507
  9764  0011F6                     u5290:
  9765  0011F6                     
  9766                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  9767  0011F6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9768  0011FA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9769  0011FE  2ADE               	incf	postinc2,f,c
  9770  001200  0E00               	movlw	0
  9771  001202  22DD               	addwfc	postdec2,f,c
  9772  001204                     
  9773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  9774  001204  0E00               	movlw	0
  9775  001206  6E3A               	movwf	(_width+1)^0,c
  9776  001208  0E00               	movlw	0
  9777  00120A  6E39               	movwf	_width^0,c
  9778  00120C  C039  F03D         	movff	_width,_flags
  9779  001210  C03A  F03E         	movff	_width+1,_flags+1
  9780  001214                     
  9781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  9782  001214  683B               	setf	_prec^0,c
  9783  001216  683C               	setf	(_prec+1)^0,c
  9784  001218                     
  9785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 688:         done
      +                           = 0;
  9786  001218  0E00               	movlw	0
  9787  00121A  0100               	movlb	0	; () banked
  9788  00121C  6F92               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9789  00121E  0E00               	movlw	0
  9790  001220  6F91               	movwf	vfpfcnvrt@done& (0+255),b
  9791                           
  9792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  9793  001222  EF5A  F009         	goto	l5429
  9794  001226                     l5403:
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 692:             
      +                                  flags |= (1 << 0);
  9798  001226  803D               	bsf	_flags^0,0,c
  9799  001228                     l5405:
  9800                           
  9801                           ; BSR set to: 0
  9802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 693:             
      +                                  ++*fmt;
  9803  001228  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9804  00122C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9805  001230  2ADE               	incf	postinc2,f,c
  9806  001232  0E00               	movlw	0
  9807  001234  22DD               	addwfc	postdec2,f,c
  9808                           
  9809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 694:             
      +                                  break;
  9810  001236  EF5A  F009         	goto	l5429
  9811  00123A                     l5407:
  9812                           
  9813                           ; BSR set to: 0
  9814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 696:             
      +                                  flags |= (1 << 1);
  9815  00123A  823D               	bsf	_flags^0,1,c
  9816  00123C  EF14  F009         	goto	l5405
  9817  001240                     l5411:
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 700:             
      +                                  flags |= (1 << 2);
  9821  001240  843D               	bsf	_flags^0,2,c
  9822  001242  EF14  F009         	goto	l5405
  9823  001246                     l5415:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 704:             
      +                                  flags |= (1 << 3);
  9827  001246  863D               	bsf	_flags^0,3,c
  9828  001248  EF14  F009         	goto	l5405
  9829  00124C                     l5419:
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 708:             
      +                                  flags |= (1 << 4);
  9833  00124C  883D               	bsf	_flags^0,4,c
  9834  00124E  EF14  F009         	goto	l5405
  9835  001252                     l5423:
  9836                           
  9837                           ; BSR set to: 0
  9838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 712:             
      +                                  done = 1;
  9839  001252  0E00               	movlw	0
  9840  001254  6F92               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9841  001256  0E01               	movlw	1
  9842  001258  6F91               	movwf	vfpfcnvrt@done& (0+255),b
  9843                           
  9844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 713:             
      +                                  break;
  9845  00125A  EF5A  F009         	goto	l5429
  9846  00125E                     l5427:
  9847                           
  9848                           ; BSR set to: 0
  9849  00125E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9850  001262  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9851  001266  CFDE FFF6          	movff	postinc2,tblptrl
  9852  00126A  CFDD FFF7          	movff	postdec2,tblptrh
  9853  00126E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9854  00126E  6AF8               	clrf	tblptru,c
  9855  001270                     	endif
  9856  001270                     	if	0	;tblptru may be non-zero
  9857  001270                     	endif
  9858  001270  0008               	tblrd		*
  9859  001272  50F5               	movf	tablat,w,c
  9860  001274  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  9861  001276  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9862                           
  9863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9864                           ; Switch size 1, requested type "simple"
  9865                           ; Number of cases is 1, Range of values is 0 to 0
  9866                           ; switch strategies available:
  9867                           ; Name         Instructions Cycles
  9868                           ; simple_byte            4     3 (average)
  9869                           ;	Chosen strategy is simple_byte
  9870  001278  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9871  00127A  0A00               	xorlw	0	; case 0
  9872  00127C  B4D8               	btfsc	status,2,c
  9873  00127E  EF43  F009         	goto	l6405
  9874  001282  EF29  F009         	goto	l5423
  9875  001286                     l6405:
  9876                           
  9877                           ; BSR set to: 0
  9878                           ; Switch size 1, requested type "simple"
  9879                           ; Number of cases is 5, Range of values is 32 to 48
  9880                           ; switch strategies available:
  9881                           ; Name         Instructions Cycles
  9882                           ; simple_byte           16     9 (average)
  9883                           ;	Chosen strategy is simple_byte
  9884  001286  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  9885  001288  0A20               	xorlw	32	; case 32
  9886  00128A  B4D8               	btfsc	status,2,c
  9887  00128C  EF23  F009         	goto	l5415
  9888  001290  0A03               	xorlw	3	; case 35
  9889  001292  B4D8               	btfsc	status,2,c
  9890  001294  EF26  F009         	goto	l5419
  9891  001298  0A08               	xorlw	8	; case 43
  9892  00129A  B4D8               	btfsc	status,2,c
  9893  00129C  EF20  F009         	goto	l5411
  9894  0012A0  0A06               	xorlw	6	; case 45
  9895  0012A2  B4D8               	btfsc	status,2,c
  9896  0012A4  EF13  F009         	goto	l5403
  9897  0012A8  0A1D               	xorlw	29	; case 48
  9898  0012AA  B4D8               	btfsc	status,2,c
  9899  0012AC  EF1D  F009         	goto	l5407
  9900  0012B0  EF29  F009         	goto	l5423
  9901  0012B4                     l5429:
  9902                           
  9903                           ; BSR set to: 0
  9904                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 689:         whil
      +                          e (!done) {
  9905  0012B4  5191               	movf	vfpfcnvrt@done& (0+255),w,b
  9906  0012B6  1192               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9907  0012B8  B4D8               	btfsc	status,2,c
  9908  0012BA  EF61  F009         	goto	u5301
  9909  0012BE  EF63  F009         	goto	u5300
  9910  0012C2                     u5301:
  9911  0012C2  EF2F  F009         	goto	l5427
  9912  0012C6                     u5300:
  9913  0012C6                     
  9914                           ; BSR set to: 0
  9915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 716:         if (
      +                          flags & (1 << 0)) {
  9916  0012C6  A03D               	btfss	_flags^0,0,c
  9917  0012C8  EF68  F009         	goto	u5311
  9918  0012CC  EF6A  F009         	goto	u5310
  9919  0012D0                     u5311:
  9920  0012D0  EF6B  F009         	goto	l5433
  9921  0012D4                     u5310:
  9922  0012D4                     
  9923                           ; BSR set to: 0
  9924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 717:             
      +                          flags &= ~(1 << 1);
  9925  0012D4  923D               	bcf	_flags^0,1,c
  9926  0012D6                     l5433:
  9927                           
  9928                           ; BSR set to: 0
  9929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  9930  0012D6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9931  0012DA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9932  0012DE  CFDE FFF6          	movff	postinc2,tblptrl
  9933  0012E2  CFDD FFF7          	movff	postdec2,tblptrh
  9934  0012E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9935  0012E6  6AF8               	clrf	tblptru,c
  9936  0012E8                     	endif
  9937  0012E8                     	if	0	;tblptru may be non-zero
  9938  0012E8                     	endif
  9939  0012E8  0008               	tblrd		*
  9940  0012EA  50F5               	movf	tablat,w,c
  9941  0012EC  0A2A               	xorlw	42
  9942  0012EE  A4D8               	btfss	status,2,c
  9943  0012F0  EF7C  F009         	goto	u5321
  9944  0012F4  EF7E  F009         	goto	u5320
  9945  0012F8                     u5321:
  9946  0012F8  EFA7  F009         	goto	l5441
  9947  0012FC                     u5320:
  9948  0012FC                     
  9949                           ; BSR set to: 0
  9950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  9951  0012FC  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9952  001300  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9953  001304  2ADE               	incf	postinc2,f,c
  9954  001306  0E00               	movlw	0
  9955  001308  22DD               	addwfc	postdec2,f,c
  9956                           
  9957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  9958  00130A  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  9959  00130E  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  9960  001312  CFDF F085          	movff	indf2,??_vfpfcnvrt
  9961  001316  0E02               	movlw	2
  9962  001318  26DE               	addwf	postinc2,f,c
  9963  00131A  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
  9964  00131E  0E00               	movlw	0
  9965  001320  22DD               	addwfc	postdec2,f,c
  9966  001322  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
  9967  001326  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  9968  00132A  CFDE F039          	movff	postinc2,_width
  9969  00132E  CFDD F03A          	movff	postdec2,_width+1
  9970  001332                     
  9971                           ; BSR set to: 0
  9972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  9973  001332  BE3A               	btfsc	(_width+1)^0,7,c
  9974  001334  EFA0  F009         	goto	u5330
  9975  001338  EF9E  F009         	goto	u5331
  9976  00133C                     u5331:
  9977  00133C  EFEC  F009         	goto	l5451
  9978  001340                     u5330:
  9979  001340                     
  9980                           ; BSR set to: 0
  9981                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  9982  001340  803D               	bsf	_flags^0,0,c
  9983                           
  9984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  9985  001342  6C39               	negf	_width^0,c
  9986  001344  1E3A               	comf	(_width+1)^0,f,c
  9987  001346  B0D8               	btfsc	status,0,c
  9988  001348  2A3A               	incf	(_width+1)^0,f,c
  9989  00134A  EFEC  F009         	goto	l5451
  9990  00134E                     l5441:
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  9994  00134E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9995  001352  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9996  001356  CFDE F01B          	movff	postinc2,atoi@s
  9997  00135A  CFDD F01C          	movff	postdec2,atoi@s+1
  9998  00135E  EC81  F012         	call	_atoi	;wreg free
  9999  001362  C01B  F039         	movff	?_atoi,_width
 10000  001366  C01C  F03A         	movff	?_atoi+1,_width+1
 10001                           
 10002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10003  00136A  EFBE  F009         	goto	l5445
 10004  00136E                     l5443:
 10005                           
 10006                           ; BSR set to: 0
 10007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
 10008  00136E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10009  001372  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10010  001376  2ADE               	incf	postinc2,f,c
 10011  001378  0E00               	movlw	0
 10012  00137A  22DD               	addwfc	postdec2,f,c
 10013  00137C                     l5445:
 10014  00137C  0ED0               	movlw	208
 10015  00137E  0100               	movlb	0	; () banked
 10016  001380  6F85               	movwf	??_vfpfcnvrt& (0+255),b
 10017  001382  0EFF               	movlw	255
 10018  001384  6F86               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10019  001386  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10020  00138A  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10021  00138E  CFDE FFF6          	movff	postinc2,tblptrl
 10022  001392  CFDD FFF7          	movff	postdec2,tblptrh
 10023  001396                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10024  001396  6AF8               	clrf	tblptru,c
 10025  001398                     	endif
 10026  001398                     	if	0	;tblptru may be non-zero
 10027  001398                     	endif
 10028  001398  0008               	tblrd		*
 10029  00139A  50F5               	movf	tablat,w,c
 10030  00139C  6F87               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10031  00139E  6B88               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10032  0013A0  5185               	movf	??_vfpfcnvrt& (0+255),w,b
 10033  0013A2  2787               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10034  0013A4  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10035  0013A6  2388               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10036  0013A8  5188               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10037  0013AA  E10A               	bnz	u5340
 10038  0013AC  0E0A               	movlw	10
 10039  0013AE  5D87               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10040  0013B0  A0D8               	btfss	status,0,c
 10041  0013B2  EFDD  F009         	goto	u5341
 10042  0013B6  EFE0  F009         	goto	u5340
 10043  0013BA                     u5341:
 10044  0013BA  0E01               	movlw	1
 10045  0013BC  EFE1  F009         	goto	u5350
 10046  0013C0                     u5340:
 10047  0013C0  0E00               	movlw	0
 10048  0013C2                     u5350:
 10049  0013C2  6F93               	movwf	_vfpfcnvrt$2012& (0+255),b
 10050  0013C4  6B94               	clrf	(_vfpfcnvrt$2012+1)& (0+255),b
 10051  0013C6                     
 10052                           ; BSR set to: 0
 10053  0013C6  5193               	movf	_vfpfcnvrt$2012& (0+255),w,b
 10054  0013C8  1194               	iorwf	(_vfpfcnvrt$2012+1)& (0+255),w,b
 10055  0013CA  A4D8               	btfss	status,2,c
 10056  0013CC  EFEA  F009         	goto	u5361
 10057  0013D0  EFEC  F009         	goto	u5360
 10058  0013D4                     u5361:
 10059  0013D4  EFB7  F009         	goto	l5443
 10060  0013D8                     u5360:
 10061  0013D8                     l5451:
 10062                           
 10063                           ; BSR set to: 0
 10064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 792:         if (
      +                          *fmt[0] == 'c') {
 10065  0013D8  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10066  0013DC  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10067  0013E0  CFDE FFF6          	movff	postinc2,tblptrl
 10068  0013E4  CFDD FFF7          	movff	postdec2,tblptrh
 10069  0013E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10070  0013E8  6AF8               	clrf	tblptru,c
 10071  0013EA                     	endif
 10072  0013EA                     	if	0	;tblptru may be non-zero
 10073  0013EA                     	endif
 10074  0013EA  0008               	tblrd		*
 10075  0013EC  50F5               	movf	tablat,w,c
 10076  0013EE  0A63               	xorlw	99
 10077  0013F0  A4D8               	btfss	status,2,c
 10078  0013F2  EFFD  F009         	goto	u5371
 10079  0013F6  EFFF  F009         	goto	u5370
 10080  0013FA                     u5371:
 10081  0013FA  EF26  F00A         	goto	l5459
 10082  0013FE                     u5370:
 10083  0013FE                     
 10084                           ; BSR set to: 0
 10085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 793:             
      +                          ++*fmt;
 10086  0013FE  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10087  001402  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10088  001406  2ADE               	incf	postinc2,f,c
 10089  001408  0E00               	movlw	0
 10090  00140A  22DD               	addwfc	postdec2,f,c
 10091                           
 10092                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 794:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10093  00140C  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10094  001410  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10095  001414  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10096  001418  0E02               	movlw	2
 10097  00141A  26DE               	addwf	postinc2,f,c
 10098  00141C  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10099  001420  0E00               	movlw	0
 10100  001422  22DD               	addwfc	postdec2,f,c
 10101  001424  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10102  001428  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10103  00142C  50DF               	movf	indf2,w,c
 10104  00142E  6F9D               	movwf	vfpfcnvrt@c& (0+255),b
 10105  001430                     
 10106                           ; BSR set to: 0
 10107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 795:             
      +                          return ctoa(fp, c);
 10108  001430  C07F  F031         	movff	vfpfcnvrt@fp,ctoa@fp
 10109  001434  C080  F032         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10110  001438  C09D  F033         	movff	vfpfcnvrt@c,ctoa@c
 10111  00143C  ECC6  F018         	call	_ctoa	;wreg free
 10112  001440  C031  F07F         	movff	?_ctoa,?_vfpfcnvrt
 10113  001444  C032  F080         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10114  001448  EFA9  F00B         	goto	l1544
 10115  00144C                     l5459:
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10119  00144C  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10120  001450  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10121  001454  CFDE FFF6          	movff	postinc2,tblptrl
 10122  001458  CFDD FFF7          	movff	postdec2,tblptrh
 10123  00145C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10124  00145C  6AF8               	clrf	tblptru,c
 10125  00145E                     	endif
 10126  00145E                     	if	0	;tblptru may be non-zero
 10127  00145E                     	endif
 10128  00145E  0008               	tblrd		*
 10129  001460  50F5               	movf	tablat,w,c
 10130  001462  0A64               	xorlw	100
 10131  001464  B4D8               	btfsc	status,2,c
 10132  001466  EF37  F00A         	goto	u5381
 10133  00146A  EF39  F00A         	goto	u5380
 10134  00146E                     u5381:
 10135  00146E  EF4C  F00A         	goto	l5463
 10136  001472                     u5380:
 10137  001472                     
 10138                           ; BSR set to: 0
 10139  001472  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10140  001476  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10141  00147A  CFDE FFF6          	movff	postinc2,tblptrl
 10142  00147E  CFDD FFF7          	movff	postdec2,tblptrh
 10143  001482                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10144  001482  6AF8               	clrf	tblptru,c
 10145  001484                     	endif
 10146  001484                     	if	0	;tblptru may be non-zero
 10147  001484                     	endif
 10148  001484  0008               	tblrd		*
 10149  001486  50F5               	movf	tablat,w,c
 10150  001488  0A69               	xorlw	105
 10151  00148A  A4D8               	btfss	status,2,c
 10152  00148C  EF4A  F00A         	goto	u5391
 10153  001490  EF4C  F00A         	goto	u5390
 10154  001494                     u5391:
 10155  001494  EF8C  F00A         	goto	l5469
 10156  001498                     u5390:
 10157  001498                     l5463:
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
 10161  001498  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10162  00149C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10163  0014A0  2ADE               	incf	postinc2,f,c
 10164  0014A2  0E00               	movlw	0
 10165  0014A4  22DD               	addwfc	postdec2,f,c
 10166                           
 10167                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10168  0014A6  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10169  0014AA  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10170  0014AE  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10171  0014B2  0E02               	movlw	2
 10172  0014B4  26DE               	addwf	postinc2,f,c
 10173  0014B6  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10174  0014BA  0E00               	movlw	0
 10175  0014BC  22DD               	addwfc	postdec2,f,c
 10176  0014BE  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10177  0014C2  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10178  0014C6  CFDE F089          	movff	postinc2,vfpfcnvrt@ll
 10179  0014CA  CFDD F08A          	movff	postdec2,vfpfcnvrt@ll+1
 10180  0014CE  0E00               	movlw	0
 10181  0014D0  BF8A               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10182  0014D2  0EFF               	movlw	-1
 10183  0014D4  6F8B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10184  0014D6  6F8C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10185  0014D8  6F8D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10186  0014DA  6F8E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10187  0014DC  6F8F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10188  0014DE  6F90               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10189  0014E0                     
 10190                           ; BSR set to: 0
 10191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
 10192  0014E0  C07F  F060         	movff	vfpfcnvrt@fp,dtoa@fp
 10193  0014E4  C080  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10194  0014E8  C089  F062         	movff	vfpfcnvrt@ll,dtoa@d
 10195  0014EC  C08A  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10196  0014F0  C08B  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10197  0014F4  C08C  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10198  0014F8  C08D  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10199  0014FC  C08E  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10200  001500  C08F  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10201  001504  C090  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10202  001508  ECAA  F00B         	call	_dtoa	;wreg free
 10203  00150C  C060  F07F         	movff	?_dtoa,?_vfpfcnvrt
 10204  001510  C061  F080         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10205  001514  EFA9  F00B         	goto	l1544
 10206  001518                     l5469:
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1182:         if 
      +                          (*fmt[0] == 'u') {
 10210  001518  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10211  00151C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10212  001520  CFDE FFF6          	movff	postinc2,tblptrl
 10213  001524  CFDD FFF7          	movff	postdec2,tblptrh
 10214  001528                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10215  001528  6AF8               	clrf	tblptru,c
 10216  00152A                     	endif
 10217  00152A                     	if	0	;tblptru may be non-zero
 10218  00152A                     	endif
 10219  00152A  0008               	tblrd		*
 10220  00152C  50F5               	movf	tablat,w,c
 10221  00152E  0A75               	xorlw	117
 10222  001530  A4D8               	btfss	status,2,c
 10223  001532  EF9D  F00A         	goto	u5401
 10224  001536  EF9F  F00A         	goto	u5400
 10225  00153A                     u5401:
 10226  00153A  EFE0  F00A         	goto	l5477
 10227  00153E                     u5400:
 10228  00153E                     
 10229                           ; BSR set to: 0
 10230                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1184:            
      +                           ++*fmt;
 10231  00153E  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10232  001542  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10233  001546  2ADE               	incf	postinc2,f,c
 10234  001548  0E00               	movlw	0
 10235  00154A  22DD               	addwfc	postdec2,f,c
 10236                           
 10237                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1185:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10238  00154C  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10239  001550  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10240  001554  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10241  001558  0E02               	movlw	2
 10242  00155A  26DE               	addwf	postinc2,f,c
 10243  00155C  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10244  001560  0E00               	movlw	0
 10245  001562  22DD               	addwfc	postdec2,f,c
 10246  001564  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10247  001568  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10248  00156C  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
 10249  001570  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
 10250  001574  C087  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10251  001578  C088  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10252  00157C  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10253  00157E  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10254  001580  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10255  001582  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10256  001584  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10257  001586  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10258  001588                     
 10259                           ; BSR set to: 0
 10260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1187:            
      +                           return utoa(fp, llu);
 10261  001588  C07F  F060         	movff	vfpfcnvrt@fp,utoa@fp
 10262  00158C  C080  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10263  001590  C095  F062         	movff	vfpfcnvrt@llu,utoa@d
 10264  001594  C096  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10265  001598  C097  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10266  00159C  C098  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10267  0015A0  C099  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10268  0015A4  C09A  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10269  0015A8  C09B  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10270  0015AC  C09C  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10271  0015B0  EC91  F00F         	call	_utoa	;wreg free
 10272  0015B4  C060  F07F         	movff	?_utoa,?_vfpfcnvrt
 10273  0015B8  C061  F080         	movff	?_utoa+1,?_vfpfcnvrt+1
 10274  0015BC  EFA9  F00B         	goto	l1544
 10275  0015C0                     l5477:
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1274:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10279  0015C0  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10280  0015C4  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10281  0015C8  CFDE FFF6          	movff	postinc2,tblptrl
 10282  0015CC  CFDD FFF7          	movff	postdec2,tblptrh
 10283  0015D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10284  0015D0  6AF8               	clrf	tblptru,c
 10285  0015D2                     	endif
 10286  0015D2                     	if	0	;tblptru may be non-zero
 10287  0015D2                     	endif
 10288  0015D2  0008               	tblrd		*
 10289  0015D4  50F5               	movf	tablat,w,c
 10290  0015D6  0A78               	xorlw	120
 10291  0015D8  B4D8               	btfsc	status,2,c
 10292  0015DA  EFF1  F00A         	goto	u5411
 10293  0015DE  EFF3  F00A         	goto	u5410
 10294  0015E2                     u5411:
 10295  0015E2  EF06  F00B         	goto	l5481
 10296  0015E6                     u5410:
 10297  0015E6                     
 10298                           ; BSR set to: 0
 10299  0015E6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10300  0015EA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10301  0015EE  CFDE FFF6          	movff	postinc2,tblptrl
 10302  0015F2  CFDD FFF7          	movff	postdec2,tblptrh
 10303  0015F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10304  0015F6  6AF8               	clrf	tblptru,c
 10305  0015F8                     	endif
 10306  0015F8                     	if	0	;tblptru may be non-zero
 10307  0015F8                     	endif
 10308  0015F8  0008               	tblrd		*
 10309  0015FA  50F5               	movf	tablat,w,c
 10310  0015FC  0A58               	xorlw	88
 10311  0015FE  A4D8               	btfss	status,2,c
 10312  001600  EF04  F00B         	goto	u5421
 10313  001604  EF06  F00B         	goto	u5420
 10314  001608                     u5421:
 10315  001608  EF55  F00B         	goto	l5491
 10316  00160C                     u5420:
 10317  00160C                     l5481:
 10318                           
 10319                           ; BSR set to: 0
 10320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1276:            
      +                           c = (*fmt)[0];
 10321  00160C  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10322  001610  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10323  001614  CFDE FFF6          	movff	postinc2,tblptrl
 10324  001618  CFDD FFF7          	movff	postdec2,tblptrh
 10325  00161C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10326  00161C  6AF8               	clrf	tblptru,c
 10327  00161E                     	endif
 10328  00161E                     	if	0	;tblptru may be non-zero
 10329  00161E                     	endif
 10330  00161E  0008               	tblrd		*
 10331  001620  CFF5 F09D          	movff	tablat,vfpfcnvrt@c
 10332  001624                     
 10333                           ; BSR set to: 0
 10334                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1277:            
      +                           ++*fmt;
 10335  001624  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10336  001628  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10337  00162C  2ADE               	incf	postinc2,f,c
 10338  00162E  0E00               	movlw	0
 10339  001630  22DD               	addwfc	postdec2,f,c
 10340  001632                     
 10341                           ; BSR set to: 0
 10342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1278:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10343  001632  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10344  001636  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10345  00163A  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10346  00163E  0E02               	movlw	2
 10347  001640  26DE               	addwf	postinc2,f,c
 10348  001642  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10349  001646  0E00               	movlw	0
 10350  001648  22DD               	addwfc	postdec2,f,c
 10351  00164A  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10352  00164E  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10353  001652  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
 10354  001656  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
 10355  00165A  C087  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10356  00165E  C088  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10357  001662  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10358  001664  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10359  001666  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10360  001668  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10361  00166A  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10362  00166C  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10363  00166E                     
 10364                           ; BSR set to: 0
 10365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1280:            
      +                           return xtoa(fp, llu, c);
 10366  00166E  C07F  F060         	movff	vfpfcnvrt@fp,xtoa@fp
 10367  001672  C080  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10368  001676  C095  F062         	movff	vfpfcnvrt@llu,xtoa@d
 10369  00167A  C096  F063         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10370  00167E  C097  F064         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10371  001682  C098  F065         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10372  001686  C099  F066         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10373  00168A  C09A  F067         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10374  00168E  C09B  F068         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10375  001692  C09C  F069         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10376  001696  C09D  F06A         	movff	vfpfcnvrt@c,xtoa@x
 10377  00169A  EC1C  F00D         	call	_xtoa	;wreg free
 10378  00169E  C060  F07F         	movff	?_xtoa,?_vfpfcnvrt
 10379  0016A2  C061  F080         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10380  0016A6  EFA9  F00B         	goto	l1544
 10381  0016AA                     l5491:
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
 10385  0016AA  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10386  0016AE  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10387  0016B2  CFDE FFF6          	movff	postinc2,tblptrl
 10388  0016B6  CFDD FFF7          	movff	postdec2,tblptrh
 10389  0016BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10390  0016BA  6AF8               	clrf	tblptru,c
 10391  0016BC                     	endif
 10392  0016BC                     	if	0	;tblptru may be non-zero
 10393  0016BC                     	endif
 10394  0016BC  0008               	tblrd		*
 10395  0016BE  50F5               	movf	tablat,w,c
 10396  0016C0  0A25               	xorlw	37
 10397  0016C2  A4D8               	btfss	status,2,c
 10398  0016C4  EF66  F00B         	goto	u5431
 10399  0016C8  EF68  F00B         	goto	u5430
 10400  0016CC                     u5431:
 10401  0016CC  EF80  F00B         	goto	l5501
 10402  0016D0                     u5430:
 10403  0016D0                     
 10404                           ; BSR set to: 0
 10405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
 10406  0016D0  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10407  0016D4  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10408  0016D8  2ADE               	incf	postinc2,f,c
 10409  0016DA  0E00               	movlw	0
 10410  0016DC  22DD               	addwfc	postdec2,f,c
 10411  0016DE                     
 10412                           ; BSR set to: 0
 10413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
 10414  0016DE  0E00               	movlw	0
 10415  0016E0  6E17               	movwf	(fputc@c+1)^0,c
 10416  0016E2  0E25               	movlw	37
 10417  0016E4  6E16               	movwf	fputc@c^0,c
 10418  0016E6  C07F  F018         	movff	vfpfcnvrt@fp,fputc@fp
 10419  0016EA  C080  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10420  0016EE  EC64  F017         	call	_fputc	;wreg free
 10421  0016F2                     l5497:
 10422                           
 10423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
 10424  0016F2  0E00               	movlw	0
 10425  0016F4  0100               	movlb	0	; () banked
 10426  0016F6  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10427  0016F8  0E01               	movlw	1
 10428  0016FA  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
 10429  0016FC  EFA9  F00B         	goto	l1544
 10430  001700                     l5501:
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
 10434  001700  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10435  001704  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10436  001708  2ADE               	incf	postinc2,f,c
 10437  00170A  0E00               	movlw	0
 10438  00170C  22DD               	addwfc	postdec2,f,c
 10439  00170E                     
 10440                           ; BSR set to: 0
 10441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
 10442  00170E  0E00               	movlw	0
 10443  001710  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10444  001712  0E00               	movlw	0
 10445  001714  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
 10446  001716  EFA9  F00B         	goto	l1544
 10447  00171A                     l5507:
 10448                           
 10449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
 10450  00171A  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10451  00171E  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10452  001722  CFDE FFF6          	movff	postinc2,tblptrl
 10453  001726  CFDD FFF7          	movff	postdec2,tblptrh
 10454  00172A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10455  00172A  6AF8               	clrf	tblptru,c
 10456  00172C                     	endif
 10457  00172C                     	if	0	;tblptru may be non-zero
 10458  00172C                     	endif
 10459  00172C  0008               	tblrd		*
 10460  00172E  50F5               	movf	tablat,w,c
 10461  001730  6E16               	movwf	fputc@c^0,c
 10462  001732  6A17               	clrf	(fputc@c+1)^0,c
 10463  001734  C07F  F018         	movff	vfpfcnvrt@fp,fputc@fp
 10464  001738  C080  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10465  00173C  EC64  F017         	call	_fputc	;wreg free
 10466  001740                     
 10467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
 10468  001740  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10469  001744  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10470  001748  2ADE               	incf	postinc2,f,c
 10471  00174A  0E00               	movlw	0
 10472  00174C  22DD               	addwfc	postdec2,f,c
 10473  00174E  EF79  F00B         	goto	l5497
 10474  001752                     l1544:
 10475  001752  0012               	return		;funcret
 10476  001754                     __end_of_vfpfcnvrt:
 10477                           	callstack 0
 10478                           
 10479 ;; *************** function _xtoa *****************
 10480 ;; Defined at:
 10481 ;;		line 623 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 10484 ;;		 -> NULL(0), 
 10485 ;;  d               8    2[BANK0 ] unsigned long long 
 10486 ;;  x               1   10[BANK0 ] unsigned char 
 10487 ;; Auto vars:     Size  Location     Type
 10488 ;;  n               8   19[BANK0 ] unsigned long long 
 10489 ;;  c               2   29[BANK0 ] int 
 10490 ;;  i               2   27[BANK0 ] int 
 10491 ;;  w               2   17[BANK0 ] int 
 10492 ;;  p               2   15[BANK0 ] int 
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  2    0[BANK0 ] int 
 10495 ;; Registers used:
 10496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10502 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10503 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10504 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10505 ;;      Totals:         8      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10506 ;;Total ram usage:       39 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:    9
 10509 ;; This function calls:
 10510 ;;		_isalpha
 10511 ;;		_isupper
 10512 ;;		_pad
 10513 ;;		_toupper
 10514 ;; This function is called by:
 10515 ;;		_vfpfcnvrt
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           	psect	text29
 10520  001A38                     __ptext29:
 10521                           	callstack 0
 10522  001A38                     _xtoa:
 10523                           	callstack 18
 10524  001A38                     
 10525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 623: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 624: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 625:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources
      +                          \c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0)) {
 10526  001A38  BE3C               	btfsc	(_prec+1)^0,7,c
 10527  001A3A  EF21  F00D         	goto	u5051
 10528  001A3E  EF23  F00D         	goto	u5050
 10529  001A42                     u5051:
 10530  001A42  EF24  F00D         	goto	l5289
 10531  001A46                     u5050:
 10532  001A46                     
 10533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 630:         flag
      +                          s &= ~(1 << 1);
 10534  001A46  923D               	bcf	_flags^0,1,c
 10535  001A48                     l5289:
 10536                           
 10537                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 632:     p = (0 <
      +                           prec) ? prec : 1;
 10538  001A48  BE3C               	btfsc	(_prec+1)^0,7,c
 10539  001A4A  EF31  F00D         	goto	u5060
 10540  001A4E  503C               	movf	(_prec+1)^0,w,c
 10541  001A50  E106               	bnz	u5061
 10542  001A52  043B               	decf	_prec^0,w,c
 10543  001A54  B0D8               	btfsc	status,0,c
 10544  001A56  EF2F  F00D         	goto	u5061
 10545  001A5A  EF31  F00D         	goto	u5060
 10546  001A5E                     u5061:
 10547  001A5E  EF38  F00D         	goto	l1492
 10548  001A62                     u5060:
 10549  001A62  0E00               	movlw	0
 10550  001A64  0100               	movlb	0	; () banked
 10551  001A66  6F70               	movwf	(xtoa@p+1)& (0+255),b
 10552  001A68  0E01               	movlw	1
 10553  001A6A  6F6F               	movwf	xtoa@p& (0+255),b
 10554  001A6C  EF3C  F00D         	goto	l1494
 10555  001A70                     l1492:
 10556  001A70  C03B  F06F         	movff	_prec,xtoa@p
 10557  001A74  C03C  F070         	movff	_prec+1,xtoa@p+1
 10558  001A78                     l1494:
 10559                           
 10560                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 633:     w = widt
      +                          h;
 10561  001A78  C039  F071         	movff	_width,xtoa@w
 10562  001A7C  C03A  F072         	movff	_width+1,xtoa@w+1
 10563                           
 10564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 634:     if (flag
      +                          s & (1 << 4)) {
 10565  001A80  A83D               	btfss	_flags^0,4,c
 10566  001A82  EF45  F00D         	goto	u5071
 10567  001A86  EF47  F00D         	goto	u5070
 10568  001A8A                     u5071:
 10569  001A8A  EF4C  F00D         	goto	l5295
 10570  001A8E                     u5070:
 10571  001A8E                     
 10572                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 635:         w -=
      +                           2;
 10573  001A8E  0100               	movlb	0	; () banked
 10574  001A90  0EFE               	movlw	254
 10575  001A92  2771               	addwf	xtoa@w& (0+255),f,b
 10576  001A94  0EFF               	movlw	255
 10577  001A96  2372               	addwfc	(xtoa@w+1)& (0+255),f,b
 10578  001A98                     l5295:
 10579                           
 10580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 639:     n = d;
 10581  001A98  C062  F073         	movff	xtoa@d,xtoa@n
 10582  001A9C  C063  F074         	movff	xtoa@d+1,xtoa@n+1
 10583  001AA0  C064  F075         	movff	xtoa@d+2,xtoa@n+2
 10584  001AA4  C065  F076         	movff	xtoa@d+3,xtoa@n+3
 10585  001AA8  C066  F077         	movff	xtoa@d+4,xtoa@n+4
 10586  001AAC  C067  F078         	movff	xtoa@d+5,xtoa@n+5
 10587  001AB0  C068  F079         	movff	xtoa@d+6,xtoa@n+6
 10588  001AB4  C069  F07A         	movff	xtoa@d+7,xtoa@n+7
 10589  001AB8                     
 10590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 640:     i = size
      +                          of(dbuf) - 1;
 10591  001AB8  0E00               	movlw	0
 10592  001ABA  0100               	movlb	0	; () banked
 10593  001ABC  6F7C               	movwf	(xtoa@i+1)& (0+255),b
 10594  001ABE  0E1F               	movlw	31
 10595  001AC0  6F7B               	movwf	xtoa@i& (0+255),b
 10596  001AC2                     
 10597                           ; BSR set to: 0
 10598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] 
      +                          = '\0';
 10599  001AC2  0E00               	movlw	0
 10600  001AC4  0101               	movlb	1	; () banked
 10601  001AC6  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10602                           
 10603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10604  001AC8  EF1A  F00E         	goto	l5331
 10605  001ACC                     l5301:
 10606                           
 10607                           ; BSR set to: 0
 10608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 643:         --i;
 10609  001ACC  077B               	decf	xtoa@i& (0+255),f,b
 10610  001ACE  A0D8               	btfss	status,0,c
 10611  001AD0  077C               	decf	(xtoa@i+1)& (0+255),f,b
 10612  001AD2                     
 10613                           ; BSR set to: 0
 10614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 644:         c = 
      +                          n & 0x0f;
 10615  001AD2  0E0F               	movlw	15
 10616  001AD4  1573               	andwf	xtoa@n& (0+255),w,b
 10617  001AD6  6F7D               	movwf	xtoa@c& (0+255),b
 10618  001AD8  6B7E               	clrf	(xtoa@c+1)& (0+255),b
 10619  001ADA                     
 10620                           ; BSR set to: 0
 10621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 645:         c = 
      +                          (c < 10) ? '0' + c : 'a' + (c - 10);
 10622  001ADA  BF7E               	btfsc	(xtoa@c+1)& (0+255),7,b
 10623  001ADC  EF79  F00D         	goto	u5081
 10624  001AE0  517E               	movf	(xtoa@c+1)& (0+255),w,b
 10625  001AE2  E109               	bnz	u5080
 10626  001AE4  0E0A               	movlw	10
 10627  001AE6  5D7D               	subwf	xtoa@c& (0+255),w,b
 10628  001AE8  A0D8               	btfss	status,0,c
 10629  001AEA  EF79  F00D         	goto	u5081
 10630  001AEE  EF7B  F00D         	goto	u5080
 10631  001AF2                     u5081:
 10632  001AF2  EF83  F00D         	goto	l5309
 10633  001AF6                     u5080:
 10634  001AF6                     
 10635                           ; BSR set to: 0
 10636  001AF6  0E57               	movlw	87
 10637  001AF8  257D               	addwf	xtoa@c& (0+255),w,b
 10638  001AFA  6F7D               	movwf	xtoa@c& (0+255),b
 10639  001AFC  0E00               	movlw	0
 10640  001AFE  217E               	addwfc	(xtoa@c+1)& (0+255),w,b
 10641  001B00  6F7E               	movwf	(xtoa@c+1)& (0+255),b
 10642  001B02  EF89  F00D         	goto	l1501
 10643  001B06                     l5309:
 10644                           
 10645                           ; BSR set to: 0
 10646  001B06  0E30               	movlw	48
 10647  001B08  257D               	addwf	xtoa@c& (0+255),w,b
 10648  001B0A  6F7D               	movwf	xtoa@c& (0+255),b
 10649  001B0C  0E00               	movlw	0
 10650  001B0E  217E               	addwfc	(xtoa@c+1)& (0+255),w,b
 10651  001B10  6F7E               	movwf	(xtoa@c+1)& (0+255),b
 10652  001B12                     l1501:
 10653                           
 10654                           ; BSR set to: 0
 10655  001B12  0EBF               	movlw	191
 10656  001B14  6E31               	movwf	??_xtoa^0,c
 10657  001B16  0EFF               	movlw	255
 10658  001B18  6E32               	movwf	(??_xtoa+1)^0,c
 10659  001B1A  516A               	movf	xtoa@x& (0+255),w,b
 10660  001B1C  6E33               	movwf	(??_xtoa+2)^0,c
 10661  001B1E  6A34               	clrf	(??_xtoa+3)^0,c
 10662  001B20  5031               	movf	??_xtoa^0,w,c
 10663  001B22  2633               	addwf	(??_xtoa+2)^0,f,c
 10664  001B24  5032               	movf	(??_xtoa+1)^0,w,c
 10665  001B26  2234               	addwfc	(??_xtoa+3)^0,f,c
 10666  001B28  5034               	movf	(??_xtoa+3)^0,w,c
 10667  001B2A  E10A               	bnz	u5090
 10668  001B2C  0E1A               	movlw	26
 10669  001B2E  5C33               	subwf	(??_xtoa+2)^0,w,c
 10670  001B30  A0D8               	btfss	status,0,c
 10671  001B32  EF9D  F00D         	goto	u5091
 10672  001B36  EFA0  F00D         	goto	u5090
 10673  001B3A                     u5091:
 10674  001B3A  0E01               	movlw	1
 10675  001B3C  EFA1  F00D         	goto	u5100
 10676  001B40                     u5090:
 10677  001B40  0E00               	movlw	0
 10678  001B42                     u5100:
 10679  001B42  6F6B               	movwf	_xtoa$1997& (0+255),b
 10680  001B44  6B6C               	clrf	(_xtoa$1997+1)& (0+255),b
 10681  001B46                     
 10682                           ; BSR set to: 0
 10683  001B46  516B               	movf	_xtoa$1997& (0+255),w,b
 10684  001B48  116C               	iorwf	(_xtoa$1997+1)& (0+255),w,b
 10685  001B4A  B4D8               	btfsc	status,2,c
 10686  001B4C  EFAA  F00D         	goto	u5111
 10687  001B50  EFAC  F00D         	goto	u5110
 10688  001B54                     u5111:
 10689  001B54  EFDC  F00D         	goto	l5323
 10690  001B58                     u5110:
 10691  001B58                     
 10692                           ; BSR set to: 0
 10693  001B58  0E9F               	movlw	159
 10694  001B5A  6E31               	movwf	??_xtoa^0,c
 10695  001B5C  0EFF               	movlw	255
 10696  001B5E  6E32               	movwf	(??_xtoa+1)^0,c
 10697  001B60  0E20               	movlw	32
 10698  001B62  117D               	iorwf	xtoa@c& (0+255),w,b
 10699  001B64  6E33               	movwf	(??_xtoa+2)^0,c
 10700  001B66  0E00               	movlw	0
 10701  001B68  117E               	iorwf	(xtoa@c+1)& (0+255),w,b
 10702  001B6A  6E34               	movwf	(??_xtoa+3)^0,c
 10703  001B6C  5031               	movf	??_xtoa^0,w,c
 10704  001B6E  2633               	addwf	(??_xtoa+2)^0,f,c
 10705  001B70  5032               	movf	(??_xtoa+1)^0,w,c
 10706  001B72  2234               	addwfc	(??_xtoa+3)^0,f,c
 10707  001B74  5034               	movf	(??_xtoa+3)^0,w,c
 10708  001B76  E10A               	bnz	u5120
 10709  001B78  0E1A               	movlw	26
 10710  001B7A  5C33               	subwf	(??_xtoa+2)^0,w,c
 10711  001B7C  A0D8               	btfss	status,0,c
 10712  001B7E  EFC3  F00D         	goto	u5121
 10713  001B82  EFC6  F00D         	goto	u5120
 10714  001B86                     u5121:
 10715  001B86  0E01               	movlw	1
 10716  001B88  EFC7  F00D         	goto	u5130
 10717  001B8C                     u5120:
 10718  001B8C  0E00               	movlw	0
 10719  001B8E                     u5130:
 10720  001B8E  6F6D               	movwf	_xtoa$1998& (0+255),b
 10721  001B90  6B6E               	clrf	(_xtoa$1998+1)& (0+255),b
 10722  001B92                     
 10723                           ; BSR set to: 0
 10724  001B92  516D               	movf	_xtoa$1998& (0+255),w,b
 10725  001B94  116E               	iorwf	(_xtoa$1998+1)& (0+255),w,b
 10726  001B96  B4D8               	btfsc	status,2,c
 10727  001B98  EFD0  F00D         	goto	u5141
 10728  001B9C  EFD2  F00D         	goto	u5140
 10729  001BA0                     u5141:
 10730  001BA0  EFDC  F00D         	goto	l5323
 10731  001BA4                     u5140:
 10732  001BA4                     
 10733                           ; BSR set to: 0
 10734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 647:             
      +                          c = toupper(c);
 10735  001BA4  C07D  F01A         	movff	xtoa@c,toupper@c
 10736  001BA8  C07E  F01B         	movff	xtoa@c+1,toupper@c+1
 10737  001BAC  EC97  F018         	call	_toupper	;wreg free
 10738  001BB0  C01A  F07D         	movff	?_toupper,xtoa@c
 10739  001BB4  C01B  F07E         	movff	?_toupper+1,xtoa@c+1
 10740  001BB8                     l5323:
 10741                           
 10742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 649:         dbuf
      +                          [i] = (char)c;
 10743  001BB8  0E80               	movlw	low _dbuf
 10744  001BBA  0100               	movlb	0	; () banked
 10745  001BBC  257B               	addwf	xtoa@i& (0+255),w,b
 10746  001BBE  6ED9               	movwf	fsr2l,c
 10747  001BC0  0E01               	movlw	high _dbuf
 10748  001BC2  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10749  001BC4  6EDA               	movwf	fsr2h,c
 10750  001BC6  C07D  FFDF         	movff	xtoa@c,indf2
 10751  001BCA                     
 10752                           ; BSR set to: 0
 10753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 650:         --p;
 10754  001BCA  076F               	decf	xtoa@p& (0+255),f,b
 10755  001BCC  A0D8               	btfss	status,0,c
 10756  001BCE  0770               	decf	(xtoa@p+1)& (0+255),f,b
 10757  001BD0                     
 10758                           ; BSR set to: 0
 10759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 651:         --w;
 10760  001BD0  0771               	decf	xtoa@w& (0+255),f,b
 10761  001BD2  A0D8               	btfss	status,0,c
 10762  001BD4  0772               	decf	(xtoa@w+1)& (0+255),f,b
 10763  001BD6                     
 10764                           ; BSR set to: 0
 10765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 652:         n = 
      +                          n >> 4;
 10766  001BD6  C073  F031         	movff	xtoa@n,??_xtoa
 10767  001BDA  C074  F032         	movff	xtoa@n+1,??_xtoa+1
 10768  001BDE  C075  F033         	movff	xtoa@n+2,??_xtoa+2
 10769  001BE2  C076  F034         	movff	xtoa@n+3,??_xtoa+3
 10770  001BE6  C077  F035         	movff	xtoa@n+4,??_xtoa+4
 10771  001BEA  C078  F036         	movff	xtoa@n+5,??_xtoa+5
 10772  001BEE  C079  F037         	movff	xtoa@n+6,??_xtoa+6
 10773  001BF2  C07A  F038         	movff	xtoa@n+7,??_xtoa+7
 10774  001BF6  0E05               	movlw	5
 10775  001BF8  EF07  F00E         	goto	u5150
 10776  001BFC                     u5155:
 10777  001BFC  90D8               	bcf	status,0,c
 10778  001BFE  3238               	rrcf	(??_xtoa+7)^0,f,c
 10779  001C00  3237               	rrcf	(??_xtoa+6)^0,f,c
 10780  001C02  3236               	rrcf	(??_xtoa+5)^0,f,c
 10781  001C04  3235               	rrcf	(??_xtoa+4)^0,f,c
 10782  001C06  3234               	rrcf	(??_xtoa+3)^0,f,c
 10783  001C08  3233               	rrcf	(??_xtoa+2)^0,f,c
 10784  001C0A  3232               	rrcf	(??_xtoa+1)^0,f,c
 10785  001C0C  3231               	rrcf	??_xtoa^0,f,c
 10786  001C0E                     u5150:
 10787  001C0E  2EE8               	decfsz	wreg,f,c
 10788  001C10  EFFE  F00D         	goto	u5155
 10789  001C14  C031  F073         	movff	??_xtoa,xtoa@n
 10790  001C18  C032  F074         	movff	??_xtoa+1,xtoa@n+1
 10791  001C1C  C033  F075         	movff	??_xtoa+2,xtoa@n+2
 10792  001C20  C034  F076         	movff	??_xtoa+3,xtoa@n+3
 10793  001C24  C035  F077         	movff	??_xtoa+4,xtoa@n+4
 10794  001C28  C036  F078         	movff	??_xtoa+5,xtoa@n+5
 10795  001C2C  C037  F079         	movff	??_xtoa+6,xtoa@n+6
 10796  001C30  C038  F07A         	movff	??_xtoa+7,xtoa@n+7
 10797  001C34                     l5331:
 10798                           
 10799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 642:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10800  001C34  0100               	movlb	0	; () banked
 10801  001C36  BF7C               	btfsc	(xtoa@i+1)& (0+255),7,b
 10802  001C38  EF27  F00E         	goto	u5161
 10803  001C3C  517C               	movf	(xtoa@i+1)& (0+255),w,b
 10804  001C3E  E109               	bnz	u5160
 10805  001C40  0E02               	movlw	2
 10806  001C42  5D7B               	subwf	xtoa@i& (0+255),w,b
 10807  001C44  A0D8               	btfss	status,0,c
 10808  001C46  EF27  F00E         	goto	u5161
 10809  001C4A  EF29  F00E         	goto	u5160
 10810  001C4E                     u5161:
 10811  001C4E  EF59  F00E         	goto	l1515
 10812  001C52                     u5160:
 10813  001C52                     
 10814                           ; BSR set to: 0
 10815  001C52  5173               	movf	xtoa@n& (0+255),w,b
 10816  001C54  1174               	iorwf	(xtoa@n+1)& (0+255),w,b
 10817  001C56  1175               	iorwf	(xtoa@n+2)& (0+255),w,b
 10818  001C58  1176               	iorwf	(xtoa@n+3)& (0+255),w,b
 10819  001C5A  1177               	iorwf	(xtoa@n+4)& (0+255),w,b
 10820  001C5C  1178               	iorwf	(xtoa@n+5)& (0+255),w,b
 10821  001C5E  1179               	iorwf	(xtoa@n+6)& (0+255),w,b
 10822  001C60  117A               	iorwf	(xtoa@n+7)& (0+255),w,b
 10823  001C62  A4D8               	btfss	status,2,c
 10824  001C64  EF36  F00E         	goto	u5171
 10825  001C68  EF38  F00E         	goto	u5170
 10826  001C6C                     u5171:
 10827  001C6C  EF66  F00D         	goto	l5301
 10828  001C70                     u5170:
 10829  001C70                     
 10830                           ; BSR set to: 0
 10831  001C70  BF70               	btfsc	(xtoa@p+1)& (0+255),7,b
 10832  001C72  EF45  F00E         	goto	u5180
 10833  001C76  5170               	movf	(xtoa@p+1)& (0+255),w,b
 10834  001C78  E106               	bnz	u5181
 10835  001C7A  056F               	decf	xtoa@p& (0+255),w,b
 10836  001C7C  B0D8               	btfsc	status,0,c
 10837  001C7E  EF43  F00E         	goto	u5181
 10838  001C82  EF45  F00E         	goto	u5180
 10839  001C86                     u5181:
 10840  001C86  EF66  F00D         	goto	l5301
 10841  001C8A                     u5180:
 10842  001C8A                     
 10843                           ; BSR set to: 0
 10844  001C8A  BF72               	btfsc	(xtoa@w+1)& (0+255),7,b
 10845  001C8C  EF50  F00E         	goto	u5191
 10846  001C90  5172               	movf	(xtoa@w+1)& (0+255),w,b
 10847  001C92  E108               	bnz	u5190
 10848  001C94  0571               	decf	xtoa@w& (0+255),w,b
 10849  001C96  A0D8               	btfss	status,0,c
 10850  001C98  EF50  F00E         	goto	u5191
 10851  001C9C  EF52  F00E         	goto	u5190
 10852  001CA0                     u5191:
 10853  001CA0  EF59  F00E         	goto	l1515
 10854  001CA4                     u5190:
 10855  001CA4                     
 10856                           ; BSR set to: 0
 10857  001CA4  B23D               	btfsc	_flags^0,1,c
 10858  001CA6  EF57  F00E         	goto	u5201
 10859  001CAA  EF59  F00E         	goto	u5200
 10860  001CAE                     u5201:
 10861  001CAE  EF66  F00D         	goto	l5301
 10862  001CB2                     u5200:
 10863  001CB2                     l1515:
 10864                           
 10865                           ; BSR set to: 0
 10866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 10867  001CB2  A83D               	btfss	_flags^0,4,c
 10868  001CB4  EF5E  F00E         	goto	u5211
 10869  001CB8  EF60  F00E         	goto	u5210
 10870  001CBC                     u5211:
 10871  001CBC  EF76  F00E         	goto	l5347
 10872  001CC0                     u5210:
 10873  001CC0                     
 10874                           ; BSR set to: 0
 10875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 657:         --i;
 10876  001CC0  077B               	decf	xtoa@i& (0+255),f,b
 10877  001CC2  A0D8               	btfss	status,0,c
 10878  001CC4  077C               	decf	(xtoa@i+1)& (0+255),f,b
 10879  001CC6                     
 10880                           ; BSR set to: 0
 10881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 658:         dbuf
      +                          [i] = x;
 10882  001CC6  0E80               	movlw	low _dbuf
 10883  001CC8  257B               	addwf	xtoa@i& (0+255),w,b
 10884  001CCA  6ED9               	movwf	fsr2l,c
 10885  001CCC  0E01               	movlw	high _dbuf
 10886  001CCE  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10887  001CD0  6EDA               	movwf	fsr2h,c
 10888  001CD2  C06A  FFDF         	movff	xtoa@x,indf2
 10889  001CD6                     
 10890                           ; BSR set to: 0
 10891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 659:         --i;
 10892  001CD6  077B               	decf	xtoa@i& (0+255),f,b
 10893  001CD8  A0D8               	btfss	status,0,c
 10894  001CDA  077C               	decf	(xtoa@i+1)& (0+255),f,b
 10895                           
 10896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 660:         dbuf
      +                          [i] = '0';
 10897  001CDC  0E80               	movlw	low _dbuf
 10898  001CDE  257B               	addwf	xtoa@i& (0+255),w,b
 10899  001CE0  6ED9               	movwf	fsr2l,c
 10900  001CE2  0E01               	movlw	high _dbuf
 10901  001CE4  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10902  001CE6  6EDA               	movwf	fsr2h,c
 10903  001CE8  0E30               	movlw	48
 10904  001CEA  6EDF               	movwf	indf2,c
 10905  001CEC                     l5347:
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 664:     return p
      +                          ad(fp, &dbuf[i], w);
 10909  001CEC  C060  F026         	movff	xtoa@fp,pad@fp
 10910  001CF0  C061  F027         	movff	xtoa@fp+1,pad@fp+1
 10911  001CF4  0E80               	movlw	low _dbuf
 10912  001CF6  257B               	addwf	xtoa@i& (0+255),w,b
 10913  001CF8  6E28               	movwf	pad@buf^0,c
 10914  001CFA  0E01               	movlw	high _dbuf
 10915  001CFC  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10916  001CFE  6E29               	movwf	(pad@buf+1)^0,c
 10917  001D00  C071  F02A         	movff	xtoa@w,pad@p
 10918  001D04  C072  F02B         	movff	xtoa@w+1,pad@p+1
 10919  001D08  EC60  F016         	call	_pad	;wreg free
 10920  001D0C  C026  F060         	movff	?_pad,?_xtoa
 10921  001D10  C027  F061         	movff	?_pad+1,?_xtoa+1
 10922  001D14  0012               	return		;funcret
 10923  001D16                     __end_of_xtoa:
 10924                           	callstack 0
 10925                           
 10926 ;; *************** function _toupper *****************
 10927 ;; Defined at:
 10928 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\toupper.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  c               2   25[COMRAM] int 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  2   25[COMRAM] int 
 10935 ;; Registers used:
 10936 ;;		wreg, status,2, status,0
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10945 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10946 ;;Total ram usage:        8 bytes
 10947 ;; Hardware stack levels used:    1
 10948 ;; Hardware stack levels required when called:    5
 10949 ;; This function calls:
 10950 ;;		_islower
 10951 ;; This function is called by:
 10952 ;;		_xtoa
 10953 ;; This function uses a non-reentrant model
 10954 ;;
 10955                           
 10956                           	psect	text30
 10957  00312E                     __ptext30:
 10958                           	callstack 0
 10959  00312E                     _toupper:
 10960                           	callstack 21
 10961  00312E  0E9F               	movlw	159
 10962  003130  6E1C               	movwf	??_toupper^0,c
 10963  003132  0EFF               	movlw	255
 10964  003134  6E1D               	movwf	(??_toupper+1)^0,c
 10965  003136  C01A  F01E         	movff	toupper@c,??_toupper+2
 10966  00313A  C01B  F01F         	movff	toupper@c+1,??_toupper+3
 10967  00313E  501C               	movf	??_toupper^0,w,c
 10968  003140  261E               	addwf	(??_toupper+2)^0,f,c
 10969  003142  501D               	movf	(??_toupper+1)^0,w,c
 10970  003144  221F               	addwfc	(??_toupper+3)^0,f,c
 10971  003146  501F               	movf	(??_toupper+3)^0,w,c
 10972  003148  E10A               	bnz	u4750
 10973  00314A  0E1A               	movlw	26
 10974  00314C  5C1E               	subwf	(??_toupper+2)^0,w,c
 10975  00314E  A0D8               	btfss	status,0,c
 10976  003150  EFAC  F018         	goto	u4751
 10977  003154  EFAF  F018         	goto	u4750
 10978  003158                     u4751:
 10979  003158  0E01               	movlw	1
 10980  00315A  EFB0  F018         	goto	u4760
 10981  00315E                     u4750:
 10982  00315E  0E00               	movlw	0
 10983  003160                     u4760:
 10984  003160  6E20               	movwf	_toupper$2111^0,c
 10985  003162  6A21               	clrf	(_toupper$2111+1)^0,c
 10986  003164  5020               	movf	_toupper$2111^0,w,c
 10987  003166  1021               	iorwf	(_toupper$2111+1)^0,w,c
 10988  003168  B4D8               	btfsc	status,2,c
 10989  00316A  EFB9  F018         	goto	u4771
 10990  00316E  EFBB  F018         	goto	u4770
 10991  003172                     u4771:
 10992  003172  EFC1  F018         	goto	l1653
 10993  003176                     u4770:
 10994  003176  0E5F               	movlw	95
 10995  003178  141A               	andwf	toupper@c^0,w,c
 10996  00317A  6E1A               	movwf	?_toupper^0,c
 10997  00317C  6A1B               	clrf	(?_toupper+1)^0,c
 10998  00317E  EFC5  F018         	goto	l1658
 10999  003182                     l1653:
 11000  003182  C01A  F01A         	movff	toupper@c,?_toupper
 11001  003186  C01B  F01B         	movff	toupper@c+1,?_toupper+1
 11002  00318A                     l1658:
 11003  00318A  0012               	return		;funcret
 11004  00318C                     __end_of_toupper:
 11005                           	callstack 0
 11006                           
 11007 ;; *************** function _islower *****************
 11008 ;; Defined at:
 11009 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\islower.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  c               2   19[COMRAM] int 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;		None
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  2   19[COMRAM] int 
 11016 ;; Registers used:
 11017 ;;		wreg, status,2, status,0
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11027 ;;Total ram usage:        6 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; Hardware stack levels required when called:    4
 11030 ;; This function calls:
 11031 ;;		Nothing
 11032 ;; This function is called by:
 11033 ;;		_toupper
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text31
 11038  0033B2                     __ptext31:
 11039                           	callstack 0
 11040  0033B2                     _islower:
 11041                           	callstack 21
 11042  0033B2  0E9F               	movlw	159
 11043  0033B4  6E16               	movwf	??_islower^0,c
 11044  0033B6  0EFF               	movlw	255
 11045  0033B8  6E17               	movwf	(??_islower+1)^0,c
 11046  0033BA  C014  F018         	movff	islower@c,??_islower+2
 11047  0033BE  C015  F019         	movff	islower@c+1,??_islower+3
 11048  0033C2  5016               	movf	??_islower^0,w,c
 11049  0033C4  2618               	addwf	(??_islower+2)^0,f,c
 11050  0033C6  5017               	movf	(??_islower+1)^0,w,c
 11051  0033C8  2219               	addwfc	(??_islower+3)^0,f,c
 11052  0033CA  5019               	movf	(??_islower+3)^0,w,c
 11053  0033CC  E10A               	bnz	u4440
 11054  0033CE  0E1A               	movlw	26
 11055  0033D0  5C18               	subwf	(??_islower+2)^0,w,c
 11056  0033D2  A0D8               	btfss	status,0,c
 11057  0033D4  EFEE  F019         	goto	u4441
 11058  0033D8  EFF1  F019         	goto	u4440
 11059  0033DC                     u4441:
 11060  0033DC  0E01               	movlw	1
 11061  0033DE  EFF2  F019         	goto	u4450
 11062  0033E2                     u4440:
 11063  0033E2  0E00               	movlw	0
 11064  0033E4                     u4450:
 11065  0033E4  6E14               	movwf	?_islower^0,c
 11066  0033E6  6A15               	clrf	(?_islower+1)^0,c
 11067  0033E8  0012               	return		;funcret
 11068  0033EA                     __end_of_islower:
 11069                           	callstack 0
 11070                           
 11071 ;; *************** function _isupper *****************
 11072 ;; Defined at:
 11073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
 11074 ;; Parameters:    Size  Location     Type
 11075 ;;  c               2   19[COMRAM] int 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;		None
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  2   19[COMRAM] int 
 11080 ;; Registers used:
 11081 ;;		wreg, status,2, status,0
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11089 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11091 ;;Total ram usage:        6 bytes
 11092 ;; Hardware stack levels used:    1
 11093 ;; Hardware stack levels required when called:    4
 11094 ;; This function calls:
 11095 ;;		Nothing
 11096 ;; This function is called by:
 11097 ;;		_xtoa
 11098 ;; This function uses a non-reentrant model
 11099 ;;
 11100                           
 11101                           	psect	text32
 11102  0033EA                     __ptext32:
 11103                           	callstack 0
 11104  0033EA                     _isupper:
 11105                           	callstack 22
 11106  0033EA  0EBF               	movlw	191
 11107  0033EC  6E16               	movwf	??_isupper^0,c
 11108  0033EE  0EFF               	movlw	255
 11109  0033F0  6E17               	movwf	(??_isupper+1)^0,c
 11110  0033F2  C014  F018         	movff	isupper@c,??_isupper+2
 11111  0033F6  C015  F019         	movff	isupper@c+1,??_isupper+3
 11112  0033FA  5016               	movf	??_isupper^0,w,c
 11113  0033FC  2618               	addwf	(??_isupper+2)^0,f,c
 11114  0033FE  5017               	movf	(??_isupper+1)^0,w,c
 11115  003400  2219               	addwfc	(??_isupper+3)^0,f,c
 11116  003402  5019               	movf	(??_isupper+3)^0,w,c
 11117  003404  E10A               	bnz	u4710
 11118  003406  0E1A               	movlw	26
 11119  003408  5C18               	subwf	(??_isupper+2)^0,w,c
 11120  00340A  A0D8               	btfss	status,0,c
 11121  00340C  EF0A  F01A         	goto	u4711
 11122  003410  EF0D  F01A         	goto	u4710
 11123  003414                     u4711:
 11124  003414  0E01               	movlw	1
 11125  003416  EF0E  F01A         	goto	u4720
 11126  00341A                     u4710:
 11127  00341A  0E00               	movlw	0
 11128  00341C                     u4720:
 11129  00341C  6E14               	movwf	?_isupper^0,c
 11130  00341E  6A15               	clrf	(?_isupper+1)^0,c
 11131  003420  0012               	return		;funcret
 11132  003422                     __end_of_isupper:
 11133                           	callstack 0
 11134                           
 11135 ;; *************** function _isalpha *****************
 11136 ;; Defined at:
 11137 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isalpha.c"
 11138 ;; Parameters:    Size  Location     Type
 11139 ;;  c               2   19[COMRAM] int 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;		None
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  2   19[COMRAM] int 
 11144 ;; Registers used:
 11145 ;;		wreg, status,2, status,0
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;Total ram usage:        6 bytes
 11156 ;; Hardware stack levels used:    1
 11157 ;; Hardware stack levels required when called:    4
 11158 ;; This function calls:
 11159 ;;		Nothing
 11160 ;; This function is called by:
 11161 ;;		_xtoa
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text33
 11166  00333E                     __ptext33:
 11167                           	callstack 0
 11168  00333E                     _isalpha:
 11169                           	callstack 22
 11170  00333E  0E9F               	movlw	159
 11171  003340  6E16               	movwf	??_isalpha^0,c
 11172  003342  0EFF               	movlw	255
 11173  003344  6E17               	movwf	(??_isalpha+1)^0,c
 11174  003346  0E20               	movlw	32
 11175  003348  1014               	iorwf	isalpha@c^0,w,c
 11176  00334A  6E18               	movwf	(??_isalpha+2)^0,c
 11177  00334C  0E00               	movlw	0
 11178  00334E  1015               	iorwf	(isalpha@c+1)^0,w,c
 11179  003350  6E19               	movwf	(??_isalpha+3)^0,c
 11180  003352  5016               	movf	??_isalpha^0,w,c
 11181  003354  2618               	addwf	(??_isalpha+2)^0,f,c
 11182  003356  5017               	movf	(??_isalpha+1)^0,w,c
 11183  003358  2219               	addwfc	(??_isalpha+3)^0,f,c
 11184  00335A  5019               	movf	(??_isalpha+3)^0,w,c
 11185  00335C  E10A               	bnz	u4730
 11186  00335E  0E1A               	movlw	26
 11187  003360  5C18               	subwf	(??_isalpha+2)^0,w,c
 11188  003362  A0D8               	btfss	status,0,c
 11189  003364  EFB6  F019         	goto	u4731
 11190  003368  EFB9  F019         	goto	u4730
 11191  00336C                     u4731:
 11192  00336C  0E01               	movlw	1
 11193  00336E  EFBA  F019         	goto	u4740
 11194  003372                     u4730:
 11195  003372  0E00               	movlw	0
 11196  003374                     u4740:
 11197  003374  6E14               	movwf	?_isalpha^0,c
 11198  003376  6A15               	clrf	(?_isalpha+1)^0,c
 11199  003378  0012               	return		;funcret
 11200  00337A                     __end_of_isalpha:
 11201                           	callstack 0
 11202                           
 11203 ;; *************** function _utoa *****************
 11204 ;; Defined at:
 11205 ;;		line 593 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11208 ;;		 -> NULL(0), 
 11209 ;;  d               8    2[BANK0 ] unsigned long long 
 11210 ;; Auto vars:     Size  Location     Type
 11211 ;;  n               8   14[BANK0 ] unsigned long long 
 11212 ;;  i               2   22[BANK0 ] int 
 11213 ;;  w               2   12[BANK0 ] int 
 11214 ;;  p               2   10[BANK0 ] int 
 11215 ;; Return value:  Size  Location     Type
 11216 ;;                  2    0[BANK0 ] int 
 11217 ;; Registers used:
 11218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11219 ;; Tracked objects:
 11220 ;;		On entry : 0/0
 11221 ;;		On exit  : 0/0
 11222 ;;		Unchanged: 0/0
 11223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11224 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11225 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11226 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11228 ;;Total ram usage:       32 bytes
 11229 ;; Hardware stack levels used:    1
 11230 ;; Hardware stack levels required when called:    9
 11231 ;; This function calls:
 11232 ;;		___lodiv
 11233 ;;		___lomod
 11234 ;;		_pad
 11235 ;; This function is called by:
 11236 ;;		_vfpfcnvrt
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text34
 11241  001F22                     __ptext34:
 11242                           	callstack 0
 11243  001F22                     _utoa:
 11244                           	callstack 18
 11245  001F22                     
 11246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 593: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99
      +                          \common\doprnt.c: 594: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\dop
      +                          rnt.c: 595:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common
      +                          \doprnt.c: 596:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sourc
      +                          es\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
 11247  001F22  BE3C               	btfsc	(_prec+1)^0,7,c
 11248  001F24  EF96  F00F         	goto	u4981
 11249  001F28  EF98  F00F         	goto	u4980
 11250  001F2C                     u4981:
 11251  001F2C  EF99  F00F         	goto	l5253
 11252  001F30                     u4980:
 11253  001F30                     
 11254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 600:         flag
      +                          s &= ~(1 << 1);
 11255  001F30  923D               	bcf	_flags^0,1,c
 11256  001F32                     l5253:
 11257                           
 11258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 602:     p = (0 <
      +                           prec) ? prec : 1;
 11259  001F32  BE3C               	btfsc	(_prec+1)^0,7,c
 11260  001F34  EFA6  F00F         	goto	u4990
 11261  001F38  503C               	movf	(_prec+1)^0,w,c
 11262  001F3A  E106               	bnz	u4991
 11263  001F3C  043B               	decf	_prec^0,w,c
 11264  001F3E  B0D8               	btfsc	status,0,c
 11265  001F40  EFA4  F00F         	goto	u4991
 11266  001F44  EFA6  F00F         	goto	u4990
 11267  001F48                     u4991:
 11268  001F48  EFAD  F00F         	goto	l1477
 11269  001F4C                     u4990:
 11270  001F4C  0E00               	movlw	0
 11271  001F4E  0100               	movlb	0	; () banked
 11272  001F50  6F6B               	movwf	(utoa@p+1)& (0+255),b
 11273  001F52  0E01               	movlw	1
 11274  001F54  6F6A               	movwf	utoa@p& (0+255),b
 11275  001F56  EFB1  F00F         	goto	l1479
 11276  001F5A                     l1477:
 11277  001F5A  C03B  F06A         	movff	_prec,utoa@p
 11278  001F5E  C03C  F06B         	movff	_prec+1,utoa@p+1
 11279  001F62                     l1479:
 11280                           
 11281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 603:     w = widt
      +                          h;
 11282  001F62  C039  F06C         	movff	_width,utoa@w
 11283  001F66  C03A  F06D         	movff	_width+1,utoa@w+1
 11284                           
 11285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 606:     n = d;
 11286  001F6A  C062  F06E         	movff	utoa@d,utoa@n
 11287  001F6E  C063  F06F         	movff	utoa@d+1,utoa@n+1
 11288  001F72  C064  F070         	movff	utoa@d+2,utoa@n+2
 11289  001F76  C065  F071         	movff	utoa@d+3,utoa@n+3
 11290  001F7A  C066  F072         	movff	utoa@d+4,utoa@n+4
 11291  001F7E  C067  F073         	movff	utoa@d+5,utoa@n+5
 11292  001F82  C068  F074         	movff	utoa@d+6,utoa@n+6
 11293  001F86  C069  F075         	movff	utoa@d+7,utoa@n+7
 11294  001F8A                     
 11295                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 607:     i = size
      +                          of(dbuf) - 1;
 11296  001F8A  0E00               	movlw	0
 11297  001F8C  0100               	movlb	0	; () banked
 11298  001F8E  6F77               	movwf	(utoa@i+1)& (0+255),b
 11299  001F90  0E1F               	movlw	31
 11300  001F92  6F76               	movwf	utoa@i& (0+255),b
 11301  001F94                     
 11302                           ; BSR set to: 0
 11303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 608:     dbuf[i] 
      +                          = '\0';
 11304  001F94  0E00               	movlw	0
 11305  001F96  0101               	movlb	1	; () banked
 11306  001F98  6F9F               	movwf	(_dbuf+31)& (0+255),b
 11307                           
 11308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11309  001F9A  EF46  F010         	goto	l5271
 11310  001F9E                     l5261:
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 610:         --i;
 11314  001F9E  0776               	decf	utoa@i& (0+255),f,b
 11315  001FA0  A0D8               	btfss	status,0,c
 11316  001FA2  0777               	decf	(utoa@i+1)& (0+255),f,b
 11317  001FA4                     
 11318                           ; BSR set to: 0
 11319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 611:         dbuf
      +                          [i] = '0' + (n % 10);
 11320  001FA4  0E80               	movlw	low _dbuf
 11321  001FA6  2576               	addwf	utoa@i& (0+255),w,b
 11322  001FA8  6ED9               	movwf	fsr2l,c
 11323  001FAA  0E01               	movlw	high _dbuf
 11324  001FAC  2177               	addwfc	(utoa@i+1)& (0+255),w,b
 11325  001FAE  6EDA               	movwf	fsr2h,c
 11326  001FB0  C06E  F014         	movff	utoa@n,___lomod@dividend
 11327  001FB4  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
 11328  001FB8  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
 11329  001FBC  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
 11330  001FC0  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
 11331  001FC4  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
 11332  001FC8  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
 11333  001FCC  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
 11334  001FD0  0E0A               	movlw	10
 11335  001FD2  6E1C               	movwf	___lomod@divisor^0,c
 11336  001FD4  0E00               	movlw	0
 11337  001FD6  6E1D               	movwf	(___lomod@divisor+1)^0,c
 11338  001FD8  0E00               	movlw	0
 11339  001FDA  6E1E               	movwf	(___lomod@divisor+2)^0,c
 11340  001FDC  0E00               	movlw	0
 11341  001FDE  6E1F               	movwf	(___lomod@divisor+3)^0,c
 11342  001FE0  0E00               	movlw	0
 11343  001FE2  6E20               	movwf	(___lomod@divisor+4)^0,c
 11344  001FE4  0E00               	movlw	0
 11345  001FE6  6E21               	movwf	(___lomod@divisor+5)^0,c
 11346  001FE8  0E00               	movlw	0
 11347  001FEA  6E22               	movwf	(___lomod@divisor+6)^0,c
 11348  001FEC  0E00               	movlw	0
 11349  001FEE  6E23               	movwf	(___lomod@divisor+7)^0,c
 11350  001FF0  ECF8  F015         	call	___lomod	;wreg free
 11351  001FF4  C014  F031         	movff	?___lomod,??_utoa
 11352  001FF8  C015  F032         	movff	?___lomod+1,??_utoa+1
 11353  001FFC  C016  F033         	movff	?___lomod+2,??_utoa+2
 11354  002000  C017  F034         	movff	?___lomod+3,??_utoa+3
 11355  002004  C018  F035         	movff	?___lomod+4,??_utoa+4
 11356  002008  C019  F036         	movff	?___lomod+5,??_utoa+5
 11357  00200C  C01A  F037         	movff	?___lomod+6,??_utoa+6
 11358  002010  C01B  F038         	movff	?___lomod+7,??_utoa+7
 11359  002014  5031               	movf	??_utoa^0,w,c
 11360  002016  0F30               	addlw	48
 11361  002018  6EDF               	movwf	indf2,c
 11362  00201A                     
 11363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 612:         --p;
 11364  00201A  0100               	movlb	0	; () banked
 11365  00201C  076A               	decf	utoa@p& (0+255),f,b
 11366  00201E  A0D8               	btfss	status,0,c
 11367  002020  076B               	decf	(utoa@p+1)& (0+255),f,b
 11368  002022                     
 11369                           ; BSR set to: 0
 11370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 613:         --w;
 11371  002022  076C               	decf	utoa@w& (0+255),f,b
 11372  002024  A0D8               	btfss	status,0,c
 11373  002026  076D               	decf	(utoa@w+1)& (0+255),f,b
 11374  002028                     
 11375                           ; BSR set to: 0
 11376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 614:         n = 
      +                          n / 10;
 11377  002028  C06E  F014         	movff	utoa@n,___lodiv@dividend
 11378  00202C  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
 11379  002030  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
 11380  002034  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
 11381  002038  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
 11382  00203C  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
 11383  002040  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
 11384  002044  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
 11385  002048  0E0A               	movlw	10
 11386  00204A  6E1C               	movwf	___lodiv@divisor^0,c
 11387  00204C  0E00               	movlw	0
 11388  00204E  6E1D               	movwf	(___lodiv@divisor+1)^0,c
 11389  002050  0E00               	movlw	0
 11390  002052  6E1E               	movwf	(___lodiv@divisor+2)^0,c
 11391  002054  0E00               	movlw	0
 11392  002056  6E1F               	movwf	(___lodiv@divisor+3)^0,c
 11393  002058  0E00               	movlw	0
 11394  00205A  6E20               	movwf	(___lodiv@divisor+4)^0,c
 11395  00205C  0E00               	movlw	0
 11396  00205E  6E21               	movwf	(___lodiv@divisor+5)^0,c
 11397  002060  0E00               	movlw	0
 11398  002062  6E22               	movwf	(___lodiv@divisor+6)^0,c
 11399  002064  0E00               	movlw	0
 11400  002066  6E23               	movwf	(___lodiv@divisor+7)^0,c
 11401  002068  EC80  F015         	call	___lodiv	;wreg free
 11402  00206C  C014  F06E         	movff	?___lodiv,utoa@n
 11403  002070  C015  F06F         	movff	?___lodiv+1,utoa@n+1
 11404  002074  C016  F070         	movff	?___lodiv+2,utoa@n+2
 11405  002078  C017  F071         	movff	?___lodiv+3,utoa@n+3
 11406  00207C  C018  F072         	movff	?___lodiv+4,utoa@n+4
 11407  002080  C019  F073         	movff	?___lodiv+5,utoa@n+5
 11408  002084  C01A  F074         	movff	?___lodiv+6,utoa@n+6
 11409  002088  C01B  F075         	movff	?___lodiv+7,utoa@n+7
 11410  00208C                     l5271:
 11411                           
 11412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 609:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11413  00208C  0100               	movlb	0	; () banked
 11414  00208E  5176               	movf	utoa@i& (0+255),w,b
 11415  002090  1177               	iorwf	(utoa@i+1)& (0+255),w,b
 11416  002092  B4D8               	btfsc	status,2,c
 11417  002094  EF4E  F010         	goto	u5001
 11418  002098  EF50  F010         	goto	u5000
 11419  00209C                     u5001:
 11420  00209C  EF80  F010         	goto	l5281
 11421  0020A0                     u5000:
 11422  0020A0                     
 11423                           ; BSR set to: 0
 11424  0020A0  516E               	movf	utoa@n& (0+255),w,b
 11425  0020A2  116F               	iorwf	(utoa@n+1)& (0+255),w,b
 11426  0020A4  1170               	iorwf	(utoa@n+2)& (0+255),w,b
 11427  0020A6  1171               	iorwf	(utoa@n+3)& (0+255),w,b
 11428  0020A8  1172               	iorwf	(utoa@n+4)& (0+255),w,b
 11429  0020AA  1173               	iorwf	(utoa@n+5)& (0+255),w,b
 11430  0020AC  1174               	iorwf	(utoa@n+6)& (0+255),w,b
 11431  0020AE  1175               	iorwf	(utoa@n+7)& (0+255),w,b
 11432  0020B0  A4D8               	btfss	status,2,c
 11433  0020B2  EF5D  F010         	goto	u5011
 11434  0020B6  EF5F  F010         	goto	u5010
 11435  0020BA                     u5011:
 11436  0020BA  EFCF  F00F         	goto	l5261
 11437  0020BE                     u5010:
 11438  0020BE                     
 11439                           ; BSR set to: 0
 11440  0020BE  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
 11441  0020C0  EF6C  F010         	goto	u5020
 11442  0020C4  516B               	movf	(utoa@p+1)& (0+255),w,b
 11443  0020C6  E106               	bnz	u5021
 11444  0020C8  056A               	decf	utoa@p& (0+255),w,b
 11445  0020CA  B0D8               	btfsc	status,0,c
 11446  0020CC  EF6A  F010         	goto	u5021
 11447  0020D0  EF6C  F010         	goto	u5020
 11448  0020D4                     u5021:
 11449  0020D4  EFCF  F00F         	goto	l5261
 11450  0020D8                     u5020:
 11451  0020D8                     
 11452                           ; BSR set to: 0
 11453  0020D8  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
 11454  0020DA  EF77  F010         	goto	u5031
 11455  0020DE  516D               	movf	(utoa@w+1)& (0+255),w,b
 11456  0020E0  E108               	bnz	u5030
 11457  0020E2  056C               	decf	utoa@w& (0+255),w,b
 11458  0020E4  A0D8               	btfss	status,0,c
 11459  0020E6  EF77  F010         	goto	u5031
 11460  0020EA  EF79  F010         	goto	u5030
 11461  0020EE                     u5031:
 11462  0020EE  EF80  F010         	goto	l5281
 11463  0020F2                     u5030:
 11464  0020F2                     
 11465                           ; BSR set to: 0
 11466  0020F2  B23D               	btfsc	_flags^0,1,c
 11467  0020F4  EF7E  F010         	goto	u5041
 11468  0020F8  EF80  F010         	goto	u5040
 11469  0020FC                     u5041:
 11470  0020FC  EFCF  F00F         	goto	l5261
 11471  002100                     u5040:
 11472  002100                     l5281:
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 618:     return p
      +                          ad(fp, &dbuf[i], w);
 11476  002100  C060  F026         	movff	utoa@fp,pad@fp
 11477  002104  C061  F027         	movff	utoa@fp+1,pad@fp+1
 11478  002108  0E80               	movlw	low _dbuf
 11479  00210A  2576               	addwf	utoa@i& (0+255),w,b
 11480  00210C  6E28               	movwf	pad@buf^0,c
 11481  00210E  0E01               	movlw	high _dbuf
 11482  002110  2177               	addwfc	(utoa@i+1)& (0+255),w,b
 11483  002112  6E29               	movwf	(pad@buf+1)^0,c
 11484  002114  C06C  F02A         	movff	utoa@w,pad@p
 11485  002118  C06D  F02B         	movff	utoa@w+1,pad@p+1
 11486  00211C  EC60  F016         	call	_pad	;wreg free
 11487  002120  C026  F060         	movff	?_pad,?_utoa
 11488  002124  C027  F061         	movff	?_pad+1,?_utoa+1
 11489  002128  0012               	return		;funcret
 11490  00212A                     __end_of_utoa:
 11491                           	callstack 0
 11492                           
 11493 ;; *************** function ___lomod *****************
 11494 ;; Defined at:
 11495 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lomod.c"
 11496 ;; Parameters:    Size  Location     Type
 11497 ;;  dividend        8   19[COMRAM] unsigned long long 
 11498 ;;  divisor         8   27[COMRAM] unsigned long long 
 11499 ;; Auto vars:     Size  Location     Type
 11500 ;;  counter         1   35[COMRAM] unsigned char 
 11501 ;; Return value:  Size  Location     Type
 11502 ;;                  8   19[COMRAM] unsigned long long 
 11503 ;; Registers used:
 11504 ;;		wreg, status,2, status,0
 11505 ;; Tracked objects:
 11506 ;;		On entry : 0/0
 11507 ;;		On exit  : 0/0
 11508 ;;		Unchanged: 0/0
 11509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11510 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11513 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11514 ;;Total ram usage:       17 bytes
 11515 ;; Hardware stack levels used:    1
 11516 ;; Hardware stack levels required when called:    4
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_utoa
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text35
 11525  002BF0                     __ptext35:
 11526                           	callstack 0
 11527  002BF0                     ___lomod:
 11528                           	callstack 22
 11529  002BF0  501C               	movf	___lomod@divisor^0,w,c
 11530  002BF2  101D               	iorwf	(___lomod@divisor+1)^0,w,c
 11531  002BF4  101E               	iorwf	(___lomod@divisor+2)^0,w,c
 11532  002BF6  101F               	iorwf	(___lomod@divisor+3)^0,w,c
 11533  002BF8  1020               	iorwf	(___lomod@divisor+4)^0,w,c
 11534  002BFA  1021               	iorwf	(___lomod@divisor+5)^0,w,c
 11535  002BFC  1022               	iorwf	(___lomod@divisor+6)^0,w,c
 11536  002BFE  1023               	iorwf	(___lomod@divisor+7)^0,w,c
 11537  002C00  B4D8               	btfsc	status,2,c
 11538  002C02  EF05  F016         	goto	u4631
 11539  002C06  EF07  F016         	goto	u4630
 11540  002C0A                     u4631:
 11541  002C0A  EF4F  F016         	goto	l1167
 11542  002C0E                     u4630:
 11543  002C0E  0E01               	movlw	1
 11544  002C10  6E24               	movwf	___lomod@counter^0,c
 11545  002C12  EF15  F016         	goto	l5103
 11546  002C16                     l5101:
 11547  002C16  90D8               	bcf	status,0,c
 11548  002C18  361C               	rlcf	___lomod@divisor^0,f,c
 11549  002C1A  361D               	rlcf	(___lomod@divisor+1)^0,f,c
 11550  002C1C  361E               	rlcf	(___lomod@divisor+2)^0,f,c
 11551  002C1E  361F               	rlcf	(___lomod@divisor+3)^0,f,c
 11552  002C20  3620               	rlcf	(___lomod@divisor+4)^0,f,c
 11553  002C22  3621               	rlcf	(___lomod@divisor+5)^0,f,c
 11554  002C24  3622               	rlcf	(___lomod@divisor+6)^0,f,c
 11555  002C26  3623               	rlcf	(___lomod@divisor+7)^0,f,c
 11556  002C28  2A24               	incf	___lomod@counter^0,f,c
 11557  002C2A                     l5103:
 11558  002C2A  AE23               	btfss	(___lomod@divisor+7)^0,7,c
 11559  002C2C  EF1A  F016         	goto	u4641
 11560  002C30  EF1C  F016         	goto	u4640
 11561  002C34                     u4641:
 11562  002C34  EF0B  F016         	goto	l5101
 11563  002C38                     u4640:
 11564  002C38                     l5105:
 11565  002C38  501C               	movf	___lomod@divisor^0,w,c
 11566  002C3A  5C14               	subwf	___lomod@dividend^0,w,c
 11567  002C3C  501D               	movf	(___lomod@divisor+1)^0,w,c
 11568  002C3E  5815               	subwfb	(___lomod@dividend+1)^0,w,c
 11569  002C40  501E               	movf	(___lomod@divisor+2)^0,w,c
 11570  002C42  5816               	subwfb	(___lomod@dividend+2)^0,w,c
 11571  002C44  501F               	movf	(___lomod@divisor+3)^0,w,c
 11572  002C46  5817               	subwfb	(___lomod@dividend+3)^0,w,c
 11573  002C48  5020               	movf	(___lomod@divisor+4)^0,w,c
 11574  002C4A  5818               	subwfb	(___lomod@dividend+4)^0,w,c
 11575  002C4C  5021               	movf	(___lomod@divisor+5)^0,w,c
 11576  002C4E  5819               	subwfb	(___lomod@dividend+5)^0,w,c
 11577  002C50  5022               	movf	(___lomod@divisor+6)^0,w,c
 11578  002C52  581A               	subwfb	(___lomod@dividend+6)^0,w,c
 11579  002C54  5023               	movf	(___lomod@divisor+7)^0,w,c
 11580  002C56  581B               	subwfb	(___lomod@dividend+7)^0,w,c
 11581  002C58  A0D8               	btfss	status,0,c
 11582  002C5A  EF31  F016         	goto	u4651
 11583  002C5E  EF33  F016         	goto	u4650
 11584  002C62                     u4651:
 11585  002C62  EF43  F016         	goto	l5109
 11586  002C66                     u4650:
 11587  002C66  501C               	movf	___lomod@divisor^0,w,c
 11588  002C68  5E14               	subwf	___lomod@dividend^0,f,c
 11589  002C6A  501D               	movf	(___lomod@divisor+1)^0,w,c
 11590  002C6C  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
 11591  002C6E  501E               	movf	(___lomod@divisor+2)^0,w,c
 11592  002C70  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
 11593  002C72  501F               	movf	(___lomod@divisor+3)^0,w,c
 11594  002C74  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
 11595  002C76  5020               	movf	(___lomod@divisor+4)^0,w,c
 11596  002C78  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
 11597  002C7A  5021               	movf	(___lomod@divisor+5)^0,w,c
 11598  002C7C  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
 11599  002C7E  5022               	movf	(___lomod@divisor+6)^0,w,c
 11600  002C80  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
 11601  002C82  5023               	movf	(___lomod@divisor+7)^0,w,c
 11602  002C84  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
 11603  002C86                     l5109:
 11604  002C86  90D8               	bcf	status,0,c
 11605  002C88  3223               	rrcf	(___lomod@divisor+7)^0,f,c
 11606  002C8A  3222               	rrcf	(___lomod@divisor+6)^0,f,c
 11607  002C8C  3221               	rrcf	(___lomod@divisor+5)^0,f,c
 11608  002C8E  3220               	rrcf	(___lomod@divisor+4)^0,f,c
 11609  002C90  321F               	rrcf	(___lomod@divisor+3)^0,f,c
 11610  002C92  321E               	rrcf	(___lomod@divisor+2)^0,f,c
 11611  002C94  321D               	rrcf	(___lomod@divisor+1)^0,f,c
 11612  002C96  321C               	rrcf	___lomod@divisor^0,f,c
 11613  002C98  2E24               	decfsz	___lomod@counter^0,f,c
 11614  002C9A  EF1C  F016         	goto	l5105
 11615  002C9E                     l1167:
 11616  002C9E  C014  F014         	movff	___lomod@dividend,?___lomod
 11617  002CA2  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
 11618  002CA6  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
 11619  002CAA  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
 11620  002CAE  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
 11621  002CB2  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
 11622  002CB6  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
 11623  002CBA  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
 11624  002CBE  0012               	return		;funcret
 11625  002CC0                     __end_of___lomod:
 11626                           	callstack 0
 11627                           
 11628 ;; *************** function ___lodiv *****************
 11629 ;; Defined at:
 11630 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\lodiv.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;  dividend        8   19[COMRAM] unsigned long long 
 11633 ;;  divisor         8   27[COMRAM] unsigned long long 
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;  quotient        8   35[COMRAM] unsigned long long 
 11636 ;;  counter         1   43[COMRAM] unsigned char 
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  8   19[COMRAM] unsigned long long 
 11639 ;; Registers used:
 11640 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11646 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11647 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11649 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;Total ram usage:       25 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; Hardware stack levels required when called:    4
 11653 ;; This function calls:
 11654 ;;		Nothing
 11655 ;; This function is called by:
 11656 ;;		_utoa
 11657 ;; This function uses a non-reentrant model
 11658 ;;
 11659                           
 11660                           	psect	text36
 11661  002B00                     __ptext36:
 11662                           	callstack 0
 11663  002B00                     ___lodiv:
 11664                           	callstack 22
 11665  002B00  EE20  F024         	lfsr	2,___lodiv@quotient
 11666  002B04  0E07               	movlw	7
 11667  002B06                     u4591:
 11668  002B06  6ADE               	clrf	postinc2,c
 11669  002B08  06E8               	decf	wreg,f,c
 11670  002B0A  E2FD               	bc	u4591
 11671  002B0C  501C               	movf	___lodiv@divisor^0,w,c
 11672  002B0E  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
 11673  002B10  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
 11674  002B12  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
 11675  002B14  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
 11676  002B16  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
 11677  002B18  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
 11678  002B1A  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
 11679  002B1C  B4D8               	btfsc	status,2,c
 11680  002B1E  EF93  F015         	goto	u4601
 11681  002B22  EF95  F015         	goto	u4600
 11682  002B26                     u4601:
 11683  002B26  EFE7  F015         	goto	l1157
 11684  002B2A                     u4600:
 11685  002B2A  0E01               	movlw	1
 11686  002B2C  6E2C               	movwf	___lodiv@counter^0,c
 11687  002B2E  EFA3  F015         	goto	l5083
 11688  002B32                     l5081:
 11689  002B32  90D8               	bcf	status,0,c
 11690  002B34  361C               	rlcf	___lodiv@divisor^0,f,c
 11691  002B36  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
 11692  002B38  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
 11693  002B3A  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
 11694  002B3C  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
 11695  002B3E  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
 11696  002B40  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
 11697  002B42  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
 11698  002B44  2A2C               	incf	___lodiv@counter^0,f,c
 11699  002B46                     l5083:
 11700  002B46  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
 11701  002B48  EFA8  F015         	goto	u4611
 11702  002B4C  EFAA  F015         	goto	u4610
 11703  002B50                     u4611:
 11704  002B50  EF99  F015         	goto	l5081
 11705  002B54                     u4610:
 11706  002B54                     l5085:
 11707  002B54  90D8               	bcf	status,0,c
 11708  002B56  3624               	rlcf	___lodiv@quotient^0,f,c
 11709  002B58  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
 11710  002B5A  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
 11711  002B5C  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
 11712  002B5E  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
 11713  002B60  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
 11714  002B62  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
 11715  002B64  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
 11716  002B66  501C               	movf	___lodiv@divisor^0,w,c
 11717  002B68  5C14               	subwf	___lodiv@dividend^0,w,c
 11718  002B6A  501D               	movf	(___lodiv@divisor+1)^0,w,c
 11719  002B6C  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
 11720  002B6E  501E               	movf	(___lodiv@divisor+2)^0,w,c
 11721  002B70  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
 11722  002B72  501F               	movf	(___lodiv@divisor+3)^0,w,c
 11723  002B74  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
 11724  002B76  5020               	movf	(___lodiv@divisor+4)^0,w,c
 11725  002B78  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
 11726  002B7A  5021               	movf	(___lodiv@divisor+5)^0,w,c
 11727  002B7C  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
 11728  002B7E  5022               	movf	(___lodiv@divisor+6)^0,w,c
 11729  002B80  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
 11730  002B82  5023               	movf	(___lodiv@divisor+7)^0,w,c
 11731  002B84  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
 11732  002B86  A0D8               	btfss	status,0,c
 11733  002B88  EFC8  F015         	goto	u4621
 11734  002B8C  EFCA  F015         	goto	u4620
 11735  002B90                     u4621:
 11736  002B90  EFDB  F015         	goto	l5093
 11737  002B94                     u4620:
 11738  002B94  501C               	movf	___lodiv@divisor^0,w,c
 11739  002B96  5E14               	subwf	___lodiv@dividend^0,f,c
 11740  002B98  501D               	movf	(___lodiv@divisor+1)^0,w,c
 11741  002B9A  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
 11742  002B9C  501E               	movf	(___lodiv@divisor+2)^0,w,c
 11743  002B9E  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
 11744  002BA0  501F               	movf	(___lodiv@divisor+3)^0,w,c
 11745  002BA2  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
 11746  002BA4  5020               	movf	(___lodiv@divisor+4)^0,w,c
 11747  002BA6  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
 11748  002BA8  5021               	movf	(___lodiv@divisor+5)^0,w,c
 11749  002BAA  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
 11750  002BAC  5022               	movf	(___lodiv@divisor+6)^0,w,c
 11751  002BAE  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
 11752  002BB0  5023               	movf	(___lodiv@divisor+7)^0,w,c
 11753  002BB2  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
 11754  002BB4  8024               	bsf	___lodiv@quotient^0,0,c
 11755  002BB6                     l5093:
 11756  002BB6  90D8               	bcf	status,0,c
 11757  002BB8  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
 11758  002BBA  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
 11759  002BBC  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
 11760  002BBE  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
 11761  002BC0  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
 11762  002BC2  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
 11763  002BC4  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
 11764  002BC6  321C               	rrcf	___lodiv@divisor^0,f,c
 11765  002BC8  2E2C               	decfsz	___lodiv@counter^0,f,c
 11766  002BCA  EFAA  F015         	goto	l5085
 11767  002BCE                     l1157:
 11768  002BCE  C024  F014         	movff	___lodiv@quotient,?___lodiv
 11769  002BD2  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
 11770  002BD6  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
 11771  002BDA  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
 11772  002BDE  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
 11773  002BE2  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
 11774  002BE6  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
 11775  002BEA  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
 11776  002BEE  0012               	return		;funcret
 11777  002BF0                     __end_of___lodiv:
 11778                           	callstack 0
 11779                           
 11780 ;; *************** function _dtoa *****************
 11781 ;; Defined at:
 11782 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11785 ;;		 -> NULL(0), 
 11786 ;;  d               8    2[BANK0 ] long long 
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  n               8   18[BANK0 ] long long 
 11789 ;;  i               2   26[BANK0 ] int 
 11790 ;;  s               2   16[BANK0 ] int 
 11791 ;;  w               2   14[BANK0 ] int 
 11792 ;;  p               2   12[BANK0 ] int 
 11793 ;; Return value:  Size  Location     Type
 11794 ;;                  2    0[BANK0 ] int 
 11795 ;; Registers used:
 11796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11797 ;; Tracked objects:
 11798 ;;		On entry : 0/0
 11799 ;;		On exit  : 0/0
 11800 ;;		Unchanged: 0/0
 11801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11802 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11803 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11804 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11805 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11806 ;;Total ram usage:       36 bytes
 11807 ;; Hardware stack levels used:    1
 11808 ;; Hardware stack levels required when called:    9
 11809 ;; This function calls:
 11810 ;;		___aodiv
 11811 ;;		___aomod
 11812 ;;		_abs
 11813 ;;		_pad
 11814 ;; This function is called by:
 11815 ;;		_vfpfcnvrt
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text37
 11820  001754                     __ptext37:
 11821                           	callstack 0
 11822  001754                     _dtoa:
 11823                           	callstack 18
 11824  001754                     
 11825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 11826  001754  C062  F072         	movff	dtoa@d,dtoa@n
 11827  001758  C063  F073         	movff	dtoa@d+1,dtoa@n+1
 11828  00175C  C064  F074         	movff	dtoa@d+2,dtoa@n+2
 11829  001760  C065  F075         	movff	dtoa@d+3,dtoa@n+3
 11830  001764  C066  F076         	movff	dtoa@d+4,dtoa@n+4
 11831  001768  C067  F077         	movff	dtoa@d+5,dtoa@n+5
 11832  00176C  C068  F078         	movff	dtoa@d+6,dtoa@n+6
 11833  001770  C069  F079         	movff	dtoa@d+7,dtoa@n+7
 11834  001774                     
 11835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 11836  001774  0100               	movlb	0	; () banked
 11837  001776  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
 11838  001778  EFC0  F00B         	goto	u4831
 11839  00177C  EFC3  F00B         	goto	u4830
 11840  001780                     u4831:
 11841  001780  0E01               	movlw	1
 11842  001782  EFC4  F00B         	goto	u4840
 11843  001786                     u4830:
 11844  001786  0E00               	movlw	0
 11845  001788                     u4840:
 11846  001788  6F70               	movwf	dtoa@s& (0+255),b
 11847  00178A  6B71               	clrf	(dtoa@s+1)& (0+255),b
 11848                           
 11849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 11850  00178C  5170               	movf	dtoa@s& (0+255),w,b
 11851  00178E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 11852  001790  B4D8               	btfsc	status,2,c
 11853  001792  EFCD  F00B         	goto	u4851
 11854  001796  EFCF  F00B         	goto	u4850
 11855  00179A                     u4851:
 11856  00179A  EFDF  F00B         	goto	l5193
 11857  00179E                     u4850:
 11858  00179E                     
 11859                           ; BSR set to: 0
 11860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 11861  00179E  1F79               	comf	(dtoa@n+7)& (0+255),f,b
 11862  0017A0  1F78               	comf	(dtoa@n+6)& (0+255),f,b
 11863  0017A2  1F77               	comf	(dtoa@n+5)& (0+255),f,b
 11864  0017A4  1F76               	comf	(dtoa@n+4)& (0+255),f,b
 11865  0017A6  1F75               	comf	(dtoa@n+3)& (0+255),f,b
 11866  0017A8  1F74               	comf	(dtoa@n+2)& (0+255),f,b
 11867  0017AA  1F73               	comf	(dtoa@n+1)& (0+255),f,b
 11868  0017AC  6D72               	negf	dtoa@n& (0+255),b
 11869  0017AE  0E00               	movlw	0
 11870  0017B0  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
 11871  0017B2  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
 11872  0017B4  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
 11873  0017B6  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
 11874  0017B8  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
 11875  0017BA  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
 11876  0017BC  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
 11877  0017BE                     l5193:
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 11881  0017BE  BE3C               	btfsc	(_prec+1)^0,7,c
 11882  0017C0  EFE4  F00B         	goto	u4861
 11883  0017C4  EFE6  F00B         	goto	u4860
 11884  0017C8                     u4861:
 11885  0017C8  EFE7  F00B         	goto	l5197
 11886  0017CC                     u4860:
 11887  0017CC                     
 11888                           ; BSR set to: 0
 11889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 11890  0017CC  923D               	bcf	_flags^0,1,c
 11891  0017CE                     l5197:
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 11895  0017CE  BE3C               	btfsc	(_prec+1)^0,7,c
 11896  0017D0  EFF4  F00B         	goto	u4870
 11897  0017D4  503C               	movf	(_prec+1)^0,w,c
 11898  0017D6  E106               	bnz	u4871
 11899  0017D8  043B               	decf	_prec^0,w,c
 11900  0017DA  B0D8               	btfsc	status,0,c
 11901  0017DC  EFF2  F00B         	goto	u4871
 11902  0017E0  EFF4  F00B         	goto	u4870
 11903  0017E4                     u4871:
 11904  0017E4  EFFA  F00B         	goto	l1452
 11905  0017E8                     u4870:
 11906  0017E8                     
 11907                           ; BSR set to: 0
 11908  0017E8  0E00               	movlw	0
 11909  0017EA  6F6D               	movwf	(dtoa@p+1)& (0+255),b
 11910  0017EC  0E01               	movlw	1
 11911  0017EE  6F6C               	movwf	dtoa@p& (0+255),b
 11912  0017F0  EFFE  F00B         	goto	l1454
 11913  0017F4                     l1452:
 11914                           
 11915                           ; BSR set to: 0
 11916  0017F4  C03B  F06C         	movff	_prec,dtoa@p
 11917  0017F8  C03C  F06D         	movff	_prec+1,dtoa@p+1
 11918  0017FC                     l1454:
 11919                           
 11920                           ; BSR set to: 0
 11921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 11922  0017FC  C039  F06E         	movff	_width,dtoa@w
 11923  001800  C03A  F06F         	movff	_width+1,dtoa@w+1
 11924  001804                     
 11925                           ; BSR set to: 0
 11926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 11927  001804  5170               	movf	dtoa@s& (0+255),w,b
 11928  001806  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 11929  001808  A4D8               	btfss	status,2,c
 11930  00180A  EF09  F00C         	goto	u4881
 11931  00180E  EF0B  F00C         	goto	u4880
 11932  001812                     u4881:
 11933  001812  EF12  F00C         	goto	l5205
 11934  001816                     u4880:
 11935  001816                     
 11936                           ; BSR set to: 0
 11937  001816  A43D               	btfss	_flags^0,2,c
 11938  001818  EF10  F00C         	goto	u4891
 11939  00181C  EF12  F00C         	goto	u4890
 11940  001820                     u4891:
 11941  001820  EF15  F00C         	goto	l5207
 11942  001824                     u4890:
 11943  001824                     l5205:
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 11947  001824  076E               	decf	dtoa@w& (0+255),f,b
 11948  001826  A0D8               	btfss	status,0,c
 11949  001828  076F               	decf	(dtoa@w+1)& (0+255),f,b
 11950  00182A                     l5207:
 11951                           
 11952                           ; BSR set to: 0
 11953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 11954  00182A  0E00               	movlw	0
 11955  00182C  6F7B               	movwf	(dtoa@i+1)& (0+255),b
 11956  00182E  0E1F               	movlw	31
 11957  001830  6F7A               	movwf	dtoa@i& (0+255),b
 11958  001832                     
 11959                           ; BSR set to: 0
 11960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 11961  001832  0E00               	movlw	0
 11962  001834  0101               	movlb	1	; () banked
 11963  001836  6F9F               	movwf	(_dbuf+31)& (0+255),b
 11964                           
 11965                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11966  001838  EF9B  F00C         	goto	l5221
 11967  00183C                     l5211:
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 11971  00183C  077A               	decf	dtoa@i& (0+255),f,b
 11972  00183E  A0D8               	btfss	status,0,c
 11973  001840  077B               	decf	(dtoa@i+1)& (0+255),f,b
 11974  001842                     
 11975                           ; BSR set to: 0
 11976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 11977  001842  0E80               	movlw	low _dbuf
 11978  001844  257A               	addwf	dtoa@i& (0+255),w,b
 11979  001846  6ED9               	movwf	fsr2l,c
 11980  001848  0E01               	movlw	high _dbuf
 11981  00184A  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 11982  00184C  6EDA               	movwf	fsr2h,c
 11983  00184E  C072  F014         	movff	dtoa@n,___aomod@dividend
 11984  001852  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
 11985  001856  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
 11986  00185A  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
 11987  00185E  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
 11988  001862  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
 11989  001866  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
 11990  00186A  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
 11991  00186E  0E0A               	movlw	10
 11992  001870  6E1C               	movwf	___aomod@divisor^0,c
 11993  001872  0E00               	movlw	0
 11994  001874  6E1D               	movwf	(___aomod@divisor+1)^0,c
 11995  001876  0E00               	movlw	0
 11996  001878  6E1E               	movwf	(___aomod@divisor+2)^0,c
 11997  00187A  0E00               	movlw	0
 11998  00187C  6E1F               	movwf	(___aomod@divisor+3)^0,c
 11999  00187E  0E00               	movlw	0
 12000  001880  6E20               	movwf	(___aomod@divisor+4)^0,c
 12001  001882  0E00               	movlw	0
 12002  001884  6E21               	movwf	(___aomod@divisor+5)^0,c
 12003  001886  0E00               	movlw	0
 12004  001888  6E22               	movwf	(___aomod@divisor+6)^0,c
 12005  00188A  0E00               	movlw	0
 12006  00188C  6E23               	movwf	(___aomod@divisor+7)^0,c
 12007  00188E  ECCE  F014         	call	___aomod	;wreg free
 12008  001892  C014  F031         	movff	?___aomod,??_dtoa
 12009  001896  C015  F032         	movff	?___aomod+1,??_dtoa+1
 12010  00189A  C016  F033         	movff	?___aomod+2,??_dtoa+2
 12011  00189E  C017  F034         	movff	?___aomod+3,??_dtoa+3
 12012  0018A2  C018  F035         	movff	?___aomod+4,??_dtoa+4
 12013  0018A6  C019  F036         	movff	?___aomod+5,??_dtoa+5
 12014  0018AA  C01A  F037         	movff	?___aomod+6,??_dtoa+6
 12015  0018AE  C01B  F038         	movff	?___aomod+7,??_dtoa+7
 12016  0018B2  C031  F026         	movff	??_dtoa,abs@a
 12017  0018B6  C033  F027         	movff	??_dtoa+2,abs@a+1
 12018  0018BA  EC60  F019         	call	_abs	;wreg free
 12019  0018BE  5026               	movf	?_abs^0,w,c
 12020  0018C0  0F30               	addlw	48
 12021  0018C2  6EDF               	movwf	indf2,c
 12022  0018C4                     
 12023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12024  0018C4  0100               	movlb	0	; () banked
 12025  0018C6  076C               	decf	dtoa@p& (0+255),f,b
 12026  0018C8  A0D8               	btfss	status,0,c
 12027  0018CA  076D               	decf	(dtoa@p+1)& (0+255),f,b
 12028  0018CC                     
 12029                           ; BSR set to: 0
 12030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12031  0018CC  076E               	decf	dtoa@w& (0+255),f,b
 12032  0018CE  A0D8               	btfss	status,0,c
 12033  0018D0  076F               	decf	(dtoa@w+1)& (0+255),f,b
 12034  0018D2                     
 12035                           ; BSR set to: 0
 12036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12037  0018D2  C072  F014         	movff	dtoa@n,___aodiv@dividend
 12038  0018D6  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
 12039  0018DA  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
 12040  0018DE  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
 12041  0018E2  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
 12042  0018E6  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
 12043  0018EA  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
 12044  0018EE  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
 12045  0018F2  0E0A               	movlw	10
 12046  0018F4  6E1C               	movwf	___aodiv@divisor^0,c
 12047  0018F6  0E00               	movlw	0
 12048  0018F8  6E1D               	movwf	(___aodiv@divisor+1)^0,c
 12049  0018FA  0E00               	movlw	0
 12050  0018FC  6E1E               	movwf	(___aodiv@divisor+2)^0,c
 12051  0018FE  0E00               	movlw	0
 12052  001900  6E1F               	movwf	(___aodiv@divisor+3)^0,c
 12053  001902  0E00               	movlw	0
 12054  001904  6E20               	movwf	(___aodiv@divisor+4)^0,c
 12055  001906  0E00               	movlw	0
 12056  001908  6E21               	movwf	(___aodiv@divisor+5)^0,c
 12057  00190A  0E00               	movlw	0
 12058  00190C  6E22               	movwf	(___aodiv@divisor+6)^0,c
 12059  00190E  0E00               	movlw	0
 12060  001910  6E23               	movwf	(___aodiv@divisor+7)^0,c
 12061  001912  EC4E  F013         	call	___aodiv	;wreg free
 12062  001916  C014  F072         	movff	?___aodiv,dtoa@n
 12063  00191A  C015  F073         	movff	?___aodiv+1,dtoa@n+1
 12064  00191E  C016  F074         	movff	?___aodiv+2,dtoa@n+2
 12065  001922  C017  F075         	movff	?___aodiv+3,dtoa@n+3
 12066  001926  C018  F076         	movff	?___aodiv+4,dtoa@n+4
 12067  00192A  C019  F077         	movff	?___aodiv+5,dtoa@n+5
 12068  00192E  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
 12069  001932  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
 12070  001936                     l5221:
 12071                           
 12072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12073  001936  0100               	movlb	0	; () banked
 12074  001938  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
 12075  00193A  EFA7  F00C         	goto	u4901
 12076  00193E  517B               	movf	(dtoa@i+1)& (0+255),w,b
 12077  001940  E108               	bnz	u4900
 12078  001942  057A               	decf	dtoa@i& (0+255),w,b
 12079  001944  A0D8               	btfss	status,0,c
 12080  001946  EFA7  F00C         	goto	u4901
 12081  00194A  EFA9  F00C         	goto	u4900
 12082  00194E                     u4901:
 12083  00194E  EFD9  F00C         	goto	l5231
 12084  001952                     u4900:
 12085  001952                     
 12086                           ; BSR set to: 0
 12087  001952  5172               	movf	dtoa@n& (0+255),w,b
 12088  001954  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
 12089  001956  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
 12090  001958  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
 12091  00195A  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
 12092  00195C  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
 12093  00195E  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
 12094  001960  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
 12095  001962  A4D8               	btfss	status,2,c
 12096  001964  EFB6  F00C         	goto	u4911
 12097  001968  EFB8  F00C         	goto	u4910
 12098  00196C                     u4911:
 12099  00196C  EF1E  F00C         	goto	l5211
 12100  001970                     u4910:
 12101  001970                     
 12102                           ; BSR set to: 0
 12103  001970  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
 12104  001972  EFC5  F00C         	goto	u4920
 12105  001976  516D               	movf	(dtoa@p+1)& (0+255),w,b
 12106  001978  E106               	bnz	u4921
 12107  00197A  056C               	decf	dtoa@p& (0+255),w,b
 12108  00197C  B0D8               	btfsc	status,0,c
 12109  00197E  EFC3  F00C         	goto	u4921
 12110  001982  EFC5  F00C         	goto	u4920
 12111  001986                     u4921:
 12112  001986  EF1E  F00C         	goto	l5211
 12113  00198A                     u4920:
 12114  00198A                     
 12115                           ; BSR set to: 0
 12116  00198A  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
 12117  00198C  EFD0  F00C         	goto	u4931
 12118  001990  516F               	movf	(dtoa@w+1)& (0+255),w,b
 12119  001992  E108               	bnz	u4930
 12120  001994  056E               	decf	dtoa@w& (0+255),w,b
 12121  001996  A0D8               	btfss	status,0,c
 12122  001998  EFD0  F00C         	goto	u4931
 12123  00199C  EFD2  F00C         	goto	u4930
 12124  0019A0                     u4931:
 12125  0019A0  EFD9  F00C         	goto	l5231
 12126  0019A4                     u4930:
 12127  0019A4                     
 12128                           ; BSR set to: 0
 12129  0019A4  B23D               	btfsc	_flags^0,1,c
 12130  0019A6  EFD7  F00C         	goto	u4941
 12131  0019AA  EFD9  F00C         	goto	u4940
 12132  0019AE                     u4941:
 12133  0019AE  EF1E  F00C         	goto	l5211
 12134  0019B2                     u4940:
 12135  0019B2                     l5231:
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12139  0019B2  5170               	movf	dtoa@s& (0+255),w,b
 12140  0019B4  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12141  0019B6  A4D8               	btfss	status,2,c
 12142  0019B8  EFE0  F00C         	goto	u4951
 12143  0019BC  EFE2  F00C         	goto	u4950
 12144  0019C0                     u4951:
 12145  0019C0  EFE9  F00C         	goto	l5235
 12146  0019C4                     u4950:
 12147  0019C4                     
 12148                           ; BSR set to: 0
 12149  0019C4  A43D               	btfss	_flags^0,2,c
 12150  0019C6  EFE7  F00C         	goto	u4961
 12151  0019CA  EFE9  F00C         	goto	u4960
 12152  0019CE                     u4961:
 12153  0019CE  EF07  F00D         	goto	l5245
 12154  0019D2                     u4960:
 12155  0019D2                     l5235:
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12159  0019D2  077A               	decf	dtoa@i& (0+255),f,b
 12160  0019D4  A0D8               	btfss	status,0,c
 12161  0019D6  077B               	decf	(dtoa@i+1)& (0+255),f,b
 12162  0019D8                     
 12163                           ; BSR set to: 0
 12164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12165  0019D8  5170               	movf	dtoa@s& (0+255),w,b
 12166  0019DA  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12167  0019DC  A4D8               	btfss	status,2,c
 12168  0019DE  EFF3  F00C         	goto	u4971
 12169  0019E2  EFF5  F00C         	goto	u4970
 12170  0019E6                     u4971:
 12171  0019E6  EFFB  F00C         	goto	l5241
 12172  0019EA                     u4970:
 12173  0019EA                     
 12174                           ; BSR set to: 0
 12175  0019EA  0E00               	movlw	0
 12176  0019EC  6F6B               	movwf	(_dtoa$1980+1)& (0+255),b
 12177  0019EE  0E2B               	movlw	43
 12178  0019F0  6F6A               	movwf	_dtoa$1980& (0+255),b
 12179  0019F2  EFFF  F00C         	goto	l5243
 12180  0019F6                     l5241:
 12181                           
 12182                           ; BSR set to: 0
 12183  0019F6  0E00               	movlw	0
 12184  0019F8  6F6B               	movwf	(_dtoa$1980+1)& (0+255),b
 12185  0019FA  0E2D               	movlw	45
 12186  0019FC  6F6A               	movwf	_dtoa$1980& (0+255),b
 12187  0019FE                     l5243:
 12188                           
 12189                           ; BSR set to: 0
 12190  0019FE  0E80               	movlw	low _dbuf
 12191  001A00  257A               	addwf	dtoa@i& (0+255),w,b
 12192  001A02  6ED9               	movwf	fsr2l,c
 12193  001A04  0E01               	movlw	high _dbuf
 12194  001A06  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12195  001A08  6EDA               	movwf	fsr2h,c
 12196  001A0A  C06A  FFDF         	movff	_dtoa$1980,indf2
 12197  001A0E                     l5245:
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12201  001A0E  C060  F026         	movff	dtoa@fp,pad@fp
 12202  001A12  C061  F027         	movff	dtoa@fp+1,pad@fp+1
 12203  001A16  0E80               	movlw	low _dbuf
 12204  001A18  257A               	addwf	dtoa@i& (0+255),w,b
 12205  001A1A  6E28               	movwf	pad@buf^0,c
 12206  001A1C  0E01               	movlw	high _dbuf
 12207  001A1E  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12208  001A20  6E29               	movwf	(pad@buf+1)^0,c
 12209  001A22  C06E  F02A         	movff	dtoa@w,pad@p
 12210  001A26  C06F  F02B         	movff	dtoa@w+1,pad@p+1
 12211  001A2A  EC60  F016         	call	_pad	;wreg free
 12212  001A2E  C026  F060         	movff	?_pad,?_dtoa
 12213  001A32  C027  F061         	movff	?_pad+1,?_dtoa+1
 12214  001A36  0012               	return		;funcret
 12215  001A38                     __end_of_dtoa:
 12216                           	callstack 0
 12217                           
 12218 ;; *************** function _abs *****************
 12219 ;; Defined at:
 12220 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 12221 ;; Parameters:    Size  Location     Type
 12222 ;;  a               2   37[COMRAM] int 
 12223 ;; Auto vars:     Size  Location     Type
 12224 ;;		None
 12225 ;; Return value:  Size  Location     Type
 12226 ;;                  2   37[COMRAM] int 
 12227 ;; Registers used:
 12228 ;;		wreg, status,2, status,0
 12229 ;; Tracked objects:
 12230 ;;		On entry : 0/0
 12231 ;;		On exit  : 0/0
 12232 ;;		Unchanged: 0/0
 12233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;Total ram usage:        4 bytes
 12239 ;; Hardware stack levels used:    1
 12240 ;; Hardware stack levels required when called:    4
 12241 ;; This function calls:
 12242 ;;		Nothing
 12243 ;; This function is called by:
 12244 ;;		_dtoa
 12245 ;; This function uses a non-reentrant model
 12246 ;;
 12247                           
 12248                           	psect	text38
 12249  0032C0                     __ptext38:
 12250                           	callstack 0
 12251  0032C0                     _abs:
 12252                           	callstack 22
 12253  0032C0  BE27               	btfsc	(abs@a+1)^0,7,c
 12254  0032C2  EF6D  F019         	goto	u4700
 12255  0032C6  5027               	movf	(abs@a+1)^0,w,c
 12256  0032C8  E106               	bnz	u4701
 12257  0032CA  0426               	decf	abs@a^0,w,c
 12258  0032CC  B0D8               	btfsc	status,0,c
 12259  0032CE  EF6B  F019         	goto	u4701
 12260  0032D2  EF6D  F019         	goto	u4700
 12261  0032D6                     u4701:
 12262  0032D6  EF7B  F019         	goto	l1562
 12263  0032DA                     u4700:
 12264  0032DA  C026  F028         	movff	abs@a,??_abs
 12265  0032DE  C027  F029         	movff	abs@a+1,??_abs+1
 12266  0032E2  1E28               	comf	??_abs^0,f,c
 12267  0032E4  1E29               	comf	(??_abs+1)^0,f,c
 12268  0032E6  4A28               	infsnz	??_abs^0,f,c
 12269  0032E8  2A29               	incf	(??_abs+1)^0,f,c
 12270  0032EA  C028  F026         	movff	??_abs,?_abs
 12271  0032EE  C029  F027         	movff	??_abs+1,?_abs+1
 12272  0032F2  EF7F  F019         	goto	l1565
 12273  0032F6                     l1562:
 12274  0032F6  C026  F026         	movff	abs@a,?_abs
 12275  0032FA  C027  F027         	movff	abs@a+1,?_abs+1
 12276  0032FE                     l1565:
 12277  0032FE  0012               	return		;funcret
 12278  003300                     __end_of_abs:
 12279                           	callstack 0
 12280                           
 12281 ;; *************** function ___aomod *****************
 12282 ;; Defined at:
 12283 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  dividend        8   19[COMRAM] long long 
 12286 ;;  divisor         8   27[COMRAM] long long 
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;  sign            1   36[COMRAM] unsigned char 
 12289 ;;  counter         1   35[COMRAM] unsigned char 
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  8   19[COMRAM] long long 
 12292 ;; Registers used:
 12293 ;;		wreg, status,2, status,0
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/0
 12296 ;;		On exit  : 0/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12299 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;Total ram usage:       18 bytes
 12304 ;; Hardware stack levels used:    1
 12305 ;; Hardware stack levels required when called:    4
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_dtoa
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           	psect	text39
 12314  00299C                     __ptext39:
 12315                           	callstack 0
 12316  00299C                     ___aomod:
 12317                           	callstack 22
 12318  00299C  0E00               	movlw	0
 12319  00299E  6E25               	movwf	___aomod@sign^0,c
 12320  0029A0  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
 12321  0029A2  EFD7  F014         	goto	u4530
 12322  0029A6  EFD5  F014         	goto	u4531
 12323  0029AA                     u4531:
 12324  0029AA  EFE9  F014         	goto	l5047
 12325  0029AE                     u4530:
 12326  0029AE  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 12327  0029B0  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 12328  0029B2  1E19               	comf	(___aomod@dividend+5)^0,f,c
 12329  0029B4  1E18               	comf	(___aomod@dividend+4)^0,f,c
 12330  0029B6  1E17               	comf	(___aomod@dividend+3)^0,f,c
 12331  0029B8  1E16               	comf	(___aomod@dividend+2)^0,f,c
 12332  0029BA  1E15               	comf	(___aomod@dividend+1)^0,f,c
 12333  0029BC  6C14               	negf	___aomod@dividend^0,c
 12334  0029BE  0E00               	movlw	0
 12335  0029C0  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 12336  0029C2  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 12337  0029C4  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 12338  0029C6  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 12339  0029C8  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 12340  0029CA  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 12341  0029CC  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 12342  0029CE  0E01               	movlw	1
 12343  0029D0  6E25               	movwf	___aomod@sign^0,c
 12344  0029D2                     l5047:
 12345  0029D2  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
 12346  0029D4  EFF0  F014         	goto	u4540
 12347  0029D8  EFEE  F014         	goto	u4541
 12348  0029DC                     u4541:
 12349  0029DC  EF00  F015         	goto	l5051
 12350  0029E0                     u4540:
 12351  0029E0  1E23               	comf	(___aomod@divisor+7)^0,f,c
 12352  0029E2  1E22               	comf	(___aomod@divisor+6)^0,f,c
 12353  0029E4  1E21               	comf	(___aomod@divisor+5)^0,f,c
 12354  0029E6  1E20               	comf	(___aomod@divisor+4)^0,f,c
 12355  0029E8  1E1F               	comf	(___aomod@divisor+3)^0,f,c
 12356  0029EA  1E1E               	comf	(___aomod@divisor+2)^0,f,c
 12357  0029EC  1E1D               	comf	(___aomod@divisor+1)^0,f,c
 12358  0029EE  6C1C               	negf	___aomod@divisor^0,c
 12359  0029F0  0E00               	movlw	0
 12360  0029F2  221D               	addwfc	(___aomod@divisor+1)^0,f,c
 12361  0029F4  221E               	addwfc	(___aomod@divisor+2)^0,f,c
 12362  0029F6  221F               	addwfc	(___aomod@divisor+3)^0,f,c
 12363  0029F8  2220               	addwfc	(___aomod@divisor+4)^0,f,c
 12364  0029FA  2221               	addwfc	(___aomod@divisor+5)^0,f,c
 12365  0029FC  2222               	addwfc	(___aomod@divisor+6)^0,f,c
 12366  0029FE  2223               	addwfc	(___aomod@divisor+7)^0,f,c
 12367  002A00                     l5051:
 12368  002A00  501C               	movf	___aomod@divisor^0,w,c
 12369  002A02  101D               	iorwf	(___aomod@divisor+1)^0,w,c
 12370  002A04  101E               	iorwf	(___aomod@divisor+2)^0,w,c
 12371  002A06  101F               	iorwf	(___aomod@divisor+3)^0,w,c
 12372  002A08  1020               	iorwf	(___aomod@divisor+4)^0,w,c
 12373  002A0A  1021               	iorwf	(___aomod@divisor+5)^0,w,c
 12374  002A0C  1022               	iorwf	(___aomod@divisor+6)^0,w,c
 12375  002A0E  1023               	iorwf	(___aomod@divisor+7)^0,w,c
 12376  002A10  B4D8               	btfsc	status,2,c
 12377  002A12  EF0D  F015         	goto	u4551
 12378  002A16  EF0F  F015         	goto	u4550
 12379  002A1A                     u4551:
 12380  002A1A  EF57  F015         	goto	l5067
 12381  002A1E                     u4550:
 12382  002A1E  0E01               	movlw	1
 12383  002A20  6E24               	movwf	___aomod@counter^0,c
 12384  002A22  EF1D  F015         	goto	l5057
 12385  002A26                     l5055:
 12386  002A26  90D8               	bcf	status,0,c
 12387  002A28  361C               	rlcf	___aomod@divisor^0,f,c
 12388  002A2A  361D               	rlcf	(___aomod@divisor+1)^0,f,c
 12389  002A2C  361E               	rlcf	(___aomod@divisor+2)^0,f,c
 12390  002A2E  361F               	rlcf	(___aomod@divisor+3)^0,f,c
 12391  002A30  3620               	rlcf	(___aomod@divisor+4)^0,f,c
 12392  002A32  3621               	rlcf	(___aomod@divisor+5)^0,f,c
 12393  002A34  3622               	rlcf	(___aomod@divisor+6)^0,f,c
 12394  002A36  3623               	rlcf	(___aomod@divisor+7)^0,f,c
 12395  002A38  2A24               	incf	___aomod@counter^0,f,c
 12396  002A3A                     l5057:
 12397  002A3A  AE23               	btfss	(___aomod@divisor+7)^0,7,c
 12398  002A3C  EF22  F015         	goto	u4561
 12399  002A40  EF24  F015         	goto	u4560
 12400  002A44                     u4561:
 12401  002A44  EF13  F015         	goto	l5055
 12402  002A48                     u4560:
 12403  002A48                     l5059:
 12404  002A48  501C               	movf	___aomod@divisor^0,w,c
 12405  002A4A  5C14               	subwf	___aomod@dividend^0,w,c
 12406  002A4C  501D               	movf	(___aomod@divisor+1)^0,w,c
 12407  002A4E  5815               	subwfb	(___aomod@dividend+1)^0,w,c
 12408  002A50  501E               	movf	(___aomod@divisor+2)^0,w,c
 12409  002A52  5816               	subwfb	(___aomod@dividend+2)^0,w,c
 12410  002A54  501F               	movf	(___aomod@divisor+3)^0,w,c
 12411  002A56  5817               	subwfb	(___aomod@dividend+3)^0,w,c
 12412  002A58  5020               	movf	(___aomod@divisor+4)^0,w,c
 12413  002A5A  5818               	subwfb	(___aomod@dividend+4)^0,w,c
 12414  002A5C  5021               	movf	(___aomod@divisor+5)^0,w,c
 12415  002A5E  5819               	subwfb	(___aomod@dividend+5)^0,w,c
 12416  002A60  5022               	movf	(___aomod@divisor+6)^0,w,c
 12417  002A62  581A               	subwfb	(___aomod@dividend+6)^0,w,c
 12418  002A64  5023               	movf	(___aomod@divisor+7)^0,w,c
 12419  002A66  581B               	subwfb	(___aomod@dividend+7)^0,w,c
 12420  002A68  A0D8               	btfss	status,0,c
 12421  002A6A  EF39  F015         	goto	u4571
 12422  002A6E  EF3B  F015         	goto	u4570
 12423  002A72                     u4571:
 12424  002A72  EF4B  F015         	goto	l5063
 12425  002A76                     u4570:
 12426  002A76  501C               	movf	___aomod@divisor^0,w,c
 12427  002A78  5E14               	subwf	___aomod@dividend^0,f,c
 12428  002A7A  501D               	movf	(___aomod@divisor+1)^0,w,c
 12429  002A7C  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
 12430  002A7E  501E               	movf	(___aomod@divisor+2)^0,w,c
 12431  002A80  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
 12432  002A82  501F               	movf	(___aomod@divisor+3)^0,w,c
 12433  002A84  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
 12434  002A86  5020               	movf	(___aomod@divisor+4)^0,w,c
 12435  002A88  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
 12436  002A8A  5021               	movf	(___aomod@divisor+5)^0,w,c
 12437  002A8C  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
 12438  002A8E  5022               	movf	(___aomod@divisor+6)^0,w,c
 12439  002A90  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
 12440  002A92  5023               	movf	(___aomod@divisor+7)^0,w,c
 12441  002A94  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
 12442  002A96                     l5063:
 12443  002A96  90D8               	bcf	status,0,c
 12444  002A98  3223               	rrcf	(___aomod@divisor+7)^0,f,c
 12445  002A9A  3222               	rrcf	(___aomod@divisor+6)^0,f,c
 12446  002A9C  3221               	rrcf	(___aomod@divisor+5)^0,f,c
 12447  002A9E  3220               	rrcf	(___aomod@divisor+4)^0,f,c
 12448  002AA0  321F               	rrcf	(___aomod@divisor+3)^0,f,c
 12449  002AA2  321E               	rrcf	(___aomod@divisor+2)^0,f,c
 12450  002AA4  321D               	rrcf	(___aomod@divisor+1)^0,f,c
 12451  002AA6  321C               	rrcf	___aomod@divisor^0,f,c
 12452  002AA8  2E24               	decfsz	___aomod@counter^0,f,c
 12453  002AAA  EF24  F015         	goto	l5059
 12454  002AAE                     l5067:
 12455  002AAE  5025               	movf	___aomod@sign^0,w,c
 12456  002AB0  B4D8               	btfsc	status,2,c
 12457  002AB2  EF5D  F015         	goto	u4581
 12458  002AB6  EF5F  F015         	goto	u4580
 12459  002ABA                     u4581:
 12460  002ABA  EF6F  F015         	goto	l5071
 12461  002ABE                     u4580:
 12462  002ABE  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 12463  002AC0  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 12464  002AC2  1E19               	comf	(___aomod@dividend+5)^0,f,c
 12465  002AC4  1E18               	comf	(___aomod@dividend+4)^0,f,c
 12466  002AC6  1E17               	comf	(___aomod@dividend+3)^0,f,c
 12467  002AC8  1E16               	comf	(___aomod@dividend+2)^0,f,c
 12468  002ACA  1E15               	comf	(___aomod@dividend+1)^0,f,c
 12469  002ACC  6C14               	negf	___aomod@dividend^0,c
 12470  002ACE  0E00               	movlw	0
 12471  002AD0  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 12472  002AD2  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 12473  002AD4  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 12474  002AD6  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 12475  002AD8  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 12476  002ADA  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 12477  002ADC  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 12478  002ADE                     l5071:
 12479  002ADE  C014  F014         	movff	___aomod@dividend,?___aomod
 12480  002AE2  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
 12481  002AE6  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
 12482  002AEA  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
 12483  002AEE  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
 12484  002AF2  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
 12485  002AF6  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
 12486  002AFA  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
 12487  002AFE  0012               	return		;funcret
 12488  002B00                     __end_of___aomod:
 12489                           	callstack 0
 12490                           
 12491 ;; *************** function ___aodiv *****************
 12492 ;; Defined at:
 12493 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 12494 ;; Parameters:    Size  Location     Type
 12495 ;;  dividend        8   19[COMRAM] long long 
 12496 ;;  divisor         8   27[COMRAM] long long 
 12497 ;; Auto vars:     Size  Location     Type
 12498 ;;  quotient        8   37[COMRAM] long long 
 12499 ;;  sign            1   36[COMRAM] unsigned char 
 12500 ;;  counter         1   35[COMRAM] unsigned char 
 12501 ;; Return value:  Size  Location     Type
 12502 ;;                  8   19[COMRAM] long long 
 12503 ;; Registers used:
 12504 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12505 ;; Tracked objects:
 12506 ;;		On entry : 0/0
 12507 ;;		On exit  : 0/0
 12508 ;;		Unchanged: 0/0
 12509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12510 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12511 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12513 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12514 ;;Total ram usage:       26 bytes
 12515 ;; Hardware stack levels used:    1
 12516 ;; Hardware stack levels required when called:    4
 12517 ;; This function calls:
 12518 ;;		Nothing
 12519 ;; This function is called by:
 12520 ;;		_dtoa
 12521 ;; This function uses a non-reentrant model
 12522 ;;
 12523                           
 12524                           	psect	text40
 12525  00269C                     __ptext40:
 12526                           	callstack 0
 12527  00269C                     ___aodiv:
 12528                           	callstack 22
 12529  00269C  0E00               	movlw	0
 12530  00269E  6E25               	movwf	___aodiv@sign^0,c
 12531  0026A0  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
 12532  0026A2  EF57  F013         	goto	u4460
 12533  0026A6  EF55  F013         	goto	u4461
 12534  0026AA                     u4461:
 12535  0026AA  EF69  F013         	goto	l5003
 12536  0026AE                     u4460:
 12537  0026AE  1E23               	comf	(___aodiv@divisor+7)^0,f,c
 12538  0026B0  1E22               	comf	(___aodiv@divisor+6)^0,f,c
 12539  0026B2  1E21               	comf	(___aodiv@divisor+5)^0,f,c
 12540  0026B4  1E20               	comf	(___aodiv@divisor+4)^0,f,c
 12541  0026B6  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
 12542  0026B8  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
 12543  0026BA  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
 12544  0026BC  6C1C               	negf	___aodiv@divisor^0,c
 12545  0026BE  0E00               	movlw	0
 12546  0026C0  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
 12547  0026C2  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
 12548  0026C4  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
 12549  0026C6  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
 12550  0026C8  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
 12551  0026CA  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
 12552  0026CC  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
 12553  0026CE  0E01               	movlw	1
 12554  0026D0  6E25               	movwf	___aodiv@sign^0,c
 12555  0026D2                     l5003:
 12556  0026D2  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
 12557  0026D4  EF70  F013         	goto	u4470
 12558  0026D8  EF6E  F013         	goto	u4471
 12559  0026DC                     u4471:
 12560  0026DC  EF82  F013         	goto	l5009
 12561  0026E0                     u4470:
 12562  0026E0  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
 12563  0026E2  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
 12564  0026E4  1E19               	comf	(___aodiv@dividend+5)^0,f,c
 12565  0026E6  1E18               	comf	(___aodiv@dividend+4)^0,f,c
 12566  0026E8  1E17               	comf	(___aodiv@dividend+3)^0,f,c
 12567  0026EA  1E16               	comf	(___aodiv@dividend+2)^0,f,c
 12568  0026EC  1E15               	comf	(___aodiv@dividend+1)^0,f,c
 12569  0026EE  6C14               	negf	___aodiv@dividend^0,c
 12570  0026F0  0E00               	movlw	0
 12571  0026F2  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
 12572  0026F4  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
 12573  0026F6  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
 12574  0026F8  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
 12575  0026FA  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
 12576  0026FC  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
 12577  0026FE  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
 12578  002700  0E01               	movlw	1
 12579  002702  1A25               	xorwf	___aodiv@sign^0,f,c
 12580  002704                     l5009:
 12581  002704  EE20  F026         	lfsr	2,___aodiv@quotient
 12582  002708  0E07               	movlw	7
 12583  00270A                     u4481:
 12584  00270A  6ADE               	clrf	postinc2,c
 12585  00270C  06E8               	decf	wreg,f,c
 12586  00270E  E2FD               	bc	u4481
 12587  002710  501C               	movf	___aodiv@divisor^0,w,c
 12588  002712  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
 12589  002714  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
 12590  002716  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
 12591  002718  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
 12592  00271A  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
 12593  00271C  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
 12594  00271E  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
 12595  002720  B4D8               	btfsc	status,2,c
 12596  002722  EF95  F013         	goto	u4491
 12597  002726  EF97  F013         	goto	u4490
 12598  00272A                     u4491:
 12599  00272A  EFE9  F013         	goto	l5031
 12600  00272E                     u4490:
 12601  00272E  0E01               	movlw	1
 12602  002730  6E24               	movwf	___aodiv@counter^0,c
 12603  002732  EFA5  F013         	goto	l5017
 12604  002736                     l5015:
 12605  002736  90D8               	bcf	status,0,c
 12606  002738  361C               	rlcf	___aodiv@divisor^0,f,c
 12607  00273A  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
 12608  00273C  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
 12609  00273E  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
 12610  002740  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
 12611  002742  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
 12612  002744  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
 12613  002746  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
 12614  002748  2A24               	incf	___aodiv@counter^0,f,c
 12615  00274A                     l5017:
 12616  00274A  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
 12617  00274C  EFAA  F013         	goto	u4501
 12618  002750  EFAC  F013         	goto	u4500
 12619  002754                     u4501:
 12620  002754  EF9B  F013         	goto	l5015
 12621  002758                     u4500:
 12622  002758                     l5019:
 12623  002758  90D8               	bcf	status,0,c
 12624  00275A  3626               	rlcf	___aodiv@quotient^0,f,c
 12625  00275C  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
 12626  00275E  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
 12627  002760  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
 12628  002762  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
 12629  002764  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
 12630  002766  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
 12631  002768  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
 12632  00276A  501C               	movf	___aodiv@divisor^0,w,c
 12633  00276C  5C14               	subwf	___aodiv@dividend^0,w,c
 12634  00276E  501D               	movf	(___aodiv@divisor+1)^0,w,c
 12635  002770  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
 12636  002772  501E               	movf	(___aodiv@divisor+2)^0,w,c
 12637  002774  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
 12638  002776  501F               	movf	(___aodiv@divisor+3)^0,w,c
 12639  002778  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
 12640  00277A  5020               	movf	(___aodiv@divisor+4)^0,w,c
 12641  00277C  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
 12642  00277E  5021               	movf	(___aodiv@divisor+5)^0,w,c
 12643  002780  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
 12644  002782  5022               	movf	(___aodiv@divisor+6)^0,w,c
 12645  002784  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
 12646  002786  5023               	movf	(___aodiv@divisor+7)^0,w,c
 12647  002788  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
 12648  00278A  A0D8               	btfss	status,0,c
 12649  00278C  EFCA  F013         	goto	u4511
 12650  002790  EFCC  F013         	goto	u4510
 12651  002794                     u4511:
 12652  002794  EFDD  F013         	goto	l5027
 12653  002798                     u4510:
 12654  002798  501C               	movf	___aodiv@divisor^0,w,c
 12655  00279A  5E14               	subwf	___aodiv@dividend^0,f,c
 12656  00279C  501D               	movf	(___aodiv@divisor+1)^0,w,c
 12657  00279E  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
 12658  0027A0  501E               	movf	(___aodiv@divisor+2)^0,w,c
 12659  0027A2  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
 12660  0027A4  501F               	movf	(___aodiv@divisor+3)^0,w,c
 12661  0027A6  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
 12662  0027A8  5020               	movf	(___aodiv@divisor+4)^0,w,c
 12663  0027AA  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
 12664  0027AC  5021               	movf	(___aodiv@divisor+5)^0,w,c
 12665  0027AE  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
 12666  0027B0  5022               	movf	(___aodiv@divisor+6)^0,w,c
 12667  0027B2  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
 12668  0027B4  5023               	movf	(___aodiv@divisor+7)^0,w,c
 12669  0027B6  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
 12670  0027B8  8026               	bsf	___aodiv@quotient^0,0,c
 12671  0027BA                     l5027:
 12672  0027BA  90D8               	bcf	status,0,c
 12673  0027BC  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
 12674  0027BE  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
 12675  0027C0  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
 12676  0027C2  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
 12677  0027C4  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
 12678  0027C6  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
 12679  0027C8  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
 12680  0027CA  321C               	rrcf	___aodiv@divisor^0,f,c
 12681  0027CC  2E24               	decfsz	___aodiv@counter^0,f,c
 12682  0027CE  EFAC  F013         	goto	l5019
 12683  0027D2                     l5031:
 12684  0027D2  5025               	movf	___aodiv@sign^0,w,c
 12685  0027D4  B4D8               	btfsc	status,2,c
 12686  0027D6  EFEF  F013         	goto	u4521
 12687  0027DA  EFF1  F013         	goto	u4520
 12688  0027DE                     u4521:
 12689  0027DE  EF01  F014         	goto	l5035
 12690  0027E2                     u4520:
 12691  0027E2  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
 12692  0027E4  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
 12693  0027E6  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
 12694  0027E8  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
 12695  0027EA  1E29               	comf	(___aodiv@quotient+3)^0,f,c
 12696  0027EC  1E28               	comf	(___aodiv@quotient+2)^0,f,c
 12697  0027EE  1E27               	comf	(___aodiv@quotient+1)^0,f,c
 12698  0027F0  6C26               	negf	___aodiv@quotient^0,c
 12699  0027F2  0E00               	movlw	0
 12700  0027F4  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
 12701  0027F6  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
 12702  0027F8  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
 12703  0027FA  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
 12704  0027FC  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
 12705  0027FE  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
 12706  002800  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
 12707  002802                     l5035:
 12708  002802  C026  F014         	movff	___aodiv@quotient,?___aodiv
 12709  002806  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
 12710  00280A  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
 12711  00280E  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
 12712  002812  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
 12713  002816  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
 12714  00281A  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
 12715  00281E  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
 12716  002822  0012               	return		;funcret
 12717  002824                     __end_of___aodiv:
 12718                           	callstack 0
 12719                           
 12720 ;; *************** function _ctoa *****************
 12721 ;; Defined at:
 12722 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12723 ;; Parameters:    Size  Location     Type
 12724 ;;  fp              2   48[COMRAM] PTR struct _IO_FILE
 12725 ;;		 -> NULL(0), 
 12726 ;;  c               1   50[COMRAM] unsigned char 
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;  w               2   51[COMRAM] int 
 12729 ;;  l               2    0        int 
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  2   48[COMRAM] int 
 12732 ;; Registers used:
 12733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12739 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12742 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12743 ;;Total ram usage:        5 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    9
 12746 ;; This function calls:
 12747 ;;		_pad
 12748 ;; This function is called by:
 12749 ;;		_vfpfcnvrt
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           	psect	text41
 12754  00318C                     __ptext41:
 12755                           	callstack 0
 12756  00318C                     _ctoa:
 12757                           	callstack 18
 12758  00318C                     
 12759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 12760  00318C  5039               	movf	_width^0,w,c
 12761  00318E  103A               	iorwf	(_width+1)^0,w,c
 12762  003190  A4D8               	btfss	status,2,c
 12763  003192  EFCD  F018         	goto	u4821
 12764  003196  EFCF  F018         	goto	u4820
 12765  00319A                     u4821:
 12766  00319A  EFD5  F018         	goto	l5177
 12767  00319E                     u4820:
 12768  00319E  C039  F034         	movff	_width,ctoa@w
 12769  0031A2  C03A  F035         	movff	_width+1,ctoa@w+1
 12770  0031A6  EFDB  F018         	goto	l5179
 12771  0031AA                     l5177:
 12772  0031AA  0EFF               	movlw	255
 12773  0031AC  2439               	addwf	_width^0,w,c
 12774  0031AE  6E34               	movwf	ctoa@w^0,c
 12775  0031B0  0EFF               	movlw	255
 12776  0031B2  203A               	addwfc	(_width+1)^0,w,c
 12777  0031B4  6E35               	movwf	(ctoa@w+1)^0,c
 12778  0031B6                     l5179:
 12779                           
 12780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 267:     dbuf[0] 
      +                          = c;
 12781  0031B6  C033  F180         	movff	ctoa@c,_dbuf
 12782  0031BA                     
 12783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 268:     dbuf[1] 
      +                          = '\0';
 12784  0031BA  0E00               	movlw	0
 12785  0031BC  0101               	movlb	1	; () banked
 12786  0031BE  6F81               	movwf	(_dbuf+1)& (0+255),b
 12787  0031C0                     
 12788                           ; BSR set to: 1
 12789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 269:     return p
      +                          ad(fp, &dbuf[0], w);
 12790  0031C0  C031  F026         	movff	ctoa@fp,pad@fp
 12791  0031C4  C032  F027         	movff	ctoa@fp+1,pad@fp+1
 12792  0031C8  0E80               	movlw	low _dbuf
 12793  0031CA  6E28               	movwf	pad@buf^0,c
 12794  0031CC  0E01               	movlw	high _dbuf
 12795  0031CE  6E29               	movwf	(pad@buf+1)^0,c
 12796  0031D0  C034  F02A         	movff	ctoa@w,pad@p
 12797  0031D4  C035  F02B         	movff	ctoa@w+1,pad@p+1
 12798  0031D8  EC60  F016         	call	_pad	;wreg free
 12799  0031DC  C026  F031         	movff	?_pad,?_ctoa
 12800  0031E0  C027  F032         	movff	?_pad+1,?_ctoa+1
 12801  0031E4  0012               	return		;funcret
 12802  0031E6                     __end_of_ctoa:
 12803                           	callstack 0
 12804                           
 12805 ;; *************** function _pad *****************
 12806 ;; Defined at:
 12807 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12808 ;; Parameters:    Size  Location     Type
 12809 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
 12810 ;;		 -> NULL(0), 
 12811 ;;  buf             2   39[COMRAM] PTR unsigned char 
 12812 ;;		 -> dbuf(32), 
 12813 ;;  p               2   41[COMRAM] int 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;  w               2   46[COMRAM] int 
 12816 ;;  i               2   44[COMRAM] int 
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  2   37[COMRAM] int 
 12819 ;; Registers used:
 12820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12826 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12827 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12829 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12830 ;;Total ram usage:       11 bytes
 12831 ;; Hardware stack levels used:    1
 12832 ;; Hardware stack levels required when called:    8
 12833 ;; This function calls:
 12834 ;;		_fputc
 12835 ;;		_fputs
 12836 ;;		_strlen
 12837 ;; This function is called by:
 12838 ;;		_ctoa
 12839 ;;		_dtoa
 12840 ;;		_utoa
 12841 ;;		_xtoa
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           	psect	text42
 12846  002CC0                     __ptext42:
 12847                           	callstack 0
 12848  002CC0                     _pad:
 12849                           	callstack 18
 12850  002CC0                     
 12851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12852  002CC0  A03D               	btfss	_flags^0,0,c
 12853  002CC2  EF65  F016         	goto	u4661
 12854  002CC6  EF67  F016         	goto	u4660
 12855  002CCA                     u4661:
 12856  002CCA  EF71  F016         	goto	l5117
 12857  002CCE                     u4660:
 12858  002CCE                     
 12859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12860  002CCE  C028  F01F         	movff	pad@buf,fputs@s
 12861  002CD2  C029  F020         	movff	pad@buf+1,fputs@s+1
 12862  002CD6  C026  F021         	movff	pad@fp,fputs@fp
 12863  002CDA  C027  F022         	movff	pad@fp+1,fputs@fp+1
 12864  002CDE  EC3E  F019         	call	_fputs	;wreg free
 12865  002CE2                     l5117:
 12866                           
 12867                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12868  002CE2  BE2B               	btfsc	(pad@p+1)^0,7,c
 12869  002CE4  EF76  F016         	goto	u4671
 12870  002CE8  EF78  F016         	goto	u4670
 12871  002CEC                     u4671:
 12872  002CEC  EF7E  F016         	goto	l5121
 12873  002CF0                     u4670:
 12874  002CF0  C02A  F02F         	movff	pad@p,pad@w
 12875  002CF4  C02B  F030         	movff	pad@p+1,pad@w+1
 12876  002CF8  EF82  F016         	goto	l1434
 12877  002CFC                     l5121:
 12878  002CFC  0E00               	movlw	0
 12879  002CFE  6E30               	movwf	(pad@w+1)^0,c
 12880  002D00  0E00               	movlw	0
 12881  002D02  6E2F               	movwf	pad@w^0,c
 12882  002D04                     l1434:
 12883                           
 12884                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12885  002D04  0E00               	movlw	0
 12886  002D06  6E2E               	movwf	(pad@i+1)^0,c
 12887  002D08  0E00               	movlw	0
 12888  002D0A  6E2D               	movwf	pad@i^0,c
 12889                           
 12890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12891  002D0C  EF94  F016         	goto	l5127
 12892  002D10                     l5123:
 12893                           
 12894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12895  002D10  0E00               	movlw	0
 12896  002D12  6E17               	movwf	(fputc@c+1)^0,c
 12897  002D14  0E20               	movlw	32
 12898  002D16  6E16               	movwf	fputc@c^0,c
 12899  002D18  C026  F018         	movff	pad@fp,fputc@fp
 12900  002D1C  C027  F019         	movff	pad@fp+1,fputc@fp+1
 12901  002D20  EC64  F017         	call	_fputc	;wreg free
 12902  002D24                     
 12903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12904  002D24  4A2D               	infsnz	pad@i^0,f,c
 12905  002D26  2A2E               	incf	(pad@i+1)^0,f,c
 12906  002D28                     l5127:
 12907                           
 12908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12909  002D28  502F               	movf	pad@w^0,w,c
 12910  002D2A  5C2D               	subwf	pad@i^0,w,c
 12911  002D2C  502E               	movf	(pad@i+1)^0,w,c
 12912  002D2E  0A80               	xorlw	128
 12913  002D30  6E2C               	movwf	??_pad^0,c
 12914  002D32  5030               	movf	(pad@w+1)^0,w,c
 12915  002D34  0A80               	xorlw	128
 12916  002D36  582C               	subwfb	??_pad^0,w,c
 12917  002D38  A0D8               	btfss	status,0,c
 12918  002D3A  EFA1  F016         	goto	u4681
 12919  002D3E  EFA3  F016         	goto	u4680
 12920  002D42                     u4681:
 12921  002D42  EF88  F016         	goto	l5123
 12922  002D46                     u4680:
 12923  002D46                     
 12924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12925  002D46  B03D               	btfsc	_flags^0,0,c
 12926  002D48  EFA8  F016         	goto	u4691
 12927  002D4C  EFAA  F016         	goto	u4690
 12928  002D50                     u4691:
 12929  002D50  EFB4  F016         	goto	l5131
 12930  002D54                     u4690:
 12931  002D54                     
 12932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12933  002D54  C028  F01F         	movff	pad@buf,fputs@s
 12934  002D58  C029  F020         	movff	pad@buf+1,fputs@s+1
 12935  002D5C  C026  F021         	movff	pad@fp,fputs@fp
 12936  002D60  C027  F022         	movff	pad@fp+1,fputs@fp+1
 12937  002D64  EC3E  F019         	call	_fputs	;wreg free
 12938  002D68                     l5131:
 12939                           
 12940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12941  002D68  C028  F014         	movff	pad@buf,strlen@s
 12942  002D6C  C029  F015         	movff	pad@buf+1,strlen@s+1
 12943  002D70  EC48  F01A         	call	_strlen	;wreg free
 12944  002D74  502F               	movf	pad@w^0,w,c
 12945  002D76  2414               	addwf	?_strlen^0,w,c
 12946  002D78  6E26               	movwf	?_pad^0,c
 12947  002D7A  5030               	movf	(pad@w+1)^0,w,c
 12948  002D7C  2015               	addwfc	(?_strlen+1)^0,w,c
 12949  002D7E  6E27               	movwf	(?_pad+1)^0,c
 12950  002D80  0012               	return		;funcret
 12951  002D82                     __end_of_pad:
 12952                           	callstack 0
 12953                           
 12954 ;; *************** function _strlen *****************
 12955 ;; Defined at:
 12956 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12957 ;; Parameters:    Size  Location     Type
 12958 ;;  s               2   19[COMRAM] PTR const unsigned char 
 12959 ;;		 -> dbuf(32), 
 12960 ;; Auto vars:     Size  Location     Type
 12961 ;;  a               2   21[COMRAM] PTR const unsigned char 
 12962 ;;		 -> dbuf(32), 
 12963 ;; Return value:  Size  Location     Type
 12964 ;;                  2   19[COMRAM] unsigned int 
 12965 ;; Registers used:
 12966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/0
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12975 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12976 ;;Total ram usage:        4 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; Hardware stack levels required when called:    4
 12979 ;; This function calls:
 12980 ;;		Nothing
 12981 ;; This function is called by:
 12982 ;;		_pad
 12983 ;; This function uses a non-reentrant model
 12984 ;;
 12985                           
 12986                           	psect	text43
 12987  003490                     __ptext43:
 12988                           	callstack 0
 12989  003490                     _strlen:
 12990                           	callstack 21
 12991  003490  C014  F016         	movff	strlen@s,strlen@a
 12992  003494  C015  F017         	movff	strlen@s+1,strlen@a+1
 12993  003498  EF50  F01A         	goto	l4979
 12994  00349C                     l4977:
 12995  00349C  4A14               	infsnz	strlen@s^0,f,c
 12996  00349E  2A15               	incf	(strlen@s+1)^0,f,c
 12997  0034A0                     l4979:
 12998  0034A0  C014  FFD9         	movff	strlen@s,fsr2l
 12999  0034A4  C015  FFDA         	movff	strlen@s+1,fsr2h
 13000  0034A8  50DF               	movf	indf2,w,c
 13001  0034AA  A4D8               	btfss	status,2,c
 13002  0034AC  EF5A  F01A         	goto	u4431
 13003  0034B0  EF5C  F01A         	goto	u4430
 13004  0034B4                     u4431:
 13005  0034B4  EF4E  F01A         	goto	l4977
 13006  0034B8                     u4430:
 13007  0034B8  5016               	movf	strlen@a^0,w,c
 13008  0034BA  5C14               	subwf	strlen@s^0,w,c
 13009  0034BC  6E14               	movwf	?_strlen^0,c
 13010  0034BE  5017               	movf	(strlen@a+1)^0,w,c
 13011  0034C0  5815               	subwfb	(strlen@s+1)^0,w,c
 13012  0034C2  6E15               	movwf	(?_strlen+1)^0,c
 13013  0034C4  0012               	return		;funcret
 13014  0034C6                     __end_of_strlen:
 13015                           	callstack 0
 13016                           
 13017 ;; *************** function _fputs *****************
 13018 ;; Defined at:
 13019 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 13020 ;; Parameters:    Size  Location     Type
 13021 ;;  s               2   30[COMRAM] PTR const unsigned char 
 13022 ;;		 -> dbuf(32), 
 13023 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 13024 ;;		 -> NULL(0), 
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;  i               2   35[COMRAM] int 
 13027 ;;  c               1   34[COMRAM] unsigned char 
 13028 ;; Return value:  Size  Location     Type
 13029 ;;                  2   30[COMRAM] int 
 13030 ;; Registers used:
 13031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13032 ;; Tracked objects:
 13033 ;;		On entry : 0/0
 13034 ;;		On exit  : 0/0
 13035 ;;		Unchanged: 0/0
 13036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13038 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13040 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13041 ;;Total ram usage:        7 bytes
 13042 ;; Hardware stack levels used:    1
 13043 ;; Hardware stack levels required when called:    7
 13044 ;; This function calls:
 13045 ;;		_fputc
 13046 ;; This function is called by:
 13047 ;;		_pad
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           	psect	text44
 13052  00327C                     __ptext44:
 13053                           	callstack 0
 13054  00327C                     _fputs:
 13055                           	callstack 18
 13056  00327C  0E00               	movlw	0
 13057  00327E  6E25               	movwf	(fputs@i+1)^0,c
 13058  003280  0E00               	movlw	0
 13059  003282  6E24               	movwf	fputs@i^0,c
 13060  003284  EF4F  F019         	goto	l4973
 13061  003288                     l4969:
 13062  003288  C023  F016         	movff	fputs@c,fputc@c
 13063  00328C  6A17               	clrf	(fputc@c+1)^0,c
 13064  00328E  C021  F018         	movff	fputs@fp,fputc@fp
 13065  003292  C022  F019         	movff	fputs@fp+1,fputc@fp+1
 13066  003296  EC64  F017         	call	_fputc	;wreg free
 13067  00329A  4A24               	infsnz	fputs@i^0,f,c
 13068  00329C  2A25               	incf	(fputs@i+1)^0,f,c
 13069  00329E                     l4973:
 13070  00329E  5024               	movf	fputs@i^0,w,c
 13071  0032A0  241F               	addwf	fputs@s^0,w,c
 13072  0032A2  6ED9               	movwf	fsr2l,c
 13073  0032A4  5025               	movf	(fputs@i+1)^0,w,c
 13074  0032A6  2020               	addwfc	(fputs@s+1)^0,w,c
 13075  0032A8  6EDA               	movwf	fsr2h,c
 13076  0032AA  50DF               	movf	indf2,w,c
 13077  0032AC  6E23               	movwf	fputs@c^0,c
 13078  0032AE  5023               	movf	fputs@c^0,w,c
 13079  0032B0  A4D8               	btfss	status,2,c
 13080  0032B2  EF5D  F019         	goto	u4421
 13081  0032B6  EF5F  F019         	goto	u4420
 13082  0032BA                     u4421:
 13083  0032BA  EF44  F019         	goto	l4969
 13084  0032BE                     u4420:
 13085  0032BE  0012               	return		;funcret
 13086  0032C0                     __end_of_fputs:
 13087                           	callstack 0
 13088                           
 13089 ;; *************** function _fputc *****************
 13090 ;; Defined at:
 13091 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;  c               2   21[COMRAM] int 
 13094 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
 13095 ;;		 -> NULL(0), 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;		None
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  2   21[COMRAM] int 
 13100 ;; Registers used:
 13101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13109 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13110 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13111 ;;Total ram usage:        9 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:    6
 13114 ;; This function calls:
 13115 ;;		_putch
 13116 ;; This function is called by:
 13117 ;;		_pad
 13118 ;;		_vfpfcnvrt
 13119 ;;		_fputs
 13120 ;; This function uses a non-reentrant model
 13121 ;;
 13122                           
 13123                           	psect	text45
 13124  002EC8                     __ptext45:
 13125                           	callstack 0
 13126  002EC8                     _fputc:
 13127                           	callstack 18
 13128  002EC8  5018               	movf	fputc@fp^0,w,c
 13129  002ECA  1019               	iorwf	(fputc@fp+1)^0,w,c
 13130  002ECC  B4D8               	btfsc	status,2,c
 13131  002ECE  EF6B  F017         	goto	u4381
 13132  002ED2  EF6D  F017         	goto	u4380
 13133  002ED6                     u4381:
 13134  002ED6  EF76  F017         	goto	l4957
 13135  002EDA                     u4380:
 13136  002EDA  5018               	movf	fputc@fp^0,w,c
 13137  002EDC  1019               	iorwf	(fputc@fp+1)^0,w,c
 13138  002EDE  A4D8               	btfss	status,2,c
 13139  002EE0  EF74  F017         	goto	u4391
 13140  002EE4  EF76  F017         	goto	u4390
 13141  002EE8                     u4391:
 13142  002EE8  EF7B  F017         	goto	l4959
 13143  002EEC                     u4390:
 13144  002EEC                     l4957:
 13145  002EEC  5016               	movf	fputc@c^0,w,c
 13146  002EEE  EC7E  F01B         	call	_putch
 13147  002EF2  EFAE  F017         	goto	l1634
 13148  002EF6                     l4959:
 13149  002EF6  EE20 F004          	lfsr	2,4
 13150  002EFA  5018               	movf	fputc@fp^0,w,c
 13151  002EFC  26D9               	addwf	fsr2l,f,c
 13152  002EFE  5019               	movf	(fputc@fp+1)^0,w,c
 13153  002F00  22DA               	addwfc	fsr2h,f,c
 13154  002F02  50DE               	movf	postinc2,w,c
 13155  002F04  10DE               	iorwf	postinc2,w,c
 13156  002F06  B4D8               	btfsc	status,2,c
 13157  002F08  EF88  F017         	goto	u4401
 13158  002F0C  EF8A  F017         	goto	u4400
 13159  002F10                     u4401:
 13160  002F10  EFA5  F017         	goto	l4963
 13161  002F14                     u4400:
 13162  002F14  EE20 F004          	lfsr	2,4
 13163  002F18  5018               	movf	fputc@fp^0,w,c
 13164  002F1A  26D9               	addwf	fsr2l,f,c
 13165  002F1C  5019               	movf	(fputc@fp+1)^0,w,c
 13166  002F1E  22DA               	addwfc	fsr2h,f,c
 13167  002F20  EE10 F002          	lfsr	1,2
 13168  002F24  5018               	movf	fputc@fp^0,w,c
 13169  002F26  26E1               	addwf	fsr1l,f,c
 13170  002F28  5019               	movf	(fputc@fp+1)^0,w,c
 13171  002F2A  22E2               	addwfc	fsr1h,f,c
 13172  002F2C  50DE               	movf	postinc2,w,c
 13173  002F2E  5CE6               	subwf	postinc1,w,c
 13174  002F30  50E6               	movf	postinc1,w,c
 13175  002F32  0A80               	xorlw	128
 13176  002F34  6E1E               	movwf	(??_fputc+4)^0,c
 13177  002F36  50DE               	movf	postinc2,w,c
 13178  002F38  0A80               	xorlw	128
 13179  002F3A  581E               	subwfb	(??_fputc+4)^0,w,c
 13180  002F3C  B0D8               	btfsc	status,0,c
 13181  002F3E  EFA3  F017         	goto	u4411
 13182  002F42  EFA5  F017         	goto	u4410
 13183  002F46                     u4411:
 13184  002F46  EFAE  F017         	goto	l1634
 13185  002F4A                     u4410:
 13186  002F4A                     l4963:
 13187  002F4A  EE20 F002          	lfsr	2,2
 13188  002F4E  5018               	movf	fputc@fp^0,w,c
 13189  002F50  26D9               	addwf	fsr2l,f,c
 13190  002F52  5019               	movf	(fputc@fp+1)^0,w,c
 13191  002F54  22DA               	addwfc	fsr2h,f,c
 13192  002F56  2ADE               	incf	postinc2,f,c
 13193  002F58  0E00               	movlw	0
 13194  002F5A  22DD               	addwfc	postdec2,f,c
 13195  002F5C                     l1634:
 13196  002F5C  0012               	return		;funcret
 13197  002F5E                     __end_of_fputc:
 13198                           	callstack 0
 13199                           
 13200 ;; *************** function _putch *****************
 13201 ;; Defined at:
 13202 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 13203 ;; Parameters:    Size  Location     Type
 13204 ;;  txData          1    wreg     unsigned char 
 13205 ;; Auto vars:     Size  Location     Type
 13206 ;;  txData          1   20[COMRAM] unsigned char 
 13207 ;; Return value:  Size  Location     Type
 13208 ;;                  1    wreg      void 
 13209 ;; Registers used:
 13210 ;;		wreg, status,2, cstack
 13211 ;; Tracked objects:
 13212 ;;		On entry : 0/0
 13213 ;;		On exit  : 0/0
 13214 ;;		Unchanged: 0/0
 13215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13220 ;;Total ram usage:        1 bytes
 13221 ;; Hardware stack levels used:    1
 13222 ;; Hardware stack levels required when called:    5
 13223 ;; This function calls:
 13224 ;;		_EUSART1_Write
 13225 ;; This function is called by:
 13226 ;;		_fputc
 13227 ;; This function uses a non-reentrant model
 13228 ;;
 13229                           
 13230                           	psect	text46
 13231  0036FC                     __ptext46:
 13232                           	callstack 0
 13233  0036FC                     _putch:
 13234                           	callstack 18
 13235                           
 13236                           ;incstack = 0
 13237                           ;putch@txData stored from wreg
 13238  0036FC  6E15               	movwf	putch@txData^0,c
 13239  0036FE                     
 13240                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 13241  0036FE  5015               	movf	putch@txData^0,w,c
 13242  003700  EC3F  F01B         	call	_EUSART1_Write
 13243  003704  0012               	return		;funcret
 13244  003706                     __end_of_putch:
 13245                           	callstack 0
 13246                           
 13247 ;; *************** function _EUSART1_Write *****************
 13248 ;; Defined at:
 13249 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;  txData          1    wreg     unsigned char 
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;  txData          1   19[COMRAM] unsigned char 
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1    wreg      void 
 13256 ;; Registers used:
 13257 ;;		wreg
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13267 ;;Total ram usage:        1 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    4
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_putch
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           	psect	text47
 13278  00367E                     __ptext47:
 13279                           	callstack 0
 13280  00367E                     _EUSART1_Write:
 13281                           	callstack 18
 13282                           
 13283                           ;incstack = 0
 13284                           ;EUSART1_Write@txData stored from wreg
 13285  00367E  6E14               	movwf	EUSART1_Write@txData^0,c
 13286  003680                     l103:
 13287                           
 13288                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 13289  003680  A89E               	btfss	158,4,c	;volatile
 13290  003682  EF45  F01B         	goto	u4371
 13291  003686  EF47  F01B         	goto	u4370
 13292  00368A                     u4371:
 13293  00368A  EF40  F01B         	goto	l103
 13294  00368E                     u4370:
 13295  00368E                     
 13296                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 13297  00368E  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 13298  003692  0012               	return		;funcret
 13299  003694                     __end_of_EUSART1_Write:
 13300                           	callstack 0
 13301                           
 13302 ;; *************** function _atoi *****************
 13303 ;; Defined at:
 13304 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13305 ;; Parameters:    Size  Location     Type
 13306 ;;  s               2   26[COMRAM] PTR const unsigned char 
 13307 ;;		 -> STR_126(3), STR_125(3), STR_124(2), STR_123(4), 
 13308 ;;		 -> STR_122(6), STR_121(3), STR_120(3), STR_119(2), 
 13309 ;;		 -> STR_118(3), STR_117(2), STR_116(4), STR_115(28), 
 13310 ;;		 -> STR_114(26), STR_113(27), STR_112(62), STR_111(62), 
 13311 ;;		 -> STR_110(62), STR_109(62), STR_108(62), STR_107(62), 
 13312 ;;		 -> STR_106(62), STR_105(62), STR_104(62), STR_103(62), 
 13313 ;;		 -> STR_102(62), STR_101(62), STR_100(62), STR_99(62), 
 13314 ;;		 -> STR_98(62), STR_97(62), STR_96(62), STR_95(62), 
 13315 ;;		 -> STR_94(62), STR_93(62), STR_92(62), STR_91(62), 
 13316 ;;		 -> STR_90(62), STR_89(62), STR_88(62), STR_87(62), 
 13317 ;;		 -> STR_86(62), STR_85(62), STR_84(62), STR_83(62), 
 13318 ;;		 -> STR_82(62), STR_81(62), STR_80(62), STR_79(62), 
 13319 ;;		 -> STR_78(62), STR_77(3), STR_76(5), STR_75(2), 
 13320 ;;		 -> STR_74(5), STR_73(17), STR_72(17), STR_71(15), 
 13321 ;;		 -> STR_70(3), STR_69(5), STR_68(2), STR_67(5), 
 13322 ;;		 -> STR_66(19), STR_65(20), STR_64(28), STR_63(20), 
 13323 ;;		 -> STR_62(30), STR_61(21), STR_60(37), STR_59(22), 
 13324 ;;		 -> STR_58(33), STR_57(58), STR_56(48), STR_55(35), 
 13325 ;;		 -> STR_54(5), STR_53(25), STR_52(20), STR_51(71), 
 13326 ;;		 -> STR_50(50), STR_49(22), STR_48(33), STR_47(58), 
 13327 ;;		 -> STR_46(3), STR_45(68), STR_44(58), STR_43(7), 
 13328 ;;		 -> STR_42(2), STR_41(5), STR_40(31), STR_39(27), 
 13329 ;;		 -> STR_38(3), STR_37(76), STR_36(23), STR_35(30), 
 13330 ;;		 -> STR_34(31), STR_33(2), STR_32(2), STR_31(8), 
 13331 ;;		 -> STR_30(52), STR_29(32), STR_28(44), STR_27(49), 
 13332 ;;		 -> STR_26(52), STR_25(55), STR_24(43), STR_23(37), 
 13333 ;;		 -> STR_22(52), STR_21(24), STR_20(52), STR_19(24), 
 13334 ;;		 -> STR_18(21), STR_17(7), STR_16(15), STR_15(52), 
 13335 ;;		 -> STR_14(21), STR_13(3), STR_12(5), STR_11(2), 
 13336 ;;		 -> STR_10(5), STR_9(17), STR_8(29), STR_7(54), 
 13337 ;;		 -> STR_6(5), STR_5(3), STR_4(40), STR_3(9), 
 13338 ;;		 -> STR_2(21), STR_1(9), 
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;  n               2   39[COMRAM] int 
 13341 ;;  neg             2   32[COMRAM] int 
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  2   26[COMRAM] int 
 13344 ;; Registers used:
 13345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13352 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13353 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13354 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13355 ;;Total ram usage:       15 bytes
 13356 ;; Hardware stack levels used:    1
 13357 ;; Hardware stack levels required when called:    5
 13358 ;; This function calls:
 13359 ;;		___wmul
 13360 ;;		_isdigit
 13361 ;;		_isspace
 13362 ;; This function is called by:
 13363 ;;		_vfpfcnvrt
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           	psect	text48
 13368  002502                     __ptext48:
 13369                           	callstack 0
 13370  002502                     _atoi:
 13371                           	callstack 22
 13372  002502  0E00               	movlw	0
 13373  002504  6E29               	movwf	(atoi@n+1)^0,c
 13374  002506  0E00               	movlw	0
 13375  002508  6E28               	movwf	atoi@n^0,c
 13376  00250A  0E00               	movlw	0
 13377  00250C  6E22               	movwf	(atoi@neg+1)^0,c
 13378  00250E  0E00               	movlw	0
 13379  002510  6E21               	movwf	atoi@neg^0,c
 13380  002512  EF8D  F012         	goto	l5355
 13381  002516                     l5353:
 13382  002516  4A1B               	infsnz	atoi@s^0,f,c
 13383  002518  2A1C               	incf	(atoi@s+1)^0,f,c
 13384  00251A                     l5355:
 13385  00251A  0E01               	movlw	1
 13386  00251C  6E27               	movwf	_atoi$2036^0,c
 13387  00251E  C01B  FFF6         	movff	atoi@s,tblptrl
 13388  002522  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13389  002526                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13390  002526  6AF8               	clrf	tblptru,c
 13391  002528                     	endif
 13392  002528                     	if	0	;tblptru may be non-zero
 13393  002528                     	endif
 13394  002528  0008               	tblrd		*
 13395  00252A  50F5               	movf	tablat,w,c
 13396  00252C  0A20               	xorlw	32
 13397  00252E  B4D8               	btfsc	status,2,c
 13398  002530  EF9C  F012         	goto	u5221
 13399  002534  EF9E  F012         	goto	u5220
 13400  002538                     u5221:
 13401  002538  EFBC  F012         	goto	l5363
 13402  00253C                     u5220:
 13403  00253C  0EF7               	movlw	247
 13404  00253E  6E1D               	movwf	??_atoi^0,c
 13405  002540  0EFF               	movlw	255
 13406  002542  6E1E               	movwf	(??_atoi+1)^0,c
 13407  002544  C01B  FFF6         	movff	atoi@s,tblptrl
 13408  002548  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13409  00254C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13410  00254C  6AF8               	clrf	tblptru,c
 13411  00254E                     	endif
 13412  00254E                     	if	0	;tblptru may be non-zero
 13413  00254E                     	endif
 13414  00254E  0008               	tblrd		*
 13415  002550  50F5               	movf	tablat,w,c
 13416  002552  6E1F               	movwf	(??_atoi+2)^0,c
 13417  002554  6A20               	clrf	(??_atoi+3)^0,c
 13418  002556  501D               	movf	??_atoi^0,w,c
 13419  002558  261F               	addwf	(??_atoi+2)^0,f,c
 13420  00255A  501E               	movf	(??_atoi+1)^0,w,c
 13421  00255C  2220               	addwfc	(??_atoi+3)^0,f,c
 13422  00255E  5020               	movf	(??_atoi+3)^0,w,c
 13423  002560  E109               	bnz	u5230
 13424  002562  0E05               	movlw	5
 13425  002564  5C1F               	subwf	(??_atoi+2)^0,w,c
 13426  002566  A0D8               	btfss	status,0,c
 13427  002568  EFB8  F012         	goto	u5231
 13428  00256C  EFBA  F012         	goto	u5230
 13429  002570                     u5231:
 13430  002570  EFBC  F012         	goto	l5363
 13431  002574                     u5230:
 13432  002574  0E00               	movlw	0
 13433  002576  6E27               	movwf	_atoi$2036^0,c
 13434  002578                     l5363:
 13435  002578  C027  F023         	movff	_atoi$2036,_atoi$2035
 13436  00257C  6A24               	clrf	(_atoi$2035+1)^0,c
 13437  00257E  5023               	movf	_atoi$2035^0,w,c
 13438  002580  1024               	iorwf	(_atoi$2035+1)^0,w,c
 13439  002582  A4D8               	btfss	status,2,c
 13440  002584  EFC6  F012         	goto	u5241
 13441  002588  EFC8  F012         	goto	u5240
 13442  00258C                     u5241:
 13443  00258C  EF8B  F012         	goto	l5353
 13444  002590                     u5240:
 13445  002590  EFD2  F012         	goto	l5373
 13446  002594                     l5369:
 13447  002594  0E00               	movlw	0
 13448  002596  6E22               	movwf	(atoi@neg+1)^0,c
 13449  002598  0E01               	movlw	1
 13450  00259A  6E21               	movwf	atoi@neg^0,c
 13451  00259C                     l5371:
 13452  00259C  4A1B               	infsnz	atoi@s^0,f,c
 13453  00259E  2A1C               	incf	(atoi@s+1)^0,f,c
 13454  0025A0  EF09  F013         	goto	l5379
 13455  0025A4                     l5373:
 13456  0025A4  C01B  FFF6         	movff	atoi@s,tblptrl
 13457  0025A8  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13458  0025AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13459  0025AC  6AF8               	clrf	tblptru,c
 13460  0025AE                     	endif
 13461  0025AE                     	if	0	;tblptru may be non-zero
 13462  0025AE                     	endif
 13463  0025AE  0008               	tblrd		*
 13464  0025B0  50F5               	movf	tablat,w,c
 13465  0025B2  6E1D               	movwf	??_atoi^0,c
 13466  0025B4  6A1E               	clrf	(??_atoi+1)^0,c
 13467                           
 13468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13469                           ; Switch size 1, requested type "simple"
 13470                           ; Number of cases is 1, Range of values is 0 to 0
 13471                           ; switch strategies available:
 13472                           ; Name         Instructions Cycles
 13473                           ; simple_byte            4     3 (average)
 13474                           ;	Chosen strategy is simple_byte
 13475  0025B6  501E               	movf	(??_atoi+1)^0,w,c
 13476  0025B8  0A00               	xorlw	0	; case 0
 13477  0025BA  B4D8               	btfsc	status,2,c
 13478  0025BC  EFE2  F012         	goto	l6407
 13479  0025C0  EF09  F013         	goto	l5379
 13480  0025C4                     l6407:
 13481                           
 13482                           ; Switch size 1, requested type "simple"
 13483                           ; Number of cases is 2, Range of values is 43 to 45
 13484                           ; switch strategies available:
 13485                           ; Name         Instructions Cycles
 13486                           ; simple_byte            7     4 (average)
 13487                           ;	Chosen strategy is simple_byte
 13488  0025C4  501D               	movf	??_atoi^0,w,c
 13489  0025C6  0A2B               	xorlw	43	; case 43
 13490  0025C8  B4D8               	btfsc	status,2,c
 13491  0025CA  EFCE  F012         	goto	l5371
 13492  0025CE  0A06               	xorlw	6	; case 45
 13493  0025D0  B4D8               	btfsc	status,2,c
 13494  0025D2  EFCA  F012         	goto	l5369
 13495  0025D6  EF09  F013         	goto	l5379
 13496  0025DA                     l5375:
 13497  0025DA  C028  F014         	movff	atoi@n,___wmul@multiplier
 13498  0025DE  C029  F015         	movff	atoi@n+1,___wmul@multiplier+1
 13499  0025E2  0E00               	movlw	0
 13500  0025E4  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 13501  0025E6  0E0A               	movlw	10
 13502  0025E8  6E16               	movwf	___wmul@multiplicand^0,c
 13503  0025EA  ECE7  F01A         	call	___wmul	;wreg free
 13504  0025EE  C01B  FFF6         	movff	atoi@s,tblptrl
 13505  0025F2  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13506  0025F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13507  0025F6  6AF8               	clrf	tblptru,c
 13508  0025F8                     	endif
 13509  0025F8                     	if	0	;tblptru may be non-zero
 13510  0025F8                     	endif
 13511  0025F8  0008               	tblrd		*
 13512  0025FA  50F5               	movf	tablat,w,c
 13513  0025FC  5E14               	subwf	?___wmul^0,f,c
 13514  0025FE  0E00               	movlw	0
 13515  002600  5A15               	subwfb	(?___wmul+1)^0,f,c
 13516  002602  0E30               	movlw	48
 13517  002604  2414               	addwf	?___wmul^0,w,c
 13518  002606  6E28               	movwf	atoi@n^0,c
 13519  002608  0E00               	movlw	0
 13520  00260A  2015               	addwfc	(?___wmul+1)^0,w,c
 13521  00260C  6E29               	movwf	(atoi@n+1)^0,c
 13522  00260E  EFCE  F012         	goto	l5371
 13523  002612                     l5379:
 13524  002612  0ED0               	movlw	208
 13525  002614  6E1D               	movwf	??_atoi^0,c
 13526  002616  0EFF               	movlw	255
 13527  002618  6E1E               	movwf	(??_atoi+1)^0,c
 13528  00261A  C01B  FFF6         	movff	atoi@s,tblptrl
 13529  00261E  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13530  002622                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13531  002622  6AF8               	clrf	tblptru,c
 13532  002624                     	endif
 13533  002624                     	if	0	;tblptru may be non-zero
 13534  002624                     	endif
 13535  002624  0008               	tblrd		*
 13536  002626  50F5               	movf	tablat,w,c
 13537  002628  6E1F               	movwf	(??_atoi+2)^0,c
 13538  00262A  6A20               	clrf	(??_atoi+3)^0,c
 13539  00262C  501D               	movf	??_atoi^0,w,c
 13540  00262E  261F               	addwf	(??_atoi+2)^0,f,c
 13541  002630  501E               	movf	(??_atoi+1)^0,w,c
 13542  002632  2220               	addwfc	(??_atoi+3)^0,f,c
 13543  002634  5020               	movf	(??_atoi+3)^0,w,c
 13544  002636  E10A               	bnz	u5250
 13545  002638  0E0A               	movlw	10
 13546  00263A  5C1F               	subwf	(??_atoi+2)^0,w,c
 13547  00263C  A0D8               	btfss	status,0,c
 13548  00263E  EF23  F013         	goto	u5251
 13549  002642  EF26  F013         	goto	u5250
 13550  002646                     u5251:
 13551  002646  0E01               	movlw	1
 13552  002648  EF27  F013         	goto	u5260
 13553  00264C                     u5250:
 13554  00264C  0E00               	movlw	0
 13555  00264E                     u5260:
 13556  00264E  6E25               	movwf	_atoi$2037^0,c
 13557  002650  6A26               	clrf	(_atoi$2037+1)^0,c
 13558  002652  5025               	movf	_atoi$2037^0,w,c
 13559  002654  1026               	iorwf	(_atoi$2037+1)^0,w,c
 13560  002656  A4D8               	btfss	status,2,c
 13561  002658  EF30  F013         	goto	u5271
 13562  00265C  EF32  F013         	goto	u5270
 13563  002660                     u5271:
 13564  002660  EFED  F012         	goto	l5375
 13565  002664                     u5270:
 13566  002664  5021               	movf	atoi@neg^0,w,c
 13567  002666  1022               	iorwf	(atoi@neg+1)^0,w,c
 13568  002668  A4D8               	btfss	status,2,c
 13569  00266A  EF39  F013         	goto	u5281
 13570  00266E  EF3B  F013         	goto	u5280
 13571  002672                     u5281:
 13572  002672  EF49  F013         	goto	l1593
 13573  002676                     u5280:
 13574  002676  C028  F01D         	movff	atoi@n,??_atoi
 13575  00267A  C029  F01E         	movff	atoi@n+1,??_atoi+1
 13576  00267E  1E1D               	comf	??_atoi^0,f,c
 13577  002680  1E1E               	comf	(??_atoi+1)^0,f,c
 13578  002682  4A1D               	infsnz	??_atoi^0,f,c
 13579  002684  2A1E               	incf	(??_atoi+1)^0,f,c
 13580  002686  C01D  F01B         	movff	??_atoi,?_atoi
 13581  00268A  C01E  F01C         	movff	??_atoi+1,?_atoi+1
 13582  00268E  EF4D  F013         	goto	l1596
 13583  002692                     l1593:
 13584  002692  C028  F01B         	movff	atoi@n,?_atoi
 13585  002696  C029  F01C         	movff	atoi@n+1,?_atoi+1
 13586  00269A                     l1596:
 13587  00269A  0012               	return		;funcret
 13588  00269C                     __end_of_atoi:
 13589                           	callstack 0
 13590                           
 13591 ;; *************** function _isspace *****************
 13592 ;; Defined at:
 13593 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;  c               2   19[COMRAM] int 
 13596 ;; Auto vars:     Size  Location     Type
 13597 ;;		None
 13598 ;; Return value:  Size  Location     Type
 13599 ;;                  2   19[COMRAM] int 
 13600 ;; Registers used:
 13601 ;;		wreg, status,2, status,0
 13602 ;; Tracked objects:
 13603 ;;		On entry : 0/0
 13604 ;;		On exit  : 0/0
 13605 ;;		Unchanged: 0/0
 13606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;Total ram usage:        7 bytes
 13612 ;; Hardware stack levels used:    1
 13613 ;; Hardware stack levels required when called:    4
 13614 ;; This function calls:
 13615 ;;		Nothing
 13616 ;; This function is called by:
 13617 ;;		_atoi
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text49
 13622  0031E6                     __ptext49:
 13623                           	callstack 0
 13624  0031E6                     _isspace:
 13625                           	callstack 22
 13626  0031E6  0E01               	movlw	1
 13627  0031E8  6E1A               	movwf	_isspace$2062^0,c
 13628  0031EA  0E20               	movlw	32
 13629  0031EC  1814               	xorwf	isspace@c^0,w,c
 13630  0031EE  1015               	iorwf	(isspace@c+1)^0,w,c
 13631  0031F0  B4D8               	btfsc	status,2,c
 13632  0031F2  EFFD  F018         	goto	u4801
 13633  0031F6  EFFF  F018         	goto	u4800
 13634  0031FA                     u4801:
 13635  0031FA  EF18  F019         	goto	l5169
 13636  0031FE                     u4800:
 13637  0031FE  0EF7               	movlw	247
 13638  003200  6E16               	movwf	??_isspace^0,c
 13639  003202  0EFF               	movlw	255
 13640  003204  6E17               	movwf	(??_isspace+1)^0,c
 13641  003206  C014  F018         	movff	isspace@c,??_isspace+2
 13642  00320A  C015  F019         	movff	isspace@c+1,??_isspace+3
 13643  00320E  5016               	movf	??_isspace^0,w,c
 13644  003210  2618               	addwf	(??_isspace+2)^0,f,c
 13645  003212  5017               	movf	(??_isspace+1)^0,w,c
 13646  003214  2219               	addwfc	(??_isspace+3)^0,f,c
 13647  003216  5019               	movf	(??_isspace+3)^0,w,c
 13648  003218  E109               	bnz	u4810
 13649  00321A  0E05               	movlw	5
 13650  00321C  5C18               	subwf	(??_isspace+2)^0,w,c
 13651  00321E  A0D8               	btfss	status,0,c
 13652  003220  EF14  F019         	goto	u4811
 13653  003224  EF16  F019         	goto	u4810
 13654  003228                     u4811:
 13655  003228  EF18  F019         	goto	l5169
 13656  00322C                     u4810:
 13657  00322C  0E00               	movlw	0
 13658  00322E  6E1A               	movwf	_isspace$2062^0,c
 13659  003230                     l5169:
 13660  003230  C01A  F014         	movff	_isspace$2062,?_isspace
 13661  003234  6A15               	clrf	(?_isspace+1)^0,c
 13662  003236  0012               	return		;funcret
 13663  003238                     __end_of_isspace:
 13664                           	callstack 0
 13665                           
 13666 ;; *************** function _isdigit *****************
 13667 ;; Defined at:
 13668 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13669 ;; Parameters:    Size  Location     Type
 13670 ;;  c               2   19[COMRAM] int 
 13671 ;; Auto vars:     Size  Location     Type
 13672 ;;		None
 13673 ;; Return value:  Size  Location     Type
 13674 ;;                  2   19[COMRAM] int 
 13675 ;; Registers used:
 13676 ;;		wreg, status,2, status,0
 13677 ;; Tracked objects:
 13678 ;;		On entry : 0/0
 13679 ;;		On exit  : 0/0
 13680 ;;		Unchanged: 0/0
 13681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13684 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13685 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13686 ;;Total ram usage:        6 bytes
 13687 ;; Hardware stack levels used:    1
 13688 ;; Hardware stack levels required when called:    4
 13689 ;; This function calls:
 13690 ;;		Nothing
 13691 ;; This function is called by:
 13692 ;;		_vfpfcnvrt
 13693 ;;		_atoi
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text50
 13698  003422                     __ptext50:
 13699                           	callstack 0
 13700  003422                     _isdigit:
 13701                           	callstack 23
 13702  003422  0ED0               	movlw	208
 13703  003424  6E16               	movwf	??_isdigit^0,c
 13704  003426  0EFF               	movlw	255
 13705  003428  6E17               	movwf	(??_isdigit+1)^0,c
 13706  00342A  C014  F018         	movff	isdigit@c,??_isdigit+2
 13707  00342E  C015  F019         	movff	isdigit@c+1,??_isdigit+3
 13708  003432  5016               	movf	??_isdigit^0,w,c
 13709  003434  2618               	addwf	(??_isdigit+2)^0,f,c
 13710  003436  5017               	movf	(??_isdigit+1)^0,w,c
 13711  003438  2219               	addwfc	(??_isdigit+3)^0,f,c
 13712  00343A  5019               	movf	(??_isdigit+3)^0,w,c
 13713  00343C  E10A               	bnz	u4780
 13714  00343E  0E0A               	movlw	10
 13715  003440  5C18               	subwf	(??_isdigit+2)^0,w,c
 13716  003442  A0D8               	btfss	status,0,c
 13717  003444  EF26  F01A         	goto	u4781
 13718  003448  EF29  F01A         	goto	u4780
 13719  00344C                     u4781:
 13720  00344C  0E01               	movlw	1
 13721  00344E  EF2A  F01A         	goto	u4790
 13722  003452                     u4780:
 13723  003452  0E00               	movlw	0
 13724  003454                     u4790:
 13725  003454  6E14               	movwf	?_isdigit^0,c
 13726  003456  6A15               	clrf	(?_isdigit+1)^0,c
 13727  003458  0012               	return		;funcret
 13728  00345A                     __end_of_isdigit:
 13729                           	callstack 0
 13730                           
 13731 ;; *************** function ___wmul *****************
 13732 ;; Defined at:
 13733 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  multiplier      2   19[COMRAM] unsigned int 
 13736 ;;  multiplicand    2   21[COMRAM] unsigned int 
 13737 ;; Auto vars:     Size  Location     Type
 13738 ;;  product         2   23[COMRAM] unsigned int 
 13739 ;; Return value:  Size  Location     Type
 13740 ;;                  2   19[COMRAM] unsigned int 
 13741 ;; Registers used:
 13742 ;;		wreg, status,2, status,0, prodl, prodh
 13743 ;; Tracked objects:
 13744 ;;		On entry : 0/0
 13745 ;;		On exit  : 0/0
 13746 ;;		Unchanged: 0/0
 13747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13751 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13752 ;;Total ram usage:        6 bytes
 13753 ;; Hardware stack levels used:    1
 13754 ;; Hardware stack levels required when called:    4
 13755 ;; This function calls:
 13756 ;;		Nothing
 13757 ;; This function is called by:
 13758 ;;		_atoi
 13759 ;; This function uses a non-reentrant model
 13760 ;;
 13761                           
 13762                           	psect	text51
 13763  0035CE                     __ptext51:
 13764                           	callstack 0
 13765  0035CE                     ___wmul:
 13766                           	callstack 22
 13767  0035CE  5014               	movf	___wmul@multiplier^0,w,c
 13768  0035D0  0216               	mulwf	___wmul@multiplicand^0,c
 13769  0035D2  CFF3 F018          	movff	prodl,___wmul@product
 13770  0035D6  CFF4 F019          	movff	prodh,___wmul@product+1
 13771  0035DA  5014               	movf	___wmul@multiplier^0,w,c
 13772  0035DC  0217               	mulwf	(___wmul@multiplicand+1)^0,c
 13773  0035DE  50F3               	movf	243,w,c
 13774  0035E0  2619               	addwf	(___wmul@product+1)^0,f,c
 13775  0035E2  5015               	movf	(___wmul@multiplier+1)^0,w,c
 13776  0035E4  0216               	mulwf	___wmul@multiplicand^0,c
 13777  0035E6  50F3               	movf	243,w,c
 13778  0035E8  2619               	addwf	(___wmul@product+1)^0,f,c
 13779  0035EA  C018  F014         	movff	___wmul@product,?___wmul
 13780  0035EE  C019  F015         	movff	___wmul@product+1,?___wmul+1
 13781  0035F2  0012               	return		;funcret
 13782  0035F4                     __end_of___wmul:
 13783                           	callstack 0
 13784                           
 13785 ;; *************** function _SPI2_ExchangeByte *****************
 13786 ;; Defined at:
 13787 ;;		line 92 in file "mcc_generated_files/spi2.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;  data            1    wreg     unsigned char 
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;  data            1   19[COMRAM] unsigned char 
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      unsigned char 
 13794 ;; Registers used:
 13795 ;;		wreg, status,2
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13805 ;;Total ram usage:        1 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; Hardware stack levels required when called:    4
 13808 ;; This function calls:
 13809 ;;		Nothing
 13810 ;; This function is called by:
 13811 ;;		_SDCARD_ReadBlock
 13812 ;;		_SDCARD_WriteBlock
 13813 ;;		_SDCARD_PollWriteComplete
 13814 ;;		_SDCARD_Initialize
 13815 ;;		_SPI2_WriteBlock
 13816 ;;		_SPI2_ReadBlock
 13817 ;; This function uses a non-reentrant model
 13818 ;;
 13819                           
 13820                           	psect	text52
 13821  00364E                     __ptext52:
 13822                           	callstack 0
 13823  00364E                     _SPI2_ExchangeByte:
 13824                           	callstack 25
 13825                           
 13826                           ;incstack = 0
 13827                           ;SPI2_ExchangeByte@data stored from wreg
 13828  00364E  6E14               	movwf	SPI2_ExchangeByte@data^0,c
 13829  003650                     
 13830                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 13831  003650  C014  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 13832  003654                     l344:
 13833  003654  AEA4               	btfss	164,7,c	;volatile
 13834  003656  EF2F  F01B         	goto	u5461
 13835  00365A  EF31  F01B         	goto	u5460
 13836  00365E                     u5461:
 13837  00365E  EF2A  F01B         	goto	l344
 13838  003662                     u5460:
 13839  003662                     
 13840                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 13841  003662  9EA4               	bcf	164,7,c	;volatile
 13842                           
 13843                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 13844  003664  506F               	movf	111,w,c	;volatile
 13845  003666  0012               	return		;funcret
 13846  003668                     __end_of_SPI2_ExchangeByte:
 13847                           	callstack 0
 13848                           
 13849 ;; *************** function _EUSART1_is_rx_ready *****************
 13850 ;; Defined at:
 13851 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 13852 ;; Parameters:    Size  Location     Type
 13853 ;;		None
 13854 ;; Auto vars:     Size  Location     Type
 13855 ;;		None
 13856 ;; Return value:  Size  Location     Type
 13857 ;;                  1    wreg      _Bool 
 13858 ;; Registers used:
 13859 ;;		wreg
 13860 ;; Tracked objects:
 13861 ;;		On entry : 0/0
 13862 ;;		On exit  : 0/0
 13863 ;;		Unchanged: 0/0
 13864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13869 ;;Total ram usage:        0 bytes
 13870 ;; Hardware stack levels used:    1
 13871 ;; Hardware stack levels required when called:    4
 13872 ;; This function calls:
 13873 ;;		Nothing
 13874 ;; This function is called by:
 13875 ;;		_main
 13876 ;; This function uses a non-reentrant model
 13877 ;;
 13878                           
 13879                           	psect	text53
 13880  003694                     __ptext53:
 13881                           	callstack 0
 13882  003694                     _EUSART1_is_rx_ready:
 13883                           	callstack 26
 13884  003694                     
 13885                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 13886  003694  BA9E               	btfsc	158,5,c	;volatile
 13887  003696  EF4F  F01B         	goto	u5471
 13888  00369A  EF52  F01B         	goto	u5470
 13889  00369E                     u5471:
 13890  00369E  0E01               	movlw	1
 13891  0036A0  EF53  F01B         	goto	u5476
 13892  0036A4                     u5470:
 13893  0036A4  0E00               	movlw	0
 13894  0036A6                     u5476:
 13895  0036A6  0012               	return		;funcret
 13896  0036A8                     __end_of_EUSART1_is_rx_ready:
 13897                           	callstack 0
 13898                           
 13899 ;; *************** function _EUSART1_Read *****************
 13900 ;; Defined at:
 13901 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;		None
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;		None
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  1    wreg      unsigned char 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/0
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13919 ;;Total ram usage:        0 bytes
 13920 ;; Hardware stack levels used:    1
 13921 ;; Hardware stack levels required when called:    4
 13922 ;; This function calls:
 13923 ;;		Nothing
 13924 ;; This function is called by:
 13925 ;;		_main
 13926 ;;		_getch
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text54
 13931  003580                     __ptext54:
 13932                           	callstack 0
 13933  003580                     _EUSART1_Read:
 13934                           	callstack 26
 13935  003580                     l96:
 13936                           
 13937                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 13938  003580  AA9E               	btfss	158,5,c	;volatile
 13939  003582  EFC5  F01A         	goto	u5481
 13940  003586  EFC7  F01A         	goto	u5480
 13941  00358A                     u5481:
 13942  00358A  EFC0  F01A         	goto	l96
 13943  00358E                     u5480:
 13944  00358E                     
 13945                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 13946  00358E  0E00               	movlw	0
 13947  003590  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
 13948  003592                     
 13949                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 13950  003592  A2AB               	btfss	171,1,c	;volatile
 13951  003594  EFCE  F01A         	goto	u5491
 13952  003598  EFD0  F01A         	goto	u5490
 13953  00359C                     u5491:
 13954  00359C  EFD2  F01A         	goto	l5607
 13955  0035A0                     u5490:
 13956  0035A0                     
 13957                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 13958  0035A0  98AB               	bcf	171,4,c	;volatile
 13959                           
 13960                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 13961  0035A2  88AB               	bsf	171,4,c	;volatile
 13962  0035A4                     l5607:
 13963                           
 13964                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 13965  0035A4  50AE               	movf	174,w,c	;volatile
 13966  0035A6  0012               	return		;funcret
 13967  0035A8                     __end_of_EUSART1_Read:
 13968                           	callstack 0
 13969                           
 13970 ;; *************** function _INTERRUPT_InterruptManager *****************
 13971 ;; Defined at:
 13972 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13973 ;; Parameters:    Size  Location     Type
 13974 ;;		None
 13975 ;; Auto vars:     Size  Location     Type
 13976 ;;		None
 13977 ;; Return value:  Size  Location     Type
 13978 ;;                  1    wreg      void 
 13979 ;; Registers used:
 13980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13981 ;; Tracked objects:
 13982 ;;		On entry : 0/0
 13983 ;;		On exit  : 0/0
 13984 ;;		Unchanged: 0/0
 13985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13988 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13990 ;;Total ram usage:        4 bytes
 13991 ;; Hardware stack levels used:    1
 13992 ;; Hardware stack levels required when called:    3
 13993 ;; This function calls:
 13994 ;;		_TMR0_ISR
 13995 ;; This function is called by:
 13996 ;;		Interrupt level 2
 13997 ;; This function uses a non-reentrant model
 13998 ;;
 13999                           
 14000                           	psect	intcode
 14001  000008                     __pintcode:
 14002                           	callstack 0
 14003  000008                     _INTERRUPT_InterruptManager:
 14004                           	callstack 17
 14005                           
 14006                           ;incstack = 0
 14007  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14008  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
 14009  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14010  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 14011  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 14012  00001A                     
 14013                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 14014  00001A  AAF2               	btfss	242,5,c	;volatile
 14015  00001C  EF12  F000         	goto	i2u375_41
 14016  000020  EF14  F000         	goto	i2u375_40
 14017  000024                     i2u375_41:
 14018  000024  EF1D  F000         	goto	i2l36
 14019  000028                     i2u375_40:
 14020  000028  A4F2               	btfss	242,2,c	;volatile
 14021  00002A  EF19  F000         	goto	i2u376_41
 14022  00002E  EF1B  F000         	goto	i2u376_40
 14023  000032                     i2u376_41:
 14024  000032  EF1D  F000         	goto	i2l36
 14025  000036                     i2u376_40:
 14026  000036                     
 14027                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 14028  000036  EC63  F01A         	call	_TMR0_ISR	;wreg free
 14029  00003A                     i2l36:
 14030  00003A  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14031  00003E  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14032  000042  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14033  000046  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14034  00004A  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14035  00004C  0011               	retfie		f
 14036  00004E                     __end_of_INTERRUPT_InterruptManager:
 14037                           	callstack 0
 14038                           
 14039 ;; *************** function _TMR0_ISR *****************
 14040 ;; Defined at:
 14041 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14042 ;; Parameters:    Size  Location     Type
 14043 ;;		None
 14044 ;; Auto vars:     Size  Location     Type
 14045 ;;		None
 14046 ;; Return value:  Size  Location     Type
 14047 ;;                  1    wreg      void 
 14048 ;; Registers used:
 14049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14050 ;; Tracked objects:
 14051 ;;		On entry : 0/0
 14052 ;;		On exit  : 0/0
 14053 ;;		Unchanged: 0/0
 14054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;Total ram usage:        0 bytes
 14060 ;; Hardware stack levels used:    1
 14061 ;; Hardware stack levels required when called:    2
 14062 ;; This function calls:
 14063 ;;		Absolute function
 14064 ;;		_TMR0_DefaultInterruptHandler
 14065 ;;		_myTMR0ISR
 14066 ;; This function is called by:
 14067 ;;		_INTERRUPT_InterruptManager
 14068 ;; This function uses a non-reentrant model
 14069 ;;
 14070                           
 14071                           	psect	text56
 14072  0034C6                     __ptext56:
 14073                           	callstack 0
 14074  0034C6                     _TMR0_ISR:
 14075                           	callstack 17
 14076  0034C6                     
 14077                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 14078  0034C6  94F2               	bcf	242,2,c	;volatile
 14079  0034C8                     
 14080                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 14081  0034C8  5042               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 14082  0034CA  6ED7               	movwf	215,c	;volatile
 14083  0034CC                     
 14084                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 14085  0034CC  C041  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 14086  0034D0                     
 14087                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 14088  0034D0  5043               	movf	_TMR0_InterruptHandler^0,w,c
 14089  0034D2  1044               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 14090  0034D4  B4D8               	btfsc	status,2,c
 14091  0034D6  EF6F  F01A         	goto	i2u347_41
 14092  0034DA  EF71  F01A         	goto	i2u347_40
 14093  0034DE                     i2u347_41:
 14094  0034DE  EF7D  F01A         	goto	i2l170
 14095  0034E2                     i2u347_40:
 14096  0034E2                     
 14097                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 14098  0034E2  D802               	call	i2u348_48
 14099  0034E4  EF7D  F01A         	goto	i2u348_49
 14100  0034E8                     i2u348_48:
 14101  0034E8  0005               	push	
 14102  0034EA  6EFA               	movwf	pclath,c
 14103  0034EC  5043               	movf	_TMR0_InterruptHandler^0,w,c
 14104  0034EE  6EFD               	movwf	tosl,c
 14105  0034F0  5044               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 14106  0034F2  6EFE               	movwf	tosh,c
 14107  0034F4  6AFF               	clrf	tosu,c
 14108  0034F6  50FA               	movf	pclath,w,c
 14109  0034F8  0012               	return		;indir
 14110  0034FA                     i2u348_49:
 14111  0034FA                     i2l170:
 14112  0034FA  0012               	return		;funcret
 14113  0034FC                     __end_of_TMR0_ISR:
 14114                           	callstack 0
 14115                           
 14116 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14117 ;; Defined at:
 14118 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;		None
 14121 ;; Auto vars:     Size  Location     Type
 14122 ;;		None
 14123 ;; Return value:  Size  Location     Type
 14124 ;;                  1    wreg      void 
 14125 ;; Registers used:
 14126 ;;		None
 14127 ;; Tracked objects:
 14128 ;;		On entry : 0/0
 14129 ;;		On exit  : 0/0
 14130 ;;		Unchanged: 0/0
 14131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14136 ;;Total ram usage:        0 bytes
 14137 ;; Hardware stack levels used:    1
 14138 ;; This function calls:
 14139 ;;		Nothing
 14140 ;; This function is called by:
 14141 ;;		_TMR0_Initialize
 14142 ;;		_TMR0_ISR
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	text57
 14147  00371C                     __ptext57:
 14148                           	callstack 0
 14149  00371C                     _TMR0_DefaultInterruptHandler:
 14150                           	callstack 18
 14151  00371C  0012               	return		;funcret
 14152  00371E                     __end_of_TMR0_DefaultInterruptHandler:
 14153                           	callstack 0
 14154                           
 14155 ;; *************** function _myTMR0ISR *****************
 14156 ;; Defined at:
 14157 ;;		line 456 in file "main.c"
 14158 ;; Parameters:    Size  Location     Type
 14159 ;;		None
 14160 ;; Auto vars:     Size  Location     Type
 14161 ;;  mic             2   12[COMRAM] unsigned short 
 14162 ;;  useBuffer1      1   14[COMRAM] unsigned char 
 14163 ;; Return value:  Size  Location     Type
 14164 ;;                  1    wreg      void 
 14165 ;; Registers used:
 14166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14167 ;; Tracked objects:
 14168 ;;		On entry : 0/0
 14169 ;;		On exit  : 0/0
 14170 ;;		Unchanged: 0/0
 14171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14173 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14176 ;;Total ram usage:        5 bytes
 14177 ;; Hardware stack levels used:    1
 14178 ;; Hardware stack levels required when called:    1
 14179 ;; This function calls:
 14180 ;;		_EPWM1_LoadDutyValue
 14181 ;;		_TMR0_ReadTimer
 14182 ;;		i2_TMR0_WriteTimer
 14183 ;; This function is called by:
 14184 ;;		_main
 14185 ;;		_TMR0_ISR
 14186 ;; This function uses a non-reentrant model
 14187 ;;
 14188                           
 14189                           	psect	text58
 14190  001D16                     __ptext58:
 14191                           	callstack 0
 14192  001D16                     _myTMR0ISR:
 14193                           	callstack 17
 14194  001D16                     
 14195                           ;main.c: 457:     ADCON0bits.GO_NOT_DONE = 1;
 14196  001D16  82C2               	bsf	194,1,c	;volatile
 14197  001D18                     
 14198                           ;main.c: 459:     TMR0_WriteTimer(0x10000 - (sampleRate - TMR0_ReadTimer()));
 14199  001D18  EC0A  F01B         	call	_TMR0_ReadTimer	;wreg free
 14200  001D1C  0100               	movlb	0	; () banked
 14201  001D1E  51D5               	movf	_sampleRate& (0+255),w,b
 14202  001D20  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 14203  001D22  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 14204  001D24  51D6               	movf	(_sampleRate+1)& (0+255),w,b
 14205  001D26  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 14206  001D28  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 14207  001D2A  EC83  F01B         	call	i2_TMR0_WriteTimer	;wreg free
 14208  001D2E                     
 14209                           ;main.c: 460:     static uint16_t bufferIndex = 0;;main.c: 461:     static myTMR0states_
      +                          t state = IDLE;;main.c: 462:     static uint8_t *buffer = sdCardBuffer1;;main.c: 463:   
      +                            uint8_t useBuffer1 = 1;
 14210  001D2E  0E01               	movlw	1
 14211  001D30  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14212  001D32                     
 14213                           ;main.c: 465:     uint16_t mic = ADRESH;
 14214  001D32  CFC4 F00D          	movff	4036,myTMR0ISR@mic	;volatile
 14215  001D36  6A0E               	clrf	(myTMR0ISR@mic+1)^0,c
 14216                           
 14217                           ;main.c: 467:     switch(state) {
 14218  001D38  EF6F  F00F         	goto	i2l4117
 14219  001D3C                     i2l4027:
 14220                           
 14221                           ;main.c: 469:             if (startCollect) {
 14222  001D3C  5048               	movf	_startCollect^0,w,c
 14223  001D3E  B4D8               	btfsc	status,2,c
 14224  001D40  EFA4  F00E         	goto	i2u333_41
 14225  001D44  EFA6  F00E         	goto	i2u333_40
 14226  001D48                     i2u333_41:
 14227  001D48  EFB9  F00E         	goto	i2l4037
 14228  001D4C                     i2u333_40:
 14229  001D4C                     
 14230                           ;main.c: 470:                 collecting = 1;
 14231  001D4C  0E01               	movlw	1
 14232  001D4E  0100               	movlb	0	; () banked
 14233  001D50  6FD2               	movwf	_collecting& (0+255),b
 14234                           
 14235                           ;main.c: 471:                 stopCollect = 0;
 14236  001D52  0E00               	movlw	0
 14237  001D54  6E47               	movwf	_stopCollect^0,c
 14238                           
 14239                           ;main.c: 472:                 state = MIC_ACQUIRE;
 14240  001D56  0E04               	movlw	4
 14241  001D58  6E45               	movwf	myTMR0ISR@state^0,c
 14242                           
 14243                           ;main.c: 473:                 bufferIndex = 0;
 14244  001D5A  0E00               	movlw	0
 14245  001D5C  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14246  001D5E  0E00               	movlw	0
 14247  001D60  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14248  001D62                     
 14249                           ; BSR set to: 0
 14250                           ;main.c: 474:                 buffer = sdCardBuffer1;
 14251  001D62  0ED5               	movlw	low _sdCardBuffer1
 14252  001D64  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14253  001D66  0E05               	movlw	high _sdCardBuffer1
 14254  001D68  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14255  001D6A                     
 14256                           ; BSR set to: 0
 14257                           ;main.c: 476:                 startCollect = 0;
 14258  001D6A  0E00               	movlw	0
 14259  001D6C  6E48               	movwf	_startCollect^0,c
 14260                           
 14261                           ;main.c: 477:             } else if (doPlayback) {
 14262  001D6E  EF90  F00F         	goto	i2l630
 14263  001D72                     i2l4037:
 14264  001D72  0100               	movlb	0	; () banked
 14265  001D74  51D1               	movf	_doPlayback& (0+255),w,b
 14266  001D76  B4D8               	btfsc	status,2,c
 14267  001D78  EFC0  F00E         	goto	i2u334_41
 14268  001D7C  EFC2  F00E         	goto	i2u334_40
 14269  001D80                     i2u334_41:
 14270  001D80  EF90  F00F         	goto	i2l630
 14271  001D84                     i2u334_40:
 14272  001D84                     
 14273                           ; BSR set to: 0
 14274                           ;main.c: 479:                 stopPlayback = 0;
 14275  001D84  0E00               	movlw	0
 14276  001D86  6E46               	movwf	_stopPlayback^0,c
 14277  001D88                     
 14278                           ; BSR set to: 0
 14279                           ;main.c: 480:                 buffer = sdCardBuffer1;
 14280  001D88  0ED5               	movlw	low _sdCardBuffer1
 14281  001D8A  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14282  001D8C  0E05               	movlw	high _sdCardBuffer1
 14283  001D8E  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14284  001D90                     
 14285                           ; BSR set to: 0
 14286                           ;main.c: 481:                 bufferIndex = 0;
 14287  001D90  0E00               	movlw	0
 14288  001D92  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14289  001D94  0E00               	movlw	0
 14290  001D96  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14291  001D98                     
 14292                           ; BSR set to: 0
 14293                           ;main.c: 482:                 state = PLAYBACK;
 14294  001D98  0E02               	movlw	2
 14295  001D9A  6E45               	movwf	myTMR0ISR@state^0,c
 14296  001D9C  EF90  F00F         	goto	i2l630
 14297  001DA0                     i2l4047:
 14298  001DA0  0100               	movlb	0	; () banked
 14299  001DA2  51D4               	movf	_buffer1Full& (0+255),w,b
 14300  001DA4  A4D8               	btfss	status,2,c
 14301  001DA6  EFD7  F00E         	goto	i2u335_41
 14302  001DAA  EFD9  F00E         	goto	i2u335_40
 14303  001DAE                     i2u335_41:
 14304  001DAE  EF90  F00F         	goto	i2l630
 14305  001DB2                     i2u335_40:
 14306  001DB2                     i2l4055:
 14307                           
 14308                           ;main.c: 492:             EPWM1_LoadDutyValue(buffer[bufferIndex++]);
 14309  001DB2  503F               	movf	myTMR0ISR@bufferIndex^0,w,c
 14310  001DB4  244A               	addwf	myTMR0ISR@buffer^0,w,c
 14311  001DB6  6ED9               	movwf	fsr2l,c
 14312  001DB8  5040               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14313  001DBA  204B               	addwfc	(myTMR0ISR@buffer+1)^0,w,c
 14314  001DBC  6EDA               	movwf	fsr2h,c
 14315  001DBE  50DF               	movf	indf2,w,c
 14316  001DC0  6E0B               	movwf	??_myTMR0ISR^0,c
 14317  001DC2  500B               	movf	??_myTMR0ISR^0,w,c
 14318  001DC4  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
 14319  001DC6  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
 14320  001DC8  EC7E  F01A         	call	_EPWM1_LoadDutyValue	;wreg free
 14321  001DCC  4A3F               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14322  001DCE  2A40               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14323  001DD0                     
 14324                           ;main.c: 494:             if(bufferIndex == 512) {
 14325  001DD0  0E02               	movlw	2
 14326  001DD2  1840               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14327  001DD4  103F               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14328  001DD6  A4D8               	btfss	status,2,c
 14329  001DD8  EFF0  F00E         	goto	i2u336_41
 14330  001DDC  EFF2  F00E         	goto	i2u336_40
 14331  001DE0                     i2u336_41:
 14332  001DE0  EF90  F00F         	goto	i2l630
 14333  001DE4                     i2u336_40:
 14334  001DE4                     
 14335                           ;main.c: 496:                     buffer1Full = 0;
 14336  001DE4  0E00               	movlw	0
 14337  001DE6  0100               	movlb	0	; () banked
 14338  001DE8  6FD4               	movwf	_buffer1Full& (0+255),b
 14339  001DEA                     
 14340                           ; BSR set to: 0
 14341                           ;main.c: 497:                     buffer = sdCardBuffer2;
 14342  001DEA  0ED5               	movlw	low _sdCardBuffer2
 14343  001DEC  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14344  001DEE  0E03               	movlw	high _sdCardBuffer2
 14345  001DF0  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14346  001DF2                     
 14347                           ; BSR set to: 0
 14348                           ;main.c: 498:                     if (!buffer2Full)
 14349  001DF2  51D3               	movf	_buffer2Full& (0+255),w,b
 14350  001DF4  A4D8               	btfss	status,2,c
 14351  001DF6  EFFF  F00E         	goto	i2u337_41
 14352  001DFA  EF01  F00F         	goto	i2u337_40
 14353  001DFE                     i2u337_41:
 14354  001DFE  EF03  F00F         	goto	i2l614
 14355  001E02                     i2u337_40:
 14356  001E02                     
 14357                           ; BSR set to: 0
 14358                           ;main.c: 499:                         state = MIC_AWAIT_BUFFER;
 14359  001E02  0E03               	movlw	3
 14360  001E04  6E45               	movwf	myTMR0ISR@state^0,c
 14361  001E06                     i2l614:
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;main.c: 506:                 useBuffer1 = !useBuffer1;
 14365  001E06  500F               	movf	myTMR0ISR@useBuffer1^0,w,c
 14366  001E08  B4D8               	btfsc	status,2,c
 14367  001E0A  EF09  F00F         	goto	i2u338_41
 14368  001E0E  EF0C  F00F         	goto	i2u338_40
 14369  001E12                     i2u338_41:
 14370  001E12  0E01               	movlw	1
 14371  001E14  EF0D  F00F         	goto	i2u339_40
 14372  001E18                     i2u338_40:
 14373  001E18  0E00               	movlw	0
 14374  001E1A                     i2u339_40:
 14375  001E1A  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14376                           
 14377                           ;main.c: 507:                 bufferIndex = 0;
 14378  001E1C  0E00               	movlw	0
 14379  001E1E  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14380  001E20  0E00               	movlw	0
 14381  001E22  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14382                           
 14383                           ;main.c: 508:                 if (stopPlayback) {
 14384  001E24  5046               	movf	_stopPlayback^0,w,c
 14385  001E26  B4D8               	btfsc	status,2,c
 14386  001E28  EF18  F00F         	goto	i2u340_41
 14387  001E2C  EF1A  F00F         	goto	i2u340_40
 14388  001E30                     i2u340_41:
 14389  001E30  EF90  F00F         	goto	i2l630
 14390  001E34                     i2u340_40:
 14391  001E34                     
 14392                           ; BSR set to: 0
 14393                           ;main.c: 509:                     stopPlayback = 0;
 14394  001E34  0E00               	movlw	0
 14395  001E36  6E46               	movwf	_stopPlayback^0,c
 14396                           
 14397                           ;main.c: 510:                     state = IDLE;
 14398  001E38  0E00               	movlw	0
 14399  001E3A  6E45               	movwf	myTMR0ISR@state^0,c
 14400                           
 14401                           ;main.c: 511:                     doPlayback = 0;
 14402  001E3C  0E00               	movlw	0
 14403  001E3E  6FD1               	movwf	_doPlayback& (0+255),b
 14404  001E40  EF90  F00F         	goto	i2l630
 14405  001E44                     i2l4081:
 14406  001E44  0100               	movlb	0	; () banked
 14407  001E46  51D4               	movf	_buffer1Full& (0+255),w,b
 14408  001E48  A4D8               	btfss	status,2,c
 14409  001E4A  EF29  F00F         	goto	i2u341_41
 14410  001E4E  EF2B  F00F         	goto	i2u341_40
 14411  001E52                     i2u341_41:
 14412  001E52  EF90  F00F         	goto	i2l630
 14413  001E56                     i2u341_40:
 14414  001E56                     i2l4089:
 14415                           
 14416                           ;main.c: 524:             buffer[bufferIndex++] = mic;
 14417  001E56  503F               	movf	myTMR0ISR@bufferIndex^0,w,c
 14418  001E58  244A               	addwf	myTMR0ISR@buffer^0,w,c
 14419  001E5A  6ED9               	movwf	fsr2l,c
 14420  001E5C  5040               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14421  001E5E  204B               	addwfc	(myTMR0ISR@buffer+1)^0,w,c
 14422  001E60  6EDA               	movwf	fsr2h,c
 14423  001E62  C00D  FFDF         	movff	myTMR0ISR@mic,indf2
 14424  001E66  4A3F               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14425  001E68  2A40               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14426  001E6A                     
 14427                           ;main.c: 526:             if(bufferIndex == 512) {
 14428  001E6A  0E02               	movlw	2
 14429  001E6C  1840               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14430  001E6E  103F               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14431  001E70  A4D8               	btfss	status,2,c
 14432  001E72  EF3D  F00F         	goto	i2u342_41
 14433  001E76  EF3F  F00F         	goto	i2u342_40
 14434  001E7A                     i2u342_41:
 14435  001E7A  EF90  F00F         	goto	i2l630
 14436  001E7E                     i2u342_40:
 14437  001E7E                     
 14438                           ;main.c: 528:                     buffer1Full = 1;
 14439  001E7E  0E01               	movlw	1
 14440  001E80  0100               	movlb	0	; () banked
 14441  001E82  6FD4               	movwf	_buffer1Full& (0+255),b
 14442  001E84                     
 14443                           ; BSR set to: 0
 14444                           ;main.c: 529:                     buffer = sdCardBuffer2;
 14445  001E84  0ED5               	movlw	low _sdCardBuffer2
 14446  001E86  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14447  001E88  0E03               	movlw	high _sdCardBuffer2
 14448  001E8A  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14449  001E8C                     
 14450                           ; BSR set to: 0
 14451                           ;main.c: 530:                     if (buffer2Full)
 14452  001E8C  51D3               	movf	_buffer2Full& (0+255),w,b
 14453  001E8E  B4D8               	btfsc	status,2,c
 14454  001E90  EF4C  F00F         	goto	i2u343_41
 14455  001E94  EF4E  F00F         	goto	i2u343_40
 14456  001E98                     i2u343_41:
 14457  001E98  EF50  F00F         	goto	i2l627
 14458  001E9C                     i2u343_40:
 14459  001E9C                     
 14460                           ; BSR set to: 0
 14461                           ;main.c: 531:                         state = MIC_AWAIT_BUFFER;
 14462  001E9C  0E03               	movlw	3
 14463  001E9E  6E45               	movwf	myTMR0ISR@state^0,c
 14464  001EA0                     i2l627:
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;main.c: 538:                 useBuffer1 = !useBuffer1;
 14468  001EA0  500F               	movf	myTMR0ISR@useBuffer1^0,w,c
 14469  001EA2  B4D8               	btfsc	status,2,c
 14470  001EA4  EF56  F00F         	goto	i2u344_41
 14471  001EA8  EF59  F00F         	goto	i2u344_40
 14472  001EAC                     i2u344_41:
 14473  001EAC  0E01               	movlw	1
 14474  001EAE  EF5A  F00F         	goto	i2u345_40
 14475  001EB2                     i2u344_40:
 14476  001EB2  0E00               	movlw	0
 14477  001EB4                     i2u345_40:
 14478  001EB4  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14479                           
 14480                           ;main.c: 539:                 bufferIndex = 0;
 14481  001EB6  0E00               	movlw	0
 14482  001EB8  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14483  001EBA  0E00               	movlw	0
 14484  001EBC  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14485                           
 14486                           ;main.c: 540:                 if (stopCollect) {
 14487  001EBE  5047               	movf	_stopCollect^0,w,c
 14488  001EC0  B4D8               	btfsc	status,2,c
 14489  001EC2  EF65  F00F         	goto	i2u346_41
 14490  001EC6  EF67  F00F         	goto	i2u346_40
 14491  001ECA                     i2u346_41:
 14492  001ECA  EF90  F00F         	goto	i2l630
 14493  001ECE                     i2u346_40:
 14494  001ECE                     
 14495                           ; BSR set to: 0
 14496                           ;main.c: 541:                     stopCollect = 0;
 14497  001ECE  0E00               	movlw	0
 14498  001ED0  6E47               	movwf	_stopCollect^0,c
 14499                           
 14500                           ;main.c: 542:                     collecting = 0;
 14501  001ED2  0E00               	movlw	0
 14502  001ED4  6FD2               	movwf	_collecting& (0+255),b
 14503                           
 14504                           ;main.c: 543:                     state = IDLE;
 14505  001ED6  0E00               	movlw	0
 14506  001ED8  6E45               	movwf	myTMR0ISR@state^0,c
 14507  001EDA  EF90  F00F         	goto	i2l630
 14508  001EDE                     i2l4117:
 14509  001EDE  5045               	movf	myTMR0ISR@state^0,w,c
 14510  001EE0  6E0B               	movwf	??_myTMR0ISR^0,c
 14511  001EE2  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 14512                           
 14513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14514                           ; Switch size 1, requested type "simple"
 14515                           ; Number of cases is 1, Range of values is 0 to 0
 14516                           ; switch strategies available:
 14517                           ; Name         Instructions Cycles
 14518                           ; simple_byte            4     3 (average)
 14519                           ;	Chosen strategy is simple_byte
 14520  001EE4  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 14521  001EE6  0A00               	xorlw	0	; case 0
 14522  001EE8  B4D8               	btfsc	status,2,c
 14523  001EEA  EF79  F00F         	goto	i2l6409
 14524  001EEE  EF90  F00F         	goto	i2l630
 14525  001EF2                     i2l6409:
 14526                           
 14527                           ; Switch size 1, requested type "simple"
 14528                           ; Number of cases is 5, Range of values is 0 to 4
 14529                           ; switch strategies available:
 14530                           ; Name         Instructions Cycles
 14531                           ; simple_byte           16     9 (average)
 14532                           ;	Chosen strategy is simple_byte
 14533  001EF2  500B               	movf	??_myTMR0ISR^0,w,c
 14534  001EF4  0A00               	xorlw	0	; case 0
 14535  001EF6  B4D8               	btfsc	status,2,c
 14536  001EF8  EF9E  F00E         	goto	i2l4027
 14537  001EFC  0A01               	xorlw	1	; case 1
 14538  001EFE  B4D8               	btfsc	status,2,c
 14539  001F00  EFD0  F00E         	goto	i2l4047
 14540  001F04  0A03               	xorlw	3	; case 2
 14541  001F06  B4D8               	btfsc	status,2,c
 14542  001F08  EFD9  F00E         	goto	i2l4055
 14543  001F0C  0A01               	xorlw	1	; case 3
 14544  001F0E  B4D8               	btfsc	status,2,c
 14545  001F10  EF22  F00F         	goto	i2l4081
 14546  001F14  0A07               	xorlw	7	; case 4
 14547  001F16  B4D8               	btfsc	status,2,c
 14548  001F18  EF2B  F00F         	goto	i2l4089
 14549  001F1C  EF90  F00F         	goto	i2l630
 14550  001F20                     i2l630:
 14551  001F20  0012               	return		;funcret
 14552  001F22                     __end_of_myTMR0ISR:
 14553                           	callstack 0
 14554                           
 14555 ;; *************** function i2_TMR0_WriteTimer *****************
 14556 ;; Defined at:
 14557 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 14558 ;; Parameters:    Size  Location     Type
 14559 ;;  timerVal        2    8[COMRAM] unsigned short 
 14560 ;; Auto vars:     Size  Location     Type
 14561 ;;		None
 14562 ;; Return value:  Size  Location     Type
 14563 ;;                  1    wreg      void 
 14564 ;; Registers used:
 14565 ;;		wreg, status,2
 14566 ;; Tracked objects:
 14567 ;;		On entry : 0/0
 14568 ;;		On exit  : 0/0
 14569 ;;		Unchanged: 0/0
 14570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14575 ;;Total ram usage:        2 bytes
 14576 ;; Hardware stack levels used:    1
 14577 ;; This function calls:
 14578 ;;		Nothing
 14579 ;; This function is called by:
 14580 ;;		_myTMR0ISR
 14581 ;; This function uses a non-reentrant model
 14582 ;;
 14583                           
 14584                           	psect	text59
 14585  003706                     __ptext59:
 14586                           	callstack 0
 14587  003706                     i2_TMR0_WriteTimer:
 14588                           	callstack 17
 14589  003706                     
 14590                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 14591  003706  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 14592  003708  6ED7               	movwf	215,c	;volatile
 14593  00370A                     
 14594                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 14595  00370A  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 14596  00370E  0012               	return		;funcret
 14597  003710                     __end_ofi2_TMR0_WriteTimer:
 14598                           	callstack 0
 14599                           
 14600 ;; *************** function _TMR0_ReadTimer *****************
 14601 ;; Defined at:
 14602 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 14603 ;; Parameters:    Size  Location     Type
 14604 ;;		None
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;  readVal         2    4[COMRAM] unsigned short 
 14607 ;;  readValHigh     1    7[COMRAM] unsigned char 
 14608 ;;  readValLow      1    6[COMRAM] unsigned char 
 14609 ;; Return value:  Size  Location     Type
 14610 ;;                  2    0[COMRAM] unsigned short 
 14611 ;; Registers used:
 14612 ;;		wreg, status,2
 14613 ;; Tracked objects:
 14614 ;;		On entry : 0/0
 14615 ;;		On exit  : 0/0
 14616 ;;		Unchanged: 0/0
 14617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14619 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14621 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14622 ;;Total ram usage:        8 bytes
 14623 ;; Hardware stack levels used:    1
 14624 ;; This function calls:
 14625 ;;		Nothing
 14626 ;; This function is called by:
 14627 ;;		_myTMR0ISR
 14628 ;; This function uses a non-reentrant model
 14629 ;;
 14630                           
 14631                           	psect	text60
 14632  003614                     __ptext60:
 14633                           	callstack 0
 14634  003614                     _TMR0_ReadTimer:
 14635                           	callstack 17
 14636  003614                     
 14637                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 14638  003614  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 14639                           
 14640                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 14641  003618  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 14642  00361C                     
 14643                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 14644  00361C  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 14645  00361E  6E03               	movwf	??_TMR0_ReadTimer^0,c
 14646  003620  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 14647  003622  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 14648  003624  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 14649  003628                     
 14650                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 14651  003628  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 14652  00362C  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 14653  003630  0012               	return		;funcret
 14654  003632                     __end_of_TMR0_ReadTimer:
 14655                           	callstack 0
 14656                           
 14657 ;; *************** function _EPWM1_LoadDutyValue *****************
 14658 ;; Defined at:
 14659 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 14660 ;; Parameters:    Size  Location     Type
 14661 ;;  dutyValue       2    0[COMRAM] unsigned short 
 14662 ;; Auto vars:     Size  Location     Type
 14663 ;;		None
 14664 ;; Return value:  Size  Location     Type
 14665 ;;                  1    wreg      void 
 14666 ;; Registers used:
 14667 ;;		wreg, status,2, status,0
 14668 ;; Tracked objects:
 14669 ;;		On entry : 0/0
 14670 ;;		On exit  : 0/0
 14671 ;;		Unchanged: 0/0
 14672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14673 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14676 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;Total ram usage:        4 bytes
 14678 ;; Hardware stack levels used:    1
 14679 ;; This function calls:
 14680 ;;		Nothing
 14681 ;; This function is called by:
 14682 ;;		_myTMR0ISR
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           	psect	text61
 14687  0034FC                     __ptext61:
 14688                           	callstack 0
 14689  0034FC                     _EPWM1_LoadDutyValue:
 14690                           	callstack 17
 14691  0034FC                     
 14692                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 14693  0034FC  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14694  003500  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 14695  003504  90D8               	bcf	status,0,c
 14696  003506  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14697  003508  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14698  00350A  90D8               	bcf	status,0,c
 14699  00350C  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14700  00350E  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14701  003510  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
 14702  003512  6EBE               	movwf	190,c	;volatile
 14703                           
 14704                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 14705  003514  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14706  003518  0E03               	movlw	3
 14707  00351A  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14708  00351C  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
 14709  00351E  0EF0               	movlw	240
 14710  003520  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14711  003522  50BD               	movf	189,w,c	;volatile
 14712  003524  0BCF               	andlw	207
 14713  003526  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
 14714  003528  6EBD               	movwf	189,c	;volatile
 14715  00352A  0012               	return		;funcret
 14716  00352C                     __end_of_EPWM1_LoadDutyValue:
 14717                           	callstack 0
 14718                           
 14719                           	psect	text62
 14720  000000                     __ptext62:
 14721                           	callstack 0
 14722  000000                     
 14723                           	psect	rparam
 14724  0000                     
 14725                           	psect	temp
 14726  00004C                     btemp:
 14727                           	callstack 0
 14728  00004C                     	ds	1
 14729  0000                     int$flags	set	btemp
 14730  0000                     wtemp8	set	btemp+1
 14731  0000                     ttemp5	set	btemp+1
 14732  0000                     ttemp6	set	btemp+4
 14733  0000                     ttemp7	set	btemp+8
 14734                           
 14735                           	psect	idloc
 14736                           
 14737                           ;Config register IDLOC0 @ 0x200000
 14738                           ;	unspecified, using default values
 14739  200000                     	org	2097152
 14740  200000  FF                 	db	255
 14741                           
 14742                           ;Config register IDLOC1 @ 0x200001
 14743                           ;	unspecified, using default values
 14744  200001                     	org	2097153
 14745  200001  FF                 	db	255
 14746                           
 14747                           ;Config register IDLOC2 @ 0x200002
 14748                           ;	unspecified, using default values
 14749  200002                     	org	2097154
 14750  200002  FF                 	db	255
 14751                           
 14752                           ;Config register IDLOC3 @ 0x200003
 14753                           ;	unspecified, using default values
 14754  200003                     	org	2097155
 14755  200003  FF                 	db	255
 14756                           
 14757                           ;Config register IDLOC4 @ 0x200004
 14758                           ;	unspecified, using default values
 14759  200004                     	org	2097156
 14760  200004  FF                 	db	255
 14761                           
 14762                           ;Config register IDLOC5 @ 0x200005
 14763                           ;	unspecified, using default values
 14764  200005                     	org	2097157
 14765  200005  FF                 	db	255
 14766                           
 14767                           ;Config register IDLOC6 @ 0x200006
 14768                           ;	unspecified, using default values
 14769  200006                     	org	2097158
 14770  200006  FF                 	db	255
 14771                           
 14772                           ;Config register IDLOC7 @ 0x200007
 14773                           ;	unspecified, using default values
 14774  200007                     	org	2097159
 14775  200007  FF                 	db	255
 14776                           
 14777                           	psect	config
 14778                           
 14779                           ; Padding undefined space
 14780  300000                     	org	3145728
 14781  300000  FF                 	db	255
 14782                           
 14783                           ;Config register CONFIG1H @ 0x300001
 14784                           ;	Oscillator Selection bits
 14785                           ;	FOSC = INTIO67, Internal oscillator block
 14786                           ;	4X PLL Enable
 14787                           ;	PLLCFG = OFF, Oscillator used directly
 14788                           ;	Primary clock enable bit
 14789                           ;	PRICLKEN = ON, Primary clock enabled
 14790                           ;	Fail-Safe Clock Monitor Enable bit
 14791                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14792                           ;	Internal/External Oscillator Switchover bit
 14793                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14794  300001                     	org	3145729
 14795  300001  28                 	db	40
 14796                           
 14797                           ;Config register CONFIG2L @ 0x300002
 14798                           ;	Power-up Timer Enable bit
 14799                           ;	PWRTEN = OFF, Power up timer disabled
 14800                           ;	Brown-out Reset Enable bits
 14801                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14802                           ;	Brown Out Reset Voltage bits
 14803                           ;	BORV = 190, VBOR set to 1.90 V nominal
 14804  300002                     	org	3145730
 14805  300002  1F                 	db	31
 14806                           
 14807                           ;Config register CONFIG2H @ 0x300003
 14808                           ;	Watchdog Timer Enable bits
 14809                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 14810                           ;	Watchdog Timer Postscale Select bits
 14811                           ;	WDTPS = 32768, 1:32768
 14812  300003                     	org	3145731
 14813  300003  3C                 	db	60
 14814                           
 14815                           ; Padding undefined space
 14816  300004                     	org	3145732
 14817  300004  FF                 	db	255
 14818                           
 14819                           ;Config register CONFIG3H @ 0x300005
 14820                           ;	CCP2 MUX bit
 14821                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 14822                           ;	PORTB A/D Enable bit
 14823                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 14824                           ;	P3A/CCP3 Mux bit
 14825                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 14826                           ;	HFINTOSC Fast Start-up
 14827                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 14828                           ;	Timer3 Clock input mux bit
 14829                           ;	T3CMX = PORTC0, T3CKI is on RC0
 14830                           ;	ECCP2 B output mux bit
 14831                           ;	P2BMX = PORTB5, P2B is on RB5
 14832                           ;	MCLR Pin Enable bit
 14833                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 14834  300005                     	org	3145733
 14835  300005  BF                 	db	191
 14836                           
 14837                           ;Config register CONFIG4L @ 0x300006
 14838                           ;	Stack Full/Underflow Reset Enable bit
 14839                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14840                           ;	Single-Supply ICSP Enable bit
 14841                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 14842                           ;	Extended Instruction Set Enable bit
 14843                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14844                           ;	Background Debug
 14845                           ;	DEBUG = OFF, Disabled
 14846  300006                     	org	3145734
 14847  300006  85                 	db	133
 14848                           
 14849                           ; Padding undefined space
 14850  300007                     	org	3145735
 14851  300007  FF                 	db	255
 14852                           
 14853                           ;Config register CONFIG5L @ 0x300008
 14854                           ;	Code Protection Block 0
 14855                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14856                           ;	Code Protection Block 1
 14857                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14858                           ;	Code Protection Block 2
 14859                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14860                           ;	Code Protection Block 3
 14861                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14862  300008                     	org	3145736
 14863  300008  0F                 	db	15
 14864                           
 14865                           ;Config register CONFIG5H @ 0x300009
 14866                           ;	Boot Block Code Protection bit
 14867                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14868                           ;	Data EEPROM Code Protection bit
 14869                           ;	CPD = OFF, Data EEPROM not code-protected
 14870  300009                     	org	3145737
 14871  300009  C0                 	db	192
 14872                           
 14873                           ;Config register CONFIG6L @ 0x30000A
 14874                           ;	Write Protection Block 0
 14875                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14876                           ;	Write Protection Block 1
 14877                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14878                           ;	Write Protection Block 2
 14879                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14880                           ;	Write Protection Block 3
 14881                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 14882  30000A                     	org	3145738
 14883  30000A  0F                 	db	15
 14884                           
 14885                           ;Config register CONFIG6H @ 0x30000B
 14886                           ;	Configuration Register Write Protection bit
 14887                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14888                           ;	Boot Block Write Protection bit
 14889                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14890                           ;	Data EEPROM Write Protection bit
 14891                           ;	WRTD = OFF, Data EEPROM not write-protected
 14892  30000B                     	org	3145739
 14893  30000B  E0                 	db	224
 14894                           
 14895                           ;Config register CONFIG7L @ 0x30000C
 14896                           ;	Table Read Protection Block 0
 14897                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 14898                           ;	Table Read Protection Block 1
 14899                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14900                           ;	Table Read Protection Block 2
 14901                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 14902                           ;	Table Read Protection Block 3
 14903                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 14904  30000C                     	org	3145740
 14905  30000C  0F                 	db	15
 14906                           
 14907                           ;Config register CONFIG7H @ 0x30000D
 14908                           ;	Boot Block Table Read Protection bit
 14909                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14910  30000D                     	org	3145741
 14911  30000D  40                 	db	64
 14912                           tosu	equ	0xFFF
 14913                           tosh	equ	0xFFE
 14914                           tosl	equ	0xFFD
 14915                           stkptr	equ	0xFFC
 14916                           pclatu	equ	0xFFB
 14917                           pclath	equ	0xFFA
 14918                           pcl	equ	0xFF9
 14919                           tblptru	equ	0xFF8
 14920                           tblptrh	equ	0xFF7
 14921                           tblptrl	equ	0xFF6
 14922                           tablat	equ	0xFF5
 14923                           prodh	equ	0xFF4
 14924                           prodl	equ	0xFF3
 14925                           indf0	equ	0xFEF
 14926                           postinc0	equ	0xFEE
 14927                           postdec0	equ	0xFED
 14928                           preinc0	equ	0xFEC
 14929                           plusw0	equ	0xFEB
 14930                           fsr0h	equ	0xFEA
 14931                           fsr0l	equ	0xFE9
 14932                           wreg	equ	0xFE8
 14933                           indf1	equ	0xFE7
 14934                           postinc1	equ	0xFE6
 14935                           postdec1	equ	0xFE5
 14936                           preinc1	equ	0xFE4
 14937                           plusw1	equ	0xFE3
 14938                           fsr1h	equ	0xFE2
 14939                           fsr1l	equ	0xFE1
 14940                           bsr	equ	0xFE0
 14941                           indf2	equ	0xFDF
 14942                           postinc2	equ	0xFDE
 14943                           postdec2	equ	0xFDD
 14944                           preinc2	equ	0xFDC
 14945                           plusw2	equ	0xFDB
 14946                           fsr2h	equ	0xFDA
 14947                           fsr2l	equ	0xFD9
 14948                           status	equ	0xFD8

Data Sizes:
    Strings     3274
    Constant    30
    Data        4
    BSS         2244
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      75
    BANK0           160     98     119
    BANK1           256     53     213
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1885_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_126(CODE[3]), STR_125(CODE[3]), STR_124(CODE[2]), STR_123(CODE[4]), 
		 -> STR_122(CODE[6]), STR_121(CODE[3]), STR_120(CODE[3]), STR_119(CODE[2]), 
		 -> STR_118(CODE[3]), STR_117(CODE[2]), STR_116(CODE[4]), STR_115(CODE[28]), 
		 -> STR_114(CODE[26]), STR_113(CODE[27]), STR_112(CODE[62]), STR_111(CODE[62]), 
		 -> STR_110(CODE[62]), STR_109(CODE[62]), STR_108(CODE[62]), STR_107(CODE[62]), 
		 -> STR_106(CODE[62]), STR_105(CODE[62]), STR_104(CODE[62]), STR_103(CODE[62]), 
		 -> STR_102(CODE[62]), STR_101(CODE[62]), STR_100(CODE[62]), STR_99(CODE[62]), 
		 -> STR_98(CODE[62]), STR_97(CODE[62]), STR_96(CODE[62]), STR_95(CODE[62]), 
		 -> STR_94(CODE[62]), STR_93(CODE[62]), STR_92(CODE[62]), STR_91(CODE[62]), 
		 -> STR_90(CODE[62]), STR_89(CODE[62]), STR_88(CODE[62]), STR_87(CODE[62]), 
		 -> STR_86(CODE[62]), STR_85(CODE[62]), STR_84(CODE[62]), STR_83(CODE[62]), 
		 -> STR_82(CODE[62]), STR_81(CODE[62]), STR_80(CODE[62]), STR_79(CODE[62]), 
		 -> STR_78(CODE[62]), STR_77(CODE[3]), STR_76(CODE[5]), STR_75(CODE[2]), 
		 -> STR_74(CODE[5]), STR_73(CODE[17]), STR_72(CODE[17]), STR_71(CODE[15]), 
		 -> STR_70(CODE[3]), STR_69(CODE[5]), STR_68(CODE[2]), STR_67(CODE[5]), 
		 -> STR_66(CODE[19]), STR_65(CODE[20]), STR_64(CODE[28]), STR_63(CODE[20]), 
		 -> STR_62(CODE[30]), STR_61(CODE[21]), STR_60(CODE[37]), STR_59(CODE[22]), 
		 -> STR_58(CODE[33]), STR_57(CODE[58]), STR_56(CODE[48]), STR_55(CODE[35]), 
		 -> STR_54(CODE[5]), STR_53(CODE[25]), STR_52(CODE[20]), STR_51(CODE[71]), 
		 -> STR_50(CODE[50]), STR_49(CODE[22]), STR_48(CODE[33]), STR_47(CODE[58]), 
		 -> STR_46(CODE[3]), STR_45(CODE[68]), STR_44(CODE[58]), STR_43(CODE[7]), 
		 -> STR_42(CODE[2]), STR_41(CODE[5]), STR_40(CODE[31]), STR_39(CODE[27]), 
		 -> STR_38(CODE[3]), STR_37(CODE[76]), STR_36(CODE[23]), STR_35(CODE[30]), 
		 -> STR_34(CODE[31]), STR_33(CODE[2]), STR_32(CODE[2]), STR_31(CODE[8]), 
		 -> STR_30(CODE[52]), STR_29(CODE[32]), STR_28(CODE[44]), STR_27(CODE[49]), 
		 -> STR_26(CODE[52]), STR_25(CODE[55]), STR_24(CODE[43]), STR_23(CODE[37]), 
		 -> STR_22(CODE[52]), STR_21(CODE[24]), STR_20(CODE[52]), STR_19(CODE[24]), 
		 -> STR_18(CODE[21]), STR_17(CODE[7]), STR_16(CODE[15]), STR_15(CODE[52]), 
		 -> STR_14(CODE[21]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[2]), 
		 -> STR_10(CODE[5]), STR_9(CODE[17]), STR_8(CODE[29]), STR_7(CODE[54]), 
		 -> STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[40]), STR_3(CODE[9]), 
		 -> STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    myTMR0ISR@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _printAscii->_printf
    _printAddress->_printf
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0  207363
                                             94 BANK0      4     4      0
                                              0 BANK1     53    53      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                   _incrementAddress
                       _printAddress
                         _printAscii
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAscii                                           0     0      0   39542
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAddress                                         4     0      4   39874
                                             84 BANK0      4     0      4
                             _printf
 ---------------------------------------------------------------------------------
 (1) _incrementAddress                                     4     0      4     788
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   40332
                                             84 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0     124
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6    1908
                                             20 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6    1008
                                             20 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      96
                                             20 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   39898
                                             84 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   39542
                                             70 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28097
                                             62 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   27534
                                             31 BANK0     31    25      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    6195
                                             48 COMRAM     8     8      0
                                              0 BANK0     31    20     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             25 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    5577
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    6431
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    4444
                                             48 COMRAM     5     2      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4165
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1506
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1006
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             26 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             19 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     463
                                             15 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     463
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           5     5      0     463
                                             10 COMRAM     5     5      0
                _EPWM1_LoadDutyValue
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _EPWM1_LoadDutyValue                                 4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _incrementAddress
   _printAddress
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printAscii
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _EPWM1_LoadDutyValue
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     35      D5       7       83.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     197      12        0.0%
DATA                 0      0     997       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Nov 04 17:14:08 2020

                                            l17 3612                                              l29 3712  
                                            l87 36A6                                              l79 333C  
                                            l96 3580                            myTMR0ISR@bufferIndex 003F  
                          SDCARD_ReadBlock@addr 0015                             ___wmul@multiplicand 0016  
                               _timer0ReloadVal 0041                                  hexDumpBuffer@i 00BC  
                                hexDumpBuffer@j 00B8                                             l100 35A6  
                                           l103 3680                                             l112 3704  
                                           l106 3692                                             l130 36FA  
                                           l124 36F0                                             l127 36E6  
                                           l151 348E                                             l235 3556  
                                           l163 36D2                                             l341 3716  
                                           l173 36DC                                             l270 363E  
                                           l334 36B8                                             l344 3654  
                                           l273 364C                                             l346 3662  
                                           l338 2E2C                                             l347 3666  
                                           l267 35CC                                             l292 367C  
                                           l189 36C8                                             l455 0098  
                                           l472 03D0                                             l705 2430  
                                           l633 2314                                             l716 2500  
                                           l572 105A                                             l468 038E  
                                           l549 0BDA                                             l654 2EC6  
                                           l582 327A                                             l719 35F2  
                                           l487 0592                                             l680 285A  
                                           l664 2FE8                                             l833 2822  
                                           l674 33B0                                             l666 2FEA  
                                           l669 337A                                             l589 30C8  
                                           l846 2AFE                                             l699 299A  
                                           _PR2 000FBB                                    _startCollect 0048  
                                           _abs 32C0                                             _pad 2CC0  
                              main@writeAddress 00C2                                             _sin F317  
                               _TMR2_Initialize 36BA                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                     main@address 01B8  
                                   _stopCollect 0047                                            ?_abs 0026  
                                          l1164 2BEE                                            l1157 2BCE  
                                          l1501 1B12                                            l1174 2CBE  
                                          l1167 2C9E                                            l1434 2D04  
                                          l1515 1CB2                                            l1531 12C6  
                                          l1452 17F4                                            l1605 3458  
                                          l1613 3236                                            l1437 2D46  
                                          l1517 1D14                                            l1446 31E4  
                                          l1454 17FC                                            l1439 2D80  
                                          l1472 1A36                                            l1544 1752  
                                          l5001 26CE                                            l1634 2F5C  
                                          l1642 32BE                                            l1562 32F6  
                                          l5011 2710                                            l5003 26D2  
                                          l1619 3420                                            l1492 1A70  
                                          l5021 276A                                            l5013 272E  
                                          l5005 26E0                                            l1565 32FE  
                                          l5101 2C16                                            l1477 1F5A  
                                          l1653 3182                                            l1557 3124  
                                          l1397 357E                                            l1494 1A78  
                                          l1558 312C                                            l5023 2798  
                                          l5015 2736                                            l5031 27D2  
                                          l5007 2700                                            l5111 2C98  
                                          l5103 2C2A                                            l1487 2128  
                                          l1479 1F62                                            l1648 34C4  
                                          l1664 33E8                                            l1593 2692  
                                          l5121 2CFC                                            l5113 2CC0  
                                          l5033 27E2                                            l5025 27B8  
                                          l5017 274A                                            l5009 2704  
                                          l5041 29A0                                            l5201 1804  
                                          l5105 2C38                                            l6001 055C  
                                          l1658 318A                                            l5131 2D68  
                                          l5123 2D10                                            l5115 2CCE  
                                          l5035 2802                                            l5027 27BA  
                                          l5019 2758                                            l5051 2A00  
                                          l5043 29AE                                            l5211 183C  
                                          l5203 1816                                            l5107 2C66  
                                          l6011 05C4                                            l6003 056C  
                                          l1596 269A                                            l5125 2D24  
                                          l5117 2CE2                                            l5029 27CC  
                                          l5061 2A76                                            l5053 2A1E  
                                          l5045 29CE                                            l5213 1842  
                                          l5221 1936                                            l5205 1824  
                                          l5109 2C86                                            l5301 1ACC  
                                          l6101 0934                                            l6021 0634  
                                          l6013 05E0                                            l6005 0582  
                                          l5127 2D28                                            l5119 2CF0  
                                          l5071 2ADE                                            l5063 2A96  
                                          l5055 2A26                                            l5047 29D2  
                                          l5039 299C                                            l5135 32C0  
                                          l5223 1952                                            l5231 19B2  
                                          l5215 18C4                                            l5207 182A  
                                          l1599 3378                                            l5143 333E  
                                          l5151 3164                                            l5303 1AD2  
                                          l6111 0982                                            l6103 0944  
                                          l6031 06A0                                            l6023 0646  
                                          l6015 05E6                                            l6007 05A2  
                                          l5161 31E6                                            l5129 2D54  
                                          l5065 2AA8                                            l5057 2A3A  
                                          l5049 29E0                                            l5137 32DA  
                                          l5241 19F6                                            l5233 19C4  
                                          l5225 1970                                            l5217 18CC  
                                          l5209 1832                                            l5081 2B32  
                                          l5153 3176                                            l5321 1BA4  
                                          l5313 1B46                                            l5305 1ADA  
                                          l5401 1218                                            l6201 0D92  
                                          l6121 09E2                                            l6113 098A  
                                          l6105 0946                                            l6041 06F8  
                                          l6025 0662                                            l6033 06C6  
                                          l6017 060A                                            l6009 05B2  
                                          l5163 31EA                                            l5059 2A48  
                                          l5067 2AAE                                            l5243 19FE  
                                          l5235 19D2                                            l5227 198A  
                                          l5219 18D2                                            l5091 2BB4  
                                          l5083 2B46                                            l5075 2B00  
                                          l5251 1F30                                            l5139 33EA  
                                          l5147 312E                                            l5315 1B58  
                                          l5323 1BB8                                            l5307 1AF6  
                                          l5331 1C34                                            l5411 1240  
                                          l5403 1226                                            l6211 0E46  
                                          l6203 0DA2                                            l6131 0A42  
                                          l6123 09FE                                            l6115 099A  
                                          l6107 096A                                            l6051 073C  
                                          l6043 0704                                            l6035 06CA  
                                          l6027 0668                                            l5157 3422  
                                          l5165 31FE                                            l5181 31BA  
                                          l5173 318C                                            l5069 2ABE  
                                          l5237 19D8                                            l5245 1A0E  
                                          l5229 19A4                                            l5093 2BB6  
                                          l5085 2B54                                            l5077 2B0C  
                                          l5261 1F9E                                            l5253 1F32  
                                          l5341 1CC0                                            l5333 1C52  
                                          l5325 1BCA                                            l5309 1B06  
                                          l5501 1700                                            l5405 1228  
                                          l6221 0E98                                            l6213 0E50  
                                          l6205 0DF0                                            l6141 0AAA  
                                          l6133 0A62                                            l6125 0A16  
                                          l6117 09B6                                            l6109 097E  
                                          l6061 0790                                            l6053 0742  
                                          l6045 0718                                            l6037 06DE  
                                          l6029 068C                                            ?_pad 0026  
                                          l5167 322C                                            l5351 2502  
                                          l5183 31C0                                            l5175 319E  
                                          l5239 19EA                                            l5191 179E  
                                          l5095 2BC8                                            l5087 2B66  
                                          l5079 2B2A                                            l5263 1FA4  
                                          l5271 208C                                            l5255 1F4C  
                                          l5343 1CC6                                            l5335 1C70  
                                          l5327 1BD0                                            l5319 1B92  
                                          l5503 170E                                            l5431 12D4  
                                          l5423 1252                                            l5415 1246  
                                          l5407 123A                                            l6231 0EE8  
                                          l6207 0E06                                            l6151 0B26  
                                          l6143 0AC6                                            l6135 0A72  
                                          l6127 0A1C                                            l6119 09CE  
                                          l6071 07F4                                            l6063 07A4  
                                          l6055 074A                                            l6047 071C  
                                          l6039 06E2                                            l5601 358E  
                                          l5169 3230                                            l5361 2574  
                                          l5353 2516                                            l5177 31AA  
                                          l5193 17BE                                            l5089 2B94  
                                          l5097 2BF0                                            l5273 20A0  
                                          l5281 2100                                            l5265 201A  
                                          l5257 1F8A                                            l5249 1F22  
                                          l5345 1CD6                                            l5337 1C8A  
                                          l5329 1BD6                                            l5441 134E  
                                          l5433 12D6                                            l6241 0F4A  
                                          l6233 0EFC                                            l6225 0EA2  
                                          l6217 0E68                                            l6209 0E22  
                                          l6161 0B82                                            l6153 0B2C  
                                          l6145 0ADE                                            l6129 0A32  
                                          l6137 0A74                                            l6073 0804  
                                          l6065 07C0                                            l6057 075C  
                                          l6081 085A                                            l6049 072C  
                                          l5603 3592                                            l5371 259C  
                                          l5363 2578                                            l5355 251A  
                                          l5179 31B6                                            l5195 17CC  
                                          l5187 1754                                            l5099 2C0E  
                                          l5275 20BE                                            l5267 2022  
                                          l5259 1F94                                            l5347 1CEC  
                                          l5339 1CA4                                            l5291 1A62  
                                          l5443 136E                                            l5451 13D8  
                                          l5435 12FC                                            l5427 125E  
                                          l5419 124C                                            l5507 171A  
                                          l5531 30CA                                            l5523 36E8  
                                          l5611 36CA                                            l6403 1156  
                                          l6251 0F8A                                            l6243 0F58  
                                          l6235 0F00                                            l6219 0E82  
                                          l6227 0EAE                                            l6171 0BEA  
                                          l6155 0B42                                            l6163 0B84  
                                          l6147 0AF2                                            l6139 0A98  
                                          l6091 08D0                                            l6083 086C  
                                          l6075 0824                                            l6067 07D8  
                                          l6059 0778                                            l5605 35A0  
                                          l5373 25A4                                            l5357 251E  
                                          l5197 17CE                                            l5189 1774  
                                          l5277 20D8                                            l5269 2028  
                                          l5293 1A8E                                            l5285 1A38  
                                          l5509 1740                                            l5461 1472  
                                          l5453 13FE                                            l5445 137C  
                                          l5437 1332                                            l6405 1286  
                                          l5429 12B4                                            l5533 30D2  
                                          l5525 36DE                                            l5541 3710  
                                          l5621 35B4                                            l5613 36CE  
                                          l6261 0FDE                                            l6253 0F90  
                                          l6245 0F66                                            l6237 0F2E  
                                          l6229 0EC2                                            l6181 0C40  
                                          l6173 0BF6                                            l6157 0B52  
                                          l6149 0B0E                                            l6165 0BA8  
                                          l6093 08E8                                            l6085 0888  
                                          l6077 0834                                            l6069 07DE  
                                          l5607 35A4                                            l5383 2652  
                                          l5375 25DA                                            l6407 25C4  
                                          l5367 257E                                            l5359 253C  
                                          l5199 17E8                                            l5279 20F2  
                                          l5295 1A98                                            l5287 1A46  
                                          l5471 153E                                            l5463 1498  
                                          l5455 1430                                            l5439 1340  
                                          l5535 30E0                                            l5527 36F2  
                                          l5551 3338                                            l5543 3300  
                                          l5631 35C8                                            l5623 35B8  
                                          l5615 35A8                                            l5703 3238  
                                          l5711 305E                                            l6271 104C  
                                          l6263 0FF4                                            l6255 0F9A  
                                          l6247 0F74                                            l6239 0F3C  
                                          l6183 0C68                                            l6191 0CCA  
                                          l6175 0C08                                            l6167 0BBA  
                                          l6159 0B72                                            l6095 08EE  
                                          l6087 08A0                                            l6079 0836  
                                          l5385 2664                                            l5369 2594  
                                          l5297 1AB8                                            l5289 1A48  
                                          l5481 160C                                            l5473 1588  
                                          l5465 14E0                                            l5449 13C6  
                                          l5393 11D0                                            l5537 3106  
                                          l5801 292C                                            l5721 2E3C  
                                          l5713 2E2E                                            l5641 2DFA  
                                          l5633 2D84                                            l5545 3314  
                                          l5529 36D4                                            l5561 347C  
                                          l5553 345A                                            l5625 35BC  
                                          l5617 35AC                                            l5705 325A  
                                          l6281 1128                                            l6273 10D8  
                                          l6257 0FAE                                            l6265 1006  
                                          l6249 0F86                                            l6193 0CE0  
                                          l6185 0C82                                            l6177 0C16  
                                          l6169 0BCA                                            l6097 0904  
                                          l6089 08B4                                            l5387 2676  
                                          l5379 2612                                            l5299 1AC2  
                                          l5483 1624                                            l5491 16AA  
                                          l5459 144C                                            l5395 11F6  
                                          l5811 294A                                            l5803 2932  
                                          l5731 2E5A                                            l5723 2E42  
                                          l5715 2E2E                                            l5651 2F5E  
                                          l5643 2E2A                                            l5635 2D92  
                                          l5539 35F4                                            l5547 3320  
                                          l5571 352C                                            l5563 347E  
                                          l5555 345C                                            l5627 35C0  
                                          l5619 35B0                                            l5707 326A  
                                          l6275 10F4                                            l6267 1028  
                                          l6259 0FD0                                            l6195 0D6A  
                                          l6187 0C90                                            l6179 0C20  
                                          l6099 0914                                            l5493 16D0  
                                          l5485 1632                                            l5477 15C0  
                                          l5469 1518                                            l5397 1204  
                                          l5821 2968                                            l5813 2950  
                                          l5805 2938                                            l5741 2E8E  
                                          l5733 2E70                                            l5725 2E48  
                                          l5717 2E30                                            l5661 2F72  
                                          l5653 2F5E                                            l5637 2DD2  
                                          l5549 332C                                            l5573 3538  
                                          l5581 36B6                                            l5565 348A  
                                          l5557 3464                                            l5629 35C4  
                                          l6277 1102                                            l6269 1036  
                                          l6197 0D7E                                            l6189 0CC6  
                                          l6285 113E                                            l5901 0052  
                                          l4951 36FE                                            l5495 16DE  
                                          l5487 166E                                            l5479 15E6  
                                          l5399 1214                                            l5591 3562  
                                          l5823 2978                                            l5815 2956  
                                          l5807 293E                                            l5751 2828  
                                          l5743 2EA2                                            l5735 2E86  
                                          l5727 2E4E                                            l5719 2E36  
                                          l5671 2FA0                                            l5663 2F78  
                                          l5655 2F60                                            l5647 3714  
                                          l5639 2DD6                                            l5583 3632  
                                          l5575 3554                                            l5559 347A  
                                          l5567 36BA                                            l6279 1116  
                                          l6199 0D82                                            l5911 00A6  
                                          l5903 0084                                            l4961 2F14  
                                          l4953 2EC8                                            l5497 16F2  
                                          l5825 2988                                            l5817 295C  
                                          l5809 2944                                            l5761 283E  
                                          l5745 2EA6                                            l5729 2E54  
                                          l5681 2FD2                                            l5673 2FB8  
                                          l5665 2F7E                                            l5657 2F66  
                                          l5585 3668                                            l5577 36A8  
                                          l5569 36C2                                            l5841 236A  
                                          l5649 212A                                            l5921 00C8  
                                          l5913 00B2                                            l5905 0088  
                                          l5595 3694                                            l5587 3650  
                                          l4947 3680                                            l4963 2F4A  
                                          l4955 2EDA                                            l4971 329A  
                                          l5819 2966                                            l5771 28BA  
                                          l5763 285C                                            l5691 3396  
                                          l5747 2EB8                                            l5683 2FD6  
                                          l5667 2F84                                            l5659 2F6C  
                                          l5579 36B4                                            l5851 23D6  
                                          l5843 237E                                            l5835 232E  
                                          l5827 2316                                            l5931 00FC  
                                          l5923 00D6                                            l5915 00B4  
                                          l5907 008A                                            l4949 368E  
                                          l4957 2EEC                                            l4973 329E  
                                          l4981 34B8                                            l5589 3558  
                                          l5781 28D4                                            l5773 28BC  
                                          l5765 2896                                            l5757 2832  
                                          l5685 337C                                            l5749 2EC4  
                                          l5669 2F8A                                            l5861 2454  
                                          l5853 23E6                                            l5845 239C  
                                          l5837 2340                                            l5829 2324  
                                          l5941 0342                                            l5933 010A  
                                          l5925 00E4                                            l5917 00B6  
                                          l5909 0096                                            l5599 3580  
                                          l4991 35EA                                            l4959 2EF6  
                                          l4967 327C                                            l4975 3490  
                                          l5791 28F6                                            l5783 28DA  
                                          l5775 28C2                                            l5767 2898  
                                          l5759 2838                                            l5687 3384  
                                          l5679 2FC0                                            l5871 24A6  
                                          l5863 245A                                            l5855 2408  
                                          l5847 23A8                                            l5839 235E  
                                          l5951 0384                                            l5943 0352  
                                          l5935 011E                                            l5927 00F2  
                                          l5919 00BA                                            l4969 3288  
                                          l4977 349C                                            l4985 33B2  
                                          l5793 28F8                                            l5785 28E0  
                                          l5777 28C8                                            l5769 28A8  
                                          l5697 339C                                            l5689 3386  
                                          l5873 24B6                                            l5865 246C  
                                          l5849 23BA                                            l5857 240E  
                                          l5961 03B8                                            l5945 035C  
                                          l5937 0126                                            l5929 00F6  
                                          l4979 34A0                                            l4995 269C  
                                          l5795 2908                                            l5787 28E6  
                                          l5779 28CE                                            l5699 33AE  
                                          l5875 24D8                                            l5867 2478  
                                          l5859 2424                                            l5963 03C6  
                                          l5955 0394                                            l5939 013E  
                                          l4989 35CE                                            l4997 26A0  
                                          l5797 2918                                            l5789 28EC  
                                          l5869 248A                                            l5877 24DE  
                                          l5973 0400                                            l5957 039E  
                                          l5949 0376                                            l4999 26AE  
                                          l5799 292A                                            l5879 24F4  
                                          l5991 04B2                                            l5975 0428  
                                          l5983 044A                                            l5967 03E0  
                                          l5993 04C0                                            l5985 0466  
                                          l5977 043C                                            l5969 03EA  
                                          l5995 051C                                            l5987 047E  
                                          l5979 0440                                            l5997 0530  
                                          l5989 04A2                                            l5999 0544  
                                          STR_1 FFC0                                            STR_2 FEE1  
                                          STR_3 FFC9                                            STR_4 FC61  
                                          STR_5 FFFA                                            STR_6 FF7B  
                                          STR_7 FB41                                            STR_8 FDB1  
                                          STR_9 FF91                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u5000 20A0                                            u5001 209C  
                                          u5010 20BE                                            u5011 20BA  
                                          u5020 20D8                                            u5100 1B42  
                                          u5021 20D4                                            u5030 20F2  
                                          u5110 1B58                                            u5031 20EE  
                                          u5111 1B54                                            u4400 2F14  
                                          u5040 2100                                            u5200 1CB2  
                                          u5120 1B8C                                            u6000 086C  
                                          u4401 2F10                                            u5041 20FC  
                                          u5201 1CAE                                            u5121 1B86  
                                          u6001 0868                                            u4410 2F4A  
                                          u5210 1CC0                                            u5130 1B8E  
                                          u5050 1A46                                            u6010 08A0  
                                          u4411 2F46                                            u5211 1CBC  
                                          u5051 1A42                                            u6011 089C  
                                          u5220 253C                                            u4420 32BE  
                                          u4500 2758                                            u5140 1BA4  
                                          u5060 1A62                                            u5300 12C6  
                                          u6100 0A16                                            u6020 08B4  
                                          u5221 2538                                            u4421 32BA  
                                          u4501 2754                                            u5141 1BA0  
                                          u5061 1A5E                                            u5301 12C2  
                                          u6101 0A12                                            u6021 08B0  
                                          u5230 2574                                            u4430 34B8  
                                          u4510 2798                                            u5150 1C0E  
                                          u5070 1A8E                                            u5310 12D4  
                                          u6110 0A32                                            u6030 08E8  
                                          u5231 2570                                            u4431 34B4  
                                          u4511 2794                                            u5071 1A8A  
                                          u5311 12D0                                            u6111 0A2E  
                                          u6031 08E4                                            u5240 2590  
                                          u4520 27E2                                            u4600 2B2A  
                                          u4440 33E2                                            u5160 1C52  
                                          u5080 1AF6                                            u5400 153E  
                                          u5320 12FC                                            u6200 0BCA  
                                          u6120 0A42                                            u6040 0904  
                                          u5241 258C                                            u4521 27DE  
                                          u4601 2B26                                            u4441 33DC  
                                          u5161 1C4E                                            u5081 1AF2  
                                          u5401 153A                                            u5321 12F8  
                                          u6201 0BC6                                            u6121 0A3E  
                                          u6041 0900                                            u5250 264C  
                                          u4370 368E                                            u4530 29AE  
                                          u4610 2B54                                            u4450 33E4  
                                          u5170 1C70                                            u5090 1B40  
                                          u5410 15E6                                            u5330 1340  
                                          u6210 0BDA                                            u6130 0AAA  
                                          u6050 0914                                            u5251 2646  
                                          u4371 368A                                            u4531 29AA  
                                          u4611 2B50                                            u5171 1C6C  
                                          u5155 1BFC                                            u5091 1B3A  
                                          u5411 15E2                                            u5331 133C  
                                          u6211 0BD6                                            u6131 0AA6  
                                          u6051 0910                                            u5260 264E  
                                          u4380 2EDA                                            u4460 26AE  
                                          u4540 29E0                                            u4700 32DA  
                                          u4620 2B94                                            u5180 1C8A  
                                          u5420 160C                                            u5340 13C0  
                                          u5500 2D92                                            u6300 0FAE  
                                          u6220 0C08                                            u6140 0ADE  
                                          u6060 097E                                            u4381 2ED6  
                                          u4461 26AA                                            u4541 29DC  
                                          u4701 32D6                                            u4621 2B90  
                                          u5181 1C86                                            u5421 1608  
                                          u5341 13BA                                            u5501 2D8E  
                                          u6301 0FAA                                            u6221 0C04  
                                          u6141 0ADA                                            u6061 097A  
                                          u5270 2664                                            u4390 2EEC  
                                          u4470 26E0                                            u4550 2A1E  
                                          u4630 2C0E                                            u4710 341A  
                                          u5190 1CA4                                            u5430 16D0  
                                          u5350 13C2                                            u5510 2FA0  
                                          u6310 0FD0                                            u6230 0CDC  
                                          u6150 0AF2                                            u6070 099A  
                                          u5271 2660                                            u4391 2EE8  
                                          u4471 26DC                                            u4551 2A1A  
                                          u4631 2C0A                                            u4711 3414  
                                          u5191 1CA0                                            u5431 16CC  
                                          u5511 2F9C                                            u6311 0FCC  
                                          u6231 0CD8                                            u6151 0AEE  
                                          u6071 0996                                            u4800 31FE  
                                          u5280 2676                                            u4560 2A48  
                                          u4640 2C38                                            u4720 341C  
                                          u5360 13D8                                            u5440 3124  
                                          u5600 2908                                            u5520 2FE8  
                                          u6320 1028                                            u6240 0D7E  
                                          u6160 0B26                                            u6080 09CE  
                                          u4801 31FA                                            u5281 2672  
                                          u4481 270A                                            u4561 2A44  
                                          u4641 2C34                                            u5361 13D4  
                                          u5441 3120                                            u5601 2904  
                                          u5521 2FE4                                            u6321 1024  
                                          u6241 0D7A                                            u6161 0B22  
                                          u6081 09CA                                            u4810 322C  
                                          u4490 272E                                            u4570 2A76  
                                          u4650 2C66                                            u4730 3372  
                                          u5370 13FE                                            u5290 11F6  
                                          u5610 2918                                            u5530 3396  
                                          u5450 364C                                            u6250 0DDA  
                                          u6170 0B42                                            u6090 09E2  
                                          u4811 3228                                            u4491 272A  
                                          u4571 2A72                                            u4651 2C62  
                                          u4731 336C                                            u5371 13FA  
                                          u5291 11F2                                            u5611 2914  
                                          u5531 3392                                            u5451 3648  
                                          u6171 0B3E                                            u6091 09DE  
                                          i2l20 352A                                            u5460 3662  
                                          u4660 2CCE                                            u4820 319E  
                                          u4580 2ABE                                            u4900 1952  
                                          u4740 3374                                            u5380 1472  
                                          u5620 2978                                            u5700 246C  
                                          u5540 325A                                            u6260 0E64  
                                          u6180 0B52                                            u5461 365E  
                                          u4661 2CCA                                            u4821 319A  
                                          u4581 2ABA                                            u4901 194E  
                                          u5381 146E                                            u5621 2974  
                                          u5701 2468                                            u5541 3256  
                                          u6261 0E60                                            u6181 0B4E  
                                          u5470 36A4                                            u4670 2CF0  
                                          u4910 1970                                            u4830 1786  
                                          u4750 315E                                            u5390 1498  
                                          u5630 2988                                            u5550 2E70  
                                          u5710 24A6                                            u6270 0EC2  
                                          u6190 0BBA                                            u5471 369E  
                                          u4671 2CEC                                            u4911 196C  
                                          u4831 1780                                            u4591 2B06  
                                          u4751 3158                                            u5391 1494  
                                          u5631 2984                                            u5551 2E6C  
                                          u5711 24A2                                            u6271 0EBE  
                                          u6255 0DD0                                            u6191 0BB6  
                                          u5480 358E                                            u4680 2D46  
                                          u4920 198A                                            u4840 1788  
                                          u4760 3160                                            u5560 2E86  
                                          u5720 24F4                                            u5640 2340  
                                          u6280 0EE8                                            u5800 03B4  
                                          u5481 358A                                            u4681 2D42  
                                          u4921 1986                                            u5561 2E82  
                                          u5721 24F0                                            u5641 233C  
                                          u6281 0EE4                                            u5801 03B0  
                                          u5490 35A0                                            u4690 2D54  
                                          u4930 19A4                                            u4850 179E  
                                          u4770 3176                                            u5570 2EB8  
                                          u5650 235E                                            u6290 0EFC  
                                          u5810 03FC                                            u5491 359C  
                                          u4691 2D50                                            u4931 19A0  
                                          u4851 179A                                            u4771 3172  
                                          u5571 2EB4                                            u5651 235A  
                                          u6291 0EF8                                            u5811 03F8  
                                          i2l36 003A                                            u5476 36A6  
                                          u4780 3452                                            u4940 19B2  
                                          u4860 17CC                                            u5580 285A  
                                          u5660 237E                                            u5900 06C6  
                                          u5820 043C                                            u4781 344C  
                                          u4941 19AE                                            u4861 17C8  
                                          u5581 2856                                            u5661 237A  
                                          u5901 06C2                                            u5821 0438  
                                          u4790 3454                                            u4950 19C4  
                                          u4870 17E8                                            u5590 28A8  
                                          u5670 239C                                            u5910 06DE  
                                          u5830 047E                                            u5750 00A6  
                                          u4951 19C0                                            u4871 17E4  
                                          u5591 28A4                                            u5671 2398  
                                          u5911 06DA                                            u5831 047A  
                                          u5751 00A2                                            u4960 19D2  
                                          u4880 1816                                            u5680 23D6  
                                          u5920 06F4                                            u5840 0502  
                                          u5760 011E                                            u4961 19CE  
                                          u4881 1812                                            u5681 23D2  
                                          u5921 06F0                                            u5761 011A  
                                          u4970 19EA                                            u4890 1824  
                                          u5690 2424                                            u5930 0718  
                                          u5850 0582                                            u5770 018C  
                                          u4971 19E6                                            u4891 1820  
                                          u5691 2420                                            u5931 0714  
                                          u5851 057E                                            u4980 1F30  
                                          u5940 075C                                            u5860 05C4  
                                          u4981 1F2C                                            u5941 0758  
                                          u5861 05C0                                            u5845 04F8  
                                          u4990 1F4C                                            u5950 0790  
                                          u5870 0630                                            u5790 0372  
                                          u4991 1F48                                            u5951 078C  
                                          u5871 062C                                            u5791 036E  
                                          u5775 0182                                            u5960 07A4  
                                          u5880 0646                                            u5961 07A0  
                                          u5881 0642                                            u5785 0236  
                                          u5970 07D8                                            u5890 06A0  
                                          u5971 07D4                                            u5891 069C  
                                          u5980 07F4                                            u5981 07F0  
                                          u5990 0804                                            u5991 0800  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 367E                                            abs@a 0026  
                                          _dbuf 0180                                            _atoi 2502  
                                          _ctoa 318C                                            _main 0052  
                                          _dtoa 1754                                   ?_EUSART1_Read 0001  
                                          _prec 003B                                            _nout 00C6  
                                          pad@i 002D                                            pad@p 002A  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002F                                            fsr2l 000FD9  
                                          btemp 004C                                            _utoa 1F22  
                                          _xtoa 1A38                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00B6  
                                          start 004E                           ??_EPWM1_LoadDutyValue 0003  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0028                                           ??_pad 002C  
                       __end_of_TMR0_Initialize 3490                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 364E  
                               __end_of___aodiv 2824                                           ?_atoi 001B  
                                   ?_SPI2_Close 0001                                           ?_ctoa 0031  
                                         ?_main 0001                                           ?_dtoa 0060  
                               __end_of___aomod 2B00                                           STR_10 FFEE  
                                         STR_11 FFFD                                           STR_20 FB43  
                                         STR_12 FFEE                                           STR_13 FFAE  
                                         STR_21 FE6F                                           STR_30 FB43  
                                         STR_22 FB43                                           STR_14 FF0B  
                                         STR_15 FB43                                           STR_31 FFD2  
                                         STR_23 FCAE                                           STR_32 FFF5  
                                         STR_16 FFB1                                           STR_40 FD56  
                                         STR_24 FC36                                           STR_33 FFF5  
                                         STR_41 FFEE                                           STR_17 FFDA  
                                         STR_25 FB0A                                           STR_26 FB43  
                                         STR_42 FFFD                                           STR_18 FEF6  
                                         STR_34 FD37                                           STR_50 FB77  
                                         STR_43 FFE1                                           STR_19 FE87  
                                         STR_35 FD75                                           STR_27 FBA9  
                                         STR_51 F381                                           STR_52 FF48  
                                         STR_36 FE9F                                           STR_60 FC89  
                                         STR_28 FC0A                                           STR_44 FA96  
                                         STR_61 FECC                                           STR_53 FE56  
                                         STR_29 FD17                                           STR_45 F3C8  
                                         STR_37 F335                                           STR_70 FFAE  
                                         STR_46 FFAE                                           STR_38 FFAE  
                                         STR_54 FD8E                                           STR_62 FD93  
                                         STR_71 FFA2                                           STR_63 FF20  
                                         STR_39 FE21                                           STR_55 FCD3  
                                         STR_47 FAD0                                           STR_72 FF6F  
                                         STR_64 FDEA                                           STR_48 FCF6  
                                         STR_56 FBDA                                           STR_80 F488  
                                         STR_57 FAD0                                           STR_73 FF80  
                                         STR_65 FF34                                           STR_49 FEB6  
                                         STR_81 F4C6                                           STR_58 FCF6  
                                         STR_74 FFEE                                           STR_66 FF5C  
                                         STR_90 F868                                           STR_82 F504  
                                         STR_59 FEB6                                           STR_75 FFFD  
                                         STR_67 FFEE                                           STR_91 F8A6  
                                         STR_83 F542                                           STR_68 FFFD  
                                         STR_76 FFEE                                           STR_92 F960  
                                         STR_84 F580                                           STR_77 FFAE  
                                         STR_69 FFEE                                           STR_93 F99E  
                                         STR_85 F5FC                                           STR_94 F9DC  
                                         STR_86 F678                                           STR_78 F40C  
                                         STR_95 FA1A                                           STR_87 F6F4  
                                         STR_79 F44A                                           STR_96 FA58  
                                         STR_88 F732                                           STR_97 F922  
                                         STR_89 F7AE                                           STR_98 F922  
                                         STR_99 F8E4                       TMR0_ReadTimer@readValHigh 0008  
                                         ?_utoa 0060                                           _T0CON 000FD5  
                               __end_of___lodiv 2BF0                                           ?_xtoa 0060  
                                         _T2CON 000FBA                                 __end_of___lomod 2CC0  
                                         i2l160 3630                                           i2l170 34FA  
                                         i2l163 370E                                 _TMR0_WriteTimer 36CA  
                                         i2l176 371C                                           i2l614 1E06  
                                         i2l630 1F20                                           i2l627 1EA0  
                                  vfpfcnvrt@fmt 0081                                           _TMR0H 000FD7  
                                  vfpfcnvrt@llu 0095                                           _TMR0L 000FD6  
                                         _TRISA 000F92                                           _TRISB 000F93  
                                         _TRISC 000F94                                    _stopPlayback 0046  
             __size_of_TMR0_SetInterruptHandler 000A                              __size_of_SPI2_Open 00AC  
                     ?_TMR0_SetInterruptHandler 0014                                __end_of_TMR0_ISR 34FC  
                                  main@sinIndex 00D0                                           _flags 003D  
                                         _fputc 2EC8                                 __end_of_isalpha 337A  
                                         _fputs 327C                                 __end_of_isdigit 345A  
                                         atoi@n 0028                                           pad@fp 0026  
                                         atoi@s 001B                                           _width 0039  
                                         ctoa@c 0033                                           _putch 36FC  
                                         ctoa@w 0034                                           main@i 01BD  
                                         dtoa@d 0062                                           dtoa@i 007A  
                                         dtoa@n 0072                                           dtoa@p 006C  
                                         dtoa@s 0070                                           dtoa@w 006E  
                               __end_of_islower 33EA                                 __end_of_isspace 3238  
                                ?_EUSART1_Write 0001                                 __end_of_isupper 3422  
                                         pclath 000FFA                                    main@printVal 01A5  
                                         tablat 000FF5                                  ??_EUSART1_Read 0014  
                                         ttemp5 004D                                           ttemp6 0050  
                                         ttemp7 0054                                           utoa@d 0062  
                                         utoa@i 0076                                           utoa@n 006E  
                                         utoa@p 006A                                           utoa@w 006C  
                                         status 000FD8                                           wtemp8 004D  
                                         xtoa@c 007D                                           xtoa@d 0062  
                                         xtoa@i 007B                                           xtoa@n 0073  
                                         xtoa@p 006F                                           xtoa@w 0071  
                                         xtoa@x 006A                                 __end_of_toupper 318C  
                              ___lodiv@dividend 0014              _EUSART1_DefaultFramingErrorHandler 000000  
                           myTMR0ISR@useBuffer1 000F                                    _toupper$2111 0020  
                               __initialization 2FEC                    SDCARD_ReadBlock@sdCardBuffer 0019  
                                  __end_of_atoi 269C                                    __end_of_ctoa 31E6  
                    __end_of_EUSART1_Initialize 333E                                    __end_of_main 11D0  
                                  __end_of_dtoa 1A38                                    __end_of_utoa 212A  
                             _SPI2_ExchangeByte 364E                                    __end_of_xtoa 1D16  
             __size_of_SDCARD_PollWriteComplete 0038                       ?_SDCARD_PollWriteComplete 0001  
                       __end_of_TMR2_Initialize 36CA                     ?_INTERRUPT_InterruptManager 0001  
                            ?_SPI2_ExchangeByte 0001                                          ??_atoi 001D  
                                        ??_ctoa 0034                                          ??_main 00BE  
                                        ??_dtoa 0031                                          ??_utoa 0031  
                                        ??_xtoa 0031                                   __activetblptr 000003  
                      __size_of_SPI2_Initialize 0012                                ___lodiv@quotient 0024  
                           ??_SPI2_ExchangeByte 0014                                    myTMR0ISR@mic 000D  
                                        _ADCON0 000FC2                                          _ADCON1 000FC1  
                                        _ADCON2 000FC0                                          ?_fputc 0016  
                                        STR_100 F7EC                                          STR_101 F82A  
                                        STR_110 F488                                          STR_102 F770  
                                        ?_fputs 001F                                          STR_111 F44A  
                                        STR_103 F6B6                                          STR_112 F40C  
                                        STR_120 FFF7                                          STR_104 F63A  
                                        STR_121 FFAE                                          STR_113 FE06  
                                        STR_105 F5BE                                          STR_106 F580  
                                        STR_122 FFE8                                          STR_114 FE3C  
                                        _ADRESH 000FC4                                          STR_107 F542  
                                        STR_123 FF8D                                          STR_115 FDCE  
                                        STR_108 F504                                          STR_124 F37F  
                                        STR_116 FFF3                                          STR_109 F4C6  
                                        STR_117 FF8F                                          STR_125 FFF7  
                                        STR_126 FFAE                                          STR_118 FF8E  
                                        _ADRESL 000FC3                                          STR_119 F37F  
                                        _CCPR1H 000FBF                                          _CCPR1L 000FBE  
                                        _ANSELA 000F38                                          ?_putch 0001  
                                        _ANSELB 000F39                                          _ANSELC 000F3A  
                  __size_of_EUSART1_is_rx_ready 0014                                          i2l4101 1E8C  
                                        i2l4021 1D18                                          i2l4103 1E9C  
                                        i2l4031 1D62                                          i2l4023 1D2E  
                                        i2l4113 1ECE                                          i2l4041 1D88  
                                        i2l4033 1D6A                                          i2l4025 1D32  
                                        i2l4043 1D90                                          i2l4035 1D6A  
                                        i2l4027 1D3C                                          i2l4019 1D16  
                                        i2l4131 34E2                                          i2l4123 34C6  
                                        i2l4061 1DE4                                          i2l4045 1D98  
                                        i2l4029 1D4C                                          i2l4037 1D72  
                                        i2l4117 1EDE                                          i2l4125 34C8  
                                        i2l4063 1DE4                                          i2l4055 1DB2  
                                        i2l4047 1DA0                                          i2l4039 1D84  
                                        i2l4127 34CC                                          i2l4081 1E44  
                                        i2l4065 1DEA                                          i2l4057 1DCC  
                                        i2l4049 1DA0                                          i2l4129 34D0  
                                        i2l4091 1E66                                          i2l4083 1E44  
                                        i2l4067 1DF2                                          i2l4059 1DD0  
                                        i2l4093 1E6A                                          i2l4069 1E02  
                                        i2l4421 0028                                          i2l4095 1E7E  
                                        i2l4079 1E34                                          i2l4423 0036  
                                        i2l4097 1E7E                                          i2l4089 1E56  
                                        i2l4099 1E84                                          i2l4419 001A  
                                        i2l3933 34FC                                          i2l3943 3614  
                                        i2l3945 361C                                          i2l3961 370A  
                                        i2l6409 1EF2                                          i2l3947 3628  
                                        i2l3959 3706                                          _RCREG1 000FAE  
                                        _RCSTA1 000FAB                                          _OSCCON 000FD3  
                                        _PLLRDY 007E97                                   vfpfcnvrt@done 0091  
                                        _SPBRG1 000FAF                                          _TXREG1 000FAD  
                                        _TXSTA1 000FAC                             __size_of_SPI2_Close 0004  
                             __end_of_SPI2_Open 2E2E                       __end_of_SPI2_ExchangeByte 3668  
                                  _CCPTMRS0bits 000F49                                    vfprintf@cfmt 00A4  
                                     ??___aodiv 0024                                       ??___aomod 0024  
                                        ___wmul 35CE                   incrementAddress@sdCardAddress 0014  
                                 main@numBlocks 01A1                         __end_of_TMR0_WriteTimer 36D4  
                              main@failureIndex 01CF                                       ??___lodiv 0024  
                                     ??___lomod 0024                       i2TMR0_WriteTimer@timerVal 0009  
                      ?_EUSART1_SetErrorHandler 0014                                ?_TMR0_Initialize 0001  
                                        clear_0 3024                                          clear_1 3036  
                                        clear_2 3042                                          clear_3 304E  
                                        _printf 3558                                          pad@buf 0028  
              ??_EUSART1_SetOverrunErrorHandler 0016                 ?_EUSART1_SetOverrunErrorHandler 0014  
                                        ctoa@fp 0031                                          dtoa@fp 0060  
                                        _strlen 3490                                          fputc@c 0016  
                             ?_incrementAddress 0014                                          fputs@c 0023  
                                        fputs@i 0024                                    __pdataCOMRAM 004A  
                                        fputs@s 001F                                       ??_isalpha 0016  
                                     ??_isdigit 0016                                       ??_islower 0016  
                                  __mediumconst F316                                       ??_isspace 0016  
                                        tblptrh 000FF7                                       ??_isupper 0016  
                                        tblptrl 000FF6                                          tblptru 000FF8  
                            ??_incrementAddress 0018                             main@writeEndAddress 01C3  
                              __end_of_vfprintf 312E                                 ??_EUSART1_Write 0014  
                                        utoa@fp 0060        TMR0_SetInterruptHandler@InterruptHandler 0014  
                                        xtoa@fp 0060                                       ??_toupper 001C  
                 __size_of_INTERRUPT_Initialize 0004                               _SYSTEM_Initialize 35A8  
                                    __accesstop 0060                         __end_of__initialization 3054  
                            ?_SYSTEM_Initialize 0001                                   ___rparam_used 000001  
                              _SDCARD_ReadBlock 2E2E                               ?_EPWM1_Initialize 0001  
                    __end_of_spi2_configuration F335                                  __pcstackCOMRAM 0001  
                                  __pidataBANK0 371A                             ??_SYSTEM_Initialize 0018  
                                     ?_TMR0_ISR 0001                              ??_EPWM1_Initialize 0014  
                                 __end_of_fputc 2F5E                                   __end_of_fputs 32C0  
                                 __end_of_putch 3706                         __size_of_TMR0_ReadTimer 001E  
                              ?_TMR2_Initialize 0001                                  main@endAddress 01AF  
                          __end_of_EUSART1_Read 35A8                                         ??_fputc 001A  
                     __end_of_SYSTEM_Initialize 35CE                                         ??_fputs 0023  
                            __size_of_myTMR0ISR 020C                                         ??_putch 0015  
                            SDCARD_WriteBlock@i 001B                               ??_SPI2_Initialize 0014  
                                    __pbssBANK0 00C2                                      __pbssBANK1 0100  
                               myTMR0ISR@buffer 004A                                      _doPlayback 00D1  
                             _writeFailureTable 01D5                      __size_of_SPI2_ExchangeByte 001A  
               __end_of_EUSART1_SetErrorHandler 36FC                __end_of_TMR0_SetInterruptHandler 36DE  
                                       ?___wmul 0014                                      ??_TMR0_ISR 0010  
                              ?_TMR0_WriteTimer 0014                                         _CCP1CON 000FBD  
                                       _ECCP1AS 000FB6                                         ?_printf 00A6  
                                  ??_SPI2_Close 0014                         __size_of_ADC_Initialize 0016  
                                       ?_strlen 0014          __end_of_EUSART1_SetFramingErrorHandler 36F2  
       __size_of_EUSART1_SetFramingErrorHandler 000A                  _EUSART1_SetFramingErrorHandler 36E8  
                                       _OSCCON2 000FD2                              __size_of_vfpfcnvrt 0584  
                                    _collecting 00D2                                         _OSCTUNE 000F9B  
                                       _PWM1CON 000FB7                                         _SPBRGH1 000FB0  
                                       _SSP2ADD 000F6E                                         _SSP2BUF 000F6F  
                              ___lomod@dividend 0014                               SDCARD_ReadBlock@i 001B  
                   __end_of_EPWM1_LoadDutyValue 352C                __end_of_SDCARD_PollWriteComplete 33B2  
                            __end_of_SPI2_Close 3718                            _ADC_InterruptHandler 00C8  
                                       __Hparam 0000                                         __Lparam 0000  
                         __end_of_hexDumpBuffer 2502                       SDCARD_Initialize@response 00B7  
                                       ___aodiv 269C                                         ___aomod 299C  
                               __size_of___wmul 0026                                         ___lodiv 2B00  
                                       ___lomod 2BF0                               __end_of_myTMR0ISR 1F22  
                                     ?_vfprintf 009E                             _EUSART1_is_rx_ready 3694  
                                       __pcinit 2FEC                                         __ramtop 1000  
                                       __ptext0 0052                                         __ptext1 212A  
                                       __ptext2 305E                                         __ptext3 3238  
                                       __ptext4 2316                                         __ptext5 36CA  
                                       __ptext6 35A8                                         __ptext7 36BA  
                                       __ptext8 345A                                         __ptext9 36D4  
                               __size_of_printf 0028                                       _T0CONbits 000FD5  
                               __size_of_strlen 0036                           _OSCILLATOR_Initialize 3632  
                                     _T2CONbits 000FBA                                    __size_of_abs 0040  
                                  __size_of_pad 00C2                                         _isalpha 333E  
                                       _isdigit 3422                              _EUSART1_Initialize 3300  
                                       _islower 33B2                        ??_PIN_MANAGER_Initialize 0014  
                                       _isspace 31E6                                         _isupper 33EA  
                                  _sdCardBuffer 07D5                                         atoi@neg 0021  
                                       main@cmd 01BC                      __size_of_SYSTEM_Initialize 0026  
                                       _toupper 312E                            end_of_initialization 3054  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                    _sampleRate 00D5                                         fputc@fp 0018  
                   _EUSART1_OverrunErrorHandler 00CC                                         fputs@fp 0021  
                                 ?_printAddress 00B4                   SDCARD_WriteBlock@sdCardBuffer 0019  
                             __end_of_vfpfcnvrt 1754                           TMR0_ReadTimer@readVal 0005  
                                       postdec1 000FE5                                         postdec2 000FDD  
                                       postinc0 000FEE                                         postinc1 000FE6  
                                       postinc2 000FDE                           __size_of_EUSART1_Read 0028  
                                    ??_vfprintf 0039                                       _SPI2_Open 2D82  
                                _TMR0_ReadTimer 3614                            ??_EUSART1_Initialize 0016  
                         SDCARD_WriteBlock@addr 0015                                         strlen@a 0016  
                                       strlen@s 0014                                      _printAscii 212A  
                      _TMR0_SetInterruptHandler 36D4                        __end_of_SDCARD_ReadBlock 2EC8  
                                     _TRISBbits 000F93                                      main@i_1309 01B5  
                                    main@i_1279 01B3                                      main@i_1289 01B7  
              __size_of_EUSART1_SetErrorHandler 000A                  SDCARD_PollWriteComplete@status 0015  
                           EUSART1_Write@txData 0014                           ??_EUSART1_is_rx_ready 0014  
                           printAddress@address 00B4                                    _EUSART1_Read 3580  
                     __size_of_incrementAddress 0044                                  ??_printAddress 0039  
                                    main@status 01D0                        _SDCARD_PollWriteComplete 337A  
                        __end_of_TMR0_ReadTimer 3632                    __end_of_INTERRUPT_Initialize 3714  
                             _SDCARD_Initialize 2824                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 0083                                     vfpfcnvrt@fp 007F  
                                   vfpfcnvrt@ll 0089                                  __end_of___wmul 35F4  
                                 __pidataCOMRAM 3718                               __size_of_TMR0_ISR 0036  
                            ?_SDCARD_Initialize 0001                                  _ADC_Initialize 3668  
                        ?_OSCILLATOR_Initialize 0001                                 _SPI2_Initialize 36A8  
                                __end_of_printf 3580                                  __end_of_strlen 34C6  
                            _spi2_configuration F331                             start_initialization 2FEC  
                               ___lodiv@divisor 001C                       __size_of_EPWM1_Initialize 0020  
                               ___lodiv@counter 002C                             ??_SDCARD_Initialize 0039  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 3300                                     __end_of_pad 2D82  
                                   __end_of_sin F331                                     putch@txData 0015  
                  EPWM1_LoadDutyValue@dutyValue 0001                           __end_of_EUSART1_Write 3694  
                             main@sdCardAddress 01CB                       __end_of_SDCARD_Initialize 299C  
                                   vfprintf@fmt 00A0                                 ?_TMR0_ReadTimer 0001  
                                      ??___wmul 0018                          __end_of_ADC_Initialize 367E  
                                   __pdataBANK0 00D5                                     ?_printAscii 0001  
                                      ??_printf 0039                           SPI2_ExchangeByte@data 0014  
                                      ??_strlen 0016                                     __pbssBIGRAM 01D5  
                                   __pbssCOMRAM 0039                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 01A0                             hexDumpBuffer@j_1440 00BA  
                              ___aodiv@dividend 0014                        __size_of_TMR2_Initialize 0010  
              ??_EUSART1_SetFramingErrorHandler 0016                 ?_EUSART1_SetFramingErrorHandler 0014  
                             main@printedBlocks 01A7                              _writeFailureStatus 0100  
                                     _atoi$2035 0023                                       _atoi$2036 0027  
                                     _atoi$2037 0025                           _TMR0_InterruptHandler 0043  
                                myTMR0ISR@state 0045                          _PIN_MANAGER_Initialize 352C  
                                     _dtoa$1980 006A                               _SDCARD_WriteBlock 2F5E  
                                     __pintcode 0008                                   __pmediumconst F316  
                       __end_of_SPI2_Initialize 36BA                                        ?___aodiv 0014  
                                      ?___aomod 0014                                ___aodiv@quotient 0026  
                            ?_SDCARD_WriteBlock 0015                                        ?___lodiv 0014  
                                      ?___lomod 0014                                 ?_ADC_Initialize 0001  
                                   ??_SPI2_Open 0014                SPI2_Open@spi2UniqueConfiguration 0015  
                  ??_INTERRUPT_InterruptManager 0010                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 1D16                                 ___lomod@divisor 001C  
                           ??_SDCARD_WriteBlock 001B                                 ___lomod@counter 0024  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0014                                        ?_isdigit 0014  
                         main@writeStartAddress 01BF                            __end_of_printAddress 30CA  
                      __size_of_TMR0_WriteTimer 000A                            _EUSART1_ErrorHandler 00CA  
                                      ?_islower 0014                                        ?_isspace 0014  
                                      ?_isupper 0014                         _EUSART1_SetErrorHandler 36F2  
                                __size_of_fputc 0096                                  __size_of_fputs 0044  
                                      ?_toupper 001A                                  __size_of_putch 000A  
                          _INTERRUPT_Initialize 3710                                     _buffer1Full 00D4  
                                   _buffer2Full 00D3                               ??_TMR0_Initialize 0016  
                                ___wmul@product 0018         EUSART1_SetErrorHandler@interruptHandler 0014  
                                      _LATBbits 000F8A                             __size_of_printAscii 01EC  
                              _incrementAddress 3238                       __end_of_SDCARD_WriteBlock 2FEC  
           __size_of_INTERRUPT_InterruptManager 0046                                        i2u340_40 1E34  
                                      i2u340_41 1E30                                        i2u341_40 1E56  
                                      i2u333_40 1D4C                      ??_TMR0_SetInterruptHandler 0016  
                                      i2u341_41 1E52                                        i2u333_41 1D48  
                                      i2u342_40 1E7E                                        i2u334_40 1D84  
                                      i2u342_41 1E7A                                        i2u334_41 1D80  
                                      i2u343_40 1E9C                                        i2u335_40 1DB2  
                                      i2u343_41 1E98                                        i2u335_41 1DAE  
                                      i2u344_40 1EB2                                        i2u336_40 1DE4  
                                      i2u344_41 1EAC                                        i2u336_41 1DE0  
                                      i2u345_40 1EB4                                        i2u337_40 1E02  
                                      i2u337_41 1DFE                                        _PIR1bits 000F9E  
                                      i2u346_40 1ECE                                        i2u338_40 1E18  
                                      i2u346_41 1ECA                                        i2u338_41 1E12  
                                      i2u339_40 1E1A                                        i2u347_40 34E2  
                                      i2u347_41 34DE                                        i2u348_48 34E8  
                                      i2u348_49 34FA                                        _PIR3bits 000FA4  
                                      i2u375_40 0028                                        i2u375_41 0024  
                               main@readAddress 01C7                                        i2u376_40 0036  
                                      i2u376_41 0032                    __size_of_EPWM1_LoadDutyValue 0030  
                    __size_of_SDCARD_Initialize 0178                                        _RCONbits 000FD0  
                                      _SSP2CON1 000F6C                                        _SSP2CON2 000F6B  
                                      _TMR0_ISR 34C6                                        _PSTR1CON 000FB9  
                                      _SSP2STAT 000F6D                                       _vfpfcnvrt 11D0  
                      TMR0_ReadTimer@readValLow 0007                                       _xtoa$1997 006B  
                                     _xtoa$1998 006D                                      _ADCON0bits 000FC2  
                             ___wmul@multiplier 0014                                      ?_myTMR0ISR 0001  
                              _EPWM1_Initialize 35F4                               i2_TMR0_WriteTimer 3706  
                             ?_SDCARD_ReadBlock 0015                                    _isspace$2062 001A  
                        __size_of_hexDumpBuffer 01EC                                      vfpfcnvrt@c 009D  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 001B  
                    ??_SDCARD_PollWriteComplete 0015                               ??_TMR2_Initialize 0014  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 00A2                                        __Lrparam 0000  
                                    vfprintf@fp 009E                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0014                                __size_of___aodiv 0188  
                            SDCARD_Initialize@i 00B4                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 007F  
                               ___aodiv@divisor 001C                                 ___aodiv@counter 0024  
                     __end_ofi2_TMR0_WriteTimer 3710                       ??_EUSART1_SetErrorHandler 0016  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 36A8  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 36A8                                        __ptext11 352C  
                                      __ptext20 2D82                                        __ptext12 3632  
                                      __ptext21 3714                                        __ptext13 3710  
                                      __ptext30 312E                                        __ptext22 2F5E  
                                      __ptext14 3300                                        __ptext31 33B2  
                                      __ptext23 2E2E                                        __ptext15 36DE  
                                      __ptext40 269C                                        __ptext32 33EA  
                                      __ptext24 337A                                        __ptext16 36E8  
                                      __ptext41 318C                                        __ptext33 333E  
                                      __ptext25 2824                                        __ptext17 36F2  
                                      __ptext50 3422                                        __ptext42 2CC0  
                                      __ptext34 1F22                                        __ptext26 3558  
                                      __ptext18 35F4                                        __ptext51 35CE  
                                      __ptext43 3490                                        __ptext35 2BF0  
                                      __ptext27 30CA                                        __ptext19 3668  
                                      __ptext60 3614                                        __ptext52 364E  
                                      __ptext44 327C                                        __ptext36 2B00  
                                      __ptext28 11D0                                        __ptext61 34FC  
                                      __ptext53 3694                                        __ptext45 2EC8  
                                      __ptext37 1754                                        __ptext29 1A38  
                                      __ptext62 0000                                        __ptext54 3580  
                                      __ptext46 36FC                                        __ptext38 32C0  
                                      __ptext47 367E                                        __ptext39 299C  
                                      __ptext56 34C6                                        __ptext48 2502  
                                      __ptext57 371C                                        __ptext49 31E6  
                                      __ptext58 1D16                                        __ptext59 3706  
                              __size_of_isupper 0038                                    _SSP2CON1bits 000F6C  
                       TMR0_WriteTimer@timerVal 0014                               ??_TMR0_WriteTimer 0016  
                              __size_of_toupper 005E                                   __size_of_atoi 019A  
                                 __size_of_ctoa 005A                           main@writeAddress_1285 01D1  
                                 __size_of_main 117E                                   __size_of_dtoa 02E4  
                                 __size_of_utoa 0208                                ??_TMR0_ReadTimer 0003  
                                 __size_of_xtoa 02DE                      __size_of_SDCARD_WriteBlock 008E  
          __end_of_TMR0_DefaultInterruptHandler 371E           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 371C  EUSART1_SetOverrunErrorHandler@interruptHandler 0014  
                                 _hexDumpBuffer 2316                                   _sdCardBuffer1 05D5  
                                 _sdCardBuffer2 03D5                                        int$flags 004C  
                                      _vfprintf 30CA              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                        main@addr 01AB  
                                     printf@fmt 00A6                           __size_of_printAddress 006C  
                                  ??_printAscii 0039                     _EUSART1_FramingErrorHandler 00CE  
                              ___aomod@dividend 0014                                     ??_myTMR0ISR 000B  
                                _vfpfcnvrt$2012 0093                                      _INTCONbits 000FF2  
                                      isalpha@c 0014                                        isdigit@c 0014  
                        ??_INTERRUPT_Initialize 0014                        SDCARD_Initialize@verbose 00B6  
                                      intlevel2 0000                                        islower@c 0014  
                                      isspace@c 0014                         ?_PIN_MANAGER_Initialize 0001  
        __end_of_EUSART1_SetOverrunErrorHandler 36E8         __size_of_EUSART1_SetOverrunErrorHandler 000A  
                _EUSART1_SetOverrunErrorHandler 36DE                                      _RCSTA1bits 000FAB  
                            __end_of_printAscii 2316                                        isupper@c 0014  
                              ??_ADC_Initialize 0014                                    _printAddress 305E  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 00B4                                        printf@ap 00B2  
EUSART1_SetFramingErrorHandler@interruptHandler 0014                                 ___aomod@divisor 001C  
                                   ??_vfpfcnvrt 0085                                 ___aomod@counter 0024  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 0049  
                                    _SPI2_Close 3714                        __end_of_incrementAddress 327C  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 345A  
                                      toupper@c 001A                             _EPWM1_LoadDutyValue 34FC  
                                  ___aodiv@sign 0025                  __end_of_PIN_MANAGER_Initialize 3558  
                     hexDumpBuffer@sdCardBuffer 00B4                                    ___aomod@sign 0025  
                                  fp__myTMR0ISR 0000                        __end_of_EPWM1_Initialize 3614  
                          ?_EPWM1_LoadDutyValue 0001  
