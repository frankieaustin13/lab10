

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Nov 03 19:52:34 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F26K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   122  0000                     
   123 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   124  0000                     
   125 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   126  0000                     
   127                           	psect	idataCOMRAM
   128  0037F0                     __pidataCOMRAM:
   129                           	callstack 0
   130                           
   131                           ;initializer for myTMR0ISR@buffer
   132  0037F0  DE                 	db	low _sdCardBuffer1
   133  0037F1  05                 	db	high _sdCardBuffer1
   134                           
   135                           	psect	idataBANK0
   136  0037F2                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _sampleRate
   140  0037F2  0640               	dw	1600
   141                           
   142                           	psect	mediumconst
   143  00F2FA                     __pmediumconst:
   144                           	callstack 0
   145  00F2FA  00                 	db	0
   146  00F2FB                     _sin:
   147                           	callstack 0
   148  00F2FB  80                 	db	128
   149  00F2FC  9F                 	db	159
   150  00F2FD  BB                 	db	187
   151  00F2FE  D5                 	db	213
   152  00F2FF  E9                 	db	233
   153  00F300  F8                 	db	248
   154  00F301  FF                 	db	255
   155  00F302  FF                 	db	255
   156  00F303  F8                 	db	248
   157  00F304  E9                 	db	233
   158  00F305  D5                 	db	213
   159  00F306  BB                 	db	187
   160  00F307  9F                 	db	159
   161  00F308  80                 	db	128
   162  00F309  61                 	db	97
   163  00F30A  45                 	db	69
   164  00F30B  2B                 	db	43
   165  00F30C  17                 	db	23
   166  00F30D  08                 	db	8
   167  00F30E  01                 	db	1
   168  00F30F  01                 	db	1
   169  00F310  08                 	db	8
   170  00F311  17                 	db	23
   171  00F312  2B                 	db	43
   172  00F313  45                 	db	69
   173  00F314  61                 	db	97
   174  00F315                     __end_of_sin:
   175                           	callstack 0
   176  00F315                     _spi2_configuration:
   177                           	callstack 0
   178  00F315  01                 	db	1
   179  00F316  40                 	db	64
   180  00F317  01                 	db	1
   181  00F318  00                 	db	0
   182  00F319                     __end_of_spi2_configuration:
   183                           	callstack 0
   184  0000                     _ANSELA	set	3896
   185  0000                     _ANSELB	set	3897
   186  0000                     _ANSELC	set	3898
   187  0000                     _CCPTMRS0bits	set	3913
   188  0000                     _ADCON0	set	4034
   189  0000                     _ADRESL	set	4035
   190  0000                     _ADCON2	set	4032
   191  0000                     _ADCON1	set	4033
   192  0000                     _RCONbits	set	4048
   193  0000                     _PIR3bits	set	4004
   194  0000                     _SSP2BUF	set	3951
   195  0000                     _SSP2CON2	set	3947
   196  0000                     _SSP2CON1bits	set	3948
   197  0000                     _TRISBbits	set	3987
   198  0000                     _SSP2ADD	set	3950
   199  0000                     _SSP2CON1	set	3948
   200  0000                     _SSP2STAT	set	3949
   201  0000                     _ADRESH	set	4036
   202  0000                     _ADCON0bits	set	4034
   203  0000                     _LATBbits	set	3978
   204  0000                     _OSCTUNE	set	3995
   205  0000                     _OSCCON2	set	4050
   206  0000                     _OSCCON	set	4051
   207  0000                     _INTCON2bits	set	4081
   208  0000                     _WPUB	set	3937
   209  0000                     _TRISC	set	3988
   210  0000                     _TRISB	set	3987
   211  0000                     _TRISA	set	3986
   212  0000                     _LATC	set	3979
   213  0000                     _LATB	set	3978
   214  0000                     _LATA	set	3977
   215  0000                     _T2CONbits	set	4026
   216  0000                     _T2CON	set	4026
   217  0000                     _TMR2	set	4028
   218  0000                     _PR2	set	4027
   219  0000                     _T0CON	set	4053
   220  0000                     _INTCONbits	set	4082
   221  0000                     _TMR0L	set	4054
   222  0000                     _TMR0H	set	4055
   223  0000                     _T0CONbits	set	4053
   224  0000                     _TXREG1	set	4013
   225  0000                     _RCREG1	set	4014
   226  0000                     _RCSTA1bits	set	4011
   227  0000                     _TXSTA1bits	set	4012
   228  0000                     _PIR1bits	set	3998
   229  0000                     _SPBRGH1	set	4016
   230  0000                     _SPBRG1	set	4015
   231  0000                     _TXSTA1	set	4012
   232  0000                     _RCSTA1	set	4011
   233  0000                     _BAUDCON1	set	4024
   234  0000                     _CCPR1L	set	4030
   235  0000                     _CCPR1H	set	4031
   236  0000                     _PSTR1CON	set	4025
   237  0000                     _PWM1CON	set	4023
   238  0000                     _ECCP1AS	set	4022
   239  0000                     _CCP1CON	set	4029
   240  0000                     _PLLRDY	set	32407
   241  00F319                     STR_43:
   242  00F319  50                 	db	80	;'P'
   243  00F31A  72                 	db	114	;'r'
   244  00F31B  65                 	db	101	;'e'
   245  00F31C  73                 	db	115	;'s'
   246  00F31D  73                 	db	115	;'s'
   247  00F31E  20                 	db	32
   248  00F31F  61                 	db	97	;'a'
   249  00F320  6E                 	db	110	;'n'
   250  00F321  79                 	db	121	;'y'
   251  00F322  20                 	db	32
   252  00F323  6B                 	db	107	;'k'
   253  00F324  65                 	db	101	;'e'
   254  00F325  79                 	db	121	;'y'
   255  00F326  20                 	db	32
   256  00F327  74                 	db	116	;'t'
   257  00F328  6F                 	db	111	;'o'
   258  00F329  20                 	db	32
   259  00F32A  73                 	db	115	;'s'
   260  00F32B  74                 	db	116	;'t'
   261  00F32C  61                 	db	97	;'a'
   262  00F32D  72                 	db	114	;'r'
   263  00F32E  74                 	db	116	;'t'
   264  00F32F  20                 	db	32
   265  00F330  72                 	db	114	;'r'
   266  00F331  65                 	db	101	;'e'
   267  00F332  63                 	db	99	;'c'
   268  00F333  6F                 	db	111	;'o'
   269  00F334  72                 	db	114	;'r'
   270  00F335  64                 	db	100	;'d'
   271  00F336  69                 	db	105	;'i'
   272  00F337  6E                 	db	110	;'n'
   273  00F338  67                 	db	103	;'g'
   274  00F339  20                 	db	32
   275  00F33A  61                 	db	97	;'a'
   276  00F33B  75                 	db	117	;'u'
   277  00F33C  64                 	db	100	;'d'
   278  00F33D  69                 	db	105	;'i'
   279  00F33E  6F                 	db	111	;'o'
   280  00F33F  20                 	db	32
   281  00F340  61                 	db	97	;'a'
   282  00F341  6E                 	db	110	;'n'
   283  00F342  64                 	db	100	;'d'
   284  00F343  20                 	db	32
   285  00F344  70                 	db	112	;'p'
   286  00F345  72                 	db	114	;'r'
   287  00F346  65                 	db	101	;'e'
   288  00F347  73                 	db	115	;'s'
   289  00F348  73                 	db	115	;'s'
   290  00F349  20                 	db	32
   291  00F34A  61                 	db	97	;'a'
   292  00F34B  6E                 	db	110	;'n'
   293  00F34C  79                 	db	121	;'y'
   294  00F34D  20                 	db	32
   295  00F34E  6B                 	db	107	;'k'
   296  00F34F  65                 	db	101	;'e'
   297  00F350  79                 	db	121	;'y'
   298  00F351  20                 	db	32
   299  00F352  74                 	db	116	;'t'
   300  00F353  6F                 	db	111	;'o'
   301  00F354  20                 	db	32
   302  00F355  73                 	db	115	;'s'
   303  00F356  74                 	db	116	;'t'
   304  00F357  6F                 	db	111	;'o'
   305  00F358  70                 	db	112	;'p'
   306  00F359  20                 	db	32
   307  00F35A  72                 	db	114	;'r'
   308  00F35B  65                 	db	101	;'e'
   309  00F35C  63                 	db	99	;'c'
   310  00F35D  6F                 	db	111	;'o'
   311  00F35E  72                 	db	114	;'r'
   312  00F35F  64                 	db	100	;'d'
   313  00F360  69                 	db	105	;'i'
   314  00F361  6E                 	db	110	;'n'
   315  00F362  67                 	db	103	;'g'
   316  00F363  2E                 	db	46
   317  00F364  00                 	db	0
   318  00F365                     STR_57:
   319  00F365  4C                 	db	76	;'L'
   320  00F366  6F                 	db	111	;'o'
   321  00F367  67                 	db	103	;'g'
   322  00F368  20                 	db	32
   323  00F369  66                 	db	102	;'f'
   324  00F36A  69                 	db	105	;'i'
   325  00F36B  6C                 	db	108	;'l'
   326  00F36C  65                 	db	101	;'e'
   327  00F36D  20                 	db	32
   328  00F36E  6E                 	db	110	;'n'
   329  00F36F  61                 	db	97	;'a'
   330  00F370  6D                 	db	109	;'m'
   331  00F371  65                 	db	101	;'e'
   332  00F372  3A                 	db	58	;':'
   333  00F373  20                 	db	32
   334  00F374  42                 	db	66	;'B'
   335  00F375  72                 	db	114	;'r'
   336  00F376  6F                 	db	111	;'o'
   337  00F377  77                 	db	119	;'w'
   338  00F378  73                 	db	115	;'s'
   339  00F379  65                 	db	101	;'e'
   340  00F37A  20                 	db	32
   341  00F37B  61                 	db	97	;'a'
   342  00F37C  6E                 	db	110	;'n'
   343  00F37D  64                 	db	100	;'d'
   344  00F37E  20                 	db	32
   345  00F37F  70                 	db	112	;'p'
   346  00F380  72                 	db	114	;'r'
   347  00F381  6F                 	db	111	;'o'
   348  00F382  76                 	db	118	;'v'
   349  00F383  69                 	db	105	;'i'
   350  00F384  64                 	db	100	;'d'
   351  00F385  65                 	db	101	;'e'
   352  00F386  20                 	db	32
   353  00F387  61                 	db	97	;'a'
   354  00F388  20                 	db	32
   355  00F389  2E                 	db	46
   356  00F38A  63                 	db	99	;'c'
   357  00F38B  73                 	db	115	;'s'
   358  00F38C  76                 	db	118	;'v'
   359  00F38D  20                 	db	32
   360  00F38E  65                 	db	101	;'e'
   361  00F38F  78                 	db	120	;'x'
   362  00F390  74                 	db	116	;'t'
   363  00F391  65                 	db	101	;'e'
   364  00F392  6E                 	db	110	;'n'
   365  00F393  73                 	db	115	;'s'
   366  00F394  69                 	db	105	;'i'
   367  00F395  6F                 	db	111	;'o'
   368  00F396  6E                 	db	110	;'n'
   369  00F397  20                 	db	32
   370  00F398  74                 	db	116	;'t'
   371  00F399  6F                 	db	111	;'o'
   372  00F39A  20                 	db	32
   373  00F39B  79                 	db	121	;'y'
   374  00F39C  6F                 	db	111	;'o'
   375  00F39D  75                 	db	117	;'u'
   376  00F39E  72                 	db	114	;'r'
   377  00F39F  20                 	db	32
   378  00F3A0  66                 	db	102	;'f'
   379  00F3A1  69                 	db	105	;'i'
   380  00F3A2  6C                 	db	108	;'l'
   381  00F3A3  65                 	db	101	;'e'
   382  00F3A4  20                 	db	32
   383  00F3A5  6E                 	db	110	;'n'
   384  00F3A6  61                 	db	97	;'a'
   385  00F3A7  6D                 	db	109	;'m'
   386  00F3A8  65                 	db	101	;'e'
   387  00F3A9  0D                 	db	13
   388  00F3AA  0A                 	db	10
   389  00F3AB  00                 	db	0
   390  00F3AC                     STR_51:
   391  00F3AC  54                 	db	84	;'T'
   392  00F3AD  6F                 	db	111	;'o'
   393  00F3AE  20                 	db	32
   394  00F3AF  73                 	db	115	;'s'
   395  00F3B0  70                 	db	112	;'p'
   396  00F3B1  6F                 	db	111	;'o'
   397  00F3B2  6F                 	db	111	;'o'
   398  00F3B3  6C                 	db	108	;'l'
   399  00F3B4  20                 	db	32
   400  00F3B5  74                 	db	116	;'t'
   401  00F3B6  65                 	db	101	;'e'
   402  00F3B7  72                 	db	114	;'r'
   403  00F3B8  6D                 	db	109	;'m'
   404  00F3B9  69                 	db	105	;'i'
   405  00F3BA  6E                 	db	110	;'n'
   406  00F3BB  61                 	db	97	;'a'
   407  00F3BC  6C                 	db	108	;'l'
   408  00F3BD  20                 	db	32
   409  00F3BE  63                 	db	99	;'c'
   410  00F3BF  6F                 	db	111	;'o'
   411  00F3C0  6E                 	db	110	;'n'
   412  00F3C1  74                 	db	116	;'t'
   413  00F3C2  65                 	db	101	;'e'
   414  00F3C3  6E                 	db	110	;'n'
   415  00F3C4  74                 	db	116	;'t'
   416  00F3C5  73                 	db	115	;'s'
   417  00F3C6  20                 	db	32
   418  00F3C7  69                 	db	105	;'i'
   419  00F3C8  6E                 	db	110	;'n'
   420  00F3C9  74                 	db	116	;'t'
   421  00F3CA  6F                 	db	111	;'o'
   422  00F3CB  20                 	db	32
   423  00F3CC  61                 	db	97	;'a'
   424  00F3CD  20                 	db	32
   425  00F3CE  66                 	db	102	;'f'
   426  00F3CF  69                 	db	105	;'i'
   427  00F3D0  6C                 	db	108	;'l'
   428  00F3D1  65                 	db	101	;'e'
   429  00F3D2  20                 	db	32
   430  00F3D3  66                 	db	102	;'f'
   431  00F3D4  6F                 	db	111	;'o'
   432  00F3D5  6C                 	db	108	;'l'
   433  00F3D6  6C                 	db	108	;'l'
   434  00F3D7  6F                 	db	111	;'o'
   435  00F3D8  77                 	db	119	;'w'
   436  00F3D9  20                 	db	32
   437  00F3DA  74                 	db	116	;'t'
   438  00F3DB  68                 	db	104	;'h'
   439  00F3DC  65                 	db	101	;'e'
   440  00F3DD  73                 	db	115	;'s'
   441  00F3DE  65                 	db	101	;'e'
   442  00F3DF  20                 	db	32
   443  00F3E0  69                 	db	105	;'i'
   444  00F3E1  6E                 	db	110	;'n'
   445  00F3E2  73                 	db	115	;'s'
   446  00F3E3  74                 	db	116	;'t'
   447  00F3E4  72                 	db	114	;'r'
   448  00F3E5  75                 	db	117	;'u'
   449  00F3E6  63                 	db	99	;'c'
   450  00F3E7  74                 	db	116	;'t'
   451  00F3E8  69                 	db	105	;'i'
   452  00F3E9  6F                 	db	111	;'o'
   453  00F3EA  6E                 	db	110	;'n'
   454  00F3EB  73                 	db	115	;'s'
   455  00F3EC  3A                 	db	58	;':'
   456  00F3ED  0D                 	db	13
   457  00F3EE  0A                 	db	10
   458  00F3EF  00                 	db	0
   459  00F3F0                     STR_84:
   460  00F3F0  2E                 	db	46
   461  00F3F1  2E                 	db	46
   462  00F3F2  2E                 	db	46
   463  00F3F3  2E                 	db	46
   464  00F3F4  2E                 	db	46
   465  00F3F5  2E                 	db	46
   466  00F3F6  2E                 	db	46
   467  00F3F7  2E                 	db	46
   468  00F3F8  2E                 	db	46
   469  00F3F9  2E                 	db	46
   470  00F3FA  2E                 	db	46
   471  00F3FB  2E                 	db	46
   472  00F3FC  2E                 	db	46
   473  00F3FD  2E                 	db	46
   474  00F3FE  2E                 	db	46
   475  00F3FF  2E                 	db	46
   476  00F400  2E                 	db	46
   477  00F401  2E                 	db	46
   478  00F402  2E                 	db	46
   479  00F403  2E                 	db	46
   480  00F404  2E                 	db	46
   481  00F405  2E                 	db	46
   482  00F406  2E                 	db	46
   483  00F407  2E                 	db	46
   484  00F408  2E                 	db	46
   485  00F409  2E                 	db	46
   486  00F40A  2E                 	db	46
   487  00F40B  2E                 	db	46
   488  00F40C  2E                 	db	46
   489  00F40D  2E                 	db	46
   490  00F40E  2E                 	db	46
   491  00F40F  2E                 	db	46
   492  00F410  2E                 	db	46
   493  00F411  2E                 	db	46
   494  00F412  2E                 	db	46
   495  00F413  2E                 	db	46
   496  00F414  2E                 	db	46
   497  00F415  2E                 	db	46
   498  00F416  2E                 	db	46
   499  00F417  2E                 	db	46
   500  00F418  2E                 	db	46
   501  00F419  2E                 	db	46
   502  00F41A  2E                 	db	46
   503  00F41B  2E                 	db	46
   504  00F41C  2E                 	db	46
   505  00F41D  2E                 	db	46
   506  00F41E  2E                 	db	46
   507  00F41F  2E                 	db	46
   508  00F420  2E                 	db	46
   509  00F421  2E                 	db	46
   510  00F422  2E                 	db	46
   511  00F423  2E                 	db	46
   512  00F424  2E                 	db	46
   513  00F425  2E                 	db	46
   514  00F426  2E                 	db	46
   515  00F427  2E                 	db	46
   516  00F428  2E                 	db	46
   517  00F429  2E                 	db	46
   518  00F42A  2E                 	db	46
   519  00F42B  2E                 	db	46
   520  00F42C  0D                 	db	13
   521  00F42D  0A                 	db	10
   522  00F42E  00                 	db	0
   523  00F42F                     STR_85:
   524  00F42F  2E                 	db	46
   525  00F430  2E                 	db	46
   526  00F431  2E                 	db	46
   527  00F432  2E                 	db	46
   528  00F433  2E                 	db	46
   529  00F434  2E                 	db	46
   530  00F435  2E                 	db	46
   531  00F436  2E                 	db	46
   532  00F437  2E                 	db	46
   533  00F438  2E                 	db	46
   534  00F439  2E                 	db	46
   535  00F43A  2E                 	db	46
   536  00F43B  2E                 	db	46
   537  00F43C  2E                 	db	46
   538  00F43D  2E                 	db	46
   539  00F43E  2E                 	db	46
   540  00F43F  2E                 	db	46
   541  00F440  2E                 	db	46
   542  00F441  2E                 	db	46
   543  00F442  2E                 	db	46
   544  00F443  2E                 	db	46
   545  00F444  3F                 	db	63	;'?'
   546  00F445  3F                 	db	63	;'?'
   547  00F446  3F                 	db	63	;'?'
   548  00F447  3F                 	db	63	;'?'
   549  00F448  3F                 	db	63	;'?'
   550  00F449  3F                 	db	63	;'?'
   551  00F44A  3F                 	db	63	;'?'
   552  00F44B  3F                 	db	63	;'?'
   553  00F44C  3F                 	db	63	;'?'
   554  00F44D  3F                 	db	63	;'?'
   555  00F44E  3F                 	db	63	;'?'
   556  00F44F  3F                 	db	63	;'?'
   557  00F450  3F                 	db	63	;'?'
   558  00F451  3F                 	db	63	;'?'
   559  00F452  3F                 	db	63	;'?'
   560  00F453  3F                 	db	63	;'?'
   561  00F454  3F                 	db	63	;'?'
   562  00F455  2E                 	db	46
   563  00F456  2E                 	db	46
   564  00F457  2E                 	db	46
   565  00F458  2E                 	db	46
   566  00F459  2E                 	db	46
   567  00F45A  2E                 	db	46
   568  00F45B  2E                 	db	46
   569  00F45C  2E                 	db	46
   570  00F45D  2E                 	db	46
   571  00F45E  2E                 	db	46
   572  00F45F  2E                 	db	46
   573  00F460  2E                 	db	46
   574  00F461  2E                 	db	46
   575  00F462  2E                 	db	46
   576  00F463  2E                 	db	46
   577  00F464  2E                 	db	46
   578  00F465  2E                 	db	46
   579  00F466  2E                 	db	46
   580  00F467  2E                 	db	46
   581  00F468  2E                 	db	46
   582  00F469  2E                 	db	46
   583  00F46A  2E                 	db	46
   584  00F46B  0D                 	db	13
   585  00F46C  0A                 	db	10
   586  00F46D  00                 	db	0
   587  00F46E                     STR_86:
   588  00F46E  2E                 	db	46
   589  00F46F  2E                 	db	46
   590  00F470  2E                 	db	46
   591  00F471  2E                 	db	46
   592  00F472  2E                 	db	46
   593  00F473  2E                 	db	46
   594  00F474  2E                 	db	46
   595  00F475  2E                 	db	46
   596  00F476  2E                 	db	46
   597  00F477  2E                 	db	46
   598  00F478  2E                 	db	46
   599  00F479  2E                 	db	46
   600  00F47A  2E                 	db	46
   601  00F47B  2E                 	db	46
   602  00F47C  2E                 	db	46
   603  00F47D  2E                 	db	46
   604  00F47E  2E                 	db	46
   605  00F47F  3F                 	db	63	;'?'
   606  00F480  3F                 	db	63	;'?'
   607  00F481  3F                 	db	63	;'?'
   608  00F482  3F                 	db	63	;'?'
   609  00F483  3F                 	db	63	;'?'
   610  00F484  3F                 	db	63	;'?'
   611  00F485  3F                 	db	63	;'?'
   612  00F486  3F                 	db	63	;'?'
   613  00F487  3F                 	db	63	;'?'
   614  00F488  3F                 	db	63	;'?'
   615  00F489  3F                 	db	63	;'?'
   616  00F48A  3F                 	db	63	;'?'
   617  00F48B  3F                 	db	63	;'?'
   618  00F48C  3F                 	db	63	;'?'
   619  00F48D  3F                 	db	63	;'?'
   620  00F48E  3F                 	db	63	;'?'
   621  00F48F  3F                 	db	63	;'?'
   622  00F490  3F                 	db	63	;'?'
   623  00F491  3F                 	db	63	;'?'
   624  00F492  3F                 	db	63	;'?'
   625  00F493  3F                 	db	63	;'?'
   626  00F494  3F                 	db	63	;'?'
   627  00F495  3F                 	db	63	;'?'
   628  00F496  3F                 	db	63	;'?'
   629  00F497  3F                 	db	63	;'?'
   630  00F498  2E                 	db	46
   631  00F499  2E                 	db	46
   632  00F49A  2E                 	db	46
   633  00F49B  2E                 	db	46
   634  00F49C  2E                 	db	46
   635  00F49D  2E                 	db	46
   636  00F49E  2E                 	db	46
   637  00F49F  2E                 	db	46
   638  00F4A0  2E                 	db	46
   639  00F4A1  2E                 	db	46
   640  00F4A2  2E                 	db	46
   641  00F4A3  2E                 	db	46
   642  00F4A4  2E                 	db	46
   643  00F4A5  2E                 	db	46
   644  00F4A6  2E                 	db	46
   645  00F4A7  2E                 	db	46
   646  00F4A8  2E                 	db	46
   647  00F4A9  2E                 	db	46
   648  00F4AA  0D                 	db	13
   649  00F4AB  0A                 	db	10
   650  00F4AC  00                 	db	0
   651  00F4AD                     STR_87:
   652  00F4AD  2E                 	db	46
   653  00F4AE  2E                 	db	46
   654  00F4AF  2E                 	db	46
   655  00F4B0  2E                 	db	46
   656  00F4B1  2E                 	db	46
   657  00F4B2  2E                 	db	46
   658  00F4B3  2E                 	db	46
   659  00F4B4  2E                 	db	46
   660  00F4B5  2E                 	db	46
   661  00F4B6  2E                 	db	46
   662  00F4B7  2E                 	db	46
   663  00F4B8  2E                 	db	46
   664  00F4B9  2E                 	db	46
   665  00F4BA  2E                 	db	46
   666  00F4BB  3F                 	db	63	;'?'
   667  00F4BC  3F                 	db	63	;'?'
   668  00F4BD  3F                 	db	63	;'?'
   669  00F4BE  3F                 	db	63	;'?'
   670  00F4BF  3F                 	db	63	;'?'
   671  00F4C0  3F                 	db	63	;'?'
   672  00F4C1  3F                 	db	63	;'?'
   673  00F4C2  3F                 	db	63	;'?'
   674  00F4C3  3F                 	db	63	;'?'
   675  00F4C4  3F                 	db	63	;'?'
   676  00F4C5  3F                 	db	63	;'?'
   677  00F4C6  3F                 	db	63	;'?'
   678  00F4C7  3F                 	db	63	;'?'
   679  00F4C8  3F                 	db	63	;'?'
   680  00F4C9  3F                 	db	63	;'?'
   681  00F4CA  3F                 	db	63	;'?'
   682  00F4CB  3F                 	db	63	;'?'
   683  00F4CC  3F                 	db	63	;'?'
   684  00F4CD  3F                 	db	63	;'?'
   685  00F4CE  3F                 	db	63	;'?'
   686  00F4CF  3F                 	db	63	;'?'
   687  00F4D0  3F                 	db	63	;'?'
   688  00F4D1  3F                 	db	63	;'?'
   689  00F4D2  3F                 	db	63	;'?'
   690  00F4D3  3F                 	db	63	;'?'
   691  00F4D4  3F                 	db	63	;'?'
   692  00F4D5  3F                 	db	63	;'?'
   693  00F4D6  3F                 	db	63	;'?'
   694  00F4D7  3F                 	db	63	;'?'
   695  00F4D8  3F                 	db	63	;'?'
   696  00F4D9  3F                 	db	63	;'?'
   697  00F4DA  2E                 	db	46
   698  00F4DB  2E                 	db	46
   699  00F4DC  2E                 	db	46
   700  00F4DD  2E                 	db	46
   701  00F4DE  2E                 	db	46
   702  00F4DF  2E                 	db	46
   703  00F4E0  2E                 	db	46
   704  00F4E1  2E                 	db	46
   705  00F4E2  2E                 	db	46
   706  00F4E3  2E                 	db	46
   707  00F4E4  2E                 	db	46
   708  00F4E5  2E                 	db	46
   709  00F4E6  2E                 	db	46
   710  00F4E7  2E                 	db	46
   711  00F4E8  2E                 	db	46
   712  00F4E9  0D                 	db	13
   713  00F4EA  0A                 	db	10
   714  00F4EB  00                 	db	0
   715  00F4EC                     STR_88:
   716  00F4EC  2E                 	db	46
   717  00F4ED  2E                 	db	46
   718  00F4EE  2E                 	db	46
   719  00F4EF  2E                 	db	46
   720  00F4F0  2E                 	db	46
   721  00F4F1  2E                 	db	46
   722  00F4F2  2E                 	db	46
   723  00F4F3  2E                 	db	46
   724  00F4F4  2E                 	db	46
   725  00F4F5  2E                 	db	46
   726  00F4F6  2E                 	db	46
   727  00F4F7  2E                 	db	46
   728  00F4F8  3F                 	db	63	;'?'
   729  00F4F9  3F                 	db	63	;'?'
   730  00F4FA  3F                 	db	63	;'?'
   731  00F4FB  3F                 	db	63	;'?'
   732  00F4FC  3F                 	db	63	;'?'
   733  00F4FD  3F                 	db	63	;'?'
   734  00F4FE  3F                 	db	63	;'?'
   735  00F4FF  3F                 	db	63	;'?'
   736  00F500  3F                 	db	63	;'?'
   737  00F501  3F                 	db	63	;'?'
   738  00F502  3F                 	db	63	;'?'
   739  00F503  3F                 	db	63	;'?'
   740  00F504  3F                 	db	63	;'?'
   741  00F505  3F                 	db	63	;'?'
   742  00F506  3F                 	db	63	;'?'
   743  00F507  3F                 	db	63	;'?'
   744  00F508  3F                 	db	63	;'?'
   745  00F509  3F                 	db	63	;'?'
   746  00F50A  3F                 	db	63	;'?'
   747  00F50B  3F                 	db	63	;'?'
   748  00F50C  3F                 	db	63	;'?'
   749  00F50D  3F                 	db	63	;'?'
   750  00F50E  3F                 	db	63	;'?'
   751  00F50F  3F                 	db	63	;'?'
   752  00F510  3F                 	db	63	;'?'
   753  00F511  3F                 	db	63	;'?'
   754  00F512  3F                 	db	63	;'?'
   755  00F513  3F                 	db	63	;'?'
   756  00F514  3F                 	db	63	;'?'
   757  00F515  3F                 	db	63	;'?'
   758  00F516  3F                 	db	63	;'?'
   759  00F517  3F                 	db	63	;'?'
   760  00F518  3F                 	db	63	;'?'
   761  00F519  3F                 	db	63	;'?'
   762  00F51A  3F                 	db	63	;'?'
   763  00F51B  2E                 	db	46
   764  00F51C  2E                 	db	46
   765  00F51D  2E                 	db	46
   766  00F51E  2E                 	db	46
   767  00F51F  2E                 	db	46
   768  00F520  2E                 	db	46
   769  00F521  2E                 	db	46
   770  00F522  2E                 	db	46
   771  00F523  2E                 	db	46
   772  00F524  2E                 	db	46
   773  00F525  2E                 	db	46
   774  00F526  2E                 	db	46
   775  00F527  2E                 	db	46
   776  00F528  0D                 	db	13
   777  00F529  0A                 	db	10
   778  00F52A  00                 	db	0
   779  00F52B                     STR_89:
   780  00F52B  2E                 	db	46
   781  00F52C  2E                 	db	46
   782  00F52D  2E                 	db	46
   783  00F52E  2E                 	db	46
   784  00F52F  2E                 	db	46
   785  00F530  2E                 	db	46
   786  00F531  2E                 	db	46
   787  00F532  2E                 	db	46
   788  00F533  2E                 	db	46
   789  00F534  2E                 	db	46
   790  00F535  3F                 	db	63	;'?'
   791  00F536  3F                 	db	63	;'?'
   792  00F537  3F                 	db	63	;'?'
   793  00F538  3F                 	db	63	;'?'
   794  00F539  3F                 	db	63	;'?'
   795  00F53A  3F                 	db	63	;'?'
   796  00F53B  3F                 	db	63	;'?'
   797  00F53C  3F                 	db	63	;'?'
   798  00F53D  3F                 	db	63	;'?'
   799  00F53E  3F                 	db	63	;'?'
   800  00F53F  3F                 	db	63	;'?'
   801  00F540  3F                 	db	63	;'?'
   802  00F541  3F                 	db	63	;'?'
   803  00F542  3F                 	db	63	;'?'
   804  00F543  3F                 	db	63	;'?'
   805  00F544  3F                 	db	63	;'?'
   806  00F545  3F                 	db	63	;'?'
   807  00F546  3F                 	db	63	;'?'
   808  00F547  3F                 	db	63	;'?'
   809  00F548  3F                 	db	63	;'?'
   810  00F549  3F                 	db	63	;'?'
   811  00F54A  3F                 	db	63	;'?'
   812  00F54B  3F                 	db	63	;'?'
   813  00F54C  3F                 	db	63	;'?'
   814  00F54D  3F                 	db	63	;'?'
   815  00F54E  3F                 	db	63	;'?'
   816  00F54F  3F                 	db	63	;'?'
   817  00F550  3F                 	db	63	;'?'
   818  00F551  3F                 	db	63	;'?'
   819  00F552  3F                 	db	63	;'?'
   820  00F553  3F                 	db	63	;'?'
   821  00F554  3F                 	db	63	;'?'
   822  00F555  3F                 	db	63	;'?'
   823  00F556  3F                 	db	63	;'?'
   824  00F557  3F                 	db	63	;'?'
   825  00F558  3F                 	db	63	;'?'
   826  00F559  3F                 	db	63	;'?'
   827  00F55A  3F                 	db	63	;'?'
   828  00F55B  3F                 	db	63	;'?'
   829  00F55C  2E                 	db	46
   830  00F55D  2E                 	db	46
   831  00F55E  2E                 	db	46
   832  00F55F  2E                 	db	46
   833  00F560  2E                 	db	46
   834  00F561  2E                 	db	46
   835  00F562  2E                 	db	46
   836  00F563  2E                 	db	46
   837  00F564  2E                 	db	46
   838  00F565  2E                 	db	46
   839  00F566  2E                 	db	46
   840  00F567  0D                 	db	13
   841  00F568  0A                 	db	10
   842  00F569  00                 	db	0
   843  00F56A                     STR_90:
   844  00F56A  2E                 	db	46
   845  00F56B  2E                 	db	46
   846  00F56C  2E                 	db	46
   847  00F56D  2E                 	db	46
   848  00F56E  2E                 	db	46
   849  00F56F  2E                 	db	46
   850  00F570  2E                 	db	46
   851  00F571  2E                 	db	46
   852  00F572  2E                 	db	46
   853  00F573  3F                 	db	63	;'?'
   854  00F574  3F                 	db	63	;'?'
   855  00F575  3F                 	db	63	;'?'
   856  00F576  3F                 	db	63	;'?'
   857  00F577  3F                 	db	63	;'?'
   858  00F578  3F                 	db	63	;'?'
   859  00F579  3F                 	db	63	;'?'
   860  00F57A  3F                 	db	63	;'?'
   861  00F57B  3F                 	db	63	;'?'
   862  00F57C  3F                 	db	63	;'?'
   863  00F57D  3F                 	db	63	;'?'
   864  00F57E  3F                 	db	63	;'?'
   865  00F57F  3F                 	db	63	;'?'
   866  00F580  3F                 	db	63	;'?'
   867  00F581  3F                 	db	63	;'?'
   868  00F582  3F                 	db	63	;'?'
   869  00F583  3F                 	db	63	;'?'
   870  00F584  3F                 	db	63	;'?'
   871  00F585  3F                 	db	63	;'?'
   872  00F586  3F                 	db	63	;'?'
   873  00F587  3F                 	db	63	;'?'
   874  00F588  3F                 	db	63	;'?'
   875  00F589  3F                 	db	63	;'?'
   876  00F58A  3F                 	db	63	;'?'
   877  00F58B  3F                 	db	63	;'?'
   878  00F58C  3F                 	db	63	;'?'
   879  00F58D  3F                 	db	63	;'?'
   880  00F58E  3F                 	db	63	;'?'
   881  00F58F  3F                 	db	63	;'?'
   882  00F590  3F                 	db	63	;'?'
   883  00F591  3F                 	db	63	;'?'
   884  00F592  3F                 	db	63	;'?'
   885  00F593  3F                 	db	63	;'?'
   886  00F594  3F                 	db	63	;'?'
   887  00F595  3F                 	db	63	;'?'
   888  00F596  3F                 	db	63	;'?'
   889  00F597  3F                 	db	63	;'?'
   890  00F598  3F                 	db	63	;'?'
   891  00F599  3F                 	db	63	;'?'
   892  00F59A  3F                 	db	63	;'?'
   893  00F59B  3F                 	db	63	;'?'
   894  00F59C  2E                 	db	46
   895  00F59D  2E                 	db	46
   896  00F59E  2E                 	db	46
   897  00F59F  2E                 	db	46
   898  00F5A0  2E                 	db	46
   899  00F5A1  2E                 	db	46
   900  00F5A2  2E                 	db	46
   901  00F5A3  2E                 	db	46
   902  00F5A4  2E                 	db	46
   903  00F5A5  2E                 	db	46
   904  00F5A6  0D                 	db	13
   905  00F5A7  0A                 	db	10
   906  00F5A8  00                 	db	0
   907  00F5A9                     STR_111:
   908  00F5A9  2E                 	db	46
   909  00F5AA  2E                 	db	46
   910  00F5AB  2E                 	db	46
   911  00F5AC  2E                 	db	46
   912  00F5AD  2E                 	db	46
   913  00F5AE  2E                 	db	46
   914  00F5AF  2E                 	db	46
   915  00F5B0  3F                 	db	63	;'?'
   916  00F5B1  3F                 	db	63	;'?'
   917  00F5B2  3F                 	db	63	;'?'
   918  00F5B3  3F                 	db	63	;'?'
   919  00F5B4  3F                 	db	63	;'?'
   920  00F5B5  3F                 	db	63	;'?'
   921  00F5B6  3F                 	db	63	;'?'
   922  00F5B7  3F                 	db	63	;'?'
   923  00F5B8  3F                 	db	63	;'?'
   924  00F5B9  3F                 	db	63	;'?'
   925  00F5BA  3F                 	db	63	;'?'
   926  00F5BB  3F                 	db	63	;'?'
   927  00F5BC  3F                 	db	63	;'?'
   928  00F5BD  3F                 	db	63	;'?'
   929  00F5BE  3F                 	db	63	;'?'
   930  00F5BF  3F                 	db	63	;'?'
   931  00F5C0  3F                 	db	63	;'?'
   932  00F5C1  3A                 	db	58	;':'
   933  00F5C2  3A                 	db	58	;':'
   934  00F5C3  3A                 	db	58	;':'
   935  00F5C4  3A                 	db	58	;':'
   936  00F5C5  3A                 	db	58	;':'
   937  00F5C6  3A                 	db	58	;':'
   938  00F5C7  3A                 	db	58	;':'
   939  00F5C8  3A                 	db	58	;':'
   940  00F5C9  3A                 	db	58	;':'
   941  00F5CA  3A                 	db	58	;':'
   942  00F5CB  3A                 	db	58	;':'
   943  00F5CC  3F                 	db	63	;'?'
   944  00F5CD  3F                 	db	63	;'?'
   945  00F5CE  3F                 	db	63	;'?'
   946  00F5CF  3F                 	db	63	;'?'
   947  00F5D0  3F                 	db	63	;'?'
   948  00F5D1  3F                 	db	63	;'?'
   949  00F5D2  3F                 	db	63	;'?'
   950  00F5D3  3F                 	db	63	;'?'
   951  00F5D4  3F                 	db	63	;'?'
   952  00F5D5  3F                 	db	63	;'?'
   953  00F5D6  3F                 	db	63	;'?'
   954  00F5D7  3F                 	db	63	;'?'
   955  00F5D8  3F                 	db	63	;'?'
   956  00F5D9  3F                 	db	63	;'?'
   957  00F5DA  3F                 	db	63	;'?'
   958  00F5DB  3F                 	db	63	;'?'
   959  00F5DC  3F                 	db	63	;'?'
   960  00F5DD  2E                 	db	46
   961  00F5DE  2E                 	db	46
   962  00F5DF  2E                 	db	46
   963  00F5E0  2E                 	db	46
   964  00F5E1  2E                 	db	46
   965  00F5E2  2E                 	db	46
   966  00F5E3  2E                 	db	46
   967  00F5E4  2E                 	db	46
   968  00F5E5  0D                 	db	13
   969  00F5E6  0A                 	db	10
   970  00F5E7  00                 	db	0
   971  00F5E8                     STR_91:
   972  00F5E8  2E                 	db	46
   973  00F5E9  2E                 	db	46
   974  00F5EA  2E                 	db	46
   975  00F5EB  2E                 	db	46
   976  00F5EC  2E                 	db	46
   977  00F5ED  2E                 	db	46
   978  00F5EE  2E                 	db	46
   979  00F5EF  3F                 	db	63	;'?'
   980  00F5F0  3F                 	db	63	;'?'
   981  00F5F1  3F                 	db	63	;'?'
   982  00F5F2  3F                 	db	63	;'?'
   983  00F5F3  3F                 	db	63	;'?'
   984  00F5F4  3F                 	db	63	;'?'
   985  00F5F5  3F                 	db	63	;'?'
   986  00F5F6  3F                 	db	63	;'?'
   987  00F5F7  3F                 	db	63	;'?'
   988  00F5F8  3F                 	db	63	;'?'
   989  00F5F9  3F                 	db	63	;'?'
   990  00F5FA  3F                 	db	63	;'?'
   991  00F5FB  3F                 	db	63	;'?'
   992  00F5FC  3F                 	db	63	;'?'
   993  00F5FD  3F                 	db	63	;'?'
   994  00F5FE  3F                 	db	63	;'?'
   995  00F5FF  3F                 	db	63	;'?'
   996  00F600  3F                 	db	63	;'?'
   997  00F601  3F                 	db	63	;'?'
   998  00F602  3F                 	db	63	;'?'
   999  00F603  3F                 	db	63	;'?'
  1000  00F604  3F                 	db	63	;'?'
  1001  00F605  3F                 	db	63	;'?'
  1002  00F606  3F                 	db	63	;'?'
  1003  00F607  3F                 	db	63	;'?'
  1004  00F608  3F                 	db	63	;'?'
  1005  00F609  3F                 	db	63	;'?'
  1006  00F60A  3F                 	db	63	;'?'
  1007  00F60B  3F                 	db	63	;'?'
  1008  00F60C  3F                 	db	63	;'?'
  1009  00F60D  3F                 	db	63	;'?'
  1010  00F60E  3F                 	db	63	;'?'
  1011  00F60F  3F                 	db	63	;'?'
  1012  00F610  3F                 	db	63	;'?'
  1013  00F611  3F                 	db	63	;'?'
  1014  00F612  3F                 	db	63	;'?'
  1015  00F613  3F                 	db	63	;'?'
  1016  00F614  3F                 	db	63	;'?'
  1017  00F615  3F                 	db	63	;'?'
  1018  00F616  3F                 	db	63	;'?'
  1019  00F617  3F                 	db	63	;'?'
  1020  00F618  3F                 	db	63	;'?'
  1021  00F619  3F                 	db	63	;'?'
  1022  00F61A  3F                 	db	63	;'?'
  1023  00F61B  3F                 	db	63	;'?'
  1024  00F61C  2E                 	db	46
  1025  00F61D  2E                 	db	46
  1026  00F61E  2E                 	db	46
  1027  00F61F  2E                 	db	46
  1028  00F620  2E                 	db	46
  1029  00F621  2E                 	db	46
  1030  00F622  2E                 	db	46
  1031  00F623  2E                 	db	46
  1032  00F624  0D                 	db	13
  1033  00F625  0A                 	db	10
  1034  00F626  00                 	db	0
  1035  00F627                     STR_110:
  1036  00F627  2E                 	db	46
  1037  00F628  2E                 	db	46
  1038  00F629  2E                 	db	46
  1039  00F62A  2E                 	db	46
  1040  00F62B  2E                 	db	46
  1041  00F62C  2E                 	db	46
  1042  00F62D  3F                 	db	63	;'?'
  1043  00F62E  3F                 	db	63	;'?'
  1044  00F62F  3F                 	db	63	;'?'
  1045  00F630  3F                 	db	63	;'?'
  1046  00F631  3F                 	db	63	;'?'
  1047  00F632  3F                 	db	63	;'?'
  1048  00F633  3F                 	db	63	;'?'
  1049  00F634  3F                 	db	63	;'?'
  1050  00F635  3F                 	db	63	;'?'
  1051  00F636  3F                 	db	63	;'?'
  1052  00F637  3F                 	db	63	;'?'
  1053  00F638  3F                 	db	63	;'?'
  1054  00F639  3F                 	db	63	;'?'
  1055  00F63A  3F                 	db	63	;'?'
  1056  00F63B  3F                 	db	63	;'?'
  1057  00F63C  3A                 	db	58	;':'
  1058  00F63D  3A                 	db	58	;':'
  1059  00F63E  3A                 	db	58	;':'
  1060  00F63F  3A                 	db	58	;':'
  1061  00F640  3A                 	db	58	;':'
  1062  00F641  3A                 	db	58	;':'
  1063  00F642  3A                 	db	58	;':'
  1064  00F643  3A                 	db	58	;':'
  1065  00F644  3A                 	db	58	;':'
  1066  00F645  3A                 	db	58	;':'
  1067  00F646  3A                 	db	58	;':'
  1068  00F647  3A                 	db	58	;':'
  1069  00F648  3A                 	db	58	;':'
  1070  00F649  3A                 	db	58	;':'
  1071  00F64A  3A                 	db	58	;':'
  1072  00F64B  3A                 	db	58	;':'
  1073  00F64C  3A                 	db	58	;':'
  1074  00F64D  3F                 	db	63	;'?'
  1075  00F64E  3F                 	db	63	;'?'
  1076  00F64F  3F                 	db	63	;'?'
  1077  00F650  3F                 	db	63	;'?'
  1078  00F651  3F                 	db	63	;'?'
  1079  00F652  3F                 	db	63	;'?'
  1080  00F653  3F                 	db	63	;'?'
  1081  00F654  3F                 	db	63	;'?'
  1082  00F655  3F                 	db	63	;'?'
  1083  00F656  3F                 	db	63	;'?'
  1084  00F657  3F                 	db	63	;'?'
  1085  00F658  3F                 	db	63	;'?'
  1086  00F659  3F                 	db	63	;'?'
  1087  00F65A  3F                 	db	63	;'?'
  1088  00F65B  3F                 	db	63	;'?'
  1089  00F65C  2E                 	db	46
  1090  00F65D  2E                 	db	46
  1091  00F65E  2E                 	db	46
  1092  00F65F  2E                 	db	46
  1093  00F660  2E                 	db	46
  1094  00F661  2E                 	db	46
  1095  00F662  2E                 	db	46
  1096  00F663  0D                 	db	13
  1097  00F664  0A                 	db	10
  1098  00F665  00                 	db	0
  1099  00F666                     STR_92:
  1100  00F666  2E                 	db	46
  1101  00F667  2E                 	db	46
  1102  00F668  2E                 	db	46
  1103  00F669  2E                 	db	46
  1104  00F66A  2E                 	db	46
  1105  00F66B  2E                 	db	46
  1106  00F66C  3F                 	db	63	;'?'
  1107  00F66D  3F                 	db	63	;'?'
  1108  00F66E  3F                 	db	63	;'?'
  1109  00F66F  3F                 	db	63	;'?'
  1110  00F670  3F                 	db	63	;'?'
  1111  00F671  3F                 	db	63	;'?'
  1112  00F672  3F                 	db	63	;'?'
  1113  00F673  3F                 	db	63	;'?'
  1114  00F674  3F                 	db	63	;'?'
  1115  00F675  3F                 	db	63	;'?'
  1116  00F676  3F                 	db	63	;'?'
  1117  00F677  3F                 	db	63	;'?'
  1118  00F678  3F                 	db	63	;'?'
  1119  00F679  3F                 	db	63	;'?'
  1120  00F67A  3F                 	db	63	;'?'
  1121  00F67B  3F                 	db	63	;'?'
  1122  00F67C  3F                 	db	63	;'?'
  1123  00F67D  3F                 	db	63	;'?'
  1124  00F67E  3F                 	db	63	;'?'
  1125  00F67F  3F                 	db	63	;'?'
  1126  00F680  3F                 	db	63	;'?'
  1127  00F681  3F                 	db	63	;'?'
  1128  00F682  3F                 	db	63	;'?'
  1129  00F683  3F                 	db	63	;'?'
  1130  00F684  3F                 	db	63	;'?'
  1131  00F685  3F                 	db	63	;'?'
  1132  00F686  3F                 	db	63	;'?'
  1133  00F687  3F                 	db	63	;'?'
  1134  00F688  3F                 	db	63	;'?'
  1135  00F689  3F                 	db	63	;'?'
  1136  00F68A  3F                 	db	63	;'?'
  1137  00F68B  3F                 	db	63	;'?'
  1138  00F68C  3F                 	db	63	;'?'
  1139  00F68D  3F                 	db	63	;'?'
  1140  00F68E  3F                 	db	63	;'?'
  1141  00F68F  3F                 	db	63	;'?'
  1142  00F690  3F                 	db	63	;'?'
  1143  00F691  3F                 	db	63	;'?'
  1144  00F692  3F                 	db	63	;'?'
  1145  00F693  3F                 	db	63	;'?'
  1146  00F694  3F                 	db	63	;'?'
  1147  00F695  3F                 	db	63	;'?'
  1148  00F696  3F                 	db	63	;'?'
  1149  00F697  3F                 	db	63	;'?'
  1150  00F698  3F                 	db	63	;'?'
  1151  00F699  3F                 	db	63	;'?'
  1152  00F69A  3F                 	db	63	;'?'
  1153  00F69B  2E                 	db	46
  1154  00F69C  2E                 	db	46
  1155  00F69D  2E                 	db	46
  1156  00F69E  2E                 	db	46
  1157  00F69F  2E                 	db	46
  1158  00F6A0  2E                 	db	46
  1159  00F6A1  2E                 	db	46
  1160  00F6A2  0D                 	db	13
  1161  00F6A3  0A                 	db	10
  1162  00F6A4  00                 	db	0
  1163  00F6A5                     STR_109:
  1164  00F6A5  2E                 	db	46
  1165  00F6A6  2E                 	db	46
  1166  00F6A7  2E                 	db	46
  1167  00F6A8  2E                 	db	46
  1168  00F6A9  2E                 	db	46
  1169  00F6AA  3F                 	db	63	;'?'
  1170  00F6AB  3F                 	db	63	;'?'
  1171  00F6AC  3F                 	db	63	;'?'
  1172  00F6AD  3F                 	db	63	;'?'
  1173  00F6AE  3F                 	db	63	;'?'
  1174  00F6AF  3F                 	db	63	;'?'
  1175  00F6B0  3F                 	db	63	;'?'
  1176  00F6B1  3F                 	db	63	;'?'
  1177  00F6B2  3F                 	db	63	;'?'
  1178  00F6B3  3F                 	db	63	;'?'
  1179  00F6B4  3F                 	db	63	;'?'
  1180  00F6B5  3F                 	db	63	;'?'
  1181  00F6B6  3F                 	db	63	;'?'
  1182  00F6B7  3F                 	db	63	;'?'
  1183  00F6B8  3A                 	db	58	;':'
  1184  00F6B9  3A                 	db	58	;':'
  1185  00F6BA  3A                 	db	58	;':'
  1186  00F6BB  3A                 	db	58	;':'
  1187  00F6BC  3A                 	db	58	;':'
  1188  00F6BD  3A                 	db	58	;':'
  1189  00F6BE  3A                 	db	58	;':'
  1190  00F6BF  3F                 	db	63	;'?'
  1191  00F6C0  3F                 	db	63	;'?'
  1192  00F6C1  3F                 	db	63	;'?'
  1193  00F6C2  3F                 	db	63	;'?'
  1194  00F6C3  3F                 	db	63	;'?'
  1195  00F6C4  3F                 	db	63	;'?'
  1196  00F6C5  3F                 	db	63	;'?'
  1197  00F6C6  3A                 	db	58	;':'
  1198  00F6C7  3A                 	db	58	;':'
  1199  00F6C8  3A                 	db	58	;':'
  1200  00F6C9  3A                 	db	58	;':'
  1201  00F6CA  3A                 	db	58	;':'
  1202  00F6CB  3A                 	db	58	;':'
  1203  00F6CC  3A                 	db	58	;':'
  1204  00F6CD  3F                 	db	63	;'?'
  1205  00F6CE  3F                 	db	63	;'?'
  1206  00F6CF  3F                 	db	63	;'?'
  1207  00F6D0  3F                 	db	63	;'?'
  1208  00F6D1  3F                 	db	63	;'?'
  1209  00F6D2  3F                 	db	63	;'?'
  1210  00F6D3  3F                 	db	63	;'?'
  1211  00F6D4  3F                 	db	63	;'?'
  1212  00F6D5  3F                 	db	63	;'?'
  1213  00F6D6  3F                 	db	63	;'?'
  1214  00F6D7  3F                 	db	63	;'?'
  1215  00F6D8  3F                 	db	63	;'?'
  1216  00F6D9  3F                 	db	63	;'?'
  1217  00F6DA  3F                 	db	63	;'?'
  1218  00F6DB  2E                 	db	46
  1219  00F6DC  2E                 	db	46
  1220  00F6DD  2E                 	db	46
  1221  00F6DE  2E                 	db	46
  1222  00F6DF  2E                 	db	46
  1223  00F6E0  2E                 	db	46
  1224  00F6E1  0D                 	db	13
  1225  00F6E2  0A                 	db	10
  1226  00F6E3  00                 	db	0
  1227  00F6E4                     STR_93:
  1228  00F6E4  2E                 	db	46
  1229  00F6E5  2E                 	db	46
  1230  00F6E6  2E                 	db	46
  1231  00F6E7  2E                 	db	46
  1232  00F6E8  2E                 	db	46
  1233  00F6E9  3F                 	db	63	;'?'
  1234  00F6EA  3F                 	db	63	;'?'
  1235  00F6EB  3F                 	db	63	;'?'
  1236  00F6EC  3F                 	db	63	;'?'
  1237  00F6ED  3F                 	db	63	;'?'
  1238  00F6EE  3F                 	db	63	;'?'
  1239  00F6EF  3F                 	db	63	;'?'
  1240  00F6F0  3F                 	db	63	;'?'
  1241  00F6F1  3F                 	db	63	;'?'
  1242  00F6F2  3F                 	db	63	;'?'
  1243  00F6F3  3F                 	db	63	;'?'
  1244  00F6F4  3F                 	db	63	;'?'
  1245  00F6F5  3F                 	db	63	;'?'
  1246  00F6F6  3F                 	db	63	;'?'
  1247  00F6F7  3F                 	db	63	;'?'
  1248  00F6F8  3F                 	db	63	;'?'
  1249  00F6F9  3F                 	db	63	;'?'
  1250  00F6FA  3F                 	db	63	;'?'
  1251  00F6FB  3F                 	db	63	;'?'
  1252  00F6FC  3F                 	db	63	;'?'
  1253  00F6FD  3F                 	db	63	;'?'
  1254  00F6FE  3F                 	db	63	;'?'
  1255  00F6FF  3F                 	db	63	;'?'
  1256  00F700  3F                 	db	63	;'?'
  1257  00F701  3F                 	db	63	;'?'
  1258  00F702  3F                 	db	63	;'?'
  1259  00F703  3F                 	db	63	;'?'
  1260  00F704  3F                 	db	63	;'?'
  1261  00F705  3F                 	db	63	;'?'
  1262  00F706  3F                 	db	63	;'?'
  1263  00F707  3F                 	db	63	;'?'
  1264  00F708  3F                 	db	63	;'?'
  1265  00F709  3F                 	db	63	;'?'
  1266  00F70A  3F                 	db	63	;'?'
  1267  00F70B  3F                 	db	63	;'?'
  1268  00F70C  3F                 	db	63	;'?'
  1269  00F70D  3F                 	db	63	;'?'
  1270  00F70E  3F                 	db	63	;'?'
  1271  00F70F  3F                 	db	63	;'?'
  1272  00F710  3F                 	db	63	;'?'
  1273  00F711  3F                 	db	63	;'?'
  1274  00F712  3F                 	db	63	;'?'
  1275  00F713  3F                 	db	63	;'?'
  1276  00F714  3F                 	db	63	;'?'
  1277  00F715  3F                 	db	63	;'?'
  1278  00F716  3F                 	db	63	;'?'
  1279  00F717  3F                 	db	63	;'?'
  1280  00F718  3F                 	db	63	;'?'
  1281  00F719  3F                 	db	63	;'?'
  1282  00F71A  2E                 	db	46
  1283  00F71B  2E                 	db	46
  1284  00F71C  2E                 	db	46
  1285  00F71D  2E                 	db	46
  1286  00F71E  2E                 	db	46
  1287  00F71F  2E                 	db	46
  1288  00F720  0D                 	db	13
  1289  00F721  0A                 	db	10
  1290  00F722  00                 	db	0
  1291  00F723                     STR_94:
  1292  00F723  2E                 	db	46
  1293  00F724  2E                 	db	46
  1294  00F725  2E                 	db	46
  1295  00F726  2E                 	db	46
  1296  00F727  3F                 	db	63	;'?'
  1297  00F728  3F                 	db	63	;'?'
  1298  00F729  3F                 	db	63	;'?'
  1299  00F72A  3F                 	db	63	;'?'
  1300  00F72B  3A                 	db	58	;':'
  1301  00F72C  3A                 	db	58	;':'
  1302  00F72D  3A                 	db	58	;':'
  1303  00F72E  3A                 	db	58	;':'
  1304  00F72F  3A                 	db	58	;':'
  1305  00F730  3A                 	db	58	;':'
  1306  00F731  3A                 	db	58	;':'
  1307  00F732  3A                 	db	58	;':'
  1308  00F733  3A                 	db	58	;':'
  1309  00F734  3A                 	db	58	;':'
  1310  00F735  3A                 	db	58	;':'
  1311  00F736  3F                 	db	63	;'?'
  1312  00F737  3F                 	db	63	;'?'
  1313  00F738  3F                 	db	63	;'?'
  1314  00F739  3F                 	db	63	;'?'
  1315  00F73A  3F                 	db	63	;'?'
  1316  00F73B  3F                 	db	63	;'?'
  1317  00F73C  3F                 	db	63	;'?'
  1318  00F73D  3F                 	db	63	;'?'
  1319  00F73E  3F                 	db	63	;'?'
  1320  00F73F  3F                 	db	63	;'?'
  1321  00F740  3F                 	db	63	;'?'
  1322  00F741  3F                 	db	63	;'?'
  1323  00F742  3F                 	db	63	;'?'
  1324  00F743  3F                 	db	63	;'?'
  1325  00F744  3F                 	db	63	;'?'
  1326  00F745  3F                 	db	63	;'?'
  1327  00F746  3F                 	db	63	;'?'
  1328  00F747  3F                 	db	63	;'?'
  1329  00F748  3F                 	db	63	;'?'
  1330  00F749  3F                 	db	63	;'?'
  1331  00F74A  3F                 	db	63	;'?'
  1332  00F74B  3A                 	db	58	;':'
  1333  00F74C  3A                 	db	58	;':'
  1334  00F74D  3A                 	db	58	;':'
  1335  00F74E  3A                 	db	58	;':'
  1336  00F74F  3A                 	db	58	;':'
  1337  00F750  3A                 	db	58	;':'
  1338  00F751  3A                 	db	58	;':'
  1339  00F752  3A                 	db	58	;':'
  1340  00F753  3A                 	db	58	;':'
  1341  00F754  3A                 	db	58	;':'
  1342  00F755  3A                 	db	58	;':'
  1343  00F756  3F                 	db	63	;'?'
  1344  00F757  3F                 	db	63	;'?'
  1345  00F758  3F                 	db	63	;'?'
  1346  00F759  3F                 	db	63	;'?'
  1347  00F75A  2E                 	db	46
  1348  00F75B  2E                 	db	46
  1349  00F75C  2E                 	db	46
  1350  00F75D  2E                 	db	46
  1351  00F75E  2E                 	db	46
  1352  00F75F  0D                 	db	13
  1353  00F760  0A                 	db	10
  1354  00F761  00                 	db	0
  1355  00F762                     STR_108:
  1356  00F762  2E                 	db	46
  1357  00F763  2E                 	db	46
  1358  00F764  2E                 	db	46
  1359  00F765  2E                 	db	46
  1360  00F766  3F                 	db	63	;'?'
  1361  00F767  3F                 	db	63	;'?'
  1362  00F768  3F                 	db	63	;'?'
  1363  00F769  3F                 	db	63	;'?'
  1364  00F76A  3F                 	db	63	;'?'
  1365  00F76B  3F                 	db	63	;'?'
  1366  00F76C  3F                 	db	63	;'?'
  1367  00F76D  3F                 	db	63	;'?'
  1368  00F76E  3F                 	db	63	;'?'
  1369  00F76F  3F                 	db	63	;'?'
  1370  00F770  3F                 	db	63	;'?'
  1371  00F771  3F                 	db	63	;'?'
  1372  00F772  3F                 	db	63	;'?'
  1373  00F773  3F                 	db	63	;'?'
  1374  00F774  3A                 	db	58	;':'
  1375  00F775  3A                 	db	58	;':'
  1376  00F776  3A                 	db	58	;':'
  1377  00F777  3A                 	db	58	;':'
  1378  00F778  3A                 	db	58	;':'
  1379  00F779  3F                 	db	63	;'?'
  1380  00F77A  3F                 	db	63	;'?'
  1381  00F77B  3F                 	db	63	;'?'
  1382  00F77C  3F                 	db	63	;'?'
  1383  00F77D  3F                 	db	63	;'?'
  1384  00F77E  3F                 	db	63	;'?'
  1385  00F77F  3F                 	db	63	;'?'
  1386  00F780  3F                 	db	63	;'?'
  1387  00F781  3F                 	db	63	;'?'
  1388  00F782  3F                 	db	63	;'?'
  1389  00F783  3F                 	db	63	;'?'
  1390  00F784  3F                 	db	63	;'?'
  1391  00F785  3F                 	db	63	;'?'
  1392  00F786  3A                 	db	58	;':'
  1393  00F787  3A                 	db	58	;':'
  1394  00F788  3A                 	db	58	;':'
  1395  00F789  3A                 	db	58	;':'
  1396  00F78A  3A                 	db	58	;':'
  1397  00F78B  3F                 	db	63	;'?'
  1398  00F78C  3F                 	db	63	;'?'
  1399  00F78D  3F                 	db	63	;'?'
  1400  00F78E  3F                 	db	63	;'?'
  1401  00F78F  3F                 	db	63	;'?'
  1402  00F790  3F                 	db	63	;'?'
  1403  00F791  3F                 	db	63	;'?'
  1404  00F792  3F                 	db	63	;'?'
  1405  00F793  3F                 	db	63	;'?'
  1406  00F794  3F                 	db	63	;'?'
  1407  00F795  3F                 	db	63	;'?'
  1408  00F796  3F                 	db	63	;'?'
  1409  00F797  3F                 	db	63	;'?'
  1410  00F798  3F                 	db	63	;'?'
  1411  00F799  2E                 	db	46
  1412  00F79A  2E                 	db	46
  1413  00F79B  2E                 	db	46
  1414  00F79C  2E                 	db	46
  1415  00F79D  2E                 	db	46
  1416  00F79E  0D                 	db	13
  1417  00F79F  0A                 	db	10
  1418  00F7A0  00                 	db	0
  1419  00F7A1                     STR_95:
  1420  00F7A1  2E                 	db	46
  1421  00F7A2  2E                 	db	46
  1422  00F7A3  2E                 	db	46
  1423  00F7A4  3F                 	db	63	;'?'
  1424  00F7A5  3F                 	db	63	;'?'
  1425  00F7A6  3A                 	db	58	;':'
  1426  00F7A7  3A                 	db	58	;':'
  1427  00F7A8  3A                 	db	58	;':'
  1428  00F7A9  3A                 	db	58	;':'
  1429  00F7AA  3A                 	db	58	;':'
  1430  00F7AB  3A                 	db	58	;':'
  1431  00F7AC  3A                 	db	58	;':'
  1432  00F7AD  3A                 	db	58	;':'
  1433  00F7AE  3A                 	db	58	;':'
  1434  00F7AF  3A                 	db	58	;':'
  1435  00F7B0  3A                 	db	58	;':'
  1436  00F7B1  3A                 	db	58	;':'
  1437  00F7B2  3A                 	db	58	;':'
  1438  00F7B3  3A                 	db	58	;':'
  1439  00F7B4  3A                 	db	58	;':'
  1440  00F7B5  3A                 	db	58	;':'
  1441  00F7B6  3A                 	db	58	;':'
  1442  00F7B7  3A                 	db	58	;':'
  1443  00F7B8  3A                 	db	58	;':'
  1444  00F7B9  3A                 	db	58	;':'
  1445  00F7BA  3F                 	db	63	;'?'
  1446  00F7BB  3F                 	db	63	;'?'
  1447  00F7BC  3F                 	db	63	;'?'
  1448  00F7BD  3F                 	db	63	;'?'
  1449  00F7BE  3F                 	db	63	;'?'
  1450  00F7BF  3F                 	db	63	;'?'
  1451  00F7C0  3F                 	db	63	;'?'
  1452  00F7C1  3F                 	db	63	;'?'
  1453  00F7C2  3F                 	db	63	;'?'
  1454  00F7C3  3A                 	db	58	;':'
  1455  00F7C4  3A                 	db	58	;':'
  1456  00F7C5  3A                 	db	58	;':'
  1457  00F7C6  3A                 	db	58	;':'
  1458  00F7C7  3A                 	db	58	;':'
  1459  00F7C8  3A                 	db	58	;':'
  1460  00F7C9  3A                 	db	58	;':'
  1461  00F7CA  3A                 	db	58	;':'
  1462  00F7CB  3A                 	db	58	;':'
  1463  00F7CC  3A                 	db	58	;':'
  1464  00F7CD  3A                 	db	58	;':'
  1465  00F7CE  3A                 	db	58	;':'
  1466  00F7CF  3A                 	db	58	;':'
  1467  00F7D0  3A                 	db	58	;':'
  1468  00F7D1  3A                 	db	58	;':'
  1469  00F7D2  3A                 	db	58	;':'
  1470  00F7D3  3A                 	db	58	;':'
  1471  00F7D4  3A                 	db	58	;':'
  1472  00F7D5  3A                 	db	58	;':'
  1473  00F7D6  3A                 	db	58	;':'
  1474  00F7D7  3F                 	db	63	;'?'
  1475  00F7D8  3F                 	db	63	;'?'
  1476  00F7D9  2E                 	db	46
  1477  00F7DA  2E                 	db	46
  1478  00F7DB  2E                 	db	46
  1479  00F7DC  2E                 	db	46
  1480  00F7DD  0D                 	db	13
  1481  00F7DE  0A                 	db	10
  1482  00F7DF  00                 	db	0
  1483  00F7E0                     STR_107:
  1484  00F7E0  2E                 	db	46
  1485  00F7E1  2E                 	db	46
  1486  00F7E2  2E                 	db	46
  1487  00F7E3  2E                 	db	46
  1488  00F7E4  3F                 	db	63	;'?'
  1489  00F7E5  3F                 	db	63	;'?'
  1490  00F7E6  3F                 	db	63	;'?'
  1491  00F7E7  3F                 	db	63	;'?'
  1492  00F7E8  3F                 	db	63	;'?'
  1493  00F7E9  3F                 	db	63	;'?'
  1494  00F7EA  3F                 	db	63	;'?'
  1495  00F7EB  3F                 	db	63	;'?'
  1496  00F7EC  3F                 	db	63	;'?'
  1497  00F7ED  3F                 	db	63	;'?'
  1498  00F7EE  3F                 	db	63	;'?'
  1499  00F7EF  3F                 	db	63	;'?'
  1500  00F7F0  3F                 	db	63	;'?'
  1501  00F7F1  3A                 	db	58	;':'
  1502  00F7F2  3A                 	db	58	;':'
  1503  00F7F3  3A                 	db	58	;':'
  1504  00F7F4  3F                 	db	63	;'?'
  1505  00F7F5  3F                 	db	63	;'?'
  1506  00F7F6  3F                 	db	63	;'?'
  1507  00F7F7  3F                 	db	63	;'?'
  1508  00F7F8  3F                 	db	63	;'?'
  1509  00F7F9  3F                 	db	63	;'?'
  1510  00F7FA  3F                 	db	63	;'?'
  1511  00F7FB  3F                 	db	63	;'?'
  1512  00F7FC  3F                 	db	63	;'?'
  1513  00F7FD  3F                 	db	63	;'?'
  1514  00F7FE  3F                 	db	63	;'?'
  1515  00F7FF  3F                 	db	63	;'?'
  1516  00F800  3F                 	db	63	;'?'
  1517  00F801  3F                 	db	63	;'?'
  1518  00F802  3F                 	db	63	;'?'
  1519  00F803  3F                 	db	63	;'?'
  1520  00F804  3F                 	db	63	;'?'
  1521  00F805  3F                 	db	63	;'?'
  1522  00F806  3F                 	db	63	;'?'
  1523  00F807  3A                 	db	58	;':'
  1524  00F808  3A                 	db	58	;':'
  1525  00F809  3A                 	db	58	;':'
  1526  00F80A  3F                 	db	63	;'?'
  1527  00F80B  3F                 	db	63	;'?'
  1528  00F80C  3F                 	db	63	;'?'
  1529  00F80D  3F                 	db	63	;'?'
  1530  00F80E  3F                 	db	63	;'?'
  1531  00F80F  3F                 	db	63	;'?'
  1532  00F810  3F                 	db	63	;'?'
  1533  00F811  3F                 	db	63	;'?'
  1534  00F812  3F                 	db	63	;'?'
  1535  00F813  3F                 	db	63	;'?'
  1536  00F814  3F                 	db	63	;'?'
  1537  00F815  3F                 	db	63	;'?'
  1538  00F816  3F                 	db	63	;'?'
  1539  00F817  3F                 	db	63	;'?'
  1540  00F818  2E                 	db	46
  1541  00F819  2E                 	db	46
  1542  00F81A  2E                 	db	46
  1543  00F81B  2E                 	db	46
  1544  00F81C  0D                 	db	13
  1545  00F81D  0A                 	db	10
  1546  00F81E  00                 	db	0
  1547  00F81F                     STR_106:
  1548  00F81F  2E                 	db	46
  1549  00F820  2E                 	db	46
  1550  00F821  2E                 	db	46
  1551  00F822  3F                 	db	63	;'?'
  1552  00F823  3F                 	db	63	;'?'
  1553  00F824  3F                 	db	63	;'?'
  1554  00F825  3F                 	db	63	;'?'
  1555  00F826  3F                 	db	63	;'?'
  1556  00F827  3F                 	db	63	;'?'
  1557  00F828  3F                 	db	63	;'?'
  1558  00F829  3F                 	db	63	;'?'
  1559  00F82A  3F                 	db	63	;'?'
  1560  00F82B  3F                 	db	63	;'?'
  1561  00F82C  3F                 	db	63	;'?'
  1562  00F82D  3F                 	db	63	;'?'
  1563  00F82E  3F                 	db	63	;'?'
  1564  00F82F  3F                 	db	63	;'?'
  1565  00F830  3F                 	db	63	;'?'
  1566  00F831  3F                 	db	63	;'?'
  1567  00F832  3F                 	db	63	;'?'
  1568  00F833  3F                 	db	63	;'?'
  1569  00F834  3F                 	db	63	;'?'
  1570  00F835  3F                 	db	63	;'?'
  1571  00F836  3F                 	db	63	;'?'
  1572  00F837  3F                 	db	63	;'?'
  1573  00F838  3F                 	db	63	;'?'
  1574  00F839  3F                 	db	63	;'?'
  1575  00F83A  3F                 	db	63	;'?'
  1576  00F83B  3F                 	db	63	;'?'
  1577  00F83C  3F                 	db	63	;'?'
  1578  00F83D  3F                 	db	63	;'?'
  1579  00F83E  3F                 	db	63	;'?'
  1580  00F83F  3F                 	db	63	;'?'
  1581  00F840  3F                 	db	63	;'?'
  1582  00F841  3F                 	db	63	;'?'
  1583  00F842  3F                 	db	63	;'?'
  1584  00F843  3F                 	db	63	;'?'
  1585  00F844  3F                 	db	63	;'?'
  1586  00F845  3F                 	db	63	;'?'
  1587  00F846  3F                 	db	63	;'?'
  1588  00F847  3F                 	db	63	;'?'
  1589  00F848  3F                 	db	63	;'?'
  1590  00F849  3F                 	db	63	;'?'
  1591  00F84A  3F                 	db	63	;'?'
  1592  00F84B  3F                 	db	63	;'?'
  1593  00F84C  3F                 	db	63	;'?'
  1594  00F84D  3F                 	db	63	;'?'
  1595  00F84E  3F                 	db	63	;'?'
  1596  00F84F  3F                 	db	63	;'?'
  1597  00F850  3F                 	db	63	;'?'
  1598  00F851  3F                 	db	63	;'?'
  1599  00F852  3F                 	db	63	;'?'
  1600  00F853  3F                 	db	63	;'?'
  1601  00F854  3F                 	db	63	;'?'
  1602  00F855  3F                 	db	63	;'?'
  1603  00F856  3F                 	db	63	;'?'
  1604  00F857  2E                 	db	46
  1605  00F858  2E                 	db	46
  1606  00F859  2E                 	db	46
  1607  00F85A  2E                 	db	46
  1608  00F85B  0D                 	db	13
  1609  00F85C  0A                 	db	10
  1610  00F85D  00                 	db	0
  1611  00F85E                     STR_96:
  1612  00F85E  2E                 	db	46
  1613  00F85F  2E                 	db	46
  1614  00F860  2E                 	db	46
  1615  00F861  3F                 	db	63	;'?'
  1616  00F862  3F                 	db	63	;'?'
  1617  00F863  3A                 	db	58	;':'
  1618  00F864  3A                 	db	58	;':'
  1619  00F865  3A                 	db	58	;':'
  1620  00F866  3A                 	db	58	;':'
  1621  00F867  3A                 	db	58	;':'
  1622  00F868  3A                 	db	58	;':'
  1623  00F869  3A                 	db	58	;':'
  1624  00F86A  3A                 	db	58	;':'
  1625  00F86B  3A                 	db	58	;':'
  1626  00F86C  3A                 	db	58	;':'
  1627  00F86D  3A                 	db	58	;':'
  1628  00F86E  3A                 	db	58	;':'
  1629  00F86F  3A                 	db	58	;':'
  1630  00F870  3A                 	db	58	;':'
  1631  00F871  3A                 	db	58	;':'
  1632  00F872  3A                 	db	58	;':'
  1633  00F873  3A                 	db	58	;':'
  1634  00F874  3A                 	db	58	;':'
  1635  00F875  3A                 	db	58	;':'
  1636  00F876  3A                 	db	58	;':'
  1637  00F877  3A                 	db	58	;':'
  1638  00F878  3A                 	db	58	;':'
  1639  00F879  3A                 	db	58	;':'
  1640  00F87A  3A                 	db	58	;':'
  1641  00F87B  3A                 	db	58	;':'
  1642  00F87C  3A                 	db	58	;':'
  1643  00F87D  3A                 	db	58	;':'
  1644  00F87E  3A                 	db	58	;':'
  1645  00F87F  3A                 	db	58	;':'
  1646  00F880  3A                 	db	58	;':'
  1647  00F881  3A                 	db	58	;':'
  1648  00F882  3A                 	db	58	;':'
  1649  00F883  3A                 	db	58	;':'
  1650  00F884  3A                 	db	58	;':'
  1651  00F885  3A                 	db	58	;':'
  1652  00F886  3A                 	db	58	;':'
  1653  00F887  3A                 	db	58	;':'
  1654  00F888  3A                 	db	58	;':'
  1655  00F889  3A                 	db	58	;':'
  1656  00F88A  3A                 	db	58	;':'
  1657  00F88B  3A                 	db	58	;':'
  1658  00F88C  3A                 	db	58	;':'
  1659  00F88D  3A                 	db	58	;':'
  1660  00F88E  3A                 	db	58	;':'
  1661  00F88F  3A                 	db	58	;':'
  1662  00F890  3A                 	db	58	;':'
  1663  00F891  3A                 	db	58	;':'
  1664  00F892  3A                 	db	58	;':'
  1665  00F893  3A                 	db	58	;':'
  1666  00F894  3F                 	db	63	;'?'
  1667  00F895  3F                 	db	63	;'?'
  1668  00F896  3F                 	db	63	;'?'
  1669  00F897  2E                 	db	46
  1670  00F898  2E                 	db	46
  1671  00F899  2E                 	db	46
  1672  00F89A  0D                 	db	13
  1673  00F89B  0A                 	db	10
  1674  00F89C  00                 	db	0
  1675  00F89D                     STR_97:
  1676  00F89D  2E                 	db	46
  1677  00F89E  2E                 	db	46
  1678  00F89F  3F                 	db	63	;'?'
  1679  00F8A0  3F                 	db	63	;'?'
  1680  00F8A1  3F                 	db	63	;'?'
  1681  00F8A2  3F                 	db	63	;'?'
  1682  00F8A3  3A                 	db	58	;':'
  1683  00F8A4  3A                 	db	58	;':'
  1684  00F8A5  3A                 	db	58	;':'
  1685  00F8A6  3A                 	db	58	;':'
  1686  00F8A7  3A                 	db	58	;':'
  1687  00F8A8  3A                 	db	58	;':'
  1688  00F8A9  3A                 	db	58	;':'
  1689  00F8AA  3A                 	db	58	;':'
  1690  00F8AB  3A                 	db	58	;':'
  1691  00F8AC  3A                 	db	58	;':'
  1692  00F8AD  3A                 	db	58	;':'
  1693  00F8AE  3A                 	db	58	;':'
  1694  00F8AF  3A                 	db	58	;':'
  1695  00F8B0  3A                 	db	58	;':'
  1696  00F8B1  3A                 	db	58	;':'
  1697  00F8B2  3A                 	db	58	;':'
  1698  00F8B3  3A                 	db	58	;':'
  1699  00F8B4  3A                 	db	58	;':'
  1700  00F8B5  3A                 	db	58	;':'
  1701  00F8B6  3A                 	db	58	;':'
  1702  00F8B7  3A                 	db	58	;':'
  1703  00F8B8  3A                 	db	58	;':'
  1704  00F8B9  3F                 	db	63	;'?'
  1705  00F8BA  3F                 	db	63	;'?'
  1706  00F8BB  3F                 	db	63	;'?'
  1707  00F8BC  3A                 	db	58	;':'
  1708  00F8BD  3A                 	db	58	;':'
  1709  00F8BE  3A                 	db	58	;':'
  1710  00F8BF  3A                 	db	58	;':'
  1711  00F8C0  3A                 	db	58	;':'
  1712  00F8C1  3A                 	db	58	;':'
  1713  00F8C2  3A                 	db	58	;':'
  1714  00F8C3  3A                 	db	58	;':'
  1715  00F8C4  3A                 	db	58	;':'
  1716  00F8C5  3A                 	db	58	;':'
  1717  00F8C6  3A                 	db	58	;':'
  1718  00F8C7  3A                 	db	58	;':'
  1719  00F8C8  3A                 	db	58	;':'
  1720  00F8C9  3A                 	db	58	;':'
  1721  00F8CA  3A                 	db	58	;':'
  1722  00F8CB  3A                 	db	58	;':'
  1723  00F8CC  3A                 	db	58	;':'
  1724  00F8CD  3A                 	db	58	;':'
  1725  00F8CE  3A                 	db	58	;':'
  1726  00F8CF  3A                 	db	58	;':'
  1727  00F8D0  3A                 	db	58	;':'
  1728  00F8D1  3A                 	db	58	;':'
  1729  00F8D2  3F                 	db	63	;'?'
  1730  00F8D3  3F                 	db	63	;'?'
  1731  00F8D4  3F                 	db	63	;'?'
  1732  00F8D5  3F                 	db	63	;'?'
  1733  00F8D6  2E                 	db	46
  1734  00F8D7  2E                 	db	46
  1735  00F8D8  2E                 	db	46
  1736  00F8D9  0D                 	db	13
  1737  00F8DA  0A                 	db	10
  1738  00F8DB  00                 	db	0
  1739  00F8DC                     STR_105:
  1740  00F8DC  2E                 	db	46
  1741  00F8DD  2E                 	db	46
  1742  00F8DE  2E                 	db	46
  1743  00F8DF  3F                 	db	63	;'?'
  1744  00F8E0  3F                 	db	63	;'?'
  1745  00F8E1  3F                 	db	63	;'?'
  1746  00F8E2  3F                 	db	63	;'?'
  1747  00F8E3  3F                 	db	63	;'?'
  1748  00F8E4  3F                 	db	63	;'?'
  1749  00F8E5  3F                 	db	63	;'?'
  1750  00F8E6  3F                 	db	63	;'?'
  1751  00F8E7  3F                 	db	63	;'?'
  1752  00F8E8  3F                 	db	63	;'?'
  1753  00F8E9  3F                 	db	63	;'?'
  1754  00F8EA  3F                 	db	63	;'?'
  1755  00F8EB  3F                 	db	63	;'?'
  1756  00F8EC  3F                 	db	63	;'?'
  1757  00F8ED  3F                 	db	63	;'?'
  1758  00F8EE  3F                 	db	63	;'?'
  1759  00F8EF  3F                 	db	63	;'?'
  1760  00F8F0  3F                 	db	63	;'?'
  1761  00F8F1  3F                 	db	63	;'?'
  1762  00F8F2  3F                 	db	63	;'?'
  1763  00F8F3  3F                 	db	63	;'?'
  1764  00F8F4  3F                 	db	63	;'?'
  1765  00F8F5  3F                 	db	63	;'?'
  1766  00F8F6  3F                 	db	63	;'?'
  1767  00F8F7  3F                 	db	63	;'?'
  1768  00F8F8  3F                 	db	63	;'?'
  1769  00F8F9  3F                 	db	63	;'?'
  1770  00F8FA  3F                 	db	63	;'?'
  1771  00F8FB  3F                 	db	63	;'?'
  1772  00F8FC  3F                 	db	63	;'?'
  1773  00F8FD  3F                 	db	63	;'?'
  1774  00F8FE  3F                 	db	63	;'?'
  1775  00F8FF  3F                 	db	63	;'?'
  1776  00F900  3F                 	db	63	;'?'
  1777  00F901  3F                 	db	63	;'?'
  1778  00F902  3F                 	db	63	;'?'
  1779  00F903  3F                 	db	63	;'?'
  1780  00F904  3F                 	db	63	;'?'
  1781  00F905  3F                 	db	63	;'?'
  1782  00F906  3F                 	db	63	;'?'
  1783  00F907  3F                 	db	63	;'?'
  1784  00F908  3F                 	db	63	;'?'
  1785  00F909  3F                 	db	63	;'?'
  1786  00F90A  3F                 	db	63	;'?'
  1787  00F90B  3F                 	db	63	;'?'
  1788  00F90C  3F                 	db	63	;'?'
  1789  00F90D  3F                 	db	63	;'?'
  1790  00F90E  3F                 	db	63	;'?'
  1791  00F90F  3F                 	db	63	;'?'
  1792  00F910  3F                 	db	63	;'?'
  1793  00F911  3F                 	db	63	;'?'
  1794  00F912  3F                 	db	63	;'?'
  1795  00F913  3F                 	db	63	;'?'
  1796  00F914  3F                 	db	63	;'?'
  1797  00F915  2E                 	db	46
  1798  00F916  2E                 	db	46
  1799  00F917  2E                 	db	46
  1800  00F918  0D                 	db	13
  1801  00F919  0A                 	db	10
  1802  00F91A  00                 	db	0
  1803  00F91B                     STR_103:
  1804  00F91B  2E                 	db	46
  1805  00F91C  2E                 	db	46
  1806  00F91D  3F                 	db	63	;'?'
  1807  00F91E  3F                 	db	63	;'?'
  1808  00F91F  3F                 	db	63	;'?'
  1809  00F920  3F                 	db	63	;'?'
  1810  00F921  3F                 	db	63	;'?'
  1811  00F922  3F                 	db	63	;'?'
  1812  00F923  3F                 	db	63	;'?'
  1813  00F924  3F                 	db	63	;'?'
  1814  00F925  3F                 	db	63	;'?'
  1815  00F926  3F                 	db	63	;'?'
  1816  00F927  3F                 	db	63	;'?'
  1817  00F928  3F                 	db	63	;'?'
  1818  00F929  3F                 	db	63	;'?'
  1819  00F92A  3F                 	db	63	;'?'
  1820  00F92B  3F                 	db	63	;'?'
  1821  00F92C  3F                 	db	63	;'?'
  1822  00F92D  3F                 	db	63	;'?'
  1823  00F92E  3F                 	db	63	;'?'
  1824  00F92F  3F                 	db	63	;'?'
  1825  00F930  3F                 	db	63	;'?'
  1826  00F931  3F                 	db	63	;'?'
  1827  00F932  3F                 	db	63	;'?'
  1828  00F933  3F                 	db	63	;'?'
  1829  00F934  3F                 	db	63	;'?'
  1830  00F935  3F                 	db	63	;'?'
  1831  00F936  3F                 	db	63	;'?'
  1832  00F937  3F                 	db	63	;'?'
  1833  00F938  3F                 	db	63	;'?'
  1834  00F939  3F                 	db	63	;'?'
  1835  00F93A  3F                 	db	63	;'?'
  1836  00F93B  3F                 	db	63	;'?'
  1837  00F93C  3F                 	db	63	;'?'
  1838  00F93D  3F                 	db	63	;'?'
  1839  00F93E  3F                 	db	63	;'?'
  1840  00F93F  3F                 	db	63	;'?'
  1841  00F940  3F                 	db	63	;'?'
  1842  00F941  3F                 	db	63	;'?'
  1843  00F942  3F                 	db	63	;'?'
  1844  00F943  3F                 	db	63	;'?'
  1845  00F944  3F                 	db	63	;'?'
  1846  00F945  3F                 	db	63	;'?'
  1847  00F946  3F                 	db	63	;'?'
  1848  00F947  3F                 	db	63	;'?'
  1849  00F948  3F                 	db	63	;'?'
  1850  00F949  3F                 	db	63	;'?'
  1851  00F94A  3F                 	db	63	;'?'
  1852  00F94B  3F                 	db	63	;'?'
  1853  00F94C  3F                 	db	63	;'?'
  1854  00F94D  3F                 	db	63	;'?'
  1855  00F94E  3F                 	db	63	;'?'
  1856  00F94F  3F                 	db	63	;'?'
  1857  00F950  3F                 	db	63	;'?'
  1858  00F951  3F                 	db	63	;'?'
  1859  00F952  3F                 	db	63	;'?'
  1860  00F953  3F                 	db	63	;'?'
  1861  00F954  2E                 	db	46
  1862  00F955  2E                 	db	46
  1863  00F956  2E                 	db	46
  1864  00F957  0D                 	db	13
  1865  00F958  0A                 	db	10
  1866  00F959  00                 	db	0
  1867  00F95A                     STR_98:
  1868  00F95A  2E                 	db	46
  1869  00F95B  2E                 	db	46
  1870  00F95C  3F                 	db	63	;'?'
  1871  00F95D  3F                 	db	63	;'?'
  1872  00F95E  3F                 	db	63	;'?'
  1873  00F95F  3F                 	db	63	;'?'
  1874  00F960  3F                 	db	63	;'?'
  1875  00F961  3A                 	db	58	;':'
  1876  00F962  3A                 	db	58	;':'
  1877  00F963  3A                 	db	58	;':'
  1878  00F964  3A                 	db	58	;':'
  1879  00F965  3A                 	db	58	;':'
  1880  00F966  3A                 	db	58	;':'
  1881  00F967  3A                 	db	58	;':'
  1882  00F968  3A                 	db	58	;':'
  1883  00F969  3A                 	db	58	;':'
  1884  00F96A  3A                 	db	58	;':'
  1885  00F96B  3A                 	db	58	;':'
  1886  00F96C  3A                 	db	58	;':'
  1887  00F96D  3A                 	db	58	;':'
  1888  00F96E  3A                 	db	58	;':'
  1889  00F96F  3A                 	db	58	;':'
  1890  00F970  3A                 	db	58	;':'
  1891  00F971  3A                 	db	58	;':'
  1892  00F972  3A                 	db	58	;':'
  1893  00F973  3A                 	db	58	;':'
  1894  00F974  3A                 	db	58	;':'
  1895  00F975  3F                 	db	63	;'?'
  1896  00F976  3F                 	db	63	;'?'
  1897  00F977  3F                 	db	63	;'?'
  1898  00F978  3F                 	db	63	;'?'
  1899  00F979  3F                 	db	63	;'?'
  1900  00F97A  3A                 	db	58	;':'
  1901  00F97B  3A                 	db	58	;':'
  1902  00F97C  3A                 	db	58	;':'
  1903  00F97D  3A                 	db	58	;':'
  1904  00F97E  3A                 	db	58	;':'
  1905  00F97F  3A                 	db	58	;':'
  1906  00F980  3A                 	db	58	;':'
  1907  00F981  3A                 	db	58	;':'
  1908  00F982  3A                 	db	58	;':'
  1909  00F983  3A                 	db	58	;':'
  1910  00F984  3A                 	db	58	;':'
  1911  00F985  3A                 	db	58	;':'
  1912  00F986  3A                 	db	58	;':'
  1913  00F987  3A                 	db	58	;':'
  1914  00F988  3A                 	db	58	;':'
  1915  00F989  3A                 	db	58	;':'
  1916  00F98A  3A                 	db	58	;':'
  1917  00F98B  3A                 	db	58	;':'
  1918  00F98C  3A                 	db	58	;':'
  1919  00F98D  3A                 	db	58	;':'
  1920  00F98E  3A                 	db	58	;':'
  1921  00F98F  3F                 	db	63	;'?'
  1922  00F990  3F                 	db	63	;'?'
  1923  00F991  3F                 	db	63	;'?'
  1924  00F992  3F                 	db	63	;'?'
  1925  00F993  3F                 	db	63	;'?'
  1926  00F994  2E                 	db	46
  1927  00F995  2E                 	db	46
  1928  00F996  0D                 	db	13
  1929  00F997  0A                 	db	10
  1930  00F998  00                 	db	0
  1931  00F999                     STR_99:
  1932  00F999  2E                 	db	46
  1933  00F99A  3F                 	db	63	;'?'
  1934  00F99B  3F                 	db	63	;'?'
  1935  00F99C  3F                 	db	63	;'?'
  1936  00F99D  3F                 	db	63	;'?'
  1937  00F99E  3F                 	db	63	;'?'
  1938  00F99F  3F                 	db	63	;'?'
  1939  00F9A0  3F                 	db	63	;'?'
  1940  00F9A1  3A                 	db	58	;':'
  1941  00F9A2  3A                 	db	58	;':'
  1942  00F9A3  3A                 	db	58	;':'
  1943  00F9A4  3A                 	db	58	;':'
  1944  00F9A5  3A                 	db	58	;':'
  1945  00F9A6  3A                 	db	58	;':'
  1946  00F9A7  3A                 	db	58	;':'
  1947  00F9A8  3A                 	db	58	;':'
  1948  00F9A9  3A                 	db	58	;':'
  1949  00F9AA  3A                 	db	58	;':'
  1950  00F9AB  3A                 	db	58	;':'
  1951  00F9AC  3A                 	db	58	;':'
  1952  00F9AD  3A                 	db	58	;':'
  1953  00F9AE  3A                 	db	58	;':'
  1954  00F9AF  3A                 	db	58	;':'
  1955  00F9B0  3A                 	db	58	;':'
  1956  00F9B1  3A                 	db	58	;':'
  1957  00F9B2  3A                 	db	58	;':'
  1958  00F9B3  3F                 	db	63	;'?'
  1959  00F9B4  3F                 	db	63	;'?'
  1960  00F9B5  3F                 	db	63	;'?'
  1961  00F9B6  3F                 	db	63	;'?'
  1962  00F9B7  3F                 	db	63	;'?'
  1963  00F9B8  3F                 	db	63	;'?'
  1964  00F9B9  3F                 	db	63	;'?'
  1965  00F9BA  3A                 	db	58	;':'
  1966  00F9BB  3A                 	db	58	;':'
  1967  00F9BC  3A                 	db	58	;':'
  1968  00F9BD  3A                 	db	58	;':'
  1969  00F9BE  3A                 	db	58	;':'
  1970  00F9BF  3A                 	db	58	;':'
  1971  00F9C0  3A                 	db	58	;':'
  1972  00F9C1  3A                 	db	58	;':'
  1973  00F9C2  3A                 	db	58	;':'
  1974  00F9C3  3A                 	db	58	;':'
  1975  00F9C4  3A                 	db	58	;':'
  1976  00F9C5  3A                 	db	58	;':'
  1977  00F9C6  3A                 	db	58	;':'
  1978  00F9C7  3A                 	db	58	;':'
  1979  00F9C8  3A                 	db	58	;':'
  1980  00F9C9  3A                 	db	58	;':'
  1981  00F9CA  3A                 	db	58	;':'
  1982  00F9CB  3A                 	db	58	;':'
  1983  00F9CC  3A                 	db	58	;':'
  1984  00F9CD  3F                 	db	63	;'?'
  1985  00F9CE  3F                 	db	63	;'?'
  1986  00F9CF  3F                 	db	63	;'?'
  1987  00F9D0  3F                 	db	63	;'?'
  1988  00F9D1  3F                 	db	63	;'?'
  1989  00F9D2  3F                 	db	63	;'?'
  1990  00F9D3  2E                 	db	46
  1991  00F9D4  2E                 	db	46
  1992  00F9D5  0D                 	db	13
  1993  00F9D6  0A                 	db	10
  1994  00F9D7  00                 	db	0
  1995  00F9D8                     STR_100:
  1996  00F9D8  2E                 	db	46
  1997  00F9D9  3F                 	db	63	;'?'
  1998  00F9DA  3F                 	db	63	;'?'
  1999  00F9DB  3F                 	db	63	;'?'
  2000  00F9DC  3F                 	db	63	;'?'
  2001  00F9DD  3F                 	db	63	;'?'
  2002  00F9DE  3F                 	db	63	;'?'
  2003  00F9DF  3F                 	db	63	;'?'
  2004  00F9E0  3A                 	db	58	;':'
  2005  00F9E1  3A                 	db	58	;':'
  2006  00F9E2  3A                 	db	58	;':'
  2007  00F9E3  3A                 	db	58	;':'
  2008  00F9E4  3A                 	db	58	;':'
  2009  00F9E5  3A                 	db	58	;':'
  2010  00F9E6  3A                 	db	58	;':'
  2011  00F9E7  3A                 	db	58	;':'
  2012  00F9E8  3A                 	db	58	;':'
  2013  00F9E9  3A                 	db	58	;':'
  2014  00F9EA  3A                 	db	58	;':'
  2015  00F9EB  3A                 	db	58	;':'
  2016  00F9EC  3A                 	db	58	;':'
  2017  00F9ED  3A                 	db	58	;':'
  2018  00F9EE  3A                 	db	58	;':'
  2019  00F9EF  3A                 	db	58	;':'
  2020  00F9F0  3A                 	db	58	;':'
  2021  00F9F1  3F                 	db	63	;'?'
  2022  00F9F2  3F                 	db	63	;'?'
  2023  00F9F3  3F                 	db	63	;'?'
  2024  00F9F4  3F                 	db	63	;'?'
  2025  00F9F5  3F                 	db	63	;'?'
  2026  00F9F6  3F                 	db	63	;'?'
  2027  00F9F7  3F                 	db	63	;'?'
  2028  00F9F8  3F                 	db	63	;'?'
  2029  00F9F9  3F                 	db	63	;'?'
  2030  00F9FA  3A                 	db	58	;':'
  2031  00F9FB  3A                 	db	58	;':'
  2032  00F9FC  3A                 	db	58	;':'
  2033  00F9FD  3A                 	db	58	;':'
  2034  00F9FE  3A                 	db	58	;':'
  2035  00F9FF  3A                 	db	58	;':'
  2036  00FA00  3A                 	db	58	;':'
  2037  00FA01  3A                 	db	58	;':'
  2038  00FA02  3A                 	db	58	;':'
  2039  00FA03  3A                 	db	58	;':'
  2040  00FA04  3A                 	db	58	;':'
  2041  00FA05  3A                 	db	58	;':'
  2042  00FA06  3A                 	db	58	;':'
  2043  00FA07  3A                 	db	58	;':'
  2044  00FA08  3A                 	db	58	;':'
  2045  00FA09  3A                 	db	58	;':'
  2046  00FA0A  3A                 	db	58	;':'
  2047  00FA0B  3A                 	db	58	;':'
  2048  00FA0C  3F                 	db	63	;'?'
  2049  00FA0D  3F                 	db	63	;'?'
  2050  00FA0E  3F                 	db	63	;'?'
  2051  00FA0F  3F                 	db	63	;'?'
  2052  00FA10  3F                 	db	63	;'?'
  2053  00FA11  3F                 	db	63	;'?'
  2054  00FA12  2E                 	db	46
  2055  00FA13  2E                 	db	46
  2056  00FA14  0D                 	db	13
  2057  00FA15  0A                 	db	10
  2058  00FA16  00                 	db	0
  2059  00FA17                     STR_101:
  2060  00FA17  2E                 	db	46
  2061  00FA18  3F                 	db	63	;'?'
  2062  00FA19  3F                 	db	63	;'?'
  2063  00FA1A  3F                 	db	63	;'?'
  2064  00FA1B  3F                 	db	63	;'?'
  2065  00FA1C  3F                 	db	63	;'?'
  2066  00FA1D  3F                 	db	63	;'?'
  2067  00FA1E  3F                 	db	63	;'?'
  2068  00FA1F  3F                 	db	63	;'?'
  2069  00FA20  3A                 	db	58	;':'
  2070  00FA21  3A                 	db	58	;':'
  2071  00FA22  3A                 	db	58	;':'
  2072  00FA23  3A                 	db	58	;':'
  2073  00FA24  3A                 	db	58	;':'
  2074  00FA25  3A                 	db	58	;':'
  2075  00FA26  3A                 	db	58	;':'
  2076  00FA27  3A                 	db	58	;':'
  2077  00FA28  3A                 	db	58	;':'
  2078  00FA29  3A                 	db	58	;':'
  2079  00FA2A  3A                 	db	58	;':'
  2080  00FA2B  3A                 	db	58	;':'
  2081  00FA2C  3A                 	db	58	;':'
  2082  00FA2D  3A                 	db	58	;':'
  2083  00FA2E  3A                 	db	58	;':'
  2084  00FA2F  3F                 	db	63	;'?'
  2085  00FA30  3F                 	db	63	;'?'
  2086  00FA31  3F                 	db	63	;'?'
  2087  00FA32  3F                 	db	63	;'?'
  2088  00FA33  3F                 	db	63	;'?'
  2089  00FA34  3F                 	db	63	;'?'
  2090  00FA35  3F                 	db	63	;'?'
  2091  00FA36  3F                 	db	63	;'?'
  2092  00FA37  3F                 	db	63	;'?'
  2093  00FA38  3F                 	db	63	;'?'
  2094  00FA39  3F                 	db	63	;'?'
  2095  00FA3A  3A                 	db	58	;':'
  2096  00FA3B  3A                 	db	58	;':'
  2097  00FA3C  3A                 	db	58	;':'
  2098  00FA3D  3A                 	db	58	;':'
  2099  00FA3E  3A                 	db	58	;':'
  2100  00FA3F  3A                 	db	58	;':'
  2101  00FA40  3A                 	db	58	;':'
  2102  00FA41  3A                 	db	58	;':'
  2103  00FA42  3A                 	db	58	;':'
  2104  00FA43  3A                 	db	58	;':'
  2105  00FA44  3A                 	db	58	;':'
  2106  00FA45  3A                 	db	58	;':'
  2107  00FA46  3A                 	db	58	;':'
  2108  00FA47  3A                 	db	58	;':'
  2109  00FA48  3A                 	db	58	;':'
  2110  00FA49  3F                 	db	63	;'?'
  2111  00FA4A  3F                 	db	63	;'?'
  2112  00FA4B  3F                 	db	63	;'?'
  2113  00FA4C  3F                 	db	63	;'?'
  2114  00FA4D  3F                 	db	63	;'?'
  2115  00FA4E  3F                 	db	63	;'?'
  2116  00FA4F  3F                 	db	63	;'?'
  2117  00FA50  3F                 	db	63	;'?'
  2118  00FA51  2E                 	db	46
  2119  00FA52  2E                 	db	46
  2120  00FA53  0D                 	db	13
  2121  00FA54  0A                 	db	10
  2122  00FA55  00                 	db	0
  2123  00FA56                     STR_102:
  2124  00FA56  2E                 	db	46
  2125  00FA57  2E                 	db	46
  2126  00FA58  3F                 	db	63	;'?'
  2127  00FA59  3F                 	db	63	;'?'
  2128  00FA5A  3F                 	db	63	;'?'
  2129  00FA5B  3F                 	db	63	;'?'
  2130  00FA5C  3F                 	db	63	;'?'
  2131  00FA5D  3F                 	db	63	;'?'
  2132  00FA5E  3F                 	db	63	;'?'
  2133  00FA5F  3F                 	db	63	;'?'
  2134  00FA60  3F                 	db	63	;'?'
  2135  00FA61  3A                 	db	58	;':'
  2136  00FA62  3A                 	db	58	;':'
  2137  00FA63  3A                 	db	58	;':'
  2138  00FA64  3A                 	db	58	;':'
  2139  00FA65  3A                 	db	58	;':'
  2140  00FA66  3A                 	db	58	;':'
  2141  00FA67  3A                 	db	58	;':'
  2142  00FA68  3A                 	db	58	;':'
  2143  00FA69  3A                 	db	58	;':'
  2144  00FA6A  3A                 	db	58	;':'
  2145  00FA6B  3F                 	db	63	;'?'
  2146  00FA6C  3F                 	db	63	;'?'
  2147  00FA6D  3F                 	db	63	;'?'
  2148  00FA6E  3F                 	db	63	;'?'
  2149  00FA6F  3F                 	db	63	;'?'
  2150  00FA70  3F                 	db	63	;'?'
  2151  00FA71  3F                 	db	63	;'?'
  2152  00FA72  3F                 	db	63	;'?'
  2153  00FA73  3F                 	db	63	;'?'
  2154  00FA74  3F                 	db	63	;'?'
  2155  00FA75  3F                 	db	63	;'?'
  2156  00FA76  3F                 	db	63	;'?'
  2157  00FA77  3F                 	db	63	;'?'
  2158  00FA78  3F                 	db	63	;'?'
  2159  00FA79  3F                 	db	63	;'?'
  2160  00FA7A  3F                 	db	63	;'?'
  2161  00FA7B  3F                 	db	63	;'?'
  2162  00FA7C  3A                 	db	58	;':'
  2163  00FA7D  3A                 	db	58	;':'
  2164  00FA7E  3A                 	db	58	;':'
  2165  00FA7F  3A                 	db	58	;':'
  2166  00FA80  3A                 	db	58	;':'
  2167  00FA81  3A                 	db	58	;':'
  2168  00FA82  3A                 	db	58	;':'
  2169  00FA83  3A                 	db	58	;':'
  2170  00FA84  3A                 	db	58	;':'
  2171  00FA85  3A                 	db	58	;':'
  2172  00FA86  3F                 	db	63	;'?'
  2173  00FA87  3F                 	db	63	;'?'
  2174  00FA88  3F                 	db	63	;'?'
  2175  00FA89  3F                 	db	63	;'?'
  2176  00FA8A  3F                 	db	63	;'?'
  2177  00FA8B  3F                 	db	63	;'?'
  2178  00FA8C  3F                 	db	63	;'?'
  2179  00FA8D  3F                 	db	63	;'?'
  2180  00FA8E  3F                 	db	63	;'?'
  2181  00FA8F  3F                 	db	63	;'?'
  2182  00FA90  2E                 	db	46
  2183  00FA91  2E                 	db	46
  2184  00FA92  0D                 	db	13
  2185  00FA93  0A                 	db	10
  2186  00FA94  00                 	db	0
  2187  00FA95                     STR_50:
  2188  00FA95  59                 	db	89	;'Y'
  2189  00FA96  6F                 	db	111	;'o'
  2190  00FA97  75                 	db	117	;'u'
  2191  00FA98  20                 	db	32
  2192  00FA99  6D                 	db	109	;'m'
  2193  00FA9A  61                 	db	97	;'a'
  2194  00FA9B  79                 	db	121	;'y'
  2195  00FA9C  20                 	db	32
  2196  00FA9D  74                 	db	116	;'t'
  2197  00FA9E  65                 	db	101	;'e'
  2198  00FA9F  72                 	db	114	;'r'
  2199  00FAA0  6D                 	db	109	;'m'
  2200  00FAA1  69                 	db	105	;'i'
  2201  00FAA2  6E                 	db	110	;'n'
  2202  00FAA3  61                 	db	97	;'a'
  2203  00FAA4  74                 	db	116	;'t'
  2204  00FAA5  65                 	db	101	;'e'
  2205  00FAA6  20                 	db	32
  2206  00FAA7  73                 	db	115	;'s'
  2207  00FAA8  70                 	db	112	;'p'
  2208  00FAA9  6F                 	db	111	;'o'
  2209  00FAAA  6F                 	db	111	;'o'
  2210  00FAAB  6C                 	db	108	;'l'
  2211  00FAAC  69                 	db	105	;'i'
  2212  00FAAD  6E                 	db	110	;'n'
  2213  00FAAE  67                 	db	103	;'g'
  2214  00FAAF  20                 	db	32
  2215  00FAB0  61                 	db	97	;'a'
  2216  00FAB1  74                 	db	116	;'t'
  2217  00FAB2  20                 	db	32
  2218  00FAB3  61                 	db	97	;'a'
  2219  00FAB4  6E                 	db	110	;'n'
  2220  00FAB5  79                 	db	121	;'y'
  2221  00FAB6  74                 	db	116	;'t'
  2222  00FAB7  69                 	db	105	;'i'
  2223  00FAB8  6D                 	db	109	;'m'
  2224  00FAB9  65                 	db	101	;'e'
  2225  00FABA  20                 	db	32
  2226  00FABB  77                 	db	119	;'w'
  2227  00FABC  69                 	db	105	;'i'
  2228  00FABD  74                 	db	116	;'t'
  2229  00FABE  68                 	db	104	;'h'
  2230  00FABF  20                 	db	32
  2231  00FAC0  61                 	db	97	;'a'
  2232  00FAC1  20                 	db	32
  2233  00FAC2  6B                 	db	107	;'k'
  2234  00FAC3  65                 	db	101	;'e'
  2235  00FAC4  79                 	db	121	;'y'
  2236  00FAC5  20                 	db	32
  2237  00FAC6  70                 	db	112	;'p'
  2238  00FAC7  72                 	db	114	;'r'
  2239  00FAC8  65                 	db	101	;'e'
  2240  00FAC9  73                 	db	115	;'s'
  2241  00FACA  73                 	db	115	;'s'
  2242  00FACB  2E                 	db	46
  2243  00FACC  0D                 	db	13
  2244  00FACD  0A                 	db	10
  2245  00FACE  00                 	db	0
  2246  00FACF                     STR_53:
  2247  00FACF  52                 	db	82	;'R'
  2248  00FAD0  69                 	db	105	;'i'
  2249  00FAD1  67                 	db	103	;'g'
  2250  00FAD2  68                 	db	104	;'h'
  2251  00FAD3  74                 	db	116	;'t'
  2252  00FAD4  20                 	db	32
  2253  00FAD5  6D                 	db	109	;'m'
  2254  00FAD6  6F                 	db	111	;'o'
  2255  00FAD7  75                 	db	117	;'u'
  2256  00FAD8  73                 	db	115	;'s'
  2257  00FAD9  65                 	db	101	;'e'
  2258  00FADA  20                 	db	32
  2259  00FADB  63                 	db	99	;'c'
  2260  00FADC  6C                 	db	108	;'l'
  2261  00FADD  69                 	db	105	;'i'
  2262  00FADE  63                 	db	99	;'c'
  2263  00FADF  6B                 	db	107	;'k'
  2264  00FAE0  20                 	db	32
  2265  00FAE1  6F                 	db	111	;'o'
  2266  00FAE2  6E                 	db	110	;'n'
  2267  00FAE3  20                 	db	32
  2268  00FAE4  74                 	db	116	;'t'
  2269  00FAE5  68                 	db	104	;'h'
  2270  00FAE6  65                 	db	101	;'e'
  2271  00FAE7  20                 	db	32
  2272  00FAE8  75                 	db	117	;'u'
  2273  00FAE9  70                 	db	112	;'p'
  2274  00FAEA  70                 	db	112	;'p'
  2275  00FAEB  65                 	db	101	;'e'
  2276  00FAEC  72                 	db	114	;'r'
  2277  00FAED  20                 	db	32
  2278  00FAEE  6C                 	db	108	;'l'
  2279  00FAEF  65                 	db	101	;'e'
  2280  00FAF0  66                 	db	102	;'f'
  2281  00FAF1  74                 	db	116	;'t'
  2282  00FAF2  20                 	db	32
  2283  00FAF3  6F                 	db	111	;'o'
  2284  00FAF4  66                 	db	102	;'f'
  2285  00FAF5  20                 	db	32
  2286  00FAF6  74                 	db	116	;'t'
  2287  00FAF7  68                 	db	104	;'h'
  2288  00FAF8  65                 	db	101	;'e'
  2289  00FAF9  20                 	db	32
  2290  00FAFA  50                 	db	80	;'P'
  2291  00FAFB  75                 	db	117	;'u'
  2292  00FAFC  54                 	db	84	;'T'
  2293  00FAFD  54                 	db	84	;'T'
  2294  00FAFE  59                 	db	89	;'Y'
  2295  00FAFF  20                 	db	32
  2296  00FB00  77                 	db	119	;'w'
  2297  00FB01  69                 	db	105	;'i'
  2298  00FB02  6E                 	db	110	;'n'
  2299  00FB03  64                 	db	100	;'d'
  2300  00FB04  6F                 	db	111	;'o'
  2301  00FB05  77                 	db	119	;'w'
  2302  00FB06  0D                 	db	13
  2303  00FB07  0A                 	db	10
  2304  00FB08  00                 	db	0
  2305  00FB09                     STR_25:
  2306  00FB09  31                 	db	49	;'1'
  2307  00FB0A  3A                 	db	58	;':'
  2308  00FB0B  20                 	db	32
  2309  00FB0C  77                 	db	119	;'w'
  2310  00FB0D  72                 	db	114	;'r'
  2311  00FB0E  69                 	db	105	;'i'
  2312  00FB0F  74                 	db	116	;'t'
  2313  00FB10  65                 	db	101	;'e'
  2314  00FB11  20                 	db	32
  2315  00FB12  61                 	db	97	;'a'
  2316  00FB13  20                 	db	32
  2317  00FB14  70                 	db	112	;'p'
  2318  00FB15  65                 	db	101	;'e'
  2319  00FB16  72                 	db	114	;'r'
  2320  00FB17  66                 	db	102	;'f'
  2321  00FB18  65                 	db	101	;'e'
  2322  00FB19  63                 	db	99	;'c'
  2323  00FB1A  74                 	db	116	;'t'
  2324  00FB1B  20                 	db	32
  2325  00FB1C  32                 	db	50	;'2'
  2326  00FB1D  36                 	db	54	;'6'
  2327  00FB1E  20                 	db	32
  2328  00FB1F  76                 	db	118	;'v'
  2329  00FB20  61                 	db	97	;'a'
  2330  00FB21  6C                 	db	108	;'l'
  2331  00FB22  75                 	db	117	;'u'
  2332  00FB23  65                 	db	101	;'e'
  2333  00FB24  20                 	db	32
  2334  00FB25  73                 	db	115	;'s'
  2335  00FB26  69                 	db	105	;'i'
  2336  00FB27  6E                 	db	110	;'n'
  2337  00FB28  65                 	db	101	;'e'
  2338  00FB29  20                 	db	32
  2339  00FB2A  77                 	db	119	;'w'
  2340  00FB2B  61                 	db	97	;'a'
  2341  00FB2C  76                 	db	118	;'v'
  2342  00FB2D  65                 	db	101	;'e'
  2343  00FB2E  20                 	db	32
  2344  00FB2F  74                 	db	116	;'t'
  2345  00FB30  6F                 	db	111	;'o'
  2346  00FB31  20                 	db	32
  2347  00FB32  74                 	db	116	;'t'
  2348  00FB33  68                 	db	104	;'h'
  2349  00FB34  65                 	db	101	;'e'
  2350  00FB35  20                 	db	32
  2351  00FB36  53                 	db	83	;'S'
  2352  00FB37  44                 	db	68	;'D'
  2353  00FB38  20                 	db	32
  2354  00FB39  63                 	db	99	;'c'
  2355  00FB3A  61                 	db	97	;'a'
  2356  00FB3B  72                 	db	114	;'r'
  2357  00FB3C  64                 	db	100	;'d'
  2358  00FB3D  0D                 	db	13
  2359  00FB3E  0A                 	db	10
  2360  00FB3F  00                 	db	0
  2361  00FB40                     STR_7:
  2362  00FB40  0D                 	db	13
  2363  00FB41  0A                 	db	10
  2364  00FB42  2D                 	db	45
  2365  00FB43  2D                 	db	45
  2366  00FB44  2D                 	db	45
  2367  00FB45  2D                 	db	45
  2368  00FB46  2D                 	db	45
  2369  00FB47  2D                 	db	45
  2370  00FB48  2D                 	db	45
  2371  00FB49  2D                 	db	45
  2372  00FB4A  2D                 	db	45
  2373  00FB4B  2D                 	db	45
  2374  00FB4C  2D                 	db	45
  2375  00FB4D  2D                 	db	45
  2376  00FB4E  2D                 	db	45
  2377  00FB4F  2D                 	db	45
  2378  00FB50  2D                 	db	45
  2379  00FB51  2D                 	db	45
  2380  00FB52  2D                 	db	45
  2381  00FB53  2D                 	db	45
  2382  00FB54  2D                 	db	45
  2383  00FB55  2D                 	db	45
  2384  00FB56  2D                 	db	45
  2385  00FB57  2D                 	db	45
  2386  00FB58  2D                 	db	45
  2387  00FB59  2D                 	db	45
  2388  00FB5A  2D                 	db	45
  2389  00FB5B  2D                 	db	45
  2390  00FB5C  2D                 	db	45
  2391  00FB5D  2D                 	db	45
  2392  00FB5E  2D                 	db	45
  2393  00FB5F  2D                 	db	45
  2394  00FB60  2D                 	db	45
  2395  00FB61  2D                 	db	45
  2396  00FB62  2D                 	db	45
  2397  00FB63  2D                 	db	45
  2398  00FB64  2D                 	db	45
  2399  00FB65  2D                 	db	45
  2400  00FB66  2D                 	db	45
  2401  00FB67  2D                 	db	45
  2402  00FB68  2D                 	db	45
  2403  00FB69  2D                 	db	45
  2404  00FB6A  2D                 	db	45
  2405  00FB6B  2D                 	db	45
  2406  00FB6C  2D                 	db	45
  2407  00FB6D  2D                 	db	45
  2408  00FB6E  2D                 	db	45
  2409  00FB6F  2D                 	db	45
  2410  00FB70  2D                 	db	45
  2411  00FB71  2D                 	db	45
  2412  00FB72  2D                 	db	45
  2413  00FB73  0D                 	db	13
  2414  00FB74  0A                 	db	10
  2415  00FB75  00                 	db	0
  2416  00FB76                     STR_56:
  2417  00FB76  53                 	db	83	;'S'
  2418  00FB77  65                 	db	101	;'e'
  2419  00FB78  6C                 	db	108	;'l'
  2420  00FB79  65                 	db	101	;'e'
  2421  00FB7A  63                 	db	99	;'c'
  2422  00FB7B  74                 	db	116	;'t'
  2423  00FB7C  3A                 	db	58	;':'
  2424  00FB7D  20                 	db	32
  2425  00FB7E  20                 	db	32
  2426  00FB7F  20                 	db	32
  2427  00FB80  20                 	db	32
  2428  00FB81  20                 	db	32
  2429  00FB82  53                 	db	83	;'S'
  2430  00FB83  65                 	db	101	;'e'
  2431  00FB84  73                 	db	115	;'s'
  2432  00FB85  73                 	db	115	;'s'
  2433  00FB86  69                 	db	105	;'i'
  2434  00FB87  6F                 	db	111	;'o'
  2435  00FB88  6E                 	db	110	;'n'
  2436  00FB89  20                 	db	32
  2437  00FB8A  6C                 	db	108	;'l'
  2438  00FB8B  6F                 	db	111	;'o'
  2439  00FB8C  67                 	db	103	;'g'
  2440  00FB8D  67                 	db	103	;'g'
  2441  00FB8E  69                 	db	105	;'i'
  2442  00FB8F  6E                 	db	110	;'n'
  2443  00FB90  67                 	db	103	;'g'
  2444  00FB91  3A                 	db	58	;':'
  2445  00FB92  20                 	db	32
  2446  00FB93  41                 	db	65	;'A'
  2447  00FB94  6C                 	db	108	;'l'
  2448  00FB95  6C                 	db	108	;'l'
  2449  00FB96  20                 	db	32
  2450  00FB97  73                 	db	115	;'s'
  2451  00FB98  65                 	db	101	;'e'
  2452  00FB99  73                 	db	115	;'s'
  2453  00FB9A  73                 	db	115	;'s'
  2454  00FB9B  69                 	db	105	;'i'
  2455  00FB9C  6F                 	db	111	;'o'
  2456  00FB9D  6E                 	db	110	;'n'
  2457  00FB9E  20                 	db	32
  2458  00FB9F  6F                 	db	111	;'o'
  2459  00FBA0  75                 	db	117	;'u'
  2460  00FBA1  74                 	db	116	;'t'
  2461  00FBA2  70                 	db	112	;'p'
  2462  00FBA3  75                 	db	117	;'u'
  2463  00FBA4  74                 	db	116	;'t'
  2464  00FBA5  0D                 	db	13
  2465  00FBA6  0A                 	db	10
  2466  00FBA7  00                 	db	0
  2467  00FBA8                     STR_27:
  2468  00FBA8  2B                 	db	43
  2469  00FBA9  2F                 	db	47
  2470  00FBAA  2D                 	db	45
  2471  00FBAB  20                 	db	32
  2472  00FBAC  49                 	db	73	;'I'
  2473  00FBAD  6E                 	db	110	;'n'
  2474  00FBAE  63                 	db	99	;'c'
  2475  00FBAF  72                 	db	114	;'r'
  2476  00FBB0  65                 	db	101	;'e'
  2477  00FBB1  61                 	db	97	;'a'
  2478  00FBB2  73                 	db	115	;'s'
  2479  00FBB3  65                 	db	101	;'e'
  2480  00FBB4  2F                 	db	47
  2481  00FBB5  44                 	db	68	;'D'
  2482  00FBB6  65                 	db	101	;'e'
  2483  00FBB7  63                 	db	99	;'c'
  2484  00FBB8  72                 	db	114	;'r'
  2485  00FBB9  65                 	db	101	;'e'
  2486  00FBBA  61                 	db	97	;'a'
  2487  00FBBB  73                 	db	115	;'s'
  2488  00FBBC  65                 	db	101	;'e'
  2489  00FBBD  20                 	db	32
  2490  00FBBE  74                 	db	116	;'t'
  2491  00FBBF  68                 	db	104	;'h'
  2492  00FBC0  65                 	db	101	;'e'
  2493  00FBC1  20                 	db	32
  2494  00FBC2  73                 	db	115	;'s'
  2495  00FBC3  61                 	db	97	;'a'
  2496  00FBC4  6D                 	db	109	;'m'
  2497  00FBC5  70                 	db	112	;'p'
  2498  00FBC6  6C                 	db	108	;'l'
  2499  00FBC7  65                 	db	101	;'e'
  2500  00FBC8  20                 	db	32
  2501  00FBC9  72                 	db	114	;'r'
  2502  00FBCA  61                 	db	97	;'a'
  2503  00FBCB  74                 	db	116	;'t'
  2504  00FBCC  65                 	db	101	;'e'
  2505  00FBCD  20                 	db	32
  2506  00FBCE  62                 	db	98	;'b'
  2507  00FBCF  79                 	db	121	;'y'
  2508  00FBD0  20                 	db	32
  2509  00FBD1  31                 	db	49	;'1'
  2510  00FBD2  30                 	db	48	;'0'
  2511  00FBD3  20                 	db	32
  2512  00FBD4  75                 	db	117	;'u'
  2513  00FBD5  73                 	db	115	;'s'
  2514  00FBD6  0D                 	db	13
  2515  00FBD7  0A                 	db	10
  2516  00FBD8  00                 	db	0
  2517  00FBD9                     STR_62:
  2518  00FBD9  54                 	db	84	;'T'
  2519  00FBDA  6F                 	db	111	;'o'
  2520  00FBDB  20                 	db	32
  2521  00FBDC  63                 	db	99	;'c'
  2522  00FBDD  6C                 	db	108	;'l'
  2523  00FBDE  6F                 	db	111	;'o'
  2524  00FBDF  73                 	db	115	;'s'
  2525  00FBE0  65                 	db	101	;'e'
  2526  00FBE1  20                 	db	32
  2527  00FBE2  74                 	db	116	;'t'
  2528  00FBE3  68                 	db	104	;'h'
  2529  00FBE4  65                 	db	101	;'e'
  2530  00FBE5  20                 	db	32
  2531  00FBE6  66                 	db	102	;'f'
  2532  00FBE7  69                 	db	105	;'i'
  2533  00FBE8  6C                 	db	108	;'l'
  2534  00FBE9  65                 	db	101	;'e'
  2535  00FBEA  20                 	db	32
  2536  00FBEB  66                 	db	102	;'f'
  2537  00FBEC  6F                 	db	111	;'o'
  2538  00FBED  6C                 	db	108	;'l'
  2539  00FBEE  6C                 	db	108	;'l'
  2540  00FBEF  6F                 	db	111	;'o'
  2541  00FBF0  77                 	db	119	;'w'
  2542  00FBF1  20                 	db	32
  2543  00FBF2  74                 	db	116	;'t'
  2544  00FBF3  68                 	db	104	;'h'
  2545  00FBF4  65                 	db	101	;'e'
  2546  00FBF5  73                 	db	115	;'s'
  2547  00FBF6  65                 	db	101	;'e'
  2548  00FBF7  20                 	db	32
  2549  00FBF8  69                 	db	105	;'i'
  2550  00FBF9  6E                 	db	110	;'n'
  2551  00FBFA  73                 	db	115	;'s'
  2552  00FBFB  74                 	db	116	;'t'
  2553  00FBFC  72                 	db	114	;'r'
  2554  00FBFD  75                 	db	117	;'u'
  2555  00FBFE  63                 	db	99	;'c'
  2556  00FBFF  74                 	db	116	;'t'
  2557  00FC00  69                 	db	105	;'i'
  2558  00FC01  6F                 	db	111	;'o'
  2559  00FC02  6E                 	db	110	;'n'
  2560  00FC03  73                 	db	115	;'s'
  2561  00FC04  3A                 	db	58	;':'
  2562  00FC05  20                 	db	32
  2563  00FC06  0D                 	db	13
  2564  00FC07  0A                 	db	10
  2565  00FC08  00                 	db	0
  2566  00FC09                     STR_28:
  2567  00FC09  57                 	db	87	;'W'
  2568  00FC0A  3A                 	db	58	;':'
  2569  00FC0B  20                 	db	32
  2570  00FC0C  57                 	db	87	;'W'
  2571  00FC0D  72                 	db	114	;'r'
  2572  00FC0E  69                 	db	105	;'i'
  2573  00FC0F  74                 	db	116	;'t'
  2574  00FC10  65                 	db	101	;'e'
  2575  00FC11  20                 	db	32
  2576  00FC12  6D                 	db	109	;'m'
  2577  00FC13  69                 	db	105	;'i'
  2578  00FC14  63                 	db	99	;'c'
  2579  00FC15  72                 	db	114	;'r'
  2580  00FC16  6F                 	db	111	;'o'
  2581  00FC17  70                 	db	112	;'p'
  2582  00FC18  68                 	db	104	;'h'
  2583  00FC19  6F                 	db	111	;'o'
  2584  00FC1A  6E                 	db	110	;'n'
  2585  00FC1B  65                 	db	101	;'e'
  2586  00FC1C  20                 	db	32
  2587  00FC1D  3D                 	db	61	;'='
  2588  00FC1E  3E                 	db	62	;'>'
  2589  00FC1F  20                 	db	32
  2590  00FC20  53                 	db	83	;'S'
  2591  00FC21  44                 	db	68	;'D'
  2592  00FC22  20                 	db	32
  2593  00FC23  63                 	db	99	;'c'
  2594  00FC24  61                 	db	97	;'a'
  2595  00FC25  72                 	db	114	;'r'
  2596  00FC26  64                 	db	100	;'d'
  2597  00FC27  20                 	db	32
  2598  00FC28  61                 	db	97	;'a'
  2599  00FC29  74                 	db	116	;'t'
  2600  00FC2A  20                 	db	32
  2601  00FC2B  31                 	db	49	;'1'
  2602  00FC2C  36                 	db	54	;'6'
  2603  00FC2D  30                 	db	48	;'0'
  2604  00FC2E  30                 	db	48	;'0'
  2605  00FC2F  20                 	db	32
  2606  00FC30  75                 	db	117	;'u'
  2607  00FC31  73                 	db	115	;'s'
  2608  00FC32  0D                 	db	13
  2609  00FC33  0A                 	db	10
  2610  00FC34  00                 	db	0
  2611  00FC35                     STR_24:
  2612  00FC35  72                 	db	114	;'r'
  2613  00FC36  3A                 	db	58	;':'
  2614  00FC37  20                 	db	32
  2615  00FC38  72                 	db	114	;'r'
  2616  00FC39  65                 	db	101	;'e'
  2617  00FC3A  61                 	db	97	;'a'
  2618  00FC3B  64                 	db	100	;'d'
  2619  00FC3C  20                 	db	32
  2620  00FC3D  61                 	db	97	;'a'
  2621  00FC3E  20                 	db	32
  2622  00FC3F  62                 	db	98	;'b'
  2623  00FC40  6C                 	db	108	;'l'
  2624  00FC41  6F                 	db	111	;'o'
  2625  00FC42  63                 	db	99	;'c'
  2626  00FC43  6B                 	db	107	;'k'
  2627  00FC44  20                 	db	32
  2628  00FC45  6F                 	db	111	;'o'
  2629  00FC46  66                 	db	102	;'f'
  2630  00FC47  20                 	db	32
  2631  00FC48  25                 	db	37
  2632  00FC49  64                 	db	100	;'d'
  2633  00FC4A  20                 	db	32
  2634  00FC4B  62                 	db	98	;'b'
  2635  00FC4C  79                 	db	121	;'y'
  2636  00FC4D  74                 	db	116	;'t'
  2637  00FC4E  65                 	db	101	;'e'
  2638  00FC4F  73                 	db	115	;'s'
  2639  00FC50  20                 	db	32
  2640  00FC51  66                 	db	102	;'f'
  2641  00FC52  72                 	db	114	;'r'
  2642  00FC53  6F                 	db	111	;'o'
  2643  00FC54  6D                 	db	109	;'m'
  2644  00FC55  20                 	db	32
  2645  00FC56  53                 	db	83	;'S'
  2646  00FC57  44                 	db	68	;'D'
  2647  00FC58  20                 	db	32
  2648  00FC59  63                 	db	99	;'c'
  2649  00FC5A  61                 	db	97	;'a'
  2650  00FC5B  72                 	db	114	;'r'
  2651  00FC5C  64                 	db	100	;'d'
  2652  00FC5D  0D                 	db	13
  2653  00FC5E  0A                 	db	10
  2654  00FC5F  00                 	db	0
  2655  00FC60                     STR_4:
  2656  00FC60  4E                 	db	78	;'N'
  2657  00FC61  6F                 	db	111	;'o'
  2658  00FC62  20                 	db	32
  2659  00FC63  63                 	db	99	;'c'
  2660  00FC64  6F                 	db	111	;'o'
  2661  00FC65  6E                 	db	110	;'n'
  2662  00FC66  66                 	db	102	;'f'
  2663  00FC67  69                 	db	105	;'i'
  2664  00FC68  67                 	db	103	;'g'
  2665  00FC69  75                 	db	117	;'u'
  2666  00FC6A  72                 	db	114	;'r'
  2667  00FC6B  61                 	db	97	;'a'
  2668  00FC6C  74                 	db	116	;'t'
  2669  00FC6D  69                 	db	105	;'i'
  2670  00FC6E  6F                 	db	111	;'o'
  2671  00FC6F  6E                 	db	110	;'n'
  2672  00FC70  20                 	db	32
  2673  00FC71  6F                 	db	111	;'o'
  2674  00FC72  66                 	db	102	;'f'
  2675  00FC73  20                 	db	32
  2676  00FC74  64                 	db	100	;'d'
  2677  00FC75  65                 	db	101	;'e'
  2678  00FC76  76                 	db	118	;'v'
  2679  00FC77  65                 	db	101	;'e'
  2680  00FC78  6C                 	db	108	;'l'
  2681  00FC79  6F                 	db	111	;'o'
  2682  00FC7A  70                 	db	112	;'p'
  2683  00FC7B  6D                 	db	109	;'m'
  2684  00FC7C  65                 	db	101	;'e'
  2685  00FC7D  6E                 	db	110	;'n'
  2686  00FC7E  74                 	db	116	;'t'
  2687  00FC7F  20                 	db	32
  2688  00FC80  62                 	db	98	;'b'
  2689  00FC81  6F                 	db	111	;'o'
  2690  00FC82  61                 	db	97	;'a'
  2691  00FC83  72                 	db	114	;'r'
  2692  00FC84  64                 	db	100	;'d'
  2693  00FC85  0D                 	db	13
  2694  00FC86  0A                 	db	10
  2695  00FC87  00                 	db	0
  2696  00FC88                     STR_66:
  2697  00FC88  53                 	db	83	;'S'
  2698  00FC89  65                 	db	101	;'e'
  2699  00FC8A  6C                 	db	108	;'l'
  2700  00FC8B  65                 	db	101	;'e'
  2701  00FC8C  63                 	db	99	;'c'
  2702  00FC8D  74                 	db	116	;'t'
  2703  00FC8E  3A                 	db	58	;':'
  2704  00FC8F  20                 	db	32
  2705  00FC90  20                 	db	32
  2706  00FC91  20                 	db	32
  2707  00FC92  20                 	db	32
  2708  00FC93  20                 	db	32
  2709  00FC94  53                 	db	83	;'S'
  2710  00FC95  65                 	db	101	;'e'
  2711  00FC96  73                 	db	115	;'s'
  2712  00FC97  73                 	db	115	;'s'
  2713  00FC98  69                 	db	105	;'i'
  2714  00FC99  6F                 	db	111	;'o'
  2715  00FC9A  6E                 	db	110	;'n'
  2716  00FC9B  20                 	db	32
  2717  00FC9C  20                 	db	32
  2718  00FC9D  6C                 	db	108	;'l'
  2719  00FC9E  6F                 	db	111	;'o'
  2720  00FC9F  67                 	db	103	;'g'
  2721  00FCA0  67                 	db	103	;'g'
  2722  00FCA1  69                 	db	105	;'i'
  2723  00FCA2  6E                 	db	110	;'n'
  2724  00FCA3  67                 	db	103	;'g'
  2725  00FCA4  3A                 	db	58	;':'
  2726  00FCA5  20                 	db	32
  2727  00FCA6  4E                 	db	78	;'N'
  2728  00FCA7  6F                 	db	111	;'o'
  2729  00FCA8  6E                 	db	110	;'n'
  2730  00FCA9  65                 	db	101	;'e'
  2731  00FCAA  0D                 	db	13
  2732  00FCAB  0A                 	db	10
  2733  00FCAC  00                 	db	0
  2734  00FCAD                     STR_23:
  2735  00FCAD  61                 	db	97	;'a'
  2736  00FCAE  2F                 	db	47
  2737  00FCAF  41                 	db	65	;'A'
  2738  00FCB0  20                 	db	32
  2739  00FCB1  64                 	db	100	;'d'
  2740  00FCB2  65                 	db	101	;'e'
  2741  00FCB3  63                 	db	99	;'c'
  2742  00FCB4  72                 	db	114	;'r'
  2743  00FCB5  65                 	db	101	;'e'
  2744  00FCB6  61                 	db	97	;'a'
  2745  00FCB7  73                 	db	115	;'s'
  2746  00FCB8  65                 	db	101	;'e'
  2747  00FCB9  2F                 	db	47
  2748  00FCBA  69                 	db	105	;'i'
  2749  00FCBB  6E                 	db	110	;'n'
  2750  00FCBC  63                 	db	99	;'c'
  2751  00FCBD  72                 	db	114	;'r'
  2752  00FCBE  65                 	db	101	;'e'
  2753  00FCBF  61                 	db	97	;'a'
  2754  00FCC0  73                 	db	115	;'s'
  2755  00FCC1  65                 	db	101	;'e'
  2756  00FCC2  20                 	db	32
  2757  00FCC3  72                 	db	114	;'r'
  2758  00FCC4  65                 	db	101	;'e'
  2759  00FCC5  61                 	db	97	;'a'
  2760  00FCC6  64                 	db	100	;'d'
  2761  00FCC7  20                 	db	32
  2762  00FCC8  61                 	db	97	;'a'
  2763  00FCC9  64                 	db	100	;'d'
  2764  00FCCA  64                 	db	100	;'d'
  2765  00FCCB  72                 	db	114	;'r'
  2766  00FCCC  65                 	db	101	;'e'
  2767  00FCCD  73                 	db	115	;'s'
  2768  00FCCE  73                 	db	115	;'s'
  2769  00FCCF  0D                 	db	13
  2770  00FCD0  0A                 	db	10
  2771  00FCD1  00                 	db	0
  2772  00FCD2                     STR_61:
  2773  00FCD2  53                 	db	83	;'S'
  2774  00FCD3  70                 	db	112	;'p'
  2775  00FCD4  6F                 	db	111	;'o'
  2776  00FCD5  6F                 	db	111	;'o'
  2777  00FCD6  6C                 	db	108	;'l'
  2778  00FCD7  65                 	db	101	;'e'
  2779  00FCD8  64                 	db	100	;'d'
  2780  00FCD9  20                 	db	32
  2781  00FCDA  25                 	db	37
  2782  00FCDB  75                 	db	117	;'u'
  2783  00FCDC  20                 	db	32
  2784  00FCDD  6F                 	db	111	;'o'
  2785  00FCDE  75                 	db	117	;'u'
  2786  00FCDF  74                 	db	116	;'t'
  2787  00FCE0  20                 	db	32
  2788  00FCE1  6F                 	db	111	;'o'
  2789  00FCE2  66                 	db	102	;'f'
  2790  00FCE3  20                 	db	32
  2791  00FCE4  74                 	db	116	;'t'
  2792  00FCE5  68                 	db	104	;'h'
  2793  00FCE6  65                 	db	101	;'e'
  2794  00FCE7  20                 	db	32
  2795  00FCE8  25                 	db	37
  2796  00FCE9  75                 	db	117	;'u'
  2797  00FCEA  20                 	db	32
  2798  00FCEB  62                 	db	98	;'b'
  2799  00FCEC  6C                 	db	108	;'l'
  2800  00FCED  6F                 	db	111	;'o'
  2801  00FCEE  63                 	db	99	;'c'
  2802  00FCEF  6B                 	db	107	;'k'
  2803  00FCF0  73                 	db	115	;'s'
  2804  00FCF1  2E                 	db	46
  2805  00FCF2  0D                 	db	13
  2806  00FCF3  0A                 	db	10
  2807  00FCF4  00                 	db	0
  2808  00FCF5                     STR_54:
  2809  00FCF5  53                 	db	83	;'S'
  2810  00FCF6  65                 	db	101	;'e'
  2811  00FCF7  6C                 	db	108	;'l'
  2812  00FCF8  65                 	db	101	;'e'
  2813  00FCF9  63                 	db	99	;'c'
  2814  00FCFA  74                 	db	116	;'t'
  2815  00FCFB  3A                 	db	58	;':'
  2816  00FCFC  20                 	db	32
  2817  00FCFD  20                 	db	32
  2818  00FCFE  20                 	db	32
  2819  00FCFF  20                 	db	32
  2820  00FD00  20                 	db	32
  2821  00FD01  43                 	db	67	;'C'
  2822  00FD02  68                 	db	104	;'h'
  2823  00FD03  61                 	db	97	;'a'
  2824  00FD04  6E                 	db	110	;'n'
  2825  00FD05  67                 	db	103	;'g'
  2826  00FD06  65                 	db	101	;'e'
  2827  00FD07  20                 	db	32
  2828  00FD08  73                 	db	115	;'s'
  2829  00FD09  65                 	db	101	;'e'
  2830  00FD0A  74                 	db	116	;'t'
  2831  00FD0B  74                 	db	116	;'t'
  2832  00FD0C  69                 	db	105	;'i'
  2833  00FD0D  6E                 	db	110	;'n'
  2834  00FD0E  67                 	db	103	;'g'
  2835  00FD0F  73                 	db	115	;'s'
  2836  00FD10  2E                 	db	46
  2837  00FD11  2E                 	db	46
  2838  00FD12  2E                 	db	46
  2839  00FD13  0D                 	db	13
  2840  00FD14  0A                 	db	10
  2841  00FD15  00                 	db	0
  2842  00FD16                     STR_29:
  2843  00FD16  73                 	db	115	;'s'
  2844  00FD17  3A                 	db	58	;':'
  2845  00FD18  20                 	db	32
  2846  00FD19  73                 	db	115	;'s'
  2847  00FD1A  70                 	db	112	;'p'
  2848  00FD1B  6F                 	db	111	;'o'
  2849  00FD1C  6F                 	db	111	;'o'
  2850  00FD1D  6C                 	db	108	;'l'
  2851  00FD1E  20                 	db	32
  2852  00FD1F  6D                 	db	109	;'m'
  2853  00FD20  65                 	db	101	;'e'
  2854  00FD21  6D                 	db	109	;'m'
  2855  00FD22  6F                 	db	111	;'o'
  2856  00FD23  72                 	db	114	;'r'
  2857  00FD24  79                 	db	121	;'y'
  2858  00FD25  20                 	db	32
  2859  00FD26  74                 	db	116	;'t'
  2860  00FD27  6F                 	db	111	;'o'
  2861  00FD28  20                 	db	32
  2862  00FD29  61                 	db	97	;'a'
  2863  00FD2A  20                 	db	32
  2864  00FD2B  63                 	db	99	;'c'
  2865  00FD2C  73                 	db	115	;'s'
  2866  00FD2D  76                 	db	118	;'v'
  2867  00FD2E  20                 	db	32
  2868  00FD2F  66                 	db	102	;'f'
  2869  00FD30  69                 	db	105	;'i'
  2870  00FD31  6C                 	db	108	;'l'
  2871  00FD32  65                 	db	101	;'e'
  2872  00FD33  0D                 	db	13
  2873  00FD34  0A                 	db	10
  2874  00FD35  00                 	db	0
  2875  00FD36                     STR_35:
  2876  00FD36  57                 	db	87	;'W'
  2877  00FD37  72                 	db	114	;'r'
  2878  00FD38  69                 	db	105	;'i'
  2879  00FD39  74                 	db	116	;'t'
  2880  00FD3A  65                 	db	101	;'e'
  2881  00FD3B  20                 	db	32
  2882  00FD3C  62                 	db	98	;'b'
  2883  00FD3D  6C                 	db	108	;'l'
  2884  00FD3E  6F                 	db	111	;'o'
  2885  00FD3F  63                 	db	99	;'c'
  2886  00FD40  6B                 	db	107	;'k'
  2887  00FD41  20                 	db	32
  2888  00FD42  73                 	db	115	;'s'
  2889  00FD43  69                 	db	105	;'i'
  2890  00FD44  6E                 	db	110	;'n'
  2891  00FD45  20                 	db	32
  2892  00FD46  77                 	db	119	;'w'
  2893  00FD47  61                 	db	97	;'a'
  2894  00FD48  76                 	db	118	;'v'
  2895  00FD49  65                 	db	101	;'e'
  2896  00FD4A  20                 	db	32
  2897  00FD4B  76                 	db	118	;'v'
  2898  00FD4C  61                 	db	97	;'a'
  2899  00FD4D  6C                 	db	108	;'l'
  2900  00FD4E  75                 	db	117	;'u'
  2901  00FD4F  65                 	db	101	;'e'
  2902  00FD50  73                 	db	115	;'s'
  2903  00FD51  3A                 	db	58	;':'
  2904  00FD52  0D                 	db	13
  2905  00FD53  0A                 	db	10
  2906  00FD54  00                 	db	0
  2907  00FD55                     STR_46:
  2908  00FD55  53                 	db	83	;'S'
  2909  00FD56  74                 	db	116	;'t'
  2910  00FD57  61                 	db	97	;'a'
  2911  00FD58  74                 	db	116	;'t'
  2912  00FD59  75                 	db	117	;'u'
  2913  00FD5A  73                 	db	115	;'s'
  2914  00FD5B  20                 	db	32
  2915  00FD5C  63                 	db	99	;'c'
  2916  00FD5D  6F                 	db	111	;'o'
  2917  00FD5E  64                 	db	100	;'d'
  2918  00FD5F  65                 	db	101	;'e'
  2919  00FD60  3A                 	db	58	;':'
  2920  00FD61  20                 	db	32
  2921  00FD62  25                 	db	37
  2922  00FD63  64                 	db	100	;'d'
  2923  00FD64  20                 	db	32
  2924  00FD65  2D                 	db	45
  2925  00FD66  2D                 	db	45
  2926  00FD67  2D                 	db	45
  2927  00FD68  2D                 	db	45
  2928  00FD69  20                 	db	32
  2929  00FD6A  41                 	db	65	;'A'
  2930  00FD6B  64                 	db	100	;'d'
  2931  00FD6C  64                 	db	100	;'d'
  2932  00FD6D  72                 	db	114	;'r'
  2933  00FD6E  65                 	db	101	;'e'
  2934  00FD6F  73                 	db	115	;'s'
  2935  00FD70  73                 	db	115	;'s'
  2936  00FD71  3A                 	db	58	;':'
  2937  00FD72  20                 	db	32
  2938  00FD73  00                 	db	0
  2939  00FD74                     STR_36:
  2940  00FD74  41                 	db	65	;'A'
  2941  00FD75  6D                 	db	109	;'m'
  2942  00FD76  6F                 	db	111	;'o'
  2943  00FD77  75                 	db	117	;'u'
  2944  00FD78  6E                 	db	110	;'n'
  2945  00FD79  74                 	db	116	;'t'
  2946  00FD7A  20                 	db	32
  2947  00FD7B  6F                 	db	111	;'o'
  2948  00FD7C  66                 	db	102	;'f'
  2949  00FD7D  20                 	db	32
  2950  00FD7E  62                 	db	98	;'b'
  2951  00FD7F  6C                 	db	108	;'l'
  2952  00FD80  6F                 	db	111	;'o'
  2953  00FD81  63                 	db	99	;'c'
  2954  00FD82  6B                 	db	107	;'k'
  2955  00FD83  73                 	db	115	;'s'
  2956  00FD84  20                 	db	32
  2957  00FD85  73                 	db	115	;'s'
  2958  00FD86  74                 	db	116	;'t'
  2959  00FD87  6F                 	db	111	;'o'
  2960  00FD88  72                 	db	114	;'r'
  2961  00FD89  65                 	db	101	;'e'
  2962  00FD8A  64                 	db	100	;'d'
  2963  00FD8B  3A                 	db	58	;':'
  2964  00FD8C  20                 	db	32
  2965  00FD8D  25                 	db	37
  2966  00FD8E  64                 	db	100	;'d'
  2967  00FD8F  0D                 	db	13
  2968  00FD90  0A                 	db	10
  2969  00FD91  00                 	db	0
  2970  00FD92                     STR_68:
  2971  00FD92  55                 	db	85	;'U'
  2972  00FD93  6E                 	db	110	;'n'
  2973  00FD94  64                 	db	100	;'d'
  2974  00FD95  65                 	db	101	;'e'
  2975  00FD96  72                 	db	114	;'r'
  2976  00FD97  66                 	db	102	;'f'
  2977  00FD98  6C                 	db	108	;'l'
  2978  00FD99  6F                 	db	111	;'o'
  2979  00FD9A  77                 	db	119	;'w'
  2980  00FD9B  65                 	db	101	;'e'
  2981  00FD9C  64                 	db	100	;'d'
  2982  00FD9D  20                 	db	32
  2983  00FD9E  74                 	db	116	;'t'
  2984  00FD9F  6F                 	db	111	;'o'
  2985  00FDA0  20                 	db	32
  2986  00FDA1  68                 	db	104	;'h'
  2987  00FDA2  69                 	db	105	;'i'
  2988  00FDA3  67                 	db	103	;'g'
  2989  00FDA4  68                 	db	104	;'h'
  2990  00FDA5  20                 	db	32
  2991  00FDA6  61                 	db	97	;'a'
  2992  00FDA7  64                 	db	100	;'d'
  2993  00FDA8  64                 	db	100	;'d'
  2994  00FDA9  72                 	db	114	;'r'
  2995  00FDAA  65                 	db	101	;'e'
  2996  00FDAB  73                 	db	115	;'s'
  2997  00FDAC  73                 	db	115	;'s'
  2998  00FDAD  0D                 	db	13
  2999  00FDAE  0A                 	db	10
  3000  00FDAF  00                 	db	0
  3001  00FDB0                     STR_8:
  3002  00FDB0  09                 	db	9
  3003  00FDB1  50                 	db	80	;'P'
  3004  00FDB2  6C                 	db	108	;'l'
  3005  00FDB3  61                 	db	97	;'a'
  3006  00FDB4  79                 	db	121	;'y'
  3007  00FDB5  20                 	db	32
  3008  00FDB6  6C                 	db	108	;'l'
  3009  00FDB7  65                 	db	101	;'e'
  3010  00FDB8  6E                 	db	110	;'n'
  3011  00FDB9  67                 	db	103	;'g'
  3012  00FDBA  74                 	db	116	;'t'
  3013  00FDBB  68                 	db	104	;'h'
  3014  00FDBC  20                 	db	32
  3015  00FDBD  69                 	db	105	;'i'
  3016  00FDBE  6E                 	db	110	;'n'
  3017  00FDBF  20                 	db	32
  3018  00FDC0  62                 	db	98	;'b'
  3019  00FDC1  6C                 	db	108	;'l'
  3020  00FDC2  6F                 	db	111	;'o'
  3021  00FDC3  63                 	db	99	;'c'
  3022  00FDC4  6B                 	db	107	;'k'
  3023  00FDC5  73                 	db	115	;'s'
  3024  00FDC6  3A                 	db	58	;':'
  3025  00FDC7  20                 	db	32
  3026  00FDC8  25                 	db	37
  3027  00FDC9  64                 	db	100	;'d'
  3028  00FDCA  0D                 	db	13
  3029  00FDCB  0A                 	db	10
  3030  00FDCC  00                 	db	0
  3031  00FDCD                     STR_121:
  3032  00FDCD  42                 	db	66	;'B'
  3033  00FDCE  6C                 	db	108	;'l'
  3034  00FDCF  6F                 	db	111	;'o'
  3035  00FDD0  63                 	db	99	;'c'
  3036  00FDD1  6B                 	db	107	;'k'
  3037  00FDD2  20                 	db	32
  3038  00FDD3  4C                 	db	76	;'L'
  3039  00FDD4  65                 	db	101	;'e'
  3040  00FDD5  6E                 	db	110	;'n'
  3041  00FDD6  67                 	db	103	;'g'
  3042  00FDD7  74                 	db	116	;'t'
  3043  00FDD8  68                 	db	104	;'h'
  3044  00FDD9  20                 	db	32
  3045  00FDDA  52                 	db	82	;'R'
  3046  00FDDB  65                 	db	101	;'e'
  3047  00FDDC  73                 	db	115	;'s'
  3048  00FDDD  70                 	db	112	;'p'
  3049  00FDDE  6F                 	db	111	;'o'
  3050  00FDDF  6E                 	db	110	;'n'
  3051  00FDE0  73                 	db	115	;'s'
  3052  00FDE1  65                 	db	101	;'e'
  3053  00FDE2  3A                 	db	58	;':'
  3054  00FDE3  20                 	db	32
  3055  00FDE4  25                 	db	37
  3056  00FDE5  78                 	db	120	;'x'
  3057  00FDE6  0D                 	db	13
  3058  00FDE7  0A                 	db	10
  3059  00FDE8  00                 	db	0
  3060  00FDE9                     STR_70:
  3061  00FDE9  4F                 	db	79	;'O'
  3062  00FDEA  76                 	db	118	;'v'
  3063  00FDEB  65                 	db	101	;'e'
  3064  00FDEC  72                 	db	114	;'r'
  3065  00FDED  66                 	db	102	;'f'
  3066  00FDEE  6C                 	db	108	;'l'
  3067  00FDEF  6F                 	db	111	;'o'
  3068  00FDF0  77                 	db	119	;'w'
  3069  00FDF1  65                 	db	101	;'e'
  3070  00FDF2  64                 	db	100	;'d'
  3071  00FDF3  20                 	db	32
  3072  00FDF4  74                 	db	116	;'t'
  3073  00FDF5  6F                 	db	111	;'o'
  3074  00FDF6  20                 	db	32
  3075  00FDF7  6C                 	db	108	;'l'
  3076  00FDF8  6F                 	db	111	;'o'
  3077  00FDF9  77                 	db	119	;'w'
  3078  00FDFA  20                 	db	32
  3079  00FDFB  61                 	db	97	;'a'
  3080  00FDFC  64                 	db	100	;'d'
  3081  00FDFD  64                 	db	100	;'d'
  3082  00FDFE  72                 	db	114	;'r'
  3083  00FDFF  65                 	db	101	;'e'
  3084  00FE00  73                 	db	115	;'s'
  3085  00FE01  73                 	db	115	;'s'
  3086  00FE02  0D                 	db	13
  3087  00FE03  0A                 	db	10
  3088  00FE04  00                 	db	0
  3089  00FE05                     STR_119:
  3090  00FE05  43                 	db	67	;'C'
  3091  00FE06  4D                 	db	77	;'M'
  3092  00FE07  44                 	db	68	;'D'
  3093  00FE08  30                 	db	48	;'0'
  3094  00FE09  2C                 	db	44
  3095  00FE0A  20                 	db	32
  3096  00FE0B  52                 	db	82	;'R'
  3097  00FE0C  65                 	db	101	;'e'
  3098  00FE0D  73                 	db	115	;'s'
  3099  00FE0E  65                 	db	101	;'e'
  3100  00FE0F  74                 	db	116	;'t'
  3101  00FE10  20                 	db	32
  3102  00FE11  52                 	db	82	;'R'
  3103  00FE12  65                 	db	101	;'e'
  3104  00FE13  73                 	db	115	;'s'
  3105  00FE14  70                 	db	112	;'p'
  3106  00FE15  6F                 	db	111	;'o'
  3107  00FE16  6E                 	db	110	;'n'
  3108  00FE17  73                 	db	115	;'s'
  3109  00FE18  65                 	db	101	;'e'
  3110  00FE19  3A                 	db	58	;':'
  3111  00FE1A  20                 	db	32
  3112  00FE1B  25                 	db	37
  3113  00FE1C  78                 	db	120	;'x'
  3114  00FE1D  0D                 	db	13
  3115  00FE1E  0A                 	db	10
  3116  00FE1F  00                 	db	0
  3117  00FE20                     STR_45:
  3118  00FE20  4C                 	db	76	;'L'
  3119  00FE21  69                 	db	105	;'i'
  3120  00FE22  73                 	db	115	;'s'
  3121  00FE23  74                 	db	116	;'t'
  3122  00FE24  69                 	db	105	;'i'
  3123  00FE25  6E                 	db	110	;'n'
  3124  00FE26  67                 	db	103	;'g'
  3125  00FE27  20                 	db	32
  3126  00FE28  77                 	db	119	;'w'
  3127  00FE29  72                 	db	114	;'r'
  3128  00FE2A  69                 	db	105	;'i'
  3129  00FE2B  74                 	db	116	;'t'
  3130  00FE2C  65                 	db	101	;'e'
  3131  00FE2D  20                 	db	32
  3132  00FE2E  66                 	db	102	;'f'
  3133  00FE2F  61                 	db	97	;'a'
  3134  00FE30  69                 	db	105	;'i'
  3135  00FE31  6C                 	db	108	;'l'
  3136  00FE32  75                 	db	117	;'u'
  3137  00FE33  72                 	db	114	;'r'
  3138  00FE34  65                 	db	101	;'e'
  3139  00FE35  73                 	db	115	;'s'
  3140  00FE36  3A                 	db	58	;':'
  3141  00FE37  20                 	db	32
  3142  00FE38  0D                 	db	13
  3143  00FE39  0A                 	db	10
  3144  00FE3A  00                 	db	0
  3145  00FE3B                     STR_120:
  3146  00FE3B  43                 	db	67	;'C'
  3147  00FE3C  4D                 	db	77	;'M'
  3148  00FE3D  44                 	db	68	;'D'
  3149  00FE3E  31                 	db	49	;'1'
  3150  00FE3F  2C                 	db	44
  3151  00FE40  20                 	db	32
  3152  00FE41  49                 	db	73	;'I'
  3153  00FE42  6E                 	db	110	;'n'
  3154  00FE43  69                 	db	105	;'i'
  3155  00FE44  74                 	db	116	;'t'
  3156  00FE45  20                 	db	32
  3157  00FE46  52                 	db	82	;'R'
  3158  00FE47  65                 	db	101	;'e'
  3159  00FE48  73                 	db	115	;'s'
  3160  00FE49  70                 	db	112	;'p'
  3161  00FE4A  6F                 	db	111	;'o'
  3162  00FE4B  6E                 	db	110	;'n'
  3163  00FE4C  73                 	db	115	;'s'
  3164  00FE4D  65                 	db	101	;'e'
  3165  00FE4E  3A                 	db	58	;':'
  3166  00FE4F  20                 	db	32
  3167  00FE50  25                 	db	37
  3168  00FE51  78                 	db	120	;'x'
  3169  00FE52  0D                 	db	13
  3170  00FE53  0A                 	db	10
  3171  00FE54  00                 	db	0
  3172  00FE55                     STR_59:
  3173  00FE55  50                 	db	80	;'P'
  3174  00FE56  72                 	db	114	;'r'
  3175  00FE57  65                 	db	101	;'e'
  3176  00FE58  73                 	db	115	;'s'
  3177  00FE59  73                 	db	115	;'s'
  3178  00FE5A  20                 	db	32
  3179  00FE5B  61                 	db	97	;'a'
  3180  00FE5C  6E                 	db	110	;'n'
  3181  00FE5D  79                 	db	121	;'y'
  3182  00FE5E  20                 	db	32
  3183  00FE5F  6B                 	db	107	;'k'
  3184  00FE60  65                 	db	101	;'e'
  3185  00FE61  79                 	db	121	;'y'
  3186  00FE62  20                 	db	32
  3187  00FE63  74                 	db	116	;'t'
  3188  00FE64  6F                 	db	111	;'o'
  3189  00FE65  20                 	db	32
  3190  00FE66  73                 	db	115	;'s'
  3191  00FE67  74                 	db	116	;'t'
  3192  00FE68  61                 	db	97	;'a'
  3193  00FE69  72                 	db	114	;'r'
  3194  00FE6A  74                 	db	116	;'t'
  3195  00FE6B  0D                 	db	13
  3196  00FE6C  0A                 	db	10
  3197  00FE6D  00                 	db	0
  3198  00FE6E                     STR_21:
  3199  00FE6E  69                 	db	105	;'i'
  3200  00FE6F  3A                 	db	58	;':'
  3201  00FE70  20                 	db	32
  3202  00FE71  49                 	db	73	;'I'
  3203  00FE72  6E                 	db	110	;'n'
  3204  00FE73  69                 	db	105	;'i'
  3205  00FE74  74                 	db	116	;'t'
  3206  00FE75  69                 	db	105	;'i'
  3207  00FE76  61                 	db	97	;'a'
  3208  00FE77  6C                 	db	108	;'l'
  3209  00FE78  69                 	db	105	;'i'
  3210  00FE79  7A                 	db	122	;'z'
  3211  00FE7A  65                 	db	101	;'e'
  3212  00FE7B  20                 	db	32
  3213  00FE7C  53                 	db	83	;'S'
  3214  00FE7D  44                 	db	68	;'D'
  3215  00FE7E  20                 	db	32
  3216  00FE7F  63                 	db	99	;'c'
  3217  00FE80  61                 	db	97	;'a'
  3218  00FE81  72                 	db	114	;'r'
  3219  00FE82  64                 	db	100	;'d'
  3220  00FE83  0D                 	db	13
  3221  00FE84  0A                 	db	10
  3222  00FE85  00                 	db	0
  3223  00FE86                     STR_19:
  3224  00FE86  7A                 	db	122	;'z'
  3225  00FE87  3A                 	db	58	;':'
  3226  00FE88  20                 	db	32
  3227  00FE89  43                 	db	67	;'C'
  3228  00FE8A  6C                 	db	108	;'l'
  3229  00FE8B  65                 	db	101	;'e'
  3230  00FE8C  61                 	db	97	;'a'
  3231  00FE8D  72                 	db	114	;'r'
  3232  00FE8E  20                 	db	32
  3233  00FE8F  74                 	db	116	;'t'
  3234  00FE90  68                 	db	104	;'h'
  3235  00FE91  65                 	db	101	;'e'
  3236  00FE92  20                 	db	32
  3237  00FE93  74                 	db	116	;'t'
  3238  00FE94  65                 	db	101	;'e'
  3239  00FE95  72                 	db	114	;'r'
  3240  00FE96  6D                 	db	109	;'m'
  3241  00FE97  69                 	db	105	;'i'
  3242  00FE98  6E                 	db	110	;'n'
  3243  00FE99  61                 	db	97	;'a'
  3244  00FE9A  6C                 	db	108	;'l'
  3245  00FE9B  0D                 	db	13
  3246  00FE9C  0A                 	db	10
  3247  00FE9D  00                 	db	0
  3248  00FE9E                     STR_42:
  3249  00FE9E  20                 	db	32
  3250  00FE9F  20                 	db	32
  3251  00FEA0  20                 	db	32
  3252  00FEA1  20                 	db	32
  3253  00FEA2  53                 	db	83	;'S'
  3254  00FEA3  74                 	db	116	;'t'
  3255  00FEA4  61                 	db	97	;'a'
  3256  00FEA5  74                 	db	116	;'t'
  3257  00FEA6  75                 	db	117	;'u'
  3258  00FEA7  73                 	db	115	;'s'
  3259  00FEA8  3A                 	db	58	;':'
  3260  00FEA9  20                 	db	32
  3261  00FEAA  20                 	db	32
  3262  00FEAB  20                 	db	32
  3263  00FEAC  20                 	db	32
  3264  00FEAD  20                 	db	32
  3265  00FEAE  25                 	db	37
  3266  00FEAF  30                 	db	48	;'0'
  3267  00FEB0  32                 	db	50	;'2'
  3268  00FEB1  78                 	db	120	;'x'
  3269  00FEB2  0D                 	db	13
  3270  00FEB3  0A                 	db	10
  3271  00FEB4  00                 	db	0
  3272  00FEB5                     STR_55:
  3273  00FEB5  53                 	db	83	;'S'
  3274  00FEB6  65                 	db	101	;'e'
  3275  00FEB7  6C                 	db	108	;'l'
  3276  00FEB8  65                 	db	101	;'e'
  3277  00FEB9  63                 	db	99	;'c'
  3278  00FEBA  74                 	db	116	;'t'
  3279  00FEBB  3A                 	db	58	;':'
  3280  00FEBC  20                 	db	32
  3281  00FEBD  20                 	db	32
  3282  00FEBE  20                 	db	32
  3283  00FEBF  20                 	db	32
  3284  00FEC0  20                 	db	32
  3285  00FEC1  4C                 	db	76	;'L'
  3286  00FEC2  6F                 	db	111	;'o'
  3287  00FEC3  67                 	db	103	;'g'
  3288  00FEC4  67                 	db	103	;'g'
  3289  00FEC5  69                 	db	105	;'i'
  3290  00FEC6  6E                 	db	110	;'n'
  3291  00FEC7  67                 	db	103	;'g'
  3292  00FEC8  0D                 	db	13
  3293  00FEC9  0A                 	db	10
  3294  00FECA  00                 	db	0
  3295  00FECB                     STR_67:
  3296  00FECB  53                 	db	83	;'S'
  3297  00FECC  65                 	db	101	;'e'
  3298  00FECD  6C                 	db	108	;'l'
  3299  00FECE  65                 	db	101	;'e'
  3300  00FECF  63                 	db	99	;'c'
  3301  00FED0  74                 	db	116	;'t'
  3302  00FED1  3A                 	db	58	;':'
  3303  00FED2  20                 	db	32
  3304  00FED3  20                 	db	32
  3305  00FED4  20                 	db	32
  3306  00FED5  20                 	db	32
  3307  00FED6  20                 	db	32
  3308  00FED7  41                 	db	65	;'A'
  3309  00FED8  70                 	db	112	;'p'
  3310  00FED9  70                 	db	112	;'p'
  3311  00FEDA  6C                 	db	108	;'l'
  3312  00FEDB  79                 	db	121	;'y'
  3313  00FEDC  20                 	db	32
  3314  00FEDD  0D                 	db	13
  3315  00FEDE  0A                 	db	10
  3316  00FEDF  00                 	db	0
  3317  00FEE0                     STR_2:
  3318  00FEE0  53                 	db	83	;'S'
  3319  00FEE1  44                 	db	68	;'D'
  3320  00FEE2  20                 	db	32
  3321  00FEE3  63                 	db	99	;'c'
  3322  00FEE4  61                 	db	97	;'a'
  3323  00FEE5  72                 	db	114	;'r'
  3324  00FEE6  64                 	db	100	;'d'
  3325  00FEE7  20                 	db	32
  3326  00FEE8  2B                 	db	43
  3327  00FEE9  20                 	db	32
  3328  00FEEA  70                 	db	112	;'p'
  3329  00FEEB  6C                 	db	108	;'l'
  3330  00FEEC  61                 	db	97	;'a'
  3331  00FEED  79                 	db	121	;'y'
  3332  00FEEE  62                 	db	98	;'b'
  3333  00FEEF  61                 	db	97	;'a'
  3334  00FEF0  63                 	db	99	;'c'
  3335  00FEF1  6B                 	db	107	;'k'
  3336  00FEF2  0D                 	db	13
  3337  00FEF3  0A                 	db	10
  3338  00FEF4  00                 	db	0
  3339  00FEF5                     STR_18:
  3340  00FEF5  5A                 	db	90	;'Z'
  3341  00FEF6  3A                 	db	58	;':'
  3342  00FEF7  20                 	db	32
  3343  00FEF8  52                 	db	82	;'R'
  3344  00FEF9  65                 	db	101	;'e'
  3345  00FEFA  73                 	db	115	;'s'
  3346  00FEFB  65                 	db	101	;'e'
  3347  00FEFC  74                 	db	116	;'t'
  3348  00FEFD  20                 	db	32
  3349  00FEFE  70                 	db	112	;'p'
  3350  00FEFF  72                 	db	114	;'r'
  3351  00FF00  6F                 	db	111	;'o'
  3352  00FF01  63                 	db	99	;'c'
  3353  00FF02  65                 	db	101	;'e'
  3354  00FF03  73                 	db	115	;'s'
  3355  00FF04  73                 	db	115	;'s'
  3356  00FF05  6F                 	db	111	;'o'
  3357  00FF06  72                 	db	114	;'r'
  3358  00FF07  0D                 	db	13
  3359  00FF08  0A                 	db	10
  3360  00FF09  00                 	db	0
  3361  00FF0A                     STR_14:
  3362  00FF0A  09                 	db	9
  3363  00FF0B  73                 	db	115	;'s'
  3364  00FF0C  61                 	db	97	;'a'
  3365  00FF0D  6D                 	db	109	;'m'
  3366  00FF0E  70                 	db	112	;'p'
  3367  00FF0F  6C                 	db	108	;'l'
  3368  00FF10  65                 	db	101	;'e'
  3369  00FF11  20                 	db	32
  3370  00FF12  72                 	db	114	;'r'
  3371  00FF13  61                 	db	97	;'a'
  3372  00FF14  74                 	db	116	;'t'
  3373  00FF15  65                 	db	101	;'e'
  3374  00FF16  3A                 	db	58	;':'
  3375  00FF17  20                 	db	32
  3376  00FF18  25                 	db	37
  3377  00FF19  64                 	db	100	;'d'
  3378  00FF1A  75                 	db	117	;'u'
  3379  00FF1B  73                 	db	115	;'s'
  3380  00FF1C  0D                 	db	13
  3381  00FF1D  0A                 	db	10
  3382  00FF1E  00                 	db	0
  3383  00FF1F                     STR_69:
  3384  00FF1F  44                 	db	68	;'D'
  3385  00FF20  65                 	db	101	;'e'
  3386  00FF21  63                 	db	99	;'c'
  3387  00FF22  72                 	db	114	;'r'
  3388  00FF23  65                 	db	101	;'e'
  3389  00FF24  61                 	db	97	;'a'
  3390  00FF25  73                 	db	115	;'s'
  3391  00FF26  65                 	db	101	;'e'
  3392  00FF27  64                 	db	100	;'d'
  3393  00FF28  20                 	db	32
  3394  00FF29  61                 	db	97	;'a'
  3395  00FF2A  64                 	db	100	;'d'
  3396  00FF2B  64                 	db	100	;'d'
  3397  00FF2C  72                 	db	114	;'r'
  3398  00FF2D  65                 	db	101	;'e'
  3399  00FF2E  73                 	db	115	;'s'
  3400  00FF2F  73                 	db	115	;'s'
  3401  00FF30  0D                 	db	13
  3402  00FF31  0A                 	db	10
  3403  00FF32  00                 	db	0
  3404  00FF33                     STR_71:
  3405  00FF33  49                 	db	73	;'I'
  3406  00FF34  6E                 	db	110	;'n'
  3407  00FF35  63                 	db	99	;'c'
  3408  00FF36  72                 	db	114	;'r'
  3409  00FF37  65                 	db	101	;'e'
  3410  00FF38  61                 	db	97	;'a'
  3411  00FF39  73                 	db	115	;'s'
  3412  00FF3A  65                 	db	101	;'e'
  3413  00FF3B  64                 	db	100	;'d'
  3414  00FF3C  20                 	db	32
  3415  00FF3D  61                 	db	97	;'a'
  3416  00FF3E  64                 	db	100	;'d'
  3417  00FF3F  64                 	db	100	;'d'
  3418  00FF40  72                 	db	114	;'r'
  3419  00FF41  65                 	db	101	;'e'
  3420  00FF42  73                 	db	115	;'s'
  3421  00FF43  73                 	db	115	;'s'
  3422  00FF44  0D                 	db	13
  3423  00FF45  0A                 	db	10
  3424  00FF46  00                 	db	0
  3425  00FF47                     STR_58:
  3426  00FF47  53                 	db	83	;'S'
  3427  00FF48  65                 	db	101	;'e'
  3428  00FF49  6C                 	db	108	;'l'
  3429  00FF4A  65                 	db	101	;'e'
  3430  00FF4B  63                 	db	99	;'c'
  3431  00FF4C  74                 	db	116	;'t'
  3432  00FF4D  3A                 	db	58	;':'
  3433  00FF4E  20                 	db	32
  3434  00FF4F  20                 	db	32
  3435  00FF50  20                 	db	32
  3436  00FF51  20                 	db	32
  3437  00FF52  20                 	db	32
  3438  00FF53  41                 	db	65	;'A'
  3439  00FF54  70                 	db	112	;'p'
  3440  00FF55  70                 	db	112	;'p'
  3441  00FF56  6C                 	db	108	;'l'
  3442  00FF57  79                 	db	121	;'y'
  3443  00FF58  0D                 	db	13
  3444  00FF59  0A                 	db	10
  3445  00FF5A  00                 	db	0
  3446  00FF5B                     STR_72:
  3447  00FF5B  53                 	db	83	;'S'
  3448  00FF5C  44                 	db	68	;'D'
  3449  00FF5D  20                 	db	32
  3450  00FF5E  63                 	db	99	;'c'
  3451  00FF5F  61                 	db	97	;'a'
  3452  00FF60  72                 	db	114	;'r'
  3453  00FF61  64                 	db	100	;'d'
  3454  00FF62  20                 	db	32
  3455  00FF63  61                 	db	97	;'a'
  3456  00FF64  64                 	db	100	;'d'
  3457  00FF65  64                 	db	100	;'d'
  3458  00FF66  72                 	db	114	;'r'
  3459  00FF67  65                 	db	101	;'e'
  3460  00FF68  73                 	db	115	;'s'
  3461  00FF69  73                 	db	115	;'s'
  3462  00FF6A  3A                 	db	58	;':'
  3463  00FF6B  20                 	db	32
  3464  00FF6C  20                 	db	32
  3465  00FF6D  00                 	db	0
  3466  00FF6E                     STR_83:
  3467  00FF6E  55                 	db	85	;'U'
  3468  00FF6F  6E                 	db	110	;'n'
  3469  00FF70  6B                 	db	107	;'k'
  3470  00FF71  6E                 	db	110	;'n'
  3471  00FF72  6F                 	db	111	;'o'
  3472  00FF73  77                 	db	119	;'w'
  3473  00FF74  6E                 	db	110	;'n'
  3474  00FF75  20                 	db	32
  3475  00FF76  6B                 	db	107	;'k'
  3476  00FF77  65                 	db	101	;'e'
  3477  00FF78  79                 	db	121	;'y'
  3478  00FF79  20                 	db	32
  3479  00FF7A  25                 	db	37
  3480  00FF7B  63                 	db	99	;'c'
  3481  00FF7C  0D                 	db	13
  3482  00FF7D  0A                 	db	10
  3483  00FF7E  00                 	db	0
  3484  00FF7F                     STR_37:
  3485  00FF7F  20                 	db	32
  3486  00FF80  20                 	db	32
  3487  00FF81  20                 	db	32
  3488  00FF82  20                 	db	32
  3489  00FF83  41                 	db	65	;'A'
  3490  00FF84  64                 	db	100	;'d'
  3491  00FF85  64                 	db	100	;'d'
  3492  00FF86  72                 	db	114	;'r'
  3493  00FF87  65                 	db	101	;'e'
  3494  00FF88  73                 	db	115	;'s'
  3495  00FF89  73                 	db	115	;'s'
  3496  00FF8A  3A                 	db	58	;':'
  3497  00FF8B  20                 	db	32
  3498  00FF8C  20                 	db	32
  3499  00FF8D  20                 	db	32
  3500  00FF8E  20                 	db	32
  3501  00FF8F  00                 	db	0
  3502  00FF90                     STR_9:
  3503  00FF90  09                 	db	9
  3504  00FF91  73                 	db	115	;'s'
  3505  00FF92  64                 	db	100	;'d'
  3506  00FF93  43                 	db	67	;'C'
  3507  00FF94  61                 	db	97	;'a'
  3508  00FF95  72                 	db	114	;'r'
  3509  00FF96  64                 	db	100	;'d'
  3510  00FF97  41                 	db	65	;'A'
  3511  00FF98  64                 	db	100	;'d'
  3512  00FF99  64                 	db	100	;'d'
  3513  00FF9A  72                 	db	114	;'r'
  3514  00FF9B  65                 	db	101	;'e'
  3515  00FF9C  73                 	db	115	;'s'
  3516  00FF9D  73                 	db	115	;'s'
  3517  00FF9E  3A                 	db	58	;':'
  3518  00FF9F  20                 	db	32
  3519  00FFA0  00                 	db	0
  3520  00FFA1                     STR_77:
  3521  00FFA1  52                 	db	82	;'R'
  3522  00FFA2  65                 	db	101	;'e'
  3523  00FFA3  61                 	db	97	;'a'
  3524  00FFA4  64                 	db	100	;'d'
  3525  00FFA5  20                 	db	32
  3526  00FFA6  62                 	db	98	;'b'
  3527  00FFA7  6C                 	db	108	;'l'
  3528  00FFA8  6F                 	db	111	;'o'
  3529  00FFA9  63                 	db	99	;'c'
  3530  00FFAA  6B                 	db	107	;'k'
  3531  00FFAB  3A                 	db	58	;':'
  3532  00FFAC  20                 	db	32
  3533  00FFAD  0D                 	db	13
  3534  00FFAE  0A                 	db	10
  3535  00FFAF  00                 	db	0
  3536  00FFB0                     STR_16:
  3537  00FFB0  3F                 	db	63	;'?'
  3538  00FFB1  3A                 	db	58	;':'
  3539  00FFB2  20                 	db	32
  3540  00FFB3  68                 	db	104	;'h'
  3541  00FFB4  65                 	db	101	;'e'
  3542  00FFB5  6C                 	db	108	;'l'
  3543  00FFB6  70                 	db	112	;'p'
  3544  00FFB7  20                 	db	32
  3545  00FFB8  6D                 	db	109	;'m'
  3546  00FFB9  65                 	db	101	;'e'
  3547  00FFBA  6E                 	db	110	;'n'
  3548  00FFBB  75                 	db	117	;'u'
  3549  00FFBC  0D                 	db	13
  3550  00FFBD  0A                 	db	10
  3551  00FFBE  00                 	db	0
  3552  00FFBF                     STR_1:
  3553  00FFBF  4C                 	db	76	;'L'
  3554  00FFC0  61                 	db	97	;'a'
  3555  00FFC1  62                 	db	98	;'b'
  3556  00FFC2  20                 	db	32
  3557  00FFC3  31                 	db	49	;'1'
  3558  00FFC4  30                 	db	48	;'0'
  3559  00FFC5  0D                 	db	13
  3560  00FFC6  0A                 	db	10
  3561  00FFC7  00                 	db	0
  3562  00FFC8                     STR_3:
  3563  00FFC8  44                 	db	68	;'D'
  3564  00FFC9  65                 	db	101	;'e'
  3565  00FFCA  76                 	db	118	;'v'
  3566  00FFCB  27                 	db	39
  3567  00FFCC  32                 	db	50	;'2'
  3568  00FFCD  31                 	db	49	;'1'
  3569  00FFCE  0D                 	db	13
  3570  00FFCF  0A                 	db	10
  3571  00FFD0  00                 	db	0
  3572  00FFD1                     STR_31:
  3573  00FFD1  6F                 	db	111	;'o'
  3574  00FFD2  3A                 	db	58	;':'
  3575  00FFD3  09                 	db	9
  3576  00FFD4  6F                 	db	111	;'o'
  3577  00FFD5  6B                 	db	107	;'k'
  3578  00FFD6  0D                 	db	13
  3579  00FFD7  0A                 	db	10
  3580  00FFD8  00                 	db	0
  3581  00FFD9                     STR_17:
  3582  00FFD9  6F                 	db	111	;'o'
  3583  00FFDA  3A                 	db	58	;':'
  3584  00FFDB  20                 	db	32
  3585  00FFDC  6B                 	db	107	;'k'
  3586  00FFDD  0D                 	db	13
  3587  00FFDE  0A                 	db	10
  3588  00FFDF  00                 	db	0
  3589  00FFE0                     STR_49:
  3590  00FFE0  25                 	db	37
  3591  00FFE1  30                 	db	48	;'0'
  3592  00FFE2  34                 	db	52	;'4'
  3593  00FFE3  78                 	db	120	;'x'
  3594  00FFE4  0D                 	db	13
  3595  00FFE5  0A                 	db	10
  3596  00FFE6  00                 	db	0
  3597  00FFE7                     STR_128:
  3598  00FFE7  25                 	db	37
  3599  00FFE8  30                 	db	48	;'0'
  3600  00FFE9  32                 	db	50	;'2'
  3601  00FFEA  78                 	db	120	;'x'
  3602  00FFEB  20                 	db	32
  3603  00FFEC  00                 	db	0
  3604  00FFED                     STR_10:
  3605  00FFED  25                 	db	37
  3606  00FFEE  30                 	db	48	;'0'
  3607  00FFEF  34                 	db	52	;'4'
  3608  00FFF0  78                 	db	120	;'x'
  3609  00FFF1  00                 	db	0
  3610  00FFF2                     STR_122:
  3611  00FFF2  0D                 	db	13
  3612  00FFF3  0A                 	db	10
  3613  00FFF4  0A                 	db	10
  3614  00FFF5  00                 	db	0
  3615  00FFF6                     STR_126:
  3616  00FFF6  25                 	db	37
  3617  00FFF7  63                 	db	99	;'c'
  3618  00FFF8  00                 	db	0
  3619  00FFF9                     STR_5:
  3620  00FFF9  3E                 	db	62	;'>'
  3621  00FFFA  20                 	db	32
  3622  00FFFB  00                 	db	0
  3623  00FFFC                     STR_11:
  3624  00FFFC  3A                 	db	58	;':'
  3625  00FFFD  00                 	db	0
  3626  00FFFE  00                 	db	0	; dummy byte at the end
  3627  0000                     
  3628                           ; #config settings
  3629                           
  3630                           	psect	cinit
  3631  00318A                     __pcinit:
  3632                           	callstack 0
  3633  00318A                     start_initialization:
  3634                           	callstack 0
  3635  00318A                     __initialization:
  3636                           	callstack 0
  3637                           
  3638                           ; Initialize objects allocated to BANK0 (2 bytes)
  3639                           ; load TBLPTR registers with __pidataBANK0
  3640  00318A  0EF2               	movlw	low __pidataBANK0
  3641  00318C  6EF6               	movwf	tblptrl,c
  3642  00318E  0E37               	movlw	high __pidataBANK0
  3643  003190  6EF7               	movwf	tblptrh,c
  3644  003192  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3645  003194  6EF8               	movwf	tblptru,c
  3646  003196  0009               	tblrd		*+	;fetch initializer
  3647  003198  CFF5 F0D1          	movff	tablat,__pdataBANK0
  3648  00319C  0009               	tblrd		*+	;fetch initializer
  3649  00319E  CFF5 F0D2          	movff	tablat,__pdataBANK0+1
  3650                           
  3651                           ; Initialize objects allocated to COMRAM (2 bytes)
  3652                           ; load TBLPTR registers with __pidataCOMRAM
  3653  0031A2  0EF0               	movlw	low __pidataCOMRAM
  3654  0031A4  6EF6               	movwf	tblptrl,c
  3655  0031A6  0E37               	movlw	high __pidataCOMRAM
  3656  0031A8  6EF7               	movwf	tblptrh,c
  3657  0031AA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3658  0031AC  6EF8               	movwf	tblptru,c
  3659  0031AE  0009               	tblrd		*+	;fetch initializer
  3660  0031B0  CFF5 F04A          	movff	tablat,__pdataCOMRAM
  3661  0031B4  0009               	tblrd		*+	;fetch initializer
  3662  0031B6  CFF5 F04B          	movff	tablat,__pdataCOMRAM+1
  3663                           
  3664                           ; Clear objects allocated to BIGRAM (2048 bytes)
  3665  0031BA  EE01  F0DE         	lfsr	0,__pbssBIGRAM
  3666  0031BE  EE18 F000          	lfsr	1,2048
  3667  0031C2                     clear_0:
  3668  0031C2  6AEE               	clrf	postinc0,c
  3669  0031C4  50E5               	movf	postdec1,w,c
  3670  0031C6  50E1               	movf	fsr1l,w,c
  3671  0031C8  E1FC               	bnz	clear_0
  3672  0031CA  50E2               	movf	fsr1h,w,c
  3673  0031CC  E1FA               	bnz	clear_0
  3674                           
  3675                           ; Clear objects allocated to BANK1 (160 bytes)
  3676  0031CE  EE01  F000         	lfsr	0,__pbssBANK1
  3677  0031D2  0EA0               	movlw	160
  3678  0031D4                     clear_1:
  3679  0031D4  6AEE               	clrf	postinc0,c
  3680  0031D6  06E8               	decf	wreg,f,c
  3681  0031D8  E1FD               	bnz	clear_1
  3682                           
  3683                           ; Clear objects allocated to BANK0 (15 bytes)
  3684  0031DA  EE00  F0C2         	lfsr	0,__pbssBANK0
  3685  0031DE  0E0F               	movlw	15
  3686  0031E0                     clear_2:
  3687  0031E0  6AEE               	clrf	postinc0,c
  3688  0031E2  06E8               	decf	wreg,f,c
  3689  0031E4  E1FD               	bnz	clear_2
  3690                           
  3691                           ; Clear objects allocated to COMRAM (17 bytes)
  3692  0031E6  EE00  F039         	lfsr	0,__pbssCOMRAM
  3693  0031EA  0E11               	movlw	17
  3694  0031EC                     clear_3:
  3695  0031EC  6AEE               	clrf	postinc0,c
  3696  0031EE  06E8               	decf	wreg,f,c
  3697  0031F0  E1FD               	bnz	clear_3
  3698  0031F2                     end_of_initialization:
  3699                           	callstack 0
  3700  0031F2                     __end_of__initialization:
  3701                           	callstack 0
  3702  0031F2  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3703  0031F4  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3704  0031F6  0100               	movlb	0
  3705  0031F8  EF29  F000         	goto	_main	;jump to C main() function
  3706                           
  3707                           	psect	bssCOMRAM
  3708  000039                     __pbssCOMRAM:
  3709                           	callstack 0
  3710  000039                     _width:
  3711                           	callstack 0
  3712  000039                     	ds	2
  3713  00003B                     _prec:
  3714                           	callstack 0
  3715  00003B                     	ds	2
  3716  00003D                     _flags:
  3717                           	callstack 0
  3718  00003D                     	ds	2
  3719  00003F                     myTMR0ISR@bufferIndex:
  3720                           	callstack 0
  3721  00003F                     	ds	2
  3722  000041                     _timer0ReloadVal:
  3723                           	callstack 0
  3724  000041                     	ds	2
  3725  000043                     _TMR0_InterruptHandler:
  3726                           	callstack 0
  3727  000043                     	ds	2
  3728  000045                     myTMR0ISR@state:
  3729                           	callstack 0
  3730  000045                     	ds	1
  3731  000046                     _stopPlayback:
  3732                           	callstack 0
  3733  000046                     	ds	1
  3734  000047                     _stopCollect:
  3735                           	callstack 0
  3736  000047                     	ds	1
  3737  000048                     _startCollect:
  3738                           	callstack 0
  3739  000048                     	ds	1
  3740  000049                     _eusart1RxLastError:
  3741                           	callstack 0
  3742  000049                     	ds	1
  3743                           
  3744                           	psect	dataCOMRAM
  3745  00004A                     __pdataCOMRAM:
  3746                           	callstack 0
  3747  00004A                     myTMR0ISR@buffer:
  3748                           	callstack 0
  3749  00004A                     	ds	2
  3750                           
  3751                           	psect	bssBANK0
  3752  0000C2                     __pbssBANK0:
  3753                           	callstack 0
  3754  0000C2                     _nout:
  3755                           	callstack 0
  3756  0000C2                     	ds	2
  3757  0000C4                     _ADC_InterruptHandler:
  3758                           	callstack 0
  3759  0000C4                     	ds	2
  3760  0000C6                     _EUSART1_ErrorHandler:
  3761                           	callstack 0
  3762  0000C6                     	ds	2
  3763  0000C8                     _EUSART1_OverrunErrorHandler:
  3764                           	callstack 0
  3765  0000C8                     	ds	2
  3766  0000CA                     _EUSART1_FramingErrorHandler:
  3767                           	callstack 0
  3768  0000CA                     	ds	2
  3769  0000CC                     main@sinIndex:
  3770                           	callstack 0
  3771  0000CC                     	ds	1
  3772  0000CD                     _doPlayback:
  3773                           	callstack 0
  3774  0000CD                     	ds	1
  3775  0000CE                     _collecting:
  3776                           	callstack 0
  3777  0000CE                     	ds	1
  3778  0000CF                     _buffer2Full:
  3779                           	callstack 0
  3780  0000CF                     	ds	1
  3781  0000D0                     _buffer1Full:
  3782                           	callstack 0
  3783  0000D0                     	ds	1
  3784                           
  3785                           	psect	dataBANK0
  3786  0000D1                     __pdataBANK0:
  3787                           	callstack 0
  3788  0000D1                     _sampleRate:
  3789                           	callstack 0
  3790  0000D1                     	ds	2
  3791                           
  3792                           	psect	bssBANK1
  3793  000100                     __pbssBANK1:
  3794                           	callstack 0
  3795  000100                     _writeFailureStatus:
  3796                           	callstack 0
  3797  000100                     	ds	128
  3798  000180                     _dbuf:
  3799                           	callstack 0
  3800  000180                     	ds	32
  3801                           
  3802                           	psect	bssBIGRAM
  3803  0001DE                     __pbssBIGRAM:
  3804                           	callstack 0
  3805  0001DE                     _writeFailureTable:
  3806                           	callstack 0
  3807  0001DE                     	ds	512
  3808  0003DE                     _sdCardBuffer2:
  3809                           	callstack 0
  3810  0003DE                     	ds	512
  3811  0005DE                     _sdCardBuffer1:
  3812                           	callstack 0
  3813  0005DE                     	ds	512
  3814  0007DE                     _sdCardBuffer:
  3815                           	callstack 0
  3816  0007DE                     	ds	512
  3817                           
  3818                           	psect	cstackBANK1
  3819  0001A0                     __pcstackBANK1:
  3820                           	callstack 0
  3821  0001A0                     	ds	1
  3822  0001A1                     main@numBlocks:
  3823                           	callstack 0
  3824                           
  3825                           ; 4 bytes @ 0x1
  3826  0001A1                     	ds	4
  3827  0001A5                     main@printVal:
  3828                           	callstack 0
  3829                           
  3830                           ; 2 bytes @ 0x5
  3831  0001A5                     	ds	2
  3832  0001A7                     main@storedCounter:
  3833                           	callstack 0
  3834                           
  3835                           ; 4 bytes @ 0x7
  3836  0001A7                     	ds	4
  3837  0001AB                     main@printedBlocks:
  3838                           	callstack 0
  3839                           
  3840                           ; 4 bytes @ 0xB
  3841  0001AB                     	ds	4
  3842  0001AF                     main@j:
  3843                           	callstack 0
  3844                           
  3845                           ; 1 bytes @ 0xF
  3846  0001AF                     	ds	1
  3847  0001B0                     main@addr:
  3848                           	callstack 0
  3849                           
  3850                           ; 4 bytes @ 0x10
  3851  0001B0                     	ds	4
  3852  0001B4                     main@endAddress:
  3853                           	callstack 0
  3854                           
  3855                           ; 4 bytes @ 0x14
  3856  0001B4                     	ds	4
  3857  0001B8                     main@writeStartAddress:
  3858                           	callstack 0
  3859                           
  3860                           ; 4 bytes @ 0x18
  3861  0001B8                     	ds	4
  3862  0001BC                     main@i_922:
  3863                           	callstack 0
  3864                           
  3865                           ; 2 bytes @ 0x1C
  3866  0001BC                     	ds	2
  3867  0001BE                     main@i_959:
  3868                           	callstack 0
  3869                           
  3870                           ; 2 bytes @ 0x1E
  3871  0001BE                     	ds	2
  3872  0001C0                     main@writeEndAddress:
  3873                           	callstack 0
  3874                           
  3875                           ; 4 bytes @ 0x20
  3876  0001C0                     	ds	4
  3877  0001C4                     main@i_939:
  3878                           	callstack 0
  3879                           
  3880                           ; 1 bytes @ 0x24
  3881  0001C4                     	ds	1
  3882  0001C5                     main@writeAddress:
  3883                           	callstack 0
  3884                           
  3885                           ; 4 bytes @ 0x25
  3886  0001C5                     	ds	4
  3887  0001C9                     main@address:
  3888                           	callstack 0
  3889                           
  3890                           ; 4 bytes @ 0x29
  3891  0001C9                     	ds	4
  3892  0001CD                     main@cmd:
  3893                           	callstack 0
  3894                           
  3895                           ; 1 bytes @ 0x2D
  3896  0001CD                     	ds	1
  3897  0001CE                     main@i:
  3898                           	callstack 0
  3899                           
  3900                           ; 2 bytes @ 0x2E
  3901  0001CE                     	ds	2
  3902  0001D0                     main@readAddress:
  3903                           	callstack 0
  3904                           
  3905                           ; 4 bytes @ 0x30
  3906  0001D0                     	ds	4
  3907  0001D4                     main@failureIndex:
  3908                           	callstack 0
  3909                           
  3910                           ; 1 bytes @ 0x34
  3911  0001D4                     	ds	1
  3912  0001D5                     main@status:
  3913                           	callstack 0
  3914                           
  3915                           ; 1 bytes @ 0x35
  3916  0001D5                     	ds	1
  3917  0001D6                     main@sdCardAddress:
  3918                           	callstack 0
  3919                           
  3920                           ; 4 bytes @ 0x36
  3921  0001D6                     	ds	4
  3922  0001DA                     main@writeAddress_935:
  3923                           	callstack 0
  3924                           
  3925                           ; 4 bytes @ 0x3A
  3926  0001DA                     	ds	4
  3927                           
  3928                           	psect	cstackBANK0
  3929  000060                     __pcstackBANK0:
  3930                           	callstack 0
  3931  000060                     ?_dtoa:
  3932                           	callstack 0
  3933  000060                     ?_utoa:
  3934                           	callstack 0
  3935  000060                     ?_xtoa:
  3936                           	callstack 0
  3937  000060                     dtoa@fp:
  3938                           	callstack 0
  3939  000060                     utoa@fp:
  3940                           	callstack 0
  3941  000060                     xtoa@fp:
  3942                           	callstack 0
  3943                           
  3944                           ; 2 bytes @ 0x0
  3945  000060                     	ds	2
  3946  000062                     dtoa@d:
  3947                           	callstack 0
  3948  000062                     utoa@d:
  3949                           	callstack 0
  3950  000062                     xtoa@d:
  3951                           	callstack 0
  3952                           
  3953                           ; 8 bytes @ 0x2
  3954  000062                     	ds	8
  3955  00006A                     xtoa@x:
  3956                           	callstack 0
  3957  00006A                     _dtoa$1985:
  3958                           	callstack 0
  3959  00006A                     utoa@p:
  3960                           	callstack 0
  3961                           
  3962                           ; 2 bytes @ 0xA
  3963  00006A                     	ds	1
  3964  00006B                     _xtoa$2003:
  3965                           	callstack 0
  3966                           
  3967                           ; 2 bytes @ 0xB
  3968  00006B                     	ds	1
  3969  00006C                     dtoa@p:
  3970                           	callstack 0
  3971  00006C                     utoa@w:
  3972                           	callstack 0
  3973                           
  3974                           ; 2 bytes @ 0xC
  3975  00006C                     	ds	1
  3976  00006D                     _xtoa$2004:
  3977                           	callstack 0
  3978                           
  3979                           ; 2 bytes @ 0xD
  3980  00006D                     	ds	1
  3981  00006E                     dtoa@w:
  3982                           	callstack 0
  3983  00006E                     utoa@n:
  3984                           	callstack 0
  3985                           
  3986                           ; 8 bytes @ 0xE
  3987  00006E                     	ds	1
  3988  00006F                     xtoa@p:
  3989                           	callstack 0
  3990                           
  3991                           ; 2 bytes @ 0xF
  3992  00006F                     	ds	1
  3993  000070                     dtoa@s:
  3994                           	callstack 0
  3995                           
  3996                           ; 2 bytes @ 0x10
  3997  000070                     	ds	1
  3998  000071                     xtoa@w:
  3999                           	callstack 0
  4000                           
  4001                           ; 2 bytes @ 0x11
  4002  000071                     	ds	1
  4003  000072                     dtoa@n:
  4004                           	callstack 0
  4005                           
  4006                           ; 8 bytes @ 0x12
  4007  000072                     	ds	1
  4008  000073                     xtoa@n:
  4009                           	callstack 0
  4010                           
  4011                           ; 8 bytes @ 0x13
  4012  000073                     	ds	3
  4013  000076                     utoa@i:
  4014                           	callstack 0
  4015                           
  4016                           ; 2 bytes @ 0x16
  4017  000076                     	ds	4
  4018  00007A                     dtoa@i:
  4019                           	callstack 0
  4020                           
  4021                           ; 2 bytes @ 0x1A
  4022  00007A                     	ds	1
  4023  00007B                     xtoa@i:
  4024                           	callstack 0
  4025                           
  4026                           ; 2 bytes @ 0x1B
  4027  00007B                     	ds	2
  4028  00007D                     xtoa@c:
  4029                           	callstack 0
  4030                           
  4031                           ; 2 bytes @ 0x1D
  4032  00007D                     	ds	2
  4033  00007F                     ?_vfpfcnvrt:
  4034                           	callstack 0
  4035  00007F                     vfpfcnvrt@fp:
  4036                           	callstack 0
  4037                           
  4038                           ; 2 bytes @ 0x1F
  4039  00007F                     	ds	2
  4040  000081                     vfpfcnvrt@fmt:
  4041                           	callstack 0
  4042                           
  4043                           ; 2 bytes @ 0x21
  4044  000081                     	ds	2
  4045  000083                     vfpfcnvrt@ap:
  4046                           	callstack 0
  4047                           
  4048                           ; 2 bytes @ 0x23
  4049  000083                     	ds	2
  4050  000085                     ??_vfpfcnvrt:
  4051                           
  4052                           ; 1 bytes @ 0x25
  4053  000085                     	ds	4
  4054  000089                     vfpfcnvrt@ll:
  4055                           	callstack 0
  4056                           
  4057                           ; 8 bytes @ 0x29
  4058  000089                     	ds	8
  4059  000091                     vfpfcnvrt@done:
  4060                           	callstack 0
  4061                           
  4062                           ; 2 bytes @ 0x31
  4063  000091                     	ds	2
  4064  000093                     _vfpfcnvrt$2018:
  4065                           	callstack 0
  4066                           
  4067                           ; 2 bytes @ 0x33
  4068  000093                     	ds	2
  4069  000095                     vfpfcnvrt@llu:
  4070                           	callstack 0
  4071                           
  4072                           ; 8 bytes @ 0x35
  4073  000095                     	ds	8
  4074  00009D                     vfpfcnvrt@c:
  4075                           	callstack 0
  4076                           
  4077                           ; 1 bytes @ 0x3D
  4078  00009D                     	ds	1
  4079  00009E                     ?_vfprintf:
  4080                           	callstack 0
  4081  00009E                     vfprintf@fp:
  4082                           	callstack 0
  4083                           
  4084                           ; 2 bytes @ 0x3E
  4085  00009E                     	ds	2
  4086  0000A0                     vfprintf@fmt:
  4087                           	callstack 0
  4088                           
  4089                           ; 2 bytes @ 0x40
  4090  0000A0                     	ds	2
  4091  0000A2                     vfprintf@ap:
  4092                           	callstack 0
  4093                           
  4094                           ; 2 bytes @ 0x42
  4095  0000A2                     	ds	2
  4096  0000A4                     vfprintf@cfmt:
  4097                           	callstack 0
  4098                           
  4099                           ; 2 bytes @ 0x44
  4100  0000A4                     	ds	2
  4101  0000A6                     ?_printf:
  4102                           	callstack 0
  4103  0000A6                     printf@fmt:
  4104                           	callstack 0
  4105                           
  4106                           ; 2 bytes @ 0x46
  4107  0000A6                     	ds	12
  4108  0000B2                     printf@ap:
  4109                           	callstack 0
  4110                           
  4111                           ; 2 bytes @ 0x52
  4112  0000B2                     	ds	2
  4113  0000B4                     SDCARD_Initialize@i:
  4114                           	callstack 0
  4115  0000B4                     hexDumpBuffer@sdCardBuffer:
  4116                           	callstack 0
  4117                           
  4118                           ; 2 bytes @ 0x54
  4119  0000B4                     	ds	2
  4120  0000B6                     ??_hexDumpBuffer:
  4121  0000B6                     SDCARD_Initialize@verbose:
  4122                           	callstack 0
  4123                           
  4124                           ; 1 bytes @ 0x56
  4125  0000B6                     	ds	1
  4126  0000B7                     SDCARD_Initialize@response:
  4127                           	callstack 0
  4128                           
  4129                           ; 1 bytes @ 0x57
  4130  0000B7                     	ds	1
  4131  0000B8                     hexDumpBuffer@j:
  4132                           	callstack 0
  4133                           
  4134                           ; 2 bytes @ 0x58
  4135  0000B8                     	ds	2
  4136  0000BA                     hexDumpBuffer@j_1446:
  4137                           	callstack 0
  4138                           
  4139                           ; 2 bytes @ 0x5A
  4140  0000BA                     	ds	2
  4141  0000BC                     hexDumpBuffer@i:
  4142                           	callstack 0
  4143                           
  4144                           ; 2 bytes @ 0x5C
  4145  0000BC                     	ds	2
  4146  0000BE                     ??_main:
  4147                           
  4148                           ; 1 bytes @ 0x5E
  4149  0000BE                     	ds	4
  4150                           
  4151                           	psect	cstackCOMRAM
  4152  000001                     __pcstackCOMRAM:
  4153                           	callstack 0
  4154  000001                     ?_TMR0_ReadTimer:
  4155                           	callstack 0
  4156  000001                     EPWM1_LoadDutyValue@dutyValue:
  4157                           	callstack 0
  4158                           
  4159                           ; 2 bytes @ 0x0
  4160  000001                     	ds	2
  4161  000003                     ??_EPWM1_LoadDutyValue:
  4162  000003                     ??_TMR0_ReadTimer:
  4163                           
  4164                           ; 1 bytes @ 0x2
  4165  000003                     	ds	2
  4166  000005                     TMR0_ReadTimer@readVal:
  4167                           	callstack 0
  4168                           
  4169                           ; 2 bytes @ 0x4
  4170  000005                     	ds	2
  4171  000007                     TMR0_ReadTimer@readValLow:
  4172                           	callstack 0
  4173                           
  4174                           ; 1 bytes @ 0x6
  4175  000007                     	ds	1
  4176  000008                     TMR0_ReadTimer@readValHigh:
  4177                           	callstack 0
  4178                           
  4179                           ; 1 bytes @ 0x7
  4180  000008                     	ds	1
  4181  000009                     i2TMR0_WriteTimer@timerVal:
  4182                           	callstack 0
  4183                           
  4184                           ; 2 bytes @ 0x8
  4185  000009                     	ds	2
  4186  00000B                     ??_myTMR0ISR:
  4187  00000B                     
  4188                           ; 1 bytes @ 0xA
  4189  00000B                     	ds	2
  4190  00000D                     myTMR0ISR@mic:
  4191                           	callstack 0
  4192                           
  4193                           ; 2 bytes @ 0xC
  4194  00000D                     	ds	2
  4195  00000F                     myTMR0ISR@useBuffer1:
  4196                           	callstack 0
  4197                           
  4198                           ; 1 bytes @ 0xE
  4199  00000F                     	ds	1
  4200  000010                     ??_INTERRUPT_InterruptManager:
  4201                           
  4202                           ; 1 bytes @ 0xF
  4203  000010                     	ds	4
  4204  000014                     ??_SPI2_Open:
  4205  000014                     ?_strlen:
  4206                           	callstack 0
  4207  000014                     ?_isupper:
  4208                           	callstack 0
  4209  000014                     ?_isalpha:
  4210                           	callstack 0
  4211  000014                     ?_isdigit:
  4212                           	callstack 0
  4213  000014                     ?_isspace:
  4214                           	callstack 0
  4215  000014                     ?_islower:
  4216                           	callstack 0
  4217  000014                     ?___wmul:
  4218                           	callstack 0
  4219  000014                     ?_incrementAddress:
  4220                           	callstack 0
  4221  000014                     ?___aodiv:
  4222                           	callstack 0
  4223  000014                     ?___aomod:
  4224                           	callstack 0
  4225  000014                     ?___lodiv:
  4226                           	callstack 0
  4227  000014                     ?___lomod:
  4228                           	callstack 0
  4229  000014                     EUSART1_Write@txData:
  4230                           	callstack 0
  4231  000014                     SPI2_ExchangeByte@data:
  4232                           	callstack 0
  4233  000014                     EUSART1_SetFramingErrorHandler@interruptHandler:
  4234                           	callstack 0
  4235  000014                     EUSART1_SetOverrunErrorHandler@interruptHandler:
  4236                           	callstack 0
  4237  000014                     EUSART1_SetErrorHandler@interruptHandler:
  4238                           	callstack 0
  4239  000014                     TMR0_WriteTimer@timerVal:
  4240                           	callstack 0
  4241  000014                     TMR0_SetInterruptHandler@InterruptHandler:
  4242                           	callstack 0
  4243  000014                     ___wmul@multiplier:
  4244                           	callstack 0
  4245  000014                     isalpha@c:
  4246                           	callstack 0
  4247  000014                     isdigit@c:
  4248                           	callstack 0
  4249  000014                     isspace@c:
  4250                           	callstack 0
  4251  000014                     isupper@c:
  4252                           	callstack 0
  4253  000014                     strlen@s:
  4254                           	callstack 0
  4255  000014                     islower@c:
  4256                           	callstack 0
  4257  000014                     incrementAddress@sdCardAddress:
  4258                           	callstack 0
  4259  000014                     ___aodiv@dividend:
  4260                           	callstack 0
  4261  000014                     ___aomod@dividend:
  4262                           	callstack 0
  4263  000014                     ___lodiv@dividend:
  4264                           	callstack 0
  4265  000014                     ___lomod@dividend:
  4266                           	callstack 0
  4267                           
  4268                           ; 8 bytes @ 0x13
  4269  000014                     	ds	1
  4270  000015                     putch@txData:
  4271                           	callstack 0
  4272  000015                     SPI2_Open@spi2UniqueConfiguration:
  4273                           	callstack 0
  4274  000015                     SDCARD_PollWriteComplete@status:
  4275                           	callstack 0
  4276  000015                     SDCARD_ReadBlock@addr:
  4277                           	callstack 0
  4278  000015                     SDCARD_WriteBlock@addr:
  4279                           	callstack 0
  4280                           
  4281                           ; 4 bytes @ 0x14
  4282  000015                     	ds	1
  4283  000016                     ??_isupper:
  4284  000016                     ??_isalpha:
  4285  000016                     ??_isdigit:
  4286  000016                     ??_isspace:
  4287  000016                     ??_islower:
  4288  000016                     ??_TMR0_Initialize:
  4289  000016                     ___wmul@multiplicand:
  4290                           	callstack 0
  4291  000016                     fputc@c:
  4292                           	callstack 0
  4293  000016                     strlen@a:
  4294                           	callstack 0
  4295                           
  4296                           ; 2 bytes @ 0x15
  4297  000016                     	ds	2
  4298  000018                     ___wmul@product:
  4299                           	callstack 0
  4300  000018                     fputc@fp:
  4301                           	callstack 0
  4302                           
  4303                           ; 2 bytes @ 0x17
  4304  000018                     	ds	1
  4305  000019                     SDCARD_ReadBlock@sdCardBuffer:
  4306                           	callstack 0
  4307  000019                     SDCARD_WriteBlock@sdCardBuffer:
  4308                           	callstack 0
  4309                           
  4310                           ; 2 bytes @ 0x18
  4311  000019                     	ds	1
  4312  00001A                     ??_fputc:
  4313  00001A                     ?_toupper:
  4314                           	callstack 0
  4315  00001A                     _isspace$2068:
  4316                           	callstack 0
  4317  00001A                     toupper@c:
  4318                           	callstack 0
  4319                           
  4320                           ; 2 bytes @ 0x19
  4321  00001A                     	ds	1
  4322  00001B                     ?_atoi:
  4323                           	callstack 0
  4324  00001B                     SDCARD_ReadBlock@i:
  4325                           	callstack 0
  4326  00001B                     SDCARD_WriteBlock@i:
  4327                           	callstack 0
  4328  00001B                     atoi@s:
  4329                           	callstack 0
  4330                           
  4331                           ; 2 bytes @ 0x1A
  4332  00001B                     	ds	1
  4333  00001C                     ??_toupper:
  4334  00001C                     ___aodiv@divisor:
  4335                           	callstack 0
  4336  00001C                     ___aomod@divisor:
  4337                           	callstack 0
  4338  00001C                     ___lodiv@divisor:
  4339                           	callstack 0
  4340  00001C                     ___lomod@divisor:
  4341                           	callstack 0
  4342                           
  4343                           ; 8 bytes @ 0x1B
  4344  00001C                     	ds	1
  4345  00001D                     ??_atoi:
  4346                           
  4347                           ; 1 bytes @ 0x1C
  4348  00001D                     	ds	2
  4349  00001F                     ?_ctoa:
  4350                           	callstack 0
  4351  00001F                     ctoa@fp:
  4352                           	callstack 0
  4353  00001F                     fputs@s:
  4354                           	callstack 0
  4355                           
  4356                           ; 2 bytes @ 0x1E
  4357  00001F                     	ds	1
  4358  000020                     _toupper$2117:
  4359                           	callstack 0
  4360                           
  4361                           ; 2 bytes @ 0x1F
  4362  000020                     	ds	1
  4363  000021                     ctoa@c:
  4364                           	callstack 0
  4365  000021                     atoi@neg:
  4366                           	callstack 0
  4367  000021                     fputs@fp:
  4368                           	callstack 0
  4369                           
  4370                           ; 2 bytes @ 0x20
  4371  000021                     	ds	1
  4372  000022                     ??_ctoa:
  4373                           
  4374                           ; 1 bytes @ 0x21
  4375  000022                     	ds	1
  4376  000023                     fputs@c:
  4377                           	callstack 0
  4378  000023                     ctoa@l:
  4379                           	callstack 0
  4380  000023                     _atoi$2041:
  4381                           	callstack 0
  4382                           
  4383                           ; 2 bytes @ 0x22
  4384  000023                     	ds	1
  4385  000024                     ___aodiv@counter:
  4386                           	callstack 0
  4387  000024                     ___aomod@counter:
  4388                           	callstack 0
  4389  000024                     ___lomod@counter:
  4390                           	callstack 0
  4391  000024                     fputs@i:
  4392                           	callstack 0
  4393  000024                     ___lodiv@quotient:
  4394                           	callstack 0
  4395                           
  4396                           ; 8 bytes @ 0x23
  4397  000024                     	ds	1
  4398  000025                     ___aodiv@sign:
  4399                           	callstack 0
  4400  000025                     ___aomod@sign:
  4401                           	callstack 0
  4402  000025                     ctoa@w:
  4403                           	callstack 0
  4404  000025                     _atoi$2043:
  4405                           	callstack 0
  4406                           
  4407                           ; 2 bytes @ 0x24
  4408  000025                     	ds	1
  4409  000026                     ?_abs:
  4410                           	callstack 0
  4411  000026                     ?_pad:
  4412                           	callstack 0
  4413  000026                     pad@fp:
  4414                           	callstack 0
  4415  000026                     abs@a:
  4416                           	callstack 0
  4417  000026                     ___aodiv@quotient:
  4418                           	callstack 0
  4419                           
  4420                           ; 8 bytes @ 0x25
  4421  000026                     	ds	1
  4422  000027                     _atoi$2042:
  4423                           	callstack 0
  4424                           
  4425                           ; 1 bytes @ 0x26
  4426  000027                     	ds	1
  4427  000028                     ??_abs:
  4428  000028                     pad@buf:
  4429                           	callstack 0
  4430  000028                     atoi@n:
  4431                           	callstack 0
  4432                           
  4433                           ; 2 bytes @ 0x27
  4434  000028                     	ds	2
  4435  00002A                     pad@p:
  4436                           	callstack 0
  4437                           
  4438                           ; 2 bytes @ 0x29
  4439  00002A                     	ds	2
  4440  00002C                     ??_pad:
  4441  00002C                     ___lodiv@counter:
  4442                           	callstack 0
  4443                           
  4444                           ; 1 bytes @ 0x2B
  4445  00002C                     	ds	1
  4446  00002D                     pad@i:
  4447                           	callstack 0
  4448                           
  4449                           ; 2 bytes @ 0x2C
  4450  00002D                     	ds	2
  4451  00002F                     pad@w:
  4452                           	callstack 0
  4453                           
  4454                           ; 2 bytes @ 0x2E
  4455  00002F                     	ds	2
  4456  000031                     ??_dtoa:
  4457  000031                     ??_utoa:
  4458  000031                     ??_xtoa:
  4459                           
  4460                           ; 1 bytes @ 0x30
  4461  000031                     	ds	8
  4462  000039                     
  4463                           ; 1 bytes @ 0x38
  4464 ;;
  4465 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4466 ;;
  4467 ;; *************** function _main *****************
  4468 ;; Defined at:
  4469 ;;		line 59 in file "main.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  addr            4   16[BANK1 ] unsigned long 
  4474 ;;  i               2   28[BANK1 ] unsigned short 
  4475 ;;  printVal        2    5[BANK1 ] unsigned short 
  4476 ;;  i               1   36[BANK1 ] unsigned char 
  4477 ;;  i               2   30[BANK1 ] unsigned short 
  4478 ;;  j               1   15[BANK1 ] unsigned char 
  4479 ;;  writeAddress    4   58[BANK1 ] unsigned long 
  4480 ;;  failureIndex    1   52[BANK1 ] unsigned char 
  4481 ;;  readAddress     4   48[BANK1 ] unsigned long 
  4482 ;;  writeAddress    4   37[BANK1 ] unsigned long 
  4483 ;;  storedCounte    4    7[BANK1 ] unsigned long 
  4484 ;;  address         4   41[BANK1 ] unsigned long 
  4485 ;;  endAddress      4   20[BANK1 ] unsigned long 
  4486 ;;  printedBlock    4   11[BANK1 ] unsigned long 
  4487 ;;  numBlocks       4    1[BANK1 ] unsigned long 
  4488 ;;  sdCardAddres    4   54[BANK1 ] unsigned long 
  4489 ;;  writeEndAddr    4   32[BANK1 ] unsigned long 
  4490 ;;  writeStartAd    4   24[BANK1 ] unsigned long 
  4491 ;;  i               2   46[BANK1 ] unsigned short 
  4492 ;;  status          1   53[BANK1 ] unsigned char 
  4493 ;;  cmd             1   45[BANK1 ] unsigned char 
  4494 ;;  letter          1    0        unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;      Locals:         0       0      62       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4506 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Totals:         0       4      62       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;Total ram usage:       66 bytes
  4509 ;; Hardware stack levels required when called:   14
  4510 ;; This function calls:
  4511 ;;		_EUSART1_Read
  4512 ;;		_EUSART1_is_rx_ready
  4513 ;;		_SDCARD_Initialize
  4514 ;;		_SDCARD_PollWriteComplete
  4515 ;;		_SDCARD_ReadBlock
  4516 ;;		_SDCARD_WriteBlock
  4517 ;;		_SPI2_Close
  4518 ;;		_SPI2_Open
  4519 ;;		_SYSTEM_Initialize
  4520 ;;		_TMR0_SetInterruptHandler
  4521 ;;		_TMR0_WriteTimer
  4522 ;;		_hexDumpBuffer
  4523 ;;		_incrementAddress
  4524 ;;		_printAscii
  4525 ;;		_printf
  4526 ;; This function is called by:
  4527 ;;		Startup code after reset
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text0
  4532  000052                     __ptext0:
  4533                           	callstack 0
  4534  000052                     _main:
  4535                           	callstack 17
  4536  000052                     
  4537                           ;main.c: 61:     uint8_t status;;main.c: 62:     uint16_t i;;main.c: 63:     uint32_t sd
      +                          CardAddress = 0x00000000;
  4538  000052  0E00               	movlw	0
  4539  000054  0101               	movlb	1	; () banked
  4540  000056  6FD6               	movwf	main@sdCardAddress& (0+255),b
  4541  000058  0E00               	movlw	0
  4542  00005A  6FD7               	movwf	(main@sdCardAddress+1)& (0+255),b
  4543  00005C  0E00               	movlw	0
  4544  00005E  6FD8               	movwf	(main@sdCardAddress+2)& (0+255),b
  4545  000060  0E00               	movlw	0
  4546  000062  6FD9               	movwf	(main@sdCardAddress+3)& (0+255),b
  4547                           
  4548                           ;main.c: 64:     uint32_t writeStartAddress = 0x00000000;
  4549  000064  0E00               	movlw	0
  4550  000066  6FB8               	movwf	main@writeStartAddress& (0+255),b
  4551  000068  0E00               	movlw	0
  4552  00006A  6FB9               	movwf	(main@writeStartAddress+1)& (0+255),b
  4553  00006C  0E00               	movlw	0
  4554  00006E  6FBA               	movwf	(main@writeStartAddress+2)& (0+255),b
  4555  000070  0E00               	movlw	0
  4556  000072  6FBB               	movwf	(main@writeStartAddress+3)& (0+255),b
  4557                           
  4558                           ;main.c: 65:     uint32_t writeEndAddress = 0x00000000;
  4559  000074  0E00               	movlw	0
  4560  000076  6FC0               	movwf	main@writeEndAddress& (0+255),b
  4561  000078  0E00               	movlw	0
  4562  00007A  6FC1               	movwf	(main@writeEndAddress+1)& (0+255),b
  4563  00007C  0E00               	movlw	0
  4564  00007E  6FC2               	movwf	(main@writeEndAddress+2)& (0+255),b
  4565  000080  0E00               	movlw	0
  4566  000082  6FC3               	movwf	(main@writeEndAddress+3)& (0+255),b
  4567  000084                     
  4568                           ; BSR set to: 1
  4569                           ;main.c: 70:     SYSTEM_Initialize();
  4570  000084  EC40  F01B         	call	_SYSTEM_Initialize	;wreg free
  4571  000088  888A               	bsf	138,4,c	;volatile
  4572  00008A                     
  4573                           ;main.c: 74:     TMR0_WriteTimer(0x0000);
  4574  00008A  0E00               	movlw	0
  4575  00008C  6E15               	movwf	(TMR0_WriteTimer@timerVal+1)^0,c
  4576  00008E  0E00               	movlw	0
  4577  000090  6E14               	movwf	TMR0_WriteTimer@timerVal^0,c
  4578  000092  ECD1  F01B         	call	_TMR0_WriteTimer	;wreg free
  4579  000096                     
  4580                           ;main.c: 75:     INTCONbits.TMR0IF = 0;
  4581  000096  94F2               	bcf	242,2,c	;volatile
  4582  000098                     l336:
  4583  000098  A4F2               	btfss	242,2,c	;volatile
  4584  00009A  EF51  F000         	goto	u5891
  4585  00009E  EF53  F000         	goto	u5890
  4586  0000A2                     u5891:
  4587  0000A2  EF4C  F000         	goto	l336
  4588  0000A6                     u5890:
  4589  0000A6                     
  4590                           ;main.c: 78:     TMR0_SetInterruptHandler(myTMR0ISR);
  4591  0000A6  0EF8               	movlw	low _myTMR0ISR
  4592  0000A8  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  4593  0000AA  0E1F               	movlw	high _myTMR0ISR
  4594  0000AC  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  4595  0000AE  ECD6  F01B         	call	_TMR0_SetInterruptHandler	;wreg free
  4596  0000B2                     
  4597                           ;main.c: 80:     (INTCONbits.GIE = 1);
  4598  0000B2  8EF2               	bsf	242,7,c	;volatile
  4599  0000B4                     
  4600                           ;main.c: 81:     (INTCONbits.PEIE = 1);
  4601  0000B4  8CF2               	bsf	242,6,c	;volatile
  4602  0000B6                     
  4603                           ;main.c: 83:     printAscii();
  4604  0000B6  ECFA  F010         	call	_printAscii	;wreg free
  4605  0000BA                     
  4606                           ;main.c: 85:     printf("Lab 10\r\n");
  4607  0000BA  0EBF               	movlw	low STR_1
  4608  0000BC  0100               	movlb	0	; () banked
  4609  0000BE  6FA6               	movwf	printf@fmt& (0+255),b
  4610  0000C0  0EFF               	movlw	high STR_1
  4611  0000C2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4612  0000C4  EC18  F01B         	call	_printf	;wreg free
  4613  0000C8                     
  4614                           ;main.c: 86:     printf("SD card + playback\r\n");
  4615  0000C8  0EE0               	movlw	low STR_2
  4616  0000CA  0100               	movlb	0	; () banked
  4617  0000CC  6FA6               	movwf	printf@fmt& (0+255),b
  4618  0000CE  0EFE               	movlw	high STR_2
  4619  0000D0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4620  0000D2  EC18  F01B         	call	_printf	;wreg free
  4621  0000D6                     
  4622                           ;main.c: 87:     printf("Dev'21\r\n");
  4623  0000D6  0EC8               	movlw	low STR_3
  4624  0000D8  0100               	movlb	0	; () banked
  4625  0000DA  6FA6               	movwf	printf@fmt& (0+255),b
  4626  0000DC  0EFF               	movlw	high STR_3
  4627  0000DE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4628  0000E0  EC18  F01B         	call	_printf	;wreg free
  4629  0000E4                     
  4630                           ;main.c: 88:     printf("No configuration of development board\r\n");
  4631  0000E4  0E60               	movlw	low STR_4
  4632  0000E6  0100               	movlb	0	; () banked
  4633  0000E8  6FA6               	movwf	printf@fmt& (0+255),b
  4634  0000EA  0EFC               	movlw	high STR_4
  4635  0000EC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4636  0000EE  EC18  F01B         	call	_printf	;wreg free
  4637  0000F2                     
  4638                           ;main.c: 90:     SPI2_Close();
  4639  0000F2  ECF6  F01B         	call	_SPI2_Close	;wreg free
  4640  0000F6                     
  4641                           ;main.c: 91:     SPI2_Open(SPI2_DEFAULT);
  4642  0000F6  0E00               	movlw	0
  4643  0000F8  EC90  F017         	call	_SPI2_Open
  4644  0000FC                     l6008:
  4645                           
  4646                           ;main.c: 94:         printf("> ");
  4647  0000FC  0EF9               	movlw	low STR_5
  4648  0000FE  0100               	movlb	0	; () banked
  4649  000100  6FA6               	movwf	printf@fmt& (0+255),b
  4650  000102  0EFF               	movlw	high STR_5
  4651  000104  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4652  000106  EC18  F01B         	call	_printf	;wreg free
  4653  00010A                     l6010:
  4654  00010A  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  4655  00010E  0900               	iorlw	0
  4656  000110  B4D8               	btfsc	status,2,c
  4657  000112  EF8D  F000         	goto	u5901
  4658  000116  EF8F  F000         	goto	u5900
  4659  00011A                     u5901:
  4660  00011A  EF85  F000         	goto	l6010
  4661  00011E                     u5900:
  4662  00011E                     
  4663                           ;main.c: 96:         cmd = EUSART1_Read();
  4664  00011E  EC2C  F01B         	call	_EUSART1_Read	;wreg free
  4665  000122  0101               	movlb	1	; () banked
  4666  000124  6FCD               	movwf	main@cmd& (0+255),b
  4667  000126                     
  4668                           ; BSR set to: 1
  4669                           ;main.c: 97:         printf("%c\r\n", cmd);
  4670  000126  0E7A               	movlw	low (STR_83+12)
  4671  000128  0100               	movlb	0	; () banked
  4672  00012A  6FA6               	movwf	printf@fmt& (0+255),b
  4673  00012C  0EFF               	movlw	high (STR_83+12)
  4674  00012E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4675  000130  C1CD  F0A8         	movff	main@cmd,?_printf+2
  4676  000134  6BA9               	clrf	(?_printf+3)& (0+255),b
  4677  000136  EC18  F01B         	call	_printf	;wreg free
  4678                           
  4679                           ;main.c: 98:         switch (cmd) {
  4680  00013A  EF0C  F009         	goto	l6386
  4681  00013E                     l6016:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;main.c: 104:                 printf("\r\n----------------------------------------------
      +                          ---\r\n");
  4685  00013E  0E40               	movlw	low STR_7
  4686  000140  6FA6               	movwf	printf@fmt& (0+255),b
  4687  000142  0EFB               	movlw	high STR_7
  4688  000144  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4689  000146  EC18  F01B         	call	_printf	;wreg free
  4690                           
  4691                           ;main.c: 105:                 printf("\tPlay length in blocks: %d\r\n", (writeEndAddress
      +                          -writeStartAddress)>>9);
  4692  00014A  0EB0               	movlw	low STR_8
  4693  00014C  0100               	movlb	0	; () banked
  4694  00014E  6FA6               	movwf	printf@fmt& (0+255),b
  4695  000150  0EFD               	movlw	high STR_8
  4696  000152  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4697  000154  0101               	movlb	1	; () banked
  4698  000156  51B8               	movf	main@writeStartAddress& (0+255),w,b
  4699  000158  5DC0               	subwf	main@writeEndAddress& (0+255),w,b
  4700  00015A  0100               	movlb	0	; () banked
  4701  00015C  6FBE               	movwf	??_main& (0+255),b
  4702  00015E  0101               	movlb	1	; () banked
  4703  000160  51B9               	movf	(main@writeStartAddress+1)& (0+255),w,b
  4704  000162  59C1               	subwfb	(main@writeEndAddress+1)& (0+255),w,b
  4705  000164  0100               	movlb	0	; () banked
  4706  000166  6FBF               	movwf	(??_main+1)& (0+255),b
  4707  000168  0101               	movlb	1	; () banked
  4708  00016A  51BA               	movf	(main@writeStartAddress+2)& (0+255),w,b
  4709  00016C  59C2               	subwfb	(main@writeEndAddress+2)& (0+255),w,b
  4710  00016E  0100               	movlb	0	; () banked
  4711  000170  6FC0               	movwf	(??_main+2)& (0+255),b
  4712  000172  0101               	movlb	1	; () banked
  4713  000174  51BB               	movf	(main@writeStartAddress+3)& (0+255),w,b
  4714  000176  59C3               	subwfb	(main@writeEndAddress+3)& (0+255),w,b
  4715  000178  0100               	movlb	0	; () banked
  4716  00017A  6FC1               	movwf	(??_main+3)& (0+255),b
  4717  00017C  0E0A               	movlw	10
  4718  00017E  EFC6  F000         	goto	u5910
  4719  000182                     u5915:
  4720  000182  90D8               	bcf	status,0,c
  4721  000184  33C1               	rrcf	(??_main+3)& (0+255),f,b
  4722  000186  33C0               	rrcf	(??_main+2)& (0+255),f,b
  4723  000188  33BF               	rrcf	(??_main+1)& (0+255),f,b
  4724  00018A  33BE               	rrcf	??_main& (0+255),f,b
  4725  00018C                     u5910:
  4726  00018C  2EE8               	decfsz	wreg,f,c
  4727  00018E  EFC1  F000         	goto	u5915
  4728  000192  C0BE  F0A8         	movff	??_main,?_printf+2
  4729  000196  C0BF  F0A9         	movff	??_main+1,?_printf+3
  4730  00019A  C0C0  F0AA         	movff	??_main+2,?_printf+4
  4731  00019E  C0C1  F0AB         	movff	??_main+3,?_printf+5
  4732  0001A2  EC18  F01B         	call	_printf	;wreg free
  4733                           
  4734                           ;main.c: 106:                 printf("\tsdCardAddress: ");
  4735  0001A6  0E90               	movlw	low STR_9
  4736  0001A8  0100               	movlb	0	; () banked
  4737  0001AA  6FA6               	movwf	printf@fmt& (0+255),b
  4738  0001AC  0EFF               	movlw	high STR_9
  4739  0001AE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4740  0001B0  EC18  F01B         	call	_printf	;wreg free
  4741                           
  4742                           ;main.c: 107:                 printf("%04x", sdCardAddress >> 16);
  4743  0001B4  0EED               	movlw	low STR_10
  4744  0001B6  0100               	movlb	0	; () banked
  4745  0001B8  6FA6               	movwf	printf@fmt& (0+255),b
  4746  0001BA  0EFF               	movlw	high STR_10
  4747  0001BC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4748  0001BE  C1D8  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  4749  0001C2  C1D9  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  4750  0001C6  6BAA               	clrf	(?_printf+4)& (0+255),b
  4751  0001C8  6BAB               	clrf	(?_printf+5)& (0+255),b
  4752  0001CA  EC18  F01B         	call	_printf	;wreg free
  4753                           
  4754                           ;main.c: 108:                 printf(":");
  4755  0001CE  0EFC               	movlw	low STR_11
  4756  0001D0  0100               	movlb	0	; () banked
  4757  0001D2  6FA6               	movwf	printf@fmt& (0+255),b
  4758  0001D4  0EFF               	movlw	high STR_11
  4759  0001D6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4760  0001D8  EC18  F01B         	call	_printf	;wreg free
  4761                           
  4762                           ;main.c: 109:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  4763  0001DC  0EED               	movlw	low STR_10
  4764  0001DE  0100               	movlb	0	; () banked
  4765  0001E0  6FA6               	movwf	printf@fmt& (0+255),b
  4766  0001E2  0EFF               	movlw	high STR_10
  4767  0001E4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4768  0001E6  0EFF               	movlw	255
  4769  0001E8  0101               	movlb	1	; () banked
  4770  0001EA  15D6               	andwf	main@sdCardAddress& (0+255),w,b
  4771  0001EC  0100               	movlb	0	; () banked
  4772  0001EE  6FA8               	movwf	(?_printf+2)& (0+255),b
  4773  0001F0  0EFF               	movlw	255
  4774  0001F2  0101               	movlb	1	; () banked
  4775  0001F4  15D7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  4776  0001F6  0100               	movlb	0	; () banked
  4777  0001F8  6FA9               	movwf	(?_printf+3)& (0+255),b
  4778  0001FA  0E00               	movlw	0
  4779  0001FC  0101               	movlb	1	; () banked
  4780  0001FE  15D8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  4781  000200  0100               	movlb	0	; () banked
  4782  000202  6FAA               	movwf	(?_printf+4)& (0+255),b
  4783  000204  0E00               	movlw	0
  4784  000206  0101               	movlb	1	; () banked
  4785  000208  15D9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  4786  00020A  0100               	movlb	0	; () banked
  4787  00020C  6FAB               	movwf	(?_printf+5)& (0+255),b
  4788  00020E  EC18  F01B         	call	_printf	;wreg free
  4789                           
  4790                           ;main.c: 110:                 printf("\r\n");
  4791  000212  0EAD               	movlw	low (STR_77+12)
  4792  000214  0100               	movlb	0	; () banked
  4793  000216  6FA6               	movwf	printf@fmt& (0+255),b
  4794  000218  0EFF               	movlw	high (STR_77+12)
  4795  00021A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4796  00021C  EC18  F01B         	call	_printf	;wreg free
  4797                           
  4798                           ;main.c: 111:                 printf("\tsample rate: %dus\r\n", sampleRate / 16);
  4799  000220  0E0A               	movlw	low STR_14
  4800  000222  0100               	movlb	0	; () banked
  4801  000224  6FA6               	movwf	printf@fmt& (0+255),b
  4802  000226  0EFF               	movlw	high STR_14
  4803  000228  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4804  00022A  C0D1  F0BE         	movff	_sampleRate,??_main
  4805  00022E  C0D2  F0BF         	movff	_sampleRate+1,??_main+1
  4806  000232  0E04               	movlw	4
  4807  000234  6FC0               	movwf	(??_main+2)& (0+255),b
  4808  000236                     u5925:
  4809  000236  90D8               	bcf	status,0,c
  4810  000238  33BF               	rrcf	(??_main+1)& (0+255),f,b
  4811  00023A  33BE               	rrcf	??_main& (0+255),f,b
  4812  00023C  2FC0               	decfsz	(??_main+2)& (0+255),f,b
  4813  00023E  EF1B  F001         	goto	u5925
  4814  000242  C0BE  F0A8         	movff	??_main,?_printf+2
  4815  000246  C0BF  F0A9         	movff	??_main+1,?_printf+3
  4816  00024A  EC18  F01B         	call	_printf	;wreg free
  4817                           
  4818                           ;main.c: 112:                 printf("-------------------------------------------------\
      +                          r\n");
  4819  00024E  0E42               	movlw	low (STR_7+2)
  4820  000250  0100               	movlb	0	; () banked
  4821  000252  6FA6               	movwf	printf@fmt& (0+255),b
  4822  000254  0EFB               	movlw	high (STR_7+2)
  4823  000256  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4824  000258  EC18  F01B         	call	_printf	;wreg free
  4825                           
  4826                           ;main.c: 113:                 printf("?: help menu\r\n");
  4827  00025C  0EB0               	movlw	low STR_16
  4828  00025E  0100               	movlb	0	; () banked
  4829  000260  6FA6               	movwf	printf@fmt& (0+255),b
  4830  000262  0EFF               	movlw	high STR_16
  4831  000264  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4832  000266  EC18  F01B         	call	_printf	;wreg free
  4833                           
  4834                           ;main.c: 114:                 printf("o: k\r\n");
  4835  00026A  0ED9               	movlw	low STR_17
  4836  00026C  0100               	movlb	0	; () banked
  4837  00026E  6FA6               	movwf	printf@fmt& (0+255),b
  4838  000270  0EFF               	movlw	high STR_17
  4839  000272  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4840  000274  EC18  F01B         	call	_printf	;wreg free
  4841                           
  4842                           ;main.c: 115:                 printf("Z: Reset processor\r\n");
  4843  000278  0EF5               	movlw	low STR_18
  4844  00027A  0100               	movlb	0	; () banked
  4845  00027C  6FA6               	movwf	printf@fmt& (0+255),b
  4846  00027E  0EFE               	movlw	high STR_18
  4847  000280  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4848  000282  EC18  F01B         	call	_printf	;wreg free
  4849                           
  4850                           ;main.c: 116:                 printf("z: Clear the terminal\r\n");
  4851  000286  0E86               	movlw	low STR_19
  4852  000288  0100               	movlb	0	; () banked
  4853  00028A  6FA6               	movwf	printf@fmt& (0+255),b
  4854  00028C  0EFE               	movlw	high STR_19
  4855  00028E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4856  000290  EC18  F01B         	call	_printf	;wreg free
  4857                           
  4858                           ;main.c: 117:                 printf("-------------------------------------------------\
      +                          r\n");
  4859  000294  0E42               	movlw	low (STR_7+2)
  4860  000296  0100               	movlb	0	; () banked
  4861  000298  6FA6               	movwf	printf@fmt& (0+255),b
  4862  00029A  0EFB               	movlw	high (STR_7+2)
  4863  00029C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4864  00029E  EC18  F01B         	call	_printf	;wreg free
  4865                           
  4866                           ;main.c: 118:                 printf("i: Initialize SD card\r\n");
  4867  0002A2  0E6E               	movlw	low STR_21
  4868  0002A4  0100               	movlb	0	; () banked
  4869  0002A6  6FA6               	movwf	printf@fmt& (0+255),b
  4870  0002A8  0EFE               	movlw	high STR_21
  4871  0002AA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4872  0002AC  EC18  F01B         	call	_printf	;wreg free
  4873                           
  4874                           ;main.c: 119:                 printf("-------------------------------------------------\
      +                          r\n");
  4875  0002B0  0E42               	movlw	low (STR_7+2)
  4876  0002B2  0100               	movlb	0	; () banked
  4877  0002B4  6FA6               	movwf	printf@fmt& (0+255),b
  4878  0002B6  0EFB               	movlw	high (STR_7+2)
  4879  0002B8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4880  0002BA  EC18  F01B         	call	_printf	;wreg free
  4881                           
  4882                           ;main.c: 120:                 printf("a/A decrease/increase read address\r\n");
  4883  0002BE  0EAD               	movlw	low STR_23
  4884  0002C0  0100               	movlb	0	; () banked
  4885  0002C2  6FA6               	movwf	printf@fmt& (0+255),b
  4886  0002C4  0EFC               	movlw	high STR_23
  4887  0002C6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4888  0002C8  EC18  F01B         	call	_printf	;wreg free
  4889                           
  4890                           ;main.c: 121:                 printf("r: read a block of %d bytes from SD card\r\n", 512
      +                          );
  4891  0002CC  0E35               	movlw	low STR_24
  4892  0002CE  0100               	movlb	0	; () banked
  4893  0002D0  6FA6               	movwf	printf@fmt& (0+255),b
  4894  0002D2  0EFC               	movlw	high STR_24
  4895  0002D4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4896  0002D6  0E02               	movlw	2
  4897  0002D8  6FA9               	movwf	(?_printf+3)& (0+255),b
  4898  0002DA  0E00               	movlw	0
  4899  0002DC  6FA8               	movwf	(?_printf+2)& (0+255),b
  4900  0002DE  EC18  F01B         	call	_printf	;wreg free
  4901                           
  4902                           ;main.c: 122:                 printf("1: write a perfect 26 value sine wave to the SD ca
      +                          rd\r\n", 512);
  4903  0002E2  0E09               	movlw	low STR_25
  4904  0002E4  0100               	movlb	0	; () banked
  4905  0002E6  6FA6               	movwf	printf@fmt& (0+255),b
  4906  0002E8  0EFB               	movlw	high STR_25
  4907  0002EA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4908  0002EC  0E02               	movlw	2
  4909  0002EE  6FA9               	movwf	(?_printf+3)& (0+255),b
  4910  0002F0  0E00               	movlw	0
  4911  0002F2  6FA8               	movwf	(?_printf+2)& (0+255),b
  4912  0002F4  EC18  F01B         	call	_printf	;wreg free
  4913                           
  4914                           ;main.c: 123:                 printf("-------------------------------------------------\
      +                          r\n");
  4915  0002F8  0E42               	movlw	low (STR_7+2)
  4916  0002FA  0100               	movlb	0	; () banked
  4917  0002FC  6FA6               	movwf	printf@fmt& (0+255),b
  4918  0002FE  0EFB               	movlw	high (STR_7+2)
  4919  000300  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4920  000302  EC18  F01B         	call	_printf	;wreg free
  4921                           
  4922                           ;main.c: 124:                 printf("+/- Increase/Decrease the sample rate by 10 us\r\n
      +                          ");
  4923  000306  0EA8               	movlw	low STR_27
  4924  000308  0100               	movlb	0	; () banked
  4925  00030A  6FA6               	movwf	printf@fmt& (0+255),b
  4926  00030C  0EFB               	movlw	high STR_27
  4927  00030E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4928  000310  EC18  F01B         	call	_printf	;wreg free
  4929                           
  4930                           ;main.c: 125:                 printf("W: Write microphone => SD card at 1600 us\r\n");
  4931  000314  0E09               	movlw	low STR_28
  4932  000316  0100               	movlb	0	; () banked
  4933  000318  6FA6               	movwf	printf@fmt& (0+255),b
  4934  00031A  0EFC               	movlw	high STR_28
  4935  00031C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4936  00031E  EC18  F01B         	call	_printf	;wreg free
  4937                           
  4938                           ;main.c: 126:                 printf("s: spool memory to a csv file\r\n");
  4939  000322  0E16               	movlw	low STR_29
  4940  000324  0100               	movlb	0	; () banked
  4941  000326  6FA6               	movwf	printf@fmt& (0+255),b
  4942  000328  0EFD               	movlw	high STR_29
  4943  00032A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4944  00032C  EC18  F01B         	call	_printf	;wreg free
  4945                           
  4946                           ;main.c: 127:                 printf("-------------------------------------------------\
      +                          r\n");
  4947  000330  0E42               	movlw	low (STR_7+2)
  4948  000332  0100               	movlb	0	; () banked
  4949  000334  6FA6               	movwf	printf@fmt& (0+255),b
  4950  000336  0EFB               	movlw	high (STR_7+2)
  4951  000338  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4952  00033A  EC18  F01B         	call	_printf	;wreg free
  4953                           
  4954                           ;main.c: 128:                 break;
  4955  00033E  EF7E  F000         	goto	l6008
  4956  000342                     l6018:
  4957                           
  4958                           ; BSR set to: 0
  4959                           ;main.c: 134:                 printf("o:	ok\r\n");
  4960  000342  0ED1               	movlw	low STR_31
  4961  000344  6FA6               	movwf	printf@fmt& (0+255),b
  4962  000346  0EFF               	movlw	high STR_31
  4963  000348  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4964  00034A  EC18  F01B         	call	_printf	;wreg free
  4965                           
  4966                           ;main.c: 135:                 break;
  4967  00034E  EF7E  F000         	goto	l6008
  4968  000352                     l6020:
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;main.c: 141:                 for (i = 0; i < 40; i++) printf("\n");
  4972  000352  0E00               	movlw	0
  4973  000354  0101               	movlb	1	; () banked
  4974  000356  6FCF               	movwf	(main@i+1)& (0+255),b
  4975  000358  0E00               	movlw	0
  4976  00035A  6FCE               	movwf	main@i& (0+255),b
  4977  00035C                     l6022:
  4978                           
  4979                           ; BSR set to: 1
  4980  00035C  51CF               	movf	(main@i+1)& (0+255),w,b
  4981  00035E  E109               	bnz	u5930
  4982  000360  0E28               	movlw	40
  4983  000362  5DCE               	subwf	main@i& (0+255),w,b
  4984  000364  A0D8               	btfss	status,0,c
  4985  000366  EFB7  F001         	goto	u5931
  4986  00036A  EFB9  F001         	goto	u5930
  4987  00036E                     u5931:
  4988  00036E  EFBB  F001         	goto	l6026
  4989  000372                     u5930:
  4990  000372  EFC7  F001         	goto	l349
  4991  000376                     l6026:
  4992                           
  4993                           ; BSR set to: 1
  4994  000376  0EF4               	movlw	low (STR_122+2)
  4995  000378  0100               	movlb	0	; () banked
  4996  00037A  6FA6               	movwf	printf@fmt& (0+255),b
  4997  00037C  0EFF               	movlw	high (STR_122+2)
  4998  00037E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  4999  000380  EC18  F01B         	call	_printf	;wreg free
  5000  000384  0101               	movlb	1	; () banked
  5001  000386  4BCE               	infsnz	main@i& (0+255),f,b
  5002  000388  2BCF               	incf	(main@i+1)& (0+255),f,b
  5003  00038A  EFAE  F001         	goto	l6022
  5004  00038E                     l349:
  5005                           
  5006                           ; BSR set to: 1
  5007  00038E  00FF               	reset		;# 
  5008                           
  5009                           ;main.c: 143:                 break;
  5010  000390  EF7E  F000         	goto	l6008
  5011  000394                     l6032:
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;main.c: 149:                 for (i = 0; i < 40; i++) printf("\n");
  5015  000394  0E00               	movlw	0
  5016  000396  0101               	movlb	1	; () banked
  5017  000398  6FCF               	movwf	(main@i+1)& (0+255),b
  5018  00039A  0E00               	movlw	0
  5019  00039C  6FCE               	movwf	main@i& (0+255),b
  5020  00039E                     l6034:
  5021                           
  5022                           ; BSR set to: 1
  5023  00039E  51CF               	movf	(main@i+1)& (0+255),w,b
  5024  0003A0  E109               	bnz	u5940
  5025  0003A2  0E28               	movlw	40
  5026  0003A4  5DCE               	subwf	main@i& (0+255),w,b
  5027  0003A6  A0D8               	btfss	status,0,c
  5028  0003A8  EFD8  F001         	goto	u5941
  5029  0003AC  EFDA  F001         	goto	u5940
  5030  0003B0                     u5941:
  5031  0003B0  EFDC  F001         	goto	l6038
  5032  0003B4                     u5940:
  5033  0003B4  EF7E  F000         	goto	l6008
  5034  0003B8                     l6038:
  5035                           
  5036                           ; BSR set to: 1
  5037  0003B8  0EF4               	movlw	low (STR_122+2)
  5038  0003BA  0100               	movlb	0	; () banked
  5039  0003BC  6FA6               	movwf	printf@fmt& (0+255),b
  5040  0003BE  0EFF               	movlw	high (STR_122+2)
  5041  0003C0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5042  0003C2  EC18  F01B         	call	_printf	;wreg free
  5043  0003C6  0101               	movlb	1	; () banked
  5044  0003C8  4BCE               	infsnz	main@i& (0+255),f,b
  5045  0003CA  2BCF               	incf	(main@i+1)& (0+255),f,b
  5046  0003CC  EFCF  F001         	goto	l6034
  5047  0003D0                     l353:
  5048                           
  5049                           ; BSR set to: 0
  5050                           ;main.c: 153:                 static uint8_t sinIndex = 0;;main.c: 154:                 
      +                          uint32_t writeAddress = sdCardAddress;
  5051  0003D0  C1D6  F1C5         	movff	main@sdCardAddress,main@writeAddress
  5052  0003D4  C1D7  F1C6         	movff	main@sdCardAddress+1,main@writeAddress+1
  5053  0003D8  C1D8  F1C7         	movff	main@sdCardAddress+2,main@writeAddress+2
  5054  0003DC  C1D9  F1C8         	movff	main@sdCardAddress+3,main@writeAddress+3
  5055  0003E0                     l6044:
  5056  0003E0  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5057  0003E4  0900               	iorlw	0
  5058  0003E6  B4D8               	btfsc	status,2,c
  5059  0003E8  EFF8  F001         	goto	u5951
  5060  0003EC  EFFA  F001         	goto	u5950
  5061  0003F0                     u5951:
  5062  0003F0  EFF0  F001         	goto	l6044
  5063  0003F4                     u5950:
  5064  0003F4                     
  5065                           ;main.c: 157:                 EUSART1_Read();
  5066  0003F4  EC2C  F01B         	call	_EUSART1_Read	;wreg free
  5067  0003F8                     
  5068                           ;main.c: 160:                 for (uint8_t j = 0; j <128 && !(EUSART1_is_rx_ready()); j+
      +                          + ){
  5069  0003F8  0E00               	movlw	0
  5070  0003FA  0101               	movlb	1	; () banked
  5071  0003FC  6FAF               	movwf	main@j& (0+255),b
  5072  0003FE  EF6B  F002         	goto	l6076
  5073  000402                     l6050:
  5074                           
  5075                           ;main.c: 161:                     for (uint16_t i = 0; i < 512; i++) {
  5076  000402  0E00               	movlw	0
  5077  000404  0101               	movlb	1	; () banked
  5078  000406  6FBD               	movwf	(main@i_922+1)& (0+255),b
  5079  000408  0E00               	movlw	0
  5080  00040A  6FBC               	movwf	main@i_922& (0+255),b
  5081  00040C                     l6052:
  5082                           
  5083                           ; BSR set to: 1
  5084  00040C  0E02               	movlw	2
  5085  00040E  5DBD               	subwf	(main@i_922+1)& (0+255),w,b
  5086  000410  A0D8               	btfss	status,0,c
  5087  000412  EF0D  F002         	goto	u5961
  5088  000416  EF0F  F002         	goto	u5960
  5089  00041A                     u5961:
  5090  00041A  EF11  F002         	goto	l6056
  5091  00041E                     u5960:
  5092  00041E  EF36  F002         	goto	l6066
  5093  000422                     l6056:
  5094                           
  5095                           ; BSR set to: 1
  5096                           ;main.c: 162:                         sdCardBuffer[i] = sin[sinIndex];
  5097  000422  0EFB               	movlw	low _sin
  5098  000424  0100               	movlb	0	; () banked
  5099  000426  25CC               	addwf	main@sinIndex& (0+255),w,b
  5100  000428  6EF6               	movwf	tblptrl,c
  5101  00042A  6AF7               	clrf	tblptrh,c
  5102  00042C  0EF2               	movlw	high _sin
  5103  00042E  22F7               	addwfc	tblptrh,f,c
  5104  000430                     	if	1	;There are 3 active tblptr bytes
  5105  000430  6AF8               	clrf	tblptru,c
  5106  000432  0E00               	movlw	low (__mediumconst shr (0+16))
  5107  000434  22F8               	addwfc	tblptru,f,c
  5108  000436                     	endif
  5109  000436  0EDE               	movlw	low _sdCardBuffer
  5110  000438  0101               	movlb	1	; () banked
  5111  00043A  25BC               	addwf	main@i_922& (0+255),w,b
  5112  00043C  6ED9               	movwf	fsr2l,c
  5113  00043E  0E07               	movlw	high _sdCardBuffer
  5114  000440  21BD               	addwfc	(main@i_922+1)& (0+255),w,b
  5115  000442  6EDA               	movwf	fsr2h,c
  5116  000444  0008               	tblrd		*
  5117  000446  CFF5 FFDF          	movff	tablat,indf2
  5118  00044A                     
  5119                           ; BSR set to: 1
  5120                           ;main.c: 163:                         if (++sinIndex >= sizeof(sin))
  5121  00044A  0100               	movlb	0	; () banked
  5122  00044C  2BCC               	incf	main@sinIndex& (0+255),f,b
  5123  00044E  0E19               	movlw	25
  5124  000450  65CC               	cpfsgt	main@sinIndex& (0+255),b
  5125  000452  EF2D  F002         	goto	u5971
  5126  000456  EF2F  F002         	goto	u5970
  5127  00045A                     u5971:
  5128  00045A  EF31  F002         	goto	l6062
  5129  00045E                     u5970:
  5130  00045E                     
  5131                           ; BSR set to: 0
  5132                           ;main.c: 164:                             sinIndex = 0;
  5133  00045E  0E00               	movlw	0
  5134  000460  6FCC               	movwf	main@sinIndex& (0+255),b
  5135  000462                     l6062:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;main.c: 166:                     }
  5139  000462  0101               	movlb	1	; () banked
  5140  000464  4BBC               	infsnz	main@i_922& (0+255),f,b
  5141  000466  2BBD               	incf	(main@i_922+1)& (0+255),f,b
  5142  000468  EF06  F002         	goto	l6052
  5143  00046C                     l6066:
  5144                           
  5145                           ; BSR set to: 1
  5146                           ;main.c: 167:                     printf(".");
  5147  00046C  0E63               	movlw	low (STR_43+74)
  5148  00046E  0100               	movlb	0	; () banked
  5149  000470  6FA6               	movwf	printf@fmt& (0+255),b
  5150  000472  0EF3               	movlw	high (STR_43+74)
  5151  000474  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5152  000476  EC18  F01B         	call	_printf	;wreg free
  5153  00047A                     
  5154                           ;main.c: 168:                     SDCARD_WriteBlock(writeAddress, sdCardBuffer);
  5155  00047A  C1C5  F015         	movff	main@writeAddress,SDCARD_WriteBlock@addr
  5156  00047E  C1C6  F016         	movff	main@writeAddress+1,SDCARD_WriteBlock@addr+1
  5157  000482  C1C7  F017         	movff	main@writeAddress+2,SDCARD_WriteBlock@addr+2
  5158  000486  C1C8  F018         	movff	main@writeAddress+3,SDCARD_WriteBlock@addr+3
  5159  00048A  0EDE               	movlw	low _sdCardBuffer
  5160  00048C  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5161  00048E  0E07               	movlw	high _sdCardBuffer
  5162  000490  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5163  000492  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  5164  000496                     l6070:
  5165  000496  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5166  00049A  0101               	movlb	1	; () banked
  5167  00049C  6FD5               	movwf	main@status& (0+255),b
  5168  00049E  29D5               	incf	main@status& (0+255),w,b
  5169  0004A0  B4D8               	btfsc	status,2,c
  5170  0004A2  EF55  F002         	goto	u5981
  5171  0004A6  EF57  F002         	goto	u5980
  5172  0004AA                     u5981:
  5173  0004AA  EF4B  F002         	goto	l6070
  5174  0004AE                     u5980:
  5175  0004AE                     
  5176                           ; BSR set to: 1
  5177                           ;main.c: 170:                     writeAddress = incrementAddress(writeAddress);
  5178  0004AE  C1C5  F014         	movff	main@writeAddress,incrementAddress@sdCardAddress
  5179  0004B2  C1C6  F015         	movff	main@writeAddress+1,incrementAddress@sdCardAddress+1
  5180  0004B6  C1C7  F016         	movff	main@writeAddress+2,incrementAddress@sdCardAddress+2
  5181  0004BA  C1C8  F017         	movff	main@writeAddress+3,incrementAddress@sdCardAddress+3
  5182  0004BE  EC88  F019         	call	_incrementAddress	;wreg free
  5183  0004C2  C014  F1C5         	movff	?_incrementAddress,main@writeAddress
  5184  0004C6  C015  F1C6         	movff	?_incrementAddress+1,main@writeAddress+1
  5185  0004CA  C016  F1C7         	movff	?_incrementAddress+2,main@writeAddress+2
  5186  0004CE  C017  F1C8         	movff	?_incrementAddress+3,main@writeAddress+3
  5187  0004D2                     
  5188                           ;main.c: 171:                 }
  5189  0004D2  0101               	movlb	1	; () banked
  5190  0004D4  2BAF               	incf	main@j& (0+255),f,b
  5191  0004D6                     l6076:
  5192                           
  5193                           ; BSR set to: 1
  5194  0004D6  0E80               	movlw	128
  5195  0004D8  61AF               	cpfslt	main@j& (0+255),b
  5196  0004DA  EF71  F002         	goto	u5991
  5197  0004DE  EF73  F002         	goto	u5990
  5198  0004E2                     u5991:
  5199  0004E2  EF7D  F002         	goto	l369
  5200  0004E6                     u5990:
  5201  0004E6                     
  5202                           ; BSR set to: 1
  5203  0004E6  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5204  0004EA  0900               	iorlw	0
  5205  0004EC  B4D8               	btfsc	status,2,c
  5206  0004EE  EF7B  F002         	goto	u6001
  5207  0004F2  EF7D  F002         	goto	u6000
  5208  0004F6                     u6001:
  5209  0004F6  EF01  F002         	goto	l6050
  5210  0004FA                     u6000:
  5211  0004FA                     l369:
  5212                           
  5213                           ;main.c: 173:                 writeEndAddress = writeAddress;
  5214  0004FA  C1C5  F1C0         	movff	main@writeAddress,main@writeEndAddress
  5215  0004FE  C1C6  F1C1         	movff	main@writeAddress+1,main@writeEndAddress+1
  5216  000502  C1C7  F1C2         	movff	main@writeAddress+2,main@writeEndAddress+2
  5217  000506  C1C8  F1C3         	movff	main@writeAddress+3,main@writeEndAddress+3
  5218  00050A                     
  5219                           ;main.c: 174:                 uint32_t storedCounter = writeAddress - sdCardAddress;
  5220  00050A  0101               	movlb	1	; () banked
  5221  00050C  51D6               	movf	main@sdCardAddress& (0+255),w,b
  5222  00050E  5DC5               	subwf	main@writeAddress& (0+255),w,b
  5223  000510  6FA7               	movwf	main@storedCounter& (0+255),b
  5224  000512  51D7               	movf	(main@sdCardAddress+1)& (0+255),w,b
  5225  000514  59C6               	subwfb	(main@writeAddress+1)& (0+255),w,b
  5226  000516  6FA8               	movwf	(main@storedCounter+1)& (0+255),b
  5227  000518  51D8               	movf	(main@sdCardAddress+2)& (0+255),w,b
  5228  00051A  59C7               	subwfb	(main@writeAddress+2)& (0+255),w,b
  5229  00051C  6FA9               	movwf	(main@storedCounter+2)& (0+255),b
  5230  00051E  51D9               	movf	(main@sdCardAddress+3)& (0+255),w,b
  5231  000520  59C8               	subwfb	(main@writeAddress+3)& (0+255),w,b
  5232  000522  6FAA               	movwf	(main@storedCounter+3)& (0+255),b
  5233                           
  5234                           ;main.c: 175:                 storedCounter >>= 9;
  5235  000524  0E09               	movlw	9
  5236  000526  0100               	movlb	0	; () banked
  5237  000528  6FBE               	movwf	??_main& (0+255),b
  5238  00052A                     u6015:
  5239  00052A  90D8               	bcf	status,0,c
  5240  00052C  0101               	movlb	1	; () banked
  5241  00052E  33AA               	rrcf	(main@storedCounter+3)& (0+255),f,b
  5242  000530  33A9               	rrcf	(main@storedCounter+2)& (0+255),f,b
  5243  000532  33A8               	rrcf	(main@storedCounter+1)& (0+255),f,b
  5244  000534  33A7               	rrcf	main@storedCounter& (0+255),f,b
  5245  000536  0100               	movlb	0	; () banked
  5246  000538  2FBE               	decfsz	??_main& (0+255),f,b
  5247  00053A  EF95  F002         	goto	u6015
  5248  00053E                     
  5249                           ; BSR set to: 0
  5250                           ;main.c: 177:                 printf("Write block sin wave values:\r\n");
  5251  00053E  0E36               	movlw	low STR_35
  5252  000540  6FA6               	movwf	printf@fmt& (0+255),b
  5253  000542  0EFD               	movlw	high STR_35
  5254  000544  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5255  000546  EC18  F01B         	call	_printf	;wreg free
  5256  00054A                     
  5257                           ;main.c: 178:                 printf("Amount of blocks stored: %d\r\n", storedCounter) ;
  5258  00054A  0E74               	movlw	low STR_36
  5259  00054C  0100               	movlb	0	; () banked
  5260  00054E  6FA6               	movwf	printf@fmt& (0+255),b
  5261  000550  0EFD               	movlw	high STR_36
  5262  000552  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5263  000554  C1A7  F0A8         	movff	main@storedCounter,?_printf+2
  5264  000558  C1A8  F0A9         	movff	main@storedCounter+1,?_printf+3
  5265  00055C  C1A9  F0AA         	movff	main@storedCounter+2,?_printf+4
  5266  000560  C1AA  F0AB         	movff	main@storedCounter+3,?_printf+5
  5267  000564  EC18  F01B         	call	_printf	;wreg free
  5268  000568                     
  5269                           ;main.c: 179:                 printf("    Address:    ");
  5270  000568  0E7F               	movlw	low STR_37
  5271  00056A  0100               	movlb	0	; () banked
  5272  00056C  6FA6               	movwf	printf@fmt& (0+255),b
  5273  00056E  0EFF               	movlw	high STR_37
  5274  000570  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5275  000572  EC18  F01B         	call	_printf	;wreg free
  5276  000576                     
  5277                           ;main.c: 180:                 printf("%04x", sdCardAddress >> 16);
  5278  000576  0EED               	movlw	low STR_10
  5279  000578  0100               	movlb	0	; () banked
  5280  00057A  6FA6               	movwf	printf@fmt& (0+255),b
  5281  00057C  0EFF               	movlw	high STR_10
  5282  00057E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5283  000580  C1D8  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  5284  000584  C1D9  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  5285  000588  6BAA               	clrf	(?_printf+4)& (0+255),b
  5286  00058A  6BAB               	clrf	(?_printf+5)& (0+255),b
  5287  00058C  EC18  F01B         	call	_printf	;wreg free
  5288  000590                     
  5289                           ;main.c: 181:                 printf(":");
  5290  000590  0EFC               	movlw	low STR_11
  5291  000592  0100               	movlb	0	; () banked
  5292  000594  6FA6               	movwf	printf@fmt& (0+255),b
  5293  000596  0EFF               	movlw	high STR_11
  5294  000598  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5295  00059A  EC18  F01B         	call	_printf	;wreg free
  5296  00059E                     
  5297                           ;main.c: 182:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  5298  00059E  0EED               	movlw	low STR_10
  5299  0005A0  0100               	movlb	0	; () banked
  5300  0005A2  6FA6               	movwf	printf@fmt& (0+255),b
  5301  0005A4  0EFF               	movlw	high STR_10
  5302  0005A6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5303  0005A8  0EFF               	movlw	255
  5304  0005AA  0101               	movlb	1	; () banked
  5305  0005AC  15D6               	andwf	main@sdCardAddress& (0+255),w,b
  5306  0005AE  0100               	movlb	0	; () banked
  5307  0005B0  6FA8               	movwf	(?_printf+2)& (0+255),b
  5308  0005B2  0EFF               	movlw	255
  5309  0005B4  0101               	movlb	1	; () banked
  5310  0005B6  15D7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  5311  0005B8  0100               	movlb	0	; () banked
  5312  0005BA  6FA9               	movwf	(?_printf+3)& (0+255),b
  5313  0005BC  0E00               	movlw	0
  5314  0005BE  0101               	movlb	1	; () banked
  5315  0005C0  15D8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  5316  0005C2  0100               	movlb	0	; () banked
  5317  0005C4  6FAA               	movwf	(?_printf+4)& (0+255),b
  5318  0005C6  0E00               	movlw	0
  5319  0005C8  0101               	movlb	1	; () banked
  5320  0005CA  15D9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  5321  0005CC  0100               	movlb	0	; () banked
  5322  0005CE  6FAB               	movwf	(?_printf+5)& (0+255),b
  5323  0005D0  EC18  F01B         	call	_printf	;wreg free
  5324  0005D4                     
  5325                           ;main.c: 183:                 printf("\r\n");
  5326  0005D4  0EAD               	movlw	low (STR_77+12)
  5327  0005D6  0100               	movlb	0	; () banked
  5328  0005D8  6FA6               	movwf	printf@fmt& (0+255),b
  5329  0005DA  0EFF               	movlw	high (STR_77+12)
  5330  0005DC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5331  0005DE  EC18  F01B         	call	_printf	;wreg free
  5332  0005E2                     
  5333                           ;main.c: 184:                 printf("    Status:     %02x\r\n", status);
  5334  0005E2  0E9E               	movlw	low STR_42
  5335  0005E4  0100               	movlb	0	; () banked
  5336  0005E6  6FA6               	movwf	printf@fmt& (0+255),b
  5337  0005E8  0EFE               	movlw	high STR_42
  5338  0005EA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5339  0005EC  C1D5  F0A8         	movff	main@status,?_printf+2
  5340  0005F0  6BA9               	clrf	(?_printf+3)& (0+255),b
  5341  0005F2  EC18  F01B         	call	_printf	;wreg free
  5342                           
  5343                           ;main.c: 185:             };main.c: 186:                 break;
  5344  0005F6  EF7E  F000         	goto	l6008
  5345  0005FA                     l6098:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;main.c: 189:                 sampleRate = sampleRate + 160;
  5349  0005FA  0EA0               	movlw	160
  5350  0005FC  25D1               	addwf	_sampleRate& (0+255),w,b
  5351  0005FE  6FD1               	movwf	_sampleRate& (0+255),b
  5352  000600  0E00               	movlw	0
  5353  000602  21D2               	addwfc	(_sampleRate+1)& (0+255),w,b
  5354  000604  6FD2               	movwf	(_sampleRate+1)& (0+255),b
  5355                           
  5356                           ;main.c: 190:                 break;
  5357  000606  EF7E  F000         	goto	l6008
  5358  00060A                     l6100:
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;main.c: 193:                 if (sampleRate > 320 ) {
  5362  00060A  0E41               	movlw	65
  5363  00060C  5DD1               	subwf	_sampleRate& (0+255),w,b
  5364  00060E  0E01               	movlw	1
  5365  000610  59D2               	subwfb	(_sampleRate+1)& (0+255),w,b
  5366  000612  A0D8               	btfss	status,0,c
  5367  000614  EF0E  F003         	goto	u6021
  5368  000618  EF10  F003         	goto	u6020
  5369  00061C                     u6021:
  5370  00061C  EF7E  F000         	goto	l6008
  5371  000620                     u6020:
  5372  000620                     
  5373                           ; BSR set to: 0
  5374                           ;main.c: 194:                     sampleRate = sampleRate - 160;
  5375  000620  0E60               	movlw	96
  5376  000622  25D1               	addwf	_sampleRate& (0+255),w,b
  5377  000624  6FD1               	movwf	_sampleRate& (0+255),b
  5378  000626  0EFF               	movlw	255
  5379  000628  21D2               	addwfc	(_sampleRate+1)& (0+255),w,b
  5380  00062A  6FD2               	movwf	(_sampleRate+1)& (0+255),b
  5381                           
  5382                           ;main.c: 195:                 } else {
  5383  00062C  EF7E  F000         	goto	l6008
  5384  000630                     l374:
  5385                           
  5386                           ; BSR set to: 0
  5387                           ;main.c: 201:                 uint32_t readAddress = writeStartAddress;
  5388  000630  C1B8  F1D0         	movff	main@writeStartAddress,main@readAddress
  5389  000634  C1B9  F1D1         	movff	main@writeStartAddress+1,main@readAddress+1
  5390  000638  C1BA  F1D2         	movff	main@writeStartAddress+2,main@readAddress+2
  5391  00063C  C1BB  F1D3         	movff	main@writeStartAddress+3,main@readAddress+3
  5392  000640                     
  5393                           ; BSR set to: 0
  5394                           ;main.c: 202:                 buffer1Full = 0;
  5395  000640  0E00               	movlw	0
  5396  000642  6FD0               	movwf	_buffer1Full& (0+255),b
  5397                           
  5398                           ;main.c: 203:                 buffer2Full = 0;
  5399  000644  0E00               	movlw	0
  5400  000646  6FCF               	movwf	_buffer2Full& (0+255),b
  5401                           
  5402                           ;main.c: 204:                 doPlayback = 1;
  5403  000648  0E01               	movlw	1
  5404  00064A  6FCD               	movwf	_doPlayback& (0+255),b
  5405                           
  5406                           ;main.c: 205:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5407  00064C  EF80  F003         	goto	l6122
  5408  000650                     l6106:
  5409  000650  0100               	movlb	0	; () banked
  5410  000652  51D0               	movf	_buffer1Full& (0+255),w,b
  5411  000654  A4D8               	btfss	status,2,c
  5412  000656  EF2F  F003         	goto	u6031
  5413  00065A  EF31  F003         	goto	u6030
  5414  00065E                     u6031:
  5415  00065E  EF28  F003         	goto	l6106
  5416  000662                     u6030:
  5417  000662                     
  5418                           ; BSR set to: 0
  5419                           ;main.c: 207:                     SDCARD_ReadBlock(readAddress, sdCardBuffer1);
  5420  000662  C1D0  F015         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5421  000666  C1D1  F016         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5422  00066A  C1D2  F017         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5423  00066E  C1D3  F018         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5424  000672  0EDE               	movlw	low _sdCardBuffer1
  5425  000674  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5426  000676  0E05               	movlw	high _sdCardBuffer1
  5427  000678  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5428  00067A  ECE6  F017         	call	_SDCARD_ReadBlock	;wreg free
  5429  00067E                     
  5430                           ;main.c: 208:                     buffer1Full = 1;
  5431  00067E  0E01               	movlw	1
  5432  000680  0100               	movlb	0	; () banked
  5433  000682  6FD0               	movwf	_buffer1Full& (0+255),b
  5434  000684                     
  5435                           ; BSR set to: 0
  5436                           ;main.c: 209:                     readAddress = incrementAddress(readAddress);
  5437  000684  C1D0  F014         	movff	main@readAddress,incrementAddress@sdCardAddress
  5438  000688  C1D1  F015         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5439  00068C  C1D2  F016         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5440  000690  C1D3  F017         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5441  000694  EC88  F019         	call	_incrementAddress	;wreg free
  5442  000698  C014  F1D0         	movff	?_incrementAddress,main@readAddress
  5443  00069C  C015  F1D1         	movff	?_incrementAddress+1,main@readAddress+1
  5444  0006A0  C016  F1D2         	movff	?_incrementAddress+2,main@readAddress+2
  5445  0006A4  C017  F1D3         	movff	?_incrementAddress+3,main@readAddress+3
  5446  0006A8                     l6114:
  5447  0006A8  0100               	movlb	0	; () banked
  5448  0006AA  51CF               	movf	_buffer2Full& (0+255),w,b
  5449  0006AC  A4D8               	btfss	status,2,c
  5450  0006AE  EF5B  F003         	goto	u6041
  5451  0006B2  EF5D  F003         	goto	u6040
  5452  0006B6                     u6041:
  5453  0006B6  EF54  F003         	goto	l6114
  5454  0006BA                     u6040:
  5455  0006BA                     
  5456                           ; BSR set to: 0
  5457                           ;main.c: 211:                     SDCARD_ReadBlock(readAddress, sdCardBuffer2);
  5458  0006BA  C1D0  F015         	movff	main@readAddress,SDCARD_ReadBlock@addr
  5459  0006BE  C1D1  F016         	movff	main@readAddress+1,SDCARD_ReadBlock@addr+1
  5460  0006C2  C1D2  F017         	movff	main@readAddress+2,SDCARD_ReadBlock@addr+2
  5461  0006C6  C1D3  F018         	movff	main@readAddress+3,SDCARD_ReadBlock@addr+3
  5462  0006CA  0EDE               	movlw	low _sdCardBuffer2
  5463  0006CC  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  5464  0006CE  0E03               	movlw	high _sdCardBuffer2
  5465  0006D0  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  5466  0006D2  ECE6  F017         	call	_SDCARD_ReadBlock	;wreg free
  5467  0006D6                     
  5468                           ;main.c: 212:                     buffer2Full = 1;
  5469  0006D6  0E01               	movlw	1
  5470  0006D8  0100               	movlb	0	; () banked
  5471  0006DA  6FCF               	movwf	_buffer2Full& (0+255),b
  5472  0006DC                     
  5473                           ; BSR set to: 0
  5474                           ;main.c: 213:                     readAddress = incrementAddress(readAddress);
  5475  0006DC  C1D0  F014         	movff	main@readAddress,incrementAddress@sdCardAddress
  5476  0006E0  C1D1  F015         	movff	main@readAddress+1,incrementAddress@sdCardAddress+1
  5477  0006E4  C1D2  F016         	movff	main@readAddress+2,incrementAddress@sdCardAddress+2
  5478  0006E8  C1D3  F017         	movff	main@readAddress+3,incrementAddress@sdCardAddress+3
  5479  0006EC  EC88  F019         	call	_incrementAddress	;wreg free
  5480  0006F0  C014  F1D0         	movff	?_incrementAddress,main@readAddress
  5481  0006F4  C015  F1D1         	movff	?_incrementAddress+1,main@readAddress+1
  5482  0006F8  C016  F1D2         	movff	?_incrementAddress+2,main@readAddress+2
  5483  0006FC  C017  F1D3         	movff	?_incrementAddress+3,main@readAddress+3
  5484  000700                     l6122:
  5485                           
  5486                           ;main.c: 205:                 while (!(EUSART1_is_rx_ready()) && readAddress != writeEnd
      +                          Address) {
  5487  000700  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5488  000704  0900               	iorlw	0
  5489  000706  A4D8               	btfss	status,2,c
  5490  000708  EF88  F003         	goto	u6051
  5491  00070C  EF8A  F003         	goto	u6050
  5492  000710                     u6051:
  5493  000710  EF9D  F003         	goto	l6126
  5494  000714                     u6050:
  5495  000714  0101               	movlb	1	; () banked
  5496  000716  51C0               	movf	main@writeEndAddress& (0+255),w,b
  5497  000718  19D0               	xorwf	main@readAddress& (0+255),w,b
  5498  00071A  E10D               	bnz	u6061
  5499  00071C  51C1               	movf	(main@writeEndAddress+1)& (0+255),w,b
  5500  00071E  19D1               	xorwf	(main@readAddress+1)& (0+255),w,b
  5501  000720  E10A               	bnz	u6061
  5502  000722  51C2               	movf	(main@writeEndAddress+2)& (0+255),w,b
  5503  000724  19D2               	xorwf	(main@readAddress+2)& (0+255),w,b
  5504  000726  E107               	bnz	u6061
  5505  000728  51C3               	movf	(main@writeEndAddress+3)& (0+255),w,b
  5506  00072A  19D3               	xorwf	(main@readAddress+3)& (0+255),w,b
  5507  00072C  A4D8               	btfss	status,2,c
  5508  00072E  EF9B  F003         	goto	u6061
  5509  000732  EF9D  F003         	goto	u6060
  5510  000736                     u6061:
  5511  000736  EF28  F003         	goto	l6106
  5512  00073A                     u6060:
  5513  00073A                     l6126:
  5514                           
  5515                           ;main.c: 215:                 if ((EUSART1_is_rx_ready())) {
  5516  00073A  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5517  00073E  0900               	iorlw	0
  5518  000740  B4D8               	btfsc	status,2,c
  5519  000742  EFA5  F003         	goto	u6071
  5520  000746  EFA7  F003         	goto	u6070
  5521  00074A                     u6071:
  5522  00074A  EFAB  F003         	goto	l6132
  5523  00074E                     u6070:
  5524  00074E                     
  5525                           ;main.c: 216:                     EUSART1_Read();
  5526  00074E  EC2C  F01B         	call	_EUSART1_Read	;wreg free
  5527  000752                     
  5528                           ;main.c: 217:                     stopPlayback = 1;
  5529  000752  0E01               	movlw	1
  5530  000754  6E46               	movwf	_stopPlayback^0,c
  5531  000756                     l6132:
  5532  000756  0100               	movlb	0	; () banked
  5533  000758  51CD               	movf	_doPlayback& (0+255),w,b
  5534  00075A  A4D8               	btfss	status,2,c
  5535  00075C  EFB2  F003         	goto	u6081
  5536  000760  EFB4  F003         	goto	u6080
  5537  000764                     u6081:
  5538  000764  EFAB  F003         	goto	l6132
  5539  000768                     u6080:
  5540  000768  EF7E  F000         	goto	l6008
  5541  00076C                     l6134:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;main.c: 224:                 printf("Press any key to start recording audio and press a
      +                          ny key to stop recording.");
  5545  00076C  0E19               	movlw	low STR_43
  5546  00076E  6FA6               	movwf	printf@fmt& (0+255),b
  5547  000770  0EF3               	movlw	high STR_43
  5548  000772  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  5549  000774  EC18  F01B         	call	_printf	;wreg free
  5550  000778                     l6136:
  5551  000778  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5552  00077C  0900               	iorlw	0
  5553  00077E  B4D8               	btfsc	status,2,c
  5554  000780  EFC4  F003         	goto	u6091
  5555  000784  EFC6  F003         	goto	u6090
  5556  000788                     u6091:
  5557  000788  EFBC  F003         	goto	l6136
  5558  00078C                     u6090:
  5559  00078C                     
  5560                           ;main.c: 226:                 EUSART1_Read();
  5561  00078C  EC2C  F01B         	call	_EUSART1_Read	;wreg free
  5562  000790                     
  5563                           ;main.c: 227:                 writeStartAddress = sdCardAddress;
  5564  000790  C1D6  F1B8         	movff	main@sdCardAddress,main@writeStartAddress
  5565  000794  C1D7  F1B9         	movff	main@sdCardAddress+1,main@writeStartAddress+1
  5566  000798  C1D8  F1BA         	movff	main@sdCardAddress+2,main@writeStartAddress+2
  5567  00079C  C1D9  F1BB         	movff	main@sdCardAddress+3,main@writeStartAddress+3
  5568  0007A0                     
  5569                           ;main.c: 228:                 uint32_t writeAddress = sdCardAddress;
  5570  0007A0  C1D6  F1DA         	movff	main@sdCardAddress,main@writeAddress_935
  5571  0007A4  C1D7  F1DB         	movff	main@sdCardAddress+1,main@writeAddress_935+1
  5572  0007A8  C1D8  F1DC         	movff	main@sdCardAddress+2,main@writeAddress_935+2
  5573  0007AC  C1D9  F1DD         	movff	main@sdCardAddress+3,main@writeAddress_935+3
  5574  0007B0                     
  5575                           ;main.c: 229:                 uint8_t failureIndex = 0;
  5576  0007B0  0E00               	movlw	0
  5577  0007B2  0101               	movlb	1	; () banked
  5578  0007B4  6FD4               	movwf	main@failureIndex& (0+255),b
  5579  0007B6                     
  5580                           ; BSR set to: 1
  5581                           ;main.c: 230:                 startCollect = 1;
  5582  0007B6  0E01               	movlw	1
  5583  0007B8  6E48               	movwf	_startCollect^0,c
  5584                           
  5585                           ;main.c: 232:                 while (!(EUSART1_is_rx_ready())) {
  5586  0007BA  EFEF  F004         	goto	l6200
  5587  0007BE                     l6148:
  5588                           
  5589                           ;main.c: 233:                     if (buffer1Full) {
  5590  0007BE  0100               	movlb	0	; () banked
  5591  0007C0  51D0               	movf	_buffer1Full& (0+255),w,b
  5592  0007C2  B4D8               	btfsc	status,2,c
  5593  0007C4  EFE6  F003         	goto	u6101
  5594  0007C8  EFE8  F003         	goto	u6100
  5595  0007CC                     u6101:
  5596  0007CC  EF67  F004         	goto	l6174
  5597  0007D0                     u6100:
  5598  0007D0                     
  5599                           ; BSR set to: 0
  5600                           ;main.c: 234:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5601  0007D0  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  5602  0007D4  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  5603  0007D8  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  5604  0007DC  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  5605  0007E0  0EDE               	movlw	low _sdCardBuffer1
  5606  0007E2  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5607  0007E4  0E05               	movlw	high _sdCardBuffer1
  5608  0007E6  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5609  0007E8  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  5610  0007EC                     l6152:
  5611  0007EC  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5612  0007F0  0101               	movlb	1	; () banked
  5613  0007F2  6FD5               	movwf	main@status& (0+255),b
  5614  0007F4  29D5               	incf	main@status& (0+255),w,b
  5615  0007F6  B4D8               	btfsc	status,2,c
  5616  0007F8  EF00  F004         	goto	u6111
  5617  0007FC  EF02  F004         	goto	u6110
  5618  000800                     u6111:
  5619  000800  EFF6  F003         	goto	l6152
  5620  000804                     u6110:
  5621  000804                     
  5622                           ; BSR set to: 1
  5623                           ;main.c: 236:                         if ((status & 0x1F) != 0x5) {
  5624  000804  51D5               	movf	main@status& (0+255),w,b
  5625  000806  0B1F               	andlw	31
  5626  000808  0A05               	xorlw	5
  5627  00080A  B4D8               	btfsc	status,2,c
  5628  00080C  EF0A  F004         	goto	u6121
  5629  000810  EF0C  F004         	goto	u6120
  5630  000814                     u6121:
  5631  000814  EF26  F004         	goto	l6160
  5632  000818                     u6120:
  5633  000818                     
  5634                           ; BSR set to: 1
  5635                           ;main.c: 237:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5636  000818  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  5637  00081C  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  5638  000820  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  5639  000824  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  5640  000828  0EDE               	movlw	low _sdCardBuffer1
  5641  00082A  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5642  00082C  0E05               	movlw	high _sdCardBuffer1
  5643  00082E  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5644  000830  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  5645  000834                     l6158:
  5646  000834  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5647  000838  0101               	movlb	1	; () banked
  5648  00083A  6FD5               	movwf	main@status& (0+255),b
  5649  00083C  29D5               	incf	main@status& (0+255),w,b
  5650  00083E  B4D8               	btfsc	status,2,c
  5651  000840  EF24  F004         	goto	u6131
  5652  000844  EF26  F004         	goto	u6130
  5653  000848                     u6131:
  5654  000848  EF1A  F004         	goto	l6158
  5655  00084C                     u6130:
  5656  00084C                     l6160:
  5657                           
  5658                           ; BSR set to: 1
  5659                           ;main.c: 240:                         buffer1Full = 0;
  5660  00084C  0E00               	movlw	0
  5661  00084E  0100               	movlb	0	; () banked
  5662  000850  6FD0               	movwf	_buffer1Full& (0+255),b
  5663  000852                     
  5664                           ; BSR set to: 0
  5665                           ;main.c: 241:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5666  000852  0101               	movlb	1	; () banked
  5667  000854  51D5               	movf	main@status& (0+255),w,b
  5668  000856  0B1F               	andlw	31
  5669  000858  0A05               	xorlw	5
  5670  00085A  B4D8               	btfsc	status,2,c
  5671  00085C  EF32  F004         	goto	u6141
  5672  000860  EF34  F004         	goto	u6140
  5673  000864                     u6141:
  5674  000864  EF55  F004         	goto	l6172
  5675  000868                     u6140:
  5676  000868                     
  5677                           ; BSR set to: 1
  5678  000868  0E80               	movlw	128
  5679  00086A  61D4               	cpfslt	main@failureIndex& (0+255),b
  5680  00086C  EF3A  F004         	goto	u6151
  5681  000870  EF3C  F004         	goto	u6150
  5682  000874                     u6151:
  5683  000874  EF55  F004         	goto	l6172
  5684  000878                     u6150:
  5685  000878                     
  5686                           ; BSR set to: 1
  5687                           ;main.c: 242:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5688  000878  51D4               	movf	main@failureIndex& (0+255),w,b
  5689  00087A  0D04               	mullw	4
  5690  00087C  0EDE               	movlw	low _writeFailureTable
  5691  00087E  24F3               	addwf	243,w,c
  5692  000880  6ED9               	movwf	fsr2l,c
  5693  000882  0E01               	movlw	high _writeFailureTable
  5694  000884  20F4               	addwfc	prodh,w,c
  5695  000886  6EDA               	movwf	fsr2h,c
  5696  000888  C1DA  FFDE         	movff	main@writeAddress_935,postinc2
  5697  00088C  C1DB  FFDE         	movff	main@writeAddress_935+1,postinc2
  5698  000890  C1DC  FFDE         	movff	main@writeAddress_935+2,postinc2
  5699  000894  C1DD  FFDE         	movff	main@writeAddress_935+3,postinc2
  5700  000898                     
  5701                           ; BSR set to: 1
  5702                           ;main.c: 243:                             writeFailureStatus[failureIndex] = status;
  5703  000898  0E00               	movlw	low _writeFailureStatus
  5704  00089A  25D4               	addwf	main@failureIndex& (0+255),w,b
  5705  00089C  6ED9               	movwf	fsr2l,c
  5706  00089E  6ADA               	clrf	fsr2h,c
  5707  0008A0  0E01               	movlw	high _writeFailureStatus
  5708  0008A2  22DA               	addwfc	fsr2h,f,c
  5709  0008A4  C1D5  FFDF         	movff	main@status,indf2
  5710  0008A8                     
  5711                           ; BSR set to: 1
  5712                           ;main.c: 244:                             failureIndex++;
  5713  0008A8  2BD4               	incf	main@failureIndex& (0+255),f,b
  5714  0008AA                     l6172:
  5715                           
  5716                           ; BSR set to: 1
  5717                           ;main.c: 246:                         writeAddress = incrementAddress(writeAddress);
  5718  0008AA  C1DA  F014         	movff	main@writeAddress_935,incrementAddress@sdCardAddress
  5719  0008AE  C1DB  F015         	movff	main@writeAddress_935+1,incrementAddress@sdCardAddress+1
  5720  0008B2  C1DC  F016         	movff	main@writeAddress_935+2,incrementAddress@sdCardAddress+2
  5721  0008B6  C1DD  F017         	movff	main@writeAddress_935+3,incrementAddress@sdCardAddress+3
  5722  0008BA  EC88  F019         	call	_incrementAddress	;wreg free
  5723  0008BE  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_935
  5724  0008C2  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_935+1
  5725  0008C6  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_935+2
  5726  0008CA  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_935+3
  5727  0008CE                     l6174:
  5728                           
  5729                           ;main.c: 248:                     if (buffer2Full) {
  5730  0008CE  0100               	movlb	0	; () banked
  5731  0008D0  51CF               	movf	_buffer2Full& (0+255),w,b
  5732  0008D2  B4D8               	btfsc	status,2,c
  5733  0008D4  EF6E  F004         	goto	u6161
  5734  0008D8  EF70  F004         	goto	u6160
  5735  0008DC                     u6161:
  5736  0008DC  EFEF  F004         	goto	l6200
  5737  0008E0                     u6160:
  5738  0008E0                     
  5739                           ; BSR set to: 0
  5740                           ;main.c: 249:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  5741  0008E0  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  5742  0008E4  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  5743  0008E8  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  5744  0008EC  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  5745  0008F0  0EDE               	movlw	low _sdCardBuffer2
  5746  0008F2  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5747  0008F4  0E03               	movlw	high _sdCardBuffer2
  5748  0008F6  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5749  0008F8  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  5750  0008FC                     l6178:
  5751  0008FC  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5752  000900  0101               	movlb	1	; () banked
  5753  000902  6FD5               	movwf	main@status& (0+255),b
  5754  000904  29D5               	incf	main@status& (0+255),w,b
  5755  000906  B4D8               	btfsc	status,2,c
  5756  000908  EF88  F004         	goto	u6171
  5757  00090C  EF8A  F004         	goto	u6170
  5758  000910                     u6171:
  5759  000910  EF7E  F004         	goto	l6178
  5760  000914                     u6170:
  5761  000914                     
  5762                           ; BSR set to: 1
  5763                           ;main.c: 251:                         if ((status & 0x1F) != 0x5) {
  5764  000914  51D5               	movf	main@status& (0+255),w,b
  5765  000916  0B1F               	andlw	31
  5766  000918  0A05               	xorlw	5
  5767  00091A  B4D8               	btfsc	status,2,c
  5768  00091C  EF92  F004         	goto	u6181
  5769  000920  EF94  F004         	goto	u6180
  5770  000924                     u6181:
  5771  000924  EFAE  F004         	goto	l6186
  5772  000928                     u6180:
  5773  000928                     
  5774                           ; BSR set to: 1
  5775                           ;main.c: 252:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  5776  000928  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  5777  00092C  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  5778  000930  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  5779  000934  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  5780  000938  0EDE               	movlw	low _sdCardBuffer2
  5781  00093A  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5782  00093C  0E03               	movlw	high _sdCardBuffer2
  5783  00093E  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5784  000940  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  5785  000944                     l6184:
  5786  000944  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5787  000948  0101               	movlb	1	; () banked
  5788  00094A  6FD5               	movwf	main@status& (0+255),b
  5789  00094C  29D5               	incf	main@status& (0+255),w,b
  5790  00094E  B4D8               	btfsc	status,2,c
  5791  000950  EFAC  F004         	goto	u6191
  5792  000954  EFAE  F004         	goto	u6190
  5793  000958                     u6191:
  5794  000958  EFA2  F004         	goto	l6184
  5795  00095C                     u6190:
  5796  00095C                     l6186:
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;main.c: 255:                         buffer2Full = 0;
  5800  00095C  0E00               	movlw	0
  5801  00095E  0100               	movlb	0	; () banked
  5802  000960  6FCF               	movwf	_buffer2Full& (0+255),b
  5803  000962                     
  5804                           ; BSR set to: 0
  5805                           ;main.c: 256:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5806  000962  0101               	movlb	1	; () banked
  5807  000964  51D5               	movf	main@status& (0+255),w,b
  5808  000966  0B1F               	andlw	31
  5809  000968  0A05               	xorlw	5
  5810  00096A  B4D8               	btfsc	status,2,c
  5811  00096C  EFBA  F004         	goto	u6201
  5812  000970  EFBC  F004         	goto	u6200
  5813  000974                     u6201:
  5814  000974  EFDD  F004         	goto	l6198
  5815  000978                     u6200:
  5816  000978                     
  5817                           ; BSR set to: 1
  5818  000978  0E80               	movlw	128
  5819  00097A  61D4               	cpfslt	main@failureIndex& (0+255),b
  5820  00097C  EFC2  F004         	goto	u6211
  5821  000980  EFC4  F004         	goto	u6210
  5822  000984                     u6211:
  5823  000984  EFDD  F004         	goto	l6198
  5824  000988                     u6210:
  5825  000988                     
  5826                           ; BSR set to: 1
  5827                           ;main.c: 257:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5828  000988  51D4               	movf	main@failureIndex& (0+255),w,b
  5829  00098A  0D04               	mullw	4
  5830  00098C  0EDE               	movlw	low _writeFailureTable
  5831  00098E  24F3               	addwf	243,w,c
  5832  000990  6ED9               	movwf	fsr2l,c
  5833  000992  0E01               	movlw	high _writeFailureTable
  5834  000994  20F4               	addwfc	prodh,w,c
  5835  000996  6EDA               	movwf	fsr2h,c
  5836  000998  C1DA  FFDE         	movff	main@writeAddress_935,postinc2
  5837  00099C  C1DB  FFDE         	movff	main@writeAddress_935+1,postinc2
  5838  0009A0  C1DC  FFDE         	movff	main@writeAddress_935+2,postinc2
  5839  0009A4  C1DD  FFDE         	movff	main@writeAddress_935+3,postinc2
  5840  0009A8                     
  5841                           ; BSR set to: 1
  5842                           ;main.c: 258:                             writeFailureStatus[failureIndex] = status;
  5843  0009A8  0E00               	movlw	low _writeFailureStatus
  5844  0009AA  25D4               	addwf	main@failureIndex& (0+255),w,b
  5845  0009AC  6ED9               	movwf	fsr2l,c
  5846  0009AE  6ADA               	clrf	fsr2h,c
  5847  0009B0  0E01               	movlw	high _writeFailureStatus
  5848  0009B2  22DA               	addwfc	fsr2h,f,c
  5849  0009B4  C1D5  FFDF         	movff	main@status,indf2
  5850  0009B8                     
  5851                           ; BSR set to: 1
  5852                           ;main.c: 259:                             failureIndex++;
  5853  0009B8  2BD4               	incf	main@failureIndex& (0+255),f,b
  5854  0009BA                     l6198:
  5855                           
  5856                           ; BSR set to: 1
  5857                           ;main.c: 261:                         writeAddress = incrementAddress(writeAddress);
  5858  0009BA  C1DA  F014         	movff	main@writeAddress_935,incrementAddress@sdCardAddress
  5859  0009BE  C1DB  F015         	movff	main@writeAddress_935+1,incrementAddress@sdCardAddress+1
  5860  0009C2  C1DC  F016         	movff	main@writeAddress_935+2,incrementAddress@sdCardAddress+2
  5861  0009C6  C1DD  F017         	movff	main@writeAddress_935+3,incrementAddress@sdCardAddress+3
  5862  0009CA  EC88  F019         	call	_incrementAddress	;wreg free
  5863  0009CE  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_935
  5864  0009D2  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_935+1
  5865  0009D6  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_935+2
  5866  0009DA  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_935+3
  5867  0009DE                     l6200:
  5868                           
  5869                           ;main.c: 232:                 while (!(EUSART1_is_rx_ready())) {
  5870  0009DE  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  5871  0009E2  0900               	iorlw	0
  5872  0009E4  B4D8               	btfsc	status,2,c
  5873  0009E6  EFF7  F004         	goto	u6221
  5874  0009EA  EFF9  F004         	goto	u6220
  5875  0009EE                     u6221:
  5876  0009EE  EFDF  F003         	goto	l6148
  5877  0009F2                     u6220:
  5878  0009F2                     
  5879                           ;main.c: 264:                 EUSART1_Read();
  5880  0009F2  EC2C  F01B         	call	_EUSART1_Read	;wreg free
  5881  0009F6                     
  5882                           ;main.c: 265:                 stopCollect = 1;
  5883  0009F6  0E01               	movlw	1
  5884  0009F8  6E47               	movwf	_stopCollect^0,c
  5885                           
  5886                           ;main.c: 267:                 while (buffer1Full || buffer2Full || collecting) {
  5887  0009FA  EF0E  F006         	goto	l6258
  5888  0009FE                     l6206:
  5889                           
  5890                           ; BSR set to: 0
  5891                           ;main.c: 268:                     if (buffer1Full) {
  5892  0009FE  51D0               	movf	_buffer1Full& (0+255),w,b
  5893  000A00  B4D8               	btfsc	status,2,c
  5894  000A02  EF05  F005         	goto	u6231
  5895  000A06  EF07  F005         	goto	u6230
  5896  000A0A                     u6231:
  5897  000A0A  EF86  F005         	goto	l6232
  5898  000A0E                     u6230:
  5899  000A0E                     
  5900                           ; BSR set to: 0
  5901                           ;main.c: 269:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer1);
  5902  000A0E  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  5903  000A12  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  5904  000A16  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  5905  000A1A  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  5906  000A1E  0EDE               	movlw	low _sdCardBuffer1
  5907  000A20  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5908  000A22  0E05               	movlw	high _sdCardBuffer1
  5909  000A24  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5910  000A26  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  5911  000A2A                     l6210:
  5912  000A2A  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5913  000A2E  0101               	movlb	1	; () banked
  5914  000A30  6FD5               	movwf	main@status& (0+255),b
  5915  000A32  29D5               	incf	main@status& (0+255),w,b
  5916  000A34  B4D8               	btfsc	status,2,c
  5917  000A36  EF1F  F005         	goto	u6241
  5918  000A3A  EF21  F005         	goto	u6240
  5919  000A3E                     u6241:
  5920  000A3E  EF15  F005         	goto	l6210
  5921  000A42                     u6240:
  5922  000A42                     
  5923                           ; BSR set to: 1
  5924                           ;main.c: 271:                         if ((status & 0x1F) != 0x5) {
  5925  000A42  51D5               	movf	main@status& (0+255),w,b
  5926  000A44  0B1F               	andlw	31
  5927  000A46  0A05               	xorlw	5
  5928  000A48  B4D8               	btfsc	status,2,c
  5929  000A4A  EF29  F005         	goto	u6251
  5930  000A4E  EF2B  F005         	goto	u6250
  5931  000A52                     u6251:
  5932  000A52  EF45  F005         	goto	l6218
  5933  000A56                     u6250:
  5934  000A56                     
  5935                           ; BSR set to: 1
  5936                           ;main.c: 272:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer1)
      +                          ;
  5937  000A56  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  5938  000A5A  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  5939  000A5E  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  5940  000A62  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  5941  000A66  0EDE               	movlw	low _sdCardBuffer1
  5942  000A68  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  5943  000A6A  0E05               	movlw	high _sdCardBuffer1
  5944  000A6C  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  5945  000A6E  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  5946  000A72                     l6216:
  5947  000A72  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  5948  000A76  0101               	movlb	1	; () banked
  5949  000A78  6FD5               	movwf	main@status& (0+255),b
  5950  000A7A  29D5               	incf	main@status& (0+255),w,b
  5951  000A7C  B4D8               	btfsc	status,2,c
  5952  000A7E  EF43  F005         	goto	u6261
  5953  000A82  EF45  F005         	goto	u6260
  5954  000A86                     u6261:
  5955  000A86  EF39  F005         	goto	l6216
  5956  000A8A                     u6260:
  5957  000A8A                     l6218:
  5958                           
  5959                           ; BSR set to: 1
  5960                           ;main.c: 275:                         buffer1Full = 0;
  5961  000A8A  0E00               	movlw	0
  5962  000A8C  0100               	movlb	0	; () banked
  5963  000A8E  6FD0               	movwf	_buffer1Full& (0+255),b
  5964  000A90                     
  5965                           ; BSR set to: 0
  5966                           ;main.c: 276:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  5967  000A90  0101               	movlb	1	; () banked
  5968  000A92  51D5               	movf	main@status& (0+255),w,b
  5969  000A94  0B1F               	andlw	31
  5970  000A96  0A05               	xorlw	5
  5971  000A98  B4D8               	btfsc	status,2,c
  5972  000A9A  EF51  F005         	goto	u6271
  5973  000A9E  EF53  F005         	goto	u6270
  5974  000AA2                     u6271:
  5975  000AA2  EF74  F005         	goto	l6230
  5976  000AA6                     u6270:
  5977  000AA6                     
  5978                           ; BSR set to: 1
  5979  000AA6  0E80               	movlw	128
  5980  000AA8  61D4               	cpfslt	main@failureIndex& (0+255),b
  5981  000AAA  EF59  F005         	goto	u6281
  5982  000AAE  EF5B  F005         	goto	u6280
  5983  000AB2                     u6281:
  5984  000AB2  EF74  F005         	goto	l6230
  5985  000AB6                     u6280:
  5986  000AB6                     
  5987                           ; BSR set to: 1
  5988                           ;main.c: 277:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  5989  000AB6  51D4               	movf	main@failureIndex& (0+255),w,b
  5990  000AB8  0D04               	mullw	4
  5991  000ABA  0EDE               	movlw	low _writeFailureTable
  5992  000ABC  24F3               	addwf	243,w,c
  5993  000ABE  6ED9               	movwf	fsr2l,c
  5994  000AC0  0E01               	movlw	high _writeFailureTable
  5995  000AC2  20F4               	addwfc	prodh,w,c
  5996  000AC4  6EDA               	movwf	fsr2h,c
  5997  000AC6  C1DA  FFDE         	movff	main@writeAddress_935,postinc2
  5998  000ACA  C1DB  FFDE         	movff	main@writeAddress_935+1,postinc2
  5999  000ACE  C1DC  FFDE         	movff	main@writeAddress_935+2,postinc2
  6000  000AD2  C1DD  FFDE         	movff	main@writeAddress_935+3,postinc2
  6001  000AD6                     
  6002                           ; BSR set to: 1
  6003                           ;main.c: 278:                             writeFailureStatus[failureIndex] = status;
  6004  000AD6  0E00               	movlw	low _writeFailureStatus
  6005  000AD8  25D4               	addwf	main@failureIndex& (0+255),w,b
  6006  000ADA  6ED9               	movwf	fsr2l,c
  6007  000ADC  6ADA               	clrf	fsr2h,c
  6008  000ADE  0E01               	movlw	high _writeFailureStatus
  6009  000AE0  22DA               	addwfc	fsr2h,f,c
  6010  000AE2  C1D5  FFDF         	movff	main@status,indf2
  6011  000AE6                     
  6012                           ; BSR set to: 1
  6013                           ;main.c: 279:                             failureIndex++;
  6014  000AE6  2BD4               	incf	main@failureIndex& (0+255),f,b
  6015  000AE8                     l6230:
  6016                           
  6017                           ; BSR set to: 1
  6018                           ;main.c: 281:                         writeAddress = incrementAddress(writeAddress);
  6019  000AE8  C1DA  F014         	movff	main@writeAddress_935,incrementAddress@sdCardAddress
  6020  000AEC  C1DB  F015         	movff	main@writeAddress_935+1,incrementAddress@sdCardAddress+1
  6021  000AF0  C1DC  F016         	movff	main@writeAddress_935+2,incrementAddress@sdCardAddress+2
  6022  000AF4  C1DD  F017         	movff	main@writeAddress_935+3,incrementAddress@sdCardAddress+3
  6023  000AF8  EC88  F019         	call	_incrementAddress	;wreg free
  6024  000AFC  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_935
  6025  000B00  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_935+1
  6026  000B04  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_935+2
  6027  000B08  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_935+3
  6028  000B0C                     l6232:
  6029                           
  6030                           ;main.c: 283:                     if (buffer2Full) {
  6031  000B0C  0100               	movlb	0	; () banked
  6032  000B0E  51CF               	movf	_buffer2Full& (0+255),w,b
  6033  000B10  B4D8               	btfsc	status,2,c
  6034  000B12  EF8D  F005         	goto	u6291
  6035  000B16  EF8F  F005         	goto	u6290
  6036  000B1A                     u6291:
  6037  000B1A  EF0E  F006         	goto	l6258
  6038  000B1E                     u6290:
  6039  000B1E                     
  6040                           ; BSR set to: 0
  6041                           ;main.c: 284:                         SDCARD_WriteBlock(writeAddress, sdCardBuffer2);
  6042  000B1E  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  6043  000B22  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  6044  000B26  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  6045  000B2A  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  6046  000B2E  0EDE               	movlw	low _sdCardBuffer2
  6047  000B30  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  6048  000B32  0E03               	movlw	high _sdCardBuffer2
  6049  000B34  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  6050  000B36  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  6051  000B3A                     l6236:
  6052  000B3A  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  6053  000B3E  0101               	movlb	1	; () banked
  6054  000B40  6FD5               	movwf	main@status& (0+255),b
  6055  000B42  29D5               	incf	main@status& (0+255),w,b
  6056  000B44  B4D8               	btfsc	status,2,c
  6057  000B46  EFA7  F005         	goto	u6301
  6058  000B4A  EFA9  F005         	goto	u6300
  6059  000B4E                     u6301:
  6060  000B4E  EF9D  F005         	goto	l6236
  6061  000B52                     u6300:
  6062  000B52                     
  6063                           ; BSR set to: 1
  6064                           ;main.c: 286:                         if ((status & 0x1F) != 0x5) {
  6065  000B52  51D5               	movf	main@status& (0+255),w,b
  6066  000B54  0B1F               	andlw	31
  6067  000B56  0A05               	xorlw	5
  6068  000B58  B4D8               	btfsc	status,2,c
  6069  000B5A  EFB1  F005         	goto	u6311
  6070  000B5E  EFB3  F005         	goto	u6310
  6071  000B62                     u6311:
  6072  000B62  EFCD  F005         	goto	l6244
  6073  000B66                     u6310:
  6074  000B66                     
  6075                           ; BSR set to: 1
  6076                           ;main.c: 287:                             SDCARD_WriteBlock(writeAddress, sdCardBuffer2)
      +                          ;
  6077  000B66  C1DA  F015         	movff	main@writeAddress_935,SDCARD_WriteBlock@addr
  6078  000B6A  C1DB  F016         	movff	main@writeAddress_935+1,SDCARD_WriteBlock@addr+1
  6079  000B6E  C1DC  F017         	movff	main@writeAddress_935+2,SDCARD_WriteBlock@addr+2
  6080  000B72  C1DD  F018         	movff	main@writeAddress_935+3,SDCARD_WriteBlock@addr+3
  6081  000B76  0EDE               	movlw	low _sdCardBuffer2
  6082  000B78  6E19               	movwf	SDCARD_WriteBlock@sdCardBuffer^0,c
  6083  000B7A  0E03               	movlw	high _sdCardBuffer2
  6084  000B7C  6E1A               	movwf	(SDCARD_WriteBlock@sdCardBuffer+1)^0,c
  6085  000B7E  EC7E  F018         	call	_SDCARD_WriteBlock	;wreg free
  6086  000B82                     l6242:
  6087  000B82  EC29  F01A         	call	_SDCARD_PollWriteComplete	;wreg free
  6088  000B86  0101               	movlb	1	; () banked
  6089  000B88  6FD5               	movwf	main@status& (0+255),b
  6090  000B8A  29D5               	incf	main@status& (0+255),w,b
  6091  000B8C  B4D8               	btfsc	status,2,c
  6092  000B8E  EFCB  F005         	goto	u6321
  6093  000B92  EFCD  F005         	goto	u6320
  6094  000B96                     u6321:
  6095  000B96  EFC1  F005         	goto	l6242
  6096  000B9A                     u6320:
  6097  000B9A                     l6244:
  6098                           
  6099                           ; BSR set to: 1
  6100                           ;main.c: 290:                         buffer2Full = 0;
  6101  000B9A  0E00               	movlw	0
  6102  000B9C  0100               	movlb	0	; () banked
  6103  000B9E  6FCF               	movwf	_buffer2Full& (0+255),b
  6104  000BA0                     
  6105                           ; BSR set to: 0
  6106                           ;main.c: 291:                         if ((status & 0x1F) != 0x5 && failureIndex < 128) 
      +                          {
  6107  000BA0  0101               	movlb	1	; () banked
  6108  000BA2  51D5               	movf	main@status& (0+255),w,b
  6109  000BA4  0B1F               	andlw	31
  6110  000BA6  0A05               	xorlw	5
  6111  000BA8  B4D8               	btfsc	status,2,c
  6112  000BAA  EFD9  F005         	goto	u6331
  6113  000BAE  EFDB  F005         	goto	u6330
  6114  000BB2                     u6331:
  6115  000BB2  EFFC  F005         	goto	l6256
  6116  000BB6                     u6330:
  6117  000BB6                     
  6118                           ; BSR set to: 1
  6119  000BB6  0E80               	movlw	128
  6120  000BB8  61D4               	cpfslt	main@failureIndex& (0+255),b
  6121  000BBA  EFE1  F005         	goto	u6341
  6122  000BBE  EFE3  F005         	goto	u6340
  6123  000BC2                     u6341:
  6124  000BC2  EFFC  F005         	goto	l6256
  6125  000BC6                     u6340:
  6126  000BC6                     
  6127                           ; BSR set to: 1
  6128                           ;main.c: 292:                             writeFailureTable[failureIndex] = writeAddress
      +                          ;
  6129  000BC6  51D4               	movf	main@failureIndex& (0+255),w,b
  6130  000BC8  0D04               	mullw	4
  6131  000BCA  0EDE               	movlw	low _writeFailureTable
  6132  000BCC  24F3               	addwf	243,w,c
  6133  000BCE  6ED9               	movwf	fsr2l,c
  6134  000BD0  0E01               	movlw	high _writeFailureTable
  6135  000BD2  20F4               	addwfc	prodh,w,c
  6136  000BD4  6EDA               	movwf	fsr2h,c
  6137  000BD6  C1DA  FFDE         	movff	main@writeAddress_935,postinc2
  6138  000BDA  C1DB  FFDE         	movff	main@writeAddress_935+1,postinc2
  6139  000BDE  C1DC  FFDE         	movff	main@writeAddress_935+2,postinc2
  6140  000BE2  C1DD  FFDE         	movff	main@writeAddress_935+3,postinc2
  6141  000BE6                     
  6142                           ; BSR set to: 1
  6143                           ;main.c: 293:                             writeFailureStatus[failureIndex] = status;
  6144  000BE6  0E00               	movlw	low _writeFailureStatus
  6145  000BE8  25D4               	addwf	main@failureIndex& (0+255),w,b
  6146  000BEA  6ED9               	movwf	fsr2l,c
  6147  000BEC  6ADA               	clrf	fsr2h,c
  6148  000BEE  0E01               	movlw	high _writeFailureStatus
  6149  000BF0  22DA               	addwfc	fsr2h,f,c
  6150  000BF2  C1D5  FFDF         	movff	main@status,indf2
  6151  000BF6                     
  6152                           ; BSR set to: 1
  6153                           ;main.c: 294:                             failureIndex++;
  6154  000BF6  2BD4               	incf	main@failureIndex& (0+255),f,b
  6155  000BF8                     l6256:
  6156                           
  6157                           ; BSR set to: 1
  6158                           ;main.c: 296:                         writeAddress = incrementAddress(writeAddress);
  6159  000BF8  C1DA  F014         	movff	main@writeAddress_935,incrementAddress@sdCardAddress
  6160  000BFC  C1DB  F015         	movff	main@writeAddress_935+1,incrementAddress@sdCardAddress+1
  6161  000C00  C1DC  F016         	movff	main@writeAddress_935+2,incrementAddress@sdCardAddress+2
  6162  000C04  C1DD  F017         	movff	main@writeAddress_935+3,incrementAddress@sdCardAddress+3
  6163  000C08  EC88  F019         	call	_incrementAddress	;wreg free
  6164  000C0C  C014  F1DA         	movff	?_incrementAddress,main@writeAddress_935
  6165  000C10  C015  F1DB         	movff	?_incrementAddress+1,main@writeAddress_935+1
  6166  000C14  C016  F1DC         	movff	?_incrementAddress+2,main@writeAddress_935+2
  6167  000C18  C017  F1DD         	movff	?_incrementAddress+3,main@writeAddress_935+3
  6168  000C1C                     l6258:
  6169                           
  6170                           ;main.c: 267:                 while (buffer1Full || buffer2Full || collecting) {
  6171  000C1C  0100               	movlb	0	; () banked
  6172  000C1E  51D0               	movf	_buffer1Full& (0+255),w,b
  6173  000C20  A4D8               	btfss	status,2,c
  6174  000C22  EF15  F006         	goto	u6351
  6175  000C26  EF17  F006         	goto	u6350
  6176  000C2A                     u6351:
  6177  000C2A  EFFF  F004         	goto	l6206
  6178  000C2E                     u6350:
  6179  000C2E                     
  6180                           ; BSR set to: 0
  6181  000C2E  51CF               	movf	_buffer2Full& (0+255),w,b
  6182  000C30  A4D8               	btfss	status,2,c
  6183  000C32  EF1D  F006         	goto	u6361
  6184  000C36  EF1F  F006         	goto	u6360
  6185  000C3A                     u6361:
  6186  000C3A  EFFF  F004         	goto	l6206
  6187  000C3E                     u6360:
  6188  000C3E                     
  6189                           ; BSR set to: 0
  6190  000C3E  51CE               	movf	_collecting& (0+255),w,b
  6191  000C40  A4D8               	btfss	status,2,c
  6192  000C42  EF25  F006         	goto	u6371
  6193  000C46  EF27  F006         	goto	u6370
  6194  000C4A                     u6371:
  6195  000C4A  EFFF  F004         	goto	l6206
  6196  000C4E                     u6370:
  6197  000C4E                     
  6198                           ; BSR set to: 0
  6199                           ;main.c: 299:                 writeEndAddress = writeAddress;
  6200  000C4E  C1DA  F1C0         	movff	main@writeAddress_935,main@writeEndAddress
  6201  000C52  C1DB  F1C1         	movff	main@writeAddress_935+1,main@writeEndAddress+1
  6202  000C56  C1DC  F1C2         	movff	main@writeAddress_935+2,main@writeEndAddress+2
  6203  000C5A  C1DD  F1C3         	movff	main@writeAddress_935+3,main@writeEndAddress+3
  6204  000C5E                     
  6205                           ; BSR set to: 0
  6206                           ;main.c: 300:                 printf ("\r\n");
  6207  000C5E  0EAD               	movlw	low (STR_77+12)
  6208  000C60  6FA6               	movwf	printf@fmt& (0+255),b
  6209  000C62  0EFF               	movlw	high (STR_77+12)
  6210  000C64  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6211  000C66  EC18  F01B         	call	_printf	;wreg free
  6212  000C6A                     
  6213                           ;main.c: 301:                 if (failureIndex > 0) {
  6214  000C6A  0101               	movlb	1	; () banked
  6215  000C6C  51D4               	movf	main@failureIndex& (0+255),w,b
  6216  000C6E  B4D8               	btfsc	status,2,c
  6217  000C70  EF3C  F006         	goto	u6381
  6218  000C74  EF3E  F006         	goto	u6380
  6219  000C78                     u6381:
  6220  000C78  EF7E  F000         	goto	l6008
  6221  000C7C                     u6380:
  6222  000C7C                     
  6223                           ; BSR set to: 1
  6224                           ;main.c: 302:                     printf ("Listing write failures: \r\n");
  6225  000C7C  0E20               	movlw	low STR_45
  6226  000C7E  0100               	movlb	0	; () banked
  6227  000C80  6FA6               	movwf	printf@fmt& (0+255),b
  6228  000C82  0EFE               	movlw	high STR_45
  6229  000C84  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6230  000C86  EC18  F01B         	call	_printf	;wreg free
  6231  000C8A                     
  6232                           ;main.c: 303:                     for (uint8_t i = 0; i < failureIndex; i++) {
  6233  000C8A  0E00               	movlw	0
  6234  000C8C  0101               	movlb	1	; () banked
  6235  000C8E  6FC4               	movwf	main@i_939& (0+255),b
  6236  000C90  EF9F  F006         	goto	l6284
  6237  000C94                     l6272:
  6238                           
  6239                           ; BSR set to: 1
  6240                           ;main.c: 304:                         uint32_t addr = writeFailureTable[i];
  6241  000C94  51C4               	movf	main@i_939& (0+255),w,b
  6242  000C96  0D04               	mullw	4
  6243  000C98  0EDE               	movlw	low _writeFailureTable
  6244  000C9A  24F3               	addwf	243,w,c
  6245  000C9C  6ED9               	movwf	fsr2l,c
  6246  000C9E  0E01               	movlw	high _writeFailureTable
  6247  000CA0  20F4               	addwfc	prodh,w,c
  6248  000CA2  6EDA               	movwf	fsr2h,c
  6249  000CA4  CFDE F1B0          	movff	postinc2,main@addr
  6250  000CA8  CFDE F1B1          	movff	postinc2,main@addr+1
  6251  000CAC  CFDE F1B2          	movff	postinc2,main@addr+2
  6252  000CB0  CFDE F1B3          	movff	postinc2,main@addr+3
  6253  000CB4                     
  6254                           ; BSR set to: 1
  6255                           ;main.c: 305:                         printf("Status code: %d ---- Address: ", writeFail
      +                          ureStatus[i]);
  6256  000CB4  0E55               	movlw	low STR_46
  6257  000CB6  0100               	movlb	0	; () banked
  6258  000CB8  6FA6               	movwf	printf@fmt& (0+255),b
  6259  000CBA  0EFD               	movlw	high STR_46
  6260  000CBC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6261  000CBE  0E00               	movlw	low _writeFailureStatus
  6262  000CC0  0101               	movlb	1	; () banked
  6263  000CC2  25C4               	addwf	main@i_939& (0+255),w,b
  6264  000CC4  6ED9               	movwf	fsr2l,c
  6265  000CC6  6ADA               	clrf	fsr2h,c
  6266  000CC8  0E01               	movlw	high _writeFailureStatus
  6267  000CCA  22DA               	addwfc	fsr2h,f,c
  6268  000CCC  50DF               	movf	indf2,w,c
  6269  000CCE  0100               	movlb	0	; () banked
  6270  000CD0  6FBE               	movwf	??_main& (0+255),b
  6271  000CD2  51BE               	movf	??_main& (0+255),w,b
  6272  000CD4  6FA8               	movwf	(?_printf+2)& (0+255),b
  6273  000CD6  6BA9               	clrf	(?_printf+3)& (0+255),b
  6274  000CD8  EC18  F01B         	call	_printf	;wreg free
  6275  000CDC                     
  6276                           ;main.c: 306:                         printf("%04x", addr >> 16);
  6277  000CDC  0EED               	movlw	low STR_10
  6278  000CDE  0100               	movlb	0	; () banked
  6279  000CE0  6FA6               	movwf	printf@fmt& (0+255),b
  6280  000CE2  0EFF               	movlw	high STR_10
  6281  000CE4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6282  000CE6  C1B2  F0A8         	movff	main@addr+2,?_printf+2
  6283  000CEA  C1B3  F0A9         	movff	main@addr+3,?_printf+3
  6284  000CEE  6BAA               	clrf	(?_printf+4)& (0+255),b
  6285  000CF0  6BAB               	clrf	(?_printf+5)& (0+255),b
  6286  000CF2  EC18  F01B         	call	_printf	;wreg free
  6287  000CF6                     
  6288                           ;main.c: 307:                         printf(":");
  6289  000CF6  0EFC               	movlw	low STR_11
  6290  000CF8  0100               	movlb	0	; () banked
  6291  000CFA  6FA6               	movwf	printf@fmt& (0+255),b
  6292  000CFC  0EFF               	movlw	high STR_11
  6293  000CFE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6294  000D00  EC18  F01B         	call	_printf	;wreg free
  6295  000D04                     
  6296                           ;main.c: 308:                         printf("%04x\r\n", addr & 0X0000FFFF);
  6297  000D04  0EE0               	movlw	low STR_49
  6298  000D06  0100               	movlb	0	; () banked
  6299  000D08  6FA6               	movwf	printf@fmt& (0+255),b
  6300  000D0A  0EFF               	movlw	high STR_49
  6301  000D0C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6302  000D0E  0EFF               	movlw	255
  6303  000D10  0101               	movlb	1	; () banked
  6304  000D12  15B0               	andwf	main@addr& (0+255),w,b
  6305  000D14  0100               	movlb	0	; () banked
  6306  000D16  6FA8               	movwf	(?_printf+2)& (0+255),b
  6307  000D18  0EFF               	movlw	255
  6308  000D1A  0101               	movlb	1	; () banked
  6309  000D1C  15B1               	andwf	(main@addr+1)& (0+255),w,b
  6310  000D1E  0100               	movlb	0	; () banked
  6311  000D20  6FA9               	movwf	(?_printf+3)& (0+255),b
  6312  000D22  0E00               	movlw	0
  6313  000D24  0101               	movlb	1	; () banked
  6314  000D26  15B2               	andwf	(main@addr+2)& (0+255),w,b
  6315  000D28  0100               	movlb	0	; () banked
  6316  000D2A  6FAA               	movwf	(?_printf+4)& (0+255),b
  6317  000D2C  0E00               	movlw	0
  6318  000D2E  0101               	movlb	1	; () banked
  6319  000D30  15B3               	andwf	(main@addr+3)& (0+255),w,b
  6320  000D32  0100               	movlb	0	; () banked
  6321  000D34  6FAB               	movwf	(?_printf+5)& (0+255),b
  6322  000D36  EC18  F01B         	call	_printf	;wreg free
  6323  000D3A                     
  6324                           ;main.c: 309:                     }
  6325  000D3A  0101               	movlb	1	; () banked
  6326  000D3C  2BC4               	incf	main@i_939& (0+255),f,b
  6327  000D3E                     l6284:
  6328                           
  6329                           ; BSR set to: 1
  6330  000D3E  51D4               	movf	main@failureIndex& (0+255),w,b
  6331  000D40  5DC4               	subwf	main@i_939& (0+255),w,b
  6332  000D42  A0D8               	btfss	status,0,c
  6333  000D44  EFA6  F006         	goto	u6391
  6334  000D48  EFA8  F006         	goto	u6390
  6335  000D4C                     u6391:
  6336  000D4C  EF4A  F006         	goto	l6272
  6337  000D50                     u6390:
  6338  000D50  EF7E  F000         	goto	l6008
  6339  000D54                     l6286:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;main.c: 316:                 printf("You may terminate spooling at anytime with a key p
      +                          ress.\r\n");
  6343  000D54  0E95               	movlw	low STR_50
  6344  000D56  6FA6               	movwf	printf@fmt& (0+255),b
  6345  000D58  0EFA               	movlw	high STR_50
  6346  000D5A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6347  000D5C  EC18  F01B         	call	_printf	;wreg free
  6348                           
  6349                           ;main.c: 317:                 printf("To spool terminal contents into a file follow thes
      +                          e instructions:\r\n");
  6350  000D60  0EAC               	movlw	low STR_51
  6351  000D62  0100               	movlb	0	; () banked
  6352  000D64  6FA6               	movwf	printf@fmt& (0+255),b
  6353  000D66  0EF3               	movlw	high STR_51
  6354  000D68  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6355  000D6A  EC18  F01B         	call	_printf	;wreg free
  6356                           
  6357                           ;main.c: 318:                 printf("\r\n");
  6358  000D6E  0EAD               	movlw	low (STR_77+12)
  6359  000D70  0100               	movlb	0	; () banked
  6360  000D72  6FA6               	movwf	printf@fmt& (0+255),b
  6361  000D74  0EFF               	movlw	high (STR_77+12)
  6362  000D76  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6363  000D78  EC18  F01B         	call	_printf	;wreg free
  6364                           
  6365                           ;main.c: 319:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6366  000D7C  0ECF               	movlw	low STR_53
  6367  000D7E  0100               	movlb	0	; () banked
  6368  000D80  6FA6               	movwf	printf@fmt& (0+255),b
  6369  000D82  0EFA               	movlw	high STR_53
  6370  000D84  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6371  000D86  EC18  F01B         	call	_printf	;wreg free
  6372                           
  6373                           ;main.c: 320:                 printf("Select:     Change settings...\r\n");
  6374  000D8A  0EF5               	movlw	low STR_54
  6375  000D8C  0100               	movlb	0	; () banked
  6376  000D8E  6FA6               	movwf	printf@fmt& (0+255),b
  6377  000D90  0EFC               	movlw	high STR_54
  6378  000D92  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6379  000D94  EC18  F01B         	call	_printf	;wreg free
  6380                           
  6381                           ;main.c: 321:                 printf("Select:     Logging\r\n");
  6382  000D98  0EB5               	movlw	low STR_55
  6383  000D9A  0100               	movlb	0	; () banked
  6384  000D9C  6FA6               	movwf	printf@fmt& (0+255),b
  6385  000D9E  0EFE               	movlw	high STR_55
  6386  000DA0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6387  000DA2  EC18  F01B         	call	_printf	;wreg free
  6388                           
  6389                           ;main.c: 322:                 printf("Select:     Session logging: All session output\r\
      +                          n");
  6390  000DA6  0E76               	movlw	low STR_56
  6391  000DA8  0100               	movlb	0	; () banked
  6392  000DAA  6FA6               	movwf	printf@fmt& (0+255),b
  6393  000DAC  0EFB               	movlw	high STR_56
  6394  000DAE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6395  000DB0  EC18  F01B         	call	_printf	;wreg free
  6396                           
  6397                           ;main.c: 323:                 printf("Log file name: Browse and provide a .csv extension
      +                           to your file name\r\n");
  6398  000DB4  0E65               	movlw	low STR_57
  6399  000DB6  0100               	movlb	0	; () banked
  6400  000DB8  6FA6               	movwf	printf@fmt& (0+255),b
  6401  000DBA  0EF3               	movlw	high STR_57
  6402  000DBC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6403  000DBE  EC18  F01B         	call	_printf	;wreg free
  6404                           
  6405                           ;main.c: 324:                 printf("Select:     Apply\r\n");
  6406  000DC2  0E47               	movlw	low STR_58
  6407  000DC4  0100               	movlb	0	; () banked
  6408  000DC6  6FA6               	movwf	printf@fmt& (0+255),b
  6409  000DC8  0EFF               	movlw	high STR_58
  6410  000DCA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6411  000DCC  EC18  F01B         	call	_printf	;wreg free
  6412                           
  6413                           ;main.c: 325:                 printf("Press any key to start\r\n");
  6414  000DD0  0E55               	movlw	low STR_59
  6415  000DD2  0100               	movlb	0	; () banked
  6416  000DD4  6FA6               	movwf	printf@fmt& (0+255),b
  6417  000DD6  0EFE               	movlw	high STR_59
  6418  000DD8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6419  000DDA  EC18  F01B         	call	_printf	;wreg free
  6420  000DDE                     l6288:
  6421  000DDE  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6422  000DE2  0900               	iorlw	0
  6423  000DE4  B4D8               	btfsc	status,2,c
  6424  000DE6  EFF7  F006         	goto	u6401
  6425  000DEA  EFF9  F006         	goto	u6400
  6426  000DEE                     u6401:
  6427  000DEE  EFEF  F006         	goto	l6288
  6428  000DF2                     u6400:
  6429  000DF2                     
  6430                           ;main.c: 328:                 EUSART1_Read();
  6431  000DF2  EC2C  F01B         	call	_EUSART1_Read	;wreg free
  6432  000DF6                     
  6433                           ;main.c: 330:                 uint32_t address = writeStartAddress;
  6434  000DF6  C1B8  F1C9         	movff	main@writeStartAddress,main@address
  6435  000DFA  C1B9  F1CA         	movff	main@writeStartAddress+1,main@address+1
  6436  000DFE  C1BA  F1CB         	movff	main@writeStartAddress+2,main@address+2
  6437  000E02  C1BB  F1CC         	movff	main@writeStartAddress+3,main@address+3
  6438  000E06                     
  6439                           ;main.c: 331:                 uint32_t endAddress = writeEndAddress;
  6440  000E06  C1C0  F1B4         	movff	main@writeEndAddress,main@endAddress
  6441  000E0A  C1C1  F1B5         	movff	main@writeEndAddress+1,main@endAddress+1
  6442  000E0E  C1C2  F1B6         	movff	main@writeEndAddress+2,main@endAddress+2
  6443  000E12  C1C3  F1B7         	movff	main@writeEndAddress+3,main@endAddress+3
  6444  000E16                     
  6445                           ;main.c: 332:                 uint32_t numBlocks = (endAddress - address) >> 9;
  6446  000E16  0101               	movlb	1	; () banked
  6447  000E18  51C9               	movf	main@address& (0+255),w,b
  6448  000E1A  5DB4               	subwf	main@endAddress& (0+255),w,b
  6449  000E1C  0100               	movlb	0	; () banked
  6450  000E1E  6FBE               	movwf	??_main& (0+255),b
  6451  000E20  0101               	movlb	1	; () banked
  6452  000E22  51CA               	movf	(main@address+1)& (0+255),w,b
  6453  000E24  59B5               	subwfb	(main@endAddress+1)& (0+255),w,b
  6454  000E26  0100               	movlb	0	; () banked
  6455  000E28  6FBF               	movwf	(??_main+1)& (0+255),b
  6456  000E2A  0101               	movlb	1	; () banked
  6457  000E2C  51CB               	movf	(main@address+2)& (0+255),w,b
  6458  000E2E  59B6               	subwfb	(main@endAddress+2)& (0+255),w,b
  6459  000E30  0100               	movlb	0	; () banked
  6460  000E32  6FC0               	movwf	(??_main+2)& (0+255),b
  6461  000E34  0101               	movlb	1	; () banked
  6462  000E36  51CC               	movf	(main@address+3)& (0+255),w,b
  6463  000E38  59B7               	subwfb	(main@endAddress+3)& (0+255),w,b
  6464  000E3A  0100               	movlb	0	; () banked
  6465  000E3C  6FC1               	movwf	(??_main+3)& (0+255),b
  6466  000E3E  0E0A               	movlw	10
  6467  000E40  EF27  F007         	goto	u6410
  6468  000E44                     u6415:
  6469  000E44  90D8               	bcf	status,0,c
  6470  000E46  33C1               	rrcf	(??_main+3)& (0+255),f,b
  6471  000E48  33C0               	rrcf	(??_main+2)& (0+255),f,b
  6472  000E4A  33BF               	rrcf	(??_main+1)& (0+255),f,b
  6473  000E4C  33BE               	rrcf	??_main& (0+255),f,b
  6474  000E4E                     u6410:
  6475  000E4E  2EE8               	decfsz	wreg,f,c
  6476  000E50  EF22  F007         	goto	u6415
  6477  000E54  C0BE  F1A1         	movff	??_main,main@numBlocks
  6478  000E58  C0BF  F1A2         	movff	??_main+1,main@numBlocks+1
  6479  000E5C  C0C0  F1A3         	movff	??_main+2,main@numBlocks+2
  6480  000E60  C0C1  F1A4         	movff	??_main+3,main@numBlocks+3
  6481  000E64                     
  6482                           ; BSR set to: 0
  6483                           ;main.c: 333:                 uint32_t printedBlocks = 0;
  6484  000E64  0E00               	movlw	0
  6485  000E66  0101               	movlb	1	; () banked
  6486  000E68  6FAB               	movwf	main@printedBlocks& (0+255),b
  6487  000E6A  0E00               	movlw	0
  6488  000E6C  6FAC               	movwf	(main@printedBlocks+1)& (0+255),b
  6489  000E6E  0E00               	movlw	0
  6490  000E70  6FAD               	movwf	(main@printedBlocks+2)& (0+255),b
  6491  000E72  0E00               	movlw	0
  6492  000E74  6FAE               	movwf	(main@printedBlocks+3)& (0+255),b
  6493                           
  6494                           ;main.c: 335:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6495  000E76  EF91  F007         	goto	l6320
  6496  000E7A                     l6300:
  6497                           
  6498                           ; BSR set to: 1
  6499                           ;main.c: 336:                     SDCARD_ReadBlock(address, sdCardBuffer);
  6500  000E7A  C1C9  F015         	movff	main@address,SDCARD_ReadBlock@addr
  6501  000E7E  C1CA  F016         	movff	main@address+1,SDCARD_ReadBlock@addr+1
  6502  000E82  C1CB  F017         	movff	main@address+2,SDCARD_ReadBlock@addr+2
  6503  000E86  C1CC  F018         	movff	main@address+3,SDCARD_ReadBlock@addr+3
  6504  000E8A  0EDE               	movlw	low _sdCardBuffer
  6505  000E8C  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6506  000E8E  0E07               	movlw	high _sdCardBuffer
  6507  000E90  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6508  000E92  ECE6  F017         	call	_SDCARD_ReadBlock	;wreg free
  6509  000E96                     
  6510                           ;main.c: 337:                     address = incrementAddress(address);
  6511  000E96  C1C9  F014         	movff	main@address,incrementAddress@sdCardAddress
  6512  000E9A  C1CA  F015         	movff	main@address+1,incrementAddress@sdCardAddress+1
  6513  000E9E  C1CB  F016         	movff	main@address+2,incrementAddress@sdCardAddress+2
  6514  000EA2  C1CC  F017         	movff	main@address+3,incrementAddress@sdCardAddress+3
  6515  000EA6  EC88  F019         	call	_incrementAddress	;wreg free
  6516  000EAA  C014  F1C9         	movff	?_incrementAddress,main@address
  6517  000EAE  C015  F1CA         	movff	?_incrementAddress+1,main@address+1
  6518  000EB2  C016  F1CB         	movff	?_incrementAddress+2,main@address+2
  6519  000EB6  C017  F1CC         	movff	?_incrementAddress+3,main@address+3
  6520  000EBA                     
  6521                           ;main.c: 339:                     for (uint16_t i = 0; i != 512; i++) {
  6522  000EBA  0E00               	movlw	0
  6523  000EBC  0101               	movlb	1	; () banked
  6524  000EBE  6FBF               	movwf	(main@i_959+1)& (0+255),b
  6525  000EC0  0E00               	movlw	0
  6526  000EC2  6FBE               	movwf	main@i_959& (0+255),b
  6527  000EC4                     l6306:
  6528                           
  6529                           ; BSR set to: 1
  6530  000EC4  0E02               	movlw	2
  6531  000EC6  19BF               	xorwf	(main@i_959+1)& (0+255),w,b
  6532  000EC8  11BE               	iorwf	main@i_959& (0+255),w,b
  6533  000ECA  A4D8               	btfss	status,2,c
  6534  000ECC  EF6A  F007         	goto	u6421
  6535  000ED0  EF6C  F007         	goto	u6420
  6536  000ED4                     u6421:
  6537  000ED4  EF6E  F007         	goto	l6310
  6538  000ED8                     u6420:
  6539  000ED8  EF8B  F007         	goto	l6318
  6540  000EDC                     l6310:
  6541                           
  6542                           ; BSR set to: 1
  6543                           ;main.c: 340:                         uint16_t printVal = sdCardBuffer[i];
  6544  000EDC  0EDE               	movlw	low _sdCardBuffer
  6545  000EDE  25BE               	addwf	main@i_959& (0+255),w,b
  6546  000EE0  6ED9               	movwf	fsr2l,c
  6547  000EE2  0E07               	movlw	high _sdCardBuffer
  6548  000EE4  21BF               	addwfc	(main@i_959+1)& (0+255),w,b
  6549  000EE6  6EDA               	movwf	fsr2h,c
  6550  000EE8  50DF               	movf	indf2,w,c
  6551  000EEA  0100               	movlb	0	; () banked
  6552  000EEC  6FBE               	movwf	??_main& (0+255),b
  6553  000EEE  51BE               	movf	??_main& (0+255),w,b
  6554  000EF0  0101               	movlb	1	; () banked
  6555  000EF2  6FA5               	movwf	main@printVal& (0+255),b
  6556  000EF4  6BA6               	clrf	(main@printVal+1)& (0+255),b
  6557  000EF6                     
  6558                           ; BSR set to: 1
  6559                           ;main.c: 341:                         printf("%d\r\n", printVal);
  6560  000EF6  0E8D               	movlw	low (STR_36+25)
  6561  000EF8  0100               	movlb	0	; () banked
  6562  000EFA  6FA6               	movwf	printf@fmt& (0+255),b
  6563  000EFC  0EFD               	movlw	high (STR_36+25)
  6564  000EFE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6565  000F00  C1A5  F0A8         	movff	main@printVal,?_printf+2
  6566  000F04  C1A6  F0A9         	movff	main@printVal+1,?_printf+3
  6567  000F08  EC18  F01B         	call	_printf	;wreg free
  6568  000F0C                     
  6569                           ;main.c: 342:                     }
  6570  000F0C  0101               	movlb	1	; () banked
  6571  000F0E  4BBE               	infsnz	main@i_959& (0+255),f,b
  6572  000F10  2BBF               	incf	(main@i_959+1)& (0+255),f,b
  6573  000F12  EF62  F007         	goto	l6306
  6574  000F16                     l6318:
  6575                           
  6576                           ; BSR set to: 1
  6577                           ;main.c: 343:                     printedBlocks++;
  6578  000F16  0E01               	movlw	1
  6579  000F18  27AB               	addwf	main@printedBlocks& (0+255),f,b
  6580  000F1A  0E00               	movlw	0
  6581  000F1C  23AC               	addwfc	(main@printedBlocks+1)& (0+255),f,b
  6582  000F1E  23AD               	addwfc	(main@printedBlocks+2)& (0+255),f,b
  6583  000F20  23AE               	addwfc	(main@printedBlocks+3)& (0+255),f,b
  6584  000F22                     l6320:
  6585                           
  6586                           ; BSR set to: 1
  6587                           ;main.c: 335:                 while (!(EUSART1_is_rx_ready()) && address != endAddress) 
      +                          {
  6588  000F22  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6589  000F26  0900               	iorlw	0
  6590  000F28  A4D8               	btfss	status,2,c
  6591  000F2A  EF99  F007         	goto	u6431
  6592  000F2E  EF9B  F007         	goto	u6430
  6593  000F32                     u6431:
  6594  000F32  EFAE  F007         	goto	l6324
  6595  000F36                     u6430:
  6596  000F36  0101               	movlb	1	; () banked
  6597  000F38  51B4               	movf	main@endAddress& (0+255),w,b
  6598  000F3A  19C9               	xorwf	main@address& (0+255),w,b
  6599  000F3C  E10D               	bnz	u6441
  6600  000F3E  51B5               	movf	(main@endAddress+1)& (0+255),w,b
  6601  000F40  19CA               	xorwf	(main@address+1)& (0+255),w,b
  6602  000F42  E10A               	bnz	u6441
  6603  000F44  51B6               	movf	(main@endAddress+2)& (0+255),w,b
  6604  000F46  19CB               	xorwf	(main@address+2)& (0+255),w,b
  6605  000F48  E107               	bnz	u6441
  6606  000F4A  51B7               	movf	(main@endAddress+3)& (0+255),w,b
  6607  000F4C  19CC               	xorwf	(main@address+3)& (0+255),w,b
  6608  000F4E  A4D8               	btfss	status,2,c
  6609  000F50  EFAC  F007         	goto	u6441
  6610  000F54  EFAE  F007         	goto	u6440
  6611  000F58                     u6441:
  6612  000F58  EF3D  F007         	goto	l6300
  6613  000F5C                     u6440:
  6614  000F5C                     l6324:
  6615                           
  6616                           ;main.c: 345:                 if ((EUSART1_is_rx_ready()))
  6617  000F5C  ECB6  F01B         	call	_EUSART1_is_rx_ready	;wreg free
  6618  000F60  0900               	iorlw	0
  6619  000F62  B4D8               	btfsc	status,2,c
  6620  000F64  EFB6  F007         	goto	u6451
  6621  000F68  EFB8  F007         	goto	u6450
  6622  000F6C                     u6451:
  6623  000F6C  EFBA  F007         	goto	l6328
  6624  000F70                     u6450:
  6625  000F70                     
  6626                           ;main.c: 346:                     EUSART1_Read();
  6627  000F70  EC2C  F01B         	call	_EUSART1_Read	;wreg free
  6628  000F74                     l6328:
  6629                           
  6630                           ;main.c: 348:                 printf("Spooled %u out of the %u blocks.\r\n", printedBloc
      +                          ks, numBlocks);
  6631  000F74  0ED2               	movlw	low STR_61
  6632  000F76  0100               	movlb	0	; () banked
  6633  000F78  6FA6               	movwf	printf@fmt& (0+255),b
  6634  000F7A  0EFC               	movlw	high STR_61
  6635  000F7C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6636  000F7E  C1AB  F0A8         	movff	main@printedBlocks,?_printf+2
  6637  000F82  C1AC  F0A9         	movff	main@printedBlocks+1,?_printf+3
  6638  000F86  C1AD  F0AA         	movff	main@printedBlocks+2,?_printf+4
  6639  000F8A  C1AE  F0AB         	movff	main@printedBlocks+3,?_printf+5
  6640  000F8E  C1A1  F0AC         	movff	main@numBlocks,?_printf+6
  6641  000F92  C1A2  F0AD         	movff	main@numBlocks+1,?_printf+7
  6642  000F96  C1A3  F0AE         	movff	main@numBlocks+2,?_printf+8
  6643  000F9A  C1A4  F0AF         	movff	main@numBlocks+3,?_printf+9
  6644  000F9E  EC18  F01B         	call	_printf	;wreg free
  6645  000FA2                     
  6646                           ;main.c: 349:                 printf("To close the file follow these instructions: \r\n"
      +                          );
  6647  000FA2  0ED9               	movlw	low STR_62
  6648  000FA4  0100               	movlb	0	; () banked
  6649  000FA6  6FA6               	movwf	printf@fmt& (0+255),b
  6650  000FA8  0EFB               	movlw	high STR_62
  6651  000FAA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6652  000FAC  EC18  F01B         	call	_printf	;wreg free
  6653  000FB0                     
  6654                           ;main.c: 350:                 printf("Right mouse click on the upper left of the PuTTY w
      +                          indow\r\n");
  6655  000FB0  0ECF               	movlw	low STR_53
  6656  000FB2  0100               	movlb	0	; () banked
  6657  000FB4  6FA6               	movwf	printf@fmt& (0+255),b
  6658  000FB6  0EFA               	movlw	high STR_53
  6659  000FB8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6660  000FBA  EC18  F01B         	call	_printf	;wreg free
  6661  000FBE                     
  6662                           ;main.c: 351:                 printf("Select:     Change settings...\r\n");
  6663  000FBE  0EF5               	movlw	low STR_54
  6664  000FC0  0100               	movlb	0	; () banked
  6665  000FC2  6FA6               	movwf	printf@fmt& (0+255),b
  6666  000FC4  0EFC               	movlw	high STR_54
  6667  000FC6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6668  000FC8  EC18  F01B         	call	_printf	;wreg free
  6669  000FCC                     
  6670                           ;main.c: 352:                 printf("Select:     Logging\r\n");
  6671  000FCC  0EB5               	movlw	low STR_55
  6672  000FCE  0100               	movlb	0	; () banked
  6673  000FD0  6FA6               	movwf	printf@fmt& (0+255),b
  6674  000FD2  0EFE               	movlw	high STR_55
  6675  000FD4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6676  000FD6  EC18  F01B         	call	_printf	;wreg free
  6677  000FDA                     
  6678                           ;main.c: 353:                 printf("Select:     Session  logging: None\r\n");
  6679  000FDA  0E88               	movlw	low STR_66
  6680  000FDC  0100               	movlb	0	; () banked
  6681  000FDE  6FA6               	movwf	printf@fmt& (0+255),b
  6682  000FE0  0EFC               	movlw	high STR_66
  6683  000FE2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6684  000FE4  EC18  F01B         	call	_printf	;wreg free
  6685  000FE8                     
  6686                           ;main.c: 354:                 printf("Select:     Apply \r\n");
  6687  000FE8  0ECB               	movlw	low STR_67
  6688  000FEA  0100               	movlb	0	; () banked
  6689  000FEC  6FA6               	movwf	printf@fmt& (0+255),b
  6690  000FEE  0EFE               	movlw	high STR_67
  6691  000FF0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6692  000FF2  EC18  F01B         	call	_printf	;wreg free
  6693                           
  6694                           ;main.c: 356:                 break;
  6695  000FF6  EF7E  F000         	goto	l6008
  6696  000FFA                     l6342:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;main.c: 364:                 SPI2_Close();
  6700  000FFA  ECF6  F01B         	call	_SPI2_Close	;wreg free
  6701  000FFE                     
  6702                           ;main.c: 365:                 SPI2_Open(SPI2_DEFAULT);
  6703  000FFE  0E00               	movlw	0
  6704  001000  EC90  F017         	call	_SPI2_Open
  6705  001004                     
  6706                           ;main.c: 366:                 SDCARD_Initialize(1);
  6707  001004  0E01               	movlw	1
  6708  001006  EC77  F014         	call	_SDCARD_Initialize
  6709                           
  6710                           ;main.c: 367:                 break;
  6711  00100A  EF7E  F000         	goto	l6008
  6712  00100E                     l6348:
  6713                           
  6714                           ; BSR set to: 0
  6715                           ;main.c: 374:                 if (cmd == 'a') {
  6716  00100E  0E61               	movlw	97
  6717  001010  0101               	movlb	1	; () banked
  6718  001012  19CD               	xorwf	main@cmd& (0+255),w,b
  6719  001014  A4D8               	btfss	status,2,c
  6720  001016  EF0F  F008         	goto	u6461
  6721  00101A  EF11  F008         	goto	u6460
  6722  00101E                     u6461:
  6723  00101E  EF3D  F008         	goto	l6358
  6724  001022                     u6460:
  6725  001022                     
  6726                           ; BSR set to: 1
  6727                           ;main.c: 375:                     sdCardAddress -= 512;
  6728  001022  0E00               	movlw	0
  6729  001024  5FD6               	subwf	main@sdCardAddress& (0+255),f,b
  6730  001026  0E02               	movlw	2
  6731  001028  5BD7               	subwfb	(main@sdCardAddress+1)& (0+255),f,b
  6732  00102A  0E00               	movlw	0
  6733  00102C  5BD8               	subwfb	(main@sdCardAddress+2)& (0+255),f,b
  6734  00102E  0E00               	movlw	0
  6735  001030  5BD9               	subwfb	(main@sdCardAddress+3)& (0+255),f,b
  6736                           
  6737                           ;main.c: 376:                     if (sdCardAddress >= 0x04000000) {
  6738  001032  0E04               	movlw	4
  6739  001034  5DD9               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6740  001036  A0D8               	btfss	status,0,c
  6741  001038  EF20  F008         	goto	u6471
  6742  00103C  EF22  F008         	goto	u6470
  6743  001040                     u6471:
  6744  001040  EF34  F008         	goto	l6356
  6745  001044                     u6470:
  6746  001044                     
  6747                           ; BSR set to: 1
  6748                           ;main.c: 377:                         printf("Underflowed to high address\r\n");
  6749  001044  0E92               	movlw	low STR_68
  6750  001046  0100               	movlb	0	; () banked
  6751  001048  6FA6               	movwf	printf@fmt& (0+255),b
  6752  00104A  0EFD               	movlw	high STR_68
  6753  00104C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6754  00104E  EC18  F01B         	call	_printf	;wreg free
  6755  001052                     
  6756                           ;main.c: 378:                         sdCardAddress = 0x04000000 - 512;
  6757  001052  0E00               	movlw	0
  6758  001054  0101               	movlb	1	; () banked
  6759  001056  6FD6               	movwf	main@sdCardAddress& (0+255),b
  6760  001058  0EFE               	movlw	254
  6761  00105A  6FD7               	movwf	(main@sdCardAddress+1)& (0+255),b
  6762  00105C  0EFF               	movlw	255
  6763  00105E  6FD8               	movwf	(main@sdCardAddress+2)& (0+255),b
  6764  001060  0E03               	movlw	3
  6765  001062  6FD9               	movwf	(main@sdCardAddress+3)& (0+255),b
  6766                           
  6767                           ;main.c: 379:                     } else {
  6768  001064  EF67  F008         	goto	l458
  6769  001068                     l6356:
  6770                           
  6771                           ; BSR set to: 1
  6772                           ;main.c: 380:                         printf("Decreased address\r\n");
  6773  001068  0E1F               	movlw	low STR_69
  6774  00106A  0100               	movlb	0	; () banked
  6775  00106C  6FA6               	movwf	printf@fmt& (0+255),b
  6776  00106E  0EFF               	movlw	high STR_69
  6777  001070  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6778  001072  EC18  F01B         	call	_printf	;wreg free
  6779  001076  EF67  F008         	goto	l458
  6780  00107A                     l6358:
  6781                           
  6782                           ; BSR set to: 1
  6783                           ;main.c: 383:                     sdCardAddress += 512;
  6784  00107A  0E00               	movlw	0
  6785  00107C  27D6               	addwf	main@sdCardAddress& (0+255),f,b
  6786  00107E  0E02               	movlw	2
  6787  001080  23D7               	addwfc	(main@sdCardAddress+1)& (0+255),f,b
  6788  001082  0E00               	movlw	0
  6789  001084  23D8               	addwfc	(main@sdCardAddress+2)& (0+255),f,b
  6790  001086  0E00               	movlw	0
  6791  001088  23D9               	addwfc	(main@sdCardAddress+3)& (0+255),f,b
  6792                           
  6793                           ;main.c: 384:                     if (sdCardAddress >= 0x04000000) {
  6794  00108A  0E04               	movlw	4
  6795  00108C  5DD9               	subwf	(main@sdCardAddress+3)& (0+255),w,b
  6796  00108E  A0D8               	btfss	status,0,c
  6797  001090  EF4C  F008         	goto	u6481
  6798  001094  EF4E  F008         	goto	u6480
  6799  001098                     u6481:
  6800  001098  EF60  F008         	goto	l6364
  6801  00109C                     u6480:
  6802  00109C                     
  6803                           ; BSR set to: 1
  6804                           ;main.c: 385:                         printf("Overflowed to low address\r\n");
  6805  00109C  0EE9               	movlw	low STR_70
  6806  00109E  0100               	movlb	0	; () banked
  6807  0010A0  6FA6               	movwf	printf@fmt& (0+255),b
  6808  0010A2  0EFD               	movlw	high STR_70
  6809  0010A4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6810  0010A6  EC18  F01B         	call	_printf	;wreg free
  6811  0010AA                     
  6812                           ;main.c: 386:                         sdCardAddress = 0x00000000;
  6813  0010AA  0E00               	movlw	0
  6814  0010AC  0101               	movlb	1	; () banked
  6815  0010AE  6FD6               	movwf	main@sdCardAddress& (0+255),b
  6816  0010B0  0E00               	movlw	0
  6817  0010B2  6FD7               	movwf	(main@sdCardAddress+1)& (0+255),b
  6818  0010B4  0E00               	movlw	0
  6819  0010B6  6FD8               	movwf	(main@sdCardAddress+2)& (0+255),b
  6820  0010B8  0E00               	movlw	0
  6821  0010BA  6FD9               	movwf	(main@sdCardAddress+3)& (0+255),b
  6822                           
  6823                           ;main.c: 387:                     } else {
  6824  0010BC  EF67  F008         	goto	l458
  6825  0010C0                     l6364:
  6826                           
  6827                           ; BSR set to: 1
  6828                           ;main.c: 388:                         printf("Increased address\r\n");
  6829  0010C0  0E33               	movlw	low STR_71
  6830  0010C2  0100               	movlb	0	; () banked
  6831  0010C4  6FA6               	movwf	printf@fmt& (0+255),b
  6832  0010C6  0EFF               	movlw	high STR_71
  6833  0010C8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6834  0010CA  EC18  F01B         	call	_printf	;wreg free
  6835  0010CE                     l458:
  6836                           
  6837                           ;main.c: 393:                 printf("SD card address:  ");
  6838  0010CE  0E5B               	movlw	low STR_72
  6839  0010D0  0100               	movlb	0	; () banked
  6840  0010D2  6FA6               	movwf	printf@fmt& (0+255),b
  6841  0010D4  0EFF               	movlw	high STR_72
  6842  0010D6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6843  0010D8  EC18  F01B         	call	_printf	;wreg free
  6844                           
  6845                           ;main.c: 394:                 printf("%04x", sdCardAddress >> 16);
  6846  0010DC  0EED               	movlw	low STR_10
  6847  0010DE  0100               	movlb	0	; () banked
  6848  0010E0  6FA6               	movwf	printf@fmt& (0+255),b
  6849  0010E2  0EFF               	movlw	high STR_10
  6850  0010E4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6851  0010E6  C1D8  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  6852  0010EA  C1D9  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  6853  0010EE  6BAA               	clrf	(?_printf+4)& (0+255),b
  6854  0010F0  6BAB               	clrf	(?_printf+5)& (0+255),b
  6855  0010F2  EC18  F01B         	call	_printf	;wreg free
  6856                           
  6857                           ;main.c: 395:                 printf(":");
  6858  0010F6  0EFC               	movlw	low STR_11
  6859  0010F8  0100               	movlb	0	; () banked
  6860  0010FA  6FA6               	movwf	printf@fmt& (0+255),b
  6861  0010FC  0EFF               	movlw	high STR_11
  6862  0010FE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6863  001100  EC18  F01B         	call	_printf	;wreg free
  6864                           
  6865                           ;main.c: 396:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  6866  001104  0EED               	movlw	low STR_10
  6867  001106  0100               	movlb	0	; () banked
  6868  001108  6FA6               	movwf	printf@fmt& (0+255),b
  6869  00110A  0EFF               	movlw	high STR_10
  6870  00110C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6871  00110E  0EFF               	movlw	255
  6872  001110  0101               	movlb	1	; () banked
  6873  001112  15D6               	andwf	main@sdCardAddress& (0+255),w,b
  6874  001114  0100               	movlb	0	; () banked
  6875  001116  6FA8               	movwf	(?_printf+2)& (0+255),b
  6876  001118  0EFF               	movlw	255
  6877  00111A  0101               	movlb	1	; () banked
  6878  00111C  15D7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  6879  00111E  0100               	movlb	0	; () banked
  6880  001120  6FA9               	movwf	(?_printf+3)& (0+255),b
  6881  001122  0E00               	movlw	0
  6882  001124  0101               	movlb	1	; () banked
  6883  001126  15D8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  6884  001128  0100               	movlb	0	; () banked
  6885  00112A  6FAA               	movwf	(?_printf+4)& (0+255),b
  6886  00112C  0E00               	movlw	0
  6887  00112E  0101               	movlb	1	; () banked
  6888  001130  15D9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  6889  001132  0100               	movlb	0	; () banked
  6890  001134  6FAB               	movwf	(?_printf+5)& (0+255),b
  6891  001136  EC18  F01B         	call	_printf	;wreg free
  6892                           
  6893                           ;main.c: 397:                 printf("\r\n");
  6894  00113A  0EAD               	movlw	low (STR_77+12)
  6895  00113C  0100               	movlb	0	; () banked
  6896  00113E  6FA6               	movwf	printf@fmt& (0+255),b
  6897  001140  0EFF               	movlw	high (STR_77+12)
  6898  001142  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6899  001144  EC18  F01B         	call	_printf	;wreg free
  6900                           
  6901                           ;main.c: 398:                 break;
  6902  001148  EF7E  F000         	goto	l6008
  6903  00114C                     l6366:
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;main.c: 404:                 SDCARD_ReadBlock(sdCardAddress, sdCardBuffer);
  6907  00114C  C1D6  F015         	movff	main@sdCardAddress,SDCARD_ReadBlock@addr
  6908  001150  C1D7  F016         	movff	main@sdCardAddress+1,SDCARD_ReadBlock@addr+1
  6909  001154  C1D8  F017         	movff	main@sdCardAddress+2,SDCARD_ReadBlock@addr+2
  6910  001158  C1D9  F018         	movff	main@sdCardAddress+3,SDCARD_ReadBlock@addr+3
  6911  00115C  0EDE               	movlw	low _sdCardBuffer
  6912  00115E  6E19               	movwf	SDCARD_ReadBlock@sdCardBuffer^0,c
  6913  001160  0E07               	movlw	high _sdCardBuffer
  6914  001162  6E1A               	movwf	(SDCARD_ReadBlock@sdCardBuffer+1)^0,c
  6915  001164  ECE6  F017         	call	_SDCARD_ReadBlock	;wreg free
  6916  001168                     
  6917                           ;main.c: 405:                 printf("Read block: \r\n");
  6918  001168  0EA1               	movlw	low STR_77
  6919  00116A  0100               	movlb	0	; () banked
  6920  00116C  6FA6               	movwf	printf@fmt& (0+255),b
  6921  00116E  0EFF               	movlw	high STR_77
  6922  001170  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6923  001172  EC18  F01B         	call	_printf	;wreg free
  6924  001176                     
  6925                           ;main.c: 406:                 printf("    Address:    ");
  6926  001176  0E7F               	movlw	low STR_37
  6927  001178  0100               	movlb	0	; () banked
  6928  00117A  6FA6               	movwf	printf@fmt& (0+255),b
  6929  00117C  0EFF               	movlw	high STR_37
  6930  00117E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6931  001180  EC18  F01B         	call	_printf	;wreg free
  6932  001184                     
  6933                           ;main.c: 407:                 printf("%04x", sdCardAddress >> 16);
  6934  001184  0EED               	movlw	low STR_10
  6935  001186  0100               	movlb	0	; () banked
  6936  001188  6FA6               	movwf	printf@fmt& (0+255),b
  6937  00118A  0EFF               	movlw	high STR_10
  6938  00118C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6939  00118E  C1D8  F0A8         	movff	main@sdCardAddress+2,?_printf+2
  6940  001192  C1D9  F0A9         	movff	main@sdCardAddress+3,?_printf+3
  6941  001196  6BAA               	clrf	(?_printf+4)& (0+255),b
  6942  001198  6BAB               	clrf	(?_printf+5)& (0+255),b
  6943  00119A  EC18  F01B         	call	_printf	;wreg free
  6944  00119E                     
  6945                           ;main.c: 408:                 printf(":");
  6946  00119E  0EFC               	movlw	low STR_11
  6947  0011A0  0100               	movlb	0	; () banked
  6948  0011A2  6FA6               	movwf	printf@fmt& (0+255),b
  6949  0011A4  0EFF               	movlw	high STR_11
  6950  0011A6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6951  0011A8  EC18  F01B         	call	_printf	;wreg free
  6952  0011AC                     
  6953                           ;main.c: 409:                 printf("%04x", sdCardAddress & 0X0000FFFF);
  6954  0011AC  0EED               	movlw	low STR_10
  6955  0011AE  0100               	movlb	0	; () banked
  6956  0011B0  6FA6               	movwf	printf@fmt& (0+255),b
  6957  0011B2  0EFF               	movlw	high STR_10
  6958  0011B4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6959  0011B6  0EFF               	movlw	255
  6960  0011B8  0101               	movlb	1	; () banked
  6961  0011BA  15D6               	andwf	main@sdCardAddress& (0+255),w,b
  6962  0011BC  0100               	movlb	0	; () banked
  6963  0011BE  6FA8               	movwf	(?_printf+2)& (0+255),b
  6964  0011C0  0EFF               	movlw	255
  6965  0011C2  0101               	movlb	1	; () banked
  6966  0011C4  15D7               	andwf	(main@sdCardAddress+1)& (0+255),w,b
  6967  0011C6  0100               	movlb	0	; () banked
  6968  0011C8  6FA9               	movwf	(?_printf+3)& (0+255),b
  6969  0011CA  0E00               	movlw	0
  6970  0011CC  0101               	movlb	1	; () banked
  6971  0011CE  15D8               	andwf	(main@sdCardAddress+2)& (0+255),w,b
  6972  0011D0  0100               	movlb	0	; () banked
  6973  0011D2  6FAA               	movwf	(?_printf+4)& (0+255),b
  6974  0011D4  0E00               	movlw	0
  6975  0011D6  0101               	movlb	1	; () banked
  6976  0011D8  15D9               	andwf	(main@sdCardAddress+3)& (0+255),w,b
  6977  0011DA  0100               	movlb	0	; () banked
  6978  0011DC  6FAB               	movwf	(?_printf+5)& (0+255),b
  6979  0011DE  EC18  F01B         	call	_printf	;wreg free
  6980  0011E2                     
  6981                           ;main.c: 410:                 printf("\r\n");
  6982  0011E2  0EAD               	movlw	low (STR_77+12)
  6983  0011E4  0100               	movlb	0	; () banked
  6984  0011E6  6FA6               	movwf	printf@fmt& (0+255),b
  6985  0011E8  0EFF               	movlw	high (STR_77+12)
  6986  0011EA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  6987  0011EC  EC18  F01B         	call	_printf	;wreg free
  6988  0011F0                     
  6989                           ;main.c: 411:                 hexDumpBuffer(sdCardBuffer);
  6990  0011F0  0EDE               	movlw	low _sdCardBuffer
  6991  0011F2  0100               	movlb	0	; () banked
  6992  0011F4  6FB4               	movwf	hexDumpBuffer@sdCardBuffer& (0+255),b
  6993  0011F6  0E07               	movlw	high _sdCardBuffer
  6994  0011F8  6FB5               	movwf	(hexDumpBuffer@sdCardBuffer+1)& (0+255),b
  6995  0011FA  ECF0  F011         	call	_hexDumpBuffer	;wreg free
  6996                           
  6997                           ;main.c: 412:                 break;
  6998  0011FE  EF7E  F000         	goto	l6008
  6999  001202                     l6382:
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;main.c: 418:                 printf("Unknown key %c\r\n", cmd);
  7003  001202  0E6E               	movlw	low STR_83
  7004  001204  6FA6               	movwf	printf@fmt& (0+255),b
  7005  001206  0EFF               	movlw	high STR_83
  7006  001208  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7007  00120A  C1CD  F0A8         	movff	main@cmd,?_printf+2
  7008  00120E  6BA9               	clrf	(?_printf+3)& (0+255),b
  7009  001210  EC18  F01B         	call	_printf	;wreg free
  7010                           
  7011                           ;main.c: 419:                 break;
  7012  001214  EF7E  F000         	goto	l6008
  7013  001218                     l6386:
  7014  001218  0101               	movlb	1	; () banked
  7015  00121A  51CD               	movf	main@cmd& (0+255),w,b
  7016  00121C  0100               	movlb	0	; () banked
  7017  00121E  6FBE               	movwf	??_main& (0+255),b
  7018  001220  6BBF               	clrf	(??_main+1)& (0+255),b
  7019                           
  7020                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7021                           ; Switch size 1, requested type "simple"
  7022                           ; Number of cases is 1, Range of values is 0 to 0
  7023                           ; switch strategies available:
  7024                           ; Name         Instructions Cycles
  7025                           ; simple_byte            4     3 (average)
  7026                           ;	Chosen strategy is simple_byte
  7027  001222  51BF               	movf	(??_main+1)& (0+255),w,b
  7028  001224  0A00               	xorlw	0	; case 0
  7029  001226  B4D8               	btfsc	status,2,c
  7030  001228  EF18  F009         	goto	l6520
  7031  00122C  EF01  F009         	goto	l6382
  7032  001230                     l6520:
  7033                           
  7034                           ; BSR set to: 0
  7035                           ; Switch size 1, requested type "simple"
  7036                           ; Number of cases is 14, Range of values is 43 to 122
  7037                           ; switch strategies available:
  7038                           ; Name         Instructions Cycles
  7039                           ; simple_byte           43    22 (average)
  7040                           ;	Chosen strategy is simple_byte
  7041  001230  51BE               	movf	??_main& (0+255),w,b
  7042  001232  0A2B               	xorlw	43	; case 43
  7043  001234  B4D8               	btfsc	status,2,c
  7044  001236  EFFD  F002         	goto	l6098
  7045  00123A  0A06               	xorlw	6	; case 45
  7046  00123C  B4D8               	btfsc	status,2,c
  7047  00123E  EF05  F003         	goto	l6100
  7048  001242  0A1C               	xorlw	28	; case 49
  7049  001244  B4D8               	btfsc	status,2,c
  7050  001246  EFE8  F001         	goto	l353
  7051  00124A  0A0E               	xorlw	14	; case 63
  7052  00124C  B4D8               	btfsc	status,2,c
  7053  00124E  EF9F  F000         	goto	l6016
  7054  001252  0A7E               	xorlw	126	; case 65
  7055  001254  B4D8               	btfsc	status,2,c
  7056  001256  EF07  F008         	goto	l6348
  7057  00125A  0A11               	xorlw	17	; case 80
  7058  00125C  B4D8               	btfsc	status,2,c
  7059  00125E  EF18  F003         	goto	l374
  7060  001262  0A07               	xorlw	7	; case 87
  7061  001264  B4D8               	btfsc	status,2,c
  7062  001266  EFB6  F003         	goto	l6134
  7063  00126A  0A0D               	xorlw	13	; case 90
  7064  00126C  B4D8               	btfsc	status,2,c
  7065  00126E  EFA9  F001         	goto	l6020
  7066  001272  0A3B               	xorlw	59	; case 97
  7067  001274  B4D8               	btfsc	status,2,c
  7068  001276  EF07  F008         	goto	l6348
  7069  00127A  0A08               	xorlw	8	; case 105
  7070  00127C  B4D8               	btfsc	status,2,c
  7071  00127E  EFFD  F007         	goto	l6342
  7072  001282  0A06               	xorlw	6	; case 111
  7073  001284  B4D8               	btfsc	status,2,c
  7074  001286  EFA1  F001         	goto	l6018
  7075  00128A  0A1D               	xorlw	29	; case 114
  7076  00128C  B4D8               	btfsc	status,2,c
  7077  00128E  EFA6  F008         	goto	l6366
  7078  001292  0A01               	xorlw	1	; case 115
  7079  001294  B4D8               	btfsc	status,2,c
  7080  001296  EFAA  F006         	goto	l6286
  7081  00129A  0A09               	xorlw	9	; case 122
  7082  00129C  B4D8               	btfsc	status,2,c
  7083  00129E  EFCA  F001         	goto	l6032
  7084  0012A2  EF01  F009         	goto	l6382
  7085  0012A6  EF27  F000         	goto	start
  7086  0012AA                     __end_of_main:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function _printAscii *****************
  7090 ;; Defined at:
  7091 ;;		line 542 in file "main.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7109 ;;Total ram usage:        0 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:   13
  7112 ;; This function calls:
  7113 ;;		_printf
  7114 ;; This function is called by:
  7115 ;;		_main
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text1
  7120  0021F4                     __ptext1:
  7121                           	callstack 0
  7122  0021F4                     _printAscii:
  7123                           	callstack 17
  7124  0021F4                     
  7125                           ;main.c: 543:     printf("............................................................\r
      +                          \n");
  7126  0021F4  0EF0               	movlw	low STR_84
  7127  0021F6  0100               	movlb	0	; () banked
  7128  0021F8  6FA6               	movwf	printf@fmt& (0+255),b
  7129  0021FA  0EF3               	movlw	high STR_84
  7130  0021FC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7131  0021FE  EC18  F01B         	call	_printf	;wreg free
  7132                           
  7133                           ;main.c: 544:  printf(".....................?????????????????......................\r\n"
      +                          );
  7134  002202  0E2F               	movlw	low STR_85
  7135  002204  0100               	movlb	0	; () banked
  7136  002206  6FA6               	movwf	printf@fmt& (0+255),b
  7137  002208  0EF4               	movlw	high STR_85
  7138  00220A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7139  00220C  EC18  F01B         	call	_printf	;wreg free
  7140                           
  7141                           ;main.c: 545:  printf(".................?????????????????????????..................\r\n"
      +                          );
  7142  002210  0E6E               	movlw	low STR_86
  7143  002212  0100               	movlb	0	; () banked
  7144  002214  6FA6               	movwf	printf@fmt& (0+255),b
  7145  002216  0EF4               	movlw	high STR_86
  7146  002218  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7147  00221A  EC18  F01B         	call	_printf	;wreg free
  7148                           
  7149                           ;main.c: 546:  printf("..............???????????????????????????????...............\r\n"
      +                          );
  7150  00221E  0EAD               	movlw	low STR_87
  7151  002220  0100               	movlb	0	; () banked
  7152  002222  6FA6               	movwf	printf@fmt& (0+255),b
  7153  002224  0EF4               	movlw	high STR_87
  7154  002226  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7155  002228  EC18  F01B         	call	_printf	;wreg free
  7156                           
  7157                           ;main.c: 547:  printf("............???????????????????????????????????.............\r\n"
      +                          );
  7158  00222C  0EEC               	movlw	low STR_88
  7159  00222E  0100               	movlb	0	; () banked
  7160  002230  6FA6               	movwf	printf@fmt& (0+255),b
  7161  002232  0EF4               	movlw	high STR_88
  7162  002234  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7163  002236  EC18  F01B         	call	_printf	;wreg free
  7164                           
  7165                           ;main.c: 548:  printf("..........???????????????????????????????????????...........\r\n"
      +                          );
  7166  00223A  0E2B               	movlw	low STR_89
  7167  00223C  0100               	movlb	0	; () banked
  7168  00223E  6FA6               	movwf	printf@fmt& (0+255),b
  7169  002240  0EF5               	movlw	high STR_89
  7170  002242  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7171  002244  EC18  F01B         	call	_printf	;wreg free
  7172                           
  7173                           ;main.c: 549:  printf(".........?????????????????????????????????????????..........\r\n"
      +                          );
  7174  002248  0E6A               	movlw	low STR_90
  7175  00224A  0100               	movlb	0	; () banked
  7176  00224C  6FA6               	movwf	printf@fmt& (0+255),b
  7177  00224E  0EF5               	movlw	high STR_90
  7178  002250  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7179  002252  EC18  F01B         	call	_printf	;wreg free
  7180                           
  7181                           ;main.c: 550:  printf(".......?????????????????????????????????????????????........\r\n"
      +                          );
  7182  002256  0EE8               	movlw	low STR_91
  7183  002258  0100               	movlb	0	; () banked
  7184  00225A  6FA6               	movwf	printf@fmt& (0+255),b
  7185  00225C  0EF5               	movlw	high STR_91
  7186  00225E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7187  002260  EC18  F01B         	call	_printf	;wreg free
  7188                           
  7189                           ;main.c: 551:  printf("......???????????????????????????????????????????????.......\r\n"
      +                          );
  7190  002264  0E66               	movlw	low STR_92
  7191  002266  0100               	movlb	0	; () banked
  7192  002268  6FA6               	movwf	printf@fmt& (0+255),b
  7193  00226A  0EF6               	movlw	high STR_92
  7194  00226C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7195  00226E  EC18  F01B         	call	_printf	;wreg free
  7196                           
  7197                           ;main.c: 552:  printf(".....?????????????????????????????????????????????????......\r\n"
      +                          );
  7198  002272  0EE4               	movlw	low STR_93
  7199  002274  0100               	movlb	0	; () banked
  7200  002276  6FA6               	movwf	printf@fmt& (0+255),b
  7201  002278  0EF6               	movlw	high STR_93
  7202  00227A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7203  00227C  EC18  F01B         	call	_printf	;wreg free
  7204                           
  7205                           ;main.c: 553:  printf("....????:::::::::::?????????????????????:::::::::::????.....\r\n"
      +                          );
  7206  002280  0E23               	movlw	low STR_94
  7207  002282  0100               	movlb	0	; () banked
  7208  002284  6FA6               	movwf	printf@fmt& (0+255),b
  7209  002286  0EF7               	movlw	high STR_94
  7210  002288  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7211  00228A  EC18  F01B         	call	_printf	;wreg free
  7212                           
  7213                           ;main.c: 554:  printf("...??::::::::::::::::::::?????????::::::::::::::::::::??....\r\n"
      +                          );
  7214  00228E  0EA1               	movlw	low STR_95
  7215  002290  0100               	movlb	0	; () banked
  7216  002292  6FA6               	movwf	printf@fmt& (0+255),b
  7217  002294  0EF7               	movlw	high STR_95
  7218  002296  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7219  002298  EC18  F01B         	call	_printf	;wreg free
  7220                           
  7221                           ;main.c: 555:  printf("...??:::::::::::::::::::::::::::::::::::::::::::::::::???...\r\n"
      +                          );
  7222  00229C  0E5E               	movlw	low STR_96
  7223  00229E  0100               	movlb	0	; () banked
  7224  0022A0  6FA6               	movwf	printf@fmt& (0+255),b
  7225  0022A2  0EF8               	movlw	high STR_96
  7226  0022A4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7227  0022A6  EC18  F01B         	call	_printf	;wreg free
  7228                           
  7229                           ;main.c: 556:  printf("..????::::::::::::::::::::::???::::::::::::::::::::::????...\r\n"
      +                          );
  7230  0022AA  0E9D               	movlw	low STR_97
  7231  0022AC  0100               	movlb	0	; () banked
  7232  0022AE  6FA6               	movwf	printf@fmt& (0+255),b
  7233  0022B0  0EF8               	movlw	high STR_97
  7234  0022B2  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7235  0022B4  EC18  F01B         	call	_printf	;wreg free
  7236                           
  7237                           ;main.c: 557:  printf("..?????::::::::::::::::::::?????:::::::::::::::::::::?????..\r\n"
      +                          );
  7238  0022B8  0E5A               	movlw	low STR_98
  7239  0022BA  0100               	movlb	0	; () banked
  7240  0022BC  6FA6               	movwf	printf@fmt& (0+255),b
  7241  0022BE  0EF9               	movlw	high STR_98
  7242  0022C0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7243  0022C2  EC18  F01B         	call	_printf	;wreg free
  7244                           
  7245                           ;main.c: 558:  printf(".???????::::::::::::::::::???????:::::::::::::::::::??????..\r\n"
      +                          );
  7246  0022C6  0E99               	movlw	low STR_99
  7247  0022C8  0100               	movlb	0	; () banked
  7248  0022CA  6FA6               	movwf	printf@fmt& (0+255),b
  7249  0022CC  0EF9               	movlw	high STR_99
  7250  0022CE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7251  0022D0  EC18  F01B         	call	_printf	;wreg free
  7252                           
  7253                           ;main.c: 559:  printf(".???????:::::::::::::::::?????????::::::::::::::::::??????..\r\n"
      +                          );
  7254  0022D4  0ED8               	movlw	low STR_100
  7255  0022D6  0100               	movlb	0	; () banked
  7256  0022D8  6FA6               	movwf	printf@fmt& (0+255),b
  7257  0022DA  0EF9               	movlw	high STR_100
  7258  0022DC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7259  0022DE  EC18  F01B         	call	_printf	;wreg free
  7260                           
  7261                           ;main.c: 560:  printf(".????????:::::::::::::::???????????:::::::::::::::????????..\r\n"
      +                          );
  7262  0022E2  0E17               	movlw	low STR_101
  7263  0022E4  0100               	movlb	0	; () banked
  7264  0022E6  6FA6               	movwf	printf@fmt& (0+255),b
  7265  0022E8  0EFA               	movlw	high STR_101
  7266  0022EA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7267  0022EC  EC18  F01B         	call	_printf	;wreg free
  7268                           
  7269                           ;main.c: 561:  printf("..?????????::::::::::?????????????????::::::::::??????????..\r\n"
      +                          );
  7270  0022F0  0E56               	movlw	low STR_102
  7271  0022F2  0100               	movlb	0	; () banked
  7272  0022F4  6FA6               	movwf	printf@fmt& (0+255),b
  7273  0022F6  0EFA               	movlw	high STR_102
  7274  0022F8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7275  0022FA  EC18  F01B         	call	_printf	;wreg free
  7276                           
  7277                           ;main.c: 562:  printf("..???????????????????????????????????????????????????????...\r\n"
      +                          );
  7278  0022FE  0E1B               	movlw	low STR_103
  7279  002300  0100               	movlb	0	; () banked
  7280  002302  6FA6               	movwf	printf@fmt& (0+255),b
  7281  002304  0EF9               	movlw	high STR_103
  7282  002306  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7283  002308  EC18  F01B         	call	_printf	;wreg free
  7284                           
  7285                           ;main.c: 563:  printf("..???????????????????????????????????????????????????????...\r\n"
      +                          );
  7286  00230C  0E1B               	movlw	low STR_103
  7287  00230E  0100               	movlb	0	; () banked
  7288  002310  6FA6               	movwf	printf@fmt& (0+255),b
  7289  002312  0EF9               	movlw	high STR_103
  7290  002314  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7291  002316  EC18  F01B         	call	_printf	;wreg free
  7292                           
  7293                           ;main.c: 564:  printf("...??????????????????????????????????????????????????????...\r\n"
      +                          );
  7294  00231A  0EDC               	movlw	low STR_105
  7295  00231C  0100               	movlb	0	; () banked
  7296  00231E  6FA6               	movwf	printf@fmt& (0+255),b
  7297  002320  0EF8               	movlw	high STR_105
  7298  002322  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7299  002324  EC18  F01B         	call	_printf	;wreg free
  7300                           
  7301                           ;main.c: 565:  printf("...?????????????????????????????????????????????????????....\r\n"
      +                          );
  7302  002328  0E1F               	movlw	low STR_106
  7303  00232A  0100               	movlb	0	; () banked
  7304  00232C  6FA6               	movwf	printf@fmt& (0+255),b
  7305  00232E  0EF8               	movlw	high STR_106
  7306  002330  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7307  002332  EC18  F01B         	call	_printf	;wreg free
  7308                           
  7309                           ;main.c: 566:  printf("....?????????????:::???????????????????:::??????????????....\r\n"
      +                          );
  7310  002336  0EE0               	movlw	low STR_107
  7311  002338  0100               	movlb	0	; () banked
  7312  00233A  6FA6               	movwf	printf@fmt& (0+255),b
  7313  00233C  0EF7               	movlw	high STR_107
  7314  00233E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7315  002340  EC18  F01B         	call	_printf	;wreg free
  7316                           
  7317                           ;main.c: 567:  printf("....??????????????:::::?????????????:::::??????????????.....\r\n"
      +                          );
  7318  002344  0E62               	movlw	low STR_108
  7319  002346  0100               	movlb	0	; () banked
  7320  002348  6FA6               	movwf	printf@fmt& (0+255),b
  7321  00234A  0EF7               	movlw	high STR_108
  7322  00234C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7323  00234E  EC18  F01B         	call	_printf	;wreg free
  7324                           
  7325                           ;main.c: 568:  printf(".....??????????????:::::::???????:::::::??????????????......\r\n"
      +                          );
  7326  002352  0EA5               	movlw	low STR_109
  7327  002354  0100               	movlb	0	; () banked
  7328  002356  6FA6               	movwf	printf@fmt& (0+255),b
  7329  002358  0EF6               	movlw	high STR_109
  7330  00235A  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7331  00235C  EC18  F01B         	call	_printf	;wreg free
  7332                           
  7333                           ;main.c: 569:  printf("......???????????????:::::::::::::::::???????????????.......\r\n"
      +                          );
  7334  002360  0E27               	movlw	low STR_110
  7335  002362  0100               	movlb	0	; () banked
  7336  002364  6FA6               	movwf	printf@fmt& (0+255),b
  7337  002366  0EF6               	movlw	high STR_110
  7338  002368  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7339  00236A  EC18  F01B         	call	_printf	;wreg free
  7340                           
  7341                           ;main.c: 570:  printf(".......?????????????????:::::::::::?????????????????........\r\n"
      +                          );
  7342  00236E  0EA9               	movlw	low STR_111
  7343  002370  0100               	movlb	0	; () banked
  7344  002372  6FA6               	movwf	printf@fmt& (0+255),b
  7345  002374  0EF5               	movlw	high STR_111
  7346  002376  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7347  002378  EC18  F01B         	call	_printf	;wreg free
  7348                           
  7349                           ;main.c: 571:  printf(".........?????????????????????????????????????????..........\r\n"
      +                          );
  7350  00237C  0E6A               	movlw	low STR_90
  7351  00237E  0100               	movlb	0	; () banked
  7352  002380  6FA6               	movwf	printf@fmt& (0+255),b
  7353  002382  0EF5               	movlw	high STR_90
  7354  002384  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7355  002386  EC18  F01B         	call	_printf	;wreg free
  7356                           
  7357                           ;main.c: 572:  printf("..........???????????????????????????????????????...........\r\n"
      +                          );
  7358  00238A  0E2B               	movlw	low STR_89
  7359  00238C  0100               	movlb	0	; () banked
  7360  00238E  6FA6               	movwf	printf@fmt& (0+255),b
  7361  002390  0EF5               	movlw	high STR_89
  7362  002392  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7363  002394  EC18  F01B         	call	_printf	;wreg free
  7364                           
  7365                           ;main.c: 573:  printf("............???????????????????????????????????.............\r\n"
      +                          );
  7366  002398  0EEC               	movlw	low STR_88
  7367  00239A  0100               	movlb	0	; () banked
  7368  00239C  6FA6               	movwf	printf@fmt& (0+255),b
  7369  00239E  0EF4               	movlw	high STR_88
  7370  0023A0  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7371  0023A2  EC18  F01B         	call	_printf	;wreg free
  7372                           
  7373                           ;main.c: 574:  printf("..............???????????????????????????????...............\r\n"
      +                          );
  7374  0023A6  0EAD               	movlw	low STR_87
  7375  0023A8  0100               	movlb	0	; () banked
  7376  0023AA  6FA6               	movwf	printf@fmt& (0+255),b
  7377  0023AC  0EF4               	movlw	high STR_87
  7378  0023AE  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7379  0023B0  EC18  F01B         	call	_printf	;wreg free
  7380                           
  7381                           ;main.c: 575:  printf(".................?????????????????????????..................\r\n"
      +                          );
  7382  0023B4  0E6E               	movlw	low STR_86
  7383  0023B6  0100               	movlb	0	; () banked
  7384  0023B8  6FA6               	movwf	printf@fmt& (0+255),b
  7385  0023BA  0EF4               	movlw	high STR_86
  7386  0023BC  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7387  0023BE  EC18  F01B         	call	_printf	;wreg free
  7388                           
  7389                           ;main.c: 576:  printf(".....................?????????????????......................\r\n"
      +                          );
  7390  0023C2  0E2F               	movlw	low STR_85
  7391  0023C4  0100               	movlb	0	; () banked
  7392  0023C6  6FA6               	movwf	printf@fmt& (0+255),b
  7393  0023C8  0EF4               	movlw	high STR_85
  7394  0023CA  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7395  0023CC  EC18  F01B         	call	_printf	;wreg free
  7396                           
  7397                           ;main.c: 577:  printf("............................................................\r\n"
      +                          );
  7398  0023D0  0EF0               	movlw	low STR_84
  7399  0023D2  0100               	movlb	0	; () banked
  7400  0023D4  6FA6               	movwf	printf@fmt& (0+255),b
  7401  0023D6  0EF3               	movlw	high STR_84
  7402  0023D8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7403  0023DA  EC18  F01B         	call	_printf	;wreg free
  7404  0023DE  0012               	return		;funcret
  7405  0023E0                     __end_of_printAscii:
  7406                           	callstack 0
  7407                           
  7408 ;; *************** function _incrementAddress *****************
  7409 ;; Defined at:
  7410 ;;		line 424 in file "main.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  sdCardAddres    4   19[COMRAM] unsigned long 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  4   19[COMRAM] unsigned long 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;Total ram usage:        4 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    4
  7431 ;; This function calls:
  7432 ;;		Nothing
  7433 ;; This function is called by:
  7434 ;;		_main
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	text2
  7439  003310                     __ptext2:
  7440                           	callstack 0
  7441  003310                     _incrementAddress:
  7442                           	callstack 26
  7443  003310                     
  7444                           ;main.c: 424: uint32_t incrementAddress(uint32_t sdCardAddress);main.c: 425: {;main.c: 4
      +                          26:     sdCardAddress += 512;
  7445  003310  0E00               	movlw	0
  7446  003312  2614               	addwf	incrementAddress@sdCardAddress^0,f,c
  7447  003314  0E02               	movlw	2
  7448  003316  2215               	addwfc	(incrementAddress@sdCardAddress+1)^0,f,c
  7449  003318  0E00               	movlw	0
  7450  00331A  2216               	addwfc	(incrementAddress@sdCardAddress+2)^0,f,c
  7451  00331C  0E00               	movlw	0
  7452  00331E  2217               	addwfc	(incrementAddress@sdCardAddress+3)^0,f,c
  7453                           
  7454                           ;main.c: 427:     if (sdCardAddress >= 0x04000000)
  7455  003320  0E04               	movlw	4
  7456  003322  5C17               	subwf	(incrementAddress@sdCardAddress+3)^0,w,c
  7457  003324  A0D8               	btfss	status,0,c
  7458  003326  EF97  F019         	goto	u5701
  7459  00332A  EF99  F019         	goto	u5700
  7460  00332E                     u5701:
  7461  00332E  EFA1  F019         	goto	l5802
  7462  003332                     u5700:
  7463  003332                     
  7464                           ;main.c: 428:         sdCardAddress = 0x00000000;
  7465  003332  0E00               	movlw	0
  7466  003334  6E14               	movwf	incrementAddress@sdCardAddress^0,c
  7467  003336  0E00               	movlw	0
  7468  003338  6E15               	movwf	(incrementAddress@sdCardAddress+1)^0,c
  7469  00333A  0E00               	movlw	0
  7470  00333C  6E16               	movwf	(incrementAddress@sdCardAddress+2)^0,c
  7471  00333E  0E00               	movlw	0
  7472  003340  6E17               	movwf	(incrementAddress@sdCardAddress+3)^0,c
  7473  003342                     l5802:
  7474                           
  7475                           ;main.c: 429:     return sdCardAddress;
  7476  003342  C014  F014         	movff	incrementAddress@sdCardAddress,?_incrementAddress
  7477  003346  C015  F015         	movff	incrementAddress@sdCardAddress+1,?_incrementAddress+1
  7478  00334A  C016  F016         	movff	incrementAddress@sdCardAddress+2,?_incrementAddress+2
  7479  00334E  C017  F017         	movff	incrementAddress@sdCardAddress+3,?_incrementAddress+3
  7480  003352  0012               	return		;funcret
  7481  003354                     __end_of_incrementAddress:
  7482                           	callstack 0
  7483                           
  7484 ;; *************** function _hexDumpBuffer *****************
  7485 ;; Defined at:
  7486 ;;		line 179 in file "sdCard.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  sdCardBuffer    2   84[BANK0 ] PTR unsigned char 
  7489 ;;		 -> sdCardBuffer(512), 
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;  j               2   88[BANK0 ] int 
  7492 ;;  j               2   90[BANK0 ] int 
  7493 ;;  i               2   92[BANK0 ] unsigned short 
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;Total ram usage:       10 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:   13
  7510 ;; This function calls:
  7511 ;;		_printf
  7512 ;; This function is called by:
  7513 ;;		_main
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text3
  7518  0023E0                     __ptext3:
  7519                           	callstack 0
  7520  0023E0                     _hexDumpBuffer:
  7521                           	callstack 17
  7522  0023E0                     
  7523                           ;sdCard.c: 181:         if (i != 0 && i % 16 == 0) {;sdCard.c: 183:             for (int
      +                           j = i - 16; j < i; j++) {
  7524  0023E0  0EF2               	movlw	low STR_122
  7525  0023E2  0100               	movlb	0	; () banked
  7526  0023E4  6FA6               	movwf	printf@fmt& (0+255),b
  7527  0023E6  0EFF               	movlw	high STR_122
  7528  0023E8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7529  0023EA  EC18  F01B         	call	_printf	;wreg free
  7530  0023EE                     
  7531                           ;sdCard.c: 185:                     printf(".");
  7532  0023EE  0E00               	movlw	0
  7533  0023F0  0100               	movlb	0	; () banked
  7534  0023F2  6FBD               	movwf	(hexDumpBuffer@i+1)& (0+255),b
  7535  0023F4  0E00               	movlw	0
  7536  0023F6  6FBC               	movwf	hexDumpBuffer@i& (0+255),b
  7537  0023F8                     l5928:
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;sdCard.c: 186:                 } else {
  7541  0023F8  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7542  0023FA  11BD               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7543  0023FC  B4D8               	btfsc	status,2,c
  7544  0023FE  EF03  F012         	goto	u5801
  7545  002402  EF05  F012         	goto	u5800
  7546  002406                     u5801:
  7547  002406  EF1A  F012         	goto	l5934
  7548  00240A                     u5800:
  7549  00240A                     
  7550                           ; BSR set to: 0
  7551  00240A  0E07               	movlw	7
  7552  00240C  15BC               	andwf	hexDumpBuffer@i& (0+255),w,b
  7553  00240E  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7554  002410  0E00               	movlw	0
  7555  002412  15BD               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7556  002414  6FB7               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7557  002416  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7558  002418  11B7               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7559  00241A  A4D8               	btfss	status,2,c
  7560  00241C  EF12  F012         	goto	u5811
  7561  002420  EF14  F012         	goto	u5810
  7562  002424                     u5811:
  7563  002424  EF1A  F012         	goto	l5934
  7564  002428                     u5810:
  7565  002428                     
  7566                           ; BSR set to: 0
  7567  002428  0E8E               	movlw	low (STR_37+15)
  7568  00242A  6FA6               	movwf	printf@fmt& (0+255),b
  7569  00242C  0EFF               	movlw	high (STR_37+15)
  7570  00242E  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7571  002430  EC18  F01B         	call	_printf	;wreg free
  7572  002434                     l5934:
  7573                           
  7574                           ;sdCard.c: 187:                     printf("%c", sdCardBuffer[j]);
  7575  002434  0100               	movlb	0	; () banked
  7576  002436  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7577  002438  11BD               	iorwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7578  00243A  B4D8               	btfsc	status,2,c
  7579  00243C  EF22  F012         	goto	u5821
  7580  002440  EF24  F012         	goto	u5820
  7581  002444                     u5821:
  7582  002444  EF7D  F012         	goto	l705
  7583  002448                     u5820:
  7584  002448                     
  7585                           ; BSR set to: 0
  7586  002448  0E0F               	movlw	15
  7587  00244A  15BC               	andwf	hexDumpBuffer@i& (0+255),w,b
  7588  00244C  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7589  00244E  0E00               	movlw	0
  7590  002450  15BD               	andwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7591  002452  6FB7               	movwf	(??_hexDumpBuffer+1)& (0+255),b
  7592  002454  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7593  002456  11B7               	iorwf	(??_hexDumpBuffer+1)& (0+255),w,b
  7594  002458  A4D8               	btfss	status,2,c
  7595  00245A  EF31  F012         	goto	u5831
  7596  00245E  EF33  F012         	goto	u5830
  7597  002462                     u5831:
  7598  002462  EF7D  F012         	goto	l705
  7599  002466                     u5830:
  7600  002466                     
  7601                           ; BSR set to: 0
  7602                           ;sdCard.c: 188:                 }
  7603  002466  0E8D               	movlw	low (STR_37+14)
  7604  002468  6FA6               	movwf	printf@fmt& (0+255),b
  7605  00246A  0EFF               	movlw	high (STR_37+14)
  7606  00246C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7607  00246E  EC18  F01B         	call	_printf	;wreg free
  7608  002472                     
  7609                           ;sdCard.c: 189:             }
  7610  002472  0EF0               	movlw	240
  7611  002474  0100               	movlb	0	; () banked
  7612  002476  25BC               	addwf	hexDumpBuffer@i& (0+255),w,b
  7613  002478  6FB8               	movwf	hexDumpBuffer@j& (0+255),b
  7614  00247A  0EFF               	movlw	255
  7615  00247C  21BD               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7616  00247E  6FB9               	movwf	(hexDumpBuffer@j+1)& (0+255),b
  7617  002480  EF6C  F012         	goto	l5950
  7618  002484                     l5942:
  7619                           
  7620                           ; BSR set to: 0
  7621                           ;sdCard.c: 190:             printf("\r\n");
  7622  002484  51B8               	movf	hexDumpBuffer@j& (0+255),w,b
  7623  002486  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7624  002488  6ED9               	movwf	fsr2l,c
  7625  00248A  51B9               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7626  00248C  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7627  00248E  6EDA               	movwf	fsr2h,c
  7628  002490  0E20               	movlw	32
  7629  002492  60DF               	cpfslt	indf2,c
  7630  002494  EF4E  F012         	goto	u5841
  7631  002498  EF50  F012         	goto	u5840
  7632  00249C                     u5841:
  7633  00249C  EF58  F012         	goto	l5946
  7634  0024A0                     u5840:
  7635  0024A0                     
  7636                           ; BSR set to: 0
  7637                           ;sdCard.c: 191:         }
  7638  0024A0  0E63               	movlw	low (STR_43+74)
  7639  0024A2  6FA6               	movwf	printf@fmt& (0+255),b
  7640  0024A4  0EF3               	movlw	high (STR_43+74)
  7641  0024A6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7642  0024A8  EC18  F01B         	call	_printf	;wreg free
  7643                           
  7644                           ;sdCard.c: 192: 
  7645  0024AC  EF69  F012         	goto	l5948
  7646  0024B0                     l5946:
  7647                           
  7648                           ; BSR set to: 0
  7649                           ;sdCard.c: 193:         printf("%02x ", sdCardBuffer[i]);
  7650  0024B0  0EF6               	movlw	low STR_126
  7651  0024B2  6FA6               	movwf	printf@fmt& (0+255),b
  7652  0024B4  0EFF               	movlw	high STR_126
  7653  0024B6  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7654  0024B8  51B8               	movf	hexDumpBuffer@j& (0+255),w,b
  7655  0024BA  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7656  0024BC  6ED9               	movwf	fsr2l,c
  7657  0024BE  51B9               	movf	(hexDumpBuffer@j+1)& (0+255),w,b
  7658  0024C0  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7659  0024C2  6EDA               	movwf	fsr2h,c
  7660  0024C4  50DF               	movf	indf2,w,c
  7661  0024C6  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7662  0024C8  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7663  0024CA  6FA8               	movwf	(?_printf+2)& (0+255),b
  7664  0024CC  6BA9               	clrf	(?_printf+3)& (0+255),b
  7665  0024CE  EC18  F01B         	call	_printf	;wreg free
  7666  0024D2                     l5948:
  7667                           
  7668                           ;sdCard.c: 195: 
  7669  0024D2  0100               	movlb	0	; () banked
  7670  0024D4  4BB8               	infsnz	hexDumpBuffer@j& (0+255),f,b
  7671  0024D6  2BB9               	incf	(hexDumpBuffer@j+1)& (0+255),f,b
  7672  0024D8                     l5950:
  7673                           
  7674                           ; BSR set to: 0
  7675  0024D8  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7676  0024DA  5DB8               	subwf	hexDumpBuffer@j& (0+255),w,b
  7677  0024DC  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7678  0024DE  59B9               	subwfb	(hexDumpBuffer@j+1)& (0+255),w,b
  7679  0024E0  A0D8               	btfss	status,0,c
  7680  0024E2  EF75  F012         	goto	u5851
  7681  0024E6  EF77  F012         	goto	u5850
  7682  0024EA                     u5851:
  7683  0024EA  EF42  F012         	goto	l5942
  7684  0024EE                     u5850:
  7685  0024EE                     
  7686                           ; BSR set to: 0
  7687                           ;sdCard.c: 196:     printf("   ");
  7688  0024EE  0EAD               	movlw	low (STR_77+12)
  7689  0024F0  6FA6               	movwf	printf@fmt& (0+255),b
  7690  0024F2  0EFF               	movlw	high (STR_77+12)
  7691  0024F4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7692  0024F6  EC18  F01B         	call	_printf	;wreg free
  7693  0024FA                     l705:
  7694                           
  7695                           ;sdCard.c: 199:             printf(".");
  7696  0024FA  0EE7               	movlw	low STR_128
  7697  0024FC  0100               	movlb	0	; () banked
  7698  0024FE  6FA6               	movwf	printf@fmt& (0+255),b
  7699  002500  0EFF               	movlw	high STR_128
  7700  002502  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7701  002504  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7702  002506  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7703  002508  6ED9               	movwf	fsr2l,c
  7704  00250A  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7705  00250C  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7706  00250E  6EDA               	movwf	fsr2h,c
  7707  002510  50DF               	movf	indf2,w,c
  7708  002512  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7709  002514  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7710  002516  6FA8               	movwf	(?_printf+2)& (0+255),b
  7711  002518  6BA9               	clrf	(?_printf+3)& (0+255),b
  7712  00251A  EC18  F01B         	call	_printf	;wreg free
  7713  00251E                     
  7714                           ;sdCard.c: 200:         } else {
  7715  00251E  0100               	movlb	0	; () banked
  7716  002520  4BBC               	infsnz	hexDumpBuffer@i& (0+255),f,b
  7717  002522  2BBD               	incf	(hexDumpBuffer@i+1)& (0+255),f,b
  7718  002524                     
  7719                           ; BSR set to: 0
  7720  002524  0E02               	movlw	2
  7721  002526  5DBD               	subwf	(hexDumpBuffer@i+1)& (0+255),w,b
  7722  002528  A0D8               	btfss	status,0,c
  7723  00252A  EF99  F012         	goto	u5861
  7724  00252E  EF9B  F012         	goto	u5860
  7725  002532                     u5861:
  7726  002532  EFFC  F011         	goto	l5928
  7727  002536                     u5860:
  7728  002536                     
  7729                           ; BSR set to: 0
  7730                           ;sdCard.c: 202:         }
  7731  002536  0E8C               	movlw	low (STR_37+13)
  7732  002538  6FA6               	movwf	printf@fmt& (0+255),b
  7733  00253A  0EFF               	movlw	high (STR_37+13)
  7734  00253C  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7735  00253E  EC18  F01B         	call	_printf	;wreg free
  7736  002542                     
  7737                           ;sdCard.c: 203:     }
  7738  002542  0EF0               	movlw	240
  7739  002544  0100               	movlb	0	; () banked
  7740  002546  25BC               	addwf	hexDumpBuffer@i& (0+255),w,b
  7741  002548  6FBA               	movwf	hexDumpBuffer@j_1446& (0+255),b
  7742  00254A  0EFF               	movlw	255
  7743  00254C  21BD               	addwfc	(hexDumpBuffer@i+1)& (0+255),w,b
  7744  00254E  6FBB               	movwf	(hexDumpBuffer@j_1446+1)& (0+255),b
  7745  002550  EFD4  F012         	goto	l5970
  7746  002554                     l5962:
  7747                           
  7748                           ; BSR set to: 0
  7749                           ;sdCard.c: 204:     printf("\r\n");
  7750  002554  51BA               	movf	hexDumpBuffer@j_1446& (0+255),w,b
  7751  002556  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7752  002558  6ED9               	movwf	fsr2l,c
  7753  00255A  51BB               	movf	(hexDumpBuffer@j_1446+1)& (0+255),w,b
  7754  00255C  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7755  00255E  6EDA               	movwf	fsr2h,c
  7756  002560  0E20               	movlw	32
  7757  002562  60DF               	cpfslt	indf2,c
  7758  002564  EFB6  F012         	goto	u5871
  7759  002568  EFB8  F012         	goto	u5870
  7760  00256C                     u5871:
  7761  00256C  EFC0  F012         	goto	l5966
  7762  002570                     u5870:
  7763  002570                     
  7764                           ; BSR set to: 0
  7765                           ;sdCard.c: 205: }
  7766  002570  0E63               	movlw	low (STR_43+74)
  7767  002572  6FA6               	movwf	printf@fmt& (0+255),b
  7768  002574  0EF3               	movlw	high (STR_43+74)
  7769  002576  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7770  002578  EC18  F01B         	call	_printf	;wreg free
  7771  00257C  EFD1  F012         	goto	l5968
  7772  002580                     l5966:
  7773                           
  7774                           ; BSR set to: 0
  7775  002580  0EF6               	movlw	low STR_126
  7776  002582  6FA6               	movwf	printf@fmt& (0+255),b
  7777  002584  0EFF               	movlw	high STR_126
  7778  002586  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7779  002588  51BA               	movf	hexDumpBuffer@j_1446& (0+255),w,b
  7780  00258A  25B4               	addwf	hexDumpBuffer@sdCardBuffer& (0+255),w,b
  7781  00258C  6ED9               	movwf	fsr2l,c
  7782  00258E  51BB               	movf	(hexDumpBuffer@j_1446+1)& (0+255),w,b
  7783  002590  21B5               	addwfc	(hexDumpBuffer@sdCardBuffer+1)& (0+255),w,b
  7784  002592  6EDA               	movwf	fsr2h,c
  7785  002594  50DF               	movf	indf2,w,c
  7786  002596  6FB6               	movwf	??_hexDumpBuffer& (0+255),b
  7787  002598  51B6               	movf	??_hexDumpBuffer& (0+255),w,b
  7788  00259A  6FA8               	movwf	(?_printf+2)& (0+255),b
  7789  00259C  6BA9               	clrf	(?_printf+3)& (0+255),b
  7790  00259E  EC18  F01B         	call	_printf	;wreg free
  7791  0025A2                     l5968:
  7792  0025A2  0100               	movlb	0	; () banked
  7793  0025A4  4BBA               	infsnz	hexDumpBuffer@j_1446& (0+255),f,b
  7794  0025A6  2BBB               	incf	(hexDumpBuffer@j_1446+1)& (0+255),f,b
  7795  0025A8                     l5970:
  7796                           
  7797                           ; BSR set to: 0
  7798  0025A8  51BC               	movf	hexDumpBuffer@i& (0+255),w,b
  7799  0025AA  5DBA               	subwf	hexDumpBuffer@j_1446& (0+255),w,b
  7800  0025AC  51BD               	movf	(hexDumpBuffer@i+1)& (0+255),w,b
  7801  0025AE  59BB               	subwfb	(hexDumpBuffer@j_1446+1)& (0+255),w,b
  7802  0025B0  A0D8               	btfss	status,0,c
  7803  0025B2  EFDD  F012         	goto	u5881
  7804  0025B6  EFDF  F012         	goto	u5880
  7805  0025BA                     u5881:
  7806  0025BA  EFAA  F012         	goto	l5962
  7807  0025BE                     u5880:
  7808  0025BE                     
  7809                           ; BSR set to: 0
  7810  0025BE  0EAD               	movlw	low (STR_77+12)
  7811  0025C0  6FA6               	movwf	printf@fmt& (0+255),b
  7812  0025C2  0EFF               	movlw	high (STR_77+12)
  7813  0025C4  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  7814  0025C6  EC18  F01B         	call	_printf	;wreg free
  7815  0025CA  0012               	return		;funcret
  7816  0025CC                     __end_of_hexDumpBuffer:
  7817                           	callstack 0
  7818                           
  7819 ;; *************** function _TMR0_WriteTimer *****************
  7820 ;; Defined at:
  7821 ;;		line 122 in file "mcc_generated_files/tmr0.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;  timerVal        2   19[COMRAM] unsigned short 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      void 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7835 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;Total ram usage:        2 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:    4
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_main
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text4
  7850  0037A2                     __ptext4:
  7851                           	callstack 0
  7852  0037A2                     _TMR0_WriteTimer:
  7853                           	callstack 26
  7854  0037A2                     
  7855                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
  7856  0037A2  5015               	movf	(TMR0_WriteTimer@timerVal+1)^0,w,c
  7857  0037A4  6ED7               	movwf	215,c	;volatile
  7858  0037A6                     
  7859                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
  7860  0037A6  C014  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
  7861  0037AA  0012               	return		;funcret
  7862  0037AC                     __end_of_TMR0_WriteTimer:
  7863                           	callstack 0
  7864                           
  7865 ;; *************** function _SYSTEM_Initialize *****************
  7866 ;; Defined at:
  7867 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;		None
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;		None
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1    wreg      void 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0, cstack
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7885 ;;Total ram usage:        0 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; Hardware stack levels required when called:    6
  7888 ;; This function calls:
  7889 ;;		_ADC_Initialize
  7890 ;;		_EPWM1_Initialize
  7891 ;;		_EUSART1_Initialize
  7892 ;;		_INTERRUPT_Initialize
  7893 ;;		_OSCILLATOR_Initialize
  7894 ;;		_PIN_MANAGER_Initialize
  7895 ;;		_SPI2_Initialize
  7896 ;;		_TMR0_Initialize
  7897 ;;		_TMR2_Initialize
  7898 ;; This function is called by:
  7899 ;;		_main
  7900 ;; This function uses a non-reentrant model
  7901 ;;
  7902                           
  7903                           	psect	text5
  7904  003680                     __ptext5:
  7905                           	callstack 0
  7906  003680                     _SYSTEM_Initialize:
  7907                           	callstack 24
  7908  003680                     
  7909                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  7910  003680  ECF4  F01B         	call	_INTERRUPT_Initialize	;wreg free
  7911  003684                     
  7912                           ;mcc_generated_files/mcc.c: 54:     SPI2_Initialize();
  7913  003684  ECC0  F01B         	call	_SPI2_Initialize	;wreg free
  7914  003688                     
  7915                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  7916  003688  EC02  F01B         	call	_PIN_MANAGER_Initialize	;wreg free
  7917  00368C                     
  7918                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  7919  00368C  EC85  F01B         	call	_OSCILLATOR_Initialize	;wreg free
  7920  003690                     
  7921                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  7922  003690  ECA0  F01B         	call	_ADC_Initialize	;wreg free
  7923  003694                     
  7924                           ;mcc_generated_files/mcc.c: 58:     EPWM1_Initialize();
  7925  003694  EC66  F01B         	call	_EPWM1_Initialize	;wreg free
  7926  003698                     
  7927                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
  7928  003698  ECC9  F01B         	call	_TMR2_Initialize	;wreg free
  7929  00369C                     
  7930                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  7931  00369C  EC99  F01A         	call	_TMR0_Initialize	;wreg free
  7932  0036A0                     
  7933                           ;mcc_generated_files/mcc.c: 61:     EUSART1_Initialize();
  7934  0036A0  ECEC  F019         	call	_EUSART1_Initialize	;wreg free
  7935  0036A4  0012               	return		;funcret
  7936  0036A6                     __end_of_SYSTEM_Initialize:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function _TMR2_Initialize *****************
  7940 ;; Defined at:
  7941 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7959 ;;Total ram usage:        0 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    4
  7962 ;; This function calls:
  7963 ;;		Nothing
  7964 ;; This function is called by:
  7965 ;;		_SYSTEM_Initialize
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text6
  7970  003792                     __ptext6:
  7971                           	callstack 0
  7972  003792                     _TMR2_Initialize:
  7973                           	callstack 25
  7974  003792                     
  7975                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0x3F;
  7976  003792  0E3F               	movlw	63
  7977  003794  6EBB               	movwf	187,c	;volatile
  7978                           
  7979                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
  7980  003796  0E00               	movlw	0
  7981  003798  6EBC               	movwf	188,c	;volatile
  7982  00379A                     
  7983                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
  7984  00379A  929E               	bcf	158,1,c	;volatile
  7985                           
  7986                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x1C;
  7987  00379C  0E1C               	movlw	28
  7988  00379E  6EBA               	movwf	186,c	;volatile
  7989  0037A0  0012               	return		;funcret
  7990  0037A2                     __end_of_TMR2_Initialize:
  7991                           	callstack 0
  7992                           
  7993 ;; *************** function _TMR0_Initialize *****************
  7994 ;; Defined at:
  7995 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;		None
  7998 ;; Auto vars:     Size  Location     Type
  7999 ;;		None
  8000 ;; Return value:  Size  Location     Type
  8001 ;;                  1    wreg      void 
  8002 ;; Registers used:
  8003 ;;		wreg, status,2, status,0, cstack
  8004 ;; Tracked objects:
  8005 ;;		On entry : 0/0
  8006 ;;		On exit  : 0/0
  8007 ;;		Unchanged: 0/0
  8008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;Total ram usage:        2 bytes
  8014 ;; Hardware stack levels used:    1
  8015 ;; Hardware stack levels required when called:    5
  8016 ;; This function calls:
  8017 ;;		_TMR0_SetInterruptHandler
  8018 ;; This function is called by:
  8019 ;;		_SYSTEM_Initialize
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           
  8023                           	psect	text7
  8024  003532                     __ptext7:
  8025                           	callstack 0
  8026  003532                     _TMR0_Initialize:
  8027                           	callstack 24
  8028  003532                     
  8029                           ;mcc_generated_files/tmr0.c: 72:     T0CONbits.T08BIT = 0;
  8030  003532  9CD5               	bcf	213,6,c	;volatile
  8031  003534                     
  8032                           ;mcc_generated_files/tmr0.c: 75:     TMR0H = 0x00;
  8033  003534  0E00               	movlw	0
  8034  003536  6ED7               	movwf	215,c	;volatile
  8035                           
  8036                           ;mcc_generated_files/tmr0.c: 78:     TMR0L = 0x00;
  8037  003538  0E00               	movlw	0
  8038  00353A  6ED6               	movwf	214,c	;volatile
  8039  00353C                     
  8040                           ;mcc_generated_files/tmr0.c: 82:     timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  8041  00353C  50D6               	movf	214,w,c	;volatile
  8042  00353E  CFD7 F016          	movff	4055,??_TMR0_Initialize	;volatile
  8043  003542  6A17               	clrf	(??_TMR0_Initialize+1)^0,c
  8044  003544  C016  F017         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  8045  003548  6A16               	clrf	??_TMR0_Initialize^0,c
  8046  00354A  1016               	iorwf	??_TMR0_Initialize^0,w,c
  8047  00354C  6E41               	movwf	_timer0ReloadVal^0,c	;volatile
  8048  00354E  5017               	movf	(??_TMR0_Initialize+1)^0,w,c
  8049  003550  6E42               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  8050  003552                     
  8051                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IF = 0;
  8052  003552  94F2               	bcf	242,2,c	;volatile
  8053  003554                     
  8054                           ;mcc_generated_files/tmr0.c: 88:     INTCONbits.TMR0IE = 1;
  8055  003554  8AF2               	bsf	242,5,c	;volatile
  8056  003556                     
  8057                           ;mcc_generated_files/tmr0.c: 91:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8058  003556  0EF4               	movlw	low _TMR0_DefaultInterruptHandler
  8059  003558  6E14               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  8060  00355A  0E37               	movlw	high _TMR0_DefaultInterruptHandler
  8061  00355C  6E15               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  8062  00355E  ECD6  F01B         	call	_TMR0_SetInterruptHandler	;wreg free
  8063  003562                     
  8064                           ;mcc_generated_files/tmr0.c: 94:     T0CON = 0x9F;
  8065  003562  0E9F               	movlw	159
  8066  003564  6ED5               	movwf	213,c	;volatile
  8067  003566  0012               	return		;funcret
  8068  003568                     __end_of_TMR0_Initialize:
  8069                           	callstack 0
  8070                           
  8071 ;; *************** function _TMR0_SetInterruptHandler *****************
  8072 ;; Defined at:
  8073 ;;		line 156 in file "mcc_generated_files/tmr0.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  InterruptHan    2   19[COMRAM] PTR FTN()void 
  8076 ;;		 -> myTMR0ISR(1), TMR0_DefaultInterruptHandler(1), 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8092 ;;Total ram usage:        2 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    4
  8095 ;; This function calls:
  8096 ;;		Nothing
  8097 ;; This function is called by:
  8098 ;;		_TMR0_Initialize
  8099 ;;		_main
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text8
  8104  0037AC                     __ptext8:
  8105                           	callstack 0
  8106  0037AC                     _TMR0_SetInterruptHandler:
  8107                           	callstack 26
  8108  0037AC                     
  8109                           ;mcc_generated_files/tmr0.c: 157:     TMR0_InterruptHandler = InterruptHandler;
  8110  0037AC  C014  F043         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  8111  0037B0  C015  F044         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  8112  0037B4  0012               	return		;funcret
  8113  0037B6                     __end_of_TMR0_SetInterruptHandler:
  8114                           	callstack 0
  8115                           
  8116 ;; *************** function _SPI2_Initialize *****************
  8117 ;; Defined at:
  8118 ;;		line 62 in file "mcc_generated_files/spi2.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;		None
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;		None
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      void 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;Total ram usage:        0 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    4
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_SYSTEM_Initialize
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text9
  8147  003780                     __ptext9:
  8148                           	callstack 0
  8149  003780                     _SPI2_Initialize:
  8150                           	callstack 25
  8151  003780                     
  8152                           ;mcc_generated_files/spi2.c: 65:     SSP2STAT = 0x40;
  8153  003780  0E40               	movlw	64
  8154  003782  6E6D               	movwf	109,c	;volatile
  8155                           
  8156                           ;mcc_generated_files/spi2.c: 66:     SSP2CON1 = 0x01;
  8157  003784  0E01               	movlw	1
  8158  003786  6E6C               	movwf	108,c	;volatile
  8159                           
  8160                           ;mcc_generated_files/spi2.c: 67:     SSP2ADD = 0x01;
  8161  003788  0E01               	movlw	1
  8162  00378A  6E6E               	movwf	110,c	;volatile
  8163  00378C                     
  8164                           ;mcc_generated_files/spi2.c: 68:     TRISBbits.TRISB1 = 0;
  8165  00378C  9293               	bcf	147,1,c	;volatile
  8166  00378E                     
  8167                           ;mcc_generated_files/spi2.c: 69:     SSP2CON1bits.SSPEN = 0;
  8168  00378E  9A6C               	bcf	108,5,c	;volatile
  8169  003790  0012               	return		;funcret
  8170  003792                     __end_of_SPI2_Initialize:
  8171                           	callstack 0
  8172                           
  8173 ;; *************** function _PIN_MANAGER_Initialize *****************
  8174 ;; Defined at:
  8175 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8176 ;; Parameters:    Size  Location     Type
  8177 ;;		None
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;		None
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8193 ;;Total ram usage:        0 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    4
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_SYSTEM_Initialize
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text10
  8204  003604                     __ptext10:
  8205                           	callstack 0
  8206  003604                     _PIN_MANAGER_Initialize:
  8207                           	callstack 25
  8208  003604                     
  8209                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8210  003604  0E00               	movlw	0
  8211  003606  6E89               	movwf	137,c	;volatile
  8212                           
  8213                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8214  003608  0E00               	movlw	0
  8215  00360A  6E8A               	movwf	138,c	;volatile
  8216                           
  8217                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8218  00360C  0E00               	movlw	0
  8219  00360E  6E8B               	movwf	139,c	;volatile
  8220  003610                     
  8221                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
  8222  003610  6892               	setf	146,c	;volatile
  8223                           
  8224                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xE5;
  8225  003612  0EE5               	movlw	229
  8226  003614  6E93               	movwf	147,c	;volatile
  8227                           
  8228                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBB;
  8229  003616  0EBB               	movlw	187
  8230  003618  6E94               	movwf	148,c	;volatile
  8231                           
  8232                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3C;
  8233  00361A  0E3C               	movlw	60
  8234  00361C  010F               	movlb	15	; () banked
  8235  00361E  6F3A               	movwf	58,b	;volatile
  8236                           
  8237                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x31;
  8238  003620  0E31               	movlw	49
  8239  003622  6F39               	movwf	57,b	;volatile
  8240                           
  8241                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x2F;
  8242  003624  0E2F               	movlw	47
  8243  003626  6F38               	movwf	56,b	;volatile
  8244                           
  8245                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8246  003628  0E00               	movlw	0
  8247  00362A  6E61               	movwf	97,c	;volatile
  8248  00362C                     
  8249                           ; BSR set to: 15
  8250                           ;mcc_generated_files/pin_manager.c: 82:     INTCON2bits.nRBPU = 1;
  8251  00362C  8EF1               	bsf	241,7,c	;volatile
  8252  00362E                     
  8253                           ; BSR set to: 15
  8254  00362E  0012               	return		;funcret
  8255  003630                     __end_of_PIN_MANAGER_Initialize:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function _OSCILLATOR_Initialize *****************
  8259 ;; Defined at:
  8260 ;;		line 64 in file "mcc_generated_files/mcc.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;		None
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;		None
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8278 ;;Total ram usage:        0 bytes
  8279 ;; Hardware stack levels used:    1
  8280 ;; Hardware stack levels required when called:    4
  8281 ;; This function calls:
  8282 ;;		Nothing
  8283 ;; This function is called by:
  8284 ;;		_SYSTEM_Initialize
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text11
  8289  00370A                     __ptext11:
  8290                           	callstack 0
  8291  00370A                     _OSCILLATOR_Initialize:
  8292                           	callstack 25
  8293  00370A                     
  8294                           ;mcc_generated_files/mcc.c: 67:     OSCCON = 0x70;
  8295  00370A  0E70               	movlw	112
  8296  00370C  6ED3               	movwf	211,c	;volatile
  8297                           
  8298                           ;mcc_generated_files/mcc.c: 69:     OSCCON2 = 0x04;
  8299  00370E  0E04               	movlw	4
  8300  003710  6ED2               	movwf	210,c	;volatile
  8301                           
  8302                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x40;
  8303  003712  0E40               	movlw	64
  8304  003714  6E9B               	movwf	155,c	;volatile
  8305  003716                     l254:
  8306                           
  8307                           ;mcc_generated_files/mcc.c: 73:     while(PLLRDY == 0)
  8308  003716  AED2               	btfss	4050,7,c	;volatile
  8309  003718  EF90  F01B         	goto	u5611
  8310  00371C  EF92  F01B         	goto	u5610
  8311  003720                     u5611:
  8312  003720  EF8B  F01B         	goto	l254
  8313  003724                     u5610:
  8314  003724  0012               	return		;funcret
  8315  003726                     __end_of_OSCILLATOR_Initialize:
  8316                           	callstack 0
  8317                           
  8318 ;; *************** function _INTERRUPT_Initialize *****************
  8319 ;; Defined at:
  8320 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		None
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    4
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_SYSTEM_Initialize
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text12
  8349  0037E8                     __ptext12:
  8350                           	callstack 0
  8351  0037E8                     _INTERRUPT_Initialize:
  8352                           	callstack 25
  8353  0037E8                     
  8354                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  8355  0037E8  9ED0               	bcf	208,7,c	;volatile
  8356  0037EA  0012               	return		;funcret
  8357  0037EC                     __end_of_INTERRUPT_Initialize:
  8358                           	callstack 0
  8359                           
  8360 ;; *************** function _EUSART1_Initialize *****************
  8361 ;; Defined at:
  8362 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8363 ;; Parameters:    Size  Location     Type
  8364 ;;		None
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;		None
  8367 ;; Return value:  Size  Location     Type
  8368 ;;                  1    wreg      void 
  8369 ;; Registers used:
  8370 ;;		wreg, status,2, status,0, cstack
  8371 ;; Tracked objects:
  8372 ;;		On entry : 0/0
  8373 ;;		On exit  : 0/0
  8374 ;;		Unchanged: 0/0
  8375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8380 ;;Total ram usage:        0 bytes
  8381 ;; Hardware stack levels used:    1
  8382 ;; Hardware stack levels required when called:    5
  8383 ;; This function calls:
  8384 ;;		_EUSART1_SetErrorHandler
  8385 ;;		_EUSART1_SetFramingErrorHandler
  8386 ;;		_EUSART1_SetOverrunErrorHandler
  8387 ;; This function is called by:
  8388 ;;		_SYSTEM_Initialize
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text13
  8393  0033D8                     __ptext13:
  8394                           	callstack 0
  8395  0033D8                     _EUSART1_Initialize:
  8396                           	callstack 24
  8397  0033D8                     
  8398                           ;mcc_generated_files/eusart1.c: 71:     BAUDCON1 = 0x08;
  8399  0033D8  0E08               	movlw	8
  8400  0033DA  6EB8               	movwf	184,c	;volatile
  8401                           
  8402                           ;mcc_generated_files/eusart1.c: 74:     RCSTA1 = 0x90;
  8403  0033DC  0E90               	movlw	144
  8404  0033DE  6EAB               	movwf	171,c	;volatile
  8405                           
  8406                           ;mcc_generated_files/eusart1.c: 77:     TXSTA1 = 0x24;
  8407  0033E0  0E24               	movlw	36
  8408  0033E2  6EAC               	movwf	172,c	;volatile
  8409                           
  8410                           ;mcc_generated_files/eusart1.c: 80:     SPBRG1 = 0x82;
  8411  0033E4  0E82               	movlw	130
  8412  0033E6  6EAF               	movwf	175,c	;volatile
  8413                           
  8414                           ;mcc_generated_files/eusart1.c: 83:     SPBRGH1 = 0x06;
  8415  0033E8  0E06               	movlw	6
  8416  0033EA  6EB0               	movwf	176,c	;volatile
  8417  0033EC                     
  8418                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8419  0033EC  0E00               	movlw	0
  8420  0033EE  6E14               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  8421  0033F0  0E00               	movlw	0
  8422  0033F2  6E15               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  8423  0033F4  ECE0  F01B         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  8424  0033F8                     
  8425                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8426  0033F8  0E00               	movlw	0
  8427  0033FA  6E14               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  8428  0033FC  0E00               	movlw	0
  8429  0033FE  6E15               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  8430  003400  ECDB  F01B         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  8431  003404                     
  8432                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8433  003404  0E00               	movlw	0
  8434  003406  6E14               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  8435  003408  0E00               	movlw	0
  8436  00340A  6E15               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  8437  00340C  ECE5  F01B         	call	_EUSART1_SetErrorHandler	;wreg free
  8438  003410                     
  8439                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8440  003410  0E00               	movlw	0
  8441  003412  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
  8442  003414  0012               	return		;funcret
  8443  003416                     __end_of_EUSART1_Initialize:
  8444                           	callstack 0
  8445                           
  8446 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8447 ;; Defined at:
  8448 ;;		line 170 in file "mcc_generated_files/eusart1.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8451 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  1    wreg      void 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8467 ;;Total ram usage:        2 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    4
  8470 ;; This function calls:
  8471 ;;		Nothing
  8472 ;; This function is called by:
  8473 ;;		_EUSART1_Initialize
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           	psect	text14
  8478  0037B6                     __ptext14:
  8479                           	callstack 0
  8480  0037B6                     _EUSART1_SetOverrunErrorHandler:
  8481                           	callstack 24
  8482  0037B6                     
  8483                           ;mcc_generated_files/eusart1.c: 171:     EUSART1_OverrunErrorHandler = interruptHandler;
  8484  0037B6  C014  F0C8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  8485  0037BA  C015  F0C9         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  8486  0037BE  0012               	return		;funcret
  8487  0037C0                     __end_of_EUSART1_SetOverrunErrorHandler:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8491 ;; Defined at:
  8492 ;;		line 166 in file "mcc_generated_files/eusart1.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8495 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8496 ;; Auto vars:     Size  Location     Type
  8497 ;;		None
  8498 ;; Return value:  Size  Location     Type
  8499 ;;                  1    wreg      void 
  8500 ;; Registers used:
  8501 ;;		wreg, status,2, status,0
  8502 ;; Tracked objects:
  8503 ;;		On entry : 0/0
  8504 ;;		On exit  : 0/0
  8505 ;;		Unchanged: 0/0
  8506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;Total ram usage:        2 bytes
  8512 ;; Hardware stack levels used:    1
  8513 ;; Hardware stack levels required when called:    4
  8514 ;; This function calls:
  8515 ;;		Nothing
  8516 ;; This function is called by:
  8517 ;;		_EUSART1_Initialize
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           	psect	text15
  8522  0037C0                     __ptext15:
  8523                           	callstack 0
  8524  0037C0                     _EUSART1_SetFramingErrorHandler:
  8525                           	callstack 24
  8526  0037C0                     
  8527                           ;mcc_generated_files/eusart1.c: 167:     EUSART1_FramingErrorHandler = interruptHandler;
  8528  0037C0  C014  F0CA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  8529  0037C4  C015  F0CB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  8530  0037C8  0012               	return		;funcret
  8531  0037CA                     __end_of_EUSART1_SetFramingErrorHandler:
  8532                           	callstack 0
  8533                           
  8534 ;; *************** function _EUSART1_SetErrorHandler *****************
  8535 ;; Defined at:
  8536 ;;		line 174 in file "mcc_generated_files/eusart1.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  interruptHan    2   19[COMRAM] PTR FTN()void 
  8539 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1    wreg      void 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, status,0
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8555 ;;Total ram usage:        2 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    4
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_EUSART1_Initialize
  8562 ;; This function uses a non-reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text16
  8566  0037CA                     __ptext16:
  8567                           	callstack 0
  8568  0037CA                     _EUSART1_SetErrorHandler:
  8569                           	callstack 24
  8570  0037CA                     
  8571                           ;mcc_generated_files/eusart1.c: 175:     EUSART1_ErrorHandler = interruptHandler;
  8572  0037CA  C014  F0C6         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  8573  0037CE  C015  F0C7         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  8574  0037D2  0012               	return		;funcret
  8575  0037D4                     __end_of_EUSART1_SetErrorHandler:
  8576                           	callstack 0
  8577                           
  8578 ;; *************** function _EPWM1_Initialize *****************
  8579 ;; Defined at:
  8580 ;;		line 64 in file "mcc_generated_files/epwm1.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;		None
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;Total ram usage:        0 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; Hardware stack levels required when called:    4
  8601 ;; This function calls:
  8602 ;;		Nothing
  8603 ;; This function is called by:
  8604 ;;		_SYSTEM_Initialize
  8605 ;; This function uses a non-reentrant model
  8606 ;;
  8607                           
  8608                           	psect	text17
  8609  0036CC                     __ptext17:
  8610                           	callstack 0
  8611  0036CC                     _EPWM1_Initialize:
  8612                           	callstack 25
  8613  0036CC                     
  8614                           ;mcc_generated_files/epwm1.c: 69:  CCP1CON = 0x3C;
  8615  0036CC  0E3C               	movlw	60
  8616  0036CE  6EBD               	movwf	189,c	;volatile
  8617                           
  8618                           ;mcc_generated_files/epwm1.c: 72:  ECCP1AS = 0x00;
  8619  0036D0  0E00               	movlw	0
  8620  0036D2  6EB6               	movwf	182,c	;volatile
  8621                           
  8622                           ;mcc_generated_files/epwm1.c: 75:  PWM1CON = 0x80;
  8623  0036D4  0E80               	movlw	128
  8624  0036D6  6EB7               	movwf	183,c	;volatile
  8625                           
  8626                           ;mcc_generated_files/epwm1.c: 78:  PSTR1CON = 0x01;
  8627  0036D8  0E01               	movlw	1
  8628  0036DA  6EB9               	movwf	185,c	;volatile
  8629                           
  8630                           ;mcc_generated_files/epwm1.c: 81:  CCPR1H = 0x00;
  8631  0036DC  0E00               	movlw	0
  8632  0036DE  6EBF               	movwf	191,c	;volatile
  8633                           
  8634                           ;mcc_generated_files/epwm1.c: 84:  CCPR1L = 0x1F;
  8635  0036E0  0E1F               	movlw	31
  8636  0036E2  6EBE               	movwf	190,c	;volatile
  8637                           
  8638                           ;mcc_generated_files/epwm1.c: 87:  CCPTMRS0bits.C1TSEL = 0x0;
  8639  0036E4  0EFC               	movlw	-4
  8640  0036E6  010F               	movlb	15	; () banked
  8641  0036E8  1749               	andwf	73,f,b	;volatile
  8642  0036EA                     
  8643                           ; BSR set to: 15
  8644  0036EA  0012               	return		;funcret
  8645  0036EC                     __end_of_EPWM1_Initialize:
  8646                           	callstack 0
  8647                           
  8648 ;; *************** function _ADC_Initialize *****************
  8649 ;; Defined at:
  8650 ;;		line 62 in file "mcc_generated_files/adc.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;		None
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;		None
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      void 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8668 ;;Total ram usage:        0 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; Hardware stack levels required when called:    4
  8671 ;; This function calls:
  8672 ;;		Nothing
  8673 ;; This function is called by:
  8674 ;;		_SYSTEM_Initialize
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           	psect	text18
  8679  003740                     __ptext18:
  8680                           	callstack 0
  8681  003740                     _ADC_Initialize:
  8682                           	callstack 25
  8683  003740                     
  8684                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  8685  003740  0E00               	movlw	0
  8686  003742  6EC1               	movwf	193,c	;volatile
  8687                           
  8688                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x26;
  8689  003744  0E26               	movlw	38
  8690  003746  6EC0               	movwf	192,c	;volatile
  8691                           
  8692                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  8693  003748  0E00               	movlw	0
  8694  00374A  6EC3               	movwf	195,c	;volatile
  8695                           
  8696                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  8697  00374C  0E00               	movlw	0
  8698  00374E  6EC4               	movwf	196,c	;volatile
  8699                           
  8700                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x11;
  8701  003750  0E11               	movlw	17
  8702  003752  6EC2               	movwf	194,c	;volatile
  8703  003754  0012               	return		;funcret
  8704  003756                     __end_of_ADC_Initialize:
  8705                           	callstack 0
  8706                           
  8707 ;; *************** function _SPI2_Open *****************
  8708 ;; Defined at:
  8709 ;;		line 72 in file "mcc_generated_files/spi2.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  spi2UniqueCo    1    wreg     enum E355
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  spi2UniqueCo    1   20[COMRAM] enum E355
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  1    wreg      _Bool 
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8727 ;;Total ram usage:        2 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    4
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_main
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           	psect	text19
  8738  002F20                     __ptext19:
  8739                           	callstack 0
  8740  002F20                     _SPI2_Open:
  8741                           	callstack 26
  8742                           
  8743                           ;incstack = 0
  8744                           ;SPI2_Open@spi2UniqueConfiguration stored from wreg
  8745  002F20  6E15               	movwf	SPI2_Open@spi2UniqueConfiguration^0,c
  8746  002F22                     
  8747                           ;mcc_generated_files/spi2.c: 72: _Bool SPI2_Open(spi2_modes_t spi2UniqueConfiguration);m
      +                          cc_generated_files/spi2.c: 73: {;mcc_generated_files/spi2.c: 74:     if(!SSP2CON1bits.SS
      +                          PEN)
  8748  002F22  BA6C               	btfsc	108,5,c	;volatile
  8749  002F24  EF96  F017         	goto	u5661
  8750  002F28  EF98  F017         	goto	u5660
  8751  002F2C                     u5661:
  8752  002F2C  EFE5  F017         	goto	l541
  8753  002F30                     u5660:
  8754  002F30                     
  8755                           ;mcc_generated_files/spi2.c: 75:     {;mcc_generated_files/spi2.c: 76:         SSP2STAT 
      +                          = spi2_configuration[spi2UniqueConfiguration].stat;
  8756  002F30  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8757  002F32  0D04               	mullw	4
  8758  002F34  0E01               	movlw	1
  8759  002F36  26F3               	addwf	243,f,c
  8760  002F38  0E00               	movlw	0
  8761  002F3A  22F4               	addwfc	244,f,c
  8762  002F3C  0E15               	movlw	low _spi2_configuration
  8763  002F3E  24F3               	addwf	243,w,c
  8764  002F40  6EF6               	movwf	tblptrl,c
  8765  002F42  0EF3               	movlw	high _spi2_configuration
  8766  002F44  20F4               	addwfc	244,w,c
  8767  002F46  6EF7               	movwf	tblptrh,c
  8768  002F48                     	if	1	;There are 3 active tblptr bytes
  8769  002F48  6AF8               	clrf	tblptru,c
  8770  002F4A  0E00               	movlw	low (__mediumconst shr (0+16))
  8771  002F4C  22F8               	addwfc	tblptru,f,c
  8772  002F4E                     	endif
  8773  002F4E  0008               	tblrd		*
  8774  002F50  CFF5 FF6D          	movff	tablat,3949	;volatile
  8775                           
  8776                           ;mcc_generated_files/spi2.c: 77:         SSP2CON1 = spi2_configuration[spi2UniqueConfigu
      +                          ration].con1;
  8777  002F54  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8778  002F56  0D04               	mullw	4
  8779  002F58  0E15               	movlw	low _spi2_configuration
  8780  002F5A  24F3               	addwf	243,w,c
  8781  002F5C  6EF6               	movwf	tblptrl,c
  8782  002F5E  0EF3               	movlw	high _spi2_configuration
  8783  002F60  20F4               	addwfc	244,w,c
  8784  002F62  6EF7               	movwf	tblptrh,c
  8785  002F64                     	if	1	;There are 3 active tblptr bytes
  8786  002F64  6AF8               	clrf	tblptru,c
  8787  002F66  0E00               	movlw	low (__mediumconst shr (0+16))
  8788  002F68  22F8               	addwfc	tblptru,f,c
  8789  002F6A                     	endif
  8790  002F6A  0008               	tblrd		*
  8791  002F6C  CFF5 FF6C          	movff	tablat,3948	;volatile
  8792  002F70                     
  8793                           ;mcc_generated_files/spi2.c: 78:         SSP2CON2 = 0x00;
  8794  002F70  0E00               	movlw	0
  8795  002F72  6E6B               	movwf	107,c	;volatile
  8796  002F74                     
  8797                           ;mcc_generated_files/spi2.c: 79:         SSP2ADD = spi2_configuration[spi2UniqueConfigur
      +                          ation].add;
  8798  002F74  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8799  002F76  0D04               	mullw	4
  8800  002F78  0E02               	movlw	2
  8801  002F7A  26F3               	addwf	243,f,c
  8802  002F7C  0E00               	movlw	0
  8803  002F7E  22F4               	addwfc	244,f,c
  8804  002F80  0E15               	movlw	low _spi2_configuration
  8805  002F82  24F3               	addwf	243,w,c
  8806  002F84  6EF6               	movwf	tblptrl,c
  8807  002F86  0EF3               	movlw	high _spi2_configuration
  8808  002F88  20F4               	addwfc	244,w,c
  8809  002F8A  6EF7               	movwf	tblptrh,c
  8810  002F8C                     	if	1	;There are 3 active tblptr bytes
  8811  002F8C  6AF8               	clrf	tblptru,c
  8812  002F8E  0E00               	movlw	low (__mediumconst shr (0+16))
  8813  002F90  22F8               	addwfc	tblptru,f,c
  8814  002F92                     	endif
  8815  002F92  0008               	tblrd		*
  8816  002F94  CFF5 FF6E          	movff	tablat,3950	;volatile
  8817  002F98                     
  8818                           ;mcc_generated_files/spi2.c: 80:         TRISBbits.TRISB1 = spi2_configuration[spi2Uniqu
      +                          eConfiguration].operation;
  8819  002F98  5015               	movf	SPI2_Open@spi2UniqueConfiguration^0,w,c
  8820  002F9A  0D04               	mullw	4
  8821  002F9C  0E03               	movlw	3
  8822  002F9E  26F3               	addwf	243,f,c
  8823  002FA0  0E00               	movlw	0
  8824  002FA2  22F4               	addwfc	244,f,c
  8825  002FA4  0E15               	movlw	low _spi2_configuration
  8826  002FA6  24F3               	addwf	243,w,c
  8827  002FA8  6EF6               	movwf	tblptrl,c
  8828  002FAA  0EF3               	movlw	high _spi2_configuration
  8829  002FAC  20F4               	addwfc	244,w,c
  8830  002FAE  6EF7               	movwf	tblptrh,c
  8831  002FB0                     	if	1	;There are 3 active tblptr bytes
  8832  002FB0  6AF8               	clrf	tblptru,c
  8833  002FB2  0E00               	movlw	low (__mediumconst shr (0+16))
  8834  002FB4  22F8               	addwfc	tblptru,f,c
  8835  002FB6                     	endif
  8836  002FB6  0008               	tblrd		*
  8837  002FB8  CFF5 F014          	movff	tablat,??_SPI2_Open
  8838  002FBC  4614               	rlncf	??_SPI2_Open^0,f,c
  8839  002FBE  5093               	movf	147,w,c	;volatile
  8840  002FC0  1814               	xorwf	??_SPI2_Open^0,w,c
  8841  002FC2  0BFD               	andlw	-3
  8842  002FC4  1814               	xorwf	??_SPI2_Open^0,w,c
  8843  002FC6  6E93               	movwf	147,c	;volatile
  8844  002FC8                     
  8845                           ;mcc_generated_files/spi2.c: 81:         SSP2CON1bits.SSPEN = 1;
  8846  002FC8  8A6C               	bsf	108,5,c	;volatile
  8847  002FCA                     l541:
  8848  002FCA  0012               	return		;funcret
  8849  002FCC                     __end_of_SPI2_Open:
  8850                           	callstack 0
  8851                           
  8852 ;; *************** function _SPI2_Close *****************
  8853 ;; Defined at:
  8854 ;;		line 87 in file "mcc_generated_files/spi2.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      void 
  8861 ;; Registers used:
  8862 ;;		None
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8872 ;;Total ram usage:        0 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; Hardware stack levels required when called:    4
  8875 ;; This function calls:
  8876 ;;		Nothing
  8877 ;; This function is called by:
  8878 ;;		_main
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881                           
  8882                           	psect	text20
  8883  0037EC                     __ptext20:
  8884                           	callstack 0
  8885  0037EC                     _SPI2_Close:
  8886                           	callstack 26
  8887  0037EC                     
  8888                           ;mcc_generated_files/spi2.c: 89:     SSP2CON1bits.SSPEN = 0;
  8889  0037EC  9A6C               	bcf	108,5,c	;volatile
  8890  0037EE  0012               	return		;funcret
  8891  0037F0                     __end_of_SPI2_Close:
  8892                           	callstack 0
  8893                           
  8894 ;; *************** function _SDCARD_WriteBlock *****************
  8895 ;; Defined at:
  8896 ;;		line 48 in file "sdCard.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  addr            4   20[COMRAM] unsigned long 
  8899 ;;  sdCardBuffer    2   24[COMRAM] PTR unsigned char 
  8900 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  i               2   26[COMRAM] unsigned short 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8912 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;Total ram usage:        8 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    5
  8919 ;; This function calls:
  8920 ;;		_SPI2_ExchangeByte
  8921 ;; This function is called by:
  8922 ;;		_main
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text21
  8927  0030FC                     __ptext21:
  8928                           	callstack 0
  8929  0030FC                     _SDCARD_WriteBlock:
  8930                           	callstack 25
  8931  0030FC  988A               	bcf	138,4,c	;volatile
  8932  0030FE                     
  8933                           ;sdCard.c: 54:     SPI2_ExchangeByte(0xFF);
  8934  0030FE  0EFF               	movlw	255
  8935  003100  EC93  F01B         	call	_SPI2_ExchangeByte
  8936  003104                     
  8937                           ;sdCard.c: 55: 
  8938  003104  0E58               	movlw	88
  8939  003106  EC93  F01B         	call	_SPI2_ExchangeByte
  8940  00310A                     
  8941                           ;sdCard.c: 56: 
  8942  00310A  5018               	movf	(SDCARD_WriteBlock@addr+3)^0,w,c
  8943  00310C  EC93  F01B         	call	_SPI2_ExchangeByte
  8944  003110                     
  8945                           ;sdCard.c: 57:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  8946  003110  5017               	movf	(SDCARD_WriteBlock@addr+2)^0,w,c
  8947  003112  EC93  F01B         	call	_SPI2_ExchangeByte
  8948  003116                     
  8949                           ;sdCard.c: 58: 
  8950  003116  5016               	movf	(SDCARD_WriteBlock@addr+1)^0,w,c
  8951  003118  EC93  F01B         	call	_SPI2_ExchangeByte
  8952  00311C                     
  8953                           ;sdCard.c: 59: 
  8954  00311C  5015               	movf	SDCARD_WriteBlock@addr^0,w,c
  8955  00311E  EC93  F01B         	call	_SPI2_ExchangeByte
  8956  003122                     
  8957                           ;sdCard.c: 60:     SPI2_ExchangeByte(0xFF);
  8958  003122  0EFF               	movlw	255
  8959  003124  EC93  F01B         	call	_SPI2_ExchangeByte
  8960  003128                     l5764:
  8961  003128  0EFF               	movlw	255
  8962  00312A  EC93  F01B         	call	_SPI2_ExchangeByte
  8963  00312E  0AFF               	xorlw	255
  8964  003130  B4D8               	btfsc	status,2,c
  8965  003132  EF9D  F018         	goto	u5671
  8966  003136  EF9F  F018         	goto	u5670
  8967  00313A                     u5671:
  8968  00313A  EF94  F018         	goto	l5764
  8969  00313E                     u5670:
  8970  00313E                     
  8971                           ;sdCard.c: 66: 
  8972  00313E  0EFF               	movlw	255
  8973  003140  EC93  F01B         	call	_SPI2_ExchangeByte
  8974                           
  8975                           ;sdCard.c: 67: 
  8976  003144  0EFF               	movlw	255
  8977  003146  EC93  F01B         	call	_SPI2_ExchangeByte
  8978                           
  8979                           ;sdCard.c: 68:     for (i = 0; i < 512; i++)
  8980  00314A  0EFF               	movlw	255
  8981  00314C  EC93  F01B         	call	_SPI2_ExchangeByte
  8982                           
  8983                           ;sdCard.c: 71:     do { LATBbits.LATB4 = 1; } while(0);
  8984  003150  0EFE               	movlw	254
  8985  003152  EC93  F01B         	call	_SPI2_ExchangeByte
  8986  003156                     
  8987                           ;sdCard.c: 74: 
  8988  003156  0E00               	movlw	0
  8989  003158  6E1C               	movwf	(SDCARD_WriteBlock@i+1)^0,c
  8990  00315A  0E00               	movlw	0
  8991  00315C  6E1B               	movwf	SDCARD_WriteBlock@i^0,c
  8992  00315E                     l5774:
  8993                           
  8994                           ;sdCard.c: 75: 
  8995  00315E  501B               	movf	SDCARD_WriteBlock@i^0,w,c
  8996  003160  2419               	addwf	SDCARD_WriteBlock@sdCardBuffer^0,w,c
  8997  003162  6ED9               	movwf	fsr2l,c
  8998  003164  501C               	movf	(SDCARD_WriteBlock@i+1)^0,w,c
  8999  003166  201A               	addwfc	(SDCARD_WriteBlock@sdCardBuffer+1)^0,w,c
  9000  003168  6EDA               	movwf	fsr2h,c
  9001  00316A  50DF               	movf	indf2,w,c
  9002  00316C  EC93  F01B         	call	_SPI2_ExchangeByte
  9003  003170  4A1B               	infsnz	SDCARD_WriteBlock@i^0,f,c
  9004  003172  2A1C               	incf	(SDCARD_WriteBlock@i+1)^0,f,c
  9005  003174  0E02               	movlw	2
  9006  003176  5C1C               	subwf	(SDCARD_WriteBlock@i+1)^0,w,c
  9007  003178  A0D8               	btfss	status,0,c
  9008  00317A  EFC1  F018         	goto	u5681
  9009  00317E  EFC3  F018         	goto	u5680
  9010  003182                     u5681:
  9011  003182  EFAF  F018         	goto	l5774
  9012  003186                     u5680:
  9013  003186  888A               	bsf	138,4,c	;volatile
  9014  003188  0012               	return		;funcret
  9015  00318A                     __end_of_SDCARD_WriteBlock:
  9016                           	callstack 0
  9017                           
  9018 ;; *************** function _SDCARD_ReadBlock *****************
  9019 ;; Defined at:
  9020 ;;		line 13 in file "sdCard.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  addr            4   20[COMRAM] unsigned long 
  9023 ;;  sdCardBuffer    2   24[COMRAM] PTR unsigned char 
  9024 ;;		 -> sdCardBuffer2(512), sdCardBuffer1(512), sdCardBuffer(512), 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  i               2   26[COMRAM] unsigned short 
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      void 
  9029 ;; Registers used:
  9030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9036 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9039 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9040 ;;Total ram usage:        8 bytes
  9041 ;; Hardware stack levels used:    1
  9042 ;; Hardware stack levels required when called:    5
  9043 ;; This function calls:
  9044 ;;		_SPI2_ExchangeByte
  9045 ;; This function is called by:
  9046 ;;		_main
  9047 ;; This function uses a non-reentrant model
  9048 ;;
  9049                           
  9050                           	psect	text22
  9051  002FCC                     __ptext22:
  9052                           	callstack 0
  9053  002FCC                     _SDCARD_ReadBlock:
  9054                           	callstack 25
  9055  002FCC  988A               	bcf	138,4,c	;volatile
  9056  002FCE                     
  9057                           ;sdCard.c: 18:     SPI2_ExchangeByte(0xFF);
  9058  002FCE  0EFF               	movlw	255
  9059  002FD0  EC93  F01B         	call	_SPI2_ExchangeByte
  9060  002FD4                     
  9061                           ;sdCard.c: 19: 
  9062  002FD4  0E51               	movlw	81
  9063  002FD6  EC93  F01B         	call	_SPI2_ExchangeByte
  9064  002FDA                     
  9065                           ;sdCard.c: 20: 
  9066  002FDA  5018               	movf	(SDCARD_ReadBlock@addr+3)^0,w,c
  9067  002FDC  EC93  F01B         	call	_SPI2_ExchangeByte
  9068  002FE0                     
  9069                           ;sdCard.c: 21:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9070  002FE0  5017               	movf	(SDCARD_ReadBlock@addr+2)^0,w,c
  9071  002FE2  EC93  F01B         	call	_SPI2_ExchangeByte
  9072  002FE6                     
  9073                           ;sdCard.c: 22: 
  9074  002FE6  5016               	movf	(SDCARD_ReadBlock@addr+1)^0,w,c
  9075  002FE8  EC93  F01B         	call	_SPI2_ExchangeByte
  9076  002FEC                     
  9077                           ;sdCard.c: 23: 
  9078  002FEC  5015               	movf	SDCARD_ReadBlock@addr^0,w,c
  9079  002FEE  EC93  F01B         	call	_SPI2_ExchangeByte
  9080  002FF2                     
  9081                           ;sdCard.c: 24:     while (SPI2_ExchangeByte(0xFF) == 0xFF);
  9082  002FF2  0EFF               	movlw	255
  9083  002FF4  EC93  F01B         	call	_SPI2_ExchangeByte
  9084  002FF8                     l5824:
  9085  002FF8  0EFF               	movlw	255
  9086  002FFA  EC93  F01B         	call	_SPI2_ExchangeByte
  9087  002FFE  0AFF               	xorlw	255
  9088  003000  B4D8               	btfsc	status,2,c
  9089  003002  EF05  F018         	goto	u5711
  9090  003006  EF07  F018         	goto	u5710
  9091  00300A                     u5711:
  9092  00300A  EFFC  F017         	goto	l5824
  9093  00300E                     u5710:
  9094  00300E                     l5826:
  9095  00300E  0EFF               	movlw	255
  9096  003010  EC93  F01B         	call	_SPI2_ExchangeByte
  9097  003014  0AFF               	xorlw	255
  9098  003016  B4D8               	btfsc	status,2,c
  9099  003018  EF10  F018         	goto	u5721
  9100  00301C  EF12  F018         	goto	u5720
  9101  003020                     u5721:
  9102  003020  EF07  F018         	goto	l5826
  9103  003024                     u5720:
  9104  003024                     
  9105                           ;sdCard.c: 33: 
  9106  003024  0E00               	movlw	0
  9107  003026  6E1C               	movwf	(SDCARD_ReadBlock@i+1)^0,c
  9108  003028  0E00               	movlw	0
  9109  00302A  6E1B               	movwf	SDCARD_ReadBlock@i^0,c
  9110  00302C                     l5834:
  9111                           
  9112                           ;sdCard.c: 34:     do { LATBbits.LATB4 = 1; } while(0);
  9113  00302C  501B               	movf	SDCARD_ReadBlock@i^0,w,c
  9114  00302E  2419               	addwf	SDCARD_ReadBlock@sdCardBuffer^0,w,c
  9115  003030  6ED9               	movwf	fsr2l,c
  9116  003032  501C               	movf	(SDCARD_ReadBlock@i+1)^0,w,c
  9117  003034  201A               	addwfc	(SDCARD_ReadBlock@sdCardBuffer+1)^0,w,c
  9118  003036  6EDA               	movwf	fsr2h,c
  9119  003038  0EFF               	movlw	255
  9120  00303A  EC93  F01B         	call	_SPI2_ExchangeByte
  9121  00303E  6EDF               	movwf	indf2,c
  9122  003040  4A1B               	infsnz	SDCARD_ReadBlock@i^0,f,c
  9123  003042  2A1C               	incf	(SDCARD_ReadBlock@i+1)^0,f,c
  9124  003044  0E02               	movlw	2
  9125  003046  5C1C               	subwf	(SDCARD_ReadBlock@i+1)^0,w,c
  9126  003048  A0D8               	btfss	status,0,c
  9127  00304A  EF29  F018         	goto	u5731
  9128  00304E  EF2B  F018         	goto	u5730
  9129  003052                     u5731:
  9130  003052  EF16  F018         	goto	l5834
  9131  003056                     u5730:
  9132  003056                     
  9133                           ;sdCard.c: 37: 
  9134  003056  0EFF               	movlw	255
  9135  003058  EC93  F01B         	call	_SPI2_ExchangeByte
  9136                           
  9137                           ;sdCard.c: 38: 
  9138  00305C  0EFF               	movlw	255
  9139  00305E  EC93  F01B         	call	_SPI2_ExchangeByte
  9140  003062  888A               	bsf	138,4,c	;volatile
  9141  003064  0012               	return		;funcret
  9142  003066                     __end_of_SDCARD_ReadBlock:
  9143                           	callstack 0
  9144                           
  9145 ;; *************** function _SDCARD_PollWriteComplete *****************
  9146 ;; Defined at:
  9147 ;;		line 86 in file "sdCard.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;		None
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;  status          1   20[COMRAM] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  1    wreg      unsigned char 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0, cstack
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;Total ram usage:        1 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    5
  9168 ;; This function calls:
  9169 ;;		_SPI2_ExchangeByte
  9170 ;; This function is called by:
  9171 ;;		_main
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           	psect	text23
  9176  003452                     __ptext23:
  9177                           	callstack 0
  9178  003452                     _SDCARD_PollWriteComplete:
  9179                           	callstack 25
  9180  003452  988A               	bcf	138,4,c	;volatile
  9181  003454                     
  9182                           ;sdCard.c: 91: 
  9183  003454  0E0D               	movlw	13
  9184  003456  EC93  F01B         	call	_SPI2_ExchangeByte
  9185  00345A  6E15               	movwf	SDCARD_PollWriteComplete@status^0,c
  9186  00345C  888A               	bsf	138,4,c	;volatile
  9187  00345E                     
  9188                           ;sdCard.c: 94:         (void) SPI2_ExchangeByte(0xFF);
  9189  00345E  2815               	incf	SDCARD_PollWriteComplete@status^0,w,c
  9190  003460  A4D8               	btfss	status,2,c
  9191  003462  EF35  F01A         	goto	u5691
  9192  003466  EF37  F01A         	goto	u5690
  9193  00346A                     u5691:
  9194  00346A  EF3A  F01A         	goto	l5792
  9195  00346E                     u5690:
  9196  00346E                     
  9197                           ;sdCard.c: 95:         return (status);
  9198  00346E  0EFF               	movlw	255
  9199  003470  EF44  F01A         	goto	l674
  9200  003474                     l5792:
  9201                           
  9202                           ;sdCard.c: 98: }
  9203  003474  0EFF               	movlw	255
  9204  003476  EC93  F01B         	call	_SPI2_ExchangeByte
  9205                           
  9206                           ;sdCard.c: 99: 
  9207  00347A  0EFF               	movlw	255
  9208  00347C  EC93  F01B         	call	_SPI2_ExchangeByte
  9209                           
  9210                           ;sdCard.c: 100: 
  9211  003480  0EFF               	movlw	255
  9212  003482  EC93  F01B         	call	_SPI2_ExchangeByte
  9213  003486                     
  9214                           ;sdCard.c: 101: 
  9215  003486  5015               	movf	SDCARD_PollWriteComplete@status^0,w,c
  9216  003488                     l674:
  9217  003488  0012               	return		;funcret
  9218  00348A                     __end_of_SDCARD_PollWriteComplete:
  9219                           	callstack 0
  9220                           
  9221 ;; *************** function _SDCARD_Initialize *****************
  9222 ;; Defined at:
  9223 ;;		line 111 in file "sdCard.c"
  9224 ;; Parameters:    Size  Location     Type
  9225 ;;  verbose         1    wreg     unsigned char 
  9226 ;; Auto vars:     Size  Location     Type
  9227 ;;  verbose         1   86[BANK0 ] unsigned char 
  9228 ;;  i               2   84[BANK0 ] int 
  9229 ;;  response        1   87[BANK0 ] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  1    wreg      void 
  9232 ;; Registers used:
  9233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9240 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9242 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9243 ;;Total ram usage:        4 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:   13
  9246 ;; This function calls:
  9247 ;;		_SPI2_ExchangeByte
  9248 ;;		_printf
  9249 ;; This function is called by:
  9250 ;;		_main
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text24
  9255  0028EE                     __ptext24:
  9256                           	callstack 0
  9257  0028EE                     _SDCARD_Initialize:
  9258                           	callstack 17
  9259                           
  9260                           ;incstack = 0
  9261                           ;SDCARD_Initialize@verbose stored from wreg
  9262  0028EE  0100               	movlb	0	; () banked
  9263  0028F0  6FB6               	movwf	SDCARD_Initialize@verbose& (0+255),b
  9264  0028F2                     
  9265                           ;sdCard.c: 113:         SPI2_ExchangeByte(0xFF);;sdCard.c: 118:     do { LATBbits.LATB4 
      +                          = 0; } while(0);
  9266  0028F2  0E00               	movlw	0
  9267  0028F4  0100               	movlb	0	; () banked
  9268  0028F6  6FB5               	movwf	(SDCARD_Initialize@i+1)& (0+255),b
  9269  0028F8  0E00               	movlw	0
  9270  0028FA  6FB4               	movwf	SDCARD_Initialize@i& (0+255),b
  9271  0028FC                     l5850:
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;sdCard.c: 119:     SPI2_ExchangeByte(0xFF);
  9275  0028FC  0EFF               	movlw	255
  9276  0028FE  EC93  F01B         	call	_SPI2_ExchangeByte
  9277  002902                     
  9278                           ;sdCard.c: 120:     SPI2_ExchangeByte(0x40 | 0);
  9279  002902  0100               	movlb	0	; () banked
  9280  002904  4BB4               	infsnz	SDCARD_Initialize@i& (0+255),f,b
  9281  002906  2BB5               	incf	(SDCARD_Initialize@i+1)& (0+255),f,b
  9282  002908                     
  9283                           ; BSR set to: 0
  9284  002908  BFB5               	btfsc	(SDCARD_Initialize@i+1)& (0+255),7,b
  9285  00290A  EF90  F014         	goto	u5741
  9286  00290E  51B5               	movf	(SDCARD_Initialize@i+1)& (0+255),w,b
  9287  002910  E109               	bnz	u5740
  9288  002912  0E0A               	movlw	10
  9289  002914  5DB4               	subwf	SDCARD_Initialize@i& (0+255),w,b
  9290  002916  A0D8               	btfss	status,0,c
  9291  002918  EF90  F014         	goto	u5741
  9292  00291C  EF92  F014         	goto	u5740
  9293  002920                     u5741:
  9294  002920  EF7E  F014         	goto	l5850
  9295  002924                     u5740:
  9296  002924                     
  9297                           ; BSR set to: 0
  9298  002924  988A               	bcf	138,4,c	;volatile
  9299  002926                     
  9300                           ; BSR set to: 0
  9301                           ;sdCard.c: 125:     SPI2_ExchangeByte(0x95);
  9302  002926  0EFF               	movlw	255
  9303  002928  EC93  F01B         	call	_SPI2_ExchangeByte
  9304                           
  9305                           ;sdCard.c: 126:     SPI2_ExchangeByte(0xFF);
  9306  00292C  0E40               	movlw	64
  9307  00292E  EC93  F01B         	call	_SPI2_ExchangeByte
  9308                           
  9309                           ;sdCard.c: 127:     response = SPI2_ExchangeByte(0xFF);
  9310  002932  0E00               	movlw	0
  9311  002934  EC93  F01B         	call	_SPI2_ExchangeByte
  9312                           
  9313                           ;sdCard.c: 128:     do { LATBbits.LATB4 = 1; } while(0);
  9314  002938  0E00               	movlw	0
  9315  00293A  EC93  F01B         	call	_SPI2_ExchangeByte
  9316                           
  9317                           ;sdCard.c: 129:     if (verbose == 1) printf("CMD0, Reset Response: %x\r\n", response);
  9318  00293E  0E00               	movlw	0
  9319  002940  EC93  F01B         	call	_SPI2_ExchangeByte
  9320                           
  9321                           ;sdCard.c: 130: 
  9322  002944  0E00               	movlw	0
  9323  002946  EC93  F01B         	call	_SPI2_ExchangeByte
  9324                           
  9325                           ;sdCard.c: 131: 
  9326  00294A  0E95               	movlw	149
  9327  00294C  EC93  F01B         	call	_SPI2_ExchangeByte
  9328                           
  9329                           ;sdCard.c: 132: 
  9330  002950  0EFF               	movlw	255
  9331  002952  EC93  F01B         	call	_SPI2_ExchangeByte
  9332                           
  9333                           ;sdCard.c: 133:     do {
  9334  002956  0EFF               	movlw	255
  9335  002958  EC93  F01B         	call	_SPI2_ExchangeByte
  9336  00295C  0100               	movlb	0	; () banked
  9337  00295E  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9338  002960                     
  9339                           ; BSR set to: 0
  9340  002960  888A               	bsf	138,4,c	;volatile
  9341  002962                     
  9342                           ; BSR set to: 0
  9343                           ;sdCard.c: 135:         SPI2_ExchangeByte(0xFF);
  9344  002962  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9345  002964  A4D8               	btfss	status,2,c
  9346  002966  EFB7  F014         	goto	u5751
  9347  00296A  EFB9  F014         	goto	u5750
  9348  00296E                     u5751:
  9349  00296E  EFC2  F014         	goto	l5864
  9350  002972                     u5750:
  9351  002972                     
  9352                           ; BSR set to: 0
  9353  002972  0E05               	movlw	low STR_119
  9354  002974  6FA6               	movwf	printf@fmt& (0+255),b
  9355  002976  0EFE               	movlw	high STR_119
  9356  002978  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9357  00297A  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9358  00297E  6BA9               	clrf	(?_printf+3)& (0+255),b
  9359  002980  EC18  F01B         	call	_printf	;wreg free
  9360  002984                     l5864:
  9361  002984  988A               	bcf	138,4,c	;volatile
  9362  002986                     
  9363                           ;sdCard.c: 141:         SPI2_ExchangeByte(0xFF);
  9364  002986  0EFF               	movlw	255
  9365  002988  EC93  F01B         	call	_SPI2_ExchangeByte
  9366  00298C                     
  9367                           ;sdCard.c: 142:         SPI2_ExchangeByte(0xFF);
  9368  00298C  0E41               	movlw	65
  9369  00298E  EC93  F01B         	call	_SPI2_ExchangeByte
  9370  002992                     
  9371                           ;sdCard.c: 143:         response = SPI2_ExchangeByte(0xFF);
  9372  002992  0E00               	movlw	0
  9373  002994  EC93  F01B         	call	_SPI2_ExchangeByte
  9374  002998                     
  9375                           ;sdCard.c: 144:         do { LATBbits.LATB4 = 1; } while(0);
  9376  002998  0E00               	movlw	0
  9377  00299A  EC93  F01B         	call	_SPI2_ExchangeByte
  9378  00299E                     
  9379                           ;sdCard.c: 145:     } while (response != 0);
  9380  00299E  0E00               	movlw	0
  9381  0029A0  EC93  F01B         	call	_SPI2_ExchangeByte
  9382  0029A4                     
  9383                           ;sdCard.c: 146:     if (verbose == 1) printf("CMD1, Init Response: %x\r\n", response);
  9384  0029A4  0E00               	movlw	0
  9385  0029A6  EC93  F01B         	call	_SPI2_ExchangeByte
  9386  0029AA                     
  9387                           ;sdCard.c: 147: 
  9388  0029AA  0EFF               	movlw	255
  9389  0029AC  EC93  F01B         	call	_SPI2_ExchangeByte
  9390  0029B0                     
  9391                           ;sdCard.c: 148: 
  9392  0029B0  0EFF               	movlw	255
  9393  0029B2  EC93  F01B         	call	_SPI2_ExchangeByte
  9394  0029B6                     
  9395                           ;sdCard.c: 149: 
  9396  0029B6  0EFF               	movlw	255
  9397  0029B8  EC93  F01B         	call	_SPI2_ExchangeByte
  9398  0029BC  0100               	movlb	0	; () banked
  9399  0029BE  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9400  0029C0                     
  9401                           ; BSR set to: 0
  9402  0029C0  888A               	bsf	138,4,c	;volatile
  9403  0029C2                     
  9404                           ; BSR set to: 0
  9405                           ;sdCard.c: 151:         do { LATBbits.LATB4 = 0; } while(0);
  9406  0029C2  51B7               	movf	SDCARD_Initialize@response& (0+255),w,b
  9407  0029C4  A4D8               	btfss	status,2,c
  9408  0029C6  EFE7  F014         	goto	u5761
  9409  0029CA  EFE9  F014         	goto	u5760
  9410  0029CE                     u5761:
  9411  0029CE  EFC2  F014         	goto	l5864
  9412  0029D2                     u5760:
  9413  0029D2                     
  9414                           ; BSR set to: 0
  9415                           ;sdCard.c: 152:         SPI2_ExchangeByte(0xFF);
  9416  0029D2  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9417  0029D4  A4D8               	btfss	status,2,c
  9418  0029D6  EFEF  F014         	goto	u5771
  9419  0029DA  EFF1  F014         	goto	u5770
  9420  0029DE                     u5771:
  9421  0029DE  EFFA  F014         	goto	l5892
  9422  0029E2                     u5770:
  9423  0029E2                     
  9424                           ; BSR set to: 0
  9425  0029E2  0E3B               	movlw	low STR_120
  9426  0029E4  6FA6               	movwf	printf@fmt& (0+255),b
  9427  0029E6  0EFE               	movlw	high STR_120
  9428  0029E8  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9429  0029EA  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9430  0029EE  6BA9               	clrf	(?_printf+3)& (0+255),b
  9431  0029F0  EC18  F01B         	call	_printf	;wreg free
  9432  0029F4                     l5892:
  9433  0029F4  988A               	bcf	138,4,c	;volatile
  9434  0029F6                     
  9435                           ;sdCard.c: 158:         SPI2_ExchangeByte(0xFF);
  9436  0029F6  0EFF               	movlw	255
  9437  0029F8  EC93  F01B         	call	_SPI2_ExchangeByte
  9438  0029FC                     
  9439                           ;sdCard.c: 159:         SPI2_ExchangeByte(0xFF);
  9440  0029FC  0E50               	movlw	80
  9441  0029FE  EC93  F01B         	call	_SPI2_ExchangeByte
  9442  002A02                     
  9443                           ;sdCard.c: 160:         response = SPI2_ExchangeByte(0xFF);
  9444  002A02  0E00               	movlw	0
  9445  002A04  EC93  F01B         	call	_SPI2_ExchangeByte
  9446  002A08                     
  9447                           ;sdCard.c: 161:         do { LATBbits.LATB4 = 1; } while(0);
  9448  002A08  0E00               	movlw	0
  9449  002A0A  EC93  F01B         	call	_SPI2_ExchangeByte
  9450  002A0E                     
  9451                           ;sdCard.c: 162:     } while (response == 0xFF);
  9452  002A0E  0E02               	movlw	2
  9453  002A10  EC93  F01B         	call	_SPI2_ExchangeByte
  9454  002A14                     
  9455                           ;sdCard.c: 163:     if (verbose == 1) printf("Block Length Response: %x\r\n", response);
  9456  002A14  0E00               	movlw	0
  9457  002A16  EC93  F01B         	call	_SPI2_ExchangeByte
  9458  002A1A                     
  9459                           ;sdCard.c: 164: 
  9460  002A1A  0EFF               	movlw	255
  9461  002A1C  EC93  F01B         	call	_SPI2_ExchangeByte
  9462  002A20                     
  9463                           ;sdCard.c: 165: }
  9464  002A20  0EFF               	movlw	255
  9465  002A22  EC93  F01B         	call	_SPI2_ExchangeByte
  9466  002A26                     
  9467                           ;sdCard.c: 166: 
  9468  002A26  0EFF               	movlw	255
  9469  002A28  EC93  F01B         	call	_SPI2_ExchangeByte
  9470  002A2C  0100               	movlb	0	; () banked
  9471  002A2E  6FB7               	movwf	SDCARD_Initialize@response& (0+255),b
  9472  002A30                     
  9473                           ; BSR set to: 0
  9474  002A30  888A               	bsf	138,4,c	;volatile
  9475  002A32                     
  9476                           ; BSR set to: 0
  9477                           ;sdCard.c: 168: 
  9478  002A32  29B7               	incf	SDCARD_Initialize@response& (0+255),w,b
  9479  002A34  B4D8               	btfsc	status,2,c
  9480  002A36  EF1F  F015         	goto	u5781
  9481  002A3A  EF21  F015         	goto	u5780
  9482  002A3E                     u5781:
  9483  002A3E  EFFA  F014         	goto	l5892
  9484  002A42                     u5780:
  9485  002A42                     
  9486                           ; BSR set to: 0
  9487                           ;sdCard.c: 169: 
  9488  002A42  05B6               	decf	SDCARD_Initialize@verbose& (0+255),w,b
  9489  002A44  A4D8               	btfss	status,2,c
  9490  002A46  EF27  F015         	goto	u5791
  9491  002A4A  EF29  F015         	goto	u5790
  9492  002A4E                     u5791:
  9493  002A4E  EF32  F015         	goto	l699
  9494  002A52                     u5790:
  9495  002A52                     
  9496                           ; BSR set to: 0
  9497  002A52  0ECD               	movlw	low STR_121
  9498  002A54  6FA6               	movwf	printf@fmt& (0+255),b
  9499  002A56  0EFD               	movlw	high STR_121
  9500  002A58  6FA7               	movwf	(printf@fmt+1)& (0+255),b
  9501  002A5A  C0B7  F0A8         	movff	SDCARD_Initialize@response,?_printf+2
  9502  002A5E  6BA9               	clrf	(?_printf+3)& (0+255),b
  9503  002A60  EC18  F01B         	call	_printf	;wreg free
  9504  002A64                     l699:
  9505  002A64  0012               	return		;funcret
  9506  002A66                     __end_of_SDCARD_Initialize:
  9507                           	callstack 0
  9508                           
  9509 ;; *************** function _printf *****************
  9510 ;; Defined at:
  9511 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\printf.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  9514 ;;		 -> STR_132(3), STR_131(3), STR_130(2), STR_129(4), 
  9515 ;;		 -> STR_128(6), STR_127(3), STR_126(3), STR_125(2), 
  9516 ;;		 -> STR_124(3), STR_123(2), STR_122(4), STR_121(28), 
  9517 ;;		 -> STR_120(26), STR_119(27), STR_118(63), STR_117(63), 
  9518 ;;		 -> STR_116(63), STR_115(63), STR_114(63), STR_113(63), 
  9519 ;;		 -> STR_112(63), STR_111(63), STR_110(63), STR_109(63), 
  9520 ;;		 -> STR_108(63), STR_107(63), STR_106(63), STR_105(63), 
  9521 ;;		 -> STR_104(63), STR_103(63), STR_102(63), STR_101(63), 
  9522 ;;		 -> STR_100(63), STR_99(63), STR_98(63), STR_97(63), 
  9523 ;;		 -> STR_96(63), STR_95(63), STR_94(63), STR_93(63), 
  9524 ;;		 -> STR_92(63), STR_91(63), STR_90(63), STR_89(63), 
  9525 ;;		 -> STR_88(63), STR_87(63), STR_86(63), STR_85(63), 
  9526 ;;		 -> STR_84(63), STR_83(17), STR_82(3), STR_81(5), 
  9527 ;;		 -> STR_80(2), STR_79(5), STR_78(17), STR_77(15), 
  9528 ;;		 -> STR_76(3), STR_75(5), STR_74(2), STR_73(5), 
  9529 ;;		 -> STR_72(19), STR_71(20), STR_70(28), STR_69(20), 
  9530 ;;		 -> STR_68(30), STR_67(21), STR_66(37), STR_65(22), 
  9531 ;;		 -> STR_64(33), STR_63(58), STR_62(48), STR_61(35), 
  9532 ;;		 -> STR_60(5), STR_59(25), STR_58(20), STR_57(71), 
  9533 ;;		 -> STR_56(50), STR_55(22), STR_54(33), STR_53(58), 
  9534 ;;		 -> STR_52(3), STR_51(68), STR_50(58), STR_49(7), 
  9535 ;;		 -> STR_48(2), STR_47(5), STR_46(31), STR_45(27), 
  9536 ;;		 -> STR_44(3), STR_43(76), STR_42(23), STR_41(3), 
  9537 ;;		 -> STR_40(5), STR_39(2), STR_38(5), STR_37(17), 
  9538 ;;		 -> STR_36(30), STR_35(31), STR_34(2), STR_33(2), 
  9539 ;;		 -> STR_32(2), STR_31(8), STR_30(52), STR_29(32), 
  9540 ;;		 -> STR_28(44), STR_27(49), STR_26(52), STR_25(55), 
  9541 ;;		 -> STR_24(43), STR_23(37), STR_22(52), STR_21(24), 
  9542 ;;		 -> STR_20(52), STR_19(24), STR_18(21), STR_17(7), 
  9543 ;;		 -> STR_16(15), STR_15(52), STR_14(21), STR_13(3), 
  9544 ;;		 -> STR_12(5), STR_11(2), STR_10(5), STR_9(17), 
  9545 ;;		 -> STR_8(29), STR_7(54), STR_6(5), STR_5(3), 
  9546 ;;		 -> STR_4(40), STR_3(9), STR_2(21), STR_1(9), 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  ap              2   82[BANK0 ] PTR void [1]
  9549 ;;		 -> ?_printf(2), 
  9550 ;;  ret             2    0        int 
  9551 ;; Return value:  Size  Location     Type
  9552 ;;                  2   70[BANK0 ] int 
  9553 ;; Registers used:
  9554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9555 ;; Tracked objects:
  9556 ;;		On entry : 0/0
  9557 ;;		On exit  : 0/0
  9558 ;;		Unchanged: 0/0
  9559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9560 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9561 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9564 ;;Total ram usage:       14 bytes
  9565 ;; Hardware stack levels used:    1
  9566 ;; Hardware stack levels required when called:   12
  9567 ;; This function calls:
  9568 ;;		_vfprintf
  9569 ;; This function is called by:
  9570 ;;		_main
  9571 ;;		_printAscii
  9572 ;;		_SDCARD_Initialize
  9573 ;;		_hexDumpBuffer
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text25
  9578  003630                     __ptext25:
  9579                           	callstack 0
  9580  003630                     _printf:
  9581                           	callstack 18
  9582  003630  0EA8               	movlw	low (?_printf+2)
  9583  003632  0100               	movlb	0	; () banked
  9584  003634  6FB2               	movwf	printf@ap& (0+255),b
  9585  003636  0E00               	movlw	high (?_printf+2)
  9586  003638  6FB3               	movwf	(printf@ap+1)& (0+255),b
  9587  00363A                     
  9588                           ; BSR set to: 0
  9589  00363A  0E00               	movlw	0
  9590  00363C  6F9E               	movwf	vfprintf@fp& (0+255),b
  9591  00363E  0E00               	movlw	0
  9592  003640  6F9F               	movwf	(vfprintf@fp+1)& (0+255),b
  9593  003642  C0A6  F0A0         	movff	printf@fmt,vfprintf@fmt
  9594  003646  C0A7  F0A1         	movff	printf@fmt+1,vfprintf@fmt+1
  9595  00364A  0EB2               	movlw	low printf@ap
  9596  00364C  6FA2               	movwf	vfprintf@ap& (0+255),b
  9597  00364E  0E00               	movlw	high printf@ap
  9598  003650  6FA3               	movwf	(vfprintf@ap+1)& (0+255),b
  9599  003652  ECFE  F018         	call	_vfprintf	;wreg free
  9600  003656  0012               	return		;funcret
  9601  003658                     __end_of_printf:
  9602                           	callstack 0
  9603                           
  9604 ;; *************** function _vfprintf *****************
  9605 ;; Defined at:
  9606 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  fp              2   62[BANK0 ] PTR struct _IO_FILE
  9609 ;;		 -> NULL(0), 
  9610 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  9611 ;;		 -> STR_132(3), STR_131(3), STR_130(2), STR_129(4), 
  9612 ;;		 -> STR_128(6), STR_127(3), STR_126(3), STR_125(2), 
  9613 ;;		 -> STR_124(3), STR_123(2), STR_122(4), STR_121(28), 
  9614 ;;		 -> STR_120(26), STR_119(27), STR_118(63), STR_117(63), 
  9615 ;;		 -> STR_116(63), STR_115(63), STR_114(63), STR_113(63), 
  9616 ;;		 -> STR_112(63), STR_111(63), STR_110(63), STR_109(63), 
  9617 ;;		 -> STR_108(63), STR_107(63), STR_106(63), STR_105(63), 
  9618 ;;		 -> STR_104(63), STR_103(63), STR_102(63), STR_101(63), 
  9619 ;;		 -> STR_100(63), STR_99(63), STR_98(63), STR_97(63), 
  9620 ;;		 -> STR_96(63), STR_95(63), STR_94(63), STR_93(63), 
  9621 ;;		 -> STR_92(63), STR_91(63), STR_90(63), STR_89(63), 
  9622 ;;		 -> STR_88(63), STR_87(63), STR_86(63), STR_85(63), 
  9623 ;;		 -> STR_84(63), STR_83(17), STR_82(3), STR_81(5), 
  9624 ;;		 -> STR_80(2), STR_79(5), STR_78(17), STR_77(15), 
  9625 ;;		 -> STR_76(3), STR_75(5), STR_74(2), STR_73(5), 
  9626 ;;		 -> STR_72(19), STR_71(20), STR_70(28), STR_69(20), 
  9627 ;;		 -> STR_68(30), STR_67(21), STR_66(37), STR_65(22), 
  9628 ;;		 -> STR_64(33), STR_63(58), STR_62(48), STR_61(35), 
  9629 ;;		 -> STR_60(5), STR_59(25), STR_58(20), STR_57(71), 
  9630 ;;		 -> STR_56(50), STR_55(22), STR_54(33), STR_53(58), 
  9631 ;;		 -> STR_52(3), STR_51(68), STR_50(58), STR_49(7), 
  9632 ;;		 -> STR_48(2), STR_47(5), STR_46(31), STR_45(27), 
  9633 ;;		 -> STR_44(3), STR_43(76), STR_42(23), STR_41(3), 
  9634 ;;		 -> STR_40(5), STR_39(2), STR_38(5), STR_37(17), 
  9635 ;;		 -> STR_36(30), STR_35(31), STR_34(2), STR_33(2), 
  9636 ;;		 -> STR_32(2), STR_31(8), STR_30(52), STR_29(32), 
  9637 ;;		 -> STR_28(44), STR_27(49), STR_26(52), STR_25(55), 
  9638 ;;		 -> STR_24(43), STR_23(37), STR_22(52), STR_21(24), 
  9639 ;;		 -> STR_20(52), STR_19(24), STR_18(21), STR_17(7), 
  9640 ;;		 -> STR_16(15), STR_15(52), STR_14(21), STR_13(3), 
  9641 ;;		 -> STR_12(5), STR_11(2), STR_10(5), STR_9(17), 
  9642 ;;		 -> STR_8(29), STR_7(54), STR_6(5), STR_5(3), 
  9643 ;;		 -> STR_4(40), STR_3(9), STR_2(21), STR_1(9), 
  9644 ;;  ap              2   66[BANK0 ] PTR PTR void 
  9645 ;;		 -> printf@ap(2), 
  9646 ;; Auto vars:     Size  Location     Type
  9647 ;;  cfmt            2   68[BANK0 ] PTR unsigned char 
  9648 ;;		 -> STR_132(3), STR_131(3), STR_130(2), STR_129(4), 
  9649 ;;		 -> STR_128(6), STR_127(3), STR_126(3), STR_125(2), 
  9650 ;;		 -> STR_124(3), STR_123(2), STR_122(4), STR_121(28), 
  9651 ;;		 -> STR_120(26), STR_119(27), STR_118(63), STR_117(63), 
  9652 ;;		 -> STR_116(63), STR_115(63), STR_114(63), STR_113(63), 
  9653 ;;		 -> STR_112(63), STR_111(63), STR_110(63), STR_109(63), 
  9654 ;;		 -> STR_108(63), STR_107(63), STR_106(63), STR_105(63), 
  9655 ;;		 -> STR_104(63), STR_103(63), STR_102(63), STR_101(63), 
  9656 ;;		 -> STR_100(63), STR_99(63), STR_98(63), STR_97(63), 
  9657 ;;		 -> STR_96(63), STR_95(63), STR_94(63), STR_93(63), 
  9658 ;;		 -> STR_92(63), STR_91(63), STR_90(63), STR_89(63), 
  9659 ;;		 -> STR_88(63), STR_87(63), STR_86(63), STR_85(63), 
  9660 ;;		 -> STR_84(63), STR_83(17), STR_82(3), STR_81(5), 
  9661 ;;		 -> STR_80(2), STR_79(5), STR_78(17), STR_77(15), 
  9662 ;;		 -> STR_76(3), STR_75(5), STR_74(2), STR_73(5), 
  9663 ;;		 -> STR_72(19), STR_71(20), STR_70(28), STR_69(20), 
  9664 ;;		 -> STR_68(30), STR_67(21), STR_66(37), STR_65(22), 
  9665 ;;		 -> STR_64(33), STR_63(58), STR_62(48), STR_61(35), 
  9666 ;;		 -> STR_60(5), STR_59(25), STR_58(20), STR_57(71), 
  9667 ;;		 -> STR_56(50), STR_55(22), STR_54(33), STR_53(58), 
  9668 ;;		 -> STR_52(3), STR_51(68), STR_50(58), STR_49(7), 
  9669 ;;		 -> STR_48(2), STR_47(5), STR_46(31), STR_45(27), 
  9670 ;;		 -> STR_44(3), STR_43(76), STR_42(23), STR_41(3), 
  9671 ;;		 -> STR_40(5), STR_39(2), STR_38(5), STR_37(17), 
  9672 ;;		 -> STR_36(30), STR_35(31), STR_34(2), STR_33(2), 
  9673 ;;		 -> STR_32(2), STR_31(8), STR_30(52), STR_29(32), 
  9674 ;;		 -> STR_28(44), STR_27(49), STR_26(52), STR_25(55), 
  9675 ;;		 -> STR_24(43), STR_23(37), STR_22(52), STR_21(24), 
  9676 ;;		 -> STR_20(52), STR_19(24), STR_18(21), STR_17(7), 
  9677 ;;		 -> STR_16(15), STR_15(52), STR_14(21), STR_13(3), 
  9678 ;;		 -> STR_12(5), STR_11(2), STR_10(5), STR_9(17), 
  9679 ;;		 -> STR_8(29), STR_7(54), STR_6(5), STR_5(3), 
  9680 ;;		 -> STR_4(40), STR_3(9), STR_2(21), STR_1(9), 
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  2   62[BANK0 ] int 
  9683 ;; Registers used:
  9684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9685 ;; Tracked objects:
  9686 ;;		On entry : 0/0
  9687 ;;		On exit  : 0/0
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9690 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9691 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9693 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9694 ;;Total ram usage:        8 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:   11
  9697 ;; This function calls:
  9698 ;;		_vfpfcnvrt
  9699 ;; This function is called by:
  9700 ;;		_printf
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           	psect	text26
  9705  0031FC                     __ptext26:
  9706                           	callstack 0
  9707  0031FC                     _vfprintf:
  9708                           	callstack 18
  9709  0031FC                     
  9710                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  9711  0031FC  C0A0  F0A4         	movff	vfprintf@fmt,vfprintf@cfmt
  9712  003200  C0A1  F0A5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  9713  003204                     
  9714                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  9715  003204  0E00               	movlw	0
  9716  003206  0100               	movlb	0	; () banked
  9717  003208  6FC3               	movwf	(_nout+1)& (0+255),b
  9718  00320A  0E00               	movlw	0
  9719  00320C  6FC2               	movwf	_nout& (0+255),b
  9720                           
  9721                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9722  00320E  EF1C  F019         	goto	l5632
  9723  003212                     l5630:
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  9727  003212  C09E  F07F         	movff	vfprintf@fp,vfpfcnvrt@fp
  9728  003216  C09F  F080         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  9729  00321A  0EA4               	movlw	low vfprintf@cfmt
  9730  00321C  6F81               	movwf	vfpfcnvrt@fmt& (0+255),b
  9731  00321E  0E00               	movlw	high vfprintf@cfmt
  9732  003220  6F82               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  9733  003222  C0A2  F083         	movff	vfprintf@ap,vfpfcnvrt@ap
  9734  003226  C0A3  F084         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  9735  00322A  EC55  F009         	call	_vfpfcnvrt	;wreg free
  9736  00322E  0100               	movlb	0	; () banked
  9737  003230  517F               	movf	?_vfpfcnvrt& (0+255),w,b
  9738  003232  27C2               	addwf	_nout& (0+255),f,b
  9739  003234  5180               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  9740  003236  23C3               	addwfc	(_nout+1)& (0+255),f,b
  9741  003238                     l5632:
  9742                           
  9743                           ; BSR set to: 0
  9744                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  9745  003238  C0A4  FFF6         	movff	vfprintf@cfmt,tblptrl
  9746  00323C  C0A5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  9747  003240                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9748  003240  6AF8               	clrf	tblptru,c
  9749  003242                     	endif
  9750  003242                     	if	0	;tblptru may be non-zero
  9751  003242                     	endif
  9752  003242  0008               	tblrd		*
  9753  003244  50F5               	movf	tablat,w,c
  9754  003246  0900               	iorlw	0
  9755  003248  A4D8               	btfss	status,2,c
  9756  00324A  EF29  F019         	goto	u5601
  9757  00324E  EF2B  F019         	goto	u5600
  9758  003252                     u5601:
  9759  003252  EF09  F019         	goto	l5630
  9760  003256                     u5600:
  9761  003256                     
  9762                           ; BSR set to: 0
  9763                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  9764  003256  C0C2  F09E         	movff	_nout,?_vfprintf
  9765  00325A  C0C3  F09F         	movff	_nout+1,?_vfprintf+1
  9766  00325E                     
  9767                           ; BSR set to: 0
  9768  00325E  0012               	return		;funcret
  9769  003260                     __end_of_vfprintf:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function _vfpfcnvrt *****************
  9773 ;; Defined at:
  9774 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  9777 ;;		 -> NULL(0), 
  9778 ;;  fmt             2   33[BANK0 ] PTR PTR unsigned char 
  9779 ;;		 -> vfprintf@cfmt(2), 
  9780 ;;  ap              2   35[BANK0 ] PTR PTR void 
  9781 ;;		 -> printf@ap(2), 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  llu             8   53[BANK0 ] unsigned long long 
  9784 ;;  ll              8   41[BANK0 ] long long 
  9785 ;;  f               4    0        long long 
  9786 ;;  vp              3    0        PTR void 
  9787 ;;  ct              3    0        unsigned char [3]
  9788 ;;  cp              3    0        PTR unsigned char 
  9789 ;;  done            2   49[BANK0 ] int 
  9790 ;;  i               2    0        int 
  9791 ;;  c               1   61[BANK0 ] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2   31[BANK0 ] int 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:       31 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:   10
  9808 ;; This function calls:
  9809 ;;		_atoi
  9810 ;;		_ctoa
  9811 ;;		_dtoa
  9812 ;;		_fputc
  9813 ;;		_isdigit
  9814 ;;		_utoa
  9815 ;;		_xtoa
  9816 ;; This function is called by:
  9817 ;;		_vfprintf
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           	psect	text27
  9822  0012AA                     __ptext27:
  9823                           	callstack 0
  9824  0012AA                     _vfpfcnvrt:
  9825                           	callstack 18
  9826  0012AA                     
  9827                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.30\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  9828  0012AA  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9829  0012AE  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9830  0012B2  CFDE FFF6          	movff	postinc2,tblptrl
  9831  0012B6  CFDD FFF7          	movff	postdec2,tblptrh
  9832  0012BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9833  0012BA  6AF8               	clrf	tblptru,c
  9834  0012BC                     	endif
  9835  0012BC                     	if	0	;tblptru may be non-zero
  9836  0012BC                     	endif
  9837  0012BC  0008               	tblrd		*
  9838  0012BE  50F5               	movf	tablat,w,c
  9839  0012C0  0A25               	xorlw	37
  9840  0012C2  A4D8               	btfss	status,2,c
  9841  0012C4  EF66  F009         	goto	u5451
  9842  0012C8  EF68  F009         	goto	u5450
  9843  0012CC                     u5451:
  9844  0012CC  EFFA  F00B         	goto	l5602
  9845  0012D0                     u5450:
  9846  0012D0                     
  9847                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  9848  0012D0  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9849  0012D4  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9850  0012D8  2ADE               	incf	postinc2,f,c
  9851  0012DA  0E00               	movlw	0
  9852  0012DC  22DD               	addwfc	postdec2,f,c
  9853  0012DE                     
  9854                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  9855  0012DE  0E00               	movlw	0
  9856  0012E0  6E3A               	movwf	(_width+1)^0,c
  9857  0012E2  0E00               	movlw	0
  9858  0012E4  6E39               	movwf	_width^0,c
  9859  0012E6  C039  F03D         	movff	_width,_flags
  9860  0012EA  C03A  F03E         	movff	_width+1,_flags+1
  9861  0012EE                     
  9862                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  9863  0012EE  683B               	setf	_prec^0,c
  9864  0012F0  683C               	setf	(_prec+1)^0,c
  9865  0012F2                     
  9866                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  9867  0012F2  0E00               	movlw	0
  9868  0012F4  0100               	movlb	0	; () banked
  9869  0012F6  6F92               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9870  0012F8  0E00               	movlw	0
  9871  0012FA  6F91               	movwf	vfpfcnvrt@done& (0+255),b
  9872                           
  9873                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  9874  0012FC  EFC7  F009         	goto	l5524
  9875  001300                     l5498:
  9876                           
  9877                           ; BSR set to: 0
  9878                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  9879  001300  803D               	bsf	_flags^0,0,c
  9880  001302                     l5500:
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  9884  001302  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9885  001306  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9886  00130A  2ADE               	incf	postinc2,f,c
  9887  00130C  0E00               	movlw	0
  9888  00130E  22DD               	addwfc	postdec2,f,c
  9889                           
  9890                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  9891  001310  EFC7  F009         	goto	l5524
  9892  001314                     l5502:
  9893                           
  9894                           ; BSR set to: 0
  9895                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  9896  001314  823D               	bsf	_flags^0,1,c
  9897  001316  EF81  F009         	goto	l5500
  9898  00131A                     l5506:
  9899                           
  9900                           ; BSR set to: 0
  9901                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  9902  00131A  843D               	bsf	_flags^0,2,c
  9903  00131C  EF81  F009         	goto	l5500
  9904  001320                     l5510:
  9905                           
  9906                           ; BSR set to: 0
  9907                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  9908  001320  863D               	bsf	_flags^0,3,c
  9909  001322  EF81  F009         	goto	l5500
  9910  001326                     l5514:
  9911                           
  9912                           ; BSR set to: 0
  9913                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  9914  001326  883D               	bsf	_flags^0,4,c
  9915  001328  EF81  F009         	goto	l5500
  9916  00132C                     l5518:
  9917                           
  9918                           ; BSR set to: 0
  9919                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  9920  00132C  0E00               	movlw	0
  9921  00132E  6F92               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  9922  001330  0E01               	movlw	1
  9923  001332  6F91               	movwf	vfpfcnvrt@done& (0+255),b
  9924                           
  9925                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  9926  001334  EFC7  F009         	goto	l5524
  9927  001338                     l5522:
  9928                           
  9929                           ; BSR set to: 0
  9930  001338  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  9931  00133C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  9932  001340  CFDE FFF6          	movff	postinc2,tblptrl
  9933  001344  CFDD FFF7          	movff	postdec2,tblptrh
  9934  001348                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9935  001348  6AF8               	clrf	tblptru,c
  9936  00134A                     	endif
  9937  00134A                     	if	0	;tblptru may be non-zero
  9938  00134A                     	endif
  9939  00134A  0008               	tblrd		*
  9940  00134C  50F5               	movf	tablat,w,c
  9941  00134E  6F85               	movwf	??_vfpfcnvrt& (0+255),b
  9942  001350  6B86               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  9943                           
  9944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9945                           ; Switch size 1, requested type "simple"
  9946                           ; Number of cases is 1, Range of values is 0 to 0
  9947                           ; switch strategies available:
  9948                           ; Name         Instructions Cycles
  9949                           ; simple_byte            4     3 (average)
  9950                           ;	Chosen strategy is simple_byte
  9951  001352  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  9952  001354  0A00               	xorlw	0	; case 0
  9953  001356  B4D8               	btfsc	status,2,c
  9954  001358  EFB0  F009         	goto	l6522
  9955  00135C  EF96  F009         	goto	l5518
  9956  001360                     l6522:
  9957                           
  9958                           ; BSR set to: 0
  9959                           ; Switch size 1, requested type "simple"
  9960                           ; Number of cases is 5, Range of values is 32 to 48
  9961                           ; switch strategies available:
  9962                           ; Name         Instructions Cycles
  9963                           ; simple_byte           16     9 (average)
  9964                           ;	Chosen strategy is simple_byte
  9965  001360  5185               	movf	??_vfpfcnvrt& (0+255),w,b
  9966  001362  0A20               	xorlw	32	; case 32
  9967  001364  B4D8               	btfsc	status,2,c
  9968  001366  EF90  F009         	goto	l5510
  9969  00136A  0A03               	xorlw	3	; case 35
  9970  00136C  B4D8               	btfsc	status,2,c
  9971  00136E  EF93  F009         	goto	l5514
  9972  001372  0A08               	xorlw	8	; case 43
  9973  001374  B4D8               	btfsc	status,2,c
  9974  001376  EF8D  F009         	goto	l5506
  9975  00137A  0A06               	xorlw	6	; case 45
  9976  00137C  B4D8               	btfsc	status,2,c
  9977  00137E  EF80  F009         	goto	l5498
  9978  001382  0A1D               	xorlw	29	; case 48
  9979  001384  B4D8               	btfsc	status,2,c
  9980  001386  EF8A  F009         	goto	l5502
  9981  00138A  EF96  F009         	goto	l5518
  9982  00138E                     l5524:
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  9986  00138E  5191               	movf	vfpfcnvrt@done& (0+255),w,b
  9987  001390  1192               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  9988  001392  B4D8               	btfsc	status,2,c
  9989  001394  EFCE  F009         	goto	u5461
  9990  001398  EFD0  F009         	goto	u5460
  9991  00139C                     u5461:
  9992  00139C  EF9C  F009         	goto	l5522
  9993  0013A0                     u5460:
  9994  0013A0                     
  9995                           ; BSR set to: 0
  9996                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  9997  0013A0  A03D               	btfss	_flags^0,0,c
  9998  0013A2  EFD5  F009         	goto	u5471
  9999  0013A6  EFD7  F009         	goto	u5470
 10000  0013AA                     u5471:
 10001  0013AA  EFD8  F009         	goto	l5528
 10002  0013AE                     u5470:
 10003  0013AE                     
 10004                           ; BSR set to: 0
 10005                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
 10006  0013AE  923D               	bcf	_flags^0,1,c
 10007  0013B0                     l5528:
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 10011  0013B0  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10012  0013B4  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10013  0013B8  CFDE FFF6          	movff	postinc2,tblptrl
 10014  0013BC  CFDD FFF7          	movff	postdec2,tblptrh
 10015  0013C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10016  0013C0  6AF8               	clrf	tblptru,c
 10017  0013C2                     	endif
 10018  0013C2                     	if	0	;tblptru may be non-zero
 10019  0013C2                     	endif
 10020  0013C2  0008               	tblrd		*
 10021  0013C4  50F5               	movf	tablat,w,c
 10022  0013C6  0A2A               	xorlw	42
 10023  0013C8  A4D8               	btfss	status,2,c
 10024  0013CA  EFE9  F009         	goto	u5481
 10025  0013CE  EFEB  F009         	goto	u5480
 10026  0013D2                     u5481:
 10027  0013D2  EF14  F00A         	goto	l5536
 10028  0013D6                     u5480:
 10029  0013D6                     
 10030                           ; BSR set to: 0
 10031                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 10032  0013D6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10033  0013DA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10034  0013DE  2ADE               	incf	postinc2,f,c
 10035  0013E0  0E00               	movlw	0
 10036  0013E2  22DD               	addwfc	postdec2,f,c
 10037                           
 10038                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 10039  0013E4  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10040  0013E8  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10041  0013EC  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10042  0013F0  0E02               	movlw	2
 10043  0013F2  26DE               	addwf	postinc2,f,c
 10044  0013F4  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10045  0013F8  0E00               	movlw	0
 10046  0013FA  22DD               	addwfc	postdec2,f,c
 10047  0013FC  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10048  001400  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10049  001404  CFDE F039          	movff	postinc2,_width
 10050  001408  CFDD F03A          	movff	postdec2,_width+1
 10051  00140C                     
 10052                           ; BSR set to: 0
 10053                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 10054  00140C  BE3A               	btfsc	(_width+1)^0,7,c
 10055  00140E  EF0D  F00A         	goto	u5490
 10056  001412  EF0B  F00A         	goto	u5491
 10057  001416                     u5491:
 10058  001416  EF59  F00A         	goto	l5546
 10059  00141A                     u5490:
 10060  00141A                     
 10061                           ; BSR set to: 0
 10062                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 10063  00141A  803D               	bsf	_flags^0,0,c
 10064                           
 10065                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 10066  00141C  6C39               	negf	_width^0,c
 10067  00141E  1E3A               	comf	(_width+1)^0,f,c
 10068  001420  B0D8               	btfsc	status,0,c
 10069  001422  2A3A               	incf	(_width+1)^0,f,c
 10070  001424  EF59  F00A         	goto	l5546
 10071  001428                     l5536:
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 10075  001428  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10076  00142C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10077  001430  CFDE F01B          	movff	postinc2,atoi@s
 10078  001434  CFDD F01C          	movff	postdec2,atoi@s+1
 10079  001438  ECE6  F012         	call	_atoi	;wreg free
 10080  00143C  C01B  F039         	movff	?_atoi,_width
 10081  001440  C01C  F03A         	movff	?_atoi+1,_width+1
 10082                           
 10083                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10084  001444  EF2B  F00A         	goto	l5540
 10085  001448                     l5538:
 10086                           
 10087                           ; BSR set to: 0
 10088                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 10089  001448  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10090  00144C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10091  001450  2ADE               	incf	postinc2,f,c
 10092  001452  0E00               	movlw	0
 10093  001454  22DD               	addwfc	postdec2,f,c
 10094  001456                     l5540:
 10095  001456  0ED0               	movlw	208
 10096  001458  0100               	movlb	0	; () banked
 10097  00145A  6F85               	movwf	??_vfpfcnvrt& (0+255),b
 10098  00145C  0EFF               	movlw	255
 10099  00145E  6F86               	movwf	(??_vfpfcnvrt+1)& (0+255),b
 10100  001460  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10101  001464  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10102  001468  CFDE FFF6          	movff	postinc2,tblptrl
 10103  00146C  CFDD FFF7          	movff	postdec2,tblptrh
 10104  001470                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10105  001470  6AF8               	clrf	tblptru,c
 10106  001472                     	endif
 10107  001472                     	if	0	;tblptru may be non-zero
 10108  001472                     	endif
 10109  001472  0008               	tblrd		*
 10110  001474  50F5               	movf	tablat,w,c
 10111  001476  6F87               	movwf	(??_vfpfcnvrt+2)& (0+255),b
 10112  001478  6B88               	clrf	(??_vfpfcnvrt+3)& (0+255),b
 10113  00147A  5185               	movf	??_vfpfcnvrt& (0+255),w,b
 10114  00147C  2787               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
 10115  00147E  5186               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
 10116  001480  2388               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
 10117  001482  5188               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
 10118  001484  E10A               	bnz	u5500
 10119  001486  0E0A               	movlw	10
 10120  001488  5D87               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
 10121  00148A  A0D8               	btfss	status,0,c
 10122  00148C  EF4A  F00A         	goto	u5501
 10123  001490  EF4D  F00A         	goto	u5500
 10124  001494                     u5501:
 10125  001494  0E01               	movlw	1
 10126  001496  EF4E  F00A         	goto	u5510
 10127  00149A                     u5500:
 10128  00149A  0E00               	movlw	0
 10129  00149C                     u5510:
 10130  00149C  6F93               	movwf	_vfpfcnvrt$2018& (0+255),b
 10131  00149E  6B94               	clrf	(_vfpfcnvrt$2018+1)& (0+255),b
 10132  0014A0                     
 10133                           ; BSR set to: 0
 10134  0014A0  5193               	movf	_vfpfcnvrt$2018& (0+255),w,b
 10135  0014A2  1194               	iorwf	(_vfpfcnvrt$2018+1)& (0+255),w,b
 10136  0014A4  A4D8               	btfss	status,2,c
 10137  0014A6  EF57  F00A         	goto	u5521
 10138  0014AA  EF59  F00A         	goto	u5520
 10139  0014AE                     u5521:
 10140  0014AE  EF24  F00A         	goto	l5538
 10141  0014B2                     u5520:
 10142  0014B2                     l5546:
 10143                           
 10144                           ; BSR set to: 0
 10145                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
 10146  0014B2  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10147  0014B6  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10148  0014BA  CFDE FFF6          	movff	postinc2,tblptrl
 10149  0014BE  CFDD FFF7          	movff	postdec2,tblptrh
 10150  0014C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10151  0014C2  6AF8               	clrf	tblptru,c
 10152  0014C4                     	endif
 10153  0014C4                     	if	0	;tblptru may be non-zero
 10154  0014C4                     	endif
 10155  0014C4  0008               	tblrd		*
 10156  0014C6  50F5               	movf	tablat,w,c
 10157  0014C8  0A63               	xorlw	99
 10158  0014CA  A4D8               	btfss	status,2,c
 10159  0014CC  EF6A  F00A         	goto	u5531
 10160  0014D0  EF6C  F00A         	goto	u5530
 10161  0014D4                     u5531:
 10162  0014D4  EF93  F00A         	goto	l5554
 10163  0014D8                     u5530:
 10164  0014D8                     
 10165                           ; BSR set to: 0
 10166                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
 10167  0014D8  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10168  0014DC  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10169  0014E0  2ADE               	incf	postinc2,f,c
 10170  0014E2  0E00               	movlw	0
 10171  0014E4  22DD               	addwfc	postdec2,f,c
 10172                           
 10173                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10174  0014E6  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10175  0014EA  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10176  0014EE  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10177  0014F2  0E02               	movlw	2
 10178  0014F4  26DE               	addwf	postinc2,f,c
 10179  0014F6  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10180  0014FA  0E00               	movlw	0
 10181  0014FC  22DD               	addwfc	postdec2,f,c
 10182  0014FE  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10183  001502  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10184  001506  50DF               	movf	indf2,w,c
 10185  001508  6F9D               	movwf	vfpfcnvrt@c& (0+255),b
 10186  00150A                     
 10187                           ; BSR set to: 0
 10188                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
 10189  00150A  C07F  F01F         	movff	vfpfcnvrt@fp,ctoa@fp
 10190  00150E  C080  F020         	movff	vfpfcnvrt@fp+1,ctoa@fp+1
 10191  001512  C09D  F021         	movff	vfpfcnvrt@c,ctoa@c
 10192  001516  EC5D  F016         	call	_ctoa	;wreg free
 10193  00151A  C01F  F07F         	movff	?_ctoa,?_vfpfcnvrt
 10194  00151E  C020  F080         	movff	?_ctoa+1,?_vfpfcnvrt+1
 10195  001522  EF16  F00C         	goto	l1553
 10196  001526                     l5554:
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 10200  001526  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10201  00152A  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10202  00152E  CFDE FFF6          	movff	postinc2,tblptrl
 10203  001532  CFDD FFF7          	movff	postdec2,tblptrh
 10204  001536                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10205  001536  6AF8               	clrf	tblptru,c
 10206  001538                     	endif
 10207  001538                     	if	0	;tblptru may be non-zero
 10208  001538                     	endif
 10209  001538  0008               	tblrd		*
 10210  00153A  50F5               	movf	tablat,w,c
 10211  00153C  0A64               	xorlw	100
 10212  00153E  B4D8               	btfsc	status,2,c
 10213  001540  EFA4  F00A         	goto	u5541
 10214  001544  EFA6  F00A         	goto	u5540
 10215  001548                     u5541:
 10216  001548  EFB9  F00A         	goto	l5558
 10217  00154C                     u5540:
 10218  00154C                     
 10219                           ; BSR set to: 0
 10220  00154C  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10221  001550  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10222  001554  CFDE FFF6          	movff	postinc2,tblptrl
 10223  001558  CFDD FFF7          	movff	postdec2,tblptrh
 10224  00155C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10225  00155C  6AF8               	clrf	tblptru,c
 10226  00155E                     	endif
 10227  00155E                     	if	0	;tblptru may be non-zero
 10228  00155E                     	endif
 10229  00155E  0008               	tblrd		*
 10230  001560  50F5               	movf	tablat,w,c
 10231  001562  0A69               	xorlw	105
 10232  001564  A4D8               	btfss	status,2,c
 10233  001566  EFB7  F00A         	goto	u5551
 10234  00156A  EFB9  F00A         	goto	u5550
 10235  00156E                     u5551:
 10236  00156E  EFF9  F00A         	goto	l5564
 10237  001572                     u5550:
 10238  001572                     l5558:
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 10242  001572  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10243  001576  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10244  00157A  2ADE               	incf	postinc2,f,c
 10245  00157C  0E00               	movlw	0
 10246  00157E  22DD               	addwfc	postdec2,f,c
 10247                           
 10248                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10249  001580  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10250  001584  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10251  001588  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10252  00158C  0E02               	movlw	2
 10253  00158E  26DE               	addwf	postinc2,f,c
 10254  001590  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10255  001594  0E00               	movlw	0
 10256  001596  22DD               	addwfc	postdec2,f,c
 10257  001598  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10258  00159C  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10259  0015A0  CFDE F089          	movff	postinc2,vfpfcnvrt@ll
 10260  0015A4  CFDD F08A          	movff	postdec2,vfpfcnvrt@ll+1
 10261  0015A8  0E00               	movlw	0
 10262  0015AA  BF8A               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
 10263  0015AC  0EFF               	movlw	-1
 10264  0015AE  6F8B               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
 10265  0015B0  6F8C               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
 10266  0015B2  6F8D               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
 10267  0015B4  6F8E               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
 10268  0015B6  6F8F               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
 10269  0015B8  6F90               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
 10270  0015BA                     
 10271                           ; BSR set to: 0
 10272                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 10273  0015BA  C07F  F060         	movff	vfpfcnvrt@fp,dtoa@fp
 10274  0015BE  C080  F061         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 10275  0015C2  C089  F062         	movff	vfpfcnvrt@ll,dtoa@d
 10276  0015C6  C08A  F063         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 10277  0015CA  C08B  F064         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 10278  0015CE  C08C  F065         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 10279  0015D2  C08D  F066         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 10280  0015D6  C08E  F067         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 10281  0015DA  C08F  F068         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 10282  0015DE  C090  F069         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 10283  0015E2  EC17  F00C         	call	_dtoa	;wreg free
 10284  0015E6  C060  F07F         	movff	?_dtoa,?_vfpfcnvrt
 10285  0015EA  C061  F080         	movff	?_dtoa+1,?_vfpfcnvrt+1
 10286  0015EE  EF16  F00C         	goto	l1553
 10287  0015F2                     l5564:
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1204:         if 
      +                          (*fmt[0] == 'u') {
 10291  0015F2  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10292  0015F6  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10293  0015FA  CFDE FFF6          	movff	postinc2,tblptrl
 10294  0015FE  CFDD FFF7          	movff	postdec2,tblptrh
 10295  001602                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10296  001602  6AF8               	clrf	tblptru,c
 10297  001604                     	endif
 10298  001604                     	if	0	;tblptru may be non-zero
 10299  001604                     	endif
 10300  001604  0008               	tblrd		*
 10301  001606  50F5               	movf	tablat,w,c
 10302  001608  0A75               	xorlw	117
 10303  00160A  A4D8               	btfss	status,2,c
 10304  00160C  EF0A  F00B         	goto	u5561
 10305  001610  EF0C  F00B         	goto	u5560
 10306  001614                     u5561:
 10307  001614  EF4D  F00B         	goto	l5572
 10308  001618                     u5560:
 10309  001618                     
 10310                           ; BSR set to: 0
 10311                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1206:            
      +                           ++*fmt;
 10312  001618  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10313  00161C  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10314  001620  2ADE               	incf	postinc2,f,c
 10315  001622  0E00               	movlw	0
 10316  001624  22DD               	addwfc	postdec2,f,c
 10317                           
 10318                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1207:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10319  001626  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10320  00162A  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10321  00162E  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10322  001632  0E02               	movlw	2
 10323  001634  26DE               	addwf	postinc2,f,c
 10324  001636  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10325  00163A  0E00               	movlw	0
 10326  00163C  22DD               	addwfc	postdec2,f,c
 10327  00163E  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10328  001642  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10329  001646  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
 10330  00164A  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
 10331  00164E  C087  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10332  001652  C088  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10333  001656  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10334  001658  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10335  00165A  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10336  00165C  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10337  00165E  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10338  001660  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10339  001662                     
 10340                           ; BSR set to: 0
 10341                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1209:            
      +                           return utoa(fp, llu);
 10342  001662  C07F  F060         	movff	vfpfcnvrt@fp,utoa@fp
 10343  001666  C080  F061         	movff	vfpfcnvrt@fp+1,utoa@fp+1
 10344  00166A  C095  F062         	movff	vfpfcnvrt@llu,utoa@d
 10345  00166E  C096  F063         	movff	vfpfcnvrt@llu+1,utoa@d+1
 10346  001672  C097  F064         	movff	vfpfcnvrt@llu+2,utoa@d+2
 10347  001676  C098  F065         	movff	vfpfcnvrt@llu+3,utoa@d+3
 10348  00167A  C099  F066         	movff	vfpfcnvrt@llu+4,utoa@d+4
 10349  00167E  C09A  F067         	movff	vfpfcnvrt@llu+5,utoa@d+5
 10350  001682  C09B  F068         	movff	vfpfcnvrt@llu+6,utoa@d+6
 10351  001686  C09C  F069         	movff	vfpfcnvrt@llu+7,utoa@d+7
 10352  00168A  ECF8  F00E         	call	_utoa	;wreg free
 10353  00168E  C060  F07F         	movff	?_utoa,?_vfpfcnvrt
 10354  001692  C061  F080         	movff	?_utoa+1,?_vfpfcnvrt+1
 10355  001696  EF16  F00C         	goto	l1553
 10356  00169A                     l5572:
 10357                           
 10358                           ; BSR set to: 0
 10359                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1296:         if 
      +                          ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10360  00169A  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10361  00169E  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10362  0016A2  CFDE FFF6          	movff	postinc2,tblptrl
 10363  0016A6  CFDD FFF7          	movff	postdec2,tblptrh
 10364  0016AA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10365  0016AA  6AF8               	clrf	tblptru,c
 10366  0016AC                     	endif
 10367  0016AC                     	if	0	;tblptru may be non-zero
 10368  0016AC                     	endif
 10369  0016AC  0008               	tblrd		*
 10370  0016AE  50F5               	movf	tablat,w,c
 10371  0016B0  0A78               	xorlw	120
 10372  0016B2  B4D8               	btfsc	status,2,c
 10373  0016B4  EF5E  F00B         	goto	u5571
 10374  0016B8  EF60  F00B         	goto	u5570
 10375  0016BC                     u5571:
 10376  0016BC  EF73  F00B         	goto	l5576
 10377  0016C0                     u5570:
 10378  0016C0                     
 10379                           ; BSR set to: 0
 10380  0016C0  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10381  0016C4  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10382  0016C8  CFDE FFF6          	movff	postinc2,tblptrl
 10383  0016CC  CFDD FFF7          	movff	postdec2,tblptrh
 10384  0016D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10385  0016D0  6AF8               	clrf	tblptru,c
 10386  0016D2                     	endif
 10387  0016D2                     	if	0	;tblptru may be non-zero
 10388  0016D2                     	endif
 10389  0016D2  0008               	tblrd		*
 10390  0016D4  50F5               	movf	tablat,w,c
 10391  0016D6  0A58               	xorlw	88
 10392  0016D8  A4D8               	btfss	status,2,c
 10393  0016DA  EF71  F00B         	goto	u5581
 10394  0016DE  EF73  F00B         	goto	u5580
 10395  0016E2                     u5581:
 10396  0016E2  EFC2  F00B         	goto	l5586
 10397  0016E6                     u5580:
 10398  0016E6                     l5576:
 10399                           
 10400                           ; BSR set to: 0
 10401                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1298:            
      +                           c = (*fmt)[0];
 10402  0016E6  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10403  0016EA  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10404  0016EE  CFDE FFF6          	movff	postinc2,tblptrl
 10405  0016F2  CFDD FFF7          	movff	postdec2,tblptrh
 10406  0016F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10407  0016F6  6AF8               	clrf	tblptru,c
 10408  0016F8                     	endif
 10409  0016F8                     	if	0	;tblptru may be non-zero
 10410  0016F8                     	endif
 10411  0016F8  0008               	tblrd		*
 10412  0016FA  CFF5 F09D          	movff	tablat,vfpfcnvrt@c
 10413  0016FE                     
 10414                           ; BSR set to: 0
 10415                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1299:            
      +                           ++*fmt;
 10416  0016FE  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10417  001702  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10418  001706  2ADE               	incf	postinc2,f,c
 10419  001708  0E00               	movlw	0
 10420  00170A  22DD               	addwfc	postdec2,f,c
 10421  00170C                     
 10422                           ; BSR set to: 0
 10423                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1300:            
      +                           llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned in
      +                          t)0));
 10424  00170C  C083  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 10425  001710  C084  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 10426  001714  CFDF F085          	movff	indf2,??_vfpfcnvrt
 10427  001718  0E02               	movlw	2
 10428  00171A  26DE               	addwf	postinc2,f,c
 10429  00171C  CFDF F086          	movff	indf2,??_vfpfcnvrt+1
 10430  001720  0E00               	movlw	0
 10431  001722  22DD               	addwfc	postdec2,f,c
 10432  001724  C085  FFD9         	movff	??_vfpfcnvrt,fsr2l
 10433  001728  C086  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 10434  00172C  CFDE F087          	movff	postinc2,??_vfpfcnvrt+2
 10435  001730  CFDD F088          	movff	postdec2,??_vfpfcnvrt+3
 10436  001734  C087  F095         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
 10437  001738  C088  F096         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
 10438  00173C  6B97               	clrf	(vfpfcnvrt@llu+2)& (0+255),b
 10439  00173E  6B98               	clrf	(vfpfcnvrt@llu+3)& (0+255),b
 10440  001740  6B99               	clrf	(vfpfcnvrt@llu+4)& (0+255),b
 10441  001742  6B9A               	clrf	(vfpfcnvrt@llu+5)& (0+255),b
 10442  001744  6B9B               	clrf	(vfpfcnvrt@llu+6)& (0+255),b
 10443  001746  6B9C               	clrf	(vfpfcnvrt@llu+7)& (0+255),b
 10444  001748                     
 10445                           ; BSR set to: 0
 10446                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1302:            
      +                           return xtoa(fp, llu, c);
 10447  001748  C07F  F060         	movff	vfpfcnvrt@fp,xtoa@fp
 10448  00174C  C080  F061         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
 10449  001750  C095  F062         	movff	vfpfcnvrt@llu,xtoa@d
 10450  001754  C096  F063         	movff	vfpfcnvrt@llu+1,xtoa@d+1
 10451  001758  C097  F064         	movff	vfpfcnvrt@llu+2,xtoa@d+2
 10452  00175C  C098  F065         	movff	vfpfcnvrt@llu+3,xtoa@d+3
 10453  001760  C099  F066         	movff	vfpfcnvrt@llu+4,xtoa@d+4
 10454  001764  C09A  F067         	movff	vfpfcnvrt@llu+5,xtoa@d+5
 10455  001768  C09B  F068         	movff	vfpfcnvrt@llu+6,xtoa@d+6
 10456  00176C  C09C  F069         	movff	vfpfcnvrt@llu+7,xtoa@d+7
 10457  001770  C09D  F06A         	movff	vfpfcnvrt@c,xtoa@x
 10458  001774  EC89  F00D         	call	_xtoa	;wreg free
 10459  001778  C060  F07F         	movff	?_xtoa,?_vfpfcnvrt
 10460  00177C  C061  F080         	movff	?_xtoa+1,?_vfpfcnvrt+1
 10461  001780  EF16  F00C         	goto	l1553
 10462  001784                     l5586:
 10463                           
 10464                           ; BSR set to: 0
 10465                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 10466  001784  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10467  001788  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10468  00178C  CFDE FFF6          	movff	postinc2,tblptrl
 10469  001790  CFDD FFF7          	movff	postdec2,tblptrh
 10470  001794                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10471  001794  6AF8               	clrf	tblptru,c
 10472  001796                     	endif
 10473  001796                     	if	0	;tblptru may be non-zero
 10474  001796                     	endif
 10475  001796  0008               	tblrd		*
 10476  001798  50F5               	movf	tablat,w,c
 10477  00179A  0A25               	xorlw	37
 10478  00179C  A4D8               	btfss	status,2,c
 10479  00179E  EFD3  F00B         	goto	u5591
 10480  0017A2  EFD5  F00B         	goto	u5590
 10481  0017A6                     u5591:
 10482  0017A6  EFED  F00B         	goto	l5596
 10483  0017AA                     u5590:
 10484  0017AA                     
 10485                           ; BSR set to: 0
 10486                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 10487  0017AA  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10488  0017AE  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10489  0017B2  2ADE               	incf	postinc2,f,c
 10490  0017B4  0E00               	movlw	0
 10491  0017B6  22DD               	addwfc	postdec2,f,c
 10492  0017B8                     
 10493                           ; BSR set to: 0
 10494                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 10495  0017B8  0E00               	movlw	0
 10496  0017BA  6E17               	movwf	(fputc@c+1)^0,c
 10497  0017BC  0E25               	movlw	37
 10498  0017BE  6E16               	movwf	fputc@c^0,c
 10499  0017C0  C07F  F018         	movff	vfpfcnvrt@fp,fputc@fp
 10500  0017C4  C080  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10501  0017C8  EC33  F018         	call	_fputc	;wreg free
 10502  0017CC                     l5592:
 10503                           
 10504                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 10505  0017CC  0E00               	movlw	0
 10506  0017CE  0100               	movlb	0	; () banked
 10507  0017D0  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10508  0017D2  0E01               	movlw	1
 10509  0017D4  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
 10510  0017D6  EF16  F00C         	goto	l1553
 10511  0017DA                     l5596:
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 10515  0017DA  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10516  0017DE  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10517  0017E2  2ADE               	incf	postinc2,f,c
 10518  0017E4  0E00               	movlw	0
 10519  0017E6  22DD               	addwfc	postdec2,f,c
 10520  0017E8                     
 10521                           ; BSR set to: 0
 10522                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 10523  0017E8  0E00               	movlw	0
 10524  0017EA  6F80               	movwf	(?_vfpfcnvrt+1)& (0+255),b
 10525  0017EC  0E00               	movlw	0
 10526  0017EE  6F7F               	movwf	?_vfpfcnvrt& (0+255),b
 10527  0017F0  EF16  F00C         	goto	l1553
 10528  0017F4                     l5602:
 10529                           
 10530                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 10531  0017F4  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10532  0017F8  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10533  0017FC  CFDE FFF6          	movff	postinc2,tblptrl
 10534  001800  CFDD FFF7          	movff	postdec2,tblptrh
 10535  001804                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10536  001804  6AF8               	clrf	tblptru,c
 10537  001806                     	endif
 10538  001806                     	if	0	;tblptru may be non-zero
 10539  001806                     	endif
 10540  001806  0008               	tblrd		*
 10541  001808  50F5               	movf	tablat,w,c
 10542  00180A  6E16               	movwf	fputc@c^0,c
 10543  00180C  6A17               	clrf	(fputc@c+1)^0,c
 10544  00180E  C07F  F018         	movff	vfpfcnvrt@fp,fputc@fp
 10545  001812  C080  F019         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 10546  001816  EC33  F018         	call	_fputc	;wreg free
 10547  00181A                     
 10548                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 10549  00181A  C081  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 10550  00181E  C082  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 10551  001822  2ADE               	incf	postinc2,f,c
 10552  001824  0E00               	movlw	0
 10553  001826  22DD               	addwfc	postdec2,f,c
 10554  001828  EFE6  F00B         	goto	l5592
 10555  00182C                     l1553:
 10556  00182C  0012               	return		;funcret
 10557  00182E                     __end_of_vfpfcnvrt:
 10558                           	callstack 0
 10559                           
 10560 ;; *************** function _xtoa *****************
 10561 ;; Defined at:
 10562 ;;		line 645 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 10563 ;; Parameters:    Size  Location     Type
 10564 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 10565 ;;		 -> NULL(0), 
 10566 ;;  d               8    2[BANK0 ] unsigned long long 
 10567 ;;  x               1   10[BANK0 ] unsigned char 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;  n               8   19[BANK0 ] unsigned long long 
 10570 ;;  c               2   29[BANK0 ] int 
 10571 ;;  i               2   27[BANK0 ] int 
 10572 ;;  w               2   17[BANK0 ] int 
 10573 ;;  p               2   15[BANK0 ] int 
 10574 ;; Return value:  Size  Location     Type
 10575 ;;                  2    0[BANK0 ] int 
 10576 ;; Registers used:
 10577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10578 ;; Tracked objects:
 10579 ;;		On entry : 0/0
 10580 ;;		On exit  : 0/0
 10581 ;;		Unchanged: 0/0
 10582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10583 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10584 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10585 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10586 ;;      Totals:         8      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10587 ;;Total ram usage:       39 bytes
 10588 ;; Hardware stack levels used:    1
 10589 ;; Hardware stack levels required when called:    9
 10590 ;; This function calls:
 10591 ;;		_isalpha
 10592 ;;		_isupper
 10593 ;;		_pad
 10594 ;;		_toupper
 10595 ;; This function is called by:
 10596 ;;		_vfpfcnvrt
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text28
 10601  001B12                     __ptext28:
 10602                           	callstack 0
 10603  001B12                     _xtoa:
 10604                           	callstack 18
 10605  001B12                     
 10606                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 645: static int x
      +                          toa(FILE *fp, unsigned long long d, char x);C:\Program Files\Microchip\xc8\v2.30\pic\sou
      +                          rces\c99\common\doprnt.c: 646: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\co
      +                          mmon\doprnt.c: 647:     int c, i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources
      +                          \c99\common\doprnt.c: 648:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.3
      +                          0\pic\sources\c99\common\doprnt.c: 651:     if (!(prec < 0)) {
 10607  001B12  BE3C               	btfsc	(_prec+1)^0,7,c
 10608  001B14  EF8E  F00D         	goto	u5211
 10609  001B18  EF90  F00D         	goto	u5210
 10610  001B1C                     u5211:
 10611  001B1C  EF91  F00D         	goto	l5384
 10612  001B20                     u5210:
 10613  001B20                     
 10614                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 652:         flag
      +                          s &= ~(1 << 1);
 10615  001B20  923D               	bcf	_flags^0,1,c
 10616  001B22                     l5384:
 10617                           
 10618                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 654:     p = (0 <
      +                           prec) ? prec : 1;
 10619  001B22  BE3C               	btfsc	(_prec+1)^0,7,c
 10620  001B24  EF9E  F00D         	goto	u5220
 10621  001B28  503C               	movf	(_prec+1)^0,w,c
 10622  001B2A  E106               	bnz	u5221
 10623  001B2C  043B               	decf	_prec^0,w,c
 10624  001B2E  B0D8               	btfsc	status,0,c
 10625  001B30  EF9C  F00D         	goto	u5221
 10626  001B34  EF9E  F00D         	goto	u5220
 10627  001B38                     u5221:
 10628  001B38  EFA5  F00D         	goto	l1501
 10629  001B3C                     u5220:
 10630  001B3C  0E00               	movlw	0
 10631  001B3E  0100               	movlb	0	; () banked
 10632  001B40  6F70               	movwf	(xtoa@p+1)& (0+255),b
 10633  001B42  0E01               	movlw	1
 10634  001B44  6F6F               	movwf	xtoa@p& (0+255),b
 10635  001B46  EFA9  F00D         	goto	l1503
 10636  001B4A                     l1501:
 10637  001B4A  C03B  F06F         	movff	_prec,xtoa@p
 10638  001B4E  C03C  F070         	movff	_prec+1,xtoa@p+1
 10639  001B52                     l1503:
 10640                           
 10641                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 655:     w = widt
      +                          h;
 10642  001B52  C039  F071         	movff	_width,xtoa@w
 10643  001B56  C03A  F072         	movff	_width+1,xtoa@w+1
 10644                           
 10645                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 656:     if (flag
      +                          s & (1 << 4)) {
 10646  001B5A  A83D               	btfss	_flags^0,4,c
 10647  001B5C  EFB2  F00D         	goto	u5231
 10648  001B60  EFB4  F00D         	goto	u5230
 10649  001B64                     u5231:
 10650  001B64  EFB9  F00D         	goto	l5390
 10651  001B68                     u5230:
 10652  001B68                     
 10653                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 657:         w -=
      +                           2;
 10654  001B68  0100               	movlb	0	; () banked
 10655  001B6A  0EFE               	movlw	254
 10656  001B6C  2771               	addwf	xtoa@w& (0+255),f,b
 10657  001B6E  0EFF               	movlw	255
 10658  001B70  2372               	addwfc	(xtoa@w+1)& (0+255),f,b
 10659  001B72                     l5390:
 10660                           
 10661                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 661:     n = d;
 10662  001B72  C062  F073         	movff	xtoa@d,xtoa@n
 10663  001B76  C063  F074         	movff	xtoa@d+1,xtoa@n+1
 10664  001B7A  C064  F075         	movff	xtoa@d+2,xtoa@n+2
 10665  001B7E  C065  F076         	movff	xtoa@d+3,xtoa@n+3
 10666  001B82  C066  F077         	movff	xtoa@d+4,xtoa@n+4
 10667  001B86  C067  F078         	movff	xtoa@d+5,xtoa@n+5
 10668  001B8A  C068  F079         	movff	xtoa@d+6,xtoa@n+6
 10669  001B8E  C069  F07A         	movff	xtoa@d+7,xtoa@n+7
 10670  001B92                     
 10671                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 662:     i = size
      +                          of(dbuf) - 1;
 10672  001B92  0E00               	movlw	0
 10673  001B94  0100               	movlb	0	; () banked
 10674  001B96  6F7C               	movwf	(xtoa@i+1)& (0+255),b
 10675  001B98  0E1F               	movlw	31
 10676  001B9A  6F7B               	movwf	xtoa@i& (0+255),b
 10677  001B9C                     
 10678                           ; BSR set to: 0
 10679                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 663:     dbuf[i] 
      +                          = '\0';
 10680  001B9C  0E00               	movlw	0
 10681  001B9E  0101               	movlb	1	; () banked
 10682  001BA0  6F9F               	movwf	(_dbuf+31)& (0+255),b
 10683                           
 10684                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10685  001BA2  EF87  F00E         	goto	l5426
 10686  001BA6                     l5396:
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 665:         --i;
 10690  001BA6  077B               	decf	xtoa@i& (0+255),f,b
 10691  001BA8  A0D8               	btfss	status,0,c
 10692  001BAA  077C               	decf	(xtoa@i+1)& (0+255),f,b
 10693  001BAC                     
 10694                           ; BSR set to: 0
 10695                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 666:         c = 
      +                          n & 0x0f;
 10696  001BAC  0E0F               	movlw	15
 10697  001BAE  1573               	andwf	xtoa@n& (0+255),w,b
 10698  001BB0  6F7D               	movwf	xtoa@c& (0+255),b
 10699  001BB2  6B7E               	clrf	(xtoa@c+1)& (0+255),b
 10700  001BB4                     
 10701                           ; BSR set to: 0
 10702                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 667:         c = 
      +                          (c < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 10703  001BB4  BF7E               	btfsc	(xtoa@c+1)& (0+255),7,b
 10704  001BB6  EFE6  F00D         	goto	u5241
 10705  001BBA  517E               	movf	(xtoa@c+1)& (0+255),w,b
 10706  001BBC  E109               	bnz	u5240
 10707  001BBE  0E0A               	movlw	10
 10708  001BC0  5D7D               	subwf	xtoa@c& (0+255),w,b
 10709  001BC2  A0D8               	btfss	status,0,c
 10710  001BC4  EFE6  F00D         	goto	u5241
 10711  001BC8  EFE8  F00D         	goto	u5240
 10712  001BCC                     u5241:
 10713  001BCC  EFF0  F00D         	goto	l5404
 10714  001BD0                     u5240:
 10715  001BD0                     
 10716                           ; BSR set to: 0
 10717  001BD0  0E57               	movlw	87
 10718  001BD2  257D               	addwf	xtoa@c& (0+255),w,b
 10719  001BD4  6F7D               	movwf	xtoa@c& (0+255),b
 10720  001BD6  0E00               	movlw	0
 10721  001BD8  217E               	addwfc	(xtoa@c+1)& (0+255),w,b
 10722  001BDA  6F7E               	movwf	(xtoa@c+1)& (0+255),b
 10723  001BDC  EFF6  F00D         	goto	l1510
 10724  001BE0                     l5404:
 10725                           
 10726                           ; BSR set to: 0
 10727  001BE0  0E30               	movlw	48
 10728  001BE2  257D               	addwf	xtoa@c& (0+255),w,b
 10729  001BE4  6F7D               	movwf	xtoa@c& (0+255),b
 10730  001BE6  0E00               	movlw	0
 10731  001BE8  217E               	addwfc	(xtoa@c+1)& (0+255),w,b
 10732  001BEA  6F7E               	movwf	(xtoa@c+1)& (0+255),b
 10733  001BEC                     l1510:
 10734                           
 10735                           ; BSR set to: 0
 10736  001BEC  0EBF               	movlw	191
 10737  001BEE  6E31               	movwf	??_xtoa^0,c
 10738  001BF0  0EFF               	movlw	255
 10739  001BF2  6E32               	movwf	(??_xtoa+1)^0,c
 10740  001BF4  516A               	movf	xtoa@x& (0+255),w,b
 10741  001BF6  6E33               	movwf	(??_xtoa+2)^0,c
 10742  001BF8  6A34               	clrf	(??_xtoa+3)^0,c
 10743  001BFA  5031               	movf	??_xtoa^0,w,c
 10744  001BFC  2633               	addwf	(??_xtoa+2)^0,f,c
 10745  001BFE  5032               	movf	(??_xtoa+1)^0,w,c
 10746  001C00  2234               	addwfc	(??_xtoa+3)^0,f,c
 10747  001C02  5034               	movf	(??_xtoa+3)^0,w,c
 10748  001C04  E10A               	bnz	u5250
 10749  001C06  0E1A               	movlw	26
 10750  001C08  5C33               	subwf	(??_xtoa+2)^0,w,c
 10751  001C0A  A0D8               	btfss	status,0,c
 10752  001C0C  EF0A  F00E         	goto	u5251
 10753  001C10  EF0D  F00E         	goto	u5250
 10754  001C14                     u5251:
 10755  001C14  0E01               	movlw	1
 10756  001C16  EF0E  F00E         	goto	u5260
 10757  001C1A                     u5250:
 10758  001C1A  0E00               	movlw	0
 10759  001C1C                     u5260:
 10760  001C1C  6F6B               	movwf	_xtoa$2003& (0+255),b
 10761  001C1E  6B6C               	clrf	(_xtoa$2003+1)& (0+255),b
 10762  001C20                     
 10763                           ; BSR set to: 0
 10764  001C20  516B               	movf	_xtoa$2003& (0+255),w,b
 10765  001C22  116C               	iorwf	(_xtoa$2003+1)& (0+255),w,b
 10766  001C24  B4D8               	btfsc	status,2,c
 10767  001C26  EF17  F00E         	goto	u5271
 10768  001C2A  EF19  F00E         	goto	u5270
 10769  001C2E                     u5271:
 10770  001C2E  EF49  F00E         	goto	l5418
 10771  001C32                     u5270:
 10772  001C32                     
 10773                           ; BSR set to: 0
 10774  001C32  0E9F               	movlw	159
 10775  001C34  6E31               	movwf	??_xtoa^0,c
 10776  001C36  0EFF               	movlw	255
 10777  001C38  6E32               	movwf	(??_xtoa+1)^0,c
 10778  001C3A  0E20               	movlw	32
 10779  001C3C  117D               	iorwf	xtoa@c& (0+255),w,b
 10780  001C3E  6E33               	movwf	(??_xtoa+2)^0,c
 10781  001C40  0E00               	movlw	0
 10782  001C42  117E               	iorwf	(xtoa@c+1)& (0+255),w,b
 10783  001C44  6E34               	movwf	(??_xtoa+3)^0,c
 10784  001C46  5031               	movf	??_xtoa^0,w,c
 10785  001C48  2633               	addwf	(??_xtoa+2)^0,f,c
 10786  001C4A  5032               	movf	(??_xtoa+1)^0,w,c
 10787  001C4C  2234               	addwfc	(??_xtoa+3)^0,f,c
 10788  001C4E  5034               	movf	(??_xtoa+3)^0,w,c
 10789  001C50  E10A               	bnz	u5280
 10790  001C52  0E1A               	movlw	26
 10791  001C54  5C33               	subwf	(??_xtoa+2)^0,w,c
 10792  001C56  A0D8               	btfss	status,0,c
 10793  001C58  EF30  F00E         	goto	u5281
 10794  001C5C  EF33  F00E         	goto	u5280
 10795  001C60                     u5281:
 10796  001C60  0E01               	movlw	1
 10797  001C62  EF34  F00E         	goto	u5290
 10798  001C66                     u5280:
 10799  001C66  0E00               	movlw	0
 10800  001C68                     u5290:
 10801  001C68  6F6D               	movwf	_xtoa$2004& (0+255),b
 10802  001C6A  6B6E               	clrf	(_xtoa$2004+1)& (0+255),b
 10803  001C6C                     
 10804                           ; BSR set to: 0
 10805  001C6C  516D               	movf	_xtoa$2004& (0+255),w,b
 10806  001C6E  116E               	iorwf	(_xtoa$2004+1)& (0+255),w,b
 10807  001C70  B4D8               	btfsc	status,2,c
 10808  001C72  EF3D  F00E         	goto	u5301
 10809  001C76  EF3F  F00E         	goto	u5300
 10810  001C7A                     u5301:
 10811  001C7A  EF49  F00E         	goto	l5418
 10812  001C7E                     u5300:
 10813  001C7E                     
 10814                           ; BSR set to: 0
 10815                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 669:             
      +                          c = toupper(c);
 10816  001C7E  C07D  F01A         	movff	xtoa@c,toupper@c
 10817  001C82  C07E  F01B         	movff	xtoa@c+1,toupper@c+1
 10818  001C86  EC30  F019         	call	_toupper	;wreg free
 10819  001C8A  C01A  F07D         	movff	?_toupper,xtoa@c
 10820  001C8E  C01B  F07E         	movff	?_toupper+1,xtoa@c+1
 10821  001C92                     l5418:
 10822                           
 10823                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 671:         dbuf
      +                          [i] = (char)c;
 10824  001C92  0E80               	movlw	low _dbuf
 10825  001C94  0100               	movlb	0	; () banked
 10826  001C96  257B               	addwf	xtoa@i& (0+255),w,b
 10827  001C98  6ED9               	movwf	fsr2l,c
 10828  001C9A  0E01               	movlw	high _dbuf
 10829  001C9C  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10830  001C9E  6EDA               	movwf	fsr2h,c
 10831  001CA0  C07D  FFDF         	movff	xtoa@c,indf2
 10832  001CA4                     
 10833                           ; BSR set to: 0
 10834                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 672:         --p;
 10835  001CA4  076F               	decf	xtoa@p& (0+255),f,b
 10836  001CA6  A0D8               	btfss	status,0,c
 10837  001CA8  0770               	decf	(xtoa@p+1)& (0+255),f,b
 10838  001CAA                     
 10839                           ; BSR set to: 0
 10840                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 673:         --w;
 10841  001CAA  0771               	decf	xtoa@w& (0+255),f,b
 10842  001CAC  A0D8               	btfss	status,0,c
 10843  001CAE  0772               	decf	(xtoa@w+1)& (0+255),f,b
 10844  001CB0                     
 10845                           ; BSR set to: 0
 10846                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 674:         n = 
      +                          n >> 4;
 10847  001CB0  C073  F031         	movff	xtoa@n,??_xtoa
 10848  001CB4  C074  F032         	movff	xtoa@n+1,??_xtoa+1
 10849  001CB8  C075  F033         	movff	xtoa@n+2,??_xtoa+2
 10850  001CBC  C076  F034         	movff	xtoa@n+3,??_xtoa+3
 10851  001CC0  C077  F035         	movff	xtoa@n+4,??_xtoa+4
 10852  001CC4  C078  F036         	movff	xtoa@n+5,??_xtoa+5
 10853  001CC8  C079  F037         	movff	xtoa@n+6,??_xtoa+6
 10854  001CCC  C07A  F038         	movff	xtoa@n+7,??_xtoa+7
 10855  001CD0  0E05               	movlw	5
 10856  001CD2  EF74  F00E         	goto	u5310
 10857  001CD6                     u5315:
 10858  001CD6  90D8               	bcf	status,0,c
 10859  001CD8  3238               	rrcf	(??_xtoa+7)^0,f,c
 10860  001CDA  3237               	rrcf	(??_xtoa+6)^0,f,c
 10861  001CDC  3236               	rrcf	(??_xtoa+5)^0,f,c
 10862  001CDE  3235               	rrcf	(??_xtoa+4)^0,f,c
 10863  001CE0  3234               	rrcf	(??_xtoa+3)^0,f,c
 10864  001CE2  3233               	rrcf	(??_xtoa+2)^0,f,c
 10865  001CE4  3232               	rrcf	(??_xtoa+1)^0,f,c
 10866  001CE6  3231               	rrcf	??_xtoa^0,f,c
 10867  001CE8                     u5310:
 10868  001CE8  2EE8               	decfsz	wreg,f,c
 10869  001CEA  EF6B  F00E         	goto	u5315
 10870  001CEE  C031  F073         	movff	??_xtoa,xtoa@n
 10871  001CF2  C032  F074         	movff	??_xtoa+1,xtoa@n+1
 10872  001CF6  C033  F075         	movff	??_xtoa+2,xtoa@n+2
 10873  001CFA  C034  F076         	movff	??_xtoa+3,xtoa@n+3
 10874  001CFE  C035  F077         	movff	??_xtoa+4,xtoa@n+4
 10875  001D02  C036  F078         	movff	??_xtoa+5,xtoa@n+5
 10876  001D06  C037  F079         	movff	??_xtoa+6,xtoa@n+6
 10877  001D0A  C038  F07A         	movff	??_xtoa+7,xtoa@n+7
 10878  001D0E                     l5426:
 10879                           
 10880                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 664:     while (!
      +                          (i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10881  001D0E  0100               	movlb	0	; () banked
 10882  001D10  BF7C               	btfsc	(xtoa@i+1)& (0+255),7,b
 10883  001D12  EF94  F00E         	goto	u5321
 10884  001D16  517C               	movf	(xtoa@i+1)& (0+255),w,b
 10885  001D18  E109               	bnz	u5320
 10886  001D1A  0E02               	movlw	2
 10887  001D1C  5D7B               	subwf	xtoa@i& (0+255),w,b
 10888  001D1E  A0D8               	btfss	status,0,c
 10889  001D20  EF94  F00E         	goto	u5321
 10890  001D24  EF96  F00E         	goto	u5320
 10891  001D28                     u5321:
 10892  001D28  EFC6  F00E         	goto	l1524
 10893  001D2C                     u5320:
 10894  001D2C                     
 10895                           ; BSR set to: 0
 10896  001D2C  5173               	movf	xtoa@n& (0+255),w,b
 10897  001D2E  1174               	iorwf	(xtoa@n+1)& (0+255),w,b
 10898  001D30  1175               	iorwf	(xtoa@n+2)& (0+255),w,b
 10899  001D32  1176               	iorwf	(xtoa@n+3)& (0+255),w,b
 10900  001D34  1177               	iorwf	(xtoa@n+4)& (0+255),w,b
 10901  001D36  1178               	iorwf	(xtoa@n+5)& (0+255),w,b
 10902  001D38  1179               	iorwf	(xtoa@n+6)& (0+255),w,b
 10903  001D3A  117A               	iorwf	(xtoa@n+7)& (0+255),w,b
 10904  001D3C  A4D8               	btfss	status,2,c
 10905  001D3E  EFA3  F00E         	goto	u5331
 10906  001D42  EFA5  F00E         	goto	u5330
 10907  001D46                     u5331:
 10908  001D46  EFD3  F00D         	goto	l5396
 10909  001D4A                     u5330:
 10910  001D4A                     
 10911                           ; BSR set to: 0
 10912  001D4A  BF70               	btfsc	(xtoa@p+1)& (0+255),7,b
 10913  001D4C  EFB2  F00E         	goto	u5340
 10914  001D50  5170               	movf	(xtoa@p+1)& (0+255),w,b
 10915  001D52  E106               	bnz	u5341
 10916  001D54  056F               	decf	xtoa@p& (0+255),w,b
 10917  001D56  B0D8               	btfsc	status,0,c
 10918  001D58  EFB0  F00E         	goto	u5341
 10919  001D5C  EFB2  F00E         	goto	u5340
 10920  001D60                     u5341:
 10921  001D60  EFD3  F00D         	goto	l5396
 10922  001D64                     u5340:
 10923  001D64                     
 10924                           ; BSR set to: 0
 10925  001D64  BF72               	btfsc	(xtoa@w+1)& (0+255),7,b
 10926  001D66  EFBD  F00E         	goto	u5351
 10927  001D6A  5172               	movf	(xtoa@w+1)& (0+255),w,b
 10928  001D6C  E108               	bnz	u5350
 10929  001D6E  0571               	decf	xtoa@w& (0+255),w,b
 10930  001D70  A0D8               	btfss	status,0,c
 10931  001D72  EFBD  F00E         	goto	u5351
 10932  001D76  EFBF  F00E         	goto	u5350
 10933  001D7A                     u5351:
 10934  001D7A  EFC6  F00E         	goto	l1524
 10935  001D7E                     u5350:
 10936  001D7E                     
 10937                           ; BSR set to: 0
 10938  001D7E  B23D               	btfsc	_flags^0,1,c
 10939  001D80  EFC4  F00E         	goto	u5361
 10940  001D84  EFC6  F00E         	goto	u5360
 10941  001D88                     u5361:
 10942  001D88  EFD3  F00D         	goto	l5396
 10943  001D8C                     u5360:
 10944  001D8C                     l1524:
 10945                           
 10946                           ; BSR set to: 0
 10947                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 678:     if (flag
      +                          s & (1 << 4)) {
 10948  001D8C  A83D               	btfss	_flags^0,4,c
 10949  001D8E  EFCB  F00E         	goto	u5371
 10950  001D92  EFCD  F00E         	goto	u5370
 10951  001D96                     u5371:
 10952  001D96  EFE3  F00E         	goto	l5442
 10953  001D9A                     u5370:
 10954  001D9A                     
 10955                           ; BSR set to: 0
 10956                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 679:         --i;
 10957  001D9A  077B               	decf	xtoa@i& (0+255),f,b
 10958  001D9C  A0D8               	btfss	status,0,c
 10959  001D9E  077C               	decf	(xtoa@i+1)& (0+255),f,b
 10960  001DA0                     
 10961                           ; BSR set to: 0
 10962                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 680:         dbuf
      +                          [i] = x;
 10963  001DA0  0E80               	movlw	low _dbuf
 10964  001DA2  257B               	addwf	xtoa@i& (0+255),w,b
 10965  001DA4  6ED9               	movwf	fsr2l,c
 10966  001DA6  0E01               	movlw	high _dbuf
 10967  001DA8  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10968  001DAA  6EDA               	movwf	fsr2h,c
 10969  001DAC  C06A  FFDF         	movff	xtoa@x,indf2
 10970  001DB0                     
 10971                           ; BSR set to: 0
 10972                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 681:         --i;
 10973  001DB0  077B               	decf	xtoa@i& (0+255),f,b
 10974  001DB2  A0D8               	btfss	status,0,c
 10975  001DB4  077C               	decf	(xtoa@i+1)& (0+255),f,b
 10976                           
 10977                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 682:         dbuf
      +                          [i] = '0';
 10978  001DB6  0E80               	movlw	low _dbuf
 10979  001DB8  257B               	addwf	xtoa@i& (0+255),w,b
 10980  001DBA  6ED9               	movwf	fsr2l,c
 10981  001DBC  0E01               	movlw	high _dbuf
 10982  001DBE  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10983  001DC0  6EDA               	movwf	fsr2h,c
 10984  001DC2  0E30               	movlw	48
 10985  001DC4  6EDF               	movwf	indf2,c
 10986  001DC6                     l5442:
 10987                           
 10988                           ; BSR set to: 0
 10989                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 686:     return p
      +                          ad(fp, &dbuf[i], w);
 10990  001DC6  C060  F026         	movff	xtoa@fp,pad@fp
 10991  001DCA  C061  F027         	movff	xtoa@fp+1,pad@fp+1
 10992  001DCE  0E80               	movlw	low _dbuf
 10993  001DD0  257B               	addwf	xtoa@i& (0+255),w,b
 10994  001DD2  6E28               	movwf	pad@buf^0,c
 10995  001DD4  0E01               	movlw	high _dbuf
 10996  001DD6  217C               	addwfc	(xtoa@i+1)& (0+255),w,b
 10997  001DD8  6E29               	movwf	(pad@buf+1)^0,c
 10998  001DDA  C071  F02A         	movff	xtoa@w,pad@p
 10999  001DDE  C072  F02B         	movff	xtoa@w+1,pad@p+1
 11000  001DE2  EC2F  F017         	call	_pad	;wreg free
 11001  001DE6  C026  F060         	movff	?_pad,?_xtoa
 11002  001DEA  C027  F061         	movff	?_pad+1,?_xtoa+1
 11003  001DEE  0012               	return		;funcret
 11004  001DF0                     __end_of_xtoa:
 11005                           	callstack 0
 11006                           
 11007 ;; *************** function _toupper *****************
 11008 ;; Defined at:
 11009 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\toupper.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  c               2   25[COMRAM] int 
 11012 ;; Auto vars:     Size  Location     Type
 11013 ;;		None
 11014 ;; Return value:  Size  Location     Type
 11015 ;;                  2   25[COMRAM] int 
 11016 ;; Registers used:
 11017 ;;		wreg, status,2, status,0
 11018 ;; Tracked objects:
 11019 ;;		On entry : 0/0
 11020 ;;		On exit  : 0/0
 11021 ;;		Unchanged: 0/0
 11022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11026 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11027 ;;Total ram usage:        8 bytes
 11028 ;; Hardware stack levels used:    1
 11029 ;; Hardware stack levels required when called:    5
 11030 ;; This function calls:
 11031 ;;		_islower
 11032 ;; This function is called by:
 11033 ;;		_xtoa
 11034 ;; This function uses a non-reentrant model
 11035 ;;
 11036                           
 11037                           	psect	text29
 11038  003260                     __ptext29:
 11039                           	callstack 0
 11040  003260                     _toupper:
 11041                           	callstack 21
 11042  003260  0E9F               	movlw	159
 11043  003262  6E1C               	movwf	??_toupper^0,c
 11044  003264  0EFF               	movlw	255
 11045  003266  6E1D               	movwf	(??_toupper+1)^0,c
 11046  003268  C01A  F01E         	movff	toupper@c,??_toupper+2
 11047  00326C  C01B  F01F         	movff	toupper@c+1,??_toupper+3
 11048  003270  501C               	movf	??_toupper^0,w,c
 11049  003272  261E               	addwf	(??_toupper+2)^0,f,c
 11050  003274  501D               	movf	(??_toupper+1)^0,w,c
 11051  003276  221F               	addwfc	(??_toupper+3)^0,f,c
 11052  003278  501F               	movf	(??_toupper+3)^0,w,c
 11053  00327A  E10A               	bnz	u4870
 11054  00327C  0E1A               	movlw	26
 11055  00327E  5C1E               	subwf	(??_toupper+2)^0,w,c
 11056  003280  A0D8               	btfss	status,0,c
 11057  003282  EF45  F019         	goto	u4871
 11058  003286  EF48  F019         	goto	u4870
 11059  00328A                     u4871:
 11060  00328A  0E01               	movlw	1
 11061  00328C  EF49  F019         	goto	u4880
 11062  003290                     u4870:
 11063  003290  0E00               	movlw	0
 11064  003292                     u4880:
 11065  003292  6E20               	movwf	_toupper$2117^0,c
 11066  003294  6A21               	clrf	(_toupper$2117+1)^0,c
 11067  003296  5020               	movf	_toupper$2117^0,w,c
 11068  003298  1021               	iorwf	(_toupper$2117+1)^0,w,c
 11069  00329A  B4D8               	btfsc	status,2,c
 11070  00329C  EF52  F019         	goto	u4891
 11071  0032A0  EF54  F019         	goto	u4890
 11072  0032A4                     u4891:
 11073  0032A4  EF5A  F019         	goto	l1662
 11074  0032A8                     u4890:
 11075  0032A8  0E5F               	movlw	95
 11076  0032AA  141A               	andwf	toupper@c^0,w,c
 11077  0032AC  6E1A               	movwf	?_toupper^0,c
 11078  0032AE  6A1B               	clrf	(?_toupper+1)^0,c
 11079  0032B0  EF5E  F019         	goto	l1667
 11080  0032B4                     l1662:
 11081  0032B4  C01A  F01A         	movff	toupper@c,?_toupper
 11082  0032B8  C01B  F01B         	movff	toupper@c+1,?_toupper+1
 11083  0032BC                     l1667:
 11084  0032BC  0012               	return		;funcret
 11085  0032BE                     __end_of_toupper:
 11086                           	callstack 0
 11087                           
 11088 ;; *************** function _islower *****************
 11089 ;; Defined at:
 11090 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\islower.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;  c               2   19[COMRAM] int 
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;		None
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  2   19[COMRAM] int 
 11097 ;; Registers used:
 11098 ;;		wreg, status,2, status,0
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11106 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11108 ;;Total ram usage:        6 bytes
 11109 ;; Hardware stack levels used:    1
 11110 ;; Hardware stack levels required when called:    4
 11111 ;; This function calls:
 11112 ;;		Nothing
 11113 ;; This function is called by:
 11114 ;;		_toupper
 11115 ;; This function uses a non-reentrant model
 11116 ;;
 11117                           
 11118                           	psect	text30
 11119  00348A                     __ptext30:
 11120                           	callstack 0
 11121  00348A                     _islower:
 11122                           	callstack 21
 11123  00348A  0E9F               	movlw	159
 11124  00348C  6E16               	movwf	??_islower^0,c
 11125  00348E  0EFF               	movlw	255
 11126  003490  6E17               	movwf	(??_islower+1)^0,c
 11127  003492  C014  F018         	movff	islower@c,??_islower+2
 11128  003496  C015  F019         	movff	islower@c+1,??_islower+3
 11129  00349A  5016               	movf	??_islower^0,w,c
 11130  00349C  2618               	addwf	(??_islower+2)^0,f,c
 11131  00349E  5017               	movf	(??_islower+1)^0,w,c
 11132  0034A0  2219               	addwfc	(??_islower+3)^0,f,c
 11133  0034A2  5019               	movf	(??_islower+3)^0,w,c
 11134  0034A4  E10A               	bnz	u4560
 11135  0034A6  0E1A               	movlw	26
 11136  0034A8  5C18               	subwf	(??_islower+2)^0,w,c
 11137  0034AA  A0D8               	btfss	status,0,c
 11138  0034AC  EF5A  F01A         	goto	u4561
 11139  0034B0  EF5D  F01A         	goto	u4560
 11140  0034B4                     u4561:
 11141  0034B4  0E01               	movlw	1
 11142  0034B6  EF5E  F01A         	goto	u4570
 11143  0034BA                     u4560:
 11144  0034BA  0E00               	movlw	0
 11145  0034BC                     u4570:
 11146  0034BC  6E14               	movwf	?_islower^0,c
 11147  0034BE  6A15               	clrf	(?_islower+1)^0,c
 11148  0034C0  0012               	return		;funcret
 11149  0034C2                     __end_of_islower:
 11150                           	callstack 0
 11151                           
 11152 ;; *************** function _isupper *****************
 11153 ;; Defined at:
 11154 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isupper.c"
 11155 ;; Parameters:    Size  Location     Type
 11156 ;;  c               2   19[COMRAM] int 
 11157 ;; Auto vars:     Size  Location     Type
 11158 ;;		None
 11159 ;; Return value:  Size  Location     Type
 11160 ;;                  2   19[COMRAM] int 
 11161 ;; Registers used:
 11162 ;;		wreg, status,2, status,0
 11163 ;; Tracked objects:
 11164 ;;		On entry : 0/0
 11165 ;;		On exit  : 0/0
 11166 ;;		Unchanged: 0/0
 11167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11170 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11171 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11172 ;;Total ram usage:        6 bytes
 11173 ;; Hardware stack levels used:    1
 11174 ;; Hardware stack levels required when called:    4
 11175 ;; This function calls:
 11176 ;;		Nothing
 11177 ;; This function is called by:
 11178 ;;		_xtoa
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text31
 11183  0034C2                     __ptext31:
 11184                           	callstack 0
 11185  0034C2                     _isupper:
 11186                           	callstack 22
 11187  0034C2  0EBF               	movlw	191
 11188  0034C4  6E16               	movwf	??_isupper^0,c
 11189  0034C6  0EFF               	movlw	255
 11190  0034C8  6E17               	movwf	(??_isupper+1)^0,c
 11191  0034CA  C014  F018         	movff	isupper@c,??_isupper+2
 11192  0034CE  C015  F019         	movff	isupper@c+1,??_isupper+3
 11193  0034D2  5016               	movf	??_isupper^0,w,c
 11194  0034D4  2618               	addwf	(??_isupper+2)^0,f,c
 11195  0034D6  5017               	movf	(??_isupper+1)^0,w,c
 11196  0034D8  2219               	addwfc	(??_isupper+3)^0,f,c
 11197  0034DA  5019               	movf	(??_isupper+3)^0,w,c
 11198  0034DC  E10A               	bnz	u4830
 11199  0034DE  0E1A               	movlw	26
 11200  0034E0  5C18               	subwf	(??_isupper+2)^0,w,c
 11201  0034E2  A0D8               	btfss	status,0,c
 11202  0034E4  EF76  F01A         	goto	u4831
 11203  0034E8  EF79  F01A         	goto	u4830
 11204  0034EC                     u4831:
 11205  0034EC  0E01               	movlw	1
 11206  0034EE  EF7A  F01A         	goto	u4840
 11207  0034F2                     u4830:
 11208  0034F2  0E00               	movlw	0
 11209  0034F4                     u4840:
 11210  0034F4  6E14               	movwf	?_isupper^0,c
 11211  0034F6  6A15               	clrf	(?_isupper+1)^0,c
 11212  0034F8  0012               	return		;funcret
 11213  0034FA                     __end_of_isupper:
 11214                           	callstack 0
 11215                           
 11216 ;; *************** function _isalpha *****************
 11217 ;; Defined at:
 11218 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isalpha.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;  c               2   19[COMRAM] int 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  2   19[COMRAM] int 
 11225 ;; Registers used:
 11226 ;;		wreg, status,2, status,0
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11234 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11236 ;;Total ram usage:        6 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    4
 11239 ;; This function calls:
 11240 ;;		Nothing
 11241 ;; This function is called by:
 11242 ;;		_xtoa
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text32
 11247  003416                     __ptext32:
 11248                           	callstack 0
 11249  003416                     _isalpha:
 11250                           	callstack 22
 11251  003416  0E9F               	movlw	159
 11252  003418  6E16               	movwf	??_isalpha^0,c
 11253  00341A  0EFF               	movlw	255
 11254  00341C  6E17               	movwf	(??_isalpha+1)^0,c
 11255  00341E  0E20               	movlw	32
 11256  003420  1014               	iorwf	isalpha@c^0,w,c
 11257  003422  6E18               	movwf	(??_isalpha+2)^0,c
 11258  003424  0E00               	movlw	0
 11259  003426  1015               	iorwf	(isalpha@c+1)^0,w,c
 11260  003428  6E19               	movwf	(??_isalpha+3)^0,c
 11261  00342A  5016               	movf	??_isalpha^0,w,c
 11262  00342C  2618               	addwf	(??_isalpha+2)^0,f,c
 11263  00342E  5017               	movf	(??_isalpha+1)^0,w,c
 11264  003430  2219               	addwfc	(??_isalpha+3)^0,f,c
 11265  003432  5019               	movf	(??_isalpha+3)^0,w,c
 11266  003434  E10A               	bnz	u4850
 11267  003436  0E1A               	movlw	26
 11268  003438  5C18               	subwf	(??_isalpha+2)^0,w,c
 11269  00343A  A0D8               	btfss	status,0,c
 11270  00343C  EF22  F01A         	goto	u4851
 11271  003440  EF25  F01A         	goto	u4850
 11272  003444                     u4851:
 11273  003444  0E01               	movlw	1
 11274  003446  EF26  F01A         	goto	u4860
 11275  00344A                     u4850:
 11276  00344A  0E00               	movlw	0
 11277  00344C                     u4860:
 11278  00344C  6E14               	movwf	?_isalpha^0,c
 11279  00344E  6A15               	clrf	(?_isalpha+1)^0,c
 11280  003450  0012               	return		;funcret
 11281  003452                     __end_of_isalpha:
 11282                           	callstack 0
 11283                           
 11284 ;; *************** function _utoa *****************
 11285 ;; Defined at:
 11286 ;;		line 615 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 11287 ;; Parameters:    Size  Location     Type
 11288 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11289 ;;		 -> NULL(0), 
 11290 ;;  d               8    2[BANK0 ] unsigned long long 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  n               8   14[BANK0 ] unsigned long long 
 11293 ;;  i               2   22[BANK0 ] int 
 11294 ;;  w               2   12[BANK0 ] int 
 11295 ;;  p               2   10[BANK0 ] int 
 11296 ;; Return value:  Size  Location     Type
 11297 ;;                  2    0[BANK0 ] int 
 11298 ;; Registers used:
 11299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11300 ;; Tracked objects:
 11301 ;;		On entry : 0/0
 11302 ;;		On exit  : 0/0
 11303 ;;		Unchanged: 0/0
 11304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11305 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11306 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11307 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Totals:         8      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;Total ram usage:       32 bytes
 11310 ;; Hardware stack levels used:    1
 11311 ;; Hardware stack levels required when called:    9
 11312 ;; This function calls:
 11313 ;;		___lodiv
 11314 ;;		___lomod
 11315 ;;		_pad
 11316 ;; This function is called by:
 11317 ;;		_vfpfcnvrt
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text33
 11322  001DF0                     __ptext33:
 11323                           	callstack 0
 11324  001DF0                     _utoa:
 11325                           	callstack 18
 11326  001DF0                     
 11327                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 615: static int u
      +                          toa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99
      +                          \common\doprnt.c: 616: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\dop
      +                          rnt.c: 617:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common
      +                          \doprnt.c: 618:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sourc
      +                          es\c99\common\doprnt.c: 621:     if (!(prec < 0)) {
 11328  001DF0  BE3C               	btfsc	(_prec+1)^0,7,c
 11329  001DF2  EFFD  F00E         	goto	u5141
 11330  001DF6  EFFF  F00E         	goto	u5140
 11331  001DFA                     u5141:
 11332  001DFA  EF00  F00F         	goto	l5348
 11333  001DFE                     u5140:
 11334  001DFE                     
 11335                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 622:         flag
      +                          s &= ~(1 << 1);
 11336  001DFE  923D               	bcf	_flags^0,1,c
 11337  001E00                     l5348:
 11338                           
 11339                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 624:     p = (0 <
      +                           prec) ? prec : 1;
 11340  001E00  BE3C               	btfsc	(_prec+1)^0,7,c
 11341  001E02  EF0D  F00F         	goto	u5150
 11342  001E06  503C               	movf	(_prec+1)^0,w,c
 11343  001E08  E106               	bnz	u5151
 11344  001E0A  043B               	decf	_prec^0,w,c
 11345  001E0C  B0D8               	btfsc	status,0,c
 11346  001E0E  EF0B  F00F         	goto	u5151
 11347  001E12  EF0D  F00F         	goto	u5150
 11348  001E16                     u5151:
 11349  001E16  EF14  F00F         	goto	l1486
 11350  001E1A                     u5150:
 11351  001E1A  0E00               	movlw	0
 11352  001E1C  0100               	movlb	0	; () banked
 11353  001E1E  6F6B               	movwf	(utoa@p+1)& (0+255),b
 11354  001E20  0E01               	movlw	1
 11355  001E22  6F6A               	movwf	utoa@p& (0+255),b
 11356  001E24  EF18  F00F         	goto	l1488
 11357  001E28                     l1486:
 11358  001E28  C03B  F06A         	movff	_prec,utoa@p
 11359  001E2C  C03C  F06B         	movff	_prec+1,utoa@p+1
 11360  001E30                     l1488:
 11361                           
 11362                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 625:     w = widt
      +                          h;
 11363  001E30  C039  F06C         	movff	_width,utoa@w
 11364  001E34  C03A  F06D         	movff	_width+1,utoa@w+1
 11365                           
 11366                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 628:     n = d;
 11367  001E38  C062  F06E         	movff	utoa@d,utoa@n
 11368  001E3C  C063  F06F         	movff	utoa@d+1,utoa@n+1
 11369  001E40  C064  F070         	movff	utoa@d+2,utoa@n+2
 11370  001E44  C065  F071         	movff	utoa@d+3,utoa@n+3
 11371  001E48  C066  F072         	movff	utoa@d+4,utoa@n+4
 11372  001E4C  C067  F073         	movff	utoa@d+5,utoa@n+5
 11373  001E50  C068  F074         	movff	utoa@d+6,utoa@n+6
 11374  001E54  C069  F075         	movff	utoa@d+7,utoa@n+7
 11375  001E58                     
 11376                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 629:     i = size
      +                          of(dbuf) - 1;
 11377  001E58  0E00               	movlw	0
 11378  001E5A  0100               	movlb	0	; () banked
 11379  001E5C  6F77               	movwf	(utoa@i+1)& (0+255),b
 11380  001E5E  0E1F               	movlw	31
 11381  001E60  6F76               	movwf	utoa@i& (0+255),b
 11382  001E62                     
 11383                           ; BSR set to: 0
 11384                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 630:     dbuf[i] 
      +                          = '\0';
 11385  001E62  0E00               	movlw	0
 11386  001E64  0101               	movlb	1	; () banked
 11387  001E66  6F9F               	movwf	(_dbuf+31)& (0+255),b
 11388                           
 11389                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11390  001E68  EFAD  F00F         	goto	l5366
 11391  001E6C                     l5356:
 11392                           
 11393                           ; BSR set to: 0
 11394                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 632:         --i;
 11395  001E6C  0776               	decf	utoa@i& (0+255),f,b
 11396  001E6E  A0D8               	btfss	status,0,c
 11397  001E70  0777               	decf	(utoa@i+1)& (0+255),f,b
 11398  001E72                     
 11399                           ; BSR set to: 0
 11400                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 633:         dbuf
      +                          [i] = '0' + (n % 10);
 11401  001E72  0E80               	movlw	low _dbuf
 11402  001E74  2576               	addwf	utoa@i& (0+255),w,b
 11403  001E76  6ED9               	movwf	fsr2l,c
 11404  001E78  0E01               	movlw	high _dbuf
 11405  001E7A  2177               	addwfc	(utoa@i+1)& (0+255),w,b
 11406  001E7C  6EDA               	movwf	fsr2h,c
 11407  001E7E  C06E  F014         	movff	utoa@n,___lomod@dividend
 11408  001E82  C06F  F015         	movff	utoa@n+1,___lomod@dividend+1
 11409  001E86  C070  F016         	movff	utoa@n+2,___lomod@dividend+2
 11410  001E8A  C071  F017         	movff	utoa@n+3,___lomod@dividend+3
 11411  001E8E  C072  F018         	movff	utoa@n+4,___lomod@dividend+4
 11412  001E92  C073  F019         	movff	utoa@n+5,___lomod@dividend+5
 11413  001E96  C074  F01A         	movff	utoa@n+6,___lomod@dividend+6
 11414  001E9A  C075  F01B         	movff	utoa@n+7,___lomod@dividend+7
 11415  001E9E  0E0A               	movlw	10
 11416  001EA0  6E1C               	movwf	___lomod@divisor^0,c
 11417  001EA2  0E00               	movlw	0
 11418  001EA4  6E1D               	movwf	(___lomod@divisor+1)^0,c
 11419  001EA6  0E00               	movlw	0
 11420  001EA8  6E1E               	movwf	(___lomod@divisor+2)^0,c
 11421  001EAA  0E00               	movlw	0
 11422  001EAC  6E1F               	movwf	(___lomod@divisor+3)^0,c
 11423  001EAE  0E00               	movlw	0
 11424  001EB0  6E20               	movwf	(___lomod@divisor+4)^0,c
 11425  001EB2  0E00               	movlw	0
 11426  001EB4  6E21               	movwf	(___lomod@divisor+5)^0,c
 11427  001EB6  0E00               	movlw	0
 11428  001EB8  6E22               	movwf	(___lomod@divisor+6)^0,c
 11429  001EBA  0E00               	movlw	0
 11430  001EBC  6E23               	movwf	(___lomod@divisor+7)^0,c
 11431  001EBE  ECC7  F016         	call	___lomod	;wreg free
 11432  001EC2  C014  F031         	movff	?___lomod,??_utoa
 11433  001EC6  C015  F032         	movff	?___lomod+1,??_utoa+1
 11434  001ECA  C016  F033         	movff	?___lomod+2,??_utoa+2
 11435  001ECE  C017  F034         	movff	?___lomod+3,??_utoa+3
 11436  001ED2  C018  F035         	movff	?___lomod+4,??_utoa+4
 11437  001ED6  C019  F036         	movff	?___lomod+5,??_utoa+5
 11438  001EDA  C01A  F037         	movff	?___lomod+6,??_utoa+6
 11439  001EDE  C01B  F038         	movff	?___lomod+7,??_utoa+7
 11440  001EE2  5031               	movf	??_utoa^0,w,c
 11441  001EE4  0F30               	addlw	48
 11442  001EE6  6EDF               	movwf	indf2,c
 11443  001EE8                     
 11444                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 634:         --p;
 11445  001EE8  0100               	movlb	0	; () banked
 11446  001EEA  076A               	decf	utoa@p& (0+255),f,b
 11447  001EEC  A0D8               	btfss	status,0,c
 11448  001EEE  076B               	decf	(utoa@p+1)& (0+255),f,b
 11449  001EF0                     
 11450                           ; BSR set to: 0
 11451                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 635:         --w;
 11452  001EF0  076C               	decf	utoa@w& (0+255),f,b
 11453  001EF2  A0D8               	btfss	status,0,c
 11454  001EF4  076D               	decf	(utoa@w+1)& (0+255),f,b
 11455  001EF6                     
 11456                           ; BSR set to: 0
 11457                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 636:         n = 
      +                          n / 10;
 11458  001EF6  C06E  F014         	movff	utoa@n,___lodiv@dividend
 11459  001EFA  C06F  F015         	movff	utoa@n+1,___lodiv@dividend+1
 11460  001EFE  C070  F016         	movff	utoa@n+2,___lodiv@dividend+2
 11461  001F02  C071  F017         	movff	utoa@n+3,___lodiv@dividend+3
 11462  001F06  C072  F018         	movff	utoa@n+4,___lodiv@dividend+4
 11463  001F0A  C073  F019         	movff	utoa@n+5,___lodiv@dividend+5
 11464  001F0E  C074  F01A         	movff	utoa@n+6,___lodiv@dividend+6
 11465  001F12  C075  F01B         	movff	utoa@n+7,___lodiv@dividend+7
 11466  001F16  0E0A               	movlw	10
 11467  001F18  6E1C               	movwf	___lodiv@divisor^0,c
 11468  001F1A  0E00               	movlw	0
 11469  001F1C  6E1D               	movwf	(___lodiv@divisor+1)^0,c
 11470  001F1E  0E00               	movlw	0
 11471  001F20  6E1E               	movwf	(___lodiv@divisor+2)^0,c
 11472  001F22  0E00               	movlw	0
 11473  001F24  6E1F               	movwf	(___lodiv@divisor+3)^0,c
 11474  001F26  0E00               	movlw	0
 11475  001F28  6E20               	movwf	(___lodiv@divisor+4)^0,c
 11476  001F2A  0E00               	movlw	0
 11477  001F2C  6E21               	movwf	(___lodiv@divisor+5)^0,c
 11478  001F2E  0E00               	movlw	0
 11479  001F30  6E22               	movwf	(___lodiv@divisor+6)^0,c
 11480  001F32  0E00               	movlw	0
 11481  001F34  6E23               	movwf	(___lodiv@divisor+7)^0,c
 11482  001F36  ECE5  F015         	call	___lodiv	;wreg free
 11483  001F3A  C014  F06E         	movff	?___lodiv,utoa@n
 11484  001F3E  C015  F06F         	movff	?___lodiv+1,utoa@n+1
 11485  001F42  C016  F070         	movff	?___lodiv+2,utoa@n+2
 11486  001F46  C017  F071         	movff	?___lodiv+3,utoa@n+3
 11487  001F4A  C018  F072         	movff	?___lodiv+4,utoa@n+4
 11488  001F4E  C019  F073         	movff	?___lodiv+5,utoa@n+5
 11489  001F52  C01A  F074         	movff	?___lodiv+6,utoa@n+6
 11490  001F56  C01B  F075         	movff	?___lodiv+7,utoa@n+7
 11491  001F5A                     l5366:
 11492                           
 11493                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 631:     while (i
      +                           && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11494  001F5A  0100               	movlb	0	; () banked
 11495  001F5C  5176               	movf	utoa@i& (0+255),w,b
 11496  001F5E  1177               	iorwf	(utoa@i+1)& (0+255),w,b
 11497  001F60  B4D8               	btfsc	status,2,c
 11498  001F62  EFB5  F00F         	goto	u5161
 11499  001F66  EFB7  F00F         	goto	u5160
 11500  001F6A                     u5161:
 11501  001F6A  EFE7  F00F         	goto	l5376
 11502  001F6E                     u5160:
 11503  001F6E                     
 11504                           ; BSR set to: 0
 11505  001F6E  516E               	movf	utoa@n& (0+255),w,b
 11506  001F70  116F               	iorwf	(utoa@n+1)& (0+255),w,b
 11507  001F72  1170               	iorwf	(utoa@n+2)& (0+255),w,b
 11508  001F74  1171               	iorwf	(utoa@n+3)& (0+255),w,b
 11509  001F76  1172               	iorwf	(utoa@n+4)& (0+255),w,b
 11510  001F78  1173               	iorwf	(utoa@n+5)& (0+255),w,b
 11511  001F7A  1174               	iorwf	(utoa@n+6)& (0+255),w,b
 11512  001F7C  1175               	iorwf	(utoa@n+7)& (0+255),w,b
 11513  001F7E  A4D8               	btfss	status,2,c
 11514  001F80  EFC4  F00F         	goto	u5171
 11515  001F84  EFC6  F00F         	goto	u5170
 11516  001F88                     u5171:
 11517  001F88  EF36  F00F         	goto	l5356
 11518  001F8C                     u5170:
 11519  001F8C                     
 11520                           ; BSR set to: 0
 11521  001F8C  BF6B               	btfsc	(utoa@p+1)& (0+255),7,b
 11522  001F8E  EFD3  F00F         	goto	u5180
 11523  001F92  516B               	movf	(utoa@p+1)& (0+255),w,b
 11524  001F94  E106               	bnz	u5181
 11525  001F96  056A               	decf	utoa@p& (0+255),w,b
 11526  001F98  B0D8               	btfsc	status,0,c
 11527  001F9A  EFD1  F00F         	goto	u5181
 11528  001F9E  EFD3  F00F         	goto	u5180
 11529  001FA2                     u5181:
 11530  001FA2  EF36  F00F         	goto	l5356
 11531  001FA6                     u5180:
 11532  001FA6                     
 11533                           ; BSR set to: 0
 11534  001FA6  BF6D               	btfsc	(utoa@w+1)& (0+255),7,b
 11535  001FA8  EFDE  F00F         	goto	u5191
 11536  001FAC  516D               	movf	(utoa@w+1)& (0+255),w,b
 11537  001FAE  E108               	bnz	u5190
 11538  001FB0  056C               	decf	utoa@w& (0+255),w,b
 11539  001FB2  A0D8               	btfss	status,0,c
 11540  001FB4  EFDE  F00F         	goto	u5191
 11541  001FB8  EFE0  F00F         	goto	u5190
 11542  001FBC                     u5191:
 11543  001FBC  EFE7  F00F         	goto	l5376
 11544  001FC0                     u5190:
 11545  001FC0                     
 11546                           ; BSR set to: 0
 11547  001FC0  B23D               	btfsc	_flags^0,1,c
 11548  001FC2  EFE5  F00F         	goto	u5201
 11549  001FC6  EFE7  F00F         	goto	u5200
 11550  001FCA                     u5201:
 11551  001FCA  EF36  F00F         	goto	l5356
 11552  001FCE                     u5200:
 11553  001FCE                     l5376:
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 640:     return p
      +                          ad(fp, &dbuf[i], w);
 11557  001FCE  C060  F026         	movff	utoa@fp,pad@fp
 11558  001FD2  C061  F027         	movff	utoa@fp+1,pad@fp+1
 11559  001FD6  0E80               	movlw	low _dbuf
 11560  001FD8  2576               	addwf	utoa@i& (0+255),w,b
 11561  001FDA  6E28               	movwf	pad@buf^0,c
 11562  001FDC  0E01               	movlw	high _dbuf
 11563  001FDE  2177               	addwfc	(utoa@i+1)& (0+255),w,b
 11564  001FE0  6E29               	movwf	(pad@buf+1)^0,c
 11565  001FE2  C06C  F02A         	movff	utoa@w,pad@p
 11566  001FE6  C06D  F02B         	movff	utoa@w+1,pad@p+1
 11567  001FEA  EC2F  F017         	call	_pad	;wreg free
 11568  001FEE  C026  F060         	movff	?_pad,?_utoa
 11569  001FF2  C027  F061         	movff	?_pad+1,?_utoa+1
 11570  001FF6  0012               	return		;funcret
 11571  001FF8                     __end_of_utoa:
 11572                           	callstack 0
 11573                           
 11574 ;; *************** function ___lomod *****************
 11575 ;; Defined at:
 11576 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lomod.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;  dividend        8   19[COMRAM] unsigned long long 
 11579 ;;  divisor         8   27[COMRAM] unsigned long long 
 11580 ;; Auto vars:     Size  Location     Type
 11581 ;;  counter         1   35[COMRAM] unsigned char 
 11582 ;; Return value:  Size  Location     Type
 11583 ;;                  8   19[COMRAM] unsigned long long 
 11584 ;; Registers used:
 11585 ;;		wreg, status,2, status,0
 11586 ;; Tracked objects:
 11587 ;;		On entry : 0/0
 11588 ;;		On exit  : 0/0
 11589 ;;		Unchanged: 0/0
 11590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11591 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;Total ram usage:       17 bytes
 11596 ;; Hardware stack levels used:    1
 11597 ;; Hardware stack levels required when called:    4
 11598 ;; This function calls:
 11599 ;;		Nothing
 11600 ;; This function is called by:
 11601 ;;		_utoa
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text34
 11606  002D8E                     __ptext34:
 11607                           	callstack 0
 11608  002D8E                     ___lomod:
 11609                           	callstack 22
 11610  002D8E  501C               	movf	___lomod@divisor^0,w,c
 11611  002D90  101D               	iorwf	(___lomod@divisor+1)^0,w,c
 11612  002D92  101E               	iorwf	(___lomod@divisor+2)^0,w,c
 11613  002D94  101F               	iorwf	(___lomod@divisor+3)^0,w,c
 11614  002D96  1020               	iorwf	(___lomod@divisor+4)^0,w,c
 11615  002D98  1021               	iorwf	(___lomod@divisor+5)^0,w,c
 11616  002D9A  1022               	iorwf	(___lomod@divisor+6)^0,w,c
 11617  002D9C  1023               	iorwf	(___lomod@divisor+7)^0,w,c
 11618  002D9E  B4D8               	btfsc	status,2,c
 11619  002DA0  EFD4  F016         	goto	u4751
 11620  002DA4  EFD6  F016         	goto	u4750
 11621  002DA8                     u4751:
 11622  002DA8  EF1E  F017         	goto	l1167
 11623  002DAC                     u4750:
 11624  002DAC  0E01               	movlw	1
 11625  002DAE  6E24               	movwf	___lomod@counter^0,c
 11626  002DB0  EFE4  F016         	goto	l5184
 11627  002DB4                     l5182:
 11628  002DB4  90D8               	bcf	status,0,c
 11629  002DB6  361C               	rlcf	___lomod@divisor^0,f,c
 11630  002DB8  361D               	rlcf	(___lomod@divisor+1)^0,f,c
 11631  002DBA  361E               	rlcf	(___lomod@divisor+2)^0,f,c
 11632  002DBC  361F               	rlcf	(___lomod@divisor+3)^0,f,c
 11633  002DBE  3620               	rlcf	(___lomod@divisor+4)^0,f,c
 11634  002DC0  3621               	rlcf	(___lomod@divisor+5)^0,f,c
 11635  002DC2  3622               	rlcf	(___lomod@divisor+6)^0,f,c
 11636  002DC4  3623               	rlcf	(___lomod@divisor+7)^0,f,c
 11637  002DC6  2A24               	incf	___lomod@counter^0,f,c
 11638  002DC8                     l5184:
 11639  002DC8  AE23               	btfss	(___lomod@divisor+7)^0,7,c
 11640  002DCA  EFE9  F016         	goto	u4761
 11641  002DCE  EFEB  F016         	goto	u4760
 11642  002DD2                     u4761:
 11643  002DD2  EFDA  F016         	goto	l5182
 11644  002DD6                     u4760:
 11645  002DD6                     l5186:
 11646  002DD6  501C               	movf	___lomod@divisor^0,w,c
 11647  002DD8  5C14               	subwf	___lomod@dividend^0,w,c
 11648  002DDA  501D               	movf	(___lomod@divisor+1)^0,w,c
 11649  002DDC  5815               	subwfb	(___lomod@dividend+1)^0,w,c
 11650  002DDE  501E               	movf	(___lomod@divisor+2)^0,w,c
 11651  002DE0  5816               	subwfb	(___lomod@dividend+2)^0,w,c
 11652  002DE2  501F               	movf	(___lomod@divisor+3)^0,w,c
 11653  002DE4  5817               	subwfb	(___lomod@dividend+3)^0,w,c
 11654  002DE6  5020               	movf	(___lomod@divisor+4)^0,w,c
 11655  002DE8  5818               	subwfb	(___lomod@dividend+4)^0,w,c
 11656  002DEA  5021               	movf	(___lomod@divisor+5)^0,w,c
 11657  002DEC  5819               	subwfb	(___lomod@dividend+5)^0,w,c
 11658  002DEE  5022               	movf	(___lomod@divisor+6)^0,w,c
 11659  002DF0  581A               	subwfb	(___lomod@dividend+6)^0,w,c
 11660  002DF2  5023               	movf	(___lomod@divisor+7)^0,w,c
 11661  002DF4  581B               	subwfb	(___lomod@dividend+7)^0,w,c
 11662  002DF6  A0D8               	btfss	status,0,c
 11663  002DF8  EF00  F017         	goto	u4771
 11664  002DFC  EF02  F017         	goto	u4770
 11665  002E00                     u4771:
 11666  002E00  EF12  F017         	goto	l5190
 11667  002E04                     u4770:
 11668  002E04  501C               	movf	___lomod@divisor^0,w,c
 11669  002E06  5E14               	subwf	___lomod@dividend^0,f,c
 11670  002E08  501D               	movf	(___lomod@divisor+1)^0,w,c
 11671  002E0A  5A15               	subwfb	(___lomod@dividend+1)^0,f,c
 11672  002E0C  501E               	movf	(___lomod@divisor+2)^0,w,c
 11673  002E0E  5A16               	subwfb	(___lomod@dividend+2)^0,f,c
 11674  002E10  501F               	movf	(___lomod@divisor+3)^0,w,c
 11675  002E12  5A17               	subwfb	(___lomod@dividend+3)^0,f,c
 11676  002E14  5020               	movf	(___lomod@divisor+4)^0,w,c
 11677  002E16  5A18               	subwfb	(___lomod@dividend+4)^0,f,c
 11678  002E18  5021               	movf	(___lomod@divisor+5)^0,w,c
 11679  002E1A  5A19               	subwfb	(___lomod@dividend+5)^0,f,c
 11680  002E1C  5022               	movf	(___lomod@divisor+6)^0,w,c
 11681  002E1E  5A1A               	subwfb	(___lomod@dividend+6)^0,f,c
 11682  002E20  5023               	movf	(___lomod@divisor+7)^0,w,c
 11683  002E22  5A1B               	subwfb	(___lomod@dividend+7)^0,f,c
 11684  002E24                     l5190:
 11685  002E24  90D8               	bcf	status,0,c
 11686  002E26  3223               	rrcf	(___lomod@divisor+7)^0,f,c
 11687  002E28  3222               	rrcf	(___lomod@divisor+6)^0,f,c
 11688  002E2A  3221               	rrcf	(___lomod@divisor+5)^0,f,c
 11689  002E2C  3220               	rrcf	(___lomod@divisor+4)^0,f,c
 11690  002E2E  321F               	rrcf	(___lomod@divisor+3)^0,f,c
 11691  002E30  321E               	rrcf	(___lomod@divisor+2)^0,f,c
 11692  002E32  321D               	rrcf	(___lomod@divisor+1)^0,f,c
 11693  002E34  321C               	rrcf	___lomod@divisor^0,f,c
 11694  002E36  2E24               	decfsz	___lomod@counter^0,f,c
 11695  002E38  EFEB  F016         	goto	l5186
 11696  002E3C                     l1167:
 11697  002E3C  C014  F014         	movff	___lomod@dividend,?___lomod
 11698  002E40  C015  F015         	movff	___lomod@dividend+1,?___lomod+1
 11699  002E44  C016  F016         	movff	___lomod@dividend+2,?___lomod+2
 11700  002E48  C017  F017         	movff	___lomod@dividend+3,?___lomod+3
 11701  002E4C  C018  F018         	movff	___lomod@dividend+4,?___lomod+4
 11702  002E50  C019  F019         	movff	___lomod@dividend+5,?___lomod+5
 11703  002E54  C01A  F01A         	movff	___lomod@dividend+6,?___lomod+6
 11704  002E58  C01B  F01B         	movff	___lomod@dividend+7,?___lomod+7
 11705  002E5C  0012               	return		;funcret
 11706  002E5E                     __end_of___lomod:
 11707                           	callstack 0
 11708                           
 11709 ;; *************** function ___lodiv *****************
 11710 ;; Defined at:
 11711 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\lodiv.c"
 11712 ;; Parameters:    Size  Location     Type
 11713 ;;  dividend        8   19[COMRAM] unsigned long long 
 11714 ;;  divisor         8   27[COMRAM] unsigned long long 
 11715 ;; Auto vars:     Size  Location     Type
 11716 ;;  quotient        8   35[COMRAM] unsigned long long 
 11717 ;;  counter         1   43[COMRAM] unsigned char 
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  8   19[COMRAM] unsigned long long 
 11720 ;; Registers used:
 11721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11727 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11730 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11731 ;;Total ram usage:       25 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:    4
 11734 ;; This function calls:
 11735 ;;		Nothing
 11736 ;; This function is called by:
 11737 ;;		_utoa
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text35
 11742  002BCA                     __ptext35:
 11743                           	callstack 0
 11744  002BCA                     ___lodiv:
 11745                           	callstack 22
 11746  002BCA  EE20  F024         	lfsr	2,___lodiv@quotient
 11747  002BCE  0E07               	movlw	7
 11748  002BD0                     u4711:
 11749  002BD0  6ADE               	clrf	postinc2,c
 11750  002BD2  06E8               	decf	wreg,f,c
 11751  002BD4  E2FD               	bc	u4711
 11752  002BD6  501C               	movf	___lodiv@divisor^0,w,c
 11753  002BD8  101D               	iorwf	(___lodiv@divisor+1)^0,w,c
 11754  002BDA  101E               	iorwf	(___lodiv@divisor+2)^0,w,c
 11755  002BDC  101F               	iorwf	(___lodiv@divisor+3)^0,w,c
 11756  002BDE  1020               	iorwf	(___lodiv@divisor+4)^0,w,c
 11757  002BE0  1021               	iorwf	(___lodiv@divisor+5)^0,w,c
 11758  002BE2  1022               	iorwf	(___lodiv@divisor+6)^0,w,c
 11759  002BE4  1023               	iorwf	(___lodiv@divisor+7)^0,w,c
 11760  002BE6  B4D8               	btfsc	status,2,c
 11761  002BE8  EFF8  F015         	goto	u4721
 11762  002BEC  EFFA  F015         	goto	u4720
 11763  002BF0                     u4721:
 11764  002BF0  EF4C  F016         	goto	l1157
 11765  002BF4                     u4720:
 11766  002BF4  0E01               	movlw	1
 11767  002BF6  6E2C               	movwf	___lodiv@counter^0,c
 11768  002BF8  EF08  F016         	goto	l5164
 11769  002BFC                     l5162:
 11770  002BFC  90D8               	bcf	status,0,c
 11771  002BFE  361C               	rlcf	___lodiv@divisor^0,f,c
 11772  002C00  361D               	rlcf	(___lodiv@divisor+1)^0,f,c
 11773  002C02  361E               	rlcf	(___lodiv@divisor+2)^0,f,c
 11774  002C04  361F               	rlcf	(___lodiv@divisor+3)^0,f,c
 11775  002C06  3620               	rlcf	(___lodiv@divisor+4)^0,f,c
 11776  002C08  3621               	rlcf	(___lodiv@divisor+5)^0,f,c
 11777  002C0A  3622               	rlcf	(___lodiv@divisor+6)^0,f,c
 11778  002C0C  3623               	rlcf	(___lodiv@divisor+7)^0,f,c
 11779  002C0E  2A2C               	incf	___lodiv@counter^0,f,c
 11780  002C10                     l5164:
 11781  002C10  AE23               	btfss	(___lodiv@divisor+7)^0,7,c
 11782  002C12  EF0D  F016         	goto	u4731
 11783  002C16  EF0F  F016         	goto	u4730
 11784  002C1A                     u4731:
 11785  002C1A  EFFE  F015         	goto	l5162
 11786  002C1E                     u4730:
 11787  002C1E                     l5166:
 11788  002C1E  90D8               	bcf	status,0,c
 11789  002C20  3624               	rlcf	___lodiv@quotient^0,f,c
 11790  002C22  3625               	rlcf	(___lodiv@quotient+1)^0,f,c
 11791  002C24  3626               	rlcf	(___lodiv@quotient+2)^0,f,c
 11792  002C26  3627               	rlcf	(___lodiv@quotient+3)^0,f,c
 11793  002C28  3628               	rlcf	(___lodiv@quotient+4)^0,f,c
 11794  002C2A  3629               	rlcf	(___lodiv@quotient+5)^0,f,c
 11795  002C2C  362A               	rlcf	(___lodiv@quotient+6)^0,f,c
 11796  002C2E  362B               	rlcf	(___lodiv@quotient+7)^0,f,c
 11797  002C30  501C               	movf	___lodiv@divisor^0,w,c
 11798  002C32  5C14               	subwf	___lodiv@dividend^0,w,c
 11799  002C34  501D               	movf	(___lodiv@divisor+1)^0,w,c
 11800  002C36  5815               	subwfb	(___lodiv@dividend+1)^0,w,c
 11801  002C38  501E               	movf	(___lodiv@divisor+2)^0,w,c
 11802  002C3A  5816               	subwfb	(___lodiv@dividend+2)^0,w,c
 11803  002C3C  501F               	movf	(___lodiv@divisor+3)^0,w,c
 11804  002C3E  5817               	subwfb	(___lodiv@dividend+3)^0,w,c
 11805  002C40  5020               	movf	(___lodiv@divisor+4)^0,w,c
 11806  002C42  5818               	subwfb	(___lodiv@dividend+4)^0,w,c
 11807  002C44  5021               	movf	(___lodiv@divisor+5)^0,w,c
 11808  002C46  5819               	subwfb	(___lodiv@dividend+5)^0,w,c
 11809  002C48  5022               	movf	(___lodiv@divisor+6)^0,w,c
 11810  002C4A  581A               	subwfb	(___lodiv@dividend+6)^0,w,c
 11811  002C4C  5023               	movf	(___lodiv@divisor+7)^0,w,c
 11812  002C4E  581B               	subwfb	(___lodiv@dividend+7)^0,w,c
 11813  002C50  A0D8               	btfss	status,0,c
 11814  002C52  EF2D  F016         	goto	u4741
 11815  002C56  EF2F  F016         	goto	u4740
 11816  002C5A                     u4741:
 11817  002C5A  EF40  F016         	goto	l5174
 11818  002C5E                     u4740:
 11819  002C5E  501C               	movf	___lodiv@divisor^0,w,c
 11820  002C60  5E14               	subwf	___lodiv@dividend^0,f,c
 11821  002C62  501D               	movf	(___lodiv@divisor+1)^0,w,c
 11822  002C64  5A15               	subwfb	(___lodiv@dividend+1)^0,f,c
 11823  002C66  501E               	movf	(___lodiv@divisor+2)^0,w,c
 11824  002C68  5A16               	subwfb	(___lodiv@dividend+2)^0,f,c
 11825  002C6A  501F               	movf	(___lodiv@divisor+3)^0,w,c
 11826  002C6C  5A17               	subwfb	(___lodiv@dividend+3)^0,f,c
 11827  002C6E  5020               	movf	(___lodiv@divisor+4)^0,w,c
 11828  002C70  5A18               	subwfb	(___lodiv@dividend+4)^0,f,c
 11829  002C72  5021               	movf	(___lodiv@divisor+5)^0,w,c
 11830  002C74  5A19               	subwfb	(___lodiv@dividend+5)^0,f,c
 11831  002C76  5022               	movf	(___lodiv@divisor+6)^0,w,c
 11832  002C78  5A1A               	subwfb	(___lodiv@dividend+6)^0,f,c
 11833  002C7A  5023               	movf	(___lodiv@divisor+7)^0,w,c
 11834  002C7C  5A1B               	subwfb	(___lodiv@dividend+7)^0,f,c
 11835  002C7E  8024               	bsf	___lodiv@quotient^0,0,c
 11836  002C80                     l5174:
 11837  002C80  90D8               	bcf	status,0,c
 11838  002C82  3223               	rrcf	(___lodiv@divisor+7)^0,f,c
 11839  002C84  3222               	rrcf	(___lodiv@divisor+6)^0,f,c
 11840  002C86  3221               	rrcf	(___lodiv@divisor+5)^0,f,c
 11841  002C88  3220               	rrcf	(___lodiv@divisor+4)^0,f,c
 11842  002C8A  321F               	rrcf	(___lodiv@divisor+3)^0,f,c
 11843  002C8C  321E               	rrcf	(___lodiv@divisor+2)^0,f,c
 11844  002C8E  321D               	rrcf	(___lodiv@divisor+1)^0,f,c
 11845  002C90  321C               	rrcf	___lodiv@divisor^0,f,c
 11846  002C92  2E2C               	decfsz	___lodiv@counter^0,f,c
 11847  002C94  EF0F  F016         	goto	l5166
 11848  002C98                     l1157:
 11849  002C98  C024  F014         	movff	___lodiv@quotient,?___lodiv
 11850  002C9C  C025  F015         	movff	___lodiv@quotient+1,?___lodiv+1
 11851  002CA0  C026  F016         	movff	___lodiv@quotient+2,?___lodiv+2
 11852  002CA4  C027  F017         	movff	___lodiv@quotient+3,?___lodiv+3
 11853  002CA8  C028  F018         	movff	___lodiv@quotient+4,?___lodiv+4
 11854  002CAC  C029  F019         	movff	___lodiv@quotient+5,?___lodiv+5
 11855  002CB0  C02A  F01A         	movff	___lodiv@quotient+6,?___lodiv+6
 11856  002CB4  C02B  F01B         	movff	___lodiv@quotient+7,?___lodiv+7
 11857  002CB8  0012               	return		;funcret
 11858  002CBA                     __end_of___lodiv:
 11859                           	callstack 0
 11860                           
 11861 ;; *************** function _dtoa *****************
 11862 ;; Defined at:
 11863 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 11864 ;; Parameters:    Size  Location     Type
 11865 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
 11866 ;;		 -> NULL(0), 
 11867 ;;  d               8    2[BANK0 ] long long 
 11868 ;; Auto vars:     Size  Location     Type
 11869 ;;  n               8   18[BANK0 ] long long 
 11870 ;;  i               2   26[BANK0 ] int 
 11871 ;;  s               2   16[BANK0 ] int 
 11872 ;;  w               2   14[BANK0 ] int 
 11873 ;;  p               2   12[BANK0 ] int 
 11874 ;; Return value:  Size  Location     Type
 11875 ;;                  2    0[BANK0 ] int 
 11876 ;; Registers used:
 11877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11878 ;; Tracked objects:
 11879 ;;		On entry : 0/0
 11880 ;;		On exit  : 0/0
 11881 ;;		Unchanged: 0/0
 11882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11883 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11884 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11885 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11886 ;;      Totals:         8      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11887 ;;Total ram usage:       36 bytes
 11888 ;; Hardware stack levels used:    1
 11889 ;; Hardware stack levels required when called:    9
 11890 ;; This function calls:
 11891 ;;		___aodiv
 11892 ;;		___aomod
 11893 ;;		_abs
 11894 ;;		_pad
 11895 ;; This function is called by:
 11896 ;;		_vfpfcnvrt
 11897 ;; This function uses a non-reentrant model
 11898 ;;
 11899                           
 11900                           	psect	text36
 11901  00182E                     __ptext36:
 11902                           	callstack 0
 11903  00182E                     _dtoa:
 11904                           	callstack 18
 11905  00182E                     
 11906                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 11907  00182E  C062  F072         	movff	dtoa@d,dtoa@n
 11908  001832  C063  F073         	movff	dtoa@d+1,dtoa@n+1
 11909  001836  C064  F074         	movff	dtoa@d+2,dtoa@n+2
 11910  00183A  C065  F075         	movff	dtoa@d+3,dtoa@n+3
 11911  00183E  C066  F076         	movff	dtoa@d+4,dtoa@n+4
 11912  001842  C067  F077         	movff	dtoa@d+5,dtoa@n+5
 11913  001846  C068  F078         	movff	dtoa@d+6,dtoa@n+6
 11914  00184A  C069  F079         	movff	dtoa@d+7,dtoa@n+7
 11915  00184E                     
 11916                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 11917  00184E  0100               	movlb	0	; () banked
 11918  001850  BF79               	btfsc	(dtoa@n+7)& (0+255),7,b
 11919  001852  EF2D  F00C         	goto	u4991
 11920  001856  EF30  F00C         	goto	u4990
 11921  00185A                     u4991:
 11922  00185A  0E01               	movlw	1
 11923  00185C  EF31  F00C         	goto	u5000
 11924  001860                     u4990:
 11925  001860  0E00               	movlw	0
 11926  001862                     u5000:
 11927  001862  6F70               	movwf	dtoa@s& (0+255),b
 11928  001864  6B71               	clrf	(dtoa@s+1)& (0+255),b
 11929                           
 11930                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 11931  001866  5170               	movf	dtoa@s& (0+255),w,b
 11932  001868  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 11933  00186A  B4D8               	btfsc	status,2,c
 11934  00186C  EF3A  F00C         	goto	u5011
 11935  001870  EF3C  F00C         	goto	u5010
 11936  001874                     u5011:
 11937  001874  EF4C  F00C         	goto	l5288
 11938  001878                     u5010:
 11939  001878                     
 11940                           ; BSR set to: 0
 11941                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 11942  001878  1F79               	comf	(dtoa@n+7)& (0+255),f,b
 11943  00187A  1F78               	comf	(dtoa@n+6)& (0+255),f,b
 11944  00187C  1F77               	comf	(dtoa@n+5)& (0+255),f,b
 11945  00187E  1F76               	comf	(dtoa@n+4)& (0+255),f,b
 11946  001880  1F75               	comf	(dtoa@n+3)& (0+255),f,b
 11947  001882  1F74               	comf	(dtoa@n+2)& (0+255),f,b
 11948  001884  1F73               	comf	(dtoa@n+1)& (0+255),f,b
 11949  001886  6D72               	negf	dtoa@n& (0+255),b
 11950  001888  0E00               	movlw	0
 11951  00188A  2373               	addwfc	(dtoa@n+1)& (0+255),f,b
 11952  00188C  2374               	addwfc	(dtoa@n+2)& (0+255),f,b
 11953  00188E  2375               	addwfc	(dtoa@n+3)& (0+255),f,b
 11954  001890  2376               	addwfc	(dtoa@n+4)& (0+255),f,b
 11955  001892  2377               	addwfc	(dtoa@n+5)& (0+255),f,b
 11956  001894  2378               	addwfc	(dtoa@n+6)& (0+255),f,b
 11957  001896  2379               	addwfc	(dtoa@n+7)& (0+255),f,b
 11958  001898                     l5288:
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 11962  001898  BE3C               	btfsc	(_prec+1)^0,7,c
 11963  00189A  EF51  F00C         	goto	u5021
 11964  00189E  EF53  F00C         	goto	u5020
 11965  0018A2                     u5021:
 11966  0018A2  EF54  F00C         	goto	l5292
 11967  0018A6                     u5020:
 11968  0018A6                     
 11969                           ; BSR set to: 0
 11970                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 11971  0018A6  923D               	bcf	_flags^0,1,c
 11972  0018A8                     l5292:
 11973                           
 11974                           ; BSR set to: 0
 11975                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 11976  0018A8  BE3C               	btfsc	(_prec+1)^0,7,c
 11977  0018AA  EF61  F00C         	goto	u5030
 11978  0018AE  503C               	movf	(_prec+1)^0,w,c
 11979  0018B0  E106               	bnz	u5031
 11980  0018B2  043B               	decf	_prec^0,w,c
 11981  0018B4  B0D8               	btfsc	status,0,c
 11982  0018B6  EF5F  F00C         	goto	u5031
 11983  0018BA  EF61  F00C         	goto	u5030
 11984  0018BE                     u5031:
 11985  0018BE  EF67  F00C         	goto	l1461
 11986  0018C2                     u5030:
 11987  0018C2                     
 11988                           ; BSR set to: 0
 11989  0018C2  0E00               	movlw	0
 11990  0018C4  6F6D               	movwf	(dtoa@p+1)& (0+255),b
 11991  0018C6  0E01               	movlw	1
 11992  0018C8  6F6C               	movwf	dtoa@p& (0+255),b
 11993  0018CA  EF6B  F00C         	goto	l1463
 11994  0018CE                     l1461:
 11995                           
 11996                           ; BSR set to: 0
 11997  0018CE  C03B  F06C         	movff	_prec,dtoa@p
 11998  0018D2  C03C  F06D         	movff	_prec+1,dtoa@p+1
 11999  0018D6                     l1463:
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12003  0018D6  C039  F06E         	movff	_width,dtoa@w
 12004  0018DA  C03A  F06F         	movff	_width+1,dtoa@w+1
 12005  0018DE                     
 12006                           ; BSR set to: 0
 12007                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12008  0018DE  5170               	movf	dtoa@s& (0+255),w,b
 12009  0018E0  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12010  0018E2  A4D8               	btfss	status,2,c
 12011  0018E4  EF76  F00C         	goto	u5041
 12012  0018E8  EF78  F00C         	goto	u5040
 12013  0018EC                     u5041:
 12014  0018EC  EF7F  F00C         	goto	l5300
 12015  0018F0                     u5040:
 12016  0018F0                     
 12017                           ; BSR set to: 0
 12018  0018F0  A43D               	btfss	_flags^0,2,c
 12019  0018F2  EF7D  F00C         	goto	u5051
 12020  0018F6  EF7F  F00C         	goto	u5050
 12021  0018FA                     u5051:
 12022  0018FA  EF82  F00C         	goto	l5302
 12023  0018FE                     u5050:
 12024  0018FE                     l5300:
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 306:         --w;
 12028  0018FE  076E               	decf	dtoa@w& (0+255),f,b
 12029  001900  A0D8               	btfss	status,0,c
 12030  001902  076F               	decf	(dtoa@w+1)& (0+255),f,b
 12031  001904                     l5302:
 12032                           
 12033                           ; BSR set to: 0
 12034                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12035  001904  0E00               	movlw	0
 12036  001906  6F7B               	movwf	(dtoa@i+1)& (0+255),b
 12037  001908  0E1F               	movlw	31
 12038  00190A  6F7A               	movwf	dtoa@i& (0+255),b
 12039  00190C                     
 12040                           ; BSR set to: 0
 12041                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12042  00190C  0E00               	movlw	0
 12043  00190E  0101               	movlb	1	; () banked
 12044  001910  6F9F               	movwf	(_dbuf+31)& (0+255),b
 12045                           
 12046                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12047  001912  EF08  F00D         	goto	l5316
 12048  001916                     l5306:
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 313:         --i;
 12052  001916  077A               	decf	dtoa@i& (0+255),f,b
 12053  001918  A0D8               	btfss	status,0,c
 12054  00191A  077B               	decf	(dtoa@i+1)& (0+255),f,b
 12055  00191C                     
 12056                           ; BSR set to: 0
 12057                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12058  00191C  0E80               	movlw	low _dbuf
 12059  00191E  257A               	addwf	dtoa@i& (0+255),w,b
 12060  001920  6ED9               	movwf	fsr2l,c
 12061  001922  0E01               	movlw	high _dbuf
 12062  001924  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12063  001926  6EDA               	movwf	fsr2h,c
 12064  001928  C072  F014         	movff	dtoa@n,___aomod@dividend
 12065  00192C  C073  F015         	movff	dtoa@n+1,___aomod@dividend+1
 12066  001930  C074  F016         	movff	dtoa@n+2,___aomod@dividend+2
 12067  001934  C075  F017         	movff	dtoa@n+3,___aomod@dividend+3
 12068  001938  C076  F018         	movff	dtoa@n+4,___aomod@dividend+4
 12069  00193C  C077  F019         	movff	dtoa@n+5,___aomod@dividend+5
 12070  001940  C078  F01A         	movff	dtoa@n+6,___aomod@dividend+6
 12071  001944  C079  F01B         	movff	dtoa@n+7,___aomod@dividend+7
 12072  001948  0E0A               	movlw	10
 12073  00194A  6E1C               	movwf	___aomod@divisor^0,c
 12074  00194C  0E00               	movlw	0
 12075  00194E  6E1D               	movwf	(___aomod@divisor+1)^0,c
 12076  001950  0E00               	movlw	0
 12077  001952  6E1E               	movwf	(___aomod@divisor+2)^0,c
 12078  001954  0E00               	movlw	0
 12079  001956  6E1F               	movwf	(___aomod@divisor+3)^0,c
 12080  001958  0E00               	movlw	0
 12081  00195A  6E20               	movwf	(___aomod@divisor+4)^0,c
 12082  00195C  0E00               	movlw	0
 12083  00195E  6E21               	movwf	(___aomod@divisor+5)^0,c
 12084  001960  0E00               	movlw	0
 12085  001962  6E22               	movwf	(___aomod@divisor+6)^0,c
 12086  001964  0E00               	movlw	0
 12087  001966  6E23               	movwf	(___aomod@divisor+7)^0,c
 12088  001968  EC33  F015         	call	___aomod	;wreg free
 12089  00196C  C014  F031         	movff	?___aomod,??_dtoa
 12090  001970  C015  F032         	movff	?___aomod+1,??_dtoa+1
 12091  001974  C016  F033         	movff	?___aomod+2,??_dtoa+2
 12092  001978  C017  F034         	movff	?___aomod+3,??_dtoa+3
 12093  00197C  C018  F035         	movff	?___aomod+4,??_dtoa+4
 12094  001980  C019  F036         	movff	?___aomod+5,??_dtoa+5
 12095  001984  C01A  F037         	movff	?___aomod+6,??_dtoa+6
 12096  001988  C01B  F038         	movff	?___aomod+7,??_dtoa+7
 12097  00198C  C031  F026         	movff	??_dtoa,abs@a
 12098  001990  C033  F027         	movff	??_dtoa+2,abs@a+1
 12099  001994  ECCC  F019         	call	_abs	;wreg free
 12100  001998  5026               	movf	?_abs^0,w,c
 12101  00199A  0F30               	addlw	48
 12102  00199C  6EDF               	movwf	indf2,c
 12103  00199E                     
 12104                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 315:         --p;
 12105  00199E  0100               	movlb	0	; () banked
 12106  0019A0  076C               	decf	dtoa@p& (0+255),f,b
 12107  0019A2  A0D8               	btfss	status,0,c
 12108  0019A4  076D               	decf	(dtoa@p+1)& (0+255),f,b
 12109  0019A6                     
 12110                           ; BSR set to: 0
 12111                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 316:         --w;
 12112  0019A6  076E               	decf	dtoa@w& (0+255),f,b
 12113  0019A8  A0D8               	btfss	status,0,c
 12114  0019AA  076F               	decf	(dtoa@w+1)& (0+255),f,b
 12115  0019AC                     
 12116                           ; BSR set to: 0
 12117                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12118  0019AC  C072  F014         	movff	dtoa@n,___aodiv@dividend
 12119  0019B0  C073  F015         	movff	dtoa@n+1,___aodiv@dividend+1
 12120  0019B4  C074  F016         	movff	dtoa@n+2,___aodiv@dividend+2
 12121  0019B8  C075  F017         	movff	dtoa@n+3,___aodiv@dividend+3
 12122  0019BC  C076  F018         	movff	dtoa@n+4,___aodiv@dividend+4
 12123  0019C0  C077  F019         	movff	dtoa@n+5,___aodiv@dividend+5
 12124  0019C4  C078  F01A         	movff	dtoa@n+6,___aodiv@dividend+6
 12125  0019C8  C079  F01B         	movff	dtoa@n+7,___aodiv@dividend+7
 12126  0019CC  0E0A               	movlw	10
 12127  0019CE  6E1C               	movwf	___aodiv@divisor^0,c
 12128  0019D0  0E00               	movlw	0
 12129  0019D2  6E1D               	movwf	(___aodiv@divisor+1)^0,c
 12130  0019D4  0E00               	movlw	0
 12131  0019D6  6E1E               	movwf	(___aodiv@divisor+2)^0,c
 12132  0019D8  0E00               	movlw	0
 12133  0019DA  6E1F               	movwf	(___aodiv@divisor+3)^0,c
 12134  0019DC  0E00               	movlw	0
 12135  0019DE  6E20               	movwf	(___aodiv@divisor+4)^0,c
 12136  0019E0  0E00               	movlw	0
 12137  0019E2  6E21               	movwf	(___aodiv@divisor+5)^0,c
 12138  0019E4  0E00               	movlw	0
 12139  0019E6  6E22               	movwf	(___aodiv@divisor+6)^0,c
 12140  0019E8  0E00               	movlw	0
 12141  0019EA  6E23               	movwf	(___aodiv@divisor+7)^0,c
 12142  0019EC  ECB3  F013         	call	___aodiv	;wreg free
 12143  0019F0  C014  F072         	movff	?___aodiv,dtoa@n
 12144  0019F4  C015  F073         	movff	?___aodiv+1,dtoa@n+1
 12145  0019F8  C016  F074         	movff	?___aodiv+2,dtoa@n+2
 12146  0019FC  C017  F075         	movff	?___aodiv+3,dtoa@n+3
 12147  001A00  C018  F076         	movff	?___aodiv+4,dtoa@n+4
 12148  001A04  C019  F077         	movff	?___aodiv+5,dtoa@n+5
 12149  001A08  C01A  F078         	movff	?___aodiv+6,dtoa@n+6
 12150  001A0C  C01B  F079         	movff	?___aodiv+7,dtoa@n+7
 12151  001A10                     l5316:
 12152                           
 12153                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12154  001A10  0100               	movlb	0	; () banked
 12155  001A12  BF7B               	btfsc	(dtoa@i+1)& (0+255),7,b
 12156  001A14  EF14  F00D         	goto	u5061
 12157  001A18  517B               	movf	(dtoa@i+1)& (0+255),w,b
 12158  001A1A  E108               	bnz	u5060
 12159  001A1C  057A               	decf	dtoa@i& (0+255),w,b
 12160  001A1E  A0D8               	btfss	status,0,c
 12161  001A20  EF14  F00D         	goto	u5061
 12162  001A24  EF16  F00D         	goto	u5060
 12163  001A28                     u5061:
 12164  001A28  EF46  F00D         	goto	l5326
 12165  001A2C                     u5060:
 12166  001A2C                     
 12167                           ; BSR set to: 0
 12168  001A2C  5172               	movf	dtoa@n& (0+255),w,b
 12169  001A2E  1173               	iorwf	(dtoa@n+1)& (0+255),w,b
 12170  001A30  1174               	iorwf	(dtoa@n+2)& (0+255),w,b
 12171  001A32  1175               	iorwf	(dtoa@n+3)& (0+255),w,b
 12172  001A34  1176               	iorwf	(dtoa@n+4)& (0+255),w,b
 12173  001A36  1177               	iorwf	(dtoa@n+5)& (0+255),w,b
 12174  001A38  1178               	iorwf	(dtoa@n+6)& (0+255),w,b
 12175  001A3A  1179               	iorwf	(dtoa@n+7)& (0+255),w,b
 12176  001A3C  A4D8               	btfss	status,2,c
 12177  001A3E  EF23  F00D         	goto	u5071
 12178  001A42  EF25  F00D         	goto	u5070
 12179  001A46                     u5071:
 12180  001A46  EF8B  F00C         	goto	l5306
 12181  001A4A                     u5070:
 12182  001A4A                     
 12183                           ; BSR set to: 0
 12184  001A4A  BF6D               	btfsc	(dtoa@p+1)& (0+255),7,b
 12185  001A4C  EF32  F00D         	goto	u5080
 12186  001A50  516D               	movf	(dtoa@p+1)& (0+255),w,b
 12187  001A52  E106               	bnz	u5081
 12188  001A54  056C               	decf	dtoa@p& (0+255),w,b
 12189  001A56  B0D8               	btfsc	status,0,c
 12190  001A58  EF30  F00D         	goto	u5081
 12191  001A5C  EF32  F00D         	goto	u5080
 12192  001A60                     u5081:
 12193  001A60  EF8B  F00C         	goto	l5306
 12194  001A64                     u5080:
 12195  001A64                     
 12196                           ; BSR set to: 0
 12197  001A64  BF6F               	btfsc	(dtoa@w+1)& (0+255),7,b
 12198  001A66  EF3D  F00D         	goto	u5091
 12199  001A6A  516F               	movf	(dtoa@w+1)& (0+255),w,b
 12200  001A6C  E108               	bnz	u5090
 12201  001A6E  056E               	decf	dtoa@w& (0+255),w,b
 12202  001A70  A0D8               	btfss	status,0,c
 12203  001A72  EF3D  F00D         	goto	u5091
 12204  001A76  EF3F  F00D         	goto	u5090
 12205  001A7A                     u5091:
 12206  001A7A  EF46  F00D         	goto	l5326
 12207  001A7E                     u5090:
 12208  001A7E                     
 12209                           ; BSR set to: 0
 12210  001A7E  B23D               	btfsc	_flags^0,1,c
 12211  001A80  EF44  F00D         	goto	u5101
 12212  001A84  EF46  F00D         	goto	u5100
 12213  001A88                     u5101:
 12214  001A88  EF8B  F00C         	goto	l5306
 12215  001A8C                     u5100:
 12216  001A8C                     l5326:
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12220  001A8C  5170               	movf	dtoa@s& (0+255),w,b
 12221  001A8E  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12222  001A90  A4D8               	btfss	status,2,c
 12223  001A92  EF4D  F00D         	goto	u5111
 12224  001A96  EF4F  F00D         	goto	u5110
 12225  001A9A                     u5111:
 12226  001A9A  EF56  F00D         	goto	l5330
 12227  001A9E                     u5110:
 12228  001A9E                     
 12229                           ; BSR set to: 0
 12230  001A9E  A43D               	btfss	_flags^0,2,c
 12231  001AA0  EF54  F00D         	goto	u5121
 12232  001AA4  EF56  F00D         	goto	u5120
 12233  001AA8                     u5121:
 12234  001AA8  EF74  F00D         	goto	l5340
 12235  001AAC                     u5120:
 12236  001AAC                     l5330:
 12237                           
 12238                           ; BSR set to: 0
 12239                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 322:         --i;
 12240  001AAC  077A               	decf	dtoa@i& (0+255),f,b
 12241  001AAE  A0D8               	btfss	status,0,c
 12242  001AB0  077B               	decf	(dtoa@i+1)& (0+255),f,b
 12243  001AB2                     
 12244                           ; BSR set to: 0
 12245                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12246  001AB2  5170               	movf	dtoa@s& (0+255),w,b
 12247  001AB4  1171               	iorwf	(dtoa@s+1)& (0+255),w,b
 12248  001AB6  A4D8               	btfss	status,2,c
 12249  001AB8  EF60  F00D         	goto	u5131
 12250  001ABC  EF62  F00D         	goto	u5130
 12251  001AC0                     u5131:
 12252  001AC0  EF68  F00D         	goto	l5336
 12253  001AC4                     u5130:
 12254  001AC4                     
 12255                           ; BSR set to: 0
 12256  001AC4  0E00               	movlw	0
 12257  001AC6  6F6B               	movwf	(_dtoa$1985+1)& (0+255),b
 12258  001AC8  0E2B               	movlw	43
 12259  001ACA  6F6A               	movwf	_dtoa$1985& (0+255),b
 12260  001ACC  EF6C  F00D         	goto	l5338
 12261  001AD0                     l5336:
 12262                           
 12263                           ; BSR set to: 0
 12264  001AD0  0E00               	movlw	0
 12265  001AD2  6F6B               	movwf	(_dtoa$1985+1)& (0+255),b
 12266  001AD4  0E2D               	movlw	45
 12267  001AD6  6F6A               	movwf	_dtoa$1985& (0+255),b
 12268  001AD8                     l5338:
 12269                           
 12270                           ; BSR set to: 0
 12271  001AD8  0E80               	movlw	low _dbuf
 12272  001ADA  257A               	addwf	dtoa@i& (0+255),w,b
 12273  001ADC  6ED9               	movwf	fsr2l,c
 12274  001ADE  0E01               	movlw	high _dbuf
 12275  001AE0  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12276  001AE2  6EDA               	movwf	fsr2h,c
 12277  001AE4  C06A  FFDF         	movff	_dtoa$1985,indf2
 12278  001AE8                     l5340:
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12282  001AE8  C060  F026         	movff	dtoa@fp,pad@fp
 12283  001AEC  C061  F027         	movff	dtoa@fp+1,pad@fp+1
 12284  001AF0  0E80               	movlw	low _dbuf
 12285  001AF2  257A               	addwf	dtoa@i& (0+255),w,b
 12286  001AF4  6E28               	movwf	pad@buf^0,c
 12287  001AF6  0E01               	movlw	high _dbuf
 12288  001AF8  217B               	addwfc	(dtoa@i+1)& (0+255),w,b
 12289  001AFA  6E29               	movwf	(pad@buf+1)^0,c
 12290  001AFC  C06E  F02A         	movff	dtoa@w,pad@p
 12291  001B00  C06F  F02B         	movff	dtoa@w+1,pad@p+1
 12292  001B04  EC2F  F017         	call	_pad	;wreg free
 12293  001B08  C026  F060         	movff	?_pad,?_dtoa
 12294  001B0C  C027  F061         	movff	?_pad+1,?_dtoa+1
 12295  001B10  0012               	return		;funcret
 12296  001B12                     __end_of_dtoa:
 12297                           	callstack 0
 12298                           
 12299 ;; *************** function _pad *****************
 12300 ;; Defined at:
 12301 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  fp              2   37[COMRAM] PTR struct _IO_FILE
 12304 ;;		 -> NULL(0), 
 12305 ;;  buf             2   39[COMRAM] PTR unsigned char 
 12306 ;;		 -> dbuf(32), 
 12307 ;;  p               2   41[COMRAM] int 
 12308 ;; Auto vars:     Size  Location     Type
 12309 ;;  w               2   46[COMRAM] int 
 12310 ;;  i               2   44[COMRAM] int 
 12311 ;; Return value:  Size  Location     Type
 12312 ;;                  2   37[COMRAM] int 
 12313 ;; Registers used:
 12314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12320 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12322 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;Total ram usage:       11 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:    8
 12327 ;; This function calls:
 12328 ;;		_fputc
 12329 ;;		_fputs
 12330 ;;		_strlen
 12331 ;; This function is called by:
 12332 ;;		_dtoa
 12333 ;;		_utoa
 12334 ;;		_xtoa
 12335 ;; This function uses a non-reentrant model
 12336 ;;
 12337                           
 12338                           	psect	text37
 12339  002E5E                     __ptext37:
 12340                           	callstack 0
 12341  002E5E                     _pad:
 12342                           	callstack 18
 12343  002E5E                     
 12344                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12345  002E5E  A03D               	btfss	_flags^0,0,c
 12346  002E60  EF34  F017         	goto	u4781
 12347  002E64  EF36  F017         	goto	u4780
 12348  002E68                     u4781:
 12349  002E68  EF40  F017         	goto	l5198
 12350  002E6C                     u4780:
 12351  002E6C                     
 12352                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12353  002E6C  C028  F01F         	movff	pad@buf,fputs@s
 12354  002E70  C029  F020         	movff	pad@buf+1,fputs@s+1
 12355  002E74  C026  F021         	movff	pad@fp,fputs@fp
 12356  002E78  C027  F022         	movff	pad@fp+1,fputs@fp+1
 12357  002E7C  ECAA  F019         	call	_fputs	;wreg free
 12358  002E80                     l5198:
 12359                           
 12360                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12361  002E80  BE2B               	btfsc	(pad@p+1)^0,7,c
 12362  002E82  EF45  F017         	goto	u4791
 12363  002E86  EF47  F017         	goto	u4790
 12364  002E8A                     u4791:
 12365  002E8A  EF4D  F017         	goto	l5202
 12366  002E8E                     u4790:
 12367  002E8E  C02A  F02F         	movff	pad@p,pad@w
 12368  002E92  C02B  F030         	movff	pad@p+1,pad@w+1
 12369  002E96  EF51  F017         	goto	l1434
 12370  002E9A                     l5202:
 12371  002E9A  0E00               	movlw	0
 12372  002E9C  6E30               	movwf	(pad@w+1)^0,c
 12373  002E9E  0E00               	movlw	0
 12374  002EA0  6E2F               	movwf	pad@w^0,c
 12375  002EA2                     l1434:
 12376                           
 12377                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12378  002EA2  0E00               	movlw	0
 12379  002EA4  6E2E               	movwf	(pad@i+1)^0,c
 12380  002EA6  0E00               	movlw	0
 12381  002EA8  6E2D               	movwf	pad@i^0,c
 12382                           
 12383                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12384  002EAA  EF63  F017         	goto	l5208
 12385  002EAE                     l5204:
 12386                           
 12387                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12388  002EAE  0E00               	movlw	0
 12389  002EB0  6E17               	movwf	(fputc@c+1)^0,c
 12390  002EB2  0E20               	movlw	32
 12391  002EB4  6E16               	movwf	fputc@c^0,c
 12392  002EB6  C026  F018         	movff	pad@fp,fputc@fp
 12393  002EBA  C027  F019         	movff	pad@fp+1,fputc@fp+1
 12394  002EBE  EC33  F018         	call	_fputc	;wreg free
 12395  002EC2                     
 12396                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12397  002EC2  4A2D               	infsnz	pad@i^0,f,c
 12398  002EC4  2A2E               	incf	(pad@i+1)^0,f,c
 12399  002EC6                     l5208:
 12400                           
 12401                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12402  002EC6  502F               	movf	pad@w^0,w,c
 12403  002EC8  5C2D               	subwf	pad@i^0,w,c
 12404  002ECA  502E               	movf	(pad@i+1)^0,w,c
 12405  002ECC  0A80               	xorlw	128
 12406  002ECE  6E2C               	movwf	??_pad^0,c
 12407  002ED0  5030               	movf	(pad@w+1)^0,w,c
 12408  002ED2  0A80               	xorlw	128
 12409  002ED4  582C               	subwfb	??_pad^0,w,c
 12410  002ED6  A0D8               	btfss	status,0,c
 12411  002ED8  EF70  F017         	goto	u4801
 12412  002EDC  EF72  F017         	goto	u4800
 12413  002EE0                     u4801:
 12414  002EE0  EF57  F017         	goto	l5204
 12415  002EE4                     u4800:
 12416  002EE4                     
 12417                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12418  002EE4  B03D               	btfsc	_flags^0,0,c
 12419  002EE6  EF77  F017         	goto	u4811
 12420  002EEA  EF79  F017         	goto	u4810
 12421  002EEE                     u4811:
 12422  002EEE  EF83  F017         	goto	l5212
 12423  002EF2                     u4810:
 12424  002EF2                     
 12425                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12426  002EF2  C028  F01F         	movff	pad@buf,fputs@s
 12427  002EF6  C029  F020         	movff	pad@buf+1,fputs@s+1
 12428  002EFA  C026  F021         	movff	pad@fp,fputs@fp
 12429  002EFE  C027  F022         	movff	pad@fp+1,fputs@fp+1
 12430  002F02  ECAA  F019         	call	_fputs	;wreg free
 12431  002F06                     l5212:
 12432                           
 12433                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12434  002F06  C028  F014         	movff	pad@buf,strlen@s
 12435  002F0A  C029  F015         	movff	pad@buf+1,strlen@s+1
 12436  002F0E  ECB4  F01A         	call	_strlen	;wreg free
 12437  002F12  502F               	movf	pad@w^0,w,c
 12438  002F14  2414               	addwf	?_strlen^0,w,c
 12439  002F16  6E26               	movwf	?_pad^0,c
 12440  002F18  5030               	movf	(pad@w+1)^0,w,c
 12441  002F1A  2015               	addwfc	(?_strlen+1)^0,w,c
 12442  002F1C  6E27               	movwf	(?_pad+1)^0,c
 12443  002F1E  0012               	return		;funcret
 12444  002F20                     __end_of_pad:
 12445                           	callstack 0
 12446                           
 12447 ;; *************** function _strlen *****************
 12448 ;; Defined at:
 12449 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
 12450 ;; Parameters:    Size  Location     Type
 12451 ;;  s               2   19[COMRAM] PTR const unsigned char 
 12452 ;;		 -> dbuf(32), 
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;  a               2   21[COMRAM] PTR const unsigned char 
 12455 ;;		 -> dbuf(32), 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  2   19[COMRAM] unsigned int 
 12458 ;; Registers used:
 12459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12460 ;; Tracked objects:
 12461 ;;		On entry : 0/0
 12462 ;;		On exit  : 0/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12468 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12469 ;;Total ram usage:        4 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:    4
 12472 ;; This function calls:
 12473 ;;		Nothing
 12474 ;; This function is called by:
 12475 ;;		_pad
 12476 ;; This function uses a non-reentrant model
 12477 ;;
 12478                           
 12479                           	psect	text38
 12480  003568                     __ptext38:
 12481                           	callstack 0
 12482  003568                     _strlen:
 12483                           	callstack 21
 12484  003568  C014  F016         	movff	strlen@s,strlen@a
 12485  00356C  C015  F017         	movff	strlen@s+1,strlen@a+1
 12486  003570  EFBC  F01A         	goto	l5060
 12487  003574                     l5058:
 12488  003574  4A14               	infsnz	strlen@s^0,f,c
 12489  003576  2A15               	incf	(strlen@s+1)^0,f,c
 12490  003578                     l5060:
 12491  003578  C014  FFD9         	movff	strlen@s,fsr2l
 12492  00357C  C015  FFDA         	movff	strlen@s+1,fsr2h
 12493  003580  50DF               	movf	indf2,w,c
 12494  003582  A4D8               	btfss	status,2,c
 12495  003584  EFC6  F01A         	goto	u4551
 12496  003588  EFC8  F01A         	goto	u4550
 12497  00358C                     u4551:
 12498  00358C  EFBA  F01A         	goto	l5058
 12499  003590                     u4550:
 12500  003590  5016               	movf	strlen@a^0,w,c
 12501  003592  5C14               	subwf	strlen@s^0,w,c
 12502  003594  6E14               	movwf	?_strlen^0,c
 12503  003596  5017               	movf	(strlen@a+1)^0,w,c
 12504  003598  5815               	subwfb	(strlen@s+1)^0,w,c
 12505  00359A  6E15               	movwf	(?_strlen+1)^0,c
 12506  00359C  0012               	return		;funcret
 12507  00359E                     __end_of_strlen:
 12508                           	callstack 0
 12509                           
 12510 ;; *************** function _fputs *****************
 12511 ;; Defined at:
 12512 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputs.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;  s               2   30[COMRAM] PTR const unsigned char 
 12515 ;;		 -> dbuf(32), 
 12516 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
 12517 ;;		 -> NULL(0), 
 12518 ;; Auto vars:     Size  Location     Type
 12519 ;;  i               2   35[COMRAM] int 
 12520 ;;  c               1   34[COMRAM] unsigned char 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  2   30[COMRAM] int 
 12523 ;; Registers used:
 12524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12531 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12534 ;;Total ram usage:        7 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    7
 12537 ;; This function calls:
 12538 ;;		_fputc
 12539 ;; This function is called by:
 12540 ;;		_pad
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           	psect	text39
 12545  003354                     __ptext39:
 12546                           	callstack 0
 12547  003354                     _fputs:
 12548                           	callstack 18
 12549  003354  0E00               	movlw	0
 12550  003356  6E25               	movwf	(fputs@i+1)^0,c
 12551  003358  0E00               	movlw	0
 12552  00335A  6E24               	movwf	fputs@i^0,c
 12553  00335C  EFBB  F019         	goto	l5054
 12554  003360                     l5050:
 12555  003360  C023  F016         	movff	fputs@c,fputc@c
 12556  003364  6A17               	clrf	(fputc@c+1)^0,c
 12557  003366  C021  F018         	movff	fputs@fp,fputc@fp
 12558  00336A  C022  F019         	movff	fputs@fp+1,fputc@fp+1
 12559  00336E  EC33  F018         	call	_fputc	;wreg free
 12560  003372  4A24               	infsnz	fputs@i^0,f,c
 12561  003374  2A25               	incf	(fputs@i+1)^0,f,c
 12562  003376                     l5054:
 12563  003376  5024               	movf	fputs@i^0,w,c
 12564  003378  241F               	addwf	fputs@s^0,w,c
 12565  00337A  6ED9               	movwf	fsr2l,c
 12566  00337C  5025               	movf	(fputs@i+1)^0,w,c
 12567  00337E  2020               	addwfc	(fputs@s+1)^0,w,c
 12568  003380  6EDA               	movwf	fsr2h,c
 12569  003382  50DF               	movf	indf2,w,c
 12570  003384  6E23               	movwf	fputs@c^0,c
 12571  003386  5023               	movf	fputs@c^0,w,c
 12572  003388  A4D8               	btfss	status,2,c
 12573  00338A  EFC9  F019         	goto	u4541
 12574  00338E  EFCB  F019         	goto	u4540
 12575  003392                     u4541:
 12576  003392  EFB0  F019         	goto	l5050
 12577  003396                     u4540:
 12578  003396  0012               	return		;funcret
 12579  003398                     __end_of_fputs:
 12580                           	callstack 0
 12581                           
 12582 ;; *************** function _abs *****************
 12583 ;; Defined at:
 12584 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\abs.c"
 12585 ;; Parameters:    Size  Location     Type
 12586 ;;  a               2   37[COMRAM] int 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;		None
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  2   37[COMRAM] int 
 12591 ;; Registers used:
 12592 ;;		wreg, status,2, status,0
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12602 ;;Total ram usage:        4 bytes
 12603 ;; Hardware stack levels used:    1
 12604 ;; Hardware stack levels required when called:    4
 12605 ;; This function calls:
 12606 ;;		Nothing
 12607 ;; This function is called by:
 12608 ;;		_dtoa
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text40
 12613  003398                     __ptext40:
 12614                           	callstack 0
 12615  003398                     _abs:
 12616                           	callstack 22
 12617  003398  BE27               	btfsc	(abs@a+1)^0,7,c
 12618  00339A  EFD9  F019         	goto	u4820
 12619  00339E  5027               	movf	(abs@a+1)^0,w,c
 12620  0033A0  E106               	bnz	u4821
 12621  0033A2  0426               	decf	abs@a^0,w,c
 12622  0033A4  B0D8               	btfsc	status,0,c
 12623  0033A6  EFD7  F019         	goto	u4821
 12624  0033AA  EFD9  F019         	goto	u4820
 12625  0033AE                     u4821:
 12626  0033AE  EFE7  F019         	goto	l1571
 12627  0033B2                     u4820:
 12628  0033B2  C026  F028         	movff	abs@a,??_abs
 12629  0033B6  C027  F029         	movff	abs@a+1,??_abs+1
 12630  0033BA  1E28               	comf	??_abs^0,f,c
 12631  0033BC  1E29               	comf	(??_abs+1)^0,f,c
 12632  0033BE  4A28               	infsnz	??_abs^0,f,c
 12633  0033C0  2A29               	incf	(??_abs+1)^0,f,c
 12634  0033C2  C028  F026         	movff	??_abs,?_abs
 12635  0033C6  C029  F027         	movff	??_abs+1,?_abs+1
 12636  0033CA  EFEB  F019         	goto	l1574
 12637  0033CE                     l1571:
 12638  0033CE  C026  F026         	movff	abs@a,?_abs
 12639  0033D2  C027  F027         	movff	abs@a+1,?_abs+1
 12640  0033D6                     l1574:
 12641  0033D6  0012               	return		;funcret
 12642  0033D8                     __end_of_abs:
 12643                           	callstack 0
 12644                           
 12645 ;; *************** function ___aomod *****************
 12646 ;; Defined at:
 12647 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aomod.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  dividend        8   19[COMRAM] long long 
 12650 ;;  divisor         8   27[COMRAM] long long 
 12651 ;; Auto vars:     Size  Location     Type
 12652 ;;  sign            1   36[COMRAM] unsigned char 
 12653 ;;  counter         1   35[COMRAM] unsigned char 
 12654 ;; Return value:  Size  Location     Type
 12655 ;;                  8   19[COMRAM] long long 
 12656 ;; Registers used:
 12657 ;;		wreg, status,2, status,0
 12658 ;; Tracked objects:
 12659 ;;		On entry : 0/0
 12660 ;;		On exit  : 0/0
 12661 ;;		Unchanged: 0/0
 12662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12663 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12666 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12667 ;;Total ram usage:       18 bytes
 12668 ;; Hardware stack levels used:    1
 12669 ;; Hardware stack levels required when called:    4
 12670 ;; This function calls:
 12671 ;;		Nothing
 12672 ;; This function is called by:
 12673 ;;		_dtoa
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           	psect	text41
 12678  002A66                     __ptext41:
 12679                           	callstack 0
 12680  002A66                     ___aomod:
 12681                           	callstack 22
 12682  002A66  0E00               	movlw	0
 12683  002A68  6E25               	movwf	___aomod@sign^0,c
 12684  002A6A  BE1B               	btfsc	(___aomod@dividend+7)^0,7,c
 12685  002A6C  EF3C  F015         	goto	u4650
 12686  002A70  EF3A  F015         	goto	u4651
 12687  002A74                     u4651:
 12688  002A74  EF4E  F015         	goto	l5128
 12689  002A78                     u4650:
 12690  002A78  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 12691  002A7A  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 12692  002A7C  1E19               	comf	(___aomod@dividend+5)^0,f,c
 12693  002A7E  1E18               	comf	(___aomod@dividend+4)^0,f,c
 12694  002A80  1E17               	comf	(___aomod@dividend+3)^0,f,c
 12695  002A82  1E16               	comf	(___aomod@dividend+2)^0,f,c
 12696  002A84  1E15               	comf	(___aomod@dividend+1)^0,f,c
 12697  002A86  6C14               	negf	___aomod@dividend^0,c
 12698  002A88  0E00               	movlw	0
 12699  002A8A  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 12700  002A8C  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 12701  002A8E  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 12702  002A90  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 12703  002A92  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 12704  002A94  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 12705  002A96  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 12706  002A98  0E01               	movlw	1
 12707  002A9A  6E25               	movwf	___aomod@sign^0,c
 12708  002A9C                     l5128:
 12709  002A9C  BE23               	btfsc	(___aomod@divisor+7)^0,7,c
 12710  002A9E  EF55  F015         	goto	u4660
 12711  002AA2  EF53  F015         	goto	u4661
 12712  002AA6                     u4661:
 12713  002AA6  EF65  F015         	goto	l5132
 12714  002AAA                     u4660:
 12715  002AAA  1E23               	comf	(___aomod@divisor+7)^0,f,c
 12716  002AAC  1E22               	comf	(___aomod@divisor+6)^0,f,c
 12717  002AAE  1E21               	comf	(___aomod@divisor+5)^0,f,c
 12718  002AB0  1E20               	comf	(___aomod@divisor+4)^0,f,c
 12719  002AB2  1E1F               	comf	(___aomod@divisor+3)^0,f,c
 12720  002AB4  1E1E               	comf	(___aomod@divisor+2)^0,f,c
 12721  002AB6  1E1D               	comf	(___aomod@divisor+1)^0,f,c
 12722  002AB8  6C1C               	negf	___aomod@divisor^0,c
 12723  002ABA  0E00               	movlw	0
 12724  002ABC  221D               	addwfc	(___aomod@divisor+1)^0,f,c
 12725  002ABE  221E               	addwfc	(___aomod@divisor+2)^0,f,c
 12726  002AC0  221F               	addwfc	(___aomod@divisor+3)^0,f,c
 12727  002AC2  2220               	addwfc	(___aomod@divisor+4)^0,f,c
 12728  002AC4  2221               	addwfc	(___aomod@divisor+5)^0,f,c
 12729  002AC6  2222               	addwfc	(___aomod@divisor+6)^0,f,c
 12730  002AC8  2223               	addwfc	(___aomod@divisor+7)^0,f,c
 12731  002ACA                     l5132:
 12732  002ACA  501C               	movf	___aomod@divisor^0,w,c
 12733  002ACC  101D               	iorwf	(___aomod@divisor+1)^0,w,c
 12734  002ACE  101E               	iorwf	(___aomod@divisor+2)^0,w,c
 12735  002AD0  101F               	iorwf	(___aomod@divisor+3)^0,w,c
 12736  002AD2  1020               	iorwf	(___aomod@divisor+4)^0,w,c
 12737  002AD4  1021               	iorwf	(___aomod@divisor+5)^0,w,c
 12738  002AD6  1022               	iorwf	(___aomod@divisor+6)^0,w,c
 12739  002AD8  1023               	iorwf	(___aomod@divisor+7)^0,w,c
 12740  002ADA  B4D8               	btfsc	status,2,c
 12741  002ADC  EF72  F015         	goto	u4671
 12742  002AE0  EF74  F015         	goto	u4670
 12743  002AE4                     u4671:
 12744  002AE4  EFBC  F015         	goto	l5148
 12745  002AE8                     u4670:
 12746  002AE8  0E01               	movlw	1
 12747  002AEA  6E24               	movwf	___aomod@counter^0,c
 12748  002AEC  EF82  F015         	goto	l5138
 12749  002AF0                     l5136:
 12750  002AF0  90D8               	bcf	status,0,c
 12751  002AF2  361C               	rlcf	___aomod@divisor^0,f,c
 12752  002AF4  361D               	rlcf	(___aomod@divisor+1)^0,f,c
 12753  002AF6  361E               	rlcf	(___aomod@divisor+2)^0,f,c
 12754  002AF8  361F               	rlcf	(___aomod@divisor+3)^0,f,c
 12755  002AFA  3620               	rlcf	(___aomod@divisor+4)^0,f,c
 12756  002AFC  3621               	rlcf	(___aomod@divisor+5)^0,f,c
 12757  002AFE  3622               	rlcf	(___aomod@divisor+6)^0,f,c
 12758  002B00  3623               	rlcf	(___aomod@divisor+7)^0,f,c
 12759  002B02  2A24               	incf	___aomod@counter^0,f,c
 12760  002B04                     l5138:
 12761  002B04  AE23               	btfss	(___aomod@divisor+7)^0,7,c
 12762  002B06  EF87  F015         	goto	u4681
 12763  002B0A  EF89  F015         	goto	u4680
 12764  002B0E                     u4681:
 12765  002B0E  EF78  F015         	goto	l5136
 12766  002B12                     u4680:
 12767  002B12                     l5140:
 12768  002B12  501C               	movf	___aomod@divisor^0,w,c
 12769  002B14  5C14               	subwf	___aomod@dividend^0,w,c
 12770  002B16  501D               	movf	(___aomod@divisor+1)^0,w,c
 12771  002B18  5815               	subwfb	(___aomod@dividend+1)^0,w,c
 12772  002B1A  501E               	movf	(___aomod@divisor+2)^0,w,c
 12773  002B1C  5816               	subwfb	(___aomod@dividend+2)^0,w,c
 12774  002B1E  501F               	movf	(___aomod@divisor+3)^0,w,c
 12775  002B20  5817               	subwfb	(___aomod@dividend+3)^0,w,c
 12776  002B22  5020               	movf	(___aomod@divisor+4)^0,w,c
 12777  002B24  5818               	subwfb	(___aomod@dividend+4)^0,w,c
 12778  002B26  5021               	movf	(___aomod@divisor+5)^0,w,c
 12779  002B28  5819               	subwfb	(___aomod@dividend+5)^0,w,c
 12780  002B2A  5022               	movf	(___aomod@divisor+6)^0,w,c
 12781  002B2C  581A               	subwfb	(___aomod@dividend+6)^0,w,c
 12782  002B2E  5023               	movf	(___aomod@divisor+7)^0,w,c
 12783  002B30  581B               	subwfb	(___aomod@dividend+7)^0,w,c
 12784  002B32  A0D8               	btfss	status,0,c
 12785  002B34  EF9E  F015         	goto	u4691
 12786  002B38  EFA0  F015         	goto	u4690
 12787  002B3C                     u4691:
 12788  002B3C  EFB0  F015         	goto	l5144
 12789  002B40                     u4690:
 12790  002B40  501C               	movf	___aomod@divisor^0,w,c
 12791  002B42  5E14               	subwf	___aomod@dividend^0,f,c
 12792  002B44  501D               	movf	(___aomod@divisor+1)^0,w,c
 12793  002B46  5A15               	subwfb	(___aomod@dividend+1)^0,f,c
 12794  002B48  501E               	movf	(___aomod@divisor+2)^0,w,c
 12795  002B4A  5A16               	subwfb	(___aomod@dividend+2)^0,f,c
 12796  002B4C  501F               	movf	(___aomod@divisor+3)^0,w,c
 12797  002B4E  5A17               	subwfb	(___aomod@dividend+3)^0,f,c
 12798  002B50  5020               	movf	(___aomod@divisor+4)^0,w,c
 12799  002B52  5A18               	subwfb	(___aomod@dividend+4)^0,f,c
 12800  002B54  5021               	movf	(___aomod@divisor+5)^0,w,c
 12801  002B56  5A19               	subwfb	(___aomod@dividend+5)^0,f,c
 12802  002B58  5022               	movf	(___aomod@divisor+6)^0,w,c
 12803  002B5A  5A1A               	subwfb	(___aomod@dividend+6)^0,f,c
 12804  002B5C  5023               	movf	(___aomod@divisor+7)^0,w,c
 12805  002B5E  5A1B               	subwfb	(___aomod@dividend+7)^0,f,c
 12806  002B60                     l5144:
 12807  002B60  90D8               	bcf	status,0,c
 12808  002B62  3223               	rrcf	(___aomod@divisor+7)^0,f,c
 12809  002B64  3222               	rrcf	(___aomod@divisor+6)^0,f,c
 12810  002B66  3221               	rrcf	(___aomod@divisor+5)^0,f,c
 12811  002B68  3220               	rrcf	(___aomod@divisor+4)^0,f,c
 12812  002B6A  321F               	rrcf	(___aomod@divisor+3)^0,f,c
 12813  002B6C  321E               	rrcf	(___aomod@divisor+2)^0,f,c
 12814  002B6E  321D               	rrcf	(___aomod@divisor+1)^0,f,c
 12815  002B70  321C               	rrcf	___aomod@divisor^0,f,c
 12816  002B72  2E24               	decfsz	___aomod@counter^0,f,c
 12817  002B74  EF89  F015         	goto	l5140
 12818  002B78                     l5148:
 12819  002B78  5025               	movf	___aomod@sign^0,w,c
 12820  002B7A  B4D8               	btfsc	status,2,c
 12821  002B7C  EFC2  F015         	goto	u4701
 12822  002B80  EFC4  F015         	goto	u4700
 12823  002B84                     u4701:
 12824  002B84  EFD4  F015         	goto	l5152
 12825  002B88                     u4700:
 12826  002B88  1E1B               	comf	(___aomod@dividend+7)^0,f,c
 12827  002B8A  1E1A               	comf	(___aomod@dividend+6)^0,f,c
 12828  002B8C  1E19               	comf	(___aomod@dividend+5)^0,f,c
 12829  002B8E  1E18               	comf	(___aomod@dividend+4)^0,f,c
 12830  002B90  1E17               	comf	(___aomod@dividend+3)^0,f,c
 12831  002B92  1E16               	comf	(___aomod@dividend+2)^0,f,c
 12832  002B94  1E15               	comf	(___aomod@dividend+1)^0,f,c
 12833  002B96  6C14               	negf	___aomod@dividend^0,c
 12834  002B98  0E00               	movlw	0
 12835  002B9A  2215               	addwfc	(___aomod@dividend+1)^0,f,c
 12836  002B9C  2216               	addwfc	(___aomod@dividend+2)^0,f,c
 12837  002B9E  2217               	addwfc	(___aomod@dividend+3)^0,f,c
 12838  002BA0  2218               	addwfc	(___aomod@dividend+4)^0,f,c
 12839  002BA2  2219               	addwfc	(___aomod@dividend+5)^0,f,c
 12840  002BA4  221A               	addwfc	(___aomod@dividend+6)^0,f,c
 12841  002BA6  221B               	addwfc	(___aomod@dividend+7)^0,f,c
 12842  002BA8                     l5152:
 12843  002BA8  C014  F014         	movff	___aomod@dividend,?___aomod
 12844  002BAC  C015  F015         	movff	___aomod@dividend+1,?___aomod+1
 12845  002BB0  C016  F016         	movff	___aomod@dividend+2,?___aomod+2
 12846  002BB4  C017  F017         	movff	___aomod@dividend+3,?___aomod+3
 12847  002BB8  C018  F018         	movff	___aomod@dividend+4,?___aomod+4
 12848  002BBC  C019  F019         	movff	___aomod@dividend+5,?___aomod+5
 12849  002BC0  C01A  F01A         	movff	___aomod@dividend+6,?___aomod+6
 12850  002BC4  C01B  F01B         	movff	___aomod@dividend+7,?___aomod+7
 12851  002BC8  0012               	return		;funcret
 12852  002BCA                     __end_of___aomod:
 12853                           	callstack 0
 12854                           
 12855 ;; *************** function ___aodiv *****************
 12856 ;; Defined at:
 12857 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aodiv.c"
 12858 ;; Parameters:    Size  Location     Type
 12859 ;;  dividend        8   19[COMRAM] long long 
 12860 ;;  divisor         8   27[COMRAM] long long 
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;  quotient        8   37[COMRAM] long long 
 12863 ;;  sign            1   36[COMRAM] unsigned char 
 12864 ;;  counter         1   35[COMRAM] unsigned char 
 12865 ;; Return value:  Size  Location     Type
 12866 ;;                  8   19[COMRAM] long long 
 12867 ;; Registers used:
 12868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12869 ;; Tracked objects:
 12870 ;;		On entry : 0/0
 12871 ;;		On exit  : 0/0
 12872 ;;		Unchanged: 0/0
 12873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12874 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12875 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12877 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12878 ;;Total ram usage:       26 bytes
 12879 ;; Hardware stack levels used:    1
 12880 ;; Hardware stack levels required when called:    4
 12881 ;; This function calls:
 12882 ;;		Nothing
 12883 ;; This function is called by:
 12884 ;;		_dtoa
 12885 ;; This function uses a non-reentrant model
 12886 ;;
 12887                           
 12888                           	psect	text42
 12889  002766                     __ptext42:
 12890                           	callstack 0
 12891  002766                     ___aodiv:
 12892                           	callstack 22
 12893  002766  0E00               	movlw	0
 12894  002768  6E25               	movwf	___aodiv@sign^0,c
 12895  00276A  BE23               	btfsc	(___aodiv@divisor+7)^0,7,c
 12896  00276C  EFBC  F013         	goto	u4580
 12897  002770  EFBA  F013         	goto	u4581
 12898  002774                     u4581:
 12899  002774  EFCE  F013         	goto	l5084
 12900  002778                     u4580:
 12901  002778  1E23               	comf	(___aodiv@divisor+7)^0,f,c
 12902  00277A  1E22               	comf	(___aodiv@divisor+6)^0,f,c
 12903  00277C  1E21               	comf	(___aodiv@divisor+5)^0,f,c
 12904  00277E  1E20               	comf	(___aodiv@divisor+4)^0,f,c
 12905  002780  1E1F               	comf	(___aodiv@divisor+3)^0,f,c
 12906  002782  1E1E               	comf	(___aodiv@divisor+2)^0,f,c
 12907  002784  1E1D               	comf	(___aodiv@divisor+1)^0,f,c
 12908  002786  6C1C               	negf	___aodiv@divisor^0,c
 12909  002788  0E00               	movlw	0
 12910  00278A  221D               	addwfc	(___aodiv@divisor+1)^0,f,c
 12911  00278C  221E               	addwfc	(___aodiv@divisor+2)^0,f,c
 12912  00278E  221F               	addwfc	(___aodiv@divisor+3)^0,f,c
 12913  002790  2220               	addwfc	(___aodiv@divisor+4)^0,f,c
 12914  002792  2221               	addwfc	(___aodiv@divisor+5)^0,f,c
 12915  002794  2222               	addwfc	(___aodiv@divisor+6)^0,f,c
 12916  002796  2223               	addwfc	(___aodiv@divisor+7)^0,f,c
 12917  002798  0E01               	movlw	1
 12918  00279A  6E25               	movwf	___aodiv@sign^0,c
 12919  00279C                     l5084:
 12920  00279C  BE1B               	btfsc	(___aodiv@dividend+7)^0,7,c
 12921  00279E  EFD5  F013         	goto	u4590
 12922  0027A2  EFD3  F013         	goto	u4591
 12923  0027A6                     u4591:
 12924  0027A6  EFE7  F013         	goto	l5090
 12925  0027AA                     u4590:
 12926  0027AA  1E1B               	comf	(___aodiv@dividend+7)^0,f,c
 12927  0027AC  1E1A               	comf	(___aodiv@dividend+6)^0,f,c
 12928  0027AE  1E19               	comf	(___aodiv@dividend+5)^0,f,c
 12929  0027B0  1E18               	comf	(___aodiv@dividend+4)^0,f,c
 12930  0027B2  1E17               	comf	(___aodiv@dividend+3)^0,f,c
 12931  0027B4  1E16               	comf	(___aodiv@dividend+2)^0,f,c
 12932  0027B6  1E15               	comf	(___aodiv@dividend+1)^0,f,c
 12933  0027B8  6C14               	negf	___aodiv@dividend^0,c
 12934  0027BA  0E00               	movlw	0
 12935  0027BC  2215               	addwfc	(___aodiv@dividend+1)^0,f,c
 12936  0027BE  2216               	addwfc	(___aodiv@dividend+2)^0,f,c
 12937  0027C0  2217               	addwfc	(___aodiv@dividend+3)^0,f,c
 12938  0027C2  2218               	addwfc	(___aodiv@dividend+4)^0,f,c
 12939  0027C4  2219               	addwfc	(___aodiv@dividend+5)^0,f,c
 12940  0027C6  221A               	addwfc	(___aodiv@dividend+6)^0,f,c
 12941  0027C8  221B               	addwfc	(___aodiv@dividend+7)^0,f,c
 12942  0027CA  0E01               	movlw	1
 12943  0027CC  1A25               	xorwf	___aodiv@sign^0,f,c
 12944  0027CE                     l5090:
 12945  0027CE  EE20  F026         	lfsr	2,___aodiv@quotient
 12946  0027D2  0E07               	movlw	7
 12947  0027D4                     u4601:
 12948  0027D4  6ADE               	clrf	postinc2,c
 12949  0027D6  06E8               	decf	wreg,f,c
 12950  0027D8  E2FD               	bc	u4601
 12951  0027DA  501C               	movf	___aodiv@divisor^0,w,c
 12952  0027DC  101D               	iorwf	(___aodiv@divisor+1)^0,w,c
 12953  0027DE  101E               	iorwf	(___aodiv@divisor+2)^0,w,c
 12954  0027E0  101F               	iorwf	(___aodiv@divisor+3)^0,w,c
 12955  0027E2  1020               	iorwf	(___aodiv@divisor+4)^0,w,c
 12956  0027E4  1021               	iorwf	(___aodiv@divisor+5)^0,w,c
 12957  0027E6  1022               	iorwf	(___aodiv@divisor+6)^0,w,c
 12958  0027E8  1023               	iorwf	(___aodiv@divisor+7)^0,w,c
 12959  0027EA  B4D8               	btfsc	status,2,c
 12960  0027EC  EFFA  F013         	goto	u4611
 12961  0027F0  EFFC  F013         	goto	u4610
 12962  0027F4                     u4611:
 12963  0027F4  EF4E  F014         	goto	l5112
 12964  0027F8                     u4610:
 12965  0027F8  0E01               	movlw	1
 12966  0027FA  6E24               	movwf	___aodiv@counter^0,c
 12967  0027FC  EF0A  F014         	goto	l5098
 12968  002800                     l5096:
 12969  002800  90D8               	bcf	status,0,c
 12970  002802  361C               	rlcf	___aodiv@divisor^0,f,c
 12971  002804  361D               	rlcf	(___aodiv@divisor+1)^0,f,c
 12972  002806  361E               	rlcf	(___aodiv@divisor+2)^0,f,c
 12973  002808  361F               	rlcf	(___aodiv@divisor+3)^0,f,c
 12974  00280A  3620               	rlcf	(___aodiv@divisor+4)^0,f,c
 12975  00280C  3621               	rlcf	(___aodiv@divisor+5)^0,f,c
 12976  00280E  3622               	rlcf	(___aodiv@divisor+6)^0,f,c
 12977  002810  3623               	rlcf	(___aodiv@divisor+7)^0,f,c
 12978  002812  2A24               	incf	___aodiv@counter^0,f,c
 12979  002814                     l5098:
 12980  002814  AE23               	btfss	(___aodiv@divisor+7)^0,7,c
 12981  002816  EF0F  F014         	goto	u4621
 12982  00281A  EF11  F014         	goto	u4620
 12983  00281E                     u4621:
 12984  00281E  EF00  F014         	goto	l5096
 12985  002822                     u4620:
 12986  002822                     l5100:
 12987  002822  90D8               	bcf	status,0,c
 12988  002824  3626               	rlcf	___aodiv@quotient^0,f,c
 12989  002826  3627               	rlcf	(___aodiv@quotient+1)^0,f,c
 12990  002828  3628               	rlcf	(___aodiv@quotient+2)^0,f,c
 12991  00282A  3629               	rlcf	(___aodiv@quotient+3)^0,f,c
 12992  00282C  362A               	rlcf	(___aodiv@quotient+4)^0,f,c
 12993  00282E  362B               	rlcf	(___aodiv@quotient+5)^0,f,c
 12994  002830  362C               	rlcf	(___aodiv@quotient+6)^0,f,c
 12995  002832  362D               	rlcf	(___aodiv@quotient+7)^0,f,c
 12996  002834  501C               	movf	___aodiv@divisor^0,w,c
 12997  002836  5C14               	subwf	___aodiv@dividend^0,w,c
 12998  002838  501D               	movf	(___aodiv@divisor+1)^0,w,c
 12999  00283A  5815               	subwfb	(___aodiv@dividend+1)^0,w,c
 13000  00283C  501E               	movf	(___aodiv@divisor+2)^0,w,c
 13001  00283E  5816               	subwfb	(___aodiv@dividend+2)^0,w,c
 13002  002840  501F               	movf	(___aodiv@divisor+3)^0,w,c
 13003  002842  5817               	subwfb	(___aodiv@dividend+3)^0,w,c
 13004  002844  5020               	movf	(___aodiv@divisor+4)^0,w,c
 13005  002846  5818               	subwfb	(___aodiv@dividend+4)^0,w,c
 13006  002848  5021               	movf	(___aodiv@divisor+5)^0,w,c
 13007  00284A  5819               	subwfb	(___aodiv@dividend+5)^0,w,c
 13008  00284C  5022               	movf	(___aodiv@divisor+6)^0,w,c
 13009  00284E  581A               	subwfb	(___aodiv@dividend+6)^0,w,c
 13010  002850  5023               	movf	(___aodiv@divisor+7)^0,w,c
 13011  002852  581B               	subwfb	(___aodiv@dividend+7)^0,w,c
 13012  002854  A0D8               	btfss	status,0,c
 13013  002856  EF2F  F014         	goto	u4631
 13014  00285A  EF31  F014         	goto	u4630
 13015  00285E                     u4631:
 13016  00285E  EF42  F014         	goto	l5108
 13017  002862                     u4630:
 13018  002862  501C               	movf	___aodiv@divisor^0,w,c
 13019  002864  5E14               	subwf	___aodiv@dividend^0,f,c
 13020  002866  501D               	movf	(___aodiv@divisor+1)^0,w,c
 13021  002868  5A15               	subwfb	(___aodiv@dividend+1)^0,f,c
 13022  00286A  501E               	movf	(___aodiv@divisor+2)^0,w,c
 13023  00286C  5A16               	subwfb	(___aodiv@dividend+2)^0,f,c
 13024  00286E  501F               	movf	(___aodiv@divisor+3)^0,w,c
 13025  002870  5A17               	subwfb	(___aodiv@dividend+3)^0,f,c
 13026  002872  5020               	movf	(___aodiv@divisor+4)^0,w,c
 13027  002874  5A18               	subwfb	(___aodiv@dividend+4)^0,f,c
 13028  002876  5021               	movf	(___aodiv@divisor+5)^0,w,c
 13029  002878  5A19               	subwfb	(___aodiv@dividend+5)^0,f,c
 13030  00287A  5022               	movf	(___aodiv@divisor+6)^0,w,c
 13031  00287C  5A1A               	subwfb	(___aodiv@dividend+6)^0,f,c
 13032  00287E  5023               	movf	(___aodiv@divisor+7)^0,w,c
 13033  002880  5A1B               	subwfb	(___aodiv@dividend+7)^0,f,c
 13034  002882  8026               	bsf	___aodiv@quotient^0,0,c
 13035  002884                     l5108:
 13036  002884  90D8               	bcf	status,0,c
 13037  002886  3223               	rrcf	(___aodiv@divisor+7)^0,f,c
 13038  002888  3222               	rrcf	(___aodiv@divisor+6)^0,f,c
 13039  00288A  3221               	rrcf	(___aodiv@divisor+5)^0,f,c
 13040  00288C  3220               	rrcf	(___aodiv@divisor+4)^0,f,c
 13041  00288E  321F               	rrcf	(___aodiv@divisor+3)^0,f,c
 13042  002890  321E               	rrcf	(___aodiv@divisor+2)^0,f,c
 13043  002892  321D               	rrcf	(___aodiv@divisor+1)^0,f,c
 13044  002894  321C               	rrcf	___aodiv@divisor^0,f,c
 13045  002896  2E24               	decfsz	___aodiv@counter^0,f,c
 13046  002898  EF11  F014         	goto	l5100
 13047  00289C                     l5112:
 13048  00289C  5025               	movf	___aodiv@sign^0,w,c
 13049  00289E  B4D8               	btfsc	status,2,c
 13050  0028A0  EF54  F014         	goto	u4641
 13051  0028A4  EF56  F014         	goto	u4640
 13052  0028A8                     u4641:
 13053  0028A8  EF66  F014         	goto	l5116
 13054  0028AC                     u4640:
 13055  0028AC  1E2D               	comf	(___aodiv@quotient+7)^0,f,c
 13056  0028AE  1E2C               	comf	(___aodiv@quotient+6)^0,f,c
 13057  0028B0  1E2B               	comf	(___aodiv@quotient+5)^0,f,c
 13058  0028B2  1E2A               	comf	(___aodiv@quotient+4)^0,f,c
 13059  0028B4  1E29               	comf	(___aodiv@quotient+3)^0,f,c
 13060  0028B6  1E28               	comf	(___aodiv@quotient+2)^0,f,c
 13061  0028B8  1E27               	comf	(___aodiv@quotient+1)^0,f,c
 13062  0028BA  6C26               	negf	___aodiv@quotient^0,c
 13063  0028BC  0E00               	movlw	0
 13064  0028BE  2227               	addwfc	(___aodiv@quotient+1)^0,f,c
 13065  0028C0  2228               	addwfc	(___aodiv@quotient+2)^0,f,c
 13066  0028C2  2229               	addwfc	(___aodiv@quotient+3)^0,f,c
 13067  0028C4  222A               	addwfc	(___aodiv@quotient+4)^0,f,c
 13068  0028C6  222B               	addwfc	(___aodiv@quotient+5)^0,f,c
 13069  0028C8  222C               	addwfc	(___aodiv@quotient+6)^0,f,c
 13070  0028CA  222D               	addwfc	(___aodiv@quotient+7)^0,f,c
 13071  0028CC                     l5116:
 13072  0028CC  C026  F014         	movff	___aodiv@quotient,?___aodiv
 13073  0028D0  C027  F015         	movff	___aodiv@quotient+1,?___aodiv+1
 13074  0028D4  C028  F016         	movff	___aodiv@quotient+2,?___aodiv+2
 13075  0028D8  C029  F017         	movff	___aodiv@quotient+3,?___aodiv+3
 13076  0028DC  C02A  F018         	movff	___aodiv@quotient+4,?___aodiv+4
 13077  0028E0  C02B  F019         	movff	___aodiv@quotient+5,?___aodiv+5
 13078  0028E4  C02C  F01A         	movff	___aodiv@quotient+6,?___aodiv+6
 13079  0028E8  C02D  F01B         	movff	___aodiv@quotient+7,?___aodiv+7
 13080  0028EC  0012               	return		;funcret
 13081  0028EE                     __end_of___aodiv:
 13082                           	callstack 0
 13083                           
 13084 ;; *************** function _ctoa *****************
 13085 ;; Defined at:
 13086 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c"
 13087 ;; Parameters:    Size  Location     Type
 13088 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
 13089 ;;		 -> NULL(0), 
 13090 ;;  c               1   32[COMRAM] unsigned char 
 13091 ;; Auto vars:     Size  Location     Type
 13092 ;;  w               2   36[COMRAM] int 
 13093 ;;  l               2   34[COMRAM] int 
 13094 ;; Return value:  Size  Location     Type
 13095 ;;                  2   30[COMRAM] int 
 13096 ;; Registers used:
 13097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13098 ;; Tracked objects:
 13099 ;;		On entry : 0/0
 13100 ;;		On exit  : 0/0
 13101 ;;		Unchanged: 0/0
 13102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13103 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13104 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13105 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13106 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13107 ;;Total ram usage:        8 bytes
 13108 ;; Hardware stack levels used:    1
 13109 ;; Hardware stack levels required when called:    7
 13110 ;; This function calls:
 13111 ;;		_fputc
 13112 ;; This function is called by:
 13113 ;;		_vfpfcnvrt
 13114 ;; This function uses a non-reentrant model
 13115 ;;
 13116                           
 13117                           	psect	text43
 13118  002CBA                     __ptext43:
 13119                           	callstack 0
 13120  002CBA                     _ctoa:
 13121                           	callstack 20
 13122  002CBA                     
 13123                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 13124  002CBA  5039               	movf	_width^0,w,c
 13125  002CBC  103A               	iorwf	(_width+1)^0,w,c
 13126  002CBE  A4D8               	btfss	status,2,c
 13127  002CC0  EF64  F016         	goto	u4941
 13128  002CC4  EF66  F016         	goto	u4940
 13129  002CC8                     u4941:
 13130  002CC8  EF6C  F016         	goto	l5258
 13131  002CCC                     u4940:
 13132  002CCC  C039  F025         	movff	_width,ctoa@w
 13133  002CD0  C03A  F026         	movff	_width+1,ctoa@w+1
 13134  002CD4  EF72  F016         	goto	l5260
 13135  002CD8                     l5258:
 13136  002CD8  0EFF               	movlw	255
 13137  002CDA  2439               	addwf	_width^0,w,c
 13138  002CDC  6E25               	movwf	ctoa@w^0,c
 13139  002CDE  0EFF               	movlw	255
 13140  002CE0  203A               	addwfc	(_width+1)^0,w,c
 13141  002CE2  6E26               	movwf	(ctoa@w+1)^0,c
 13142  002CE4                     l5260:
 13143                           
 13144                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 13145  002CE4  A03D               	btfss	_flags^0,0,c
 13146  002CE6  EF77  F016         	goto	u4951
 13147  002CEA  EF79  F016         	goto	u4950
 13148  002CEE                     u4951:
 13149  002CEE  EF82  F016         	goto	l5264
 13150  002CF2                     u4950:
 13151  002CF2                     
 13152                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 13153  002CF2  C021  F016         	movff	ctoa@c,fputc@c
 13154  002CF6  6A17               	clrf	(fputc@c+1)^0,c
 13155  002CF8  C01F  F018         	movff	ctoa@fp,fputc@fp
 13156  002CFC  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
 13157  002D00  EC33  F018         	call	_fputc	;wreg free
 13158  002D04                     l5264:
 13159                           
 13160                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 13161  002D04  BE26               	btfsc	(ctoa@w+1)^0,7,c
 13162  002D06  EF87  F016         	goto	u4961
 13163  002D0A  EF89  F016         	goto	u4960
 13164  002D0E                     u4961:
 13165  002D0E  EF8B  F016         	goto	l5268
 13166  002D12                     u4960:
 13167  002D12  EF8F  F016         	goto	l1450
 13168  002D16                     l5268:
 13169  002D16  0E00               	movlw	0
 13170  002D18  6E26               	movwf	(ctoa@w+1)^0,c
 13171  002D1A  0E00               	movlw	0
 13172  002D1C  6E25               	movwf	ctoa@w^0,c
 13173  002D1E                     l1450:
 13174                           
 13175                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 13176  002D1E  0E00               	movlw	0
 13177  002D20  6E24               	movwf	(ctoa@l+1)^0,c
 13178  002D22  0E00               	movlw	0
 13179  002D24  6E23               	movwf	ctoa@l^0,c
 13180                           
 13181                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13182  002D26  EFA1  F016         	goto	l5274
 13183  002D2A                     l5270:
 13184                           
 13185                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 13186  002D2A  0E00               	movlw	0
 13187  002D2C  6E17               	movwf	(fputc@c+1)^0,c
 13188  002D2E  0E20               	movlw	32
 13189  002D30  6E16               	movwf	fputc@c^0,c
 13190  002D32  C01F  F018         	movff	ctoa@fp,fputc@fp
 13191  002D36  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
 13192  002D3A  EC33  F018         	call	_fputc	;wreg free
 13193  002D3E                     
 13194                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 275:         ++l;
 13195  002D3E  4A23               	infsnz	ctoa@l^0,f,c
 13196  002D40  2A24               	incf	(ctoa@l+1)^0,f,c
 13197  002D42                     l5274:
 13198                           
 13199                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 13200  002D42  5025               	movf	ctoa@w^0,w,c
 13201  002D44  5C23               	subwf	ctoa@l^0,w,c
 13202  002D46  5024               	movf	(ctoa@l+1)^0,w,c
 13203  002D48  0A80               	xorlw	128
 13204  002D4A  6E22               	movwf	??_ctoa^0,c
 13205  002D4C  5026               	movf	(ctoa@w+1)^0,w,c
 13206  002D4E  0A80               	xorlw	128
 13207  002D50  5822               	subwfb	??_ctoa^0,w,c
 13208  002D52  A0D8               	btfss	status,0,c
 13209  002D54  EFAE  F016         	goto	u4971
 13210  002D58  EFB0  F016         	goto	u4970
 13211  002D5C                     u4971:
 13212  002D5C  EF95  F016         	goto	l5270
 13213  002D60                     u4970:
 13214  002D60                     
 13215                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 13216  002D60  B03D               	btfsc	_flags^0,0,c
 13217  002D62  EFB5  F016         	goto	u4981
 13218  002D66  EFB7  F016         	goto	u4980
 13219  002D6A                     u4981:
 13220  002D6A  EFC0  F016         	goto	l5278
 13221  002D6E                     u4980:
 13222  002D6E                     
 13223                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 13224  002D6E  C021  F016         	movff	ctoa@c,fputc@c
 13225  002D72  6A17               	clrf	(fputc@c+1)^0,c
 13226  002D74  C01F  F018         	movff	ctoa@fp,fputc@fp
 13227  002D78  C020  F019         	movff	ctoa@fp+1,fputc@fp+1
 13228  002D7C  EC33  F018         	call	_fputc	;wreg free
 13229  002D80                     l5278:
 13230                           
 13231                           ;C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 13232  002D80  0E01               	movlw	1
 13233  002D82  2423               	addwf	ctoa@l^0,w,c
 13234  002D84  6E1F               	movwf	?_ctoa^0,c
 13235  002D86  0E00               	movlw	0
 13236  002D88  2024               	addwfc	(ctoa@l+1)^0,w,c
 13237  002D8A  6E20               	movwf	(?_ctoa+1)^0,c
 13238  002D8C  0012               	return		;funcret
 13239  002D8E                     __end_of_ctoa:
 13240                           	callstack 0
 13241                           
 13242 ;; *************** function _fputc *****************
 13243 ;; Defined at:
 13244 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\nf_fputc.c"
 13245 ;; Parameters:    Size  Location     Type
 13246 ;;  c               2   21[COMRAM] int 
 13247 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
 13248 ;;		 -> NULL(0), 
 13249 ;; Auto vars:     Size  Location     Type
 13250 ;;		None
 13251 ;; Return value:  Size  Location     Type
 13252 ;;                  2   21[COMRAM] int 
 13253 ;; Registers used:
 13254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13255 ;; Tracked objects:
 13256 ;;		On entry : 0/0
 13257 ;;		On exit  : 0/0
 13258 ;;		Unchanged: 0/0
 13259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13262 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13263 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13264 ;;Total ram usage:        9 bytes
 13265 ;; Hardware stack levels used:    1
 13266 ;; Hardware stack levels required when called:    6
 13267 ;; This function calls:
 13268 ;;		_putch
 13269 ;; This function is called by:
 13270 ;;		_pad
 13271 ;;		_ctoa
 13272 ;;		_vfpfcnvrt
 13273 ;;		_fputs
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           	psect	text44
 13278  003066                     __ptext44:
 13279                           	callstack 0
 13280  003066                     _fputc:
 13281                           	callstack 18
 13282  003066  5018               	movf	fputc@fp^0,w,c
 13283  003068  1019               	iorwf	(fputc@fp+1)^0,w,c
 13284  00306A  B4D8               	btfsc	status,2,c
 13285  00306C  EF3A  F018         	goto	u4501
 13286  003070  EF3C  F018         	goto	u4500
 13287  003074                     u4501:
 13288  003074  EF45  F018         	goto	l5038
 13289  003078                     u4500:
 13290  003078  5018               	movf	fputc@fp^0,w,c
 13291  00307A  1019               	iorwf	(fputc@fp+1)^0,w,c
 13292  00307C  A4D8               	btfss	status,2,c
 13293  00307E  EF43  F018         	goto	u4511
 13294  003082  EF45  F018         	goto	u4510
 13295  003086                     u4511:
 13296  003086  EF4A  F018         	goto	l5040
 13297  00308A                     u4510:
 13298  00308A                     l5038:
 13299  00308A  5016               	movf	fputc@c^0,w,c
 13300  00308C  ECEA  F01B         	call	_putch
 13301  003090  EF7D  F018         	goto	l1643
 13302  003094                     l5040:
 13303  003094  EE20 F004          	lfsr	2,4
 13304  003098  5018               	movf	fputc@fp^0,w,c
 13305  00309A  26D9               	addwf	fsr2l,f,c
 13306  00309C  5019               	movf	(fputc@fp+1)^0,w,c
 13307  00309E  22DA               	addwfc	fsr2h,f,c
 13308  0030A0  50DE               	movf	postinc2,w,c
 13309  0030A2  10DE               	iorwf	postinc2,w,c
 13310  0030A4  B4D8               	btfsc	status,2,c
 13311  0030A6  EF57  F018         	goto	u4521
 13312  0030AA  EF59  F018         	goto	u4520
 13313  0030AE                     u4521:
 13314  0030AE  EF74  F018         	goto	l5044
 13315  0030B2                     u4520:
 13316  0030B2  EE20 F004          	lfsr	2,4
 13317  0030B6  5018               	movf	fputc@fp^0,w,c
 13318  0030B8  26D9               	addwf	fsr2l,f,c
 13319  0030BA  5019               	movf	(fputc@fp+1)^0,w,c
 13320  0030BC  22DA               	addwfc	fsr2h,f,c
 13321  0030BE  EE10 F002          	lfsr	1,2
 13322  0030C2  5018               	movf	fputc@fp^0,w,c
 13323  0030C4  26E1               	addwf	fsr1l,f,c
 13324  0030C6  5019               	movf	(fputc@fp+1)^0,w,c
 13325  0030C8  22E2               	addwfc	fsr1h,f,c
 13326  0030CA  50DE               	movf	postinc2,w,c
 13327  0030CC  5CE6               	subwf	postinc1,w,c
 13328  0030CE  50E6               	movf	postinc1,w,c
 13329  0030D0  0A80               	xorlw	128
 13330  0030D2  6E1E               	movwf	(??_fputc+4)^0,c
 13331  0030D4  50DE               	movf	postinc2,w,c
 13332  0030D6  0A80               	xorlw	128
 13333  0030D8  581E               	subwfb	(??_fputc+4)^0,w,c
 13334  0030DA  B0D8               	btfsc	status,0,c
 13335  0030DC  EF72  F018         	goto	u4531
 13336  0030E0  EF74  F018         	goto	u4530
 13337  0030E4                     u4531:
 13338  0030E4  EF7D  F018         	goto	l1643
 13339  0030E8                     u4530:
 13340  0030E8                     l5044:
 13341  0030E8  EE20 F002          	lfsr	2,2
 13342  0030EC  5018               	movf	fputc@fp^0,w,c
 13343  0030EE  26D9               	addwf	fsr2l,f,c
 13344  0030F0  5019               	movf	(fputc@fp+1)^0,w,c
 13345  0030F2  22DA               	addwfc	fsr2h,f,c
 13346  0030F4  2ADE               	incf	postinc2,f,c
 13347  0030F6  0E00               	movlw	0
 13348  0030F8  22DD               	addwfc	postdec2,f,c
 13349  0030FA                     l1643:
 13350  0030FA  0012               	return		;funcret
 13351  0030FC                     __end_of_fputc:
 13352                           	callstack 0
 13353                           
 13354 ;; *************** function _putch *****************
 13355 ;; Defined at:
 13356 ;;		line 146 in file "mcc_generated_files/eusart1.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;  txData          1    wreg     unsigned char 
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;  txData          1   20[COMRAM] unsigned char 
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  1    wreg      void 
 13363 ;; Registers used:
 13364 ;;		wreg, status,2, cstack
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13373 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13374 ;;Total ram usage:        1 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    5
 13377 ;; This function calls:
 13378 ;;		_EUSART1_Write
 13379 ;; This function is called by:
 13380 ;;		_fputc
 13381 ;; This function uses a non-reentrant model
 13382 ;;
 13383                           
 13384                           	psect	text45
 13385  0037D4                     __ptext45:
 13386                           	callstack 0
 13387  0037D4                     _putch:
 13388                           	callstack 18
 13389                           
 13390                           ;incstack = 0
 13391                           ;putch@txData stored from wreg
 13392  0037D4  6E15               	movwf	putch@txData^0,c
 13393  0037D6                     
 13394                           ;mcc_generated_files/eusart1.c: 146: void putch(char txData);mcc_generated_files/eusart1
      +                          .c: 147: {;mcc_generated_files/eusart1.c: 148:     EUSART1_Write(txData);
 13395  0037D6  5015               	movf	putch@txData^0,w,c
 13396  0037D8  ECAB  F01B         	call	_EUSART1_Write
 13397  0037DC  0012               	return		;funcret
 13398  0037DE                     __end_of_putch:
 13399                           	callstack 0
 13400                           
 13401 ;; *************** function _EUSART1_Write *****************
 13402 ;; Defined at:
 13403 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 13404 ;; Parameters:    Size  Location     Type
 13405 ;;  txData          1    wreg     unsigned char 
 13406 ;; Auto vars:     Size  Location     Type
 13407 ;;  txData          1   19[COMRAM] unsigned char 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  1    wreg      void 
 13410 ;; Registers used:
 13411 ;;		wreg
 13412 ;; Tracked objects:
 13413 ;;		On entry : 0/0
 13414 ;;		On exit  : 0/0
 13415 ;;		Unchanged: 0/0
 13416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13421 ;;Total ram usage:        1 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    4
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_putch
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           	psect	text46
 13432  003756                     __ptext46:
 13433                           	callstack 0
 13434  003756                     _EUSART1_Write:
 13435                           	callstack 18
 13436                           
 13437                           ;incstack = 0
 13438                           ;EUSART1_Write@txData stored from wreg
 13439  003756  6E14               	movwf	EUSART1_Write@txData^0,c
 13440  003758                     l87:
 13441                           
 13442                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR1bits.TX1IF)
 13443  003758  A89E               	btfss	158,4,c	;volatile
 13444  00375A  EFB1  F01B         	goto	u4491
 13445  00375E  EFB3  F01B         	goto	u4490
 13446  003762                     u4491:
 13447  003762  EFAC  F01B         	goto	l87
 13448  003766                     u4490:
 13449  003766                     
 13450                           ;mcc_generated_files/eusart1.c: 138:     TXREG1 = txData;
 13451  003766  C014  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 13452  00376A  0012               	return		;funcret
 13453  00376C                     __end_of_EUSART1_Write:
 13454                           	callstack 0
 13455                           
 13456 ;; *************** function _atoi *****************
 13457 ;; Defined at:
 13458 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\atoi.c"
 13459 ;; Parameters:    Size  Location     Type
 13460 ;;  s               2   26[COMRAM] PTR const unsigned char 
 13461 ;;		 -> STR_132(3), STR_131(3), STR_130(2), STR_129(4), 
 13462 ;;		 -> STR_128(6), STR_127(3), STR_126(3), STR_125(2), 
 13463 ;;		 -> STR_124(3), STR_123(2), STR_122(4), STR_121(28), 
 13464 ;;		 -> STR_120(26), STR_119(27), STR_118(63), STR_117(63), 
 13465 ;;		 -> STR_116(63), STR_115(63), STR_114(63), STR_113(63), 
 13466 ;;		 -> STR_112(63), STR_111(63), STR_110(63), STR_109(63), 
 13467 ;;		 -> STR_108(63), STR_107(63), STR_106(63), STR_105(63), 
 13468 ;;		 -> STR_104(63), STR_103(63), STR_102(63), STR_101(63), 
 13469 ;;		 -> STR_100(63), STR_99(63), STR_98(63), STR_97(63), 
 13470 ;;		 -> STR_96(63), STR_95(63), STR_94(63), STR_93(63), 
 13471 ;;		 -> STR_92(63), STR_91(63), STR_90(63), STR_89(63), 
 13472 ;;		 -> STR_88(63), STR_87(63), STR_86(63), STR_85(63), 
 13473 ;;		 -> STR_84(63), STR_83(17), STR_82(3), STR_81(5), 
 13474 ;;		 -> STR_80(2), STR_79(5), STR_78(17), STR_77(15), 
 13475 ;;		 -> STR_76(3), STR_75(5), STR_74(2), STR_73(5), 
 13476 ;;		 -> STR_72(19), STR_71(20), STR_70(28), STR_69(20), 
 13477 ;;		 -> STR_68(30), STR_67(21), STR_66(37), STR_65(22), 
 13478 ;;		 -> STR_64(33), STR_63(58), STR_62(48), STR_61(35), 
 13479 ;;		 -> STR_60(5), STR_59(25), STR_58(20), STR_57(71), 
 13480 ;;		 -> STR_56(50), STR_55(22), STR_54(33), STR_53(58), 
 13481 ;;		 -> STR_52(3), STR_51(68), STR_50(58), STR_49(7), 
 13482 ;;		 -> STR_48(2), STR_47(5), STR_46(31), STR_45(27), 
 13483 ;;		 -> STR_44(3), STR_43(76), STR_42(23), STR_41(3), 
 13484 ;;		 -> STR_40(5), STR_39(2), STR_38(5), STR_37(17), 
 13485 ;;		 -> STR_36(30), STR_35(31), STR_34(2), STR_33(2), 
 13486 ;;		 -> STR_32(2), STR_31(8), STR_30(52), STR_29(32), 
 13487 ;;		 -> STR_28(44), STR_27(49), STR_26(52), STR_25(55), 
 13488 ;;		 -> STR_24(43), STR_23(37), STR_22(52), STR_21(24), 
 13489 ;;		 -> STR_20(52), STR_19(24), STR_18(21), STR_17(7), 
 13490 ;;		 -> STR_16(15), STR_15(52), STR_14(21), STR_13(3), 
 13491 ;;		 -> STR_12(5), STR_11(2), STR_10(5), STR_9(17), 
 13492 ;;		 -> STR_8(29), STR_7(54), STR_6(5), STR_5(3), 
 13493 ;;		 -> STR_4(40), STR_3(9), STR_2(21), STR_1(9), 
 13494 ;; Auto vars:     Size  Location     Type
 13495 ;;  n               2   39[COMRAM] int 
 13496 ;;  neg             2   32[COMRAM] int 
 13497 ;; Return value:  Size  Location     Type
 13498 ;;                  2   26[COMRAM] int 
 13499 ;; Registers used:
 13500 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13501 ;; Tracked objects:
 13502 ;;		On entry : 0/0
 13503 ;;		On exit  : 0/0
 13504 ;;		Unchanged: 0/0
 13505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13507 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13508 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13509 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13510 ;;Total ram usage:       15 bytes
 13511 ;; Hardware stack levels used:    1
 13512 ;; Hardware stack levels required when called:    5
 13513 ;; This function calls:
 13514 ;;		___wmul
 13515 ;;		_isdigit
 13516 ;;		_isspace
 13517 ;; This function is called by:
 13518 ;;		_vfpfcnvrt
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           	psect	text47
 13523  0025CC                     __ptext47:
 13524                           	callstack 0
 13525  0025CC                     _atoi:
 13526                           	callstack 22
 13527  0025CC  0E00               	movlw	0
 13528  0025CE  6E29               	movwf	(atoi@n+1)^0,c
 13529  0025D0  0E00               	movlw	0
 13530  0025D2  6E28               	movwf	atoi@n^0,c
 13531  0025D4  0E00               	movlw	0
 13532  0025D6  6E22               	movwf	(atoi@neg+1)^0,c
 13533  0025D8  0E00               	movlw	0
 13534  0025DA  6E21               	movwf	atoi@neg^0,c
 13535  0025DC  EFF2  F012         	goto	l5450
 13536  0025E0                     l5448:
 13537  0025E0  4A1B               	infsnz	atoi@s^0,f,c
 13538  0025E2  2A1C               	incf	(atoi@s+1)^0,f,c
 13539  0025E4                     l5450:
 13540  0025E4  0E01               	movlw	1
 13541  0025E6  6E27               	movwf	_atoi$2042^0,c
 13542  0025E8  C01B  FFF6         	movff	atoi@s,tblptrl
 13543  0025EC  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13544  0025F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13545  0025F0  6AF8               	clrf	tblptru,c
 13546  0025F2                     	endif
 13547  0025F2                     	if	0	;tblptru may be non-zero
 13548  0025F2                     	endif
 13549  0025F2  0008               	tblrd		*
 13550  0025F4  50F5               	movf	tablat,w,c
 13551  0025F6  0A20               	xorlw	32
 13552  0025F8  B4D8               	btfsc	status,2,c
 13553  0025FA  EF01  F013         	goto	u5381
 13554  0025FE  EF03  F013         	goto	u5380
 13555  002602                     u5381:
 13556  002602  EF21  F013         	goto	l5458
 13557  002606                     u5380:
 13558  002606  0EF7               	movlw	247
 13559  002608  6E1D               	movwf	??_atoi^0,c
 13560  00260A  0EFF               	movlw	255
 13561  00260C  6E1E               	movwf	(??_atoi+1)^0,c
 13562  00260E  C01B  FFF6         	movff	atoi@s,tblptrl
 13563  002612  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13564  002616                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13565  002616  6AF8               	clrf	tblptru,c
 13566  002618                     	endif
 13567  002618                     	if	0	;tblptru may be non-zero
 13568  002618                     	endif
 13569  002618  0008               	tblrd		*
 13570  00261A  50F5               	movf	tablat,w,c
 13571  00261C  6E1F               	movwf	(??_atoi+2)^0,c
 13572  00261E  6A20               	clrf	(??_atoi+3)^0,c
 13573  002620  501D               	movf	??_atoi^0,w,c
 13574  002622  261F               	addwf	(??_atoi+2)^0,f,c
 13575  002624  501E               	movf	(??_atoi+1)^0,w,c
 13576  002626  2220               	addwfc	(??_atoi+3)^0,f,c
 13577  002628  5020               	movf	(??_atoi+3)^0,w,c
 13578  00262A  E109               	bnz	u5390
 13579  00262C  0E05               	movlw	5
 13580  00262E  5C1F               	subwf	(??_atoi+2)^0,w,c
 13581  002630  A0D8               	btfss	status,0,c
 13582  002632  EF1D  F013         	goto	u5391
 13583  002636  EF1F  F013         	goto	u5390
 13584  00263A                     u5391:
 13585  00263A  EF21  F013         	goto	l5458
 13586  00263E                     u5390:
 13587  00263E  0E00               	movlw	0
 13588  002640  6E27               	movwf	_atoi$2042^0,c
 13589  002642                     l5458:
 13590  002642  C027  F023         	movff	_atoi$2042,_atoi$2041
 13591  002646  6A24               	clrf	(_atoi$2041+1)^0,c
 13592  002648  5023               	movf	_atoi$2041^0,w,c
 13593  00264A  1024               	iorwf	(_atoi$2041+1)^0,w,c
 13594  00264C  A4D8               	btfss	status,2,c
 13595  00264E  EF2B  F013         	goto	u5401
 13596  002652  EF2D  F013         	goto	u5400
 13597  002656                     u5401:
 13598  002656  EFF0  F012         	goto	l5448
 13599  00265A                     u5400:
 13600  00265A  EF37  F013         	goto	l5468
 13601  00265E                     l5464:
 13602  00265E  0E00               	movlw	0
 13603  002660  6E22               	movwf	(atoi@neg+1)^0,c
 13604  002662  0E01               	movlw	1
 13605  002664  6E21               	movwf	atoi@neg^0,c
 13606  002666                     l5466:
 13607  002666  4A1B               	infsnz	atoi@s^0,f,c
 13608  002668  2A1C               	incf	(atoi@s+1)^0,f,c
 13609  00266A  EF6E  F013         	goto	l5474
 13610  00266E                     l5468:
 13611  00266E  C01B  FFF6         	movff	atoi@s,tblptrl
 13612  002672  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13613  002676                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13614  002676  6AF8               	clrf	tblptru,c
 13615  002678                     	endif
 13616  002678                     	if	0	;tblptru may be non-zero
 13617  002678                     	endif
 13618  002678  0008               	tblrd		*
 13619  00267A  50F5               	movf	tablat,w,c
 13620  00267C  6E1D               	movwf	??_atoi^0,c
 13621  00267E  6A1E               	clrf	(??_atoi+1)^0,c
 13622                           
 13623                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13624                           ; Switch size 1, requested type "simple"
 13625                           ; Number of cases is 1, Range of values is 0 to 0
 13626                           ; switch strategies available:
 13627                           ; Name         Instructions Cycles
 13628                           ; simple_byte            4     3 (average)
 13629                           ;	Chosen strategy is simple_byte
 13630  002680  501E               	movf	(??_atoi+1)^0,w,c
 13631  002682  0A00               	xorlw	0	; case 0
 13632  002684  B4D8               	btfsc	status,2,c
 13633  002686  EF47  F013         	goto	l6524
 13634  00268A  EF6E  F013         	goto	l5474
 13635  00268E                     l6524:
 13636                           
 13637                           ; Switch size 1, requested type "simple"
 13638                           ; Number of cases is 2, Range of values is 43 to 45
 13639                           ; switch strategies available:
 13640                           ; Name         Instructions Cycles
 13641                           ; simple_byte            7     4 (average)
 13642                           ;	Chosen strategy is simple_byte
 13643  00268E  501D               	movf	??_atoi^0,w,c
 13644  002690  0A2B               	xorlw	43	; case 43
 13645  002692  B4D8               	btfsc	status,2,c
 13646  002694  EF33  F013         	goto	l5466
 13647  002698  0A06               	xorlw	6	; case 45
 13648  00269A  B4D8               	btfsc	status,2,c
 13649  00269C  EF2F  F013         	goto	l5464
 13650  0026A0  EF6E  F013         	goto	l5474
 13651  0026A4                     l5470:
 13652  0026A4  C028  F014         	movff	atoi@n,___wmul@multiplier
 13653  0026A8  C029  F015         	movff	atoi@n+1,___wmul@multiplier+1
 13654  0026AC  0E00               	movlw	0
 13655  0026AE  6E17               	movwf	(___wmul@multiplicand+1)^0,c
 13656  0026B0  0E0A               	movlw	10
 13657  0026B2  6E16               	movwf	___wmul@multiplicand^0,c
 13658  0026B4  EC53  F01B         	call	___wmul	;wreg free
 13659  0026B8  C01B  FFF6         	movff	atoi@s,tblptrl
 13660  0026BC  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13661  0026C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13662  0026C0  6AF8               	clrf	tblptru,c
 13663  0026C2                     	endif
 13664  0026C2                     	if	0	;tblptru may be non-zero
 13665  0026C2                     	endif
 13666  0026C2  0008               	tblrd		*
 13667  0026C4  50F5               	movf	tablat,w,c
 13668  0026C6  5E14               	subwf	?___wmul^0,f,c
 13669  0026C8  0E00               	movlw	0
 13670  0026CA  5A15               	subwfb	(?___wmul+1)^0,f,c
 13671  0026CC  0E30               	movlw	48
 13672  0026CE  2414               	addwf	?___wmul^0,w,c
 13673  0026D0  6E28               	movwf	atoi@n^0,c
 13674  0026D2  0E00               	movlw	0
 13675  0026D4  2015               	addwfc	(?___wmul+1)^0,w,c
 13676  0026D6  6E29               	movwf	(atoi@n+1)^0,c
 13677  0026D8  EF33  F013         	goto	l5466
 13678  0026DC                     l5474:
 13679  0026DC  0ED0               	movlw	208
 13680  0026DE  6E1D               	movwf	??_atoi^0,c
 13681  0026E0  0EFF               	movlw	255
 13682  0026E2  6E1E               	movwf	(??_atoi+1)^0,c
 13683  0026E4  C01B  FFF6         	movff	atoi@s,tblptrl
 13684  0026E8  C01C  FFF7         	movff	atoi@s+1,tblptrh
 13685  0026EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13686  0026EC  6AF8               	clrf	tblptru,c
 13687  0026EE                     	endif
 13688  0026EE                     	if	0	;tblptru may be non-zero
 13689  0026EE                     	endif
 13690  0026EE  0008               	tblrd		*
 13691  0026F0  50F5               	movf	tablat,w,c
 13692  0026F2  6E1F               	movwf	(??_atoi+2)^0,c
 13693  0026F4  6A20               	clrf	(??_atoi+3)^0,c
 13694  0026F6  501D               	movf	??_atoi^0,w,c
 13695  0026F8  261F               	addwf	(??_atoi+2)^0,f,c
 13696  0026FA  501E               	movf	(??_atoi+1)^0,w,c
 13697  0026FC  2220               	addwfc	(??_atoi+3)^0,f,c
 13698  0026FE  5020               	movf	(??_atoi+3)^0,w,c
 13699  002700  E10A               	bnz	u5410
 13700  002702  0E0A               	movlw	10
 13701  002704  5C1F               	subwf	(??_atoi+2)^0,w,c
 13702  002706  A0D8               	btfss	status,0,c
 13703  002708  EF88  F013         	goto	u5411
 13704  00270C  EF8B  F013         	goto	u5410
 13705  002710                     u5411:
 13706  002710  0E01               	movlw	1
 13707  002712  EF8C  F013         	goto	u5420
 13708  002716                     u5410:
 13709  002716  0E00               	movlw	0
 13710  002718                     u5420:
 13711  002718  6E25               	movwf	_atoi$2043^0,c
 13712  00271A  6A26               	clrf	(_atoi$2043+1)^0,c
 13713  00271C  5025               	movf	_atoi$2043^0,w,c
 13714  00271E  1026               	iorwf	(_atoi$2043+1)^0,w,c
 13715  002720  A4D8               	btfss	status,2,c
 13716  002722  EF95  F013         	goto	u5431
 13717  002726  EF97  F013         	goto	u5430
 13718  00272A                     u5431:
 13719  00272A  EF52  F013         	goto	l5470
 13720  00272E                     u5430:
 13721  00272E  5021               	movf	atoi@neg^0,w,c
 13722  002730  1022               	iorwf	(atoi@neg+1)^0,w,c
 13723  002732  A4D8               	btfss	status,2,c
 13724  002734  EF9E  F013         	goto	u5441
 13725  002738  EFA0  F013         	goto	u5440
 13726  00273C                     u5441:
 13727  00273C  EFAE  F013         	goto	l1602
 13728  002740                     u5440:
 13729  002740  C028  F01D         	movff	atoi@n,??_atoi
 13730  002744  C029  F01E         	movff	atoi@n+1,??_atoi+1
 13731  002748  1E1D               	comf	??_atoi^0,f,c
 13732  00274A  1E1E               	comf	(??_atoi+1)^0,f,c
 13733  00274C  4A1D               	infsnz	??_atoi^0,f,c
 13734  00274E  2A1E               	incf	(??_atoi+1)^0,f,c
 13735  002750  C01D  F01B         	movff	??_atoi,?_atoi
 13736  002754  C01E  F01C         	movff	??_atoi+1,?_atoi+1
 13737  002758  EFB2  F013         	goto	l1605
 13738  00275C                     l1602:
 13739  00275C  C028  F01B         	movff	atoi@n,?_atoi
 13740  002760  C029  F01C         	movff	atoi@n+1,?_atoi+1
 13741  002764                     l1605:
 13742  002764  0012               	return		;funcret
 13743  002766                     __end_of_atoi:
 13744                           	callstack 0
 13745                           
 13746 ;; *************** function _isspace *****************
 13747 ;; Defined at:
 13748 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isspace.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;  c               2   19[COMRAM] int 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;		None
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  2   19[COMRAM] int 
 13755 ;; Registers used:
 13756 ;;		wreg, status,2, status,0
 13757 ;; Tracked objects:
 13758 ;;		On entry : 0/0
 13759 ;;		On exit  : 0/0
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13764 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13765 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13766 ;;Total ram usage:        7 bytes
 13767 ;; Hardware stack levels used:    1
 13768 ;; Hardware stack levels required when called:    4
 13769 ;; This function calls:
 13770 ;;		Nothing
 13771 ;; This function is called by:
 13772 ;;		_atoi
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           	psect	text48
 13777  0032BE                     __ptext48:
 13778                           	callstack 0
 13779  0032BE                     _isspace:
 13780                           	callstack 22
 13781  0032BE  0E01               	movlw	1
 13782  0032C0  6E1A               	movwf	_isspace$2068^0,c
 13783  0032C2  0E20               	movlw	32
 13784  0032C4  1814               	xorwf	isspace@c^0,w,c
 13785  0032C6  1015               	iorwf	(isspace@c+1)^0,w,c
 13786  0032C8  B4D8               	btfsc	status,2,c
 13787  0032CA  EF69  F019         	goto	u4921
 13788  0032CE  EF6B  F019         	goto	u4920
 13789  0032D2                     u4921:
 13790  0032D2  EF84  F019         	goto	l5250
 13791  0032D6                     u4920:
 13792  0032D6  0EF7               	movlw	247
 13793  0032D8  6E16               	movwf	??_isspace^0,c
 13794  0032DA  0EFF               	movlw	255
 13795  0032DC  6E17               	movwf	(??_isspace+1)^0,c
 13796  0032DE  C014  F018         	movff	isspace@c,??_isspace+2
 13797  0032E2  C015  F019         	movff	isspace@c+1,??_isspace+3
 13798  0032E6  5016               	movf	??_isspace^0,w,c
 13799  0032E8  2618               	addwf	(??_isspace+2)^0,f,c
 13800  0032EA  5017               	movf	(??_isspace+1)^0,w,c
 13801  0032EC  2219               	addwfc	(??_isspace+3)^0,f,c
 13802  0032EE  5019               	movf	(??_isspace+3)^0,w,c
 13803  0032F0  E109               	bnz	u4930
 13804  0032F2  0E05               	movlw	5
 13805  0032F4  5C18               	subwf	(??_isspace+2)^0,w,c
 13806  0032F6  A0D8               	btfss	status,0,c
 13807  0032F8  EF80  F019         	goto	u4931
 13808  0032FC  EF82  F019         	goto	u4930
 13809  003300                     u4931:
 13810  003300  EF84  F019         	goto	l5250
 13811  003304                     u4930:
 13812  003304  0E00               	movlw	0
 13813  003306  6E1A               	movwf	_isspace$2068^0,c
 13814  003308                     l5250:
 13815  003308  C01A  F014         	movff	_isspace$2068,?_isspace
 13816  00330C  6A15               	clrf	(?_isspace+1)^0,c
 13817  00330E  0012               	return		;funcret
 13818  003310                     __end_of_isspace:
 13819                           	callstack 0
 13820                           
 13821 ;; *************** function _isdigit *****************
 13822 ;; Defined at:
 13823 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\isdigit.c"
 13824 ;; Parameters:    Size  Location     Type
 13825 ;;  c               2   19[COMRAM] int 
 13826 ;; Auto vars:     Size  Location     Type
 13827 ;;		None
 13828 ;; Return value:  Size  Location     Type
 13829 ;;                  2   19[COMRAM] int 
 13830 ;; Registers used:
 13831 ;;		wreg, status,2, status,0
 13832 ;; Tracked objects:
 13833 ;;		On entry : 0/0
 13834 ;;		On exit  : 0/0
 13835 ;;		Unchanged: 0/0
 13836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13841 ;;Total ram usage:        6 bytes
 13842 ;; Hardware stack levels used:    1
 13843 ;; Hardware stack levels required when called:    4
 13844 ;; This function calls:
 13845 ;;		Nothing
 13846 ;; This function is called by:
 13847 ;;		_vfpfcnvrt
 13848 ;;		_atoi
 13849 ;; This function uses a non-reentrant model
 13850 ;;
 13851                           
 13852                           	psect	text49
 13853  0034FA                     __ptext49:
 13854                           	callstack 0
 13855  0034FA                     _isdigit:
 13856                           	callstack 23
 13857  0034FA  0ED0               	movlw	208
 13858  0034FC  6E16               	movwf	??_isdigit^0,c
 13859  0034FE  0EFF               	movlw	255
 13860  003500  6E17               	movwf	(??_isdigit+1)^0,c
 13861  003502  C014  F018         	movff	isdigit@c,??_isdigit+2
 13862  003506  C015  F019         	movff	isdigit@c+1,??_isdigit+3
 13863  00350A  5016               	movf	??_isdigit^0,w,c
 13864  00350C  2618               	addwf	(??_isdigit+2)^0,f,c
 13865  00350E  5017               	movf	(??_isdigit+1)^0,w,c
 13866  003510  2219               	addwfc	(??_isdigit+3)^0,f,c
 13867  003512  5019               	movf	(??_isdigit+3)^0,w,c
 13868  003514  E10A               	bnz	u4900
 13869  003516  0E0A               	movlw	10
 13870  003518  5C18               	subwf	(??_isdigit+2)^0,w,c
 13871  00351A  A0D8               	btfss	status,0,c
 13872  00351C  EF92  F01A         	goto	u4901
 13873  003520  EF95  F01A         	goto	u4900
 13874  003524                     u4901:
 13875  003524  0E01               	movlw	1
 13876  003526  EF96  F01A         	goto	u4910
 13877  00352A                     u4900:
 13878  00352A  0E00               	movlw	0
 13879  00352C                     u4910:
 13880  00352C  6E14               	movwf	?_isdigit^0,c
 13881  00352E  6A15               	clrf	(?_isdigit+1)^0,c
 13882  003530  0012               	return		;funcret
 13883  003532                     __end_of_isdigit:
 13884                           	callstack 0
 13885                           
 13886 ;; *************** function ___wmul *****************
 13887 ;; Defined at:
 13888 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\Umul16.c"
 13889 ;; Parameters:    Size  Location     Type
 13890 ;;  multiplier      2   19[COMRAM] unsigned int 
 13891 ;;  multiplicand    2   21[COMRAM] unsigned int 
 13892 ;; Auto vars:     Size  Location     Type
 13893 ;;  product         2   23[COMRAM] unsigned int 
 13894 ;; Return value:  Size  Location     Type
 13895 ;;                  2   19[COMRAM] unsigned int 
 13896 ;; Registers used:
 13897 ;;		wreg, status,2, status,0, prodl, prodh
 13898 ;; Tracked objects:
 13899 ;;		On entry : 0/0
 13900 ;;		On exit  : 0/0
 13901 ;;		Unchanged: 0/0
 13902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13904 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13907 ;;Total ram usage:        6 bytes
 13908 ;; Hardware stack levels used:    1
 13909 ;; Hardware stack levels required when called:    4
 13910 ;; This function calls:
 13911 ;;		Nothing
 13912 ;; This function is called by:
 13913 ;;		_atoi
 13914 ;; This function uses a non-reentrant model
 13915 ;;
 13916                           
 13917                           	psect	text50
 13918  0036A6                     __ptext50:
 13919                           	callstack 0
 13920  0036A6                     ___wmul:
 13921                           	callstack 22
 13922  0036A6  5014               	movf	___wmul@multiplier^0,w,c
 13923  0036A8  0216               	mulwf	___wmul@multiplicand^0,c
 13924  0036AA  CFF3 F018          	movff	prodl,___wmul@product
 13925  0036AE  CFF4 F019          	movff	prodh,___wmul@product+1
 13926  0036B2  5014               	movf	___wmul@multiplier^0,w,c
 13927  0036B4  0217               	mulwf	(___wmul@multiplicand+1)^0,c
 13928  0036B6  50F3               	movf	243,w,c
 13929  0036B8  2619               	addwf	(___wmul@product+1)^0,f,c
 13930  0036BA  5015               	movf	(___wmul@multiplier+1)^0,w,c
 13931  0036BC  0216               	mulwf	___wmul@multiplicand^0,c
 13932  0036BE  50F3               	movf	243,w,c
 13933  0036C0  2619               	addwf	(___wmul@product+1)^0,f,c
 13934  0036C2  C018  F014         	movff	___wmul@product,?___wmul
 13935  0036C6  C019  F015         	movff	___wmul@product+1,?___wmul+1
 13936  0036CA  0012               	return		;funcret
 13937  0036CC                     __end_of___wmul:
 13938                           	callstack 0
 13939                           
 13940 ;; *************** function _SPI2_ExchangeByte *****************
 13941 ;; Defined at:
 13942 ;;		line 92 in file "mcc_generated_files/spi2.c"
 13943 ;; Parameters:    Size  Location     Type
 13944 ;;  data            1    wreg     unsigned char 
 13945 ;; Auto vars:     Size  Location     Type
 13946 ;;  data            1   19[COMRAM] unsigned char 
 13947 ;; Return value:  Size  Location     Type
 13948 ;;                  1    wreg      unsigned char 
 13949 ;; Registers used:
 13950 ;;		wreg, status,2
 13951 ;; Tracked objects:
 13952 ;;		On entry : 0/0
 13953 ;;		On exit  : 0/0
 13954 ;;		Unchanged: 0/0
 13955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13960 ;;Total ram usage:        1 bytes
 13961 ;; Hardware stack levels used:    1
 13962 ;; Hardware stack levels required when called:    4
 13963 ;; This function calls:
 13964 ;;		Nothing
 13965 ;; This function is called by:
 13966 ;;		_SDCARD_ReadBlock
 13967 ;;		_SDCARD_WriteBlock
 13968 ;;		_SDCARD_PollWriteComplete
 13969 ;;		_SDCARD_Initialize
 13970 ;;		_SPI2_WriteBlock
 13971 ;;		_SPI2_ReadBlock
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text51
 13976  003726                     __ptext51:
 13977                           	callstack 0
 13978  003726                     _SPI2_ExchangeByte:
 13979                           	callstack 25
 13980                           
 13981                           ;incstack = 0
 13982                           ;SPI2_ExchangeByte@data stored from wreg
 13983  003726  6E14               	movwf	SPI2_ExchangeByte@data^0,c
 13984  003728                     
 13985                           ;mcc_generated_files/spi2.c: 92: uint8_t SPI2_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi2.c: 93: {;mcc_generated_files/spi2.c: 94:     SSP2BUF = data;
 13986  003728  C014  FF6F         	movff	SPI2_ExchangeByte@data,3951	;volatile
 13987  00372C                     l547:
 13988  00372C  AEA4               	btfss	164,7,c	;volatile
 13989  00372E  EF9B  F01B         	goto	u5621
 13990  003732  EF9D  F01B         	goto	u5620
 13991  003736                     u5621:
 13992  003736  EF96  F01B         	goto	l547
 13993  00373A                     u5620:
 13994  00373A                     
 13995                           ;mcc_generated_files/spi2.c: 96:     PIR3bits.SSP2IF = 0;
 13996  00373A  9EA4               	bcf	164,7,c	;volatile
 13997                           
 13998                           ;mcc_generated_files/spi2.c: 97:     return SSP2BUF;
 13999  00373C  506F               	movf	111,w,c	;volatile
 14000  00373E  0012               	return		;funcret
 14001  003740                     __end_of_SPI2_ExchangeByte:
 14002                           	callstack 0
 14003                           
 14004 ;; *************** function _EUSART1_is_rx_ready *****************
 14005 ;; Defined at:
 14006 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;		None
 14009 ;; Auto vars:     Size  Location     Type
 14010 ;;		None
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  1    wreg      _Bool 
 14013 ;; Registers used:
 14014 ;;		wreg
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14024 ;;Total ram usage:        0 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; Hardware stack levels required when called:    4
 14027 ;; This function calls:
 14028 ;;		Nothing
 14029 ;; This function is called by:
 14030 ;;		_main
 14031 ;; This function uses a non-reentrant model
 14032 ;;
 14033                           
 14034                           	psect	text52
 14035  00376C                     __ptext52:
 14036                           	callstack 0
 14037  00376C                     _EUSART1_is_rx_ready:
 14038                           	callstack 26
 14039  00376C                     
 14040                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR1bits.RC1IF);
 14041  00376C  BA9E               	btfsc	158,5,c	;volatile
 14042  00376E  EFBB  F01B         	goto	u5631
 14043  003772  EFBE  F01B         	goto	u5630
 14044  003776                     u5631:
 14045  003776  0E01               	movlw	1
 14046  003778  EFBF  F01B         	goto	u5636
 14047  00377C                     u5630:
 14048  00377C  0E00               	movlw	0
 14049  00377E                     u5636:
 14050  00377E  0012               	return		;funcret
 14051  003780                     __end_of_EUSART1_is_rx_ready:
 14052                           	callstack 0
 14053                           
 14054 ;; *************** function _EUSART1_Read *****************
 14055 ;; Defined at:
 14056 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 14057 ;; Parameters:    Size  Location     Type
 14058 ;;		None
 14059 ;; Auto vars:     Size  Location     Type
 14060 ;;		None
 14061 ;; Return value:  Size  Location     Type
 14062 ;;                  1    wreg      unsigned char 
 14063 ;; Registers used:
 14064 ;;		wreg, status,2
 14065 ;; Tracked objects:
 14066 ;;		On entry : 0/0
 14067 ;;		On exit  : 0/0
 14068 ;;		Unchanged: 0/0
 14069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14074 ;;Total ram usage:        0 bytes
 14075 ;; Hardware stack levels used:    1
 14076 ;; Hardware stack levels required when called:    4
 14077 ;; This function calls:
 14078 ;;		Nothing
 14079 ;; This function is called by:
 14080 ;;		_main
 14081 ;;		_getch
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           	psect	text53
 14086  003658                     __ptext53:
 14087                           	callstack 0
 14088  003658                     _EUSART1_Read:
 14089                           	callstack 26
 14090  003658                     l80:
 14091                           
 14092                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR1bits.RC1IF)
 14093  003658  AA9E               	btfss	158,5,c	;volatile
 14094  00365A  EF31  F01B         	goto	u5641
 14095  00365E  EF33  F01B         	goto	u5640
 14096  003662                     u5641:
 14097  003662  EF2C  F01B         	goto	l80
 14098  003666                     u5640:
 14099  003666                     
 14100                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 14101  003666  0E00               	movlw	0
 14102  003668  6E49               	movwf	_eusart1RxLastError^0,c	;volatile
 14103  00366A                     
 14104                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RCSTA1bits.OERR)
 14105  00366A  A2AB               	btfss	171,1,c	;volatile
 14106  00366C  EF3A  F01B         	goto	u5651
 14107  003670  EF3C  F01B         	goto	u5650
 14108  003674                     u5651:
 14109  003674  EF3E  F01B         	goto	l5702
 14110  003678                     u5650:
 14111  003678                     
 14112                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          CSTA1bits.CREN = 0;
 14113  003678  98AB               	bcf	171,4,c	;volatile
 14114                           
 14115                           ;mcc_generated_files/eusart1.c: 126:         RCSTA1bits.CREN = 1;
 14116  00367A  88AB               	bsf	171,4,c	;volatile
 14117  00367C                     l5702:
 14118                           
 14119                           ;mcc_generated_files/eusart1.c: 129:     return RCREG1;
 14120  00367C  50AE               	movf	174,w,c	;volatile
 14121  00367E  0012               	return		;funcret
 14122  003680                     __end_of_EUSART1_Read:
 14123                           	callstack 0
 14124                           
 14125 ;; *************** function _INTERRUPT_InterruptManager *****************
 14126 ;; Defined at:
 14127 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 14128 ;; Parameters:    Size  Location     Type
 14129 ;;		None
 14130 ;; Auto vars:     Size  Location     Type
 14131 ;;		None
 14132 ;; Return value:  Size  Location     Type
 14133 ;;                  1    wreg      void 
 14134 ;; Registers used:
 14135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14136 ;; Tracked objects:
 14137 ;;		On entry : 0/0
 14138 ;;		On exit  : 0/0
 14139 ;;		Unchanged: 0/0
 14140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14145 ;;Total ram usage:        4 bytes
 14146 ;; Hardware stack levels used:    1
 14147 ;; Hardware stack levels required when called:    3
 14148 ;; This function calls:
 14149 ;;		_TMR0_ISR
 14150 ;; This function is called by:
 14151 ;;		Interrupt level 2
 14152 ;; This function uses a non-reentrant model
 14153 ;;
 14154                           
 14155                           	psect	intcode
 14156  000008                     __pintcode:
 14157                           	callstack 0
 14158  000008                     _INTERRUPT_InterruptManager:
 14159                           	callstack 17
 14160                           
 14161                           ;incstack = 0
 14162  000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14163  00000A  CFFA F010          	movff	pclath,??_INTERRUPT_InterruptManager
 14164  00000E  CFFB F011          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 14165  000012  CFD9 F012          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 14166  000016  CFDA F013          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 14167  00001A                     
 14168                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 14169  00001A  AAF2               	btfss	242,5,c	;volatile
 14170  00001C  EF12  F000         	goto	i2u447_41
 14171  000020  EF14  F000         	goto	i2u447_40
 14172  000024                     i2u447_41:
 14173  000024  EF1D  F000         	goto	i2l593
 14174  000028                     i2u447_40:
 14175  000028  A4F2               	btfss	242,2,c	;volatile
 14176  00002A  EF19  F000         	goto	i2u448_41
 14177  00002E  EF1B  F000         	goto	i2u448_40
 14178  000032                     i2u448_41:
 14179  000032  EF1D  F000         	goto	i2l593
 14180  000036                     i2u448_40:
 14181  000036                     
 14182                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
 14183  000036  ECCF  F01A         	call	_TMR0_ISR	;wreg free
 14184  00003A                     i2l593:
 14185  00003A  C013  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 14186  00003E  C012  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 14187  000042  C011  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 14188  000046  C010  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 14189  00004A  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14190  00004C  0011               	retfie		f
 14191  00004E                     __end_of_INTERRUPT_InterruptManager:
 14192                           	callstack 0
 14193                           
 14194 ;; *************** function _TMR0_ISR *****************
 14195 ;; Defined at:
 14196 ;;		line 136 in file "mcc_generated_files/tmr0.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;		None
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;		None
 14201 ;; Return value:  Size  Location     Type
 14202 ;;                  1    wreg      void 
 14203 ;; Registers used:
 14204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 14205 ;; Tracked objects:
 14206 ;;		On entry : 0/0
 14207 ;;		On exit  : 0/0
 14208 ;;		Unchanged: 0/0
 14209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;Total ram usage:        0 bytes
 14215 ;; Hardware stack levels used:    1
 14216 ;; Hardware stack levels required when called:    2
 14217 ;; This function calls:
 14218 ;;		Absolute function
 14219 ;;		_TMR0_DefaultInterruptHandler
 14220 ;;		_myTMR0ISR
 14221 ;; This function is called by:
 14222 ;;		_INTERRUPT_InterruptManager
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           
 14226                           	psect	text55
 14227  00359E                     __ptext55:
 14228                           	callstack 0
 14229  00359E                     _TMR0_ISR:
 14230                           	callstack 17
 14231  00359E                     
 14232                           ;mcc_generated_files/tmr0.c: 140:     INTCONbits.TMR0IF = 0;
 14233  00359E  94F2               	bcf	242,2,c	;volatile
 14234  0035A0                     
 14235                           ;mcc_generated_files/tmr0.c: 144:     TMR0H = timer0ReloadVal >> 8;
 14236  0035A0  5042               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
 14237  0035A2  6ED7               	movwf	215,c	;volatile
 14238  0035A4                     
 14239                           ;mcc_generated_files/tmr0.c: 145:     TMR0L = (uint8_t) timer0ReloadVal;
 14240  0035A4  C041  FFD6         	movff	_timer0ReloadVal,4054	;volatile
 14241  0035A8                     
 14242                           ;mcc_generated_files/tmr0.c: 147:     if(TMR0_InterruptHandler)
 14243  0035A8  5043               	movf	_TMR0_InterruptHandler^0,w,c
 14244  0035AA  1044               	iorwf	(_TMR0_InterruptHandler+1)^0,w,c
 14245  0035AC  B4D8               	btfsc	status,2,c
 14246  0035AE  EFDB  F01A         	goto	i2u360_41
 14247  0035B2  EFDD  F01A         	goto	i2u360_40
 14248  0035B6                     i2u360_41:
 14249  0035B6  EFE9  F01A         	goto	i2l154
 14250  0035BA                     i2u360_40:
 14251  0035BA                     
 14252                           ;mcc_generated_files/tmr0.c: 148:     {;mcc_generated_files/tmr0.c: 149:         TMR0_In
      +                          terruptHandler();
 14253  0035BA  D802               	call	i2u361_48
 14254  0035BC  EFE9  F01A         	goto	i2u361_49
 14255  0035C0                     i2u361_48:
 14256  0035C0  0005               	push	
 14257  0035C2  6EFA               	movwf	pclath,c
 14258  0035C4  5043               	movf	_TMR0_InterruptHandler^0,w,c
 14259  0035C6  6EFD               	movwf	tosl,c
 14260  0035C8  5044               	movf	(_TMR0_InterruptHandler+1)^0,w,c
 14261  0035CA  6EFE               	movwf	tosh,c
 14262  0035CC  6AFF               	clrf	tosu,c
 14263  0035CE  50FA               	movf	pclath,w,c
 14264  0035D0  0012               	return		;indir
 14265  0035D2                     i2u361_49:
 14266  0035D2                     i2l154:
 14267  0035D2  0012               	return		;funcret
 14268  0035D4                     __end_of_TMR0_ISR:
 14269                           	callstack 0
 14270                           
 14271 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 14272 ;; Defined at:
 14273 ;;		line 160 in file "mcc_generated_files/tmr0.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  1    wreg      void 
 14280 ;; Registers used:
 14281 ;;		None
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14291 ;;Total ram usage:        0 bytes
 14292 ;; Hardware stack levels used:    1
 14293 ;; This function calls:
 14294 ;;		Nothing
 14295 ;; This function is called by:
 14296 ;;		_TMR0_Initialize
 14297 ;;		_TMR0_ISR
 14298 ;; This function uses a non-reentrant model
 14299 ;;
 14300                           
 14301                           	psect	text56
 14302  0037F4                     __ptext56:
 14303                           	callstack 0
 14304  0037F4                     _TMR0_DefaultInterruptHandler:
 14305                           	callstack 18
 14306  0037F4  0012               	return		;funcret
 14307  0037F6                     __end_of_TMR0_DefaultInterruptHandler:
 14308                           	callstack 0
 14309                           
 14310 ;; *************** function _myTMR0ISR *****************
 14311 ;; Defined at:
 14312 ;;		line 451 in file "main.c"
 14313 ;; Parameters:    Size  Location     Type
 14314 ;;		None
 14315 ;; Auto vars:     Size  Location     Type
 14316 ;;  mic             2   12[COMRAM] unsigned short 
 14317 ;;  useBuffer1      1   14[COMRAM] unsigned char 
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  1    wreg      void 
 14320 ;; Registers used:
 14321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;Total ram usage:        5 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:    1
 14334 ;; This function calls:
 14335 ;;		_EPWM1_LoadDutyValue
 14336 ;;		_TMR0_ReadTimer
 14337 ;;		i2_TMR0_WriteTimer
 14338 ;; This function is called by:
 14339 ;;		_main
 14340 ;;		_TMR0_ISR
 14341 ;; This function uses a non-reentrant model
 14342 ;;
 14343                           
 14344                           	psect	text57
 14345  001FF8                     __ptext57:
 14346                           	callstack 0
 14347  001FF8                     _myTMR0ISR:
 14348                           	callstack 17
 14349  001FF8                     
 14350                           ;main.c: 452:     ADCON0bits.GO_NOT_DONE = 1;
 14351  001FF8  82C2               	bsf	194,1,c	;volatile
 14352  001FFA                     
 14353                           ;main.c: 454:     TMR0_WriteTimer(0x10000 - (sampleRate - TMR0_ReadTimer()));
 14354  001FFA  EC76  F01B         	call	_TMR0_ReadTimer	;wreg free
 14355  001FFE  0100               	movlb	0	; () banked
 14356  002000  51D1               	movf	_sampleRate& (0+255),w,b
 14357  002002  5C01               	subwf	?_TMR0_ReadTimer^0,w,c
 14358  002004  6E09               	movwf	i2TMR0_WriteTimer@timerVal^0,c
 14359  002006  51D2               	movf	(_sampleRate+1)& (0+255),w,b
 14360  002008  5802               	subwfb	(?_TMR0_ReadTimer+1)^0,w,c
 14361  00200A  6E0A               	movwf	(i2TMR0_WriteTimer@timerVal+1)^0,c
 14362  00200C  ECEF  F01B         	call	i2_TMR0_WriteTimer	;wreg free
 14363  002010                     
 14364                           ;main.c: 455:     static uint16_t bufferIndex = 0;;main.c: 456:     static myTMR0states_
      +                          t state = IDLE;;main.c: 457:     static uint8_t *buffer = sdCardBuffer1;;main.c: 458:   
      +                            uint8_t useBuffer1 = 1;
 14365  002010  0E01               	movlw	1
 14366  002012  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14367  002014                     
 14368                           ;main.c: 460:     uint16_t mic = ADRESH;
 14369  002014  CFC4 F00D          	movff	4036,myTMR0ISR@mic	;volatile
 14370  002018  6A0E               	clrf	(myTMR0ISR@mic+1)^0,c
 14371                           
 14372                           ;main.c: 462:     switch(state) {
 14373  00201A  EFD8  F010         	goto	i2l4174
 14374  00201E                     i2l4084:
 14375                           
 14376                           ;main.c: 464:             if (startCollect) {
 14377  00201E  5048               	movf	_startCollect^0,w,c
 14378  002020  B4D8               	btfsc	status,2,c
 14379  002022  EF15  F010         	goto	i2u342_41
 14380  002026  EF17  F010         	goto	i2u342_40
 14381  00202A                     i2u342_41:
 14382  00202A  EF28  F010         	goto	i2l4094
 14383  00202E                     i2u342_40:
 14384  00202E                     
 14385                           ;main.c: 465:                 collecting = 1;
 14386  00202E  0E01               	movlw	1
 14387  002030  0100               	movlb	0	; () banked
 14388  002032  6FCE               	movwf	_collecting& (0+255),b
 14389                           
 14390                           ;main.c: 466:                 state = MIC_ACQUIRE;
 14391  002034  0E04               	movlw	4
 14392  002036  6E45               	movwf	myTMR0ISR@state^0,c
 14393                           
 14394                           ;main.c: 467:                 bufferIndex = 0;
 14395  002038  0E00               	movlw	0
 14396  00203A  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14397  00203C  0E00               	movlw	0
 14398  00203E  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14399  002040                     
 14400                           ; BSR set to: 0
 14401                           ;main.c: 468:                 buffer = sdCardBuffer1;
 14402  002040  0EDE               	movlw	low _sdCardBuffer1
 14403  002042  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14404  002044  0E05               	movlw	high _sdCardBuffer1
 14405  002046  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14406  002048                     
 14407                           ; BSR set to: 0
 14408                           ;main.c: 470:                 startCollect = 1;
 14409  002048  0E01               	movlw	1
 14410  00204A  6E48               	movwf	_startCollect^0,c
 14411                           
 14412                           ;main.c: 471:             } else if (doPlayback) {
 14413  00204C  EFF9  F010         	goto	i2l513
 14414  002050                     i2l4094:
 14415  002050  0100               	movlb	0	; () banked
 14416  002052  51CD               	movf	_doPlayback& (0+255),w,b
 14417  002054  B4D8               	btfsc	status,2,c
 14418  002056  EF2F  F010         	goto	i2u343_41
 14419  00205A  EF31  F010         	goto	i2u343_40
 14420  00205E                     i2u343_41:
 14421  00205E  EFF9  F010         	goto	i2l513
 14422  002062                     i2u343_40:
 14423  002062                     
 14424                           ; BSR set to: 0
 14425                           ;main.c: 473:                 buffer = sdCardBuffer1;
 14426  002062  0EDE               	movlw	low _sdCardBuffer1
 14427  002064  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14428  002066  0E05               	movlw	high _sdCardBuffer1
 14429  002068  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14430  00206A                     
 14431                           ; BSR set to: 0
 14432                           ;main.c: 474:                 bufferIndex = 0;
 14433  00206A  0E00               	movlw	0
 14434  00206C  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14435  00206E  0E00               	movlw	0
 14436  002070  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14437  002072                     
 14438                           ; BSR set to: 0
 14439                           ;main.c: 475:                 state = PLAYBACK;
 14440  002072  0E02               	movlw	2
 14441  002074  6E45               	movwf	myTMR0ISR@state^0,c
 14442  002076  EFF9  F010         	goto	i2l513
 14443  00207A                     i2l4104:
 14444  00207A  0100               	movlb	0	; () banked
 14445  00207C  51D0               	movf	_buffer1Full& (0+255),w,b
 14446  00207E  A4D8               	btfss	status,2,c
 14447  002080  EF44  F010         	goto	i2u344_41
 14448  002084  EF46  F010         	goto	i2u344_40
 14449  002088                     i2u344_41:
 14450  002088  EFF9  F010         	goto	i2l513
 14451  00208C                     i2u344_40:
 14452  00208C                     i2l4112:
 14453                           
 14454                           ;main.c: 485:             EPWM1_LoadDutyValue(buffer[bufferIndex++]);
 14455  00208C  503F               	movf	myTMR0ISR@bufferIndex^0,w,c
 14456  00208E  244A               	addwf	myTMR0ISR@buffer^0,w,c
 14457  002090  6ED9               	movwf	fsr2l,c
 14458  002092  5040               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14459  002094  204B               	addwfc	(myTMR0ISR@buffer+1)^0,w,c
 14460  002096  6EDA               	movwf	fsr2h,c
 14461  002098  50DF               	movf	indf2,w,c
 14462  00209A  6E0B               	movwf	??_myTMR0ISR^0,c
 14463  00209C  500B               	movf	??_myTMR0ISR^0,w,c
 14464  00209E  6E01               	movwf	EPWM1_LoadDutyValue@dutyValue^0,c
 14465  0020A0  6A02               	clrf	(EPWM1_LoadDutyValue@dutyValue+1)^0,c
 14466  0020A2  ECEA  F01A         	call	_EPWM1_LoadDutyValue	;wreg free
 14467  0020A6  4A3F               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14468  0020A8  2A40               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14469  0020AA                     
 14470                           ;main.c: 487:             if(bufferIndex == 512) {
 14471  0020AA  0E02               	movlw	2
 14472  0020AC  1840               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14473  0020AE  103F               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14474  0020B0  A4D8               	btfss	status,2,c
 14475  0020B2  EF5D  F010         	goto	i2u345_41
 14476  0020B6  EF5F  F010         	goto	i2u345_40
 14477  0020BA                     i2u345_41:
 14478  0020BA  EFF9  F010         	goto	i2l513
 14479  0020BE                     i2u345_40:
 14480  0020BE                     
 14481                           ;main.c: 489:                     buffer1Full = 1;
 14482  0020BE  0E01               	movlw	1
 14483  0020C0  0100               	movlb	0	; () banked
 14484  0020C2  6FD0               	movwf	_buffer1Full& (0+255),b
 14485  0020C4                     
 14486                           ; BSR set to: 0
 14487                           ;main.c: 490:                     buffer = sdCardBuffer2;
 14488  0020C4  0EDE               	movlw	low _sdCardBuffer2
 14489  0020C6  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14490  0020C8  0E03               	movlw	high _sdCardBuffer2
 14491  0020CA  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14492  0020CC                     
 14493                           ; BSR set to: 0
 14494                           ;main.c: 491:                     if (buffer2Full)
 14495  0020CC  51CF               	movf	_buffer2Full& (0+255),w,b
 14496  0020CE  B4D8               	btfsc	status,2,c
 14497  0020D0  EF6C  F010         	goto	i2u346_41
 14498  0020D4  EF6E  F010         	goto	i2u346_40
 14499  0020D8                     i2u346_41:
 14500  0020D8  EF70  F010         	goto	i2l497
 14501  0020DC                     i2u346_40:
 14502  0020DC                     
 14503                           ; BSR set to: 0
 14504                           ;main.c: 492:                         state = MIC_AWAIT_BUFFER;
 14505  0020DC  0E03               	movlw	3
 14506  0020DE  6E45               	movwf	myTMR0ISR@state^0,c
 14507  0020E0                     i2l497:
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;main.c: 499:                 useBuffer1 = !useBuffer1;
 14511  0020E0  500F               	movf	myTMR0ISR@useBuffer1^0,w,c
 14512  0020E2  B4D8               	btfsc	status,2,c
 14513  0020E4  EF76  F010         	goto	i2u347_41
 14514  0020E8  EF79  F010         	goto	i2u347_40
 14515  0020EC                     i2u347_41:
 14516  0020EC  0E01               	movlw	1
 14517  0020EE  EF7A  F010         	goto	i2u348_40
 14518  0020F2                     i2u347_40:
 14519  0020F2  0E00               	movlw	0
 14520  0020F4                     i2u348_40:
 14521  0020F4  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14522                           
 14523                           ;main.c: 500:                 bufferIndex = 0;
 14524  0020F6  0E00               	movlw	0
 14525  0020F8  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14526  0020FA  0E00               	movlw	0
 14527  0020FC  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14528                           
 14529                           ;main.c: 501:                 if (stopPlayback) {
 14530  0020FE  5046               	movf	_stopPlayback^0,w,c
 14531  002100  B4D8               	btfsc	status,2,c
 14532  002102  EF85  F010         	goto	i2u349_41
 14533  002106  EF87  F010         	goto	i2u349_40
 14534  00210A                     i2u349_41:
 14535  00210A  EFF9  F010         	goto	i2l513
 14536  00210E                     i2u349_40:
 14537  00210E                     
 14538                           ; BSR set to: 0
 14539                           ;main.c: 502:                     state = IDLE;
 14540  00210E  0E00               	movlw	0
 14541  002110  6E45               	movwf	myTMR0ISR@state^0,c
 14542                           
 14543                           ;main.c: 503:                     doPlayback = 0;
 14544  002112  0E00               	movlw	0
 14545  002114  6FCD               	movwf	_doPlayback& (0+255),b
 14546  002116  EFF9  F010         	goto	i2l513
 14547  00211A                     i2l4138:
 14548  00211A  0100               	movlb	0	; () banked
 14549  00211C  51D0               	movf	_buffer1Full& (0+255),w,b
 14550  00211E  A4D8               	btfss	status,2,c
 14551  002120  EF94  F010         	goto	i2u350_41
 14552  002124  EF96  F010         	goto	i2u350_40
 14553  002128                     i2u350_41:
 14554  002128  EFF9  F010         	goto	i2l513
 14555  00212C                     i2u350_40:
 14556  00212C                     i2l4146:
 14557                           
 14558                           ;main.c: 516:             buffer[bufferIndex++] = mic;
 14559  00212C  503F               	movf	myTMR0ISR@bufferIndex^0,w,c
 14560  00212E  244A               	addwf	myTMR0ISR@buffer^0,w,c
 14561  002130  6ED9               	movwf	fsr2l,c
 14562  002132  5040               	movf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14563  002134  204B               	addwfc	(myTMR0ISR@buffer+1)^0,w,c
 14564  002136  6EDA               	movwf	fsr2h,c
 14565  002138  C00D  FFDF         	movff	myTMR0ISR@mic,indf2
 14566  00213C  4A3F               	infsnz	myTMR0ISR@bufferIndex^0,f,c
 14567  00213E  2A40               	incf	(myTMR0ISR@bufferIndex+1)^0,f,c
 14568  002140                     
 14569                           ;main.c: 518:             if(bufferIndex == 512) {
 14570  002140  0E02               	movlw	2
 14571  002142  1840               	xorwf	(myTMR0ISR@bufferIndex+1)^0,w,c
 14572  002144  103F               	iorwf	myTMR0ISR@bufferIndex^0,w,c
 14573  002146  A4D8               	btfss	status,2,c
 14574  002148  EFA8  F010         	goto	i2u351_41
 14575  00214C  EFAA  F010         	goto	i2u351_40
 14576  002150                     i2u351_41:
 14577  002150  EFF9  F010         	goto	i2l513
 14578  002154                     i2u351_40:
 14579  002154                     
 14580                           ;main.c: 520:                     buffer1Full = 1;
 14581  002154  0E01               	movlw	1
 14582  002156  0100               	movlb	0	; () banked
 14583  002158  6FD0               	movwf	_buffer1Full& (0+255),b
 14584  00215A                     
 14585                           ; BSR set to: 0
 14586                           ;main.c: 521:                     buffer = sdCardBuffer2;
 14587  00215A  0EDE               	movlw	low _sdCardBuffer2
 14588  00215C  6E4A               	movwf	myTMR0ISR@buffer^0,c
 14589  00215E  0E03               	movlw	high _sdCardBuffer2
 14590  002160  6E4B               	movwf	(myTMR0ISR@buffer+1)^0,c
 14591  002162                     
 14592                           ; BSR set to: 0
 14593                           ;main.c: 522:                     if (buffer2Full)
 14594  002162  51CF               	movf	_buffer2Full& (0+255),w,b
 14595  002164  B4D8               	btfsc	status,2,c
 14596  002166  EFB7  F010         	goto	i2u352_41
 14597  00216A  EFB9  F010         	goto	i2u352_40
 14598  00216E                     i2u352_41:
 14599  00216E  EFBB  F010         	goto	i2l510
 14600  002172                     i2u352_40:
 14601  002172                     
 14602                           ; BSR set to: 0
 14603                           ;main.c: 523:                         state = MIC_AWAIT_BUFFER;
 14604  002172  0E03               	movlw	3
 14605  002174  6E45               	movwf	myTMR0ISR@state^0,c
 14606  002176                     i2l510:
 14607                           
 14608                           ; BSR set to: 0
 14609                           ;main.c: 530:                 useBuffer1 = !useBuffer1;
 14610  002176  500F               	movf	myTMR0ISR@useBuffer1^0,w,c
 14611  002178  B4D8               	btfsc	status,2,c
 14612  00217A  EFC1  F010         	goto	i2u353_41
 14613  00217E  EFC4  F010         	goto	i2u353_40
 14614  002182                     i2u353_41:
 14615  002182  0E01               	movlw	1
 14616  002184  EFC5  F010         	goto	i2u354_40
 14617  002188                     i2u353_40:
 14618  002188  0E00               	movlw	0
 14619  00218A                     i2u354_40:
 14620  00218A  6E0F               	movwf	myTMR0ISR@useBuffer1^0,c
 14621                           
 14622                           ;main.c: 531:                 bufferIndex = 0;
 14623  00218C  0E00               	movlw	0
 14624  00218E  6E40               	movwf	(myTMR0ISR@bufferIndex+1)^0,c
 14625  002190  0E00               	movlw	0
 14626  002192  6E3F               	movwf	myTMR0ISR@bufferIndex^0,c
 14627                           
 14628                           ;main.c: 532:                 if (stopCollect) {
 14629  002194  5047               	movf	_stopCollect^0,w,c
 14630  002196  B4D8               	btfsc	status,2,c
 14631  002198  EFD0  F010         	goto	i2u355_41
 14632  00219C  EFD2  F010         	goto	i2u355_40
 14633  0021A0                     i2u355_41:
 14634  0021A0  EFF9  F010         	goto	i2l513
 14635  0021A4                     i2u355_40:
 14636  0021A4                     
 14637                           ; BSR set to: 0
 14638                           ;main.c: 533:                     collecting = 0;
 14639  0021A4  0E00               	movlw	0
 14640  0021A6  6FCE               	movwf	_collecting& (0+255),b
 14641                           
 14642                           ;main.c: 534:                     state = IDLE;
 14643  0021A8  0E00               	movlw	0
 14644  0021AA  6E45               	movwf	myTMR0ISR@state^0,c
 14645  0021AC  EFF9  F010         	goto	i2l513
 14646  0021B0                     i2l4174:
 14647  0021B0  5045               	movf	myTMR0ISR@state^0,w,c
 14648  0021B2  6E0B               	movwf	??_myTMR0ISR^0,c
 14649  0021B4  6A0C               	clrf	(??_myTMR0ISR+1)^0,c
 14650                           
 14651                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14652                           ; Switch size 1, requested type "simple"
 14653                           ; Number of cases is 1, Range of values is 0 to 0
 14654                           ; switch strategies available:
 14655                           ; Name         Instructions Cycles
 14656                           ; simple_byte            4     3 (average)
 14657                           ;	Chosen strategy is simple_byte
 14658  0021B6  500C               	movf	(??_myTMR0ISR+1)^0,w,c
 14659  0021B8  0A00               	xorlw	0	; case 0
 14660  0021BA  B4D8               	btfsc	status,2,c
 14661  0021BC  EFE2  F010         	goto	i2l6526
 14662  0021C0  EFF9  F010         	goto	i2l513
 14663  0021C4                     i2l6526:
 14664                           
 14665                           ; Switch size 1, requested type "simple"
 14666                           ; Number of cases is 5, Range of values is 0 to 4
 14667                           ; switch strategies available:
 14668                           ; Name         Instructions Cycles
 14669                           ; simple_byte           16     9 (average)
 14670                           ;	Chosen strategy is simple_byte
 14671  0021C4  500B               	movf	??_myTMR0ISR^0,w,c
 14672  0021C6  0A00               	xorlw	0	; case 0
 14673  0021C8  B4D8               	btfsc	status,2,c
 14674  0021CA  EF0F  F010         	goto	i2l4084
 14675  0021CE  0A01               	xorlw	1	; case 1
 14676  0021D0  B4D8               	btfsc	status,2,c
 14677  0021D2  EF3D  F010         	goto	i2l4104
 14678  0021D6  0A03               	xorlw	3	; case 2
 14679  0021D8  B4D8               	btfsc	status,2,c
 14680  0021DA  EF46  F010         	goto	i2l4112
 14681  0021DE  0A01               	xorlw	1	; case 3
 14682  0021E0  B4D8               	btfsc	status,2,c
 14683  0021E2  EF8D  F010         	goto	i2l4138
 14684  0021E6  0A07               	xorlw	7	; case 4
 14685  0021E8  B4D8               	btfsc	status,2,c
 14686  0021EA  EF96  F010         	goto	i2l4146
 14687  0021EE  EFF9  F010         	goto	i2l513
 14688  0021F2                     i2l513:
 14689  0021F2  0012               	return		;funcret
 14690  0021F4                     __end_of_myTMR0ISR:
 14691                           	callstack 0
 14692                           
 14693 ;; *************** function i2_TMR0_WriteTimer *****************
 14694 ;; Defined at:
 14695 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  timerVal        2    8[COMRAM] unsigned short 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;		None
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  1    wreg      void 
 14702 ;; Registers used:
 14703 ;;		wreg, status,2
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/0
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14713 ;;Total ram usage:        2 bytes
 14714 ;; Hardware stack levels used:    1
 14715 ;; This function calls:
 14716 ;;		Nothing
 14717 ;; This function is called by:
 14718 ;;		_myTMR0ISR
 14719 ;; This function uses a non-reentrant model
 14720 ;;
 14721                           
 14722                           	psect	text58
 14723  0037DE                     __ptext58:
 14724                           	callstack 0
 14725  0037DE                     i2_TMR0_WriteTimer:
 14726                           	callstack 17
 14727  0037DE                     
 14728                           ;mcc_generated_files/tmr0.c: 122: void TMR0_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr0.c: 123: {;mcc_generated_files/tmr0.c: 125:     TMR0H = timerVal >> 8;
 14729  0037DE  500A               	movf	(i2TMR0_WriteTimer@timerVal+1)^0,w,c
 14730  0037E0  6ED7               	movwf	215,c	;volatile
 14731  0037E2                     
 14732                           ;mcc_generated_files/tmr0.c: 126:     TMR0L = (uint8_t) timerVal;
 14733  0037E2  C009  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
 14734  0037E6  0012               	return		;funcret
 14735  0037E8                     __end_ofi2_TMR0_WriteTimer:
 14736                           	callstack 0
 14737                           
 14738 ;; *************** function _TMR0_ReadTimer *****************
 14739 ;; Defined at:
 14740 ;;		line 109 in file "mcc_generated_files/tmr0.c"
 14741 ;; Parameters:    Size  Location     Type
 14742 ;;		None
 14743 ;; Auto vars:     Size  Location     Type
 14744 ;;  readVal         2    4[COMRAM] unsigned short 
 14745 ;;  readValHigh     1    7[COMRAM] unsigned char 
 14746 ;;  readValLow      1    6[COMRAM] unsigned char 
 14747 ;; Return value:  Size  Location     Type
 14748 ;;                  2    0[COMRAM] unsigned short 
 14749 ;; Registers used:
 14750 ;;		wreg, status,2
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14757 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14760 ;;Total ram usage:        8 bytes
 14761 ;; Hardware stack levels used:    1
 14762 ;; This function calls:
 14763 ;;		Nothing
 14764 ;; This function is called by:
 14765 ;;		_myTMR0ISR
 14766 ;; This function uses a non-reentrant model
 14767 ;;
 14768                           
 14769                           	psect	text59
 14770  0036EC                     __ptext59:
 14771                           	callstack 0
 14772  0036EC                     _TMR0_ReadTimer:
 14773                           	callstack 17
 14774  0036EC                     
 14775                           ;mcc_generated_files/tmr0.c: 111:     uint16_t readVal;;mcc_generated_files/tmr0.c: 112:
      +                               uint8_t readValLow;;mcc_generated_files/tmr0.c: 113:     uint8_t readValHigh;;mcc_g
      +                          enerated_files/tmr0.c: 115:     readValLow = TMR0L;
 14776  0036EC  CFD6 F007          	movff	4054,TMR0_ReadTimer@readValLow	;volatile
 14777                           
 14778                           ;mcc_generated_files/tmr0.c: 116:     readValHigh = TMR0H;
 14779  0036F0  CFD7 F008          	movff	4055,TMR0_ReadTimer@readValHigh	;volatile
 14780  0036F4                     
 14781                           ;mcc_generated_files/tmr0.c: 117:     readVal = ((uint16_t)readValHigh << 8) + readValLo
      +                          w;
 14782  0036F4  5008               	movf	TMR0_ReadTimer@readValHigh^0,w,c
 14783  0036F6  6E03               	movwf	??_TMR0_ReadTimer^0,c
 14784  0036F8  5007               	movf	TMR0_ReadTimer@readValLow^0,w,c
 14785  0036FA  6E05               	movwf	TMR0_ReadTimer@readVal^0,c
 14786  0036FC  C003  F006         	movff	??_TMR0_ReadTimer,TMR0_ReadTimer@readVal+1
 14787  003700                     
 14788                           ;mcc_generated_files/tmr0.c: 119:     return readVal;
 14789  003700  C005  F001         	movff	TMR0_ReadTimer@readVal,?_TMR0_ReadTimer
 14790  003704  C006  F002         	movff	TMR0_ReadTimer@readVal+1,?_TMR0_ReadTimer+1
 14791  003708  0012               	return		;funcret
 14792  00370A                     __end_of_TMR0_ReadTimer:
 14793                           	callstack 0
 14794                           
 14795 ;; *************** function _EPWM1_LoadDutyValue *****************
 14796 ;; Defined at:
 14797 ;;		line 90 in file "mcc_generated_files/epwm1.c"
 14798 ;; Parameters:    Size  Location     Type
 14799 ;;  dutyValue       2    0[COMRAM] unsigned short 
 14800 ;; Auto vars:     Size  Location     Type
 14801 ;;		None
 14802 ;; Return value:  Size  Location     Type
 14803 ;;                  1    wreg      void 
 14804 ;; Registers used:
 14805 ;;		wreg, status,2, status,0
 14806 ;; Tracked objects:
 14807 ;;		On entry : 0/0
 14808 ;;		On exit  : 0/0
 14809 ;;		Unchanged: 0/0
 14810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14815 ;;Total ram usage:        4 bytes
 14816 ;; Hardware stack levels used:    1
 14817 ;; This function calls:
 14818 ;;		Nothing
 14819 ;; This function is called by:
 14820 ;;		_myTMR0ISR
 14821 ;; This function uses a non-reentrant model
 14822 ;;
 14823                           
 14824                           	psect	text60
 14825  0035D4                     __ptext60:
 14826                           	callstack 0
 14827  0035D4                     _EPWM1_LoadDutyValue:
 14828                           	callstack 17
 14829  0035D4                     
 14830                           ;mcc_generated_files/epwm1.c: 90: void EPWM1_LoadDutyValue(uint16_t dutyValue);mcc_gener
      +                          ated_files/epwm1.c: 91: {;mcc_generated_files/epwm1.c: 93:     CCPR1L = ((dutyValue & 0x
      +                          03FC)>>2);
 14831  0035D4  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14832  0035D8  C002  F004         	movff	EPWM1_LoadDutyValue@dutyValue+1,??_EPWM1_LoadDutyValue+1
 14833  0035DC  90D8               	bcf	status,0,c
 14834  0035DE  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14835  0035E0  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14836  0035E2  90D8               	bcf	status,0,c
 14837  0035E4  3204               	rrcf	(??_EPWM1_LoadDutyValue+1)^0,f,c
 14838  0035E6  3203               	rrcf	??_EPWM1_LoadDutyValue^0,f,c
 14839  0035E8  5003               	movf	??_EPWM1_LoadDutyValue^0,w,c
 14840  0035EA  6EBE               	movwf	190,c	;volatile
 14841                           
 14842                           ;mcc_generated_files/epwm1.c: 96:     CCP1CON = ((uint8_t)(CCP1CON & 0xCF) | ((dutyValue
      +                           & 0x0003)<<4));
 14843  0035EC  C001  F003         	movff	EPWM1_LoadDutyValue@dutyValue,??_EPWM1_LoadDutyValue
 14844  0035F0  0E03               	movlw	3
 14845  0035F2  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14846  0035F4  3A03               	swapf	??_EPWM1_LoadDutyValue^0,f,c
 14847  0035F6  0EF0               	movlw	240
 14848  0035F8  1603               	andwf	??_EPWM1_LoadDutyValue^0,f,c
 14849  0035FA  50BD               	movf	189,w,c	;volatile
 14850  0035FC  0BCF               	andlw	207
 14851  0035FE  1003               	iorwf	??_EPWM1_LoadDutyValue^0,w,c
 14852  003600  6EBD               	movwf	189,c	;volatile
 14853  003602  0012               	return		;funcret
 14854  003604                     __end_of_EPWM1_LoadDutyValue:
 14855                           	callstack 0
 14856                           
 14857                           	psect	text61
 14858  000000                     __ptext61:
 14859                           	callstack 0
 14860  000000                     
 14861                           	psect	rparam
 14862  0000                     
 14863                           	psect	temp
 14864  00004C                     btemp:
 14865                           	callstack 0
 14866  00004C                     	ds	1
 14867  0000                     int$flags	set	btemp
 14868  0000                     wtemp8	set	btemp+1
 14869  0000                     ttemp5	set	btemp+1
 14870  0000                     ttemp6	set	btemp+4
 14871  0000                     ttemp7	set	btemp+8
 14872                           
 14873                           	psect	idloc
 14874                           
 14875                           ;Config register IDLOC0 @ 0x200000
 14876                           ;	unspecified, using default values
 14877  200000                     	org	2097152
 14878  200000  FF                 	db	255
 14879                           
 14880                           ;Config register IDLOC1 @ 0x200001
 14881                           ;	unspecified, using default values
 14882  200001                     	org	2097153
 14883  200001  FF                 	db	255
 14884                           
 14885                           ;Config register IDLOC2 @ 0x200002
 14886                           ;	unspecified, using default values
 14887  200002                     	org	2097154
 14888  200002  FF                 	db	255
 14889                           
 14890                           ;Config register IDLOC3 @ 0x200003
 14891                           ;	unspecified, using default values
 14892  200003                     	org	2097155
 14893  200003  FF                 	db	255
 14894                           
 14895                           ;Config register IDLOC4 @ 0x200004
 14896                           ;	unspecified, using default values
 14897  200004                     	org	2097156
 14898  200004  FF                 	db	255
 14899                           
 14900                           ;Config register IDLOC5 @ 0x200005
 14901                           ;	unspecified, using default values
 14902  200005                     	org	2097157
 14903  200005  FF                 	db	255
 14904                           
 14905                           ;Config register IDLOC6 @ 0x200006
 14906                           ;	unspecified, using default values
 14907  200006                     	org	2097158
 14908  200006  FF                 	db	255
 14909                           
 14910                           ;Config register IDLOC7 @ 0x200007
 14911                           ;	unspecified, using default values
 14912  200007                     	org	2097159
 14913  200007  FF                 	db	255
 14914                           
 14915                           	psect	config
 14916                           
 14917                           ; Padding undefined space
 14918  300000                     	org	3145728
 14919  300000  FF                 	db	255
 14920                           
 14921                           ;Config register CONFIG1H @ 0x300001
 14922                           ;	Oscillator Selection bits
 14923                           ;	FOSC = INTIO67, Internal oscillator block
 14924                           ;	4X PLL Enable
 14925                           ;	PLLCFG = OFF, Oscillator used directly
 14926                           ;	Primary clock enable bit
 14927                           ;	PRICLKEN = ON, Primary clock enabled
 14928                           ;	Fail-Safe Clock Monitor Enable bit
 14929                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14930                           ;	Internal/External Oscillator Switchover bit
 14931                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14932  300001                     	org	3145729
 14933  300001  28                 	db	40
 14934                           
 14935                           ;Config register CONFIG2L @ 0x300002
 14936                           ;	Power-up Timer Enable bit
 14937                           ;	PWRTEN = OFF, Power up timer disabled
 14938                           ;	Brown-out Reset Enable bits
 14939                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14940                           ;	Brown Out Reset Voltage bits
 14941                           ;	BORV = 190, VBOR set to 1.90 V nominal
 14942  300002                     	org	3145730
 14943  300002  1F                 	db	31
 14944                           
 14945                           ;Config register CONFIG2H @ 0x300003
 14946                           ;	Watchdog Timer Enable bits
 14947                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 14948                           ;	Watchdog Timer Postscale Select bits
 14949                           ;	WDTPS = 32768, 1:32768
 14950  300003                     	org	3145731
 14951  300003  3C                 	db	60
 14952                           
 14953                           ; Padding undefined space
 14954  300004                     	org	3145732
 14955  300004  FF                 	db	255
 14956                           
 14957                           ;Config register CONFIG3H @ 0x300005
 14958                           ;	CCP2 MUX bit
 14959                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 14960                           ;	PORTB A/D Enable bit
 14961                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 14962                           ;	P3A/CCP3 Mux bit
 14963                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 14964                           ;	HFINTOSC Fast Start-up
 14965                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 14966                           ;	Timer3 Clock input mux bit
 14967                           ;	T3CMX = PORTC0, T3CKI is on RC0
 14968                           ;	ECCP2 B output mux bit
 14969                           ;	P2BMX = PORTB5, P2B is on RB5
 14970                           ;	MCLR Pin Enable bit
 14971                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 14972  300005                     	org	3145733
 14973  300005  BF                 	db	191
 14974                           
 14975                           ;Config register CONFIG4L @ 0x300006
 14976                           ;	Stack Full/Underflow Reset Enable bit
 14977                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14978                           ;	Single-Supply ICSP Enable bit
 14979                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 14980                           ;	Extended Instruction Set Enable bit
 14981                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14982                           ;	Background Debug
 14983                           ;	DEBUG = OFF, Disabled
 14984  300006                     	org	3145734
 14985  300006  85                 	db	133
 14986                           
 14987                           ; Padding undefined space
 14988  300007                     	org	3145735
 14989  300007  FF                 	db	255
 14990                           
 14991                           ;Config register CONFIG5L @ 0x300008
 14992                           ;	Code Protection Block 0
 14993                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14994                           ;	Code Protection Block 1
 14995                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14996                           ;	Code Protection Block 2
 14997                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14998                           ;	Code Protection Block 3
 14999                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 15000  300008                     	org	3145736
 15001  300008  0F                 	db	15
 15002                           
 15003                           ;Config register CONFIG5H @ 0x300009
 15004                           ;	Boot Block Code Protection bit
 15005                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15006                           ;	Data EEPROM Code Protection bit
 15007                           ;	CPD = OFF, Data EEPROM not code-protected
 15008  300009                     	org	3145737
 15009  300009  C0                 	db	192
 15010                           
 15011                           ;Config register CONFIG6L @ 0x30000A
 15012                           ;	Write Protection Block 0
 15013                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 15014                           ;	Write Protection Block 1
 15015                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 15016                           ;	Write Protection Block 2
 15017                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 15018                           ;	Write Protection Block 3
 15019                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 15020  30000A                     	org	3145738
 15021  30000A  0F                 	db	15
 15022                           
 15023                           ;Config register CONFIG6H @ 0x30000B
 15024                           ;	Configuration Register Write Protection bit
 15025                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15026                           ;	Boot Block Write Protection bit
 15027                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15028                           ;	Data EEPROM Write Protection bit
 15029                           ;	WRTD = OFF, Data EEPROM not write-protected
 15030  30000B                     	org	3145739
 15031  30000B  E0                 	db	224
 15032                           
 15033                           ;Config register CONFIG7L @ 0x30000C
 15034                           ;	Table Read Protection Block 0
 15035                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 15036                           ;	Table Read Protection Block 1
 15037                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15038                           ;	Table Read Protection Block 2
 15039                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 15040                           ;	Table Read Protection Block 3
 15041                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 15042  30000C                     	org	3145740
 15043  30000C  0F                 	db	15
 15044                           
 15045                           ;Config register CONFIG7H @ 0x30000D
 15046                           ;	Boot Block Table Read Protection bit
 15047                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15048  30000D                     	org	3145741
 15049  30000D  40                 	db	64
 15050                           tosu	equ	0xFFF
 15051                           tosh	equ	0xFFE
 15052                           tosl	equ	0xFFD
 15053                           stkptr	equ	0xFFC
 15054                           pclatu	equ	0xFFB
 15055                           pclath	equ	0xFFA
 15056                           pcl	equ	0xFF9
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           indf0	equ	0xFEF
 15064                           postinc0	equ	0xFEE
 15065                           postdec0	equ	0xFED
 15066                           preinc0	equ	0xFEC
 15067                           plusw0	equ	0xFEB
 15068                           fsr0h	equ	0xFEA
 15069                           fsr0l	equ	0xFE9
 15070                           wreg	equ	0xFE8
 15071                           indf1	equ	0xFE7
 15072                           postinc1	equ	0xFE6
 15073                           postdec1	equ	0xFE5
 15074                           preinc1	equ	0xFE4
 15075                           plusw1	equ	0xFE3
 15076                           fsr1h	equ	0xFE2
 15077                           fsr1l	equ	0xFE1
 15078                           bsr	equ	0xFE0
 15079                           indf2	equ	0xFDF
 15080                           postinc2	equ	0xFDE
 15081                           postdec2	equ	0xFDD
 15082                           preinc2	equ	0xFDC
 15083                           plusw2	equ	0xFDB
 15084                           fsr2h	equ	0xFDA
 15085                           fsr2l	equ	0xFD9
 15086                           status	equ	0xFD8

Data Sizes:
    Strings     3301
    Constant    30
    Data        4
    BSS         2240
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     56      75
    BANK0           160     98     115
    BANK1           256     62     222
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1891_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_132(CODE[3]), STR_131(CODE[3]), STR_130(CODE[2]), STR_129(CODE[4]), 
		 -> STR_128(CODE[6]), STR_127(CODE[3]), STR_126(CODE[3]), STR_125(CODE[2]), 
		 -> STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[4]), STR_121(CODE[28]), 
		 -> STR_120(CODE[26]), STR_119(CODE[27]), STR_118(CODE[63]), STR_117(CODE[63]), 
		 -> STR_116(CODE[63]), STR_115(CODE[63]), STR_114(CODE[63]), STR_113(CODE[63]), 
		 -> STR_112(CODE[63]), STR_111(CODE[63]), STR_110(CODE[63]), STR_109(CODE[63]), 
		 -> STR_108(CODE[63]), STR_107(CODE[63]), STR_106(CODE[63]), STR_105(CODE[63]), 
		 -> STR_104(CODE[63]), STR_103(CODE[63]), STR_102(CODE[63]), STR_101(CODE[63]), 
		 -> STR_100(CODE[63]), STR_99(CODE[63]), STR_98(CODE[63]), STR_97(CODE[63]), 
		 -> STR_96(CODE[63]), STR_95(CODE[63]), STR_94(CODE[63]), STR_93(CODE[63]), 
		 -> STR_92(CODE[63]), STR_91(CODE[63]), STR_90(CODE[63]), STR_89(CODE[63]), 
		 -> STR_88(CODE[63]), STR_87(CODE[63]), STR_86(CODE[63]), STR_85(CODE[63]), 
		 -> STR_84(CODE[63]), STR_83(CODE[17]), STR_82(CODE[3]), STR_81(CODE[5]), 
		 -> STR_80(CODE[2]), STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[15]), 
		 -> STR_76(CODE[3]), STR_75(CODE[5]), STR_74(CODE[2]), STR_73(CODE[5]), 
		 -> STR_72(CODE[19]), STR_71(CODE[20]), STR_70(CODE[28]), STR_69(CODE[20]), 
		 -> STR_68(CODE[30]), STR_67(CODE[21]), STR_66(CODE[37]), STR_65(CODE[22]), 
		 -> STR_64(CODE[33]), STR_63(CODE[58]), STR_62(CODE[48]), STR_61(CODE[35]), 
		 -> STR_60(CODE[5]), STR_59(CODE[25]), STR_58(CODE[20]), STR_57(CODE[71]), 
		 -> STR_56(CODE[50]), STR_55(CODE[22]), STR_54(CODE[33]), STR_53(CODE[58]), 
		 -> STR_52(CODE[3]), STR_51(CODE[68]), STR_50(CODE[58]), STR_49(CODE[7]), 
		 -> STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[31]), STR_45(CODE[27]), 
		 -> STR_44(CODE[3]), STR_43(CODE[76]), STR_42(CODE[23]), STR_41(CODE[3]), 
		 -> STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), STR_37(CODE[17]), 
		 -> STR_36(CODE[30]), STR_35(CODE[31]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), 
		 -> STR_28(CODE[44]), STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), 
		 -> STR_24(CODE[43]), STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), 
		 -> STR_20(CODE[52]), STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), 
		 -> STR_16(CODE[15]), STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), 
		 -> STR_12(CODE[5]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), 
		 -> STR_8(CODE[29]), STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[40]), STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_132(CODE[3]), STR_131(CODE[3]), STR_130(CODE[2]), STR_129(CODE[4]), 
		 -> STR_128(CODE[6]), STR_127(CODE[3]), STR_126(CODE[3]), STR_125(CODE[2]), 
		 -> STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[4]), STR_121(CODE[28]), 
		 -> STR_120(CODE[26]), STR_119(CODE[27]), STR_118(CODE[63]), STR_117(CODE[63]), 
		 -> STR_116(CODE[63]), STR_115(CODE[63]), STR_114(CODE[63]), STR_113(CODE[63]), 
		 -> STR_112(CODE[63]), STR_111(CODE[63]), STR_110(CODE[63]), STR_109(CODE[63]), 
		 -> STR_108(CODE[63]), STR_107(CODE[63]), STR_106(CODE[63]), STR_105(CODE[63]), 
		 -> STR_104(CODE[63]), STR_103(CODE[63]), STR_102(CODE[63]), STR_101(CODE[63]), 
		 -> STR_100(CODE[63]), STR_99(CODE[63]), STR_98(CODE[63]), STR_97(CODE[63]), 
		 -> STR_96(CODE[63]), STR_95(CODE[63]), STR_94(CODE[63]), STR_93(CODE[63]), 
		 -> STR_92(CODE[63]), STR_91(CODE[63]), STR_90(CODE[63]), STR_89(CODE[63]), 
		 -> STR_88(CODE[63]), STR_87(CODE[63]), STR_86(CODE[63]), STR_85(CODE[63]), 
		 -> STR_84(CODE[63]), STR_83(CODE[17]), STR_82(CODE[3]), STR_81(CODE[5]), 
		 -> STR_80(CODE[2]), STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[15]), 
		 -> STR_76(CODE[3]), STR_75(CODE[5]), STR_74(CODE[2]), STR_73(CODE[5]), 
		 -> STR_72(CODE[19]), STR_71(CODE[20]), STR_70(CODE[28]), STR_69(CODE[20]), 
		 -> STR_68(CODE[30]), STR_67(CODE[21]), STR_66(CODE[37]), STR_65(CODE[22]), 
		 -> STR_64(CODE[33]), STR_63(CODE[58]), STR_62(CODE[48]), STR_61(CODE[35]), 
		 -> STR_60(CODE[5]), STR_59(CODE[25]), STR_58(CODE[20]), STR_57(CODE[71]), 
		 -> STR_56(CODE[50]), STR_55(CODE[22]), STR_54(CODE[33]), STR_53(CODE[58]), 
		 -> STR_52(CODE[3]), STR_51(CODE[68]), STR_50(CODE[58]), STR_49(CODE[7]), 
		 -> STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[31]), STR_45(CODE[27]), 
		 -> STR_44(CODE[3]), STR_43(CODE[76]), STR_42(CODE[23]), STR_41(CODE[3]), 
		 -> STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), STR_37(CODE[17]), 
		 -> STR_36(CODE[30]), STR_35(CODE[31]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), 
		 -> STR_28(CODE[44]), STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), 
		 -> STR_24(CODE[43]), STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), 
		 -> STR_20(CODE[52]), STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), 
		 -> STR_16(CODE[15]), STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), 
		 -> STR_12(CODE[5]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), 
		 -> STR_8(CODE[29]), STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[40]), STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 76
		 -> STR_132(CODE[3]), STR_131(CODE[3]), STR_130(CODE[2]), STR_129(CODE[4]), 
		 -> STR_128(CODE[6]), STR_127(CODE[3]), STR_126(CODE[3]), STR_125(CODE[2]), 
		 -> STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[4]), STR_121(CODE[28]), 
		 -> STR_120(CODE[26]), STR_119(CODE[27]), STR_118(CODE[63]), STR_117(CODE[63]), 
		 -> STR_116(CODE[63]), STR_115(CODE[63]), STR_114(CODE[63]), STR_113(CODE[63]), 
		 -> STR_112(CODE[63]), STR_111(CODE[63]), STR_110(CODE[63]), STR_109(CODE[63]), 
		 -> STR_108(CODE[63]), STR_107(CODE[63]), STR_106(CODE[63]), STR_105(CODE[63]), 
		 -> STR_104(CODE[63]), STR_103(CODE[63]), STR_102(CODE[63]), STR_101(CODE[63]), 
		 -> STR_100(CODE[63]), STR_99(CODE[63]), STR_98(CODE[63]), STR_97(CODE[63]), 
		 -> STR_96(CODE[63]), STR_95(CODE[63]), STR_94(CODE[63]), STR_93(CODE[63]), 
		 -> STR_92(CODE[63]), STR_91(CODE[63]), STR_90(CODE[63]), STR_89(CODE[63]), 
		 -> STR_88(CODE[63]), STR_87(CODE[63]), STR_86(CODE[63]), STR_85(CODE[63]), 
		 -> STR_84(CODE[63]), STR_83(CODE[17]), STR_82(CODE[3]), STR_81(CODE[5]), 
		 -> STR_80(CODE[2]), STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[15]), 
		 -> STR_76(CODE[3]), STR_75(CODE[5]), STR_74(CODE[2]), STR_73(CODE[5]), 
		 -> STR_72(CODE[19]), STR_71(CODE[20]), STR_70(CODE[28]), STR_69(CODE[20]), 
		 -> STR_68(CODE[30]), STR_67(CODE[21]), STR_66(CODE[37]), STR_65(CODE[22]), 
		 -> STR_64(CODE[33]), STR_63(CODE[58]), STR_62(CODE[48]), STR_61(CODE[35]), 
		 -> STR_60(CODE[5]), STR_59(CODE[25]), STR_58(CODE[20]), STR_57(CODE[71]), 
		 -> STR_56(CODE[50]), STR_55(CODE[22]), STR_54(CODE[33]), STR_53(CODE[58]), 
		 -> STR_52(CODE[3]), STR_51(CODE[68]), STR_50(CODE[58]), STR_49(CODE[7]), 
		 -> STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[31]), STR_45(CODE[27]), 
		 -> STR_44(CODE[3]), STR_43(CODE[76]), STR_42(CODE[23]), STR_41(CODE[3]), 
		 -> STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), STR_37(CODE[17]), 
		 -> STR_36(CODE[30]), STR_35(CODE[31]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), 
		 -> STR_28(CODE[44]), STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), 
		 -> STR_24(CODE[43]), STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), 
		 -> STR_20(CODE[52]), STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), 
		 -> STR_16(CODE[15]), STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), 
		 -> STR_12(CODE[5]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), 
		 -> STR_8(CODE[29]), STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[40]), STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 76
		 -> STR_132(CODE[3]), STR_131(CODE[3]), STR_130(CODE[2]), STR_129(CODE[4]), 
		 -> STR_128(CODE[6]), STR_127(CODE[3]), STR_126(CODE[3]), STR_125(CODE[2]), 
		 -> STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[4]), STR_121(CODE[28]), 
		 -> STR_120(CODE[26]), STR_119(CODE[27]), STR_118(CODE[63]), STR_117(CODE[63]), 
		 -> STR_116(CODE[63]), STR_115(CODE[63]), STR_114(CODE[63]), STR_113(CODE[63]), 
		 -> STR_112(CODE[63]), STR_111(CODE[63]), STR_110(CODE[63]), STR_109(CODE[63]), 
		 -> STR_108(CODE[63]), STR_107(CODE[63]), STR_106(CODE[63]), STR_105(CODE[63]), 
		 -> STR_104(CODE[63]), STR_103(CODE[63]), STR_102(CODE[63]), STR_101(CODE[63]), 
		 -> STR_100(CODE[63]), STR_99(CODE[63]), STR_98(CODE[63]), STR_97(CODE[63]), 
		 -> STR_96(CODE[63]), STR_95(CODE[63]), STR_94(CODE[63]), STR_93(CODE[63]), 
		 -> STR_92(CODE[63]), STR_91(CODE[63]), STR_90(CODE[63]), STR_89(CODE[63]), 
		 -> STR_88(CODE[63]), STR_87(CODE[63]), STR_86(CODE[63]), STR_85(CODE[63]), 
		 -> STR_84(CODE[63]), STR_83(CODE[17]), STR_82(CODE[3]), STR_81(CODE[5]), 
		 -> STR_80(CODE[2]), STR_79(CODE[5]), STR_78(CODE[17]), STR_77(CODE[15]), 
		 -> STR_76(CODE[3]), STR_75(CODE[5]), STR_74(CODE[2]), STR_73(CODE[5]), 
		 -> STR_72(CODE[19]), STR_71(CODE[20]), STR_70(CODE[28]), STR_69(CODE[20]), 
		 -> STR_68(CODE[30]), STR_67(CODE[21]), STR_66(CODE[37]), STR_65(CODE[22]), 
		 -> STR_64(CODE[33]), STR_63(CODE[58]), STR_62(CODE[48]), STR_61(CODE[35]), 
		 -> STR_60(CODE[5]), STR_59(CODE[25]), STR_58(CODE[20]), STR_57(CODE[71]), 
		 -> STR_56(CODE[50]), STR_55(CODE[22]), STR_54(CODE[33]), STR_53(CODE[58]), 
		 -> STR_52(CODE[3]), STR_51(CODE[68]), STR_50(CODE[58]), STR_49(CODE[7]), 
		 -> STR_48(CODE[2]), STR_47(CODE[5]), STR_46(CODE[31]), STR_45(CODE[27]), 
		 -> STR_44(CODE[3]), STR_43(CODE[76]), STR_42(CODE[23]), STR_41(CODE[3]), 
		 -> STR_40(CODE[5]), STR_39(CODE[2]), STR_38(CODE[5]), STR_37(CODE[17]), 
		 -> STR_36(CODE[30]), STR_35(CODE[31]), STR_34(CODE[2]), STR_33(CODE[2]), 
		 -> STR_32(CODE[2]), STR_31(CODE[8]), STR_30(CODE[52]), STR_29(CODE[32]), 
		 -> STR_28(CODE[44]), STR_27(CODE[49]), STR_26(CODE[52]), STR_25(CODE[55]), 
		 -> STR_24(CODE[43]), STR_23(CODE[37]), STR_22(CODE[52]), STR_21(CODE[24]), 
		 -> STR_20(CODE[52]), STR_19(CODE[24]), STR_18(CODE[21]), STR_17(CODE[7]), 
		 -> STR_16(CODE[15]), STR_15(CODE[52]), STR_14(CODE[21]), STR_13(CODE[3]), 
		 -> STR_12(CODE[5]), STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[17]), 
		 -> STR_8(CODE[29]), STR_7(CODE[54]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[40]), STR_3(CODE[9]), STR_2(CODE[21]), STR_1(CODE[9]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    hexDumpBuffer@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer(BIGRAM[512]), 

    SDCARD_WriteBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    SDCARD_ReadBlock@sdCardBuffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), sdCardBuffer(BIGRAM[512]), 

    myTMR0ISR@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> sdCardBuffer2(BIGRAM[512]), sdCardBuffer1(BIGRAM[512]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> myTMR0ISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _SDCARD_WriteBlock->_SPI2_ExchangeByte
    _SDCARD_ReadBlock->_SPI2_ExchangeByte
    _SDCARD_PollWriteComplete->_SPI2_ExchangeByte
    _vfpfcnvrt->_dtoa
    _vfpfcnvrt->_utoa
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _utoa->_pad
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _fputc->_putch
    _putch->_EUSART1_Write
    _atoi->_isspace

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_myTMR0ISR
    _myTMR0ISR->i2_TMR0_WriteTimer
    i2_TMR0_WriteTimer->_TMR0_ReadTimer

Critical Paths under _main in BANK0

    _main->_hexDumpBuffer
    _printAscii->_printf
    _hexDumpBuffer->_printf
    _SDCARD_Initialize->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0  171972
                                             94 BANK0      4     4      0
                                              0 BANK1     62    62      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                  _SDCARD_Initialize
           _SDCARD_PollWriteComplete
                   _SDCARD_ReadBlock
                  _SDCARD_WriteBlock
                         _SPI2_Close
                          _SPI2_Open
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                    _TMR0_WriteTimer
                      _hexDumpBuffer
                   _incrementAddress
                         _printAscii
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printAscii                                           0     0      0   40628
                             _printf
 ---------------------------------------------------------------------------------
 (1) _incrementAddress                                     4     0      4     788
                                             19 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _hexDumpBuffer                                       10     8      2   41418
                                             84 BANK0     10     8      2
                             _printf
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     207
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     574
                     _ADC_Initialize
                   _EPWM1_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     211
                                             21 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     363
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                             19 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EPWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Open                                            2     2      0     124
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SPI2_Close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SDCARD_WriteBlock                                    8     2      6    1908
                                             20 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_ReadBlock                                     8     2      6    1008
                                             20 COMRAM     8     2      6
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_PollWriteComplete                             1     1      0      96
                                             20 COMRAM     1     1      0
                  _SPI2_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SDCARD_Initialize                                    4     4      0   40984
                                             84 BANK0      4     4      0
                  _SPI2_ExchangeByte
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              14     4     10   40628
                                             70 BANK0     14     4     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28643
                                             62 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           46    40      6   28080
                                             31 BANK0     31    25      6
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                39    28     11    7005
                                             48 COMRAM     8     8      0
                                              0 BANK0     31    20     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                             25 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              6     4      2     191
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10    6387
                                             48 COMRAM     8     8      0
                                              0 BANK0     24    14     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     412
                                             19 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     421
                                             19 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    7241
                                             48 COMRAM     8     8      0
                                              0 BANK0     28    18     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    4975
                                             37 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    2046
                                             30 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             37 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             19 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             19 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 8     5      3    2020
                                             30 COMRAM     8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    1546
                                             21 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      62
                                             20 COMRAM     1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART1_Write                                        1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1815
                                             26 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             19 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                             19 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     712
                                             19 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SPI2_ExchangeByte                                    1     1      0      31
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          4     4      0     463
                                             15 COMRAM     4     4      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0     463
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                          _myTMR0ISR *
 ---------------------------------------------------------------------------------
 (13) _myTMR0ISR                                           5     5      0     463
                                             10 COMRAM     5     5      0
                _EPWM1_LoadDutyValue
                     _TMR0_ReadTimer
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (14) i2_TMR0_WriteTimer                                   2     0      2      70
                                              8 COMRAM     2     0      2
                     _TMR0_ReadTimer (ARG)
 ---------------------------------------------------------------------------------
 (14) _TMR0_ReadTimer                                      8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (14) _EPWM1_LoadDutyValue                                 4     2      2     120
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART1_Read
   _EUSART1_is_rx_ready
   _SDCARD_Initialize
     _SPI2_ExchangeByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _SDCARD_PollWriteComplete
     _SPI2_ExchangeByte
   _SDCARD_ReadBlock
     _SPI2_ExchangeByte
   _SDCARD_WriteBlock
     _SPI2_ExchangeByte
   _SPI2_Close
   _SPI2_Open
   _SYSTEM_Initialize
     _ADC_Initialize
     _EPWM1_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI2_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_SetInterruptHandler
   _TMR0_WriteTimer
   _hexDumpBuffer
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _incrementAddress
   _printAscii
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _ctoa
             _fputc
               _putch
                 _EUSART1_Write
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _fputc
             _putch
               _EUSART1_Write
           _isdigit
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART1_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART1_Write
               _strlen
             _toupper
               _islower
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _ctoa
           _fputc
             _putch
               _EUSART1_Write
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _fputc
           _putch
             _EUSART1_Write
         _isdigit
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART1_Write
             _fputs
               _fputc
                 _putch
                   _EUSART1_Write
             _strlen
           _toupper
             _islower

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _myTMR0ISR *
       _EPWM1_LoadDutyValue
       _TMR0_ReadTimer
       i2_TMR0_WriteTimer
         _TMR0_ReadTimer (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     800      37       52.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3E      DE       7       86.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     62      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     38      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19C      12        0.0%
DATA                 0      0     99C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Nov 03 19:52:34 2020

                                            l17 36EA                                              l71 377E  
                                            l63 3414                                              l80 3658  
                                            l90 376A                                              l84 367E  
                                            l87 3758                                              l96 37DC  
                          myTMR0ISR@bufferIndex 003F                            SDCARD_ReadBlock@addr 0015  
                           ___wmul@multiplicand 0016                                 _timer0ReloadVal 0041  
                                hexDumpBuffer@i 00BC                                  hexDumpBuffer@j 00B8  
                                           l111 37BE                                             l114 37D2  
                                           l108 37C8                                             l135 3566  
                                           l219 362E                                             l251 36A4  
                                           l147 37AA                                             l157 37B4  
                                           l173 37A0                                             l254 3716  
                                           l336 0098                                             l257 3724  
                                           l353 03D0                                             l435 0C4E  
                                           l612 3754                                             l516 23DE  
                                           l541 2FCA                                             l349 038E  
                                           l550 373E                                             l374 0630  
                                           l544 37EE                                             l537 3790  
                                           l705 24FA                                             l369 04FA  
                                           l458 10CE                                             l547 372C  
                                           l716 25CA                                             l468 3352  
                                           l549 373A                                             l654 3064  
                                           l719 36CA                                             l680 2924  
                                           l664 3186                                             l833 28EC  
                                           l674 3488                                             l666 3188  
                                           l586 37EA                                             l669 3452  
                                           l846 2BC8                                             l699 2A64  
                                           _PR2 000FBB                                    _startCollect 0048  
                                           _abs 3398                                             _pad 2E5E  
                              main@writeAddress 01C5                                             _sin F2FB  
                               _TMR2_Initialize 3792                                             prod 000FF3  
                                           tosl 000FFD                                             wreg 000FE8  
                                    _TXSTA1bits 000FAC                                     main@address 01C9  
                                   _stopCollect 0047                                            ?_abs 0026  
                                          l1164 2CB8                                            l1157 2C98  
                                          l1501 1B4A                                            l1174 2E5C  
                                          l1510 1BEC                                            l1167 2E3C  
                                          l1503 1B52                                            l1602 275C  
                                          l1450 2D1E                                            l1434 2EA2  
                                          l1524 1D8C                                            l1540 13A0  
                                          l1605 2764                                            l1453 2D60  
                                          l1437 2EE4                                            l1461 18CE  
                                          l1614 3530                                            l1622 330E  
                                          l1526 1DEE                                            l1455 2D8C  
                                          l1439 2F1E                                            l1463 18D6  
                                          l1608 3450                                            l1481 1B10  
                                          l1553 182C                                            l1643 30FA  
                                          l1571 33CE                                            l1651 3396  
                                          l5100 2822                                            l1628 34F8  
                                          l1397 3656                                            l5030 3766  
                                          l5110 2896                                            l5102 2834  
                                          l1574 33D6                                            l1486 1E28  
                                          l1662 32B4                                            l1566 3256  
                                          l1567 325E                                            l5032 37D6  
                                          l5040 3094                                            l5104 2862  
                                          l5112 289C                                            l5120 2A66  
                                          l5200 2E8E                                            l1496 1FF6  
                                          l1488 1E30                                            l6000 00D6  
                                          l1657 359C                                            l1673 34C0  
                                          l5042 30B2                                            l5034 3066  
                                          l5114 28AC                                            l5106 2882  
                                          l5130 2AAA                                            l5122 2A6A  
                                          l5050 3360                                            l5210 2EF2  
                                          l5202 2E9A                                            l6010 010A  
                                          l6002 00E4                                            l1667 32BC  
                                          l5028 3758                                            l5044 30E8  
                                          l5036 3078                                            l5116 28CC  
                                          l5108 2884                                            l5140 2B12  
                                          l5132 2ACA                                            l5124 2A78  
                                          l5052 3372                                            l5060 3578  
                                          l5212 2F06                                            l5204 2EAE  
                                          l5300 18FE                                            l5220 34C2  
                                          l6100 060A                                            l6020 0352  
                                          l6012 011E                                            l6004 00F2  
                                          l5070 36A6                                            l5038 308A  
                                          l5150 2B88                                            l5142 2B40  
                                          l5134 2AE8                                            l5126 2A98  
                                          l5054 3376                                            l5062 3590  
                                          l5206 2EC2                                            l5310 199E  
                                          l5302 1904                                            l6110 067E  
                                          l6102 0620                                            l6022 035C  
                                          l6014 0126                                            l6006 00F6  
                                          l5072 36C2                                            l5080 2778  
                                          l5152 2BA8                                            l5144 2B60  
                                          l5136 2AF0                                            l5128 2A9C  
                                          l5216 3398                                            l5048 3354  
                                          l5056 3568                                            l5208 2EC6  
                                          l5320 1A4A                                            l5312 19A6  
                                          l5304 190C                                            l5160 2BF4  
                                          l5224 3416                                            l5232 3296  
                                          l5400 1BB4                                            l6200 09DE  
                                          l6120 06DC                                            l6112 0684  
                                          l6104 0640                                            l6040 03C6  
                                          l6032 0394                                            l6016 013E  
                                          l6008 00FC                                            l5250 3308  
                                          l5242 32BE                                            l5090 27CE  
                                          l5082 2798                                            l5146 2B72  
                                          l5138 2B04                                            l5218 33B2  
                                          l5058 3574                                            l5330 1AAC  
                                          l5322 1A64                                            l5314 19AC  
                                          l5306 1916                                            l5170 2C5E  
                                          l5162 2BFC                                            l5066 348A  
                                          l5234 32A8                                            l5410 1C32  
                                          l5402 1BD0                                            l6210 0A2A  
                                          l6202 09F2                                            l6130 0752  
                                          l6114 06A8                                            l6106 0650  
                                          l6122 0700                                            l6050 0402  
                                          l6034 039E                                            l6026 0376  
                                          l6018 0342                                            l5244 32C2  
                                          l5260 2CE4                                            l5092 27DA  
                                          l5084 279C                                            l5076 2766  
                                          l5148 2B78                                            l5332 1AB2  
                                          l5340 1AE8                                            l5324 1A7E  
                                          l5308 191C                                            l5316 1A10  
                                          l5172 2C7E                                            l5164 2C10  
                                          l5156 2BCA                                            l5180 2DAC  
                                          l5228 3260                                            l5420 1CA4  
                                          l5404 1BE0                                            l5500 1302  
                                          l6300 0E7A                                            l6220 0A90  
                                          l6212 0A42                                            l6204 09F6  
                                          l6140 0790                                            l6132 0756  
                                          l6124 0714                                            l6116 06BA  
                                          l6108 0662                                            l6060 045E  
                                          l6052 040C                                            l6044 03E0  
                                          l6028 0384                                            l5238 34FA  
                                          l5246 32D6                                            l5270 2D2A  
                                          l5262 2CF2                                            l5254 2CBA  
                                          l5094 27F8                                            l5086 27AA  
                                          l5078 276A                                            l5334 1AC4  
                                          l5318 1A2C                                            l5326 1A8C  
                                          l5174 2C80                                            l5166 2C1E  
                                          l5158 2BD6                                            l5190 2E24  
                                          l5182 2DB4                                            l5350 1E1A  
                                          l5430 1D4A                                            l5422 1CAA  
                                          l5414 1C6C                                            l5510 1320  
                                          l5502 1314                                            l6310 0EDC  
                                          l6302 0E96                                            l6222 0AA6  
                                          l6230 0AE8                                            l6214 0A56  
                                          l6206 09FE                                            l6150 07D0  
                                          l6142 07A0                                            l6134 076C  
                                          l6126 073A                                            l6118 06D6  
                                          l6070 0496                                            l6062 0462  
                                          l6046 03F4                                            l6038 03B8  
                                          ?_pad 0026                                            l5248 3304  
                                          l5272 2D3E                                            l5264 2D04  
                                          l5256 2CCC                                            l5096 2800  
                                          l5088 27CA                                            l5336 1AD0  
                                          l5328 1A9E                                            l5176 2C92  
                                          l5168 2C30                                            l5192 2E36  
                                          l5184 2DC8                                            l5360 1EE8  
                                          l5352 1E58                                            l5344 1DF0  
                                          l5440 1DB0                                            l5432 1D64  
                                          l5424 1CB0                                            l5416 1C7E  
                                          l5408 1C20                                            l6312 0EF6  
                                          l6304 0EBA                                            l6320 0F22  
                                          l6240 0B66                                            l6224 0AB6  
                                          l6216 0A72                                            l6208 0A0E  
                                          l6232 0B0C                                            l6160 084C  
                                          l6152 07EC                                            l6144 07B0  
                                          l6136 0778                                            l6128 074E  
                                          l6080 050A                                            l6072 04AE  
                                          l6056 0422                                            l6048 03F8  
                                          l5450 25E4                                            l5274 2D42  
                                          l5258 2CD8                                            l5098 2814  
                                          l5194 2E5E                                            l5338 1AD8  
                                          l5290 18A6                                            l5282 182E  
                                          l5186 2DD6                                            l5178 2D8E  
                                          l5370 1F8C                                            l5362 1EF0  
                                          l5354 1E62                                            l5346 1DFE  
                                          l5442 1DC6                                            l5434 1D7E  
                                          l5418 1C92                                            l5426 1D0E  
                                          l5530 13D6                                            l5522 1338  
                                          l5514 1326                                            l5506 131A  
                                          l5602 17F4                                            l6330 0FA2  
                                          l6322 0F36                                            l6314 0F0C  
                                          l6306 0EC4                                            l6250 0BC6  
                                          l6242 0B82                                            l6234 0B1E  
                                          l6226 0AD6                                            l6218 0A8A  
                                          l6170 08A8                                            l6162 0852  
                                          l6154 0804                                            l6146 07B6  
                                          l6138 078C                                            l6090 0590  
                                          l6082 053E                                            l6074 04D2  
                                          l6058 044A                                            l6066 046C  
                                          l5700 3678                                            l5452 25E8  
                                          l5276 2D6E                                            l5268 2D16  
                                          l5196 2E6C                                            l5292 18A8  
                                          l5284 184E                                            l5188 2E04  
                                          l5372 1FA6                                            l5364 1EF6  
                                          l5356 1E6C                                            l5348 1E00  
                                          l5436 1D9A                                            l5428 1D2C  
                                          l5380 1B12                                            l5604 181A  
                                          l5540 1456                                            l5532 140C  
                                          l5524 138E                                            l5620 37B6  
                                          l6340 0FE8                                            l6332 0FB0  
                                          l6324 0F5C                                            l6260 0C2E  
                                          l6252 0BE6                                            l6244 0B9A  
                                          l6236 0B3A                                            l6228 0AE6  
                                          l6180 0914                                            l6164 0868  
                                          l6172 08AA                                            l6156 0818  
                                          l6148 07BE                                            l6092 059E  
                                          l6084 054A                                            l6068 047A  
                                          l6076 04D6                                            l5702 367C  
                                          l5470 26A4                                            l5462 2648  
                                          l5454 2606                                            l5446 25CC  
                                          l5278 2D80                                            l5198 2E80  
                                          l5294 18C2                                            l5286 1878  
                                          l5374 1FC0                                            l5358 1E72  
                                          l5366 1F5A                                            l5438 1DA0  
                                          l5390 1B72                                            l5382 1B20  
                                          l5550 150A                                            l5534 141A  
                                          l5526 13AE                                            l5518 132C  
                                          l5630 3212                                            l5622 37CA  
                                          l5710 3680                                            l6350 1022  
                                          l6342 0FFA                                            l6334 0FBE  
                                          l6326 0F70                                            l6318 0F16  
                                          l6270 0C8A                                            l6262 0C3E  
                                          l6254 0BF6                                            l6246 0BA0  
                                          l6238 0B52                                            l6190 0978  
                                          l6182 0928                                            l6166 0878  
                                          l6158 0834                                            l6174 08CE  
                                          l6094 05D4                                            l6086 0568  
                                          l6078 04E6                                            l5480 272E  
                                          l5464 265E                                            l5456 263E  
                                          l5448 25E0                                            l5296 18DE  
                                          l5288 1898                                            l5368 1F6E  
                                          l5376 1FCE                                            l5392 1B92  
                                          l5384 1B22                                            l5560 15BA  
                                          l5544 14A0                                            l5536 1428  
                                          l5528 13B0                                            l5632 3238  
                                          l5640 33F8                                            l5624 37AC  
                                          l5720 3694                                            l5712 3684  
                                          l5800 3332                                            l6520 1230  
                                          l6360 109C                                            l6352 1044  
                                          l6344 0FFE                                            l6336 0FCC  
                                          l6328 0F74                                            l6280 0D04  
                                          l6272 0C94                                            l6264 0C5E  
                                          l6248 0BB6                                            l6256 0BF8  
                                          l6192 0988                                            l6184 0944  
                                          l6176 08E0                                            l6168 0898  
                                          l6096 05E2                                            l6088 0576  
                                          l5482 2740                                            l5474 26DC  
                                          l5466 2666                                            l5458 2642  
                                          l5298 18F0                                            l5394 1B9C  
                                          l5386 1B3C                                            l5554 1526  
                                          l5538 1448                                            l5546 14B2  
                                          l6522 1360                                            l5490 12D0  
                                          l5626 31FC                                            l5810 2FCE  
                                          l5730 37EC                                            l5634 36CC  
                                          l5618 37C0                                            l5642 3404  
                                          l5650 353C                                            l5722 3698  
                                          l5714 3688                                            l5706 37A2  
                                          l5802 3342                                            l6370 1176  
                                          l6362 10AA                                            l6354 1052  
                                          l6346 1004                                            l6338 0FDA  
                                          l6290 0DF2                                            l6282 0D3A  
                                          l6274 0CB4                                            l6266 0C6A  
                                          l6258 0C1C                                            l6194 09A8  
                                          l6186 095C                                            l6178 08FC  
                                          l6098 05FA                                            l6524 268E  
                                          l5468 266E                                            l5396 1BA6  
                                          l5388 1B68                                            l5580 170C  
                                          l5572 169A                                            l5564 15F2  
                                          l5556 154C                                            l5548 14D8  
                                          l5492 12DE                                            l5628 3204  
                                          l5900 2A08                                            l5820 2FEC  
                                          l5812 2FD4                                            l5740 2F98  
                                          l5732 2F22                                            l5644 3410  
                                          l5636 33D8                                            l5652 3552  
                                          l5660 3792                                            l5724 369C  
                                          l5716 368C                                            l5708 37A6  
                                          l6380 11F0                                            l6372 1184  
                                          l6364 10C0                                            l6356 1068  
                                          l6348 100E                                            l6292 0DF6  
                                          l6276 0CDC                                            l6284 0D3E  
                                          l6268 0C7C                                            l6196 09B8  
                                          l6188 0962                                            l5478 271C  
                                          l5398 1BAC                                            l5590 17B8  
                                          l5582 1748                                            l5574 16C0  
                                          l5566 1618                                            l5558 1572  
                                          l5494 12EE                                            l5910 2A26  
                                          l5902 2A0E                                            l5822 2FF2  
                                          l5814 2FDA                                            l5806 2FCC  
                                          l5750 30FE                                            l5742 2FC8  
                                          l5734 2F30                                            l5638 33EC  
                                          l5670 37E8                                            l5654 3554  
                                          l5646 3532                                            l5662 379A  
                                          l5726 36A0                                            l5718 3690  
                                          l6382 1202                                            l6374 119E  
                                          l6366 114C                                            l6358 107A  
                                          l6294 0E06                                            l6286 0D54  
                                          l6278 0CF6                                            l6198 09BA  
                                          l5592 17CC                                            l5576 16E6  
                                          l5568 1662                                            l5496 12F2  
                                          l5488 12AA                                            l5912 2A30  
                                          l5904 2A14                                            l5840 3056  
                                          l5824 2FF8                                            l5816 2FE0  
                                          l5808 2FCC                                            l5760 311C  
                                          l5752 3104                                            l5736 2F70  
                                          l5680 3740                                            l5664 3604  
                                          l5672 3780                                            l5656 3556  
                                          l5648 3534                                            l5920 23E0  
                                          l5728 21F4                                            l6376 11AC  
                                          l6368 1168                                            l6296 0E16  
                                          l6288 0DDE                                            l5690 376C  
                                          l5578 16FE                                            l5586 1784  
                                          l5498 1300                                            l5682 3630  
                                          l5914 2A32                                            l5906 2A1A  
                                          l5850 28FC                                            l5842 3062  
                                          l5834 302C                                            l5826 300E  
                                          l5818 2FE6                                            l5762 3122  
                                          l5754 310A                                            l5746 30FC  
                                          l5738 2F74                                            l5666 3610  
                                          l5674 378C                                            l5658 3562  
                                          l5930 240A                                            l5922 23EE  
                                          l6378 11E2                                            l6298 0E64  
                                          l6386 1218                                            l5588 17AA  
                                          l5596 17DA                                            l5684 363A  
                                          l5916 2A42                                            l5908 2A20  
                                          l5860 2962                                            l5852 2902  
                                          l5844 28F2                                            l5780 3454  
                                          l5836 3040                                            l5828 3024  
                                          l5764 3128                                            l5756 3110  
                                          l5748 30FC                                            l5668 362C  
                                          l5676 378E                                            l5940 2472  
                                          l5932 2428                                            l5694 3658  
                                          l5598 17E8                                            l5918 2A52  
                                          l5870 2992                                            l5862 2972  
                                          l5854 2908                                            l5782 345C  
                                          l5838 3044                                            l5774 315E  
                                          l5766 313E                                            l5758 3116  
                                          l5678 370A                                            l5942 2484  
                                          l5950 24D8                                            l5934 2434  
                                          l5696 3666                                            l5688 3728  
                                          l5880 29B0                                            l5872 2998  
                                          l5864 2984                                            l5856 2926  
                                          l5792 3474                                            l5784 345E  
                                          l5776 3170                                            l5768 3156  
                                          l5960 2542                                            l5952 24EE  
                                          l5944 24A0                                            l5936 2448  
                                          l5928 23F8                                            l5698 366A  
                                          l5890 29E2                                            l5882 29B6  
                                          l5874 299E                                            l5866 2986  
                                          l5858 2960                                            l5794 3486  
                                          l5786 346E                                            l5778 3174  
                                          l5962 2554                                            l5970 25A8  
                                          l5954 251E                                            l5946 24B0  
                                          l5938 2466                                            l5892 29F4  
                                          l5884 29C0                                            l5876 29A4  
                                          l5868 298C                                            l5972 25BE  
                                          l5964 2570                                            l5956 2524  
                                          l5948 24D2                                            l5980 0084  
                                          l5894 29F6                                            l5886 29C2  
                                          l5878 29AA                                            l5966 2580  
                                          l5958 2536                                            l5798 3310  
                                          l5990 00B2                                            l5982 0088  
                                          l5896 29FC                                            l5888 29D2  
                                          l5968 25A2                                            l5992 00B4  
                                          l5984 008A                                            l5898 2A02  
                                          l5994 00B6                                            l5986 0096  
                                          l5978 0052                                            l5996 00BA  
                                          l5988 00A6                                            l5998 00C8  
                                          STR_1 FFBF                                            STR_2 FEE0  
                                          STR_3 FFC8                                            STR_4 FC60  
                                          STR_5 FFF9                                            STR_6 FF7A  
                                          STR_7 FB40                                            STR_8 FDB0  
                                          STR_9 FF90                                            _LATA 000F89  
                                          _LATB 000F8A                                            _LATC 000F8B  
                                          u5000 1862                                            u5010 1878  
                                          u5011 1874                                            u5100 1A8C  
                                          u5020 18A6                                            u5101 1A88  
                                          u5021 18A2                                            u5110 1A9E  
                                          u5030 18C2                                            u5111 1A9A  
                                          u5031 18BE                                            u5120 1AAC  
                                          u5040 18F0                                            u5200 1FCE  
                                          u6000 04FA                                            u5121 1AA8  
                                          u5041 18EC                                            u5201 1FCA  
                                          u6001 04F6                                            u5130 1AC4  
                                          u5050 18FE                                            u5210 1B20  
                                          u5131 1AC0                                            u5051 18FA  
                                          u5211 1B1C                                            u4500 3078  
                                          u5060 1A2C                                            u5140 1DFE  
                                          u5300 1C7E                                            u5220 1B3C  
                                          u6100 07D0                                            u6020 0620  
                                          u4501 3074                                            u5061 1A28  
                                          u5141 1DFA                                            u5301 1C7A  
                                          u5221 1B38                                            u6101 07CC  
                                          u6021 061C                                            u4510 308A  
                                          u5070 1A4A                                            u5150 1E1A  
                                          u5310 1CE8                                            u5230 1B68  
                                          u6110 0804                                            u6030 0662  
                                          u4511 3086                                            u5071 1A46  
                                          u5151 1E16                                            u5231 1B64  
                                          u6111 0800                                            u6031 065E  
                                          u6015 052A                                            u5400 265A  
                                          u4520 30B2                                            u5080 1A64  
                                          u5160 1F6E                                            u5320 1D2C  
                                          u5240 1BD0                                            u6200 0978  
                                          u6120 0818                                            u6040 06BA  
                                          u5401 2656                                            u4521 30AE  
                                          u4601 27D4                                            u5081 1A60  
                                          u5161 1F6A                                            u5321 1D28  
                                          u5241 1BCC                                            u6201 0974  
                                          u6121 0814                                            u6041 06B6  
                                          u5410 2716                                            u4530 30E8  
                                          u4610 27F8                                            u5090 1A7E  
                                          u5170 1F8C                                            u5330 1D4A  
                                          u5250 1C1A                                            u6210 0988  
                                          u6130 084C                                            u6050 0714  
                                          u5411 2710                                            u4531 30E4  
                                          u4611 27F4                                            u5091 1A7A  
                                          u5171 1F88                                            u5331 1D46  
                                          u5315 1CD6                                            u5251 1C14  
                                          u6211 0984                                            u6131 0848  
                                          u6051 0710                                            u5420 2718  
                                          u4620 2822                                            u4700 2B88  
                                          u4540 3396                                            u5180 1FA6  
                                          u5340 1D64                                            u5260 1C1C  
                                          u5500 149A                                            u6300 0B52  
                                          u6220 09F2                                            u6140 0868  
                                          u6060 073A                                            u4621 281E  
                                          u4701 2B84                                            u4541 3392  
                                          u5181 1FA2                                            u5341 1D60  
                                          u5501 1494                                            u6301 0B4E  
                                          u6221 09EE                                            u6141 0864  
                                          u6061 0736                                            u5430 272E  
                                          u4630 2862                                            u4550 3590  
                                          u5190 1FC0                                            u5350 1D7E  
                                          u5270 1C32                                            u5510 149C  
                                          u6310 0B66                                            u6230 0A0E  
                                          u6150 0878                                            u6070 074E  
                                          u5431 272A                                            u4631 285E  
                                          u4551 358C                                            u4711 2BD0  
                                          u5191 1FBC                                            u5351 1D7A  
                                          u5271 1C2E                                            u6311 0B62  
                                          u6231 0A0A                                            u6151 0874  
                                          u6071 074A                                            u5440 2740  
                                          u4640 28AC                                            u4800 2EE4  
                                          u4720 2BF4                                            u4560 34BA  
                                          u5360 1D8C                                            u5280 1C66  
                                          u5520 14B2                                            u5600 3256  
                                          u6400 0DF2                                            u6320 0B9A  
                                          u6240 0A42                                            u6160 08E0  
                                          u6080 0768                                            u5441 273C  
                                          u4641 28A8                                            u4801 2EE0  
                                          u4721 2BF0                                            u4561 34B4  
                                          u5361 1D88                                            u5281 1C60  
                                          u5521 14AE                                            u5601 3252  
                                          u6401 0DEE                                            u6321 0B96  
                                          u6241 0A3E                                            u6161 08DC  
                                          u6081 0764                                            u4490 3766  
                                          u4650 2A78                                            u4810 2EF2  
                                          u4730 2C1E                                            u4570 34BC  
                                          u5370 1D9A                                            u5290 1C68  
                                          u5530 14D8                                            u5450 12D0  
                                          u5610 3724                                            u6410 0E4E  
                                          u6330 0BB6                                            u6250 0A56  
                                          u6170 0914                                            u6090 078C  
                                          u4491 3762                                            u4651 2A74  
                                          u4811 2EEE                                            u4731 2C1A  
                                          u5371 1D96                                            u5531 14D4  
                                          u5451 12CC                                            u5611 3720  
                                          u6331 0BB2                                            u6251 0A52  
                                          u6171 0910                                            u6091 0788  
                                          i2l20 3602                                            u5620 373A  
                                          u4900 352A                                            u5380 2606  
                                          u4580 2778                                            u4660 2AAA  
                                          u4820 33B2                                            u4740 2C5E  
                                          u5540 154C                                            u5460 13A0  
                                          u5700 3332                                            u6420 0ED8  
                                          u6340 0BC6                                            u6260 0A8A  
                                          u6180 0928                                            u5621 3736  
                                          u4901 3524                                            u5381 2602  
                                          u4581 2774                                            u4661 2AA6  
                                          u4821 33AE                                            u4741 2C5A  
                                          u5541 1548                                            u5461 139C  
                                          u5701 332E                                            u6421 0ED4  
                                          u6341 0BC2                                            u6261 0A86  
                                          u6181 0924                                            u5630 377C  
                                          u4910 352C                                            u5390 263E  
                                          u4590 27AA                                            u4670 2AE8  
                                          u4750 2DAC                                            u4830 34F2  
                                          u5550 1572                                            u5470 13AE  
                                          u5710 300E                                            u6430 0F36  
                                          u6350 0C2E                                            u6270 0AA6  
                                          u6190 095C                                            u5631 3776  
                                          u5391 263A                                            u4591 27A6  
                                          u4671 2AE4                                            u4751 2DA8  
                                          u4831 34EC                                            u5551 156E  
                                          u5471 13AA                                            u5711 300A  
                                          u6431 0F32                                            u6415 0E44  
                                          u6351 0C2A                                            u6271 0AA2  
                                          u6191 0958                                            u5640 3666  
                                          u4920 32D6                                            u4680 2B12  
                                          u4760 2DD6                                            u4840 34F4  
                                          u5560 1618                                            u5480 13D6  
                                          u5720 3024                                            u5800 240A  
                                          u6440 0F5C                                            u6360 0C3E  
                                          u6280 0AB6                                            u5641 3662  
                                          u4921 32D2                                            u4681 2B0E  
                                          u4761 2DD2                                            u5561 1614  
                                          u5481 13D2                                            u5721 3020  
                                          u5801 2406                                            u6441 0F58  
                                          u6361 0C3A                                            u6281 0AB2  
                                          u5650 3678                                            u4930 3304  
                                          u4690 2B40                                            u4770 2E04  
                                          u4850 344A                                            u5570 16C0  
                                          u5490 141A                                            u5730 3056  
                                          u5810 2428                                            u6450 0F70  
                                          u6370 0C4E                                            u6290 0B1E  
                                          u5651 3674                                            u4931 3300  
                                          u4691 2B3C                                            u4771 2E00  
                                          u4851 3444                                            u5571 16BC  
                                          u5491 1416                                            u5731 3052  
                                          u5811 2424                                            u6451 0F6C  
                                          u6371 0C4A                                            u6291 0B1A  
                                          u5636 377E                                            u4940 2CCC  
                                          u4780 2E6C                                            u4860 344C  
                                          u5580 16E6                                            u5740 2924  
                                          u5660 2F30                                            u5820 2448  
                                          u6460 1022                                            u6380 0C7C  
                                          u5900 011E                                            u4941 2CC8  
                                          u4781 2E68                                            u5581 16E2  
                                          u5741 2920                                            u5661 2F2C  
                                          u5821 2444                                            u6461 101E  
                                          u6381 0C78                                            u5901 011A  
                                          u4950 2CF2                                            u4790 2E8E  
                                          u4870 3290                                            u5590 17AA  
                                          u5750 2972                                            u5670 313E  
                                          u5830 2466                                            u6470 1044  
                                          u6390 0D50                                            u5910 018C  
                                          u4951 2CEE                                            u4791 2E8A  
                                          u4871 328A                                            u5591 17A6  
                                          u5751 296E                                            u5671 313A  
                                          u5831 2462                                            u6471 1040  
                                          u6391 0D4C                                            u4960 2D12  
                                          u4880 3292                                            u5760 29D2  
                                          u5680 3186                                            u5840 24A0  
                                          u6480 109C                                            u4961 2D0E  
                                          u5761 29CE                                            u5681 3182  
                                          u5841 249C                                            u6481 1098  
                                          u4970 2D60                                            u4890 32A8  
                                          u5770 29E2                                            u5690 346E  
                                          u5850 24EE                                            u5930 0372  
                                          u4971 2D5C                                            u4891 32A4  
                                          u5771 29DE                                            u5691 346A  
                                          u5851 24EA                                            u5931 036E  
                                          u5915 0182                                            u4980 2D6E  
                                          u5780 2A42                                            u5860 2536  
                                          u5940 03B4                                            u4981 2D6A  
                                          u5781 2A3E                                            u5861 2532  
                                          u5941 03B0                                            u5925 0236  
                                          u4990 1860                                            u5790 2A52  
                                          u5870 2570                                            u5950 03F4  
                                          u4991 185A                                            u5791 2A4E  
                                          u5871 256C                                            u5951 03F0  
                                          u5880 25BE                                            u5960 041E  
                                          u5881 25BA                                            u5961 041A  
                                          u5970 045E                                            u5890 00A6  
                                          u5971 045A                                            u5891 00A2  
                                          u5980 04AE                                            u5981 04AA  
                                          u5990 04E6                                            u5991 04E2  
                                          _TMR2 000FBC                                            _WPUB 000F61  
                                 _EUSART1_Write 3756                                            abs@a 0026  
                                          _dbuf 0180                                            _atoi 25CC  
                                          _ctoa 2CBA                                            _main 0052  
                                          _dtoa 182E                                   ?_EUSART1_Read 0001  
                                          _prec 003B                                            _nout 00C2  
                                          pad@i 002D                                            pad@p 002A  
                                          fsr1h 000FE2                                            fsr2h 000FDA  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          pad@w 002F                                            fsr2l 000FD9  
                                          btemp 004C                                            _utoa 1DF0  
                                          _xtoa 1B12                                            prodh 000FF4  
                                          prodl 000FF3                                 ??_hexDumpBuffer 00B6  
                                          start 004E                           ??_EPWM1_LoadDutyValue 0003  
                     __size_of_SDCARD_ReadBlock 009A                                    ___param_bank 000000  
                                         ??_abs 0028                                           ??_pad 002C  
                       __end_of_TMR0_Initialize 3568                  ??_TMR0_DefaultInterruptHandler 0001  
                __size_of_OSCILLATOR_Initialize 001C                   __end_of_OSCILLATOR_Initialize 3726  
                               __end_of___aodiv 28EE                                           ?_atoi 001B  
                                   ?_SPI2_Close 0001                                           ?_ctoa 001F  
                                         ?_main 0001                                           ?_dtoa 0060  
                               __end_of___aomod 2BCA                                           STR_10 FFED  
                                         STR_11 FFFC                                           STR_20 FB42  
                                         STR_12 FFED                                           STR_13 FFAD  
                                         STR_21 FE6E                                           STR_30 FB42  
                                         STR_22 FB42                                           STR_14 FF0A  
                                         STR_15 FB42                                           STR_31 FFD1  
                                         STR_23 FCAD                                           STR_32 FFF4  
                                         STR_40 FFED                                           STR_16 FFB0  
                                         STR_24 FC35                                           STR_33 FFF4  
                                         STR_41 FFAD                                           STR_17 FFD9  
                                         STR_25 FB09                                           STR_26 FB42  
                                         STR_34 F363                                           STR_18 FEF5  
                                         STR_42 FE9E                                           STR_50 FA95  
                                         STR_19 FE86                                           STR_35 FD36  
                                         STR_27 FBA8                                           STR_51 F3AC  
                                         STR_43 F319                                           STR_52 FFAD  
                                         STR_44 FFAD                                           STR_60 FD8D  
                                         STR_36 FD74                                           STR_28 FC09  
                                         STR_37 FF7F                                           STR_45 FE20  
                                         STR_29 FD16                                           STR_61 FCD2  
                                         STR_53 FACF                                           STR_38 FFED  
                                         STR_70 FDE9                                           STR_46 FD55  
                                         STR_54 FCF5                                           STR_62 FBD9  
                                         STR_63 FACF                                           STR_39 FFFC  
                                         STR_47 FFED                                           STR_71 FF33  
                                         STR_55 FEB5                                           STR_64 FCF5  
                                         STR_80 FFFC                                           STR_48 FFFC  
                                         STR_72 FF5B                                           STR_56 FB76  
                                         STR_65 FEB5                                           STR_81 FFED  
                                         STR_73 FFED                                           STR_49 FFE0  
                                         STR_57 F365                                           STR_82 FFAD  
                                         STR_74 FFFC                                           STR_58 FF47  
                                         STR_66 FC88                                           STR_90 F56A  
                                         STR_75 FFED                                           STR_83 FF6E  
                                         STR_67 FECB                                           STR_59 FE55  
                                         STR_91 F5E8                                           STR_76 FFAD  
                                         STR_68 FD92                                           STR_92 F666  
                                         STR_84 F3F0                                           STR_77 FFA1  
                                         STR_69 FF1F                                           STR_93 F6E4  
                                         STR_85 F42F                                           STR_78 FF7F  
                                         STR_94 F723                                           STR_86 F46E  
                                         STR_79 FFED                                           STR_95 F7A1  
                                         STR_87 F4AD                                           STR_96 F85E  
                                         STR_88 F4EC                                           STR_97 F89D  
                                         STR_89 F52B                                           STR_98 F95A  
                                         STR_99 F999                       TMR0_ReadTimer@readValHigh 0008  
                                         ?_utoa 0060                                           _T0CON 000FD5  
                               __end_of___lodiv 2CBA                                           ?_xtoa 0060  
                                         _T2CON 000FBA                                 __end_of___lomod 2E5E  
                                         i2l144 3708                                           i2l160 37F4  
                                         i2l154 35D2                                           i2l147 37E6  
                               _TMR0_WriteTimer 37A2                                           i2l510 2176  
                                         i2l513 21F2                                           i2l497 20E0  
                                         i2l593 003A                                    vfpfcnvrt@fmt 0081  
                                         _TMR0H 000FD7                                    vfpfcnvrt@llu 0095  
                                         _TMR0L 000FD6                                           _TRISA 000F92  
                                         _TRISB 000F93                                           _TRISC 000F94  
                                  _stopPlayback 0046               __size_of_TMR0_SetInterruptHandler 000A  
                            __size_of_SPI2_Open 00AC                       ?_TMR0_SetInterruptHandler 0014  
                              __end_of_TMR0_ISR 35D4                                    main@sinIndex 00CC  
                                         _flags 003D                                           _fputc 3066  
                               __end_of_isalpha 3452                                           _fputs 3354  
                               __end_of_isdigit 3532                                           atoi@n 0028  
                                         pad@fp 0026                                           atoi@s 001B  
                                         _width 0039                                           ctoa@c 0021  
                                         _putch 37D4                                           ctoa@l 0023  
                                         ctoa@w 0025                                           main@i 01CE  
                                         main@j 01AF                                           dtoa@d 0062  
                                         dtoa@i 007A                                           dtoa@n 0072  
                                         dtoa@p 006C                                           dtoa@s 0070  
                                         dtoa@w 006E                                 __end_of_islower 34C2  
                               __end_of_isspace 3310                                  ?_EUSART1_Write 0001  
                               __end_of_isupper 34FA                                           pclath 000FFA  
                                  main@printVal 01A5                                           tablat 000FF5  
                                ??_EUSART1_Read 0014                                           ttemp5 004D  
                                         ttemp6 0050                                           ttemp7 0054  
                                         utoa@d 0062                                           utoa@i 0076  
                                         utoa@n 006E                                           utoa@p 006A  
                                         utoa@w 006C                                           status 000FD8  
                                         wtemp8 004D                                           xtoa@c 007D  
                                         xtoa@d 0062                                           xtoa@i 007B  
                                         xtoa@n 0073                                           xtoa@p 006F  
                                         xtoa@w 0071                                           xtoa@x 006A  
                               __end_of_toupper 32BE                                ___lodiv@dividend 0014  
            _EUSART1_DefaultFramingErrorHandler 000000                             myTMR0ISR@useBuffer1 000F  
                                  _toupper$2117 0020                                 __initialization 318A  
                  SDCARD_ReadBlock@sdCardBuffer 0019                                    __end_of_atoi 2766  
                                  __end_of_ctoa 2D8E                      __end_of_EUSART1_Initialize 3416  
                                  __end_of_main 12AA                                    __end_of_dtoa 1B12  
                                  __end_of_utoa 1FF8                               _SPI2_ExchangeByte 3726  
                                  __end_of_xtoa 1DF0               __size_of_SDCARD_PollWriteComplete 0038  
                     ?_SDCARD_PollWriteComplete 0001                         __end_of_TMR2_Initialize 37A2  
                   ?_INTERRUPT_InterruptManager 0001                              ?_SPI2_ExchangeByte 0001  
                                        ??_atoi 001D                                          ??_ctoa 0022  
                                        ??_main 00BE                                          ??_dtoa 0031  
                                        ??_utoa 0031                                          ??_xtoa 0031  
                                 __activetblptr 000003                        __size_of_SPI2_Initialize 0012  
                              ___lodiv@quotient 0024                             ??_SPI2_ExchangeByte 0014  
                                  myTMR0ISR@mic 000D                                          _ADCON0 000FC2  
                                        _ADCON1 000FC1                                          _ADCON2 000FC0  
                                        ?_fputc 0016                                          STR_100 F9D8  
                                        STR_101 FA17                                          STR_102 FA56  
                                        STR_110 F627                                          ?_fputs 001F  
                                        STR_103 F91B                                          STR_111 F5A9  
                                        STR_112 F56A                                          STR_104 F91B  
                                        STR_120 FE3B                                          STR_113 F52B  
                                        STR_121 FDCD                                          STR_105 F8DC  
                                        STR_114 F4EC                                          STR_130 F363  
                                        STR_122 FFF2                                          STR_106 F81F  
                                        _ADRESH 000FC4                                          STR_115 F4AD  
                                        STR_123 FF8E                                          STR_131 FFF6  
                                        STR_107 F7E0                                          STR_132 FFAD  
                                        STR_116 F46E                                          STR_124 FF8D  
                                        STR_108 F762                                          STR_117 F42F  
                                        STR_125 F363                                          STR_109 F6A5  
                                        STR_118 F3F0                                          STR_126 FFF6  
                                        _ADRESL 000FC3                                          STR_127 FFAD  
                                        STR_119 FE05                                          STR_128 FFE7  
                                        STR_129 FF8C                                          _CCPR1H 000FBF  
                                        _CCPR1L 000FBE                                          _ANSELA 000F38  
                                        ?_putch 0001                                          _ANSELB 000F39  
                                        _ANSELC 000F3A                    __size_of_EUSART1_is_rx_ready 0014  
                                        i2l4002 36EC                                          i2l4004 36F4  
                                        i2l4020 37E2                                          i2l4100 206A  
                                        i2l4006 3700                                          i2l4102 2072  
                                        i2l4120 20BE                                          i2l4112 208C  
                                        i2l4104 207A                                          i2l4018 37DE  
                                        i2l4122 20C4                                          i2l4114 20A6  
                                        i2l4106 207A                                          i2l4210 35BA  
                                        i2l4202 359E                                          i2l4140 211A  
                                        i2l4124 20CC                                          i2l4116 20AA  
                                        i2l4204 35A0                                          i2l4150 2140  
                                        i2l4126 20DC                                          i2l4118 20BE  
                                        i2l4206 35A4                                          i2l4160 2172  
                                        i2l4152 2154                                          i2l4136 210E  
                                        i2l4080 2010                                          i2l4208 35A8  
                                        i2l4170 21A4                                          i2l4154 2154  
                                        i2l4146 212C                                          i2l4138 211A  
                                        i2l4090 2048                                          i2l4082 2014  
                                        i2l4156 215A                                          i2l4148 213C  
                                        i2l4092 2048                                          i2l4084 201E  
                                        i2l4076 1FF8                                          i2l4158 2162  
                                        i2l4086 202E                                          i2l4094 2050  
                                        i2l4174 21B0                                          i2l4078 1FFA  
                                        i2l4096 2062                                          i2l4088 2040  
                                        i2l4098 2062                                          i2l4912 001A  
                                        i2l4914 0028                                          i2l4916 0036  
                                        i2l6526 21C4                                          i2l3992 35D4  
                                        _RCREG1 000FAE                                          _RCSTA1 000FAB  
                                        _OSCCON 000FD3                                          _PLLRDY 007E97  
                                 vfpfcnvrt@done 0091                                          _SPBRG1 000FAF  
                                        _TXREG1 000FAD                                          _TXSTA1 000FAC  
                           __size_of_SPI2_Close 0004                               __end_of_SPI2_Open 2FCC  
                     __end_of_SPI2_ExchangeByte 3740                                    _CCPTMRS0bits 000F49  
                                  vfprintf@cfmt 00A4                                       ??___aodiv 0024  
                                     ??___aomod 0024                                          ___wmul 36A6  
                 incrementAddress@sdCardAddress 0014                                   main@numBlocks 01A1  
                       __end_of_TMR0_WriteTimer 37AC                                main@failureIndex 01D4  
                                     ??___lodiv 0024                                       ??___lomod 0024  
                     i2TMR0_WriteTimer@timerVal 0009                        ?_EUSART1_SetErrorHandler 0014  
                              ?_TMR0_Initialize 0001                                          clear_0 31C2  
                                        clear_1 31D4                                          clear_2 31E0  
                                        clear_3 31EC                                          _printf 3630  
                                        pad@buf 0028                ??_EUSART1_SetOverrunErrorHandler 0016  
               ?_EUSART1_SetOverrunErrorHandler 0014                                          ctoa@fp 001F  
                                        dtoa@fp 0060                                          _strlen 3568  
                                        fputc@c 0016                               ?_incrementAddress 0014  
                                        fputs@c 0023                                          fputs@i 0024  
                                  __pdataCOMRAM 004A                                          fputs@s 001F  
                                     ??_isalpha 0016                                       ??_isdigit 0016  
                                     ??_islower 0016                                    __mediumconst F2FA  
                                     ??_isspace 0016                                          tblptrh 000FF7  
                                     ??_isupper 0016                                          tblptrl 000FF6  
                                        tblptru 000FF8                              ??_incrementAddress 0018  
                           main@writeEndAddress 01C0                                __end_of_vfprintf 3260  
                               ??_EUSART1_Write 0014                                          utoa@fp 0060  
      TMR0_SetInterruptHandler@InterruptHandler 0014                                          xtoa@fp 0060  
                                     ??_toupper 001C                   __size_of_INTERRUPT_Initialize 0004  
                             _SYSTEM_Initialize 3680                                      __accesstop 0060  
                       __end_of__initialization 31F2                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 000001                                _SDCARD_ReadBlock 2FCC  
                             ?_EPWM1_Initialize 0001                      __end_of_spi2_configuration F319  
                                __pcstackCOMRAM 0001                                    __pidataBANK0 37F2  
                           ??_SYSTEM_Initialize 0018                                       ?_TMR0_ISR 0001  
                            ??_EPWM1_Initialize 0014                                   __end_of_fputc 30FC  
                                 __end_of_fputs 3398                                   __end_of_putch 37DE  
                       __size_of_TMR0_ReadTimer 001E                                ?_TMR2_Initialize 0001  
                                main@endAddress 01B4                            __end_of_EUSART1_Read 3680  
                                       ??_fputc 001A                       __end_of_SYSTEM_Initialize 36A6  
                                       ??_fputs 0023                              __size_of_myTMR0ISR 01FC  
                                       ??_putch 0015                              SDCARD_WriteBlock@i 001B  
                             ??_SPI2_Initialize 0014                                      __pbssBANK0 00C2  
                                    __pbssBANK1 0100                                 myTMR0ISR@buffer 004A  
                                    _doPlayback 00CD                               _writeFailureTable 01DE  
                    __size_of_SPI2_ExchangeByte 001A                 __end_of_EUSART1_SetErrorHandler 37D4  
              __end_of_TMR0_SetInterruptHandler 37B6                                         ?___wmul 0014  
                                    ??_TMR0_ISR 0010                                ?_TMR0_WriteTimer 0014  
                                       _CCP1CON 000FBD                                         _ECCP1AS 000FB6  
                                       ?_printf 00A6                                    ??_SPI2_Close 0014  
                       __size_of_ADC_Initialize 0016                                         ?_strlen 0014  
        __end_of_EUSART1_SetFramingErrorHandler 37CA         __size_of_EUSART1_SetFramingErrorHandler 000A  
                _EUSART1_SetFramingErrorHandler 37C0                                         _OSCCON2 000FD2  
                            __size_of_vfpfcnvrt 0584                                      _collecting 00CE  
                                       _OSCTUNE 000F9B                                         _PWM1CON 000FB7  
                                       _SPBRGH1 000FB0                                         _SSP2ADD 000F6E  
                                       _SSP2BUF 000F6F                                ___lomod@dividend 0014  
                             SDCARD_ReadBlock@i 001B                     __end_of_EPWM1_LoadDutyValue 3604  
              __end_of_SDCARD_PollWriteComplete 348A                              __end_of_SPI2_Close 37F0  
                          _ADC_InterruptHandler 00C4                                         __Hparam 0000  
                                       __Lparam 0000                           __end_of_hexDumpBuffer 25CC  
                     SDCARD_Initialize@response 00B7                                         ___aodiv 2766  
                                       ___aomod 2A66                                 __size_of___wmul 0026  
                                       ___lodiv 2BCA                                         ___lomod 2D8E  
                             __end_of_myTMR0ISR 21F4                                       ?_vfprintf 009E  
                           _EUSART1_is_rx_ready 376C                                         __pcinit 318A  
                                       __ramtop 1000                                         __ptext0 0052  
                                       __ptext1 21F4                                         __ptext2 3310  
                                       __ptext3 23E0                                         __ptext4 37A2  
                                       __ptext5 3680                                         __ptext6 3792  
                                       __ptext7 3532                                         __ptext8 37AC  
                                       __ptext9 3780                                 __size_of_printf 0028  
                                     _T0CONbits 000FD5                                 __size_of_strlen 0036  
                         _OSCILLATOR_Initialize 370A                                       _T2CONbits 000FBA  
                                  __size_of_abs 0040                                    __size_of_pad 00C2  
                                       _isalpha 3416                                         _isdigit 34FA  
                          main@writeAddress_935 01DA                              _EUSART1_Initialize 33D8  
                                       _islower 348A                        ??_PIN_MANAGER_Initialize 0014  
                                       _isspace 32BE                                         _isupper 34C2  
                                  _sdCardBuffer 07DE                                         atoi@neg 0021  
                                       main@cmd 01CD                      __size_of_SYSTEM_Initialize 0026  
                                       _toupper 3260                            end_of_initialization 31F2  
                          ?_EUSART1_is_rx_ready 0001                             ?_EUSART1_Initialize 0001  
                                    _sampleRate 00D1                                         fputc@fp 0018  
                   _EUSART1_OverrunErrorHandler 00C8                                         fputs@fp 0021  
                 SDCARD_WriteBlock@sdCardBuffer 0019                               __end_of_vfpfcnvrt 182E  
                         TMR0_ReadTimer@readVal 0005                                         postdec1 000FE5  
                                       postdec2 000FDD                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                         __size_of_EUSART1_Read 0028                                      ??_vfprintf 0039  
                                     _SPI2_Open 2F20                                  _TMR0_ReadTimer 36EC  
                          ??_EUSART1_Initialize 0016                           SDCARD_WriteBlock@addr 0015  
                                       strlen@a 0016                                         strlen@s 0014  
                                    _printAscii 21F4                        _TMR0_SetInterruptHandler 37AC  
                      __end_of_SDCARD_ReadBlock 3066                                       _TRISBbits 000F93  
              __size_of_EUSART1_SetErrorHandler 000A                  SDCARD_PollWriteComplete@status 0015  
                           EUSART1_Write@txData 0014                           ??_EUSART1_is_rx_ready 0014  
                                  _EUSART1_Read 3658                       __size_of_incrementAddress 0044  
                                    main@status 01D5                        _SDCARD_PollWriteComplete 3452  
                        __end_of_TMR0_ReadTimer 370A                    __end_of_INTERRUPT_Initialize 37EC  
                             _SDCARD_Initialize 28EE                                      ?_SPI2_Open 0001  
                                   vfpfcnvrt@ap 0083                                     vfpfcnvrt@fp 007F  
                                   vfpfcnvrt@ll 0089                                  __end_of___wmul 36CC  
                                 __pidataCOMRAM 37F0                               __size_of_TMR0_ISR 0036  
                            ?_SDCARD_Initialize 0001                                  _ADC_Initialize 3740  
                        ?_OSCILLATOR_Initialize 0001                                 _SPI2_Initialize 3780  
                                __end_of_printf 3658                                  __end_of_strlen 359E  
                            _spi2_configuration F315                             start_initialization 318A  
                               ___lodiv@divisor 001C                       __size_of_EPWM1_Initialize 0020  
                               ___lodiv@counter 002C                             ??_SDCARD_Initialize 0039  
                      __size_of_TMR0_Initialize 0036                 __size_of_PIN_MANAGER_Initialize 002C  
                                   __end_of_abs 33D8                                     __end_of_pad 2F20  
                                   __end_of_sin F315                                     putch@txData 0015  
                  EPWM1_LoadDutyValue@dutyValue 0001                           __end_of_EUSART1_Write 376C  
                             main@sdCardAddress 01D6                       __end_of_SDCARD_Initialize 2A66  
                                   vfprintf@fmt 00A0                                 ?_TMR0_ReadTimer 0001  
                                      ??___wmul 0018                          __end_of_ADC_Initialize 3756  
                                   __pdataBANK0 00D1                                     ?_printAscii 0001  
                                      ??_printf 0039                           SPI2_ExchangeByte@data 0014  
                                      ??_strlen 0016                                     __pbssBIGRAM 01DE  
                                   __pbssCOMRAM 0039                                   __pcstackBANK0 0060  
                                 __pcstackBANK1 01A0                             hexDumpBuffer@j_1446 00BA  
                              ___aodiv@dividend 0014                        __size_of_TMR2_Initialize 0010  
              ??_EUSART1_SetFramingErrorHandler 0016                 ?_EUSART1_SetFramingErrorHandler 0014  
                             main@printedBlocks 01AB                              _writeFailureStatus 0100  
                                     _atoi$2041 0023                                       _atoi$2042 0027  
                                     _atoi$2043 0025                           _TMR0_InterruptHandler 0043  
                                myTMR0ISR@state 0045                          _PIN_MANAGER_Initialize 3604  
                                     _dtoa$1985 006A                               _SDCARD_WriteBlock 30FC  
                                     __pintcode 0008                                   __pmediumconst F2FA  
                       __end_of_SPI2_Initialize 3792                                        ?___aodiv 0014  
                                      ?___aomod 0014                                ___aodiv@quotient 0026  
                            ?_SDCARD_WriteBlock 0015                                        ?___lodiv 0014  
                                      ?___lomod 0014                                 ?_ADC_Initialize 0001  
                                   ??_SPI2_Open 0014                SPI2_Open@spi2UniqueConfiguration 0015  
                  ??_INTERRUPT_InterruptManager 0010                               __size_of_vfprintf 0064  
                                     _myTMR0ISR 1FF8                                 ___lomod@divisor 001C  
                           ??_SDCARD_WriteBlock 001B                                 ___lomod@counter 0024  
                                      _BAUDCON1 000FB8              _EUSART1_DefaultOverrunErrorHandler 000000  
                                      ?_isalpha 0014                                        ?_isdigit 0014  
                         main@writeStartAddress 01B8                        __size_of_TMR0_WriteTimer 000A  
                          _EUSART1_ErrorHandler 00C6                                        ?_islower 0014  
                                      ?_isspace 0014                                        ?_isupper 0014  
                       _EUSART1_SetErrorHandler 37CA                                  __size_of_fputc 0096  
                                __size_of_fputs 0044                                        ?_toupper 001A  
                                __size_of_putch 000A                            _INTERRUPT_Initialize 37E8  
                                   _buffer1Full 00D0                                     _buffer2Full 00CF  
                             ??_TMR0_Initialize 0016                                  ___wmul@product 0018  
       EUSART1_SetErrorHandler@interruptHandler 0014                                        _LATBbits 000F8A  
                           __size_of_printAscii 01EC                                _incrementAddress 3310  
                     __end_of_SDCARD_WriteBlock 318A             __size_of_INTERRUPT_InterruptManager 0046  
                    ??_TMR0_SetInterruptHandler 0016                                        i2u350_40 212C  
                                      i2u342_40 202E                                        i2u350_41 2128  
                                      i2u342_41 202A                                        i2u351_40 2154  
                                      i2u343_40 2062                                        i2u351_41 2150  
                                      i2u343_41 205E                                        i2u352_40 2172  
                                      i2u344_40 208C                                        i2u360_40 35BA  
                                      i2u352_41 216E                                        i2u344_41 2088  
                                      i2u360_41 35B6                                        i2u353_40 2188  
                                      i2u345_40 20BE                                        i2u353_41 2182  
                                      i2u345_41 20BA                                        _PIR1bits 000F9E  
                                      i2u354_40 218A                                        i2u346_40 20DC  
                                      i2u361_48 35C0                                        i2u346_41 20D8  
                                      i2u361_49 35D2                                        i2u355_40 21A4  
                                      i2u347_40 20F2                                        i2u355_41 21A0  
                                      i2u347_41 20EC                                        i2u348_40 20F4  
                                      i2u349_40 210E                                        i2u349_41 210A  
                                      _PIR3bits 000FA4                                        i2u447_40 0028  
                                      i2u447_41 0024                                 main@readAddress 01D0  
                                      i2u448_40 0036                                        i2u448_41 0032  
                  __size_of_EPWM1_LoadDutyValue 0030                      __size_of_SDCARD_Initialize 0178  
                                      _RCONbits 000FD0                                        _SSP2CON1 000F6C  
                                      _SSP2CON2 000F6B                                        _TMR0_ISR 359E  
                                      _PSTR1CON 000FB9                                        _SSP2STAT 000F6D  
                                     _vfpfcnvrt 12AA                        TMR0_ReadTimer@readValLow 0007  
                                     _xtoa$2003 006B                                       _xtoa$2004 006D  
                                    _ADCON0bits 000FC2                                       main@i_922 01BC  
                                     main@i_939 01C4                               ___wmul@multiplier 0014  
                                     main@i_959 01BE                                      ?_myTMR0ISR 0001  
                              _EPWM1_Initialize 36CC                               i2_TMR0_WriteTimer 37DE  
                             ?_SDCARD_ReadBlock 0015                                    _isspace$2068 001A  
                        __size_of_hexDumpBuffer 01EC                                      vfpfcnvrt@c 009D  
                            ?i2_TMR0_WriteTimer 0009                                     _INTCON2bits 000FF1  
                         ?_INTERRUPT_Initialize 0001                              ??_SDCARD_ReadBlock 001B  
                    ??_SDCARD_PollWriteComplete 0015                               ??_TMR2_Initialize 0014  
                           ??i2_TMR0_WriteTimer 000B                                        __Hrparam 0000  
                                    vfprintf@ap 00A2                                        __Lrparam 0000  
                                    vfprintf@fp 009E                                ?_SPI2_Initialize 0001  
                       ??_OSCILLATOR_Initialize 0014                                __size_of___aodiv 0188  
                            SDCARD_Initialize@i 00B4                                __size_of___aomod 0164  
                              __size_of___lodiv 00F0                                __size_of___lomod 00D0  
                   __size_of_EUSART1_Initialize 003E                                      ?_vfpfcnvrt 007F  
                               ___aodiv@divisor 001C                                 ___aodiv@counter 0024  
                     __end_ofi2_TMR0_WriteTimer 37E8                       ??_EUSART1_SetErrorHandler 0016  
                   _EUSART1_DefaultErrorHandler 000000                     __end_of_EUSART1_is_rx_ready 3780  
                              __size_of_isalpha 003C                                __size_of_isdigit 0038  
                              __size_of_islower 0038                                __size_of_isspace 0052  
                                      __ptext10 3604                                        __ptext11 370A  
                                      __ptext20 37EC                                        __ptext12 37E8  
                                      __ptext21 30FC                                        __ptext13 33D8  
                                      __ptext30 348A                                        __ptext22 2FCC  
                                      __ptext14 37B6                                        __ptext31 34C2  
                                      __ptext23 3452                                        __ptext15 37C0  
                                      __ptext40 3398                                        __ptext32 3416  
                                      __ptext24 28EE                                        __ptext16 37CA  
                                      __ptext41 2A66                                        __ptext33 1DF0  
                                      __ptext25 3630                                        __ptext17 36CC  
                                      __ptext50 36A6                                        __ptext42 2766  
                                      __ptext34 2D8E                                        __ptext26 31FC  
                                      __ptext18 3740                                        __ptext51 3726  
                                      __ptext43 2CBA                                        __ptext35 2BCA  
                                      __ptext27 12AA                                        __ptext19 2F20  
                                      __ptext60 35D4                                        __ptext52 376C  
                                      __ptext44 3066                                        __ptext36 182E  
                                      __ptext28 1B12                                        __ptext61 0000  
                                      __ptext53 3658                                        __ptext45 37D4  
                                      __ptext37 2E5E                                        __ptext29 3260  
                                      __ptext46 3756                                        __ptext38 3568  
                                      __ptext55 359E                                        __ptext47 25CC  
                                      __ptext39 3354                                        __ptext56 37F4  
                                      __ptext48 32BE                                        __ptext57 1FF8  
                                      __ptext49 34FA                                        __ptext58 37DE  
                                      __ptext59 36EC                                __size_of_isupper 0038  
                                  _SSP2CON1bits 000F6C                         TMR0_WriteTimer@timerVal 0014  
                             ??_TMR0_WriteTimer 0016                                __size_of_toupper 005E  
                                 __size_of_atoi 019A                                   __size_of_ctoa 00D4  
                                 __size_of_main 1258                                   __size_of_dtoa 02E4  
                                 __size_of_utoa 0208                                ??_TMR0_ReadTimer 0003  
                                 __size_of_xtoa 02DE                      __size_of_SDCARD_WriteBlock 008E  
          __end_of_TMR0_DefaultInterruptHandler 37F6           __size_of_TMR0_DefaultInterruptHandler 0002  
                  _TMR0_DefaultInterruptHandler 37F4  EUSART1_SetOverrunErrorHandler@interruptHandler 0014  
                                 _hexDumpBuffer 23E0                                   _sdCardBuffer1 05DE  
                                 _sdCardBuffer2 03DE                                        int$flags 004C  
                                      _vfprintf 31FC              __end_of_INTERRUPT_InterruptManager 004E  
                    _INTERRUPT_InterruptManager 0008                                        main@addr 01B0  
                                     printf@fmt 00A6                                    ??_printAscii 0039  
                   _EUSART1_FramingErrorHandler 00CA                                ___aomod@dividend 0014  
                                   ??_myTMR0ISR 000B                                  _vfpfcnvrt$2018 0093  
                                    _INTCONbits 000FF2                                        isalpha@c 0014  
                                      isdigit@c 0014                          ??_INTERRUPT_Initialize 0014  
                      SDCARD_Initialize@verbose 00B6                                        intlevel2 0000  
                                      islower@c 0014                                        isspace@c 0014  
                       ?_PIN_MANAGER_Initialize 0001          __end_of_EUSART1_SetOverrunErrorHandler 37C0  
       __size_of_EUSART1_SetOverrunErrorHandler 000A                  _EUSART1_SetOverrunErrorHandler 37B6  
                                    _RCSTA1bits 000FAB                              __end_of_printAscii 23E0  
                                      isupper@c 0014                                ??_ADC_Initialize 0014  
               fp__TMR0_DefaultInterruptHandler 0000                   ?_TMR0_DefaultInterruptHandler 0001  
                                ?_hexDumpBuffer 00B4                                        printf@ap 00B2  
EUSART1_SetFramingErrorHandler@interruptHandler 0014                                 ___aomod@divisor 001C  
                                   ??_vfpfcnvrt 0085                                 ___aomod@counter 0024  
                        __size_of_EUSART1_Write 0016                              _eusart1RxLastError 0049  
                                    _SPI2_Close 37EC                        __end_of_incrementAddress 3354  
                    __size_ofi2_TMR0_WriteTimer 000A                                 _TMR0_Initialize 3532  
                                      toupper@c 001A                             _EPWM1_LoadDutyValue 35D4  
                                  ___aodiv@sign 0025                  __end_of_PIN_MANAGER_Initialize 3630  
                             main@storedCounter 01A7                       hexDumpBuffer@sdCardBuffer 00B4  
                                  ___aomod@sign 0025                                    fp__myTMR0ISR 0000  
                      __end_of_EPWM1_Initialize 36EC                            ?_EPWM1_LoadDutyValue 0001  
